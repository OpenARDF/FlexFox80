
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006a8  00804000  0000f6f8  0000f7ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f6f8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000425  008046a8  008046a8  0000fe54  2**0
                  ALLOC
  3 .eeprom       00000035  00810000  00810000  0000fe54  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0000fe89  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000fee8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000c10  00000000  00000000  0000ff28  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000eee3  00000000  00000000  00010b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000055b0  00000000  00000000  0001fa1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00009d7a  00000000  00000000  00024fcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002cc0  00000000  00000000  0002ed48  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000062b1  00000000  00000000  00031a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005ded  00000000  00000000  00037cb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b40  00000000  00000000  0003daa6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__dtors_end>
       4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
       8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
       c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      10:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      14:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      18:	0c 94 56 10 	jmp	0x20ac	; 0x20ac <__vector_6>
      1c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      20:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      24:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      28:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      2c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      30:	0c 94 d7 14 	jmp	0x29ae	; 0x29ae <__vector_12>
      34:	0c 94 7e 69 	jmp	0xd2fc	; 0xd2fc <__vector_13>
      38:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      3c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      40:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      44:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      48:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      4c:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__vector_19>
      50:	0c 94 36 0b 	jmp	0x166c	; 0x166c <__vector_20>
      54:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      58:	0c 94 7b 14 	jmp	0x28f6	; 0x28f6 <__vector_22>
      5c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      60:	0c 94 25 33 	jmp	0x664a	; 0x664a <__vector_24>
      64:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      68:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      6c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      70:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      74:	0c 94 21 16 	jmp	0x2c42	; 0x2c42 <__vector_29>
      78:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__vector_30>
      7c:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__vector_31>
      80:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__vector_32>
      84:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      88:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      8c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      90:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      94:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      98:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      9c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      a0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      a4:	0c 94 0b 4d 	jmp	0x9a16	; 0x9a16 <__vector_41>
      a8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      ac:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      b0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      b4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      b8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      bc:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      c0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      c4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      c8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      cc:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      d0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      d4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      d8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      dc:	0c 94 72 08 	jmp	0x10e4	; 0x10e4 <__vector_55>
      e0:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__vector_56>
      e4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      e8:	05 2b       	or	r16, r21
      ea:	19 2b       	or	r17, r25
      ec:	2f 2b       	or	r18, r31
      ee:	45 2b       	or	r20, r21
      f0:	5b 2b       	or	r21, r27
      f2:	a1 2c       	mov	r10, r1
      f4:	96 2c       	mov	r9, r6
      f6:	96 2b       	or	r25, r22
      f8:	a6 2b       	or	r26, r22
      fa:	b8 2b       	or	r27, r24
      fc:	ca 2b       	or	r28, r26
      fe:	dc 2b       	or	r29, r28
     100:	16 2c       	mov	r1, r6
     102:	26 2c       	mov	r2, r6
     104:	38 2c       	mov	r3, r8
     106:	4a 2c       	mov	r4, r10
     108:	5c 2c       	mov	r5, r12
     10a:	32 44       	sbci	r19, 0x42	; 66
     10c:	3f 44       	sbci	r19, 0x4F	; 79
     10e:	0c 44       	sbci	r16, 0x4C	; 76
     110:	3f 44       	sbci	r19, 0x4F	; 79
     112:	3f 44       	sbci	r19, 0x4F	; 79
     114:	3f 44       	sbci	r19, 0x4F	; 79
     116:	1a 44       	sbci	r17, 0x4A	; 74
     118:	3f 44       	sbci	r19, 0x4F	; 79
     11a:	3f 44       	sbci	r19, 0x4F	; 79
     11c:	3f 44       	sbci	r19, 0x4F	; 79
     11e:	94 43       	sbci	r25, 0x34	; 52
     120:	3f 44       	sbci	r19, 0x4F	; 79
     122:	3f 44       	sbci	r19, 0x4F	; 79
     124:	3f 44       	sbci	r19, 0x4F	; 79
     126:	3f 44       	sbci	r19, 0x4F	; 79
     128:	3f 44       	sbci	r19, 0x4F	; 79
     12a:	3f 44       	sbci	r19, 0x4F	; 79
     12c:	3f 44       	sbci	r19, 0x4F	; 79
     12e:	3f 44       	sbci	r19, 0x4F	; 79
     130:	3f 44       	sbci	r19, 0x4F	; 79
     132:	3f 44       	sbci	r19, 0x4F	; 79
     134:	3f 44       	sbci	r19, 0x4F	; 79
     136:	3f 44       	sbci	r19, 0x4F	; 79
     138:	3f 44       	sbci	r19, 0x4F	; 79
     13a:	3f 44       	sbci	r19, 0x4F	; 79
     13c:	3f 44       	sbci	r19, 0x4F	; 79
     13e:	3f 44       	sbci	r19, 0x4F	; 79
     140:	3f 44       	sbci	r19, 0x4F	; 79
     142:	3f 44       	sbci	r19, 0x4F	; 79
     144:	3f 44       	sbci	r19, 0x4F	; 79
     146:	3f 44       	sbci	r19, 0x4F	; 79
     148:	c4 43       	sbci	r28, 0x34	; 52
     14a:	3f 44       	sbci	r19, 0x4F	; 79
     14c:	3f 44       	sbci	r19, 0x4F	; 79
     14e:	3f 44       	sbci	r19, 0x4F	; 79
     150:	3f 44       	sbci	r19, 0x4F	; 79
     152:	3f 44       	sbci	r19, 0x4F	; 79
     154:	3f 44       	sbci	r19, 0x4F	; 79
     156:	3f 44       	sbci	r19, 0x4F	; 79
     158:	3f 44       	sbci	r19, 0x4F	; 79
     15a:	f8 43       	sbci	r31, 0x38	; 56
     15c:	02 44       	sbci	r16, 0x42	; 66
     15e:	28 44       	sbci	r18, 0x48	; 72
     160:	6b 43       	sbci	r22, 0x3B	; 59
     162:	3f 44       	sbci	r19, 0x4F	; 79
     164:	3f 44       	sbci	r19, 0x4F	; 79
     166:	3f 44       	sbci	r19, 0x4F	; 79
     168:	79 43       	sbci	r23, 0x39	; 57
     16a:	3f 44       	sbci	r19, 0x4F	; 79
     16c:	3f 44       	sbci	r19, 0x4F	; 79
     16e:	3f 44       	sbci	r19, 0x4F	; 79
     170:	87 43       	sbci	r24, 0x37	; 55
     172:	c2 4e       	sbci	r28, 0xE2	; 226
     174:	d5 4e       	sbci	r29, 0xE5	; 229
     176:	df 4e       	sbci	r29, 0xEF	; 239
     178:	e9 4e       	sbci	r30, 0xE9	; 233
     17a:	19 4f       	sbci	r17, 0xF9	; 249
     17c:	01 4f       	sbci	r16, 0xF1	; 241
     17e:	31 4f       	sbci	r19, 0xF1	; 241
     180:	0b 50       	subi	r16, 0x0B	; 11
     182:	21 50       	subi	r18, 0x01	; 1
     184:	dc 4f       	sbci	r29, 0xFC	; 252
     186:	ad 4f       	sbci	r26, 0xFD	; 253
     188:	7b 4f       	sbci	r23, 0xFB	; 251
     18a:	49 4f       	sbci	r20, 0xF9	; 249
     18c:	d9 58       	subi	r29, 0x89	; 137
     18e:	70 58       	subi	r23, 0x80	; 128
     190:	bd 58       	subi	r27, 0x8D	; 141
     192:	e7 58       	subi	r30, 0x87	; 135
     194:	c4 58       	subi	r28, 0x84	; 132
     196:	e7 58       	subi	r30, 0x87	; 135
     198:	8c 58       	subi	r24, 0x8C	; 140
     19a:	69 58       	subi	r22, 0x89	; 137
     19c:	7e 58       	subi	r23, 0x8E	; 142
     19e:	85 58       	subi	r24, 0x85	; 133
     1a0:	e7 58       	subi	r30, 0x87	; 135
     1a2:	a8 58       	subi	r26, 0x88	; 136
     1a4:	5b 58       	subi	r21, 0x8B	; 139
     1a6:	af 58       	subi	r26, 0x8F	; 143
     1a8:	54 58       	subi	r21, 0x84	; 132
     1aa:	77 58       	subi	r23, 0x87	; 135
     1ac:	0f 58       	subi	r16, 0x8F	; 143
     1ae:	16 58       	subi	r17, 0x86	; 134
     1b0:	1d 58       	subi	r17, 0x8D	; 141
     1b2:	24 58       	subi	r18, 0x84	; 132
     1b4:	2b 58       	subi	r18, 0x8B	; 139
     1b6:	32 58       	subi	r19, 0x82	; 130
     1b8:	38 58       	subi	r19, 0x88	; 136
     1ba:	3f 58       	subi	r19, 0x8F	; 143
     1bc:	46 58       	subi	r20, 0x86	; 134
     1be:	4d 58       	subi	r20, 0x8D	; 141
     1c0:	93 58       	subi	r25, 0x83	; 131
     1c2:	9a 58       	subi	r25, 0x8A	; 138
     1c4:	e0 58       	subi	r30, 0x80	; 128
     1c6:	a1 58       	subi	r26, 0x81	; 129
     1c8:	e7 58       	subi	r30, 0x87	; 135
     1ca:	62 58       	subi	r22, 0x82	; 130
     1cc:	cb 58       	subi	r28, 0x8B	; 139
     1ce:	5d 57       	subi	r21, 0x7D	; 125
     1d0:	64 57       	subi	r22, 0x74	; 116
     1d2:	6b 57       	subi	r22, 0x7B	; 123
     1d4:	72 57       	subi	r23, 0x72	; 114
     1d6:	79 57       	subi	r23, 0x79	; 121
     1d8:	7f 57       	subi	r23, 0x7F	; 127
     1da:	86 57       	subi	r24, 0x76	; 118
     1dc:	8d 57       	subi	r24, 0x7D	; 125
     1de:	93 57       	subi	r25, 0x73	; 115
     1e0:	99 57       	subi	r25, 0x79	; 121
     1e2:	a0 57       	subi	r26, 0x70	; 112
     1e4:	a7 57       	subi	r26, 0x77	; 119
     1e6:	ae 57       	subi	r26, 0x7E	; 126
     1e8:	b5 57       	subi	r27, 0x75	; 117
     1ea:	bc 57       	subi	r27, 0x7C	; 124
     1ec:	c3 57       	subi	r28, 0x73	; 115
     1ee:	ca 57       	subi	r28, 0x7A	; 122
     1f0:	d1 57       	subi	r29, 0x71	; 113
     1f2:	d8 57       	subi	r29, 0x78	; 120
     1f4:	de 57       	subi	r29, 0x7E	; 126
     1f6:	e5 57       	subi	r30, 0x75	; 117
     1f8:	ec 57       	subi	r30, 0x7C	; 124
     1fa:	f3 57       	subi	r31, 0x73	; 115
     1fc:	fa 57       	subi	r31, 0x7A	; 122
     1fe:	01 58       	subi	r16, 0x81	; 129
     200:	08 58       	subi	r16, 0x88	; 136
     202:	e7 58       	subi	r30, 0x87	; 135
     204:	e7 58       	subi	r30, 0x87	; 135
     206:	e7 58       	subi	r30, 0x87	; 135
     208:	e7 58       	subi	r30, 0x87	; 135
     20a:	b6 58       	subi	r27, 0x86	; 134
     20c:	e7 58       	subi	r30, 0x87	; 135
     20e:	e7 58       	subi	r30, 0x87	; 135
     210:	e7 58       	subi	r30, 0x87	; 135
     212:	e7 58       	subi	r30, 0x87	; 135
     214:	e7 58       	subi	r30, 0x87	; 135
     216:	e7 58       	subi	r30, 0x87	; 135
     218:	e7 58       	subi	r30, 0x87	; 135
     21a:	e7 58       	subi	r30, 0x87	; 135
     21c:	e7 58       	subi	r30, 0x87	; 135
     21e:	e7 58       	subi	r30, 0x87	; 135
     220:	e7 58       	subi	r30, 0x87	; 135
     222:	e7 58       	subi	r30, 0x87	; 135
     224:	e7 58       	subi	r30, 0x87	; 135
     226:	e7 58       	subi	r30, 0x87	; 135
     228:	e7 58       	subi	r30, 0x87	; 135
     22a:	e7 58       	subi	r30, 0x87	; 135
     22c:	e7 58       	subi	r30, 0x87	; 135
     22e:	e7 58       	subi	r30, 0x87	; 135
     230:	e7 58       	subi	r30, 0x87	; 135
     232:	e7 58       	subi	r30, 0x87	; 135
     234:	e7 58       	subi	r30, 0x87	; 135
     236:	e7 58       	subi	r30, 0x87	; 135
     238:	e7 58       	subi	r30, 0x87	; 135
     23a:	e7 58       	subi	r30, 0x87	; 135
     23c:	e7 58       	subi	r30, 0x87	; 135
     23e:	e7 58       	subi	r30, 0x87	; 135
     240:	e7 58       	subi	r30, 0x87	; 135
     242:	e7 58       	subi	r30, 0x87	; 135
     244:	d2 58       	subi	r29, 0x82	; 130
     246:	10 71       	andi	r17, 0x10	; 16
     248:	1b 71       	andi	r17, 0x1B	; 27
     24a:	26 71       	andi	r18, 0x16	; 22
     24c:	31 71       	andi	r19, 0x11	; 17
     24e:	3c 71       	andi	r19, 0x1C	; 28
     250:	47 71       	andi	r20, 0x17	; 23
     252:	52 71       	andi	r21, 0x12	; 18
     254:	5d 71       	andi	r21, 0x1D	; 29
     256:	68 71       	andi	r22, 0x18	; 24
     258:	73 71       	andi	r23, 0x13	; 19
     25a:	7e 71       	andi	r23, 0x1E	; 30
     25c:	89 71       	andi	r24, 0x19	; 25
     25e:	94 71       	andi	r25, 0x14	; 20
     260:	9f 71       	andi	r25, 0x1F	; 31
     262:	aa 71       	andi	r26, 0x1A	; 26
     264:	b5 71       	andi	r27, 0x15	; 21
     266:	c0 71       	andi	r28, 0x10	; 16
     268:	cb 71       	andi	r28, 0x1B	; 27

0000026a <__trampolines_end>:
     26a:	4e 41       	sbci	r20, 0x1E	; 30
     26c:	4e 49       	Address 0x0000026c is out of bounds.
.word	0xffff	; ????

0000026d <pstr_inity>:
     26d:	49 4e 49 54 59                                      INITY

00000272 <pstr_inf>:
     272:	49 4e 46                                            INF

00000275 <pwr_m10>:
     275:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     285:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000028d <pwr_p10>:
     28d:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     29d:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

000002a5 <strfmonths>:
     2a5:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     2b5:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     2c5:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     2d5:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     2e5:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     2f5:	65 6d 62 65 72 20 00                                ember .

000002fc <strfwkdays>:
     2fc:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     30c:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     31c:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     32c:	53 61 74 75 72 64 61 79 20 00                       Saturday .

00000336 <ascdays>:
     336:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     346:	72 69 53 61 74 00                                   riSat.

0000034c <ascmonths>:
     34c:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     35c:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     36c:	76 44 65 63 00 00                                   vDec..

00000372 <__ctors_start>:
     372:	db 31       	cpi	r29, 0x1B	; 27
     374:	a1 33       	cpi	r26, 0x31	; 49

00000376 <__ctors_end>:
     376:	e8 31       	cpi	r30, 0x18	; 24
     378:	ae 33       	cpi	r26, 0x3E	; 62

0000037a <__dtors_end>:
     37a:	11 24       	eor	r1, r1
     37c:	1f be       	out	0x3f, r1	; 63
     37e:	cf ef       	ldi	r28, 0xFF	; 255
     380:	cd bf       	out	0x3d, r28	; 61
     382:	df e7       	ldi	r29, 0x7F	; 127
     384:	de bf       	out	0x3e, r29	; 62

00000386 <__do_copy_data>:
     386:	16 e4       	ldi	r17, 0x46	; 70
     388:	a0 e0       	ldi	r26, 0x00	; 0
     38a:	b0 e4       	ldi	r27, 0x40	; 64
     38c:	e8 ef       	ldi	r30, 0xF8	; 248
     38e:	f6 ef       	ldi	r31, 0xF6	; 246
     390:	00 e0       	ldi	r16, 0x00	; 0
     392:	0b bf       	out	0x3b, r16	; 59
     394:	02 c0       	rjmp	.+4      	; 0x39a <__do_copy_data+0x14>
     396:	07 90       	elpm	r0, Z+
     398:	0d 92       	st	X+, r0
     39a:	a8 3a       	cpi	r26, 0xA8	; 168
     39c:	b1 07       	cpc	r27, r17
     39e:	d9 f7       	brne	.-10     	; 0x396 <__do_copy_data+0x10>

000003a0 <__do_clear_bss>:
     3a0:	2a e4       	ldi	r18, 0x4A	; 74
     3a2:	a8 ea       	ldi	r26, 0xA8	; 168
     3a4:	b6 e4       	ldi	r27, 0x46	; 70
     3a6:	01 c0       	rjmp	.+2      	; 0x3aa <.do_clear_bss_start>

000003a8 <.do_clear_bss_loop>:
     3a8:	1d 92       	st	X+, r1

000003aa <.do_clear_bss_start>:
     3aa:	ad 3c       	cpi	r26, 0xCD	; 205
     3ac:	b2 07       	cpc	r27, r18
     3ae:	e1 f7       	brne	.-8      	; 0x3a8 <.do_clear_bss_loop>

000003b0 <__do_global_ctors>:
     3b0:	11 e0       	ldi	r17, 0x01	; 1
     3b2:	cb eb       	ldi	r28, 0xBB	; 187
     3b4:	d1 e0       	ldi	r29, 0x01	; 1
     3b6:	04 c0       	rjmp	.+8      	; 0x3c0 <__do_global_ctors+0x10>
     3b8:	21 97       	sbiw	r28, 0x01	; 1
     3ba:	fe 01       	movw	r30, r28
     3bc:	0e 94 ef 74 	call	0xe9de	; 0xe9de <__tablejump2__>
     3c0:	c9 3b       	cpi	r28, 0xB9	; 185
     3c2:	d1 07       	cpc	r29, r17
     3c4:	c9 f7       	brne	.-14     	; 0x3b8 <__do_global_ctors+0x8>
     3c6:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <main>
     3ca:	0c 94 6f 7b 	jmp	0xf6de	; 0xf6de <__do_global_dtors>

000003ce <__bad_interrupt>:
     3ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d2 <is_leap_year>:
     3d2:	9c 01       	movw	r18, r24
     3d4:	23 70       	andi	r18, 0x03	; 3
     3d6:	33 27       	eor	r19, r19
     3d8:	23 2b       	or	r18, r19
     3da:	59 f4       	brne	.+22     	; 0x3f2 <is_leap_year+0x20>
     3dc:	64 e6       	ldi	r22, 0x64	; 100
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     3e4:	89 2b       	or	r24, r25
     3e6:	39 f4       	brne	.+14     	; 0x3f6 <is_leap_year+0x24>
     3e8:	63 70       	andi	r22, 0x03	; 3
     3ea:	77 27       	eor	r23, r23
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	67 2b       	or	r22, r23
     3f0:	19 f0       	breq	.+6      	; 0x3f8 <is_leap_year+0x26>
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	08 95       	ret
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	08 95       	ret

000003fa <localtime>:
     3fa:	69 eb       	ldi	r22, 0xB9	; 185
     3fc:	7a e4       	ldi	r23, 0x4A	; 74
     3fe:	0e 94 04 02 	call	0x408	; 0x408 <localtime_r>
     402:	89 eb       	ldi	r24, 0xB9	; 185
     404:	9a e4       	ldi	r25, 0x4A	; 74
     406:	08 95       	ret

00000408 <localtime_r>:
     408:	cf 92       	push	r12
     40a:	df 92       	push	r13
     40c:	ef 92       	push	r14
     40e:	ff 92       	push	r15
     410:	0f 93       	push	r16
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	00 d0       	rcall	.+0      	; 0x41a <localtime_r+0x12>
     41a:	00 d0       	rcall	.+0      	; 0x41c <localtime_r+0x14>
     41c:	cd b7       	in	r28, 0x3d	; 61
     41e:	de b7       	in	r29, 0x3e	; 62
     420:	6c 01       	movw	r12, r24
     422:	7b 01       	movw	r14, r22
     424:	e0 91 c9 4a 	lds	r30, 0x4AC9	; 0x804ac9 <__dst_ptr>
     428:	f0 91 ca 4a 	lds	r31, 0x4ACA	; 0x804aca <__dst_ptr+0x1>
     42c:	30 97       	sbiw	r30, 0x00	; 0
     42e:	29 f0       	breq	.+10     	; 0x43a <localtime_r+0x32>
     430:	65 ec       	ldi	r22, 0xC5	; 197
     432:	7a e4       	ldi	r23, 0x4A	; 74
     434:	09 95       	icall
     436:	8c 01       	movw	r16, r24
     438:	02 c0       	rjmp	.+4      	; 0x43e <localtime_r+0x36>
     43a:	0f ef       	ldi	r16, 0xFF	; 255
     43c:	1f ef       	ldi	r17, 0xFF	; 255
     43e:	f6 01       	movw	r30, r12
     440:	40 81       	ld	r20, Z
     442:	51 81       	ldd	r21, Z+1	; 0x01
     444:	62 81       	ldd	r22, Z+2	; 0x02
     446:	73 81       	ldd	r23, Z+3	; 0x03
     448:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <__utc_offset>
     44c:	90 91 c6 4a 	lds	r25, 0x4AC6	; 0x804ac6 <__utc_offset+0x1>
     450:	a0 91 c7 4a 	lds	r26, 0x4AC7	; 0x804ac7 <__utc_offset+0x2>
     454:	b0 91 c8 4a 	lds	r27, 0x4AC8	; 0x804ac8 <__utc_offset+0x3>
     458:	84 0f       	add	r24, r20
     45a:	95 1f       	adc	r25, r21
     45c:	a6 1f       	adc	r26, r22
     45e:	b7 1f       	adc	r27, r23
     460:	10 16       	cp	r1, r16
     462:	11 06       	cpc	r1, r17
     464:	4c f4       	brge	.+18     	; 0x478 <localtime_r+0x70>
     466:	a8 01       	movw	r20, r16
     468:	01 2e       	mov	r0, r17
     46a:	00 0c       	add	r0, r0
     46c:	66 0b       	sbc	r22, r22
     46e:	77 0b       	sbc	r23, r23
     470:	84 0f       	add	r24, r20
     472:	95 1f       	adc	r25, r21
     474:	a6 1f       	adc	r26, r22
     476:	b7 1f       	adc	r27, r23
     478:	89 83       	std	Y+1, r24	; 0x01
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	ab 83       	std	Y+3, r26	; 0x03
     47e:	bc 83       	std	Y+4, r27	; 0x04
     480:	b7 01       	movw	r22, r14
     482:	ce 01       	movw	r24, r28
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	0e 94 8c 06 	call	0xd18	; 0xd18 <gmtime_r>
     48a:	f7 01       	movw	r30, r14
     48c:	02 87       	std	Z+10, r16	; 0x0a
     48e:	13 87       	std	Z+11, r17	; 0x0b
     490:	24 96       	adiw	r28, 0x04	; 4
     492:	cd bf       	out	0x3d, r28	; 61
     494:	de bf       	out	0x3e, r29	; 62
     496:	df 91       	pop	r29
     498:	cf 91       	pop	r28
     49a:	1f 91       	pop	r17
     49c:	0f 91       	pop	r16
     49e:	ff 90       	pop	r15
     4a0:	ef 90       	pop	r14
     4a2:	df 90       	pop	r13
     4a4:	cf 90       	pop	r12
     4a6:	08 95       	ret

000004a8 <month_length>:
     4a8:	62 30       	cpi	r22, 0x02	; 2
     4aa:	21 f4       	brne	.+8      	; 0x4b4 <month_length+0xc>
     4ac:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <is_leap_year>
     4b0:	84 5e       	subi	r24, 0xE4	; 228
     4b2:	08 95       	ret
     4b4:	68 30       	cpi	r22, 0x08	; 8
     4b6:	08 f0       	brcs	.+2      	; 0x4ba <month_length+0x12>
     4b8:	6f 5f       	subi	r22, 0xFF	; 255
     4ba:	61 70       	andi	r22, 0x01	; 1
     4bc:	8e e1       	ldi	r24, 0x1E	; 30
     4be:	86 0f       	add	r24, r22
     4c0:	08 95       	ret

000004c2 <set_system_time>:
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	60 93 b5 4a 	sts	0x4AB5, r22	; 0x804ab5 <__system_time>
     4ca:	70 93 b6 4a 	sts	0x4AB6, r23	; 0x804ab6 <__system_time+0x1>
     4ce:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <__system_time+0x2>
     4d2:	90 93 b8 4a 	sts	0x4AB8, r25	; 0x804ab8 <__system_time+0x3>
     4d6:	0f be       	out	0x3f, r0	; 63
     4d8:	08 95       	ret

000004da <pgm_copystring>:
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	0f 93       	push	r16
     4e2:	6b 01       	movw	r12, r22
     4e4:	e8 2e       	mov	r14, r24
     4e6:	7c 2d       	mov	r23, r12
     4e8:	6d 2d       	mov	r22, r13
     4ea:	5e 2d       	mov	r21, r14
     4ec:	ae 2d       	mov	r26, r14
     4ee:	c6 01       	movw	r24, r12
     4f0:	01 96       	adiw	r24, 0x01	; 1
     4f2:	a1 1d       	adc	r26, r1
     4f4:	44 23       	and	r20, r20
     4f6:	51 f0       	breq	.+20     	; 0x50c <pgm_copystring+0x32>
     4f8:	6c 01       	movw	r12, r24
     4fa:	ea 2e       	mov	r14, r26
     4fc:	e7 2f       	mov	r30, r23
     4fe:	f6 2f       	mov	r31, r22
     500:	0e 94 5c 7b 	call	0xf6b8	; 0xf6b8 <__xload_1>
     504:	60 32       	cpi	r22, 0x20	; 32
     506:	79 f7       	brne	.-34     	; 0x4e6 <pgm_copystring+0xc>
     508:	41 50       	subi	r20, 0x01	; 1
     50a:	ed cf       	rjmp	.-38     	; 0x4e6 <pgm_copystring+0xc>
     50c:	f6 01       	movw	r30, r12
     50e:	0e 94 5c 7b 	call	0xf6b8	; 0xf6b8 <__xload_1>
     512:	6c 01       	movw	r12, r24
     514:	ea 2e       	mov	r14, r26
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	60 32       	cpi	r22, 0x20	; 32
     51a:	39 f4       	brne	.+14     	; 0x52a <pgm_copystring+0x50>
     51c:	f9 01       	movw	r30, r18
     51e:	10 82       	st	Z, r1
     520:	0f 91       	pop	r16
     522:	ef 90       	pop	r14
     524:	df 90       	pop	r13
     526:	cf 90       	pop	r12
     528:	08 95       	ret
     52a:	80 17       	cp	r24, r16
     52c:	b9 f3       	breq	.-18     	; 0x51c <pgm_copystring+0x42>
     52e:	2f 5f       	subi	r18, 0xFF	; 255
     530:	3f 4f       	sbci	r19, 0xFF	; 255
     532:	f9 01       	movw	r30, r18
     534:	31 97       	sbiw	r30, 0x01	; 1
     536:	60 83       	st	Z, r22
     538:	8f 5f       	subi	r24, 0xFF	; 255
     53a:	f6 01       	movw	r30, r12
     53c:	5e 2d       	mov	r21, r14
     53e:	0e 94 5c 7b 	call	0xf6b8	; 0xf6b8 <__xload_1>
     542:	9f ef       	ldi	r25, 0xFF	; 255
     544:	c9 1a       	sub	r12, r25
     546:	d9 0a       	sbc	r13, r25
     548:	e9 0a       	sbc	r14, r25
     54a:	e6 cf       	rjmp	.-52     	; 0x518 <pgm_copystring+0x3e>

0000054c <strftime>:
     54c:	2f 92       	push	r2
     54e:	3f 92       	push	r3
     550:	4f 92       	push	r4
     552:	5f 92       	push	r5
     554:	6f 92       	push	r6
     556:	7f 92       	push	r7
     558:	8f 92       	push	r8
     55a:	9f 92       	push	r9
     55c:	af 92       	push	r10
     55e:	bf 92       	push	r11
     560:	cf 92       	push	r12
     562:	df 92       	push	r13
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	cd b7       	in	r28, 0x3d	; 61
     572:	de b7       	in	r29, 0x3e	; 62
     574:	a2 97       	sbiw	r28, 0x22	; 34
     576:	cd bf       	out	0x3d, r28	; 61
     578:	de bf       	out	0x3e, r29	; 62
     57a:	2c 01       	movw	r4, r24
     57c:	69 a3       	std	Y+33, r22	; 0x21
     57e:	7a a3       	std	Y+34, r23	; 0x22
     580:	4a 01       	movw	r8, r20
     582:	79 01       	movw	r14, r18
     584:	61 2c       	mov	r6, r1
     586:	71 2c       	mov	r7, r1
     588:	9e 01       	movw	r18, r28
     58a:	2f 5f       	subi	r18, 0xFF	; 255
     58c:	3f 4f       	sbci	r19, 0xFF	; 255
     58e:	69 01       	movw	r12, r18
     590:	84 e6       	ldi	r24, 0x64	; 100
     592:	28 2e       	mov	r2, r24
     594:	31 2c       	mov	r3, r1
     596:	97 e4       	ldi	r25, 0x47	; 71
     598:	a9 2e       	mov	r10, r25
     59a:	96 e4       	ldi	r25, 0x46	; 70
     59c:	b9 2e       	mov	r11, r25
     59e:	29 a1       	ldd	r18, Y+33	; 0x21
     5a0:	3a a1       	ldd	r19, Y+34	; 0x22
     5a2:	62 16       	cp	r6, r18
     5a4:	73 06       	cpc	r7, r19
     5a6:	08 f0       	brcs	.+2      	; 0x5aa <strftime+0x5e>
     5a8:	cd c2       	rjmp	.+1434   	; 0xb44 <strftime+0x5f8>
     5aa:	d4 01       	movw	r26, r8
     5ac:	8c 91       	ld	r24, X
     5ae:	85 32       	cpi	r24, 0x25	; 37
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <strftime+0x68>
     5b2:	bc c2       	rjmp	.+1400   	; 0xb2c <strftime+0x5e0>
     5b4:	11 96       	adiw	r26, 0x01	; 1
     5b6:	1c 91       	ld	r17, X
     5b8:	15 34       	cpi	r17, 0x45	; 69
     5ba:	31 f0       	breq	.+12     	; 0x5c8 <strftime+0x7c>
     5bc:	1f 34       	cpi	r17, 0x4F	; 79
     5be:	21 f0       	breq	.+8      	; 0x5c8 <strftime+0x7c>
     5c0:	b2 e0       	ldi	r27, 0x02	; 2
     5c2:	8b 0e       	add	r8, r27
     5c4:	91 1c       	adc	r9, r1
     5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <strftime+0x88>
     5c8:	f4 01       	movw	r30, r8
     5ca:	12 81       	ldd	r17, Z+2	; 0x02
     5cc:	94 01       	movw	r18, r8
     5ce:	2d 5f       	subi	r18, 0xFD	; 253
     5d0:	3f 4f       	sbci	r19, 0xFF	; 255
     5d2:	49 01       	movw	r8, r18
     5d4:	19 35       	cpi	r17, 0x59	; 89
     5d6:	09 f4       	brne	.+2      	; 0x5da <strftime+0x8e>
     5d8:	32 c2       	rjmp	.+1124   	; 0xa3e <strftime+0x4f2>
     5da:	0c f0       	brlt	.+2      	; 0x5de <strftime+0x92>
     5dc:	60 c0       	rjmp	.+192    	; 0x69e <strftime+0x152>
     5de:	19 34       	cpi	r17, 0x49	; 73
     5e0:	09 f4       	brne	.+2      	; 0x5e4 <strftime+0x98>
     5e2:	3f c1       	rjmp	.+638    	; 0x862 <strftime+0x316>
     5e4:	44 f5       	brge	.+80     	; 0x636 <strftime+0xea>
     5e6:	13 34       	cpi	r17, 0x43	; 67
     5e8:	09 f4       	brne	.+2      	; 0x5ec <strftime+0xa0>
     5ea:	e7 c0       	rjmp	.+462    	; 0x7ba <strftime+0x26e>
     5ec:	54 f4       	brge	.+20     	; 0x602 <strftime+0xb6>
     5ee:	11 34       	cpi	r17, 0x41	; 65
     5f0:	09 f4       	brne	.+2      	; 0x5f4 <strftime+0xa8>
     5f2:	be c0       	rjmp	.+380    	; 0x770 <strftime+0x224>
     5f4:	0c f0       	brlt	.+2      	; 0x5f8 <strftime+0xac>
     5f6:	ca c0       	rjmp	.+404    	; 0x78c <strftime+0x240>
     5f8:	15 32       	cpi	r17, 0x25	; 37
     5fa:	09 f0       	breq	.+2      	; 0x5fe <strftime+0xb2>
     5fc:	74 c2       	rjmp	.+1256   	; 0xae6 <strftime+0x59a>
     5fe:	19 83       	std	Y+1, r17	; 0x01
     600:	75 c2       	rjmp	.+1258   	; 0xaec <strftime+0x5a0>
     602:	16 34       	cpi	r17, 0x46	; 70
     604:	09 f4       	brne	.+2      	; 0x608 <strftime+0xbc>
     606:	ea c0       	rjmp	.+468    	; 0x7dc <strftime+0x290>
     608:	64 f4       	brge	.+24     	; 0x622 <strftime+0xd6>
     60a:	14 34       	cpi	r17, 0x44	; 68
     60c:	09 f0       	breq	.+2      	; 0x610 <strftime+0xc4>
     60e:	6b c2       	rjmp	.+1238   	; 0xae6 <strftime+0x59a>
     610:	f7 01       	movw	r30, r14
     612:	86 81       	ldd	r24, Z+6	; 0x06
     614:	97 81       	ldd	r25, Z+7	; 0x07
     616:	b1 01       	movw	r22, r2
     618:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     61c:	9f 93       	push	r25
     61e:	8f 93       	push	r24
     620:	e7 c1       	rjmp	.+974    	; 0x9f0 <strftime+0x4a4>
     622:	17 34       	cpi	r17, 0x47	; 71
     624:	09 f4       	brne	.+2      	; 0x628 <strftime+0xdc>
     626:	f8 c0       	rjmp	.+496    	; 0x818 <strftime+0x2cc>
     628:	18 34       	cpi	r17, 0x48	; 72
     62a:	09 f0       	breq	.+2      	; 0x62e <strftime+0xe2>
     62c:	5c c2       	rjmp	.+1208   	; 0xae6 <strftime+0x59a>
     62e:	d7 01       	movw	r26, r14
     630:	12 96       	adiw	r26, 0x02	; 2
     632:	8c 91       	ld	r24, X
     634:	30 c1       	rjmp	.+608    	; 0x896 <strftime+0x34a>
     636:	14 35       	cpi	r17, 0x54	; 84
     638:	09 f4       	brne	.+2      	; 0x63c <strftime+0xf0>
     63a:	89 c1       	rjmp	.+786    	; 0x94e <strftime+0x402>
     63c:	64 f4       	brge	.+24     	; 0x656 <strftime+0x10a>
     63e:	12 35       	cpi	r17, 0x52	; 82
     640:	09 f4       	brne	.+2      	; 0x644 <strftime+0xf8>
     642:	6e c1       	rjmp	.+732    	; 0x920 <strftime+0x3d4>
     644:	0c f0       	brlt	.+2      	; 0x648 <strftime+0xfc>
     646:	25 c1       	rjmp	.+586    	; 0x892 <strftime+0x346>
     648:	1d 34       	cpi	r17, 0x4D	; 77
     64a:	09 f0       	breq	.+2      	; 0x64e <strftime+0x102>
     64c:	4c c2       	rjmp	.+1176   	; 0xae6 <strftime+0x59a>
     64e:	d7 01       	movw	r26, r14
     650:	11 96       	adiw	r26, 0x01	; 1
     652:	8c 91       	ld	r24, X
     654:	20 c1       	rjmp	.+576    	; 0x896 <strftime+0x34a>
     656:	16 35       	cpi	r17, 0x56	; 86
     658:	09 f4       	brne	.+2      	; 0x65c <strftime+0x110>
     65a:	a5 c1       	rjmp	.+842    	; 0x9a6 <strftime+0x45a>
     65c:	0c f4       	brge	.+2      	; 0x660 <strftime+0x114>
     65e:	a1 c1       	rjmp	.+834    	; 0x9a2 <strftime+0x456>
     660:	17 35       	cpi	r17, 0x57	; 87
     662:	09 f4       	brne	.+2      	; 0x666 <strftime+0x11a>
     664:	b4 c1       	rjmp	.+872    	; 0x9ce <strftime+0x482>
     666:	18 35       	cpi	r17, 0x58	; 88
     668:	09 f0       	breq	.+2      	; 0x66c <strftime+0x120>
     66a:	3d c2       	rjmp	.+1146   	; 0xae6 <strftime+0x59a>
     66c:	f7 01       	movw	r30, r14
     66e:	80 81       	ld	r24, Z
     670:	28 2f       	mov	r18, r24
     672:	08 2e       	mov	r0, r24
     674:	00 0c       	add	r0, r0
     676:	33 0b       	sbc	r19, r19
     678:	3f 93       	push	r19
     67a:	8f 93       	push	r24
     67c:	81 81       	ldd	r24, Z+1	; 0x01
     67e:	28 2f       	mov	r18, r24
     680:	08 2e       	mov	r0, r24
     682:	00 0c       	add	r0, r0
     684:	33 0b       	sbc	r19, r19
     686:	3f 93       	push	r19
     688:	8f 93       	push	r24
     68a:	82 81       	ldd	r24, Z+2	; 0x02
     68c:	28 2f       	mov	r18, r24
     68e:	08 2e       	mov	r0, r24
     690:	00 0c       	add	r0, r0
     692:	33 0b       	sbc	r19, r19
     694:	3f 93       	push	r19
     696:	8f 93       	push	r24
     698:	8f e8       	ldi	r24, 0x8F	; 143
     69a:	96 e4       	ldi	r25, 0x46	; 70
     69c:	c0 c1       	rjmp	.+896    	; 0xa1e <strftime+0x4d2>
     69e:	1d 36       	cpi	r17, 0x6D	; 109
     6a0:	09 f4       	brne	.+2      	; 0x6a4 <strftime+0x158>
     6a2:	f0 c0       	rjmp	.+480    	; 0x884 <strftime+0x338>
     6a4:	ac f5       	brge	.+106    	; 0x710 <strftime+0x1c4>
     6a6:	14 36       	cpi	r17, 0x64	; 100
     6a8:	09 f4       	brne	.+2      	; 0x6ac <strftime+0x160>
     6aa:	94 c0       	rjmp	.+296    	; 0x7d4 <strftime+0x288>
     6ac:	74 f4       	brge	.+28     	; 0x6ca <strftime+0x17e>
     6ae:	12 36       	cpi	r17, 0x62	; 98
     6b0:	09 f4       	brne	.+2      	; 0x6b4 <strftime+0x168>
     6b2:	66 c0       	rjmp	.+204    	; 0x780 <strftime+0x234>
     6b4:	0c f0       	brlt	.+2      	; 0x6b8 <strftime+0x16c>
     6b6:	75 c0       	rjmp	.+234    	; 0x7a2 <strftime+0x256>
     6b8:	11 36       	cpi	r17, 0x61	; 97
     6ba:	09 f0       	breq	.+2      	; 0x6be <strftime+0x172>
     6bc:	14 c2       	rjmp	.+1064   	; 0xae6 <strftime+0x59a>
     6be:	03 e0       	ldi	r16, 0x03	; 3
     6c0:	96 01       	movw	r18, r12
     6c2:	d7 01       	movw	r26, r14
     6c4:	14 96       	adiw	r26, 0x04	; 4
     6c6:	4c 91       	ld	r20, X
     6c8:	57 c0       	rjmp	.+174    	; 0x778 <strftime+0x22c>
     6ca:	17 36       	cpi	r17, 0x67	; 103
     6cc:	09 f4       	brne	.+2      	; 0x6d0 <strftime+0x184>
     6ce:	a4 c0       	rjmp	.+328    	; 0x818 <strftime+0x2cc>
     6d0:	74 f4       	brge	.+28     	; 0x6ee <strftime+0x1a2>
     6d2:	15 36       	cpi	r17, 0x65	; 101
     6d4:	09 f0       	breq	.+2      	; 0x6d8 <strftime+0x18c>
     6d6:	07 c2       	rjmp	.+1038   	; 0xae6 <strftime+0x59a>
     6d8:	f7 01       	movw	r30, r14
     6da:	83 81       	ldd	r24, Z+3	; 0x03
     6dc:	28 2f       	mov	r18, r24
     6de:	08 2e       	mov	r0, r24
     6e0:	00 0c       	add	r0, r0
     6e2:	33 0b       	sbc	r19, r19
     6e4:	3f 93       	push	r19
     6e6:	8f 93       	push	r24
     6e8:	8c e4       	ldi	r24, 0x4C	; 76
     6ea:	96 e4       	ldi	r25, 0x46	; 70
     6ec:	c8 c0       	rjmp	.+400    	; 0x87e <strftime+0x332>
     6ee:	18 36       	cpi	r17, 0x68	; 104
     6f0:	09 f4       	brne	.+2      	; 0x6f4 <strftime+0x1a8>
     6f2:	46 c0       	rjmp	.+140    	; 0x780 <strftime+0x234>
     6f4:	1a 36       	cpi	r17, 0x6A	; 106
     6f6:	09 f0       	breq	.+2      	; 0x6fa <strftime+0x1ae>
     6f8:	f6 c1       	rjmp	.+1004   	; 0xae6 <strftime+0x59a>
     6fa:	d7 01       	movw	r26, r14
     6fc:	18 96       	adiw	r26, 0x08	; 8
     6fe:	8d 91       	ld	r24, X+
     700:	9c 91       	ld	r25, X
     702:	19 97       	sbiw	r26, 0x09	; 9
     704:	01 96       	adiw	r24, 0x01	; 1
     706:	9f 93       	push	r25
     708:	8f 93       	push	r24
     70a:	82 e6       	ldi	r24, 0x62	; 98
     70c:	96 e4       	ldi	r25, 0x46	; 70
     70e:	b7 c0       	rjmp	.+366    	; 0x87e <strftime+0x332>
     710:	15 37       	cpi	r17, 0x75	; 117
     712:	09 f4       	brne	.+2      	; 0x716 <strftime+0x1ca>
     714:	35 c1       	rjmp	.+618    	; 0x980 <strftime+0x434>
     716:	b4 f4       	brge	.+44     	; 0x744 <strftime+0x1f8>
     718:	10 37       	cpi	r17, 0x70	; 112
     71a:	09 f4       	brne	.+2      	; 0x71e <strftime+0x1d2>
     71c:	c2 c0       	rjmp	.+388    	; 0x8a2 <strftime+0x356>
     71e:	34 f4       	brge	.+12     	; 0x72c <strftime+0x1e0>
     720:	1e 36       	cpi	r17, 0x6E	; 110
     722:	09 f0       	breq	.+2      	; 0x726 <strftime+0x1da>
     724:	e0 c1       	rjmp	.+960    	; 0xae6 <strftime+0x59a>
     726:	8a e0       	ldi	r24, 0x0A	; 10
     728:	89 83       	std	Y+1, r24	; 0x01
     72a:	e0 c1       	rjmp	.+960    	; 0xaec <strftime+0x5a0>
     72c:	12 37       	cpi	r17, 0x72	; 114
     72e:	09 f4       	brne	.+2      	; 0x732 <strftime+0x1e6>
     730:	c6 c0       	rjmp	.+396    	; 0x8be <strftime+0x372>
     732:	14 37       	cpi	r17, 0x74	; 116
     734:	09 f0       	breq	.+2      	; 0x738 <strftime+0x1ec>
     736:	d7 c1       	rjmp	.+942    	; 0xae6 <strftime+0x59a>
     738:	68 e7       	ldi	r22, 0x78	; 120
     73a:	76 e4       	ldi	r23, 0x46	; 70
     73c:	c6 01       	movw	r24, r12
     73e:	0e 94 a1 76 	call	0xed42	; 0xed42 <strcpy>
     742:	d4 c1       	rjmp	.+936    	; 0xaec <strftime+0x5a0>
     744:	18 37       	cpi	r17, 0x78	; 120
     746:	09 f4       	brne	.+2      	; 0x74a <strftime+0x1fe>
     748:	48 c1       	rjmp	.+656    	; 0x9da <strftime+0x48e>
     74a:	5c f4       	brge	.+22     	; 0x762 <strftime+0x216>
     74c:	17 37       	cpi	r17, 0x77	; 119
     74e:	09 f0       	breq	.+2      	; 0x752 <strftime+0x206>
     750:	ca c1       	rjmp	.+916    	; 0xae6 <strftime+0x59a>
     752:	f7 01       	movw	r30, r14
     754:	84 81       	ldd	r24, Z+4	; 0x04
     756:	28 2f       	mov	r18, r24
     758:	08 2e       	mov	r0, r24
     75a:	00 0c       	add	r0, r0
     75c:	33 0b       	sbc	r19, r19
     75e:	3f 93       	push	r19
     760:	74 c1       	rjmp	.+744    	; 0xa4a <strftime+0x4fe>
     762:	19 37       	cpi	r17, 0x79	; 121
     764:	09 f4       	brne	.+2      	; 0x768 <strftime+0x21c>
     766:	5e c1       	rjmp	.+700    	; 0xa24 <strftime+0x4d8>
     768:	1a 37       	cpi	r17, 0x7A	; 122
     76a:	09 f4       	brne	.+2      	; 0x76e <strftime+0x222>
     76c:	7e c1       	rjmp	.+764    	; 0xa6a <strftime+0x51e>
     76e:	bb c1       	rjmp	.+886    	; 0xae6 <strftime+0x59a>
     770:	0f ef       	ldi	r16, 0xFF	; 255
     772:	96 01       	movw	r18, r12
     774:	f7 01       	movw	r30, r14
     776:	44 81       	ldd	r20, Z+4	; 0x04
     778:	6c ef       	ldi	r22, 0xFC	; 252
     77a:	72 e0       	ldi	r23, 0x02	; 2
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	0d c0       	rjmp	.+26     	; 0x79a <strftime+0x24e>
     780:	03 e0       	ldi	r16, 0x03	; 3
     782:	96 01       	movw	r18, r12
     784:	d7 01       	movw	r26, r14
     786:	15 96       	adiw	r26, 0x05	; 5
     788:	4c 91       	ld	r20, X
     78a:	04 c0       	rjmp	.+8      	; 0x794 <strftime+0x248>
     78c:	0f ef       	ldi	r16, 0xFF	; 255
     78e:	96 01       	movw	r18, r12
     790:	f7 01       	movw	r30, r14
     792:	45 81       	ldd	r20, Z+5	; 0x05
     794:	65 ea       	ldi	r22, 0xA5	; 165
     796:	72 e0       	ldi	r23, 0x02	; 2
     798:	80 e0       	ldi	r24, 0x00	; 0
     79a:	0e 94 6d 02 	call	0x4da	; 0x4da <pgm_copystring>
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	a7 c1       	rjmp	.+846    	; 0xaf0 <strftime+0x5a4>
     7a2:	b6 01       	movw	r22, r12
     7a4:	c7 01       	movw	r24, r14
     7a6:	0e 94 09 06 	call	0xc12	; 0xc12 <asctime_r>
     7aa:	f6 01       	movw	r30, r12
     7ac:	cf 01       	movw	r24, r30
     7ae:	8c 19       	sub	r24, r12
     7b0:	9d 09       	sbc	r25, r13
     7b2:	21 91       	ld	r18, Z+
     7b4:	21 11       	cpse	r18, r1
     7b6:	fa cf       	rjmp	.-12     	; 0x7ac <strftime+0x260>
     7b8:	9b c1       	rjmp	.+822    	; 0xaf0 <strftime+0x5a4>
     7ba:	d7 01       	movw	r26, r14
     7bc:	16 96       	adiw	r26, 0x06	; 6
     7be:	8d 91       	ld	r24, X+
     7c0:	9c 91       	ld	r25, X
     7c2:	17 97       	sbiw	r26, 0x07	; 7
     7c4:	84 59       	subi	r24, 0x94	; 148
     7c6:	98 4f       	sbci	r25, 0xF8	; 248
     7c8:	b1 01       	movw	r22, r2
     7ca:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     7ce:	7f 93       	push	r23
     7d0:	6f 93       	push	r22
     7d2:	3b c0       	rjmp	.+118    	; 0x84a <strftime+0x2fe>
     7d4:	d7 01       	movw	r26, r14
     7d6:	13 96       	adiw	r26, 0x03	; 3
     7d8:	8c 91       	ld	r24, X
     7da:	5d c0       	rjmp	.+186    	; 0x896 <strftime+0x34a>
     7dc:	d7 01       	movw	r26, r14
     7de:	13 96       	adiw	r26, 0x03	; 3
     7e0:	8c 91       	ld	r24, X
     7e2:	13 97       	sbiw	r26, 0x03	; 3
     7e4:	28 2f       	mov	r18, r24
     7e6:	08 2e       	mov	r0, r24
     7e8:	00 0c       	add	r0, r0
     7ea:	33 0b       	sbc	r19, r19
     7ec:	3f 93       	push	r19
     7ee:	8f 93       	push	r24
     7f0:	15 96       	adiw	r26, 0x05	; 5
     7f2:	8c 91       	ld	r24, X
     7f4:	15 97       	sbiw	r26, 0x05	; 5
     7f6:	08 2e       	mov	r0, r24
     7f8:	00 0c       	add	r0, r0
     7fa:	99 0b       	sbc	r25, r25
     7fc:	01 96       	adiw	r24, 0x01	; 1
     7fe:	9f 93       	push	r25
     800:	8f 93       	push	r24
     802:	16 96       	adiw	r26, 0x06	; 6
     804:	8d 91       	ld	r24, X+
     806:	9c 91       	ld	r25, X
     808:	17 97       	sbiw	r26, 0x07	; 7
     80a:	84 59       	subi	r24, 0x94	; 148
     80c:	98 4f       	sbci	r25, 0xF8	; 248
     80e:	9f 93       	push	r25
     810:	8f 93       	push	r24
     812:	80 e5       	ldi	r24, 0x50	; 80
     814:	96 e4       	ldi	r25, 0x46	; 70
     816:	03 c1       	rjmp	.+518    	; 0xa1e <strftime+0x4d2>
     818:	d7 01       	movw	r26, r14
     81a:	18 96       	adiw	r26, 0x08	; 8
     81c:	6d 91       	ld	r22, X+
     81e:	7c 91       	ld	r23, X
     820:	19 97       	sbiw	r26, 0x09	; 9
     822:	16 96       	adiw	r26, 0x06	; 6
     824:	8d 91       	ld	r24, X+
     826:	9c 91       	ld	r25, X
     828:	17 97       	sbiw	r26, 0x07	; 7
     82a:	ae 01       	movw	r20, r28
     82c:	45 5e       	subi	r20, 0xE5	; 229
     82e:	5f 4f       	sbci	r21, 0xFF	; 255
     830:	84 59       	subi	r24, 0x94	; 148
     832:	98 4f       	sbci	r25, 0xF8	; 248
     834:	0e 94 62 07 	call	0xec4	; 0xec4 <iso_week_date_r>
     838:	17 36       	cpi	r17, 0x67	; 103
     83a:	51 f4       	brne	.+20     	; 0x850 <strftime+0x304>
     83c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     83e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     840:	b1 01       	movw	r22, r2
     842:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     846:	9f 93       	push	r25
     848:	8f 93       	push	r24
     84a:	e8 e5       	ldi	r30, 0x58	; 88
     84c:	f6 e4       	ldi	r31, 0x46	; 70
     84e:	a6 c0       	rjmp	.+332    	; 0x99c <strftime+0x450>
     850:	8c 8d       	ldd	r24, Y+28	; 0x1c
     852:	8f 93       	push	r24
     854:	8b 8d       	ldd	r24, Y+27	; 0x1b
     856:	8f 93       	push	r24
     858:	4d e5       	ldi	r20, 0x5D	; 93
     85a:	56 e4       	ldi	r21, 0x46	; 70
     85c:	5f 93       	push	r21
     85e:	4f 93       	push	r20
     860:	f9 c0       	rjmp	.+498    	; 0xa54 <strftime+0x508>
     862:	f7 01       	movw	r30, r14
     864:	82 81       	ldd	r24, Z+2	; 0x02
     866:	6c e0       	ldi	r22, 0x0C	; 12
     868:	0e 94 4e 7b 	call	0xf69c	; 0xf69c <__divmodqi4>
     86c:	99 23       	and	r25, r25
     86e:	21 f0       	breq	.+8      	; 0x878 <strftime+0x32c>
     870:	89 2f       	mov	r24, r25
     872:	99 0f       	add	r25, r25
     874:	99 0b       	sbc	r25, r25
     876:	de c0       	rjmp	.+444    	; 0xa34 <strftime+0x4e8>
     878:	8c e0       	ldi	r24, 0x0C	; 12
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	db c0       	rjmp	.+438    	; 0xa34 <strftime+0x4e8>
     87e:	9f 93       	push	r25
     880:	8f 93       	push	r24
     882:	e8 c0       	rjmp	.+464    	; 0xa54 <strftime+0x508>
     884:	f7 01       	movw	r30, r14
     886:	85 81       	ldd	r24, Z+5	; 0x05
     888:	08 2e       	mov	r0, r24
     88a:	00 0c       	add	r0, r0
     88c:	99 0b       	sbc	r25, r25
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	d1 c0       	rjmp	.+418    	; 0xa34 <strftime+0x4e8>
     892:	d7 01       	movw	r26, r14
     894:	8c 91       	ld	r24, X
     896:	28 2f       	mov	r18, r24
     898:	08 2e       	mov	r0, r24
     89a:	00 0c       	add	r0, r0
     89c:	33 0b       	sbc	r19, r19
     89e:	3f 93       	push	r19
     8a0:	ca c0       	rjmp	.+404    	; 0xa36 <strftime+0x4ea>
     8a2:	81 e4       	ldi	r24, 0x41	; 65
     8a4:	89 83       	std	Y+1, r24	; 0x01
     8a6:	f7 01       	movw	r30, r14
     8a8:	82 81       	ldd	r24, Z+2	; 0x02
     8aa:	8c 30       	cpi	r24, 0x0C	; 12
     8ac:	14 f0       	brlt	.+4      	; 0x8b2 <strftime+0x366>
     8ae:	80 e5       	ldi	r24, 0x50	; 80
     8b0:	89 83       	std	Y+1, r24	; 0x01
     8b2:	8d e4       	ldi	r24, 0x4D	; 77
     8b4:	8a 83       	std	Y+2, r24	; 0x02
     8b6:	1b 82       	std	Y+3, r1	; 0x03
     8b8:	82 e0       	ldi	r24, 0x02	; 2
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	19 c1       	rjmp	.+562    	; 0xaf0 <strftime+0x5a4>
     8be:	d7 01       	movw	r26, r14
     8c0:	12 96       	adiw	r26, 0x02	; 2
     8c2:	8c 91       	ld	r24, X
     8c4:	6c e0       	ldi	r22, 0x0C	; 12
     8c6:	0e 94 4e 7b 	call	0xf69c	; 0xf69c <__divmodqi4>
     8ca:	99 23       	and	r25, r25
     8cc:	21 f0       	breq	.+8      	; 0x8d6 <strftime+0x38a>
     8ce:	89 2f       	mov	r24, r25
     8d0:	99 0f       	add	r25, r25
     8d2:	99 0b       	sbc	r25, r25
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <strftime+0x38e>
     8d6:	8c e0       	ldi	r24, 0x0C	; 12
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	f7 01       	movw	r30, r14
     8dc:	20 81       	ld	r18, Z
     8de:	42 2f       	mov	r20, r18
     8e0:	02 2e       	mov	r0, r18
     8e2:	00 0c       	add	r0, r0
     8e4:	55 0b       	sbc	r21, r21
     8e6:	5f 93       	push	r21
     8e8:	2f 93       	push	r18
     8ea:	21 81       	ldd	r18, Z+1	; 0x01
     8ec:	42 2f       	mov	r20, r18
     8ee:	02 2e       	mov	r0, r18
     8f0:	00 0c       	add	r0, r0
     8f2:	55 0b       	sbc	r21, r21
     8f4:	5f 93       	push	r21
     8f6:	2f 93       	push	r18
     8f8:	9f 93       	push	r25
     8fa:	8f 93       	push	r24
     8fc:	27 e6       	ldi	r18, 0x67	; 103
     8fe:	36 e4       	ldi	r19, 0x46	; 70
     900:	3f 93       	push	r19
     902:	2f 93       	push	r18
     904:	df 92       	push	r13
     906:	cf 92       	push	r12
     908:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
     90c:	cd bf       	out	0x3d, r28	; 61
     90e:	de bf       	out	0x3e, r29	; 62
     910:	f7 01       	movw	r30, r14
     912:	22 81       	ldd	r18, Z+2	; 0x02
     914:	2c 30       	cpi	r18, 0x0C	; 12
     916:	0c f4       	brge	.+2      	; 0x91a <strftime+0x3ce>
     918:	eb c0       	rjmp	.+470    	; 0xaf0 <strftime+0x5a4>
     91a:	20 e5       	ldi	r18, 0x50	; 80
     91c:	2b 87       	std	Y+11, r18	; 0x0b
     91e:	e8 c0       	rjmp	.+464    	; 0xaf0 <strftime+0x5a4>
     920:	d7 01       	movw	r26, r14
     922:	11 96       	adiw	r26, 0x01	; 1
     924:	8c 91       	ld	r24, X
     926:	11 97       	sbiw	r26, 0x01	; 1
     928:	28 2f       	mov	r18, r24
     92a:	08 2e       	mov	r0, r24
     92c:	00 0c       	add	r0, r0
     92e:	33 0b       	sbc	r19, r19
     930:	3f 93       	push	r19
     932:	8f 93       	push	r24
     934:	12 96       	adiw	r26, 0x02	; 2
     936:	8c 91       	ld	r24, X
     938:	28 2f       	mov	r18, r24
     93a:	08 2e       	mov	r0, r24
     93c:	00 0c       	add	r0, r0
     93e:	33 0b       	sbc	r19, r19
     940:	3f 93       	push	r19
     942:	8f 93       	push	r24
     944:	8f e7       	ldi	r24, 0x7F	; 127
     946:	96 e4       	ldi	r25, 0x46	; 70
     948:	9f 93       	push	r25
     94a:	8f 93       	push	r24
     94c:	c5 c0       	rjmp	.+394    	; 0xad8 <strftime+0x58c>
     94e:	f7 01       	movw	r30, r14
     950:	80 81       	ld	r24, Z
     952:	28 2f       	mov	r18, r24
     954:	08 2e       	mov	r0, r24
     956:	00 0c       	add	r0, r0
     958:	33 0b       	sbc	r19, r19
     95a:	3f 93       	push	r19
     95c:	8f 93       	push	r24
     95e:	81 81       	ldd	r24, Z+1	; 0x01
     960:	28 2f       	mov	r18, r24
     962:	08 2e       	mov	r0, r24
     964:	00 0c       	add	r0, r0
     966:	33 0b       	sbc	r19, r19
     968:	3f 93       	push	r19
     96a:	8f 93       	push	r24
     96c:	82 81       	ldd	r24, Z+2	; 0x02
     96e:	28 2f       	mov	r18, r24
     970:	08 2e       	mov	r0, r24
     972:	00 0c       	add	r0, r0
     974:	33 0b       	sbc	r19, r19
     976:	3f 93       	push	r19
     978:	8f 93       	push	r24
     97a:	8a e7       	ldi	r24, 0x7A	; 122
     97c:	96 e4       	ldi	r25, 0x46	; 70
     97e:	4f c0       	rjmp	.+158    	; 0xa1e <strftime+0x4d2>
     980:	d7 01       	movw	r26, r14
     982:	14 96       	adiw	r26, 0x04	; 4
     984:	8c 91       	ld	r24, X
     986:	08 2e       	mov	r0, r24
     988:	00 0c       	add	r0, r0
     98a:	99 0b       	sbc	r25, r25
     98c:	00 97       	sbiw	r24, 0x00	; 0
     98e:	11 f4       	brne	.+4      	; 0x994 <strftime+0x448>
     990:	87 e0       	ldi	r24, 0x07	; 7
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	9f 93       	push	r25
     996:	8f 93       	push	r24
     998:	e9 e8       	ldi	r30, 0x89	; 137
     99a:	f6 e4       	ldi	r31, 0x46	; 70
     99c:	ff 93       	push	r31
     99e:	ef 93       	push	r30
     9a0:	59 c0       	rjmp	.+178    	; 0xa54 <strftime+0x508>
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	15 c0       	rjmp	.+42     	; 0x9d0 <strftime+0x484>
     9a6:	d7 01       	movw	r26, r14
     9a8:	18 96       	adiw	r26, 0x08	; 8
     9aa:	6d 91       	ld	r22, X+
     9ac:	7c 91       	ld	r23, X
     9ae:	19 97       	sbiw	r26, 0x09	; 9
     9b0:	16 96       	adiw	r26, 0x06	; 6
     9b2:	8d 91       	ld	r24, X+
     9b4:	9c 91       	ld	r25, X
     9b6:	17 97       	sbiw	r26, 0x07	; 7
     9b8:	ae 01       	movw	r20, r28
     9ba:	45 5e       	subi	r20, 0xE5	; 229
     9bc:	5f 4f       	sbci	r21, 0xFF	; 255
     9be:	84 59       	subi	r24, 0x94	; 148
     9c0:	98 4f       	sbci	r25, 0xF8	; 248
     9c2:	0e 94 62 07 	call	0xec4	; 0xec4 <iso_week_date_r>
     9c6:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9c8:	8f 93       	push	r24
     9ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9cc:	34 c0       	rjmp	.+104    	; 0xa36 <strftime+0x4ea>
     9ce:	61 e0       	ldi	r22, 0x01	; 1
     9d0:	c7 01       	movw	r24, r14
     9d2:	0e 94 ce 05 	call	0xb9c	; 0xb9c <week_of_year>
     9d6:	1f 92       	push	r1
     9d8:	2e c0       	rjmp	.+92     	; 0xa36 <strftime+0x4ea>
     9da:	d7 01       	movw	r26, r14
     9dc:	16 96       	adiw	r26, 0x06	; 6
     9de:	8d 91       	ld	r24, X+
     9e0:	9c 91       	ld	r25, X
     9e2:	17 97       	sbiw	r26, 0x07	; 7
     9e4:	b1 01       	movw	r22, r2
     9e6:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     9ea:	9f 93       	push	r25
     9ec:	8f 93       	push	r24
     9ee:	f7 01       	movw	r30, r14
     9f0:	83 81       	ldd	r24, Z+3	; 0x03
     9f2:	28 2f       	mov	r18, r24
     9f4:	08 2e       	mov	r0, r24
     9f6:	00 0c       	add	r0, r0
     9f8:	33 0b       	sbc	r19, r19
     9fa:	3f 93       	push	r19
     9fc:	8f 93       	push	r24
     9fe:	85 81       	ldd	r24, Z+5	; 0x05
     a00:	08 2e       	mov	r0, r24
     a02:	00 0c       	add	r0, r0
     a04:	99 0b       	sbc	r25, r25
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	9f 93       	push	r25
     a0a:	8f 93       	push	r24
     a0c:	2d e3       	ldi	r18, 0x3D	; 61
     a0e:	36 e4       	ldi	r19, 0x46	; 70
     a10:	3f 93       	push	r19
     a12:	2f 93       	push	r18
     a14:	df 92       	push	r13
     a16:	cf 92       	push	r12
     a18:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
     a1c:	61 c0       	rjmp	.+194    	; 0xae0 <strftime+0x594>
     a1e:	9f 93       	push	r25
     a20:	8f 93       	push	r24
     a22:	f8 cf       	rjmp	.-16     	; 0xa14 <strftime+0x4c8>
     a24:	d7 01       	movw	r26, r14
     a26:	16 96       	adiw	r26, 0x06	; 6
     a28:	8d 91       	ld	r24, X+
     a2a:	9c 91       	ld	r25, X
     a2c:	17 97       	sbiw	r26, 0x07	; 7
     a2e:	b1 01       	movw	r22, r2
     a30:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     a34:	9f 93       	push	r25
     a36:	8f 93       	push	r24
     a38:	bf 92       	push	r11
     a3a:	af 92       	push	r10
     a3c:	0b c0       	rjmp	.+22     	; 0xa54 <strftime+0x508>
     a3e:	f7 01       	movw	r30, r14
     a40:	86 81       	ldd	r24, Z+6	; 0x06
     a42:	97 81       	ldd	r25, Z+7	; 0x07
     a44:	84 59       	subi	r24, 0x94	; 148
     a46:	98 4f       	sbci	r25, 0xF8	; 248
     a48:	9f 93       	push	r25
     a4a:	8f 93       	push	r24
     a4c:	2c e8       	ldi	r18, 0x8C	; 140
     a4e:	36 e4       	ldi	r19, 0x46	; 70
     a50:	3f 93       	push	r19
     a52:	2f 93       	push	r18
     a54:	df 92       	push	r13
     a56:	cf 92       	push	r12
     a58:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
     a5c:	0f 90       	pop	r0
     a5e:	0f 90       	pop	r0
     a60:	0f 90       	pop	r0
     a62:	0f 90       	pop	r0
     a64:	0f 90       	pop	r0
     a66:	0f 90       	pop	r0
     a68:	43 c0       	rjmp	.+134    	; 0xaf0 <strftime+0x5a4>
     a6a:	60 91 c5 4a 	lds	r22, 0x4AC5	; 0x804ac5 <__utc_offset>
     a6e:	70 91 c6 4a 	lds	r23, 0x4AC6	; 0x804ac6 <__utc_offset+0x1>
     a72:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <__utc_offset+0x2>
     a76:	90 91 c8 4a 	lds	r25, 0x4AC8	; 0x804ac8 <__utc_offset+0x3>
     a7a:	2c e3       	ldi	r18, 0x3C	; 60
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	40 e0       	ldi	r20, 0x00	; 0
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
     a86:	89 01       	movw	r16, r18
     a88:	9a 01       	movw	r18, r20
     a8a:	f8 01       	movw	r30, r16
     a8c:	d7 01       	movw	r26, r14
     a8e:	1a 96       	adiw	r26, 0x0a	; 10
     a90:	8d 91       	ld	r24, X+
     a92:	9c 91       	ld	r25, X
     a94:	1b 97       	sbiw	r26, 0x0b	; 11
     a96:	6c e3       	ldi	r22, 0x3C	; 60
     a98:	70 e0       	ldi	r23, 0x00	; 0
     a9a:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     a9e:	16 16       	cp	r1, r22
     aa0:	17 06       	cpc	r1, r23
     aa2:	1c f4       	brge	.+6      	; 0xaaa <strftime+0x55e>
     aa4:	fb 01       	movw	r30, r22
     aa6:	e0 0f       	add	r30, r16
     aa8:	f1 1f       	adc	r31, r17
     aaa:	cf 01       	movw	r24, r30
     aac:	6c e3       	ldi	r22, 0x3C	; 60
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     ab4:	97 ff       	sbrs	r25, 7
     ab6:	03 c0       	rjmp	.+6      	; 0xabe <strftime+0x572>
     ab8:	91 95       	neg	r25
     aba:	81 95       	neg	r24
     abc:	91 09       	sbc	r25, r1
     abe:	9f 93       	push	r25
     ac0:	8f 93       	push	r24
     ac2:	cf 01       	movw	r24, r30
     ac4:	6c e3       	ldi	r22, 0x3C	; 60
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     acc:	7f 93       	push	r23
     ace:	6f 93       	push	r22
     ad0:	ee e9       	ldi	r30, 0x9E	; 158
     ad2:	f6 e4       	ldi	r31, 0x46	; 70
     ad4:	ff 93       	push	r31
     ad6:	ef 93       	push	r30
     ad8:	df 92       	push	r13
     ada:	cf 92       	push	r12
     adc:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
     ae0:	cd bf       	out	0x3d, r28	; 61
     ae2:	de bf       	out	0x3e, r29	; 62
     ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <strftime+0x5a4>
     ae6:	8f e3       	ldi	r24, 0x3F	; 63
     ae8:	89 83       	std	Y+1, r24	; 0x01
     aea:	1a 82       	std	Y+2, r1	; 0x02
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	93 01       	movw	r18, r6
     af2:	28 0f       	add	r18, r24
     af4:	39 1f       	adc	r19, r25
     af6:	a9 a1       	ldd	r26, Y+33	; 0x21
     af8:	ba a1       	ldd	r27, Y+34	; 0x22
     afa:	2a 17       	cp	r18, r26
     afc:	3b 07       	cpc	r19, r27
     afe:	98 f4       	brcc	.+38     	; 0xb26 <strftime+0x5da>
     b00:	d2 01       	movw	r26, r4
     b02:	f6 01       	movw	r30, r12
     b04:	af 01       	movw	r20, r30
     b06:	4c 19       	sub	r20, r12
     b08:	5d 09       	sbc	r21, r13
     b0a:	48 17       	cp	r20, r24
     b0c:	59 07       	cpc	r21, r25
     b0e:	1c f4       	brge	.+6      	; 0xb16 <strftime+0x5ca>
     b10:	41 91       	ld	r20, Z+
     b12:	4d 93       	st	X+, r20
     b14:	f7 cf       	rjmp	.-18     	; 0xb04 <strftime+0x5b8>
     b16:	97 ff       	sbrs	r25, 7
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <strftime+0x5d2>
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	48 0e       	add	r4, r24
     b20:	59 1e       	adc	r5, r25
     b22:	39 01       	movw	r6, r18
     b24:	3c cd       	rjmp	.-1416   	; 0x59e <strftime+0x52>
     b26:	f2 01       	movw	r30, r4
     b28:	10 82       	st	Z, r1
     b2a:	0e c0       	rjmp	.+28     	; 0xb48 <strftime+0x5fc>
     b2c:	d2 01       	movw	r26, r4
     b2e:	8d 93       	st	X+, r24
     b30:	2d 01       	movw	r4, r26
     b32:	bf ef       	ldi	r27, 0xFF	; 255
     b34:	6b 1a       	sub	r6, r27
     b36:	7b 0a       	sbc	r7, r27
     b38:	88 23       	and	r24, r24
     b3a:	31 f0       	breq	.+12     	; 0xb48 <strftime+0x5fc>
     b3c:	ef ef       	ldi	r30, 0xFF	; 255
     b3e:	8e 1a       	sub	r8, r30
     b40:	9e 0a       	sbc	r9, r30
     b42:	2d cd       	rjmp	.-1446   	; 0x59e <strftime+0x52>
     b44:	d2 01       	movw	r26, r4
     b46:	1c 92       	st	X, r1
     b48:	c3 01       	movw	r24, r6
     b4a:	a2 96       	adiw	r28, 0x22	; 34
     b4c:	cd bf       	out	0x3d, r28	; 61
     b4e:	de bf       	out	0x3e, r29	; 62
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	0f 91       	pop	r16
     b58:	ff 90       	pop	r15
     b5a:	ef 90       	pop	r14
     b5c:	df 90       	pop	r13
     b5e:	cf 90       	pop	r12
     b60:	bf 90       	pop	r11
     b62:	af 90       	pop	r10
     b64:	9f 90       	pop	r9
     b66:	8f 90       	pop	r8
     b68:	7f 90       	pop	r7
     b6a:	6f 90       	pop	r6
     b6c:	5f 90       	pop	r5
     b6e:	4f 90       	pop	r4
     b70:	3f 90       	pop	r3
     b72:	2f 90       	pop	r2
     b74:	08 95       	ret

00000b76 <time>:
     b76:	fc 01       	movw	r30, r24
     b78:	0f b6       	in	r0, 0x3f	; 63
     b7a:	f8 94       	cli
     b7c:	60 91 b5 4a 	lds	r22, 0x4AB5	; 0x804ab5 <__system_time>
     b80:	70 91 b6 4a 	lds	r23, 0x4AB6	; 0x804ab6 <__system_time+0x1>
     b84:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <__system_time+0x2>
     b88:	90 91 b8 4a 	lds	r25, 0x4AB8	; 0x804ab8 <__system_time+0x3>
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	30 97       	sbiw	r30, 0x00	; 0
     b90:	21 f0       	breq	.+8      	; 0xb9a <time+0x24>
     b92:	60 83       	st	Z, r22
     b94:	71 83       	std	Z+1, r23	; 0x01
     b96:	82 83       	std	Z+2, r24	; 0x02
     b98:	93 83       	std	Z+3, r25	; 0x03
     b9a:	08 95       	ret

00000b9c <week_of_year>:
     b9c:	fc 01       	movw	r30, r24
     b9e:	20 85       	ldd	r18, Z+8	; 0x08
     ba0:	31 85       	ldd	r19, Z+9	; 0x09
     ba2:	c9 01       	movw	r24, r18
     ba4:	07 96       	adiw	r24, 0x07	; 7
     ba6:	44 81       	ldd	r20, Z+4	; 0x04
     ba8:	84 1b       	sub	r24, r20
     baa:	91 09       	sbc	r25, r1
     bac:	47 fd       	sbrc	r20, 7
     bae:	93 95       	inc	r25
     bb0:	86 0f       	add	r24, r22
     bb2:	91 1d       	adc	r25, r1
     bb4:	e7 e0       	ldi	r30, 0x07	; 7
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	bf 01       	movw	r22, r30
     bba:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     bbe:	a9 01       	movw	r20, r18
     bc0:	48 1b       	sub	r20, r24
     bc2:	59 0b       	sbc	r21, r25
     bc4:	ca 01       	movw	r24, r20
     bc6:	57 fd       	sbrc	r21, 7
     bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <week_of_year+0x3a>
     bca:	bf 01       	movw	r22, r30
     bcc:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	86 0f       	add	r24, r22
     bd4:	08 95       	ret
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	08 95       	ret

00000bda <system_tick>:
     bda:	8f 93       	push	r24
     bdc:	8f b7       	in	r24, 0x3f	; 63
     bde:	8f 93       	push	r24
     be0:	f8 94       	cli
     be2:	80 91 b5 4a 	lds	r24, 0x4AB5	; 0x804ab5 <__system_time>
     be6:	8f 5f       	subi	r24, 0xFF	; 255
     be8:	80 93 b5 4a 	sts	0x4AB5, r24	; 0x804ab5 <__system_time>
     bec:	80 91 b6 4a 	lds	r24, 0x4AB6	; 0x804ab6 <__system_time+0x1>
     bf0:	8f 4f       	sbci	r24, 0xFF	; 255
     bf2:	80 93 b6 4a 	sts	0x4AB6, r24	; 0x804ab6 <__system_time+0x1>
     bf6:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <__system_time+0x2>
     bfa:	8f 4f       	sbci	r24, 0xFF	; 255
     bfc:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <__system_time+0x2>
     c00:	80 91 b8 4a 	lds	r24, 0x4AB8	; 0x804ab8 <__system_time+0x3>
     c04:	8f 4f       	sbci	r24, 0xFF	; 255
     c06:	80 93 b8 4a 	sts	0x4AB8, r24	; 0x804ab8 <__system_time+0x3>
     c0a:	8f 91       	pop	r24
     c0c:	8f bf       	out	0x3f, r24	; 63
     c0e:	8f 91       	pop	r24
     c10:	08 95       	ret

00000c12 <asctime_r>:
     c12:	cf 92       	push	r12
     c14:	df 92       	push	r13
     c16:	ef 92       	push	r14
     c18:	ff 92       	push	r15
     c1a:	0f 93       	push	r16
     c1c:	1f 93       	push	r17
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	8c 01       	movw	r16, r24
     c24:	eb 01       	movw	r28, r22
     c26:	fc 01       	movw	r30, r24
     c28:	84 81       	ldd	r24, Z+4	; 0x04
     c2a:	b8 2f       	mov	r27, r24
     c2c:	bb 0f       	add	r27, r27
     c2e:	b8 0f       	add	r27, r24
     c30:	85 81       	ldd	r24, Z+5	; 0x05
     c32:	78 2f       	mov	r23, r24
     c34:	77 0f       	add	r23, r23
     c36:	78 0f       	add	r23, r24
     c38:	9e 01       	movw	r18, r28
     c3a:	40 e0       	ldi	r20, 0x00	; 0
     c3c:	8b 2f       	mov	r24, r27
     c3e:	84 0f       	add	r24, r20
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	a0 e0       	ldi	r26, 0x00	; 0
     c44:	8a 5c       	subi	r24, 0xCA	; 202
     c46:	9c 4f       	sbci	r25, 0xFC	; 252
     c48:	af 4f       	sbci	r26, 0xFF	; 255
     c4a:	fc 01       	movw	r30, r24
     c4c:	5a 2f       	mov	r21, r26
     c4e:	0e 94 5c 7b 	call	0xf6b8	; 0xf6b8 <__xload_1>
     c52:	f9 01       	movw	r30, r18
     c54:	61 93       	st	Z+, r22
     c56:	9f 01       	movw	r18, r30
     c58:	87 2f       	mov	r24, r23
     c5a:	84 0f       	add	r24, r20
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	a0 e0       	ldi	r26, 0x00	; 0
     c60:	84 5b       	subi	r24, 0xB4	; 180
     c62:	9c 4f       	sbci	r25, 0xFC	; 252
     c64:	af 4f       	sbci	r26, 0xFF	; 255
     c66:	fc 01       	movw	r30, r24
     c68:	5a 2f       	mov	r21, r26
     c6a:	0e 94 5c 7b 	call	0xf6b8	; 0xf6b8 <__xload_1>
     c6e:	f9 01       	movw	r30, r18
     c70:	63 83       	std	Z+3, r22	; 0x03
     c72:	4f 5f       	subi	r20, 0xFF	; 255
     c74:	43 30       	cpi	r20, 0x03	; 3
     c76:	11 f7       	brne	.-60     	; 0xc3c <asctime_r+0x2a>
     c78:	80 e2       	ldi	r24, 0x20	; 32
     c7a:	8f 83       	std	Y+7, r24	; 0x07
     c7c:	8b 83       	std	Y+3, r24	; 0x03
     c7e:	be 01       	movw	r22, r28
     c80:	68 5f       	subi	r22, 0xF8	; 248
     c82:	7f 4f       	sbci	r23, 0xFF	; 255
     c84:	f8 01       	movw	r30, r16
     c86:	83 81       	ldd	r24, Z+3	; 0x03
     c88:	40 e2       	ldi	r20, 0x20	; 32
     c8a:	08 2e       	mov	r0, r24
     c8c:	00 0c       	add	r0, r0
     c8e:	99 0b       	sbc	r25, r25
     c90:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     c94:	be 01       	movw	r22, r28
     c96:	65 5f       	subi	r22, 0xF5	; 245
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	f8 01       	movw	r30, r16
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	4a e3       	ldi	r20, 0x3A	; 58
     ca0:	08 2e       	mov	r0, r24
     ca2:	00 0c       	add	r0, r0
     ca4:	99 0b       	sbc	r25, r25
     ca6:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     caa:	be 01       	movw	r22, r28
     cac:	62 5f       	subi	r22, 0xF2	; 242
     cae:	7f 4f       	sbci	r23, 0xFF	; 255
     cb0:	f8 01       	movw	r30, r16
     cb2:	81 81       	ldd	r24, Z+1	; 0x01
     cb4:	4a e3       	ldi	r20, 0x3A	; 58
     cb6:	08 2e       	mov	r0, r24
     cb8:	00 0c       	add	r0, r0
     cba:	99 0b       	sbc	r25, r25
     cbc:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     cc0:	be 01       	movw	r22, r28
     cc2:	6f 5e       	subi	r22, 0xEF	; 239
     cc4:	7f 4f       	sbci	r23, 0xFF	; 255
     cc6:	f8 01       	movw	r30, r16
     cc8:	80 81       	ld	r24, Z
     cca:	40 e2       	ldi	r20, 0x20	; 32
     ccc:	08 2e       	mov	r0, r24
     cce:	00 0c       	add	r0, r0
     cd0:	99 0b       	sbc	r25, r25
     cd2:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     cd6:	f8 01       	movw	r30, r16
     cd8:	86 81       	ldd	r24, Z+6	; 0x06
     cda:	97 81       	ldd	r25, Z+7	; 0x07
     cdc:	64 e6       	ldi	r22, 0x64	; 100
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	84 59       	subi	r24, 0x94	; 148
     ce2:	98 4f       	sbci	r25, 0xF8	; 248
     ce4:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     ce8:	6b 01       	movw	r12, r22
     cea:	7c 01       	movw	r14, r24
     cec:	be 01       	movw	r22, r28
     cee:	6c 5e       	subi	r22, 0xEC	; 236
     cf0:	7f 4f       	sbci	r23, 0xFF	; 255
     cf2:	40 e2       	ldi	r20, 0x20	; 32
     cf4:	c6 01       	movw	r24, r12
     cf6:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     cfa:	be 01       	movw	r22, r28
     cfc:	6a 5e       	subi	r22, 0xEA	; 234
     cfe:	7f 4f       	sbci	r23, 0xFF	; 255
     d00:	40 e0       	ldi	r20, 0x00	; 0
     d02:	c7 01       	movw	r24, r14
     d04:	df 91       	pop	r29
     d06:	cf 91       	pop	r28
     d08:	1f 91       	pop	r17
     d0a:	0f 91       	pop	r16
     d0c:	ff 90       	pop	r15
     d0e:	ef 90       	pop	r14
     d10:	df 90       	pop	r13
     d12:	cf 90       	pop	r12
     d14:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__print_lz>

00000d18 <gmtime_r>:
     d18:	cf 92       	push	r12
     d1a:	df 92       	push	r13
     d1c:	ef 92       	push	r14
     d1e:	ff 92       	push	r15
     d20:	0f 93       	push	r16
     d22:	1f 93       	push	r17
     d24:	cf 93       	push	r28
     d26:	df 93       	push	r29
     d28:	cd b7       	in	r28, 0x3d	; 61
     d2a:	de b7       	in	r29, 0x3e	; 62
     d2c:	28 97       	sbiw	r28, 0x08	; 8
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	de bf       	out	0x3e, r29	; 62
     d32:	8b 01       	movw	r16, r22
     d34:	fc 01       	movw	r30, r24
     d36:	60 81       	ld	r22, Z
     d38:	71 81       	ldd	r23, Z+1	; 0x01
     d3a:	82 81       	ldd	r24, Z+2	; 0x02
     d3c:	93 81       	ldd	r25, Z+3	; 0x03
     d3e:	20 e8       	ldi	r18, 0x80	; 128
     d40:	31 e5       	ldi	r19, 0x51	; 81
     d42:	41 e0       	ldi	r20, 0x01	; 1
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
     d4a:	69 01       	movw	r12, r18
     d4c:	7a 01       	movw	r14, r20
     d4e:	2c e3       	ldi	r18, 0x3C	; 60
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	40 e0       	ldi	r20, 0x00	; 0
     d54:	50 e0       	ldi	r21, 0x00	; 0
     d56:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
     d5a:	29 83       	std	Y+1, r18	; 0x01
     d5c:	3a 83       	std	Y+2, r19	; 0x02
     d5e:	4b 83       	std	Y+3, r20	; 0x03
     d60:	5c 83       	std	Y+4, r21	; 0x04
     d62:	89 81       	ldd	r24, Y+1	; 0x01
     d64:	9a 81       	ldd	r25, Y+2	; 0x02
     d66:	ab 81       	ldd	r26, Y+3	; 0x03
     d68:	bc 81       	ldd	r27, Y+4	; 0x04
     d6a:	f8 01       	movw	r30, r16
     d6c:	60 83       	st	Z, r22
     d6e:	6c e3       	ldi	r22, 0x3C	; 60
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     d76:	dc 01       	movw	r26, r24
     d78:	cb 01       	movw	r24, r22
     d7a:	f8 01       	movw	r30, r16
     d7c:	a1 83       	std	Z+1, r26	; 0x01
     d7e:	82 83       	std	Z+2, r24	; 0x02
     d80:	c6 01       	movw	r24, r12
     d82:	06 96       	adiw	r24, 0x06	; 6
     d84:	67 e0       	ldi	r22, 0x07	; 7
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	0e 94 86 74 	call	0xe90c	; 0xe90c <__udivmodhi4>
     d8c:	84 83       	std	Z+4, r24	; 0x04
     d8e:	2d ea       	ldi	r18, 0xAD	; 173
     d90:	3e e8       	ldi	r19, 0x8E	; 142
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	50 e0       	ldi	r21, 0x00	; 0
     d96:	c7 01       	movw	r24, r14
     d98:	b6 01       	movw	r22, r12
     d9a:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
     d9e:	29 83       	std	Y+1, r18	; 0x01
     da0:	3a 83       	std	Y+2, r19	; 0x02
     da2:	6d 83       	std	Y+5, r22	; 0x05
     da4:	7e 83       	std	Y+6, r23	; 0x06
     da6:	8f 83       	std	Y+7, r24	; 0x07
     da8:	98 87       	std	Y+8, r25	; 0x08
     daa:	89 81       	ldd	r24, Y+1	; 0x01
     dac:	9a 81       	ldd	r25, Y+2	; 0x02
     dae:	24 e6       	ldi	r18, 0x64	; 100
     db0:	28 9f       	mul	r18, r24
     db2:	60 01       	movw	r12, r0
     db4:	29 9f       	mul	r18, r25
     db6:	d0 0c       	add	r13, r0
     db8:	11 24       	eor	r1, r1
     dba:	6d 81       	ldd	r22, Y+5	; 0x05
     dbc:	7e 81       	ldd	r23, Y+6	; 0x06
     dbe:	8f 81       	ldd	r24, Y+7	; 0x07
     dc0:	98 85       	ldd	r25, Y+8	; 0x08
     dc2:	25 eb       	ldi	r18, 0xB5	; 181
     dc4:	35 e0       	ldi	r19, 0x05	; 5
     dc6:	40 e0       	ldi	r20, 0x00	; 0
     dc8:	50 e0       	ldi	r21, 0x00	; 0
     dca:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
     dce:	29 83       	std	Y+1, r18	; 0x01
     dd0:	3a 83       	std	Y+2, r19	; 0x02
     dd2:	6d 83       	std	Y+5, r22	; 0x05
     dd4:	7e 83       	std	Y+6, r23	; 0x06
     dd6:	e9 80       	ldd	r14, Y+1	; 0x01
     dd8:	fa 80       	ldd	r15, Y+2	; 0x02
     dda:	ee 0c       	add	r14, r14
     ddc:	ff 1c       	adc	r15, r15
     dde:	ee 0c       	add	r14, r14
     de0:	ff 1c       	adc	r15, r15
     de2:	ec 0c       	add	r14, r12
     de4:	fd 1c       	adc	r15, r13
     de6:	8d 81       	ldd	r24, Y+5	; 0x05
     de8:	9e 81       	ldd	r25, Y+6	; 0x06
     dea:	f5 e6       	ldi	r31, 0x65	; 101
     dec:	ef 16       	cp	r14, r31
     dee:	f1 04       	cpc	r15, r1
     df0:	10 f0       	brcs	.+4      	; 0xdf6 <gmtime_r+0xde>
     df2:	01 96       	adiw	r24, 0x01	; 1
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <gmtime_r+0xe6>
     df6:	24 e6       	ldi	r18, 0x64	; 100
     df8:	e2 16       	cp	r14, r18
     dfa:	f1 04       	cpc	r15, r1
     dfc:	19 f0       	breq	.+6      	; 0xe04 <gmtime_r+0xec>
     dfe:	21 e0       	ldi	r18, 0x01	; 1
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <gmtime_r+0xf0>
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	a9 01       	movw	r20, r18
     e0a:	44 59       	subi	r20, 0x94	; 148
     e0c:	5e 4f       	sbci	r21, 0xFE	; 254
     e0e:	48 17       	cp	r20, r24
     e10:	59 07       	cpc	r21, r25
     e12:	68 f4       	brcc	.+26     	; 0xe2e <gmtime_r+0x116>
     e14:	6d e6       	ldi	r22, 0x6D	; 109
     e16:	71 e0       	ldi	r23, 0x01	; 1
     e18:	82 1b       	sub	r24, r18
     e1a:	93 0b       	sbc	r25, r19
     e1c:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     e20:	dc 01       	movw	r26, r24
     e22:	cb 01       	movw	r24, r22
     e24:	e8 0e       	add	r14, r24
     e26:	f9 1e       	adc	r15, r25
     e28:	cd 01       	movw	r24, r26
     e2a:	20 e0       	ldi	r18, 0x00	; 0
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	44 e6       	ldi	r20, 0x64	; 100
     e30:	e4 0e       	add	r14, r20
     e32:	f1 1c       	adc	r15, r1
     e34:	f8 01       	movw	r30, r16
     e36:	e6 82       	std	Z+6, r14	; 0x06
     e38:	f7 82       	std	Z+7, r15	; 0x07
     e3a:	80 87       	std	Z+8, r24	; 0x08
     e3c:	91 87       	std	Z+9, r25	; 0x09
     e3e:	25 5c       	subi	r18, 0xC5	; 197
     e40:	3f 4f       	sbci	r19, 0xFF	; 255
     e42:	82 17       	cp	r24, r18
     e44:	93 07       	cpc	r25, r19
     e46:	48 f4       	brcc	.+18     	; 0xe5a <gmtime_r+0x142>
     e48:	6f e1       	ldi	r22, 0x1F	; 31
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	f8 01       	movw	r30, r16
     e56:	85 83       	std	Z+5, r24	; 0x05
     e58:	22 c0       	rjmp	.+68     	; 0xe9e <gmtime_r+0x186>
     e5a:	69 e9       	ldi	r22, 0x99	; 153
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	82 1b       	sub	r24, r18
     e60:	93 0b       	sbc	r25, r19
     e62:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     e66:	dc 01       	movw	r26, r24
     e68:	cb 01       	movw	r24, r22
     e6a:	f8 2e       	mov	r15, r24
     e6c:	ff 0c       	add	r15, r15
     e6e:	ff 0c       	add	r15, r15
     e70:	f8 0e       	add	r15, r24
     e72:	6d e3       	ldi	r22, 0x3D	; 61
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	cd 01       	movw	r24, r26
     e78:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     e7c:	dc 01       	movw	r26, r24
     e7e:	cb 01       	movw	r24, r22
     e80:	e8 2e       	mov	r14, r24
     e82:	ee 0c       	add	r14, r14
     e84:	6f e1       	ldi	r22, 0x1F	; 31
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	cd 01       	movw	r24, r26
     e8a:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     e8e:	dc 01       	movw	r26, r24
     e90:	cb 01       	movw	r24, r22
     e92:	22 e0       	ldi	r18, 0x02	; 2
     e94:	28 0f       	add	r18, r24
     e96:	f2 0e       	add	r15, r18
     e98:	fe 0c       	add	r15, r14
     e9a:	f8 01       	movw	r30, r16
     e9c:	f5 82       	std	Z+5, r15	; 0x05
     e9e:	a3 83       	std	Z+3, r26	; 0x03
     ea0:	f8 01       	movw	r30, r16
     ea2:	12 86       	std	Z+10, r1	; 0x0a
     ea4:	13 86       	std	Z+11, r1	; 0x0b
     ea6:	83 81       	ldd	r24, Z+3	; 0x03
     ea8:	8f 5f       	subi	r24, 0xFF	; 255
     eaa:	83 83       	std	Z+3, r24	; 0x03
     eac:	28 96       	adiw	r28, 0x08	; 8
     eae:	cd bf       	out	0x3d, r28	; 61
     eb0:	de bf       	out	0x3e, r29	; 62
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	1f 91       	pop	r17
     eb8:	0f 91       	pop	r16
     eba:	ff 90       	pop	r15
     ebc:	ef 90       	pop	r14
     ebe:	df 90       	pop	r13
     ec0:	cf 90       	pop	r12
     ec2:	08 95       	ret

00000ec4 <iso_week_date_r>:
     ec4:	cf 92       	push	r12
     ec6:	df 92       	push	r13
     ec8:	ef 92       	push	r14
     eca:	ff 92       	push	r15
     ecc:	0f 93       	push	r16
     ece:	1f 93       	push	r17
     ed0:	cf 93       	push	r28
     ed2:	df 93       	push	r29
     ed4:	8c 01       	movw	r16, r24
     ed6:	7b 01       	movw	r14, r22
     ed8:	ea 01       	movw	r28, r20
     eda:	88 83       	st	Y, r24
     edc:	99 83       	std	Y+1, r25	; 0x01
     ede:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <is_leap_year>
     ee2:	28 2f       	mov	r18, r24
     ee4:	a8 01       	movw	r20, r16
     ee6:	40 5d       	subi	r20, 0xD0	; 208
     ee8:	57 40       	sbci	r21, 0x07	; 7
     eea:	6d e6       	ldi	r22, 0x6D	; 109
     eec:	71 e0       	ldi	r23, 0x01	; 1
     eee:	46 9f       	mul	r20, r22
     ef0:	c0 01       	movw	r24, r0
     ef2:	47 9f       	mul	r20, r23
     ef4:	90 0d       	add	r25, r0
     ef6:	56 9f       	mul	r21, r22
     ef8:	90 0d       	add	r25, r0
     efa:	11 24       	eor	r1, r1
     efc:	8e 0d       	add	r24, r14
     efe:	9f 1d       	adc	r25, r15
     f00:	41 15       	cp	r20, r1
     f02:	51 05       	cpc	r21, r1
     f04:	79 f0       	breq	.+30     	; 0xf24 <iso_week_date_r+0x60>
     f06:	ba 01       	movw	r22, r20
     f08:	76 95       	lsr	r23
     f0a:	67 95       	ror	r22
     f0c:	76 95       	lsr	r23
     f0e:	67 95       	ror	r22
     f10:	6f 5f       	subi	r22, 0xFF	; 255
     f12:	7f 4f       	sbci	r23, 0xFF	; 255
     f14:	86 0f       	add	r24, r22
     f16:	97 1f       	adc	r25, r23
     f18:	82 1b       	sub	r24, r18
     f1a:	91 09       	sbc	r25, r1
     f1c:	45 36       	cpi	r20, 0x65	; 101
     f1e:	51 05       	cpc	r21, r1
     f20:	08 f0       	brcs	.+2      	; 0xf24 <iso_week_date_r+0x60>
     f22:	01 97       	sbiw	r24, 0x01	; 1
     f24:	06 96       	adiw	r24, 0x06	; 6
     f26:	67 e0       	ldi	r22, 0x07	; 7
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	0e 94 86 74 	call	0xe90c	; 0xe90c <__udivmodhi4>
     f2e:	6c 01       	movw	r12, r24
     f30:	89 2b       	or	r24, r25
     f32:	19 f4       	brne	.+6      	; 0xf3a <iso_week_date_r+0x76>
     f34:	87 e0       	ldi	r24, 0x07	; 7
     f36:	c8 2e       	mov	r12, r24
     f38:	d1 2c       	mov	r13, r1
     f3a:	cc 82       	std	Y+4, r12	; 0x04
     f3c:	dd 82       	std	Y+5, r13	; 0x05
     f3e:	c7 01       	movw	r24, r14
     f40:	0b 96       	adiw	r24, 0x0b	; 11
     f42:	8c 19       	sub	r24, r12
     f44:	9d 09       	sbc	r25, r13
     f46:	67 e0       	ldi	r22, 0x07	; 7
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     f4e:	65 33       	cpi	r22, 0x35	; 53
     f50:	71 05       	cpc	r23, r1
     f52:	b1 f4       	brne	.+44     	; 0xf80 <iso_week_date_r+0xbc>
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	c8 1a       	sub	r12, r24
     f58:	d1 08       	sbc	r13, r1
     f5a:	ec 18       	sub	r14, r12
     f5c:	fd 08       	sbc	r15, r13
     f5e:	82 2f       	mov	r24, r18
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	84 59       	subi	r24, 0x94	; 148
     f64:	9e 4f       	sbci	r25, 0xFE	; 254
     f66:	23 e0       	ldi	r18, 0x03	; 3
     f68:	e2 0e       	add	r14, r18
     f6a:	f1 1c       	adc	r15, r1
     f6c:	8e 15       	cp	r24, r14
     f6e:	9f 05       	cpc	r25, r15
     f70:	3c f4       	brge	.+14     	; 0xf80 <iso_week_date_r+0xbc>
     f72:	88 81       	ld	r24, Y
     f74:	99 81       	ldd	r25, Y+1	; 0x01
     f76:	01 96       	adiw	r24, 0x01	; 1
     f78:	88 83       	st	Y, r24
     f7a:	99 83       	std	Y+1, r25	; 0x01
     f7c:	61 e0       	ldi	r22, 0x01	; 1
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	6a 83       	std	Y+2, r22	; 0x02
     f82:	7b 83       	std	Y+3, r23	; 0x03
     f84:	67 2b       	or	r22, r23
     f86:	79 f4       	brne	.+30     	; 0xfa6 <iso_week_date_r+0xe2>
     f88:	01 50       	subi	r16, 0x01	; 1
     f8a:	11 09       	sbc	r17, r1
     f8c:	c8 01       	movw	r24, r16
     f8e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <is_leap_year>
     f92:	68 2f       	mov	r22, r24
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	64 59       	subi	r22, 0x94	; 148
     f98:	7e 4f       	sbci	r23, 0xFE	; 254
     f9a:	ae 01       	movw	r20, r28
     f9c:	c8 01       	movw	r24, r16
     f9e:	0e 94 62 07 	call	0xec4	; 0xec4 <iso_week_date_r>
     fa2:	cc 82       	std	Y+4, r12	; 0x04
     fa4:	dd 82       	std	Y+5, r13	; 0x05
     fa6:	df 91       	pop	r29
     fa8:	cf 91       	pop	r28
     faa:	1f 91       	pop	r17
     fac:	0f 91       	pop	r16
     fae:	ff 90       	pop	r15
     fb0:	ef 90       	pop	r14
     fb2:	df 90       	pop	r13
     fb4:	cf 90       	pop	r12
     fb6:	08 95       	ret

00000fb8 <__print_lz>:
     fb8:	1f 93       	push	r17
     fba:	cf 93       	push	r28
     fbc:	df 93       	push	r29
     fbe:	eb 01       	movw	r28, r22
     fc0:	14 2f       	mov	r17, r20
     fc2:	6a e0       	ldi	r22, 0x0A	; 10
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
     fca:	60 5d       	subi	r22, 0xD0	; 208
     fcc:	68 83       	st	Y, r22
     fce:	80 5d       	subi	r24, 0xD0	; 208
     fd0:	89 83       	std	Y+1, r24	; 0x01
     fd2:	1a 83       	std	Y+2, r17	; 0x02
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	1f 91       	pop	r17
     fda:	08 95       	ret

00000fdc <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	cd b7       	in	r28, 0x3d	; 61
     fe2:	de b7       	in	r29, 0x3e	; 62
	system_init();
     fe4:	0e 94 8b 3a 	call	0x7516	; 0x7516 <system_init>
}
     fe8:	00 00       	nop
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	08 95       	ret

00000ff0 <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
     ff0:	1f 92       	push	r1
     ff2:	0f 92       	push	r0
     ff4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     ff8:	0f 92       	push	r0
     ffa:	11 24       	eor	r1, r1
     ffc:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1000:	0f 92       	push	r0
    1002:	2f 93       	push	r18
    1004:	8f 93       	push	r24
    1006:	9f 93       	push	r25
    1008:	ef 93       	push	r30
    100a:	ff 93       	push	r31
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    1014:	80 e2       	ldi	r24, 0x20	; 32
    1016:	9b e0       	ldi	r25, 0x0B	; 11
    1018:	fc 01       	movw	r30, r24
    101a:	86 81       	ldd	r24, Z+6	; 0x06
    101c:	88 2f       	mov	r24, r24
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	81 70       	andi	r24, 0x01	; 1
    1022:	99 27       	eor	r25, r25
    1024:	21 e0       	ldi	r18, 0x01	; 1
    1026:	89 2b       	or	r24, r25
    1028:	09 f4       	brne	.+2      	; 0x102c <__vector_30+0x3c>
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	22 23       	and	r18, r18
    102e:	29 f0       	breq	.+10     	; 0x103a <__vector_30+0x4a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
    1030:	80 e2       	ldi	r24, 0x20	; 32
    1032:	9b e0       	ldi	r25, 0x0B	; 11
    1034:	21 e0       	ldi	r18, 0x01	; 1
    1036:	fc 01       	movw	r30, r24
    1038:	26 83       	std	Z+6, r18	; 0x06
    }
}
    103a:	00 00       	nop
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	ff 91       	pop	r31
    1042:	ef 91       	pop	r30
    1044:	9f 91       	pop	r25
    1046:	8f 91       	pop	r24
    1048:	2f 91       	pop	r18
    104a:	0f 90       	pop	r0
    104c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1050:	0f 90       	pop	r0
    1052:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1056:	0f 90       	pop	r0
    1058:	1f 90       	pop	r1
    105a:	18 95       	reti

0000105c <__vector_19>:

ISR(USART0_RXC_vect)
{
    105c:	1f 92       	push	r1
    105e:	0f 92       	push	r0
    1060:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1064:	0f 92       	push	r0
    1066:	11 24       	eor	r1, r1
    1068:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    106c:	0f 92       	push	r0
    106e:	2f 93       	push	r18
    1070:	3f 93       	push	r19
    1072:	4f 93       	push	r20
    1074:	5f 93       	push	r21
    1076:	6f 93       	push	r22
    1078:	7f 93       	push	r23
    107a:	8f 93       	push	r24
    107c:	9f 93       	push	r25
    107e:	af 93       	push	r26
    1080:	bf 93       	push	r27
    1082:	ef 93       	push	r30
    1084:	ff 93       	push	r31
    1086:	cf 93       	push	r28
    1088:	df 93       	push	r29
    108a:	1f 92       	push	r1
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    1090:	0e 94 11 6d 	call	0xda22	; 0xda22 <USART0_get_data>
    1094:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    1096:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    109a:	88 23       	and	r24, r24
    109c:	19 f4       	brne	.+6      	; 0x10a4 <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    109e:	89 81       	ldd	r24, Y+1	; 0x01
    10a0:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    10a4:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    10a8:	88 23       	and	r24, r24
    10aa:	19 f4       	brne	.+6      	; 0x10b2 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    10ac:	89 81       	ldd	r24, Y+1	; 0x01
    10ae:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z9serial_Rxh>
	}
}
    10b2:	00 00       	nop
    10b4:	0f 90       	pop	r0
    10b6:	df 91       	pop	r29
    10b8:	cf 91       	pop	r28
    10ba:	ff 91       	pop	r31
    10bc:	ef 91       	pop	r30
    10be:	bf 91       	pop	r27
    10c0:	af 91       	pop	r26
    10c2:	9f 91       	pop	r25
    10c4:	8f 91       	pop	r24
    10c6:	7f 91       	pop	r23
    10c8:	6f 91       	pop	r22
    10ca:	5f 91       	pop	r21
    10cc:	4f 91       	pop	r20
    10ce:	3f 91       	pop	r19
    10d0:	2f 91       	pop	r18
    10d2:	0f 90       	pop	r0
    10d4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10d8:	0f 90       	pop	r0
    10da:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10de:	0f 90       	pop	r0
    10e0:	1f 90       	pop	r1
    10e2:	18 95       	reti

000010e4 <__vector_55>:

ISR(USART4_RXC_vect)
{
    10e4:	1f 92       	push	r1
    10e6:	0f 92       	push	r0
    10e8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10ec:	0f 92       	push	r0
    10ee:	11 24       	eor	r1, r1
    10f0:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10f4:	0f 92       	push	r0
    10f6:	2f 93       	push	r18
    10f8:	3f 93       	push	r19
    10fa:	4f 93       	push	r20
    10fc:	5f 93       	push	r21
    10fe:	6f 93       	push	r22
    1100:	7f 93       	push	r23
    1102:	8f 93       	push	r24
    1104:	9f 93       	push	r25
    1106:	af 93       	push	r26
    1108:	bf 93       	push	r27
    110a:	ef 93       	push	r30
    110c:	ff 93       	push	r31
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	1f 92       	push	r1
    1114:	cd b7       	in	r28, 0x3d	; 61
    1116:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    1118:	0e 94 24 6e 	call	0xdc48	; 0xdc48 <USART4_get_data>
    111c:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    111e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1122:	84 30       	cpi	r24, 0x04	; 4
    1124:	19 f4       	brne	.+6      	; 0x112c <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    1126:	89 81       	ldd	r24, Y+1	; 0x01
    1128:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    112c:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    1130:	84 30       	cpi	r24, 0x04	; 4
    1132:	19 f4       	brne	.+6      	; 0x113a <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    1134:	89 81       	ldd	r24, Y+1	; 0x01
    1136:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z9serial_Rxh>
	}
}
    113a:	00 00       	nop
    113c:	0f 90       	pop	r0
    113e:	df 91       	pop	r29
    1140:	cf 91       	pop	r28
    1142:	ff 91       	pop	r31
    1144:	ef 91       	pop	r30
    1146:	bf 91       	pop	r27
    1148:	af 91       	pop	r26
    114a:	9f 91       	pop	r25
    114c:	8f 91       	pop	r24
    114e:	7f 91       	pop	r23
    1150:	6f 91       	pop	r22
    1152:	5f 91       	pop	r21
    1154:	4f 91       	pop	r20
    1156:	3f 91       	pop	r19
    1158:	2f 91       	pop	r18
    115a:	0f 90       	pop	r0
    115c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1160:	0f 90       	pop	r0
    1162:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1166:	0f 90       	pop	r0
    1168:	1f 90       	pop	r1
    116a:	18 95       	reti

0000116c <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	2a 97       	sbiw	r28, 0x0a	; 10
    1176:	cd bf       	out	0x3d, r28	; 61
    1178:	de bf       	out	0x3e, r29	; 62
    117a:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    117c:	80 91 a8 46 	lds	r24, 0x46A8	; 0x8046a8 <__data_end>
    1180:	90 91 a9 46 	lds	r25, 0x46A9	; 0x8046a9 <__data_end+0x1>
    1184:	89 2b       	or	r24, r25
    1186:	31 f4       	brne	.+12     	; 0x1194 <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    1188:	0e 94 87 5b 	call	0xb70e	; 0xb70e <nextEmptySBRxBuffer>
    118c:	80 93 a8 46 	sts	0x46A8, r24	; 0x8046a8 <__data_end>
    1190:	90 93 a9 46 	sts	0x46A9, r25	; 0x8046a9 <__data_end+0x1>
	}

	if(buff)
    1194:	80 91 a8 46 	lds	r24, 0x46A8	; 0x8046a8 <__data_end>
    1198:	90 91 a9 46 	lds	r25, 0x46A9	; 0x8046a9 <__data_end+0x1>
    119c:	89 2b       	or	r24, r25
    119e:	09 f4       	brne	.+2      	; 0x11a2 <_Z9serial_Rxh+0x36>
    11a0:	5e c2       	rjmp	.+1212   	; 0x165e <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    11a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    11a4:	88 2f       	mov	r24, r24
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	0e 94 7c 76 	call	0xecf8	; 0xecf8 <toupper>
    11ac:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    11ae:	80 91 aa 46 	lds	r24, 0x46AA	; 0x8046aa <_ZZ9serial_RxhE11ignoreCount>
    11b2:	88 23       	and	r24, r24
    11b4:	39 f0       	breq	.+14     	; 0x11c4 <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    11b6:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    11b8:	80 91 aa 46 	lds	r24, 0x46AA	; 0x8046aa <_ZZ9serial_RxhE11ignoreCount>
    11bc:	81 50       	subi	r24, 0x01	; 1
    11be:	80 93 aa 46 	sts	0x46AA, r24	; 0x8046aa <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11c2:	4d c2       	rjmp	.+1178   	; 0x165e <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    11c4:	8a 85       	ldd	r24, Y+10	; 0x0a
    11c6:	8b 31       	cpi	r24, 0x1B	; 27
    11c8:	91 f4       	brne	.+36     	; 0x11ee <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    11ca:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    11cc:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    11d0:	84 31       	cpi	r24, 0x14	; 20
    11d2:	48 f4       	brcc	.+18     	; 0x11e6 <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    11d4:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    11d8:	88 2f       	mov	r24, r24
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	84 55       	subi	r24, 0x54	; 84
    11de:	99 4b       	sbci	r25, 0xB9	; 185
    11e0:	fc 01       	movw	r30, r24
    11e2:	80 81       	ld	r24, Z
    11e4:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    11e6:	82 e0       	ldi	r24, 0x02	; 2
    11e8:	80 93 aa 46 	sts	0x46AA, r24	; 0x8046aa <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11ec:	38 c2       	rjmp	.+1136   	; 0x165e <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    11ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    11f0:	8d 30       	cpi	r24, 0x0D	; 13
    11f2:	09 f0       	breq	.+2      	; 0x11f6 <_Z9serial_Rxh+0x8a>
    11f4:	60 c0       	rjmp	.+192    	; 0x12b6 <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    11f6:	80 91 de 46 	lds	r24, 0x46DE	; 0x8046de <_ZZ9serial_RxhE13receiving_msg>
    11fa:	88 23       	and	r24, r24
    11fc:	09 f4       	brne	.+2      	; 0x1200 <_Z9serial_Rxh+0x94>
    11fe:	41 c0       	rjmp	.+130    	; 0x1282 <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    1200:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    1204:	88 23       	and	r24, r24
    1206:	d1 f1       	breq	.+116    	; 0x127c <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    1208:	80 91 a8 46 	lds	r24, 0x46A8	; 0x8046a8 <__data_end>
    120c:	90 91 a9 46 	lds	r25, 0x46A9	; 0x8046a9 <__data_end+0x1>
    1210:	22 e0       	ldi	r18, 0x02	; 2
    1212:	fc 01       	movw	r30, r24
    1214:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    1216:	80 91 a8 46 	lds	r24, 0x46A8	; 0x8046a8 <__data_end>
    121a:	90 91 a9 46 	lds	r25, 0x46A9	; 0x8046a9 <__data_end+0x1>
    121e:	20 91 df 46 	lds	r18, 0x46DF	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    1222:	30 91 e0 46 	lds	r19, 0x46E0	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    1226:	fc 01       	movw	r30, r24
    1228:	21 83       	std	Z+1, r18	; 0x01
    122a:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    122c:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    1230:	88 23       	and	r24, r24
    1232:	e1 f0       	breq	.+56     	; 0x126c <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    1234:	40 91 a8 46 	lds	r20, 0x46A8	; 0x8046a8 <__data_end>
    1238:	50 91 a9 46 	lds	r21, 0x46A9	; 0x8046a9 <__data_end+0x1>
    123c:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    1240:	88 2f       	mov	r24, r24
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	bc 01       	movw	r22, r24
    1246:	61 50       	subi	r22, 0x01	; 1
    1248:	71 09       	sbc	r23, r1
    124a:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    124e:	88 2f       	mov	r24, r24
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	e4 e1       	ldi	r30, 0x14	; 20
    1254:	e6 9f       	mul	r30, r22
    1256:	90 01       	movw	r18, r0
    1258:	e7 9f       	mul	r30, r23
    125a:	30 0d       	add	r19, r0
    125c:	11 24       	eor	r1, r1
    125e:	24 0f       	add	r18, r20
    1260:	35 1f       	adc	r19, r21
    1262:	82 0f       	add	r24, r18
    1264:	93 1f       	adc	r25, r19
    1266:	03 96       	adiw	r24, 0x03	; 3
    1268:	fc 01       	movw	r30, r24
    126a:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    126c:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    1270:	88 2f       	mov	r24, r24
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	84 55       	subi	r24, 0x54	; 84
    1276:	99 4b       	sbci	r25, 0xB9	; 185
    1278:	fc 01       	movw	r30, r24
    127a:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    127c:	0e 94 78 5d 	call	0xbaf0	; 0xbaf0 <sb_send_NewLine>
    1280:	09 c0       	rjmp	.+18     	; 0x1294 <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    1282:	80 91 a8 46 	lds	r24, 0x46A8	; 0x8046a8 <__data_end>
    1286:	90 91 a9 46 	lds	r25, 0x46A9	; 0x8046a9 <__data_end+0x1>
    128a:	2f ef       	ldi	r18, 0xFF	; 255
    128c:	3f ef       	ldi	r19, 0xFF	; 255
    128e:	fc 01       	movw	r30, r24
    1290:	21 83       	std	Z+1, r18	; 0x01
    1292:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    1294:	10 92 ab 46 	sts	0x46AB, r1	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    1298:	10 92 e2 46 	sts	0x46E2, r1	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    129c:	10 92 df 46 	sts	0x46DF, r1	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    12a0:	10 92 e0 46 	sts	0x46E0, r1	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    12a4:	10 92 e1 46 	sts	0x46E1, r1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    12a8:	10 92 a8 46 	sts	0x46A8, r1	; 0x8046a8 <__data_end>
    12ac:	10 92 a9 46 	sts	0x46A9, r1	; 0x8046a9 <__data_end+0x1>

			receiving_msg = false;
    12b0:	10 92 de 46 	sts	0x46DE, r1	; 0x8046de <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    12b4:	d4 c1       	rjmp	.+936    	; 0x165e <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    12b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    12b8:	88 23       	and	r24, r24
    12ba:	09 f4       	brne	.+2      	; 0x12be <_Z9serial_Rxh+0x152>
    12bc:	d0 c1       	rjmp	.+928    	; 0x165e <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    12be:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    12c2:	88 2f       	mov	r24, r24
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	84 55       	subi	r24, 0x54	; 84
    12c8:	99 4b       	sbci	r25, 0xB9	; 185
    12ca:	2a 85       	ldd	r18, Y+10	; 0x0a
    12cc:	fc 01       	movw	r30, r24
    12ce:	20 83       	st	Z, r18

			if(charIndex)
    12d0:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    12d4:	88 23       	and	r24, r24
    12d6:	09 f4       	brne	.+2      	; 0x12da <_Z9serial_Rxh+0x16e>
    12d8:	7c c1       	rjmp	.+760    	; 0x15d2 <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    12da:	8a 85       	ldd	r24, Y+10	; 0x0a
    12dc:	8f 37       	cpi	r24, 0x7F	; 127
    12de:	09 f0       	breq	.+2      	; 0x12e2 <_Z9serial_Rxh+0x176>
    12e0:	a1 c0       	rjmp	.+322    	; 0x1424 <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    12e2:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    12e6:	81 50       	subi	r24, 0x01	; 1
    12e8:	80 93 ab 46 	sts	0x46AB, r24	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    12ec:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    12f0:	88 23       	and	r24, r24
    12f2:	29 f5       	brne	.+74     	; 0x133e <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    12f4:	20 91 df 46 	lds	r18, 0x46DF	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    12f8:	30 91 e0 46 	lds	r19, 0x46E0	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    12fc:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    1300:	88 2f       	mov	r24, r24
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	84 55       	subi	r24, 0x54	; 84
    1306:	99 4b       	sbci	r25, 0xB9	; 185
    1308:	fc 01       	movw	r30, r24
    130a:	80 81       	ld	r24, Z
    130c:	88 2f       	mov	r24, r24
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	a9 01       	movw	r20, r18
    1312:	48 1b       	sub	r20, r24
    1314:	59 0b       	sbc	r21, r25
    1316:	ca 01       	movw	r24, r20
    1318:	80 93 df 46 	sts	0x46DF, r24	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    131c:	90 93 e0 46 	sts	0x46E0, r25	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    1320:	80 91 df 46 	lds	r24, 0x46DF	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    1324:	90 91 e0 46 	lds	r25, 0x46E0	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    1328:	2a e0       	ldi	r18, 0x0A	; 10
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	b9 01       	movw	r22, r18
    132e:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
    1332:	cb 01       	movw	r24, r22
    1334:	80 93 df 46 	sts	0x46DF, r24	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    1338:	90 93 e0 46 	sts	0x46E0, r25	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    133c:	63 c0       	rjmp	.+198    	; 0x1404 <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    133e:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    1342:	88 23       	and	r24, r24
    1344:	11 f1       	breq	.+68     	; 0x138a <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    1346:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    134a:	81 50       	subi	r24, 0x01	; 1
    134c:	80 93 e2 46 	sts	0x46E2, r24	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    1350:	40 91 a8 46 	lds	r20, 0x46A8	; 0x8046a8 <__data_end>
    1354:	50 91 a9 46 	lds	r21, 0x46A9	; 0x8046a9 <__data_end+0x1>
    1358:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    135c:	88 2f       	mov	r24, r24
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	bc 01       	movw	r22, r24
    1362:	61 50       	subi	r22, 0x01	; 1
    1364:	71 09       	sbc	r23, r1
    1366:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    136a:	88 2f       	mov	r24, r24
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	e4 e1       	ldi	r30, 0x14	; 20
    1370:	e6 9f       	mul	r30, r22
    1372:	90 01       	movw	r18, r0
    1374:	e7 9f       	mul	r30, r23
    1376:	30 0d       	add	r19, r0
    1378:	11 24       	eor	r1, r1
    137a:	24 0f       	add	r18, r20
    137c:	35 1f       	adc	r19, r21
    137e:	82 0f       	add	r24, r18
    1380:	93 1f       	adc	r25, r19
    1382:	03 96       	adiw	r24, 0x03	; 3
    1384:	fc 01       	movw	r30, r24
    1386:	10 82       	st	Z, r1
    1388:	3d c0       	rjmp	.+122    	; 0x1404 <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    138a:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    138e:	88 2f       	mov	r24, r24
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	84 55       	subi	r24, 0x54	; 84
    1394:	99 4b       	sbci	r25, 0xB9	; 185
    1396:	fc 01       	movw	r30, r24
    1398:	80 81       	ld	r24, Z
    139a:	80 32       	cpi	r24, 0x20	; 32
    139c:	d9 f4       	brne	.+54     	; 0x13d4 <_Z9serial_Rxh+0x268>
					{
						field_index--;
    139e:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    13a2:	81 50       	subi	r24, 0x01	; 1
    13a4:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    13a8:	20 91 a8 46 	lds	r18, 0x46A8	; 0x8046a8 <__data_end>
    13ac:	30 91 a9 46 	lds	r19, 0x46A9	; 0x8046a9 <__data_end+0x1>
    13b0:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    13b4:	48 2f       	mov	r20, r24
    13b6:	50 e0       	ldi	r21, 0x00	; 0
    13b8:	64 e1       	ldi	r22, 0x14	; 20
    13ba:	64 9f       	mul	r22, r20
    13bc:	c0 01       	movw	r24, r0
    13be:	65 9f       	mul	r22, r21
    13c0:	90 0d       	add	r25, r0
    13c2:	11 24       	eor	r1, r1
    13c4:	03 96       	adiw	r24, 0x03	; 3
    13c6:	82 0f       	add	r24, r18
    13c8:	93 1f       	adc	r25, r19
    13ca:	0e 94 a8 76 	call	0xed50	; 0xed50 <strlen>
    13ce:	80 93 e2 46 	sts	0x46E2, r24	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    13d2:	18 c0       	rjmp	.+48     	; 0x1404 <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    13d4:	20 91 a8 46 	lds	r18, 0x46A8	; 0x8046a8 <__data_end>
    13d8:	30 91 a9 46 	lds	r19, 0x46A9	; 0x8046a9 <__data_end+0x1>
    13dc:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    13e0:	48 2f       	mov	r20, r24
    13e2:	50 e0       	ldi	r21, 0x00	; 0
    13e4:	64 e1       	ldi	r22, 0x14	; 20
    13e6:	64 9f       	mul	r22, r20
    13e8:	c0 01       	movw	r24, r0
    13ea:	65 9f       	mul	r22, r21
    13ec:	90 0d       	add	r25, r0
    13ee:	11 24       	eor	r1, r1
    13f0:	82 0f       	add	r24, r18
    13f2:	93 1f       	adc	r25, r19
    13f4:	03 96       	adiw	r24, 0x03	; 3
    13f6:	fc 01       	movw	r30, r24
    13f8:	10 82       	st	Z, r1
						field_index--;
    13fa:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    13fe:	81 50       	subi	r24, 0x01	; 1
    1400:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    1404:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    1408:	88 2f       	mov	r24, r24
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	84 55       	subi	r24, 0x54	; 84
    140e:	99 4b       	sbci	r25, 0xB9	; 185
    1410:	fc 01       	movw	r30, r24
    1412:	10 82       	st	Z, r1

					if(charIndex == 0)
    1414:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    1418:	88 23       	and	r24, r24
    141a:	09 f0       	breq	.+2      	; 0x141e <_Z9serial_Rxh+0x2b2>
    141c:	1a c1       	rjmp	.+564    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    141e:	10 92 de 46 	sts	0x46DE, r1	; 0x8046de <_ZZ9serial_RxhE13receiving_msg>
    1422:	17 c1       	rjmp	.+558    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    1424:	8a 85       	ldd	r24, Y+10	; 0x0a
    1426:	80 32       	cpi	r24, 0x20	; 32
    1428:	09 f0       	breq	.+2      	; 0x142c <_Z9serial_Rxh+0x2c0>
    142a:	55 c0       	rjmp	.+170    	; 0x14d6 <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    142c:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    1430:	88 2f       	mov	r24, r24
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	01 97       	sbiw	r24, 0x01	; 1
    1436:	84 55       	subi	r24, 0x54	; 84
    1438:	99 4b       	sbci	r25, 0xB9	; 185
    143a:	fc 01       	movw	r30, r24
    143c:	80 81       	ld	r24, Z
    143e:	80 32       	cpi	r24, 0x20	; 32
    1440:	39 f0       	breq	.+14     	; 0x1450 <_Z9serial_Rxh+0x2e4>
    1442:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    1446:	88 2f       	mov	r24, r24
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	01 96       	adiw	r24, 0x01	; 1
    144c:	03 97       	sbiw	r24, 0x03	; 3
    144e:	14 f0       	brlt	.+4      	; 0x1454 <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    1450:	1a 86       	std	Y+10, r1	; 0x0a
    1452:	ff c0       	rjmp	.+510    	; 0x1652 <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    1454:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    1458:	88 23       	and	r24, r24
    145a:	e1 f0       	breq	.+56     	; 0x1494 <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    145c:	40 91 a8 46 	lds	r20, 0x46A8	; 0x8046a8 <__data_end>
    1460:	50 91 a9 46 	lds	r21, 0x46A9	; 0x8046a9 <__data_end+0x1>
    1464:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    1468:	88 2f       	mov	r24, r24
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	bc 01       	movw	r22, r24
    146e:	61 50       	subi	r22, 0x01	; 1
    1470:	71 09       	sbc	r23, r1
    1472:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    1476:	88 2f       	mov	r24, r24
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	e4 e1       	ldi	r30, 0x14	; 20
    147c:	e6 9f       	mul	r30, r22
    147e:	90 01       	movw	r18, r0
    1480:	e7 9f       	mul	r30, r23
    1482:	30 0d       	add	r19, r0
    1484:	11 24       	eor	r1, r1
    1486:	24 0f       	add	r18, r20
    1488:	35 1f       	adc	r19, r21
    148a:	82 0f       	add	r24, r18
    148c:	93 1f       	adc	r25, r19
    148e:	03 96       	adiw	r24, 0x03	; 3
    1490:	fc 01       	movw	r30, r24
    1492:	10 82       	st	Z, r1
							}

							field_index++;
    1494:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    1498:	8f 5f       	subi	r24, 0xFF	; 255
    149a:	80 93 e1 46 	sts	0x46E1, r24	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    149e:	10 92 e2 46 	sts	0x46E2, r1	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    14a2:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    14a6:	88 2f       	mov	r24, r24
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	01 96       	adiw	r24, 0x01	; 1
    14ac:	8a 83       	std	Y+2, r24	; 0x02
    14ae:	9b 83       	std	Y+3, r25	; 0x03
    14b0:	81 e3       	ldi	r24, 0x31	; 49
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	8c 83       	std	Y+4, r24	; 0x04
    14b6:	9d 83       	std	Y+5, r25	; 0x05
    14b8:	2a 81       	ldd	r18, Y+2	; 0x02
    14ba:	3b 81       	ldd	r19, Y+3	; 0x03
    14bc:	8c 81       	ldd	r24, Y+4	; 0x04
    14be:	9d 81       	ldd	r25, Y+5	; 0x05
    14c0:	28 17       	cp	r18, r24
    14c2:	39 07       	cpc	r19, r25
    14c4:	1c f4       	brge	.+6      	; 0x14cc <_Z9serial_Rxh+0x360>
    14c6:	8a 81       	ldd	r24, Y+2	; 0x02
    14c8:	9b 81       	ldd	r25, Y+3	; 0x03
    14ca:	02 c0       	rjmp	.+4      	; 0x14d0 <_Z9serial_Rxh+0x364>
    14cc:	8c 81       	ldd	r24, Y+4	; 0x04
    14ce:	9d 81       	ldd	r25, Y+5	; 0x05
    14d0:	80 93 ab 46 	sts	0x46AB, r24	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    14d4:	be c0       	rjmp	.+380    	; 0x1652 <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    14d6:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    14da:	85 31       	cpi	r24, 0x15	; 21
    14dc:	08 f0       	brcs	.+2      	; 0x14e0 <_Z9serial_Rxh+0x374>
    14de:	77 c0       	rjmp	.+238    	; 0x15ce <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    14e0:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    14e4:	88 23       	and	r24, r24
    14e6:	e1 f4       	brne	.+56     	; 0x1520 <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    14e8:	80 91 df 46 	lds	r24, 0x46DF	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    14ec:	90 91 e0 46 	lds	r25, 0x46E0	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    14f0:	88 0f       	add	r24, r24
    14f2:	99 1f       	adc	r25, r25
    14f4:	9c 01       	movw	r18, r24
    14f6:	22 0f       	add	r18, r18
    14f8:	33 1f       	adc	r19, r19
    14fa:	22 0f       	add	r18, r18
    14fc:	33 1f       	adc	r19, r19
    14fe:	28 0f       	add	r18, r24
    1500:	39 1f       	adc	r19, r25
    1502:	8a 85       	ldd	r24, Y+10	; 0x0a
    1504:	88 2f       	mov	r24, r24
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	82 0f       	add	r24, r18
    150a:	93 1f       	adc	r25, r19
    150c:	80 93 df 46 	sts	0x46DF, r24	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    1510:	90 93 e0 46 	sts	0x46E0, r25	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    1514:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    1518:	8f 5f       	subi	r24, 0xFF	; 255
    151a:	80 93 e2 46 	sts	0x46E2, r24	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    151e:	3d c0       	rjmp	.+122    	; 0x159a <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    1520:	40 91 a8 46 	lds	r20, 0x46A8	; 0x8046a8 <__data_end>
    1524:	50 91 a9 46 	lds	r21, 0x46A9	; 0x8046a9 <__data_end+0x1>
    1528:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    152c:	88 2f       	mov	r24, r24
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	bc 01       	movw	r22, r24
    1532:	61 50       	subi	r22, 0x01	; 1
    1534:	71 09       	sbc	r23, r1
    1536:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    153a:	91 e0       	ldi	r25, 0x01	; 1
    153c:	98 0f       	add	r25, r24
    153e:	90 93 e2 46 	sts	0x46E2, r25	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    1542:	88 2f       	mov	r24, r24
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	e4 e1       	ldi	r30, 0x14	; 20
    1548:	e6 9f       	mul	r30, r22
    154a:	90 01       	movw	r18, r0
    154c:	e7 9f       	mul	r30, r23
    154e:	30 0d       	add	r19, r0
    1550:	11 24       	eor	r1, r1
    1552:	24 0f       	add	r18, r20
    1554:	35 1f       	adc	r19, r21
    1556:	82 0f       	add	r24, r18
    1558:	93 1f       	adc	r25, r19
    155a:	03 96       	adiw	r24, 0x03	; 3
    155c:	2a 85       	ldd	r18, Y+10	; 0x0a
    155e:	fc 01       	movw	r30, r24
    1560:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1562:	40 91 a8 46 	lds	r20, 0x46A8	; 0x8046a8 <__data_end>
    1566:	50 91 a9 46 	lds	r21, 0x46A9	; 0x8046a9 <__data_end+0x1>
    156a:	80 91 e1 46 	lds	r24, 0x46E1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
    156e:	88 2f       	mov	r24, r24
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	bc 01       	movw	r22, r24
    1574:	61 50       	subi	r22, 0x01	; 1
    1576:	71 09       	sbc	r23, r1
    1578:	80 91 e2 46 	lds	r24, 0x46E2	; 0x8046e2 <_ZZ9serial_RxhE9field_len>
    157c:	88 2f       	mov	r24, r24
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	e4 e1       	ldi	r30, 0x14	; 20
    1582:	e6 9f       	mul	r30, r22
    1584:	90 01       	movw	r18, r0
    1586:	e7 9f       	mul	r30, r23
    1588:	30 0d       	add	r19, r0
    158a:	11 24       	eor	r1, r1
    158c:	24 0f       	add	r18, r20
    158e:	35 1f       	adc	r19, r21
    1590:	82 0f       	add	r24, r18
    1592:	93 1f       	adc	r25, r19
    1594:	03 96       	adiw	r24, 0x03	; 3
    1596:	fc 01       	movw	r30, r24
    1598:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    159a:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    159e:	88 2f       	mov	r24, r24
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	01 96       	adiw	r24, 0x01	; 1
    15a4:	8e 83       	std	Y+6, r24	; 0x06
    15a6:	9f 83       	std	Y+7, r25	; 0x07
    15a8:	81 e3       	ldi	r24, 0x31	; 49
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	88 87       	std	Y+8, r24	; 0x08
    15ae:	99 87       	std	Y+9, r25	; 0x09
    15b0:	2e 81       	ldd	r18, Y+6	; 0x06
    15b2:	3f 81       	ldd	r19, Y+7	; 0x07
    15b4:	88 85       	ldd	r24, Y+8	; 0x08
    15b6:	99 85       	ldd	r25, Y+9	; 0x09
    15b8:	28 17       	cp	r18, r24
    15ba:	39 07       	cpc	r19, r25
    15bc:	1c f4       	brge	.+6      	; 0x15c4 <_Z9serial_Rxh+0x458>
    15be:	8e 81       	ldd	r24, Y+6	; 0x06
    15c0:	9f 81       	ldd	r25, Y+7	; 0x07
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <_Z9serial_Rxh+0x45c>
    15c4:	88 85       	ldd	r24, Y+8	; 0x08
    15c6:	99 85       	ldd	r25, Y+9	; 0x09
    15c8:	80 93 ab 46 	sts	0x46AB, r24	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    15cc:	42 c0       	rjmp	.+132    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    15ce:	1a 86       	std	Y+10, r1	; 0x0a
    15d0:	40 c0       	rjmp	.+128    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    15d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    15d4:	8f 37       	cpi	r24, 0x7F	; 127
    15d6:	69 f4       	brne	.+26     	; 0x15f2 <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    15d8:	80 91 df 46 	lds	r24, 0x46DF	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    15dc:	90 91 e0 46 	lds	r25, 0x46E0	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    15e0:	18 16       	cp	r1, r24
    15e2:	19 06       	cpc	r1, r25
    15e4:	0c f0       	brlt	.+2      	; 0x15e8 <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    15e6:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    15e8:	10 92 df 46 	sts	0x46DF, r1	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    15ec:	10 92 e0 46 	sts	0x46E0, r1	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>
    15f0:	30 c0       	rjmp	.+96     	; 0x1652 <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    15f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    15f4:	80 32       	cpi	r24, 0x20	; 32
    15f6:	11 f4       	brne	.+4      	; 0x15fc <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    15f8:	1a 86       	std	Y+10, r1	; 0x0a
    15fa:	2b c0       	rjmp	.+86     	; 0x1652 <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    15fc:	10 92 e1 46 	sts	0x46E1, r1	; 0x8046e1 <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    1600:	8a 85       	ldd	r24, Y+10	; 0x0a
    1602:	88 2f       	mov	r24, r24
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	80 93 df 46 	sts	0x46DF, r24	; 0x8046df <_ZZ9serial_RxhE6msg_ID>
    160a:	90 93 e0 46 	sts	0x46E0, r25	; 0x8046e0 <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    160e:	19 82       	std	Y+1, r1	; 0x01
    1610:	89 81       	ldd	r24, Y+1	; 0x01
    1612:	83 30       	cpi	r24, 0x03	; 3
    1614:	b0 f4       	brcc	.+44     	; 0x1642 <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    1616:	20 91 a8 46 	lds	r18, 0x46A8	; 0x8046a8 <__data_end>
    161a:	30 91 a9 46 	lds	r19, 0x46A9	; 0x8046a9 <__data_end+0x1>
    161e:	89 81       	ldd	r24, Y+1	; 0x01
    1620:	48 2f       	mov	r20, r24
    1622:	50 e0       	ldi	r21, 0x00	; 0
    1624:	64 e1       	ldi	r22, 0x14	; 20
    1626:	64 9f       	mul	r22, r20
    1628:	c0 01       	movw	r24, r0
    162a:	65 9f       	mul	r22, r21
    162c:	90 0d       	add	r25, r0
    162e:	11 24       	eor	r1, r1
    1630:	82 0f       	add	r24, r18
    1632:	93 1f       	adc	r25, r19
    1634:	03 96       	adiw	r24, 0x03	; 3
    1636:	fc 01       	movw	r30, r24
    1638:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    163a:	89 81       	ldd	r24, Y+1	; 0x01
    163c:	8f 5f       	subi	r24, 0xFF	; 255
    163e:	89 83       	std	Y+1, r24	; 0x01
    1640:	e7 cf       	rjmp	.-50     	; 0x1610 <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1642:	81 e0       	ldi	r24, 0x01	; 1
    1644:	80 93 de 46 	sts	0x46DE, r24	; 0x8046de <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    1648:	80 91 ab 46 	lds	r24, 0x46AB	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
    164c:	8f 5f       	subi	r24, 0xFF	; 255
    164e:	80 93 ab 46 	sts	0x46AB, r24	; 0x8046ab <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1652:	8a 85       	ldd	r24, Y+10	; 0x0a
    1654:	88 23       	and	r24, r24
    1656:	19 f0       	breq	.+6      	; 0x165e <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    1658:	8a 85       	ldd	r24, Y+10	; 0x0a
    165a:	0e 94 89 5d 	call	0xbb12	; 0xbb12 <sb_echo_char>
			}
		}
	}	
}
    165e:	00 00       	nop
    1660:	2a 96       	adiw	r28, 0x0a	; 10
    1662:	cd bf       	out	0x3d, r28	; 61
    1664:	de bf       	out	0x3e, r29	; 62
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	08 95       	ret

0000166c <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    166c:	1f 92       	push	r1
    166e:	0f 92       	push	r0
    1670:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1674:	0f 92       	push	r0
    1676:	11 24       	eor	r1, r1
    1678:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    167c:	0f 92       	push	r0
    167e:	2f 93       	push	r18
    1680:	3f 93       	push	r19
    1682:	4f 93       	push	r20
    1684:	5f 93       	push	r21
    1686:	6f 93       	push	r22
    1688:	7f 93       	push	r23
    168a:	8f 93       	push	r24
    168c:	9f 93       	push	r25
    168e:	af 93       	push	r26
    1690:	bf 93       	push	r27
    1692:	ef 93       	push	r30
    1694:	ff 93       	push	r31
    1696:	cf 93       	push	r28
    1698:	df 93       	push	r29
    169a:	cd b7       	in	r28, 0x3d	; 61
    169c:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    169e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    16a2:	88 23       	and	r24, r24
    16a4:	09 f0       	breq	.+2      	; 0x16a8 <__vector_20+0x3c>
    16a6:	45 c0       	rjmp	.+138    	; 0x1732 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    16a8:	80 91 e3 46 	lds	r24, 0x46E3	; 0x8046e3 <_ZZ11__vector_20E4buff>
    16ac:	90 91 e4 46 	lds	r25, 0x46E4	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
    16b0:	89 2b       	or	r24, r25
    16b2:	31 f4       	brne	.+12     	; 0x16c0 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    16b4:	0e 94 4e 52 	call	0xa49c	; 0xa49c <_Z18nextFullLBTxBufferv>
    16b8:	80 93 e3 46 	sts	0x46E3, r24	; 0x8046e3 <_ZZ11__vector_20E4buff>
    16bc:	90 93 e4 46 	sts	0x46E4, r25	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    16c0:	20 91 e3 46 	lds	r18, 0x46E3	; 0x8046e3 <_ZZ11__vector_20E4buff>
    16c4:	30 91 e4 46 	lds	r19, 0x46E4	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
    16c8:	80 91 e5 46 	lds	r24, 0x46E5	; 0x8046e5 <_ZZ11__vector_20E9charIndex>
    16cc:	88 2f       	mov	r24, r24
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	82 0f       	add	r24, r18
    16d2:	93 1f       	adc	r25, r19
    16d4:	fc 01       	movw	r30, r24
    16d6:	80 81       	ld	r24, Z
    16d8:	88 23       	and	r24, r24
    16da:	a9 f0       	breq	.+42     	; 0x1706 <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	98 e0       	ldi	r25, 0x08	; 8
    16e0:	40 91 e3 46 	lds	r20, 0x46E3	; 0x8046e3 <_ZZ11__vector_20E4buff>
    16e4:	50 91 e4 46 	lds	r21, 0x46E4	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
    16e8:	20 91 e5 46 	lds	r18, 0x46E5	; 0x8046e5 <_ZZ11__vector_20E9charIndex>
    16ec:	31 e0       	ldi	r19, 0x01	; 1
    16ee:	32 0f       	add	r19, r18
    16f0:	30 93 e5 46 	sts	0x46E5, r19	; 0x8046e5 <_ZZ11__vector_20E9charIndex>
    16f4:	22 2f       	mov	r18, r18
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	24 0f       	add	r18, r20
    16fa:	35 1f       	adc	r19, r21
    16fc:	f9 01       	movw	r30, r18
    16fe:	20 81       	ld	r18, Z
    1700:	fc 01       	movw	r30, r24
    1702:	22 83       	std	Z+2, r18	; 0x02
    1704:	16 c0       	rjmp	.+44     	; 0x1732 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    1706:	10 92 e5 46 	sts	0x46E5, r1	; 0x8046e5 <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    170a:	80 91 e3 46 	lds	r24, 0x46E3	; 0x8046e3 <_ZZ11__vector_20E4buff>
    170e:	90 91 e4 46 	lds	r25, 0x46E4	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
    1712:	fc 01       	movw	r30, r24
    1714:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1716:	0e 94 4e 52 	call	0xa49c	; 0xa49c <_Z18nextFullLBTxBufferv>
    171a:	80 93 e3 46 	sts	0x46E3, r24	; 0x8046e3 <_ZZ11__vector_20E4buff>
    171e:	90 93 e4 46 	sts	0x46E4, r25	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1722:	80 91 e3 46 	lds	r24, 0x46E3	; 0x8046e3 <_ZZ11__vector_20E4buff>
    1726:	90 91 e4 46 	lds	r25, 0x46E4	; 0x8046e4 <_ZZ11__vector_20E4buff+0x1>
    172a:	89 2b       	or	r24, r25
    172c:	11 f4       	brne	.+4      	; 0x1732 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    172e:	0e 94 93 53 	call	0xa726	; 0xa726 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1732:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    1736:	88 23       	and	r24, r24
    1738:	09 f0       	breq	.+2      	; 0x173c <__vector_20+0xd0>
    173a:	45 c0       	rjmp	.+138    	; 0x17c6 <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    173c:	80 91 e6 46 	lds	r24, 0x46E6	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    1740:	90 91 e7 46 	lds	r25, 0x46E7	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
    1744:	89 2b       	or	r24, r25
    1746:	31 f4       	brne	.+12     	; 0x1754 <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1748:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <nextFullSBTxBuffer>
    174c:	80 93 e6 46 	sts	0x46E6, r24	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    1750:	90 93 e7 46 	sts	0x46E7, r25	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1754:	20 91 e6 46 	lds	r18, 0x46E6	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    1758:	30 91 e7 46 	lds	r19, 0x46E7	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
    175c:	80 91 e8 46 	lds	r24, 0x46E8	; 0x8046e8 <_ZZ11__vector_20E9charIndex_0>
    1760:	88 2f       	mov	r24, r24
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	82 0f       	add	r24, r18
    1766:	93 1f       	adc	r25, r19
    1768:	fc 01       	movw	r30, r24
    176a:	80 81       	ld	r24, Z
    176c:	88 23       	and	r24, r24
    176e:	a9 f0       	breq	.+42     	; 0x179a <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1770:	80 e0       	ldi	r24, 0x00	; 0
    1772:	98 e0       	ldi	r25, 0x08	; 8
    1774:	40 91 e6 46 	lds	r20, 0x46E6	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    1778:	50 91 e7 46 	lds	r21, 0x46E7	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
    177c:	20 91 e8 46 	lds	r18, 0x46E8	; 0x8046e8 <_ZZ11__vector_20E9charIndex_0>
    1780:	31 e0       	ldi	r19, 0x01	; 1
    1782:	32 0f       	add	r19, r18
    1784:	30 93 e8 46 	sts	0x46E8, r19	; 0x8046e8 <_ZZ11__vector_20E9charIndex_0>
    1788:	22 2f       	mov	r18, r18
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	24 0f       	add	r18, r20
    178e:	35 1f       	adc	r19, r21
    1790:	f9 01       	movw	r30, r18
    1792:	20 81       	ld	r18, Z
    1794:	fc 01       	movw	r30, r24
    1796:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1798:	16 c0       	rjmp	.+44     	; 0x17c6 <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    179a:	10 92 e8 46 	sts	0x46E8, r1	; 0x8046e8 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    179e:	80 91 e6 46 	lds	r24, 0x46E6	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    17a2:	90 91 e7 46 	lds	r25, 0x46E7	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
    17a6:	fc 01       	movw	r30, r24
    17a8:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    17aa:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <nextFullSBTxBuffer>
    17ae:	80 93 e6 46 	sts	0x46E6, r24	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    17b2:	90 93 e7 46 	sts	0x46E7, r25	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    17b6:	80 91 e6 46 	lds	r24, 0x46E6	; 0x8046e6 <_ZZ11__vector_20E4buff_0>
    17ba:	90 91 e7 46 	lds	r25, 0x46E7	; 0x8046e7 <_ZZ11__vector_20E4buff_0+0x1>
    17be:	89 2b       	or	r24, r25
    17c0:	11 f4       	brne	.+4      	; 0x17c6 <__vector_20+0x15a>
			{
				serialbus_end_tx();
    17c2:	0e 94 46 5c 	call	0xb88c	; 0xb88c <serialbus_end_tx>
			}
		}
	}
}
    17c6:	00 00       	nop
    17c8:	df 91       	pop	r29
    17ca:	cf 91       	pop	r28
    17cc:	ff 91       	pop	r31
    17ce:	ef 91       	pop	r30
    17d0:	bf 91       	pop	r27
    17d2:	af 91       	pop	r26
    17d4:	9f 91       	pop	r25
    17d6:	8f 91       	pop	r24
    17d8:	7f 91       	pop	r23
    17da:	6f 91       	pop	r22
    17dc:	5f 91       	pop	r21
    17de:	4f 91       	pop	r20
    17e0:	3f 91       	pop	r19
    17e2:	2f 91       	pop	r18
    17e4:	0f 90       	pop	r0
    17e6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17ea:	0f 90       	pop	r0
    17ec:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17f0:	0f 90       	pop	r0
    17f2:	1f 90       	pop	r1
    17f4:	18 95       	reti

000017f6 <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    17f6:	1f 92       	push	r1
    17f8:	0f 92       	push	r0
    17fa:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17fe:	0f 92       	push	r0
    1800:	11 24       	eor	r1, r1
    1802:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1806:	0f 92       	push	r0
    1808:	2f 93       	push	r18
    180a:	3f 93       	push	r19
    180c:	4f 93       	push	r20
    180e:	5f 93       	push	r21
    1810:	6f 93       	push	r22
    1812:	7f 93       	push	r23
    1814:	8f 93       	push	r24
    1816:	9f 93       	push	r25
    1818:	af 93       	push	r26
    181a:	bf 93       	push	r27
    181c:	ef 93       	push	r30
    181e:	ff 93       	push	r31
    1820:	cf 93       	push	r28
    1822:	df 93       	push	r29
    1824:	cd b7       	in	r28, 0x3d	; 61
    1826:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    1828:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    182c:	84 30       	cpi	r24, 0x04	; 4
    182e:	09 f0       	breq	.+2      	; 0x1832 <__vector_56+0x3c>
    1830:	45 c0       	rjmp	.+138    	; 0x18bc <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1832:	80 91 e9 46 	lds	r24, 0x46E9	; 0x8046e9 <_ZZ11__vector_56E4buff>
    1836:	90 91 ea 46 	lds	r25, 0x46EA	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
    183a:	89 2b       	or	r24, r25
    183c:	31 f4       	brne	.+12     	; 0x184a <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    183e:	0e 94 4e 52 	call	0xa49c	; 0xa49c <_Z18nextFullLBTxBufferv>
    1842:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <_ZZ11__vector_56E4buff>
    1846:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    184a:	20 91 e9 46 	lds	r18, 0x46E9	; 0x8046e9 <_ZZ11__vector_56E4buff>
    184e:	30 91 ea 46 	lds	r19, 0x46EA	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
    1852:	80 91 eb 46 	lds	r24, 0x46EB	; 0x8046eb <_ZZ11__vector_56E9charIndex>
    1856:	88 2f       	mov	r24, r24
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	82 0f       	add	r24, r18
    185c:	93 1f       	adc	r25, r19
    185e:	fc 01       	movw	r30, r24
    1860:	80 81       	ld	r24, Z
    1862:	88 23       	and	r24, r24
    1864:	a9 f0       	breq	.+42     	; 0x1890 <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1866:	80 e8       	ldi	r24, 0x80	; 128
    1868:	98 e0       	ldi	r25, 0x08	; 8
    186a:	40 91 e9 46 	lds	r20, 0x46E9	; 0x8046e9 <_ZZ11__vector_56E4buff>
    186e:	50 91 ea 46 	lds	r21, 0x46EA	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
    1872:	20 91 eb 46 	lds	r18, 0x46EB	; 0x8046eb <_ZZ11__vector_56E9charIndex>
    1876:	31 e0       	ldi	r19, 0x01	; 1
    1878:	32 0f       	add	r19, r18
    187a:	30 93 eb 46 	sts	0x46EB, r19	; 0x8046eb <_ZZ11__vector_56E9charIndex>
    187e:	22 2f       	mov	r18, r18
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	24 0f       	add	r18, r20
    1884:	35 1f       	adc	r19, r21
    1886:	f9 01       	movw	r30, r18
    1888:	20 81       	ld	r18, Z
    188a:	fc 01       	movw	r30, r24
    188c:	22 83       	std	Z+2, r18	; 0x02
    188e:	16 c0       	rjmp	.+44     	; 0x18bc <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    1890:	10 92 eb 46 	sts	0x46EB, r1	; 0x8046eb <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    1894:	80 91 e9 46 	lds	r24, 0x46E9	; 0x8046e9 <_ZZ11__vector_56E4buff>
    1898:	90 91 ea 46 	lds	r25, 0x46EA	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
    189c:	fc 01       	movw	r30, r24
    189e:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    18a0:	0e 94 4e 52 	call	0xa49c	; 0xa49c <_Z18nextFullLBTxBufferv>
    18a4:	80 93 e9 46 	sts	0x46E9, r24	; 0x8046e9 <_ZZ11__vector_56E4buff>
    18a8:	90 93 ea 46 	sts	0x46EA, r25	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    18ac:	80 91 e9 46 	lds	r24, 0x46E9	; 0x8046e9 <_ZZ11__vector_56E4buff>
    18b0:	90 91 ea 46 	lds	r25, 0x46EA	; 0x8046ea <_ZZ11__vector_56E4buff+0x1>
    18b4:	89 2b       	or	r24, r25
    18b6:	11 f4       	brne	.+4      	; 0x18bc <__vector_56+0xc6>
			{
				linkbus_end_tx();
    18b8:	0e 94 93 53 	call	0xa726	; 0xa726 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    18bc:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    18c0:	84 30       	cpi	r24, 0x04	; 4
    18c2:	09 f0       	breq	.+2      	; 0x18c6 <__vector_56+0xd0>
    18c4:	45 c0       	rjmp	.+138    	; 0x1950 <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    18c6:	80 91 ec 46 	lds	r24, 0x46EC	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    18ca:	90 91 ed 46 	lds	r25, 0x46ED	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
    18ce:	89 2b       	or	r24, r25
    18d0:	31 f4       	brne	.+12     	; 0x18de <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    18d2:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <nextFullSBTxBuffer>
    18d6:	80 93 ec 46 	sts	0x46EC, r24	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    18da:	90 93 ed 46 	sts	0x46ED, r25	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    18de:	20 91 ec 46 	lds	r18, 0x46EC	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    18e2:	30 91 ed 46 	lds	r19, 0x46ED	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
    18e6:	80 91 ee 46 	lds	r24, 0x46EE	; 0x8046ee <_ZZ11__vector_56E9charIndex_0>
    18ea:	88 2f       	mov	r24, r24
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	82 0f       	add	r24, r18
    18f0:	93 1f       	adc	r25, r19
    18f2:	fc 01       	movw	r30, r24
    18f4:	80 81       	ld	r24, Z
    18f6:	88 23       	and	r24, r24
    18f8:	a9 f0       	breq	.+42     	; 0x1924 <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    18fa:	80 e8       	ldi	r24, 0x80	; 128
    18fc:	98 e0       	ldi	r25, 0x08	; 8
    18fe:	40 91 ec 46 	lds	r20, 0x46EC	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    1902:	50 91 ed 46 	lds	r21, 0x46ED	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
    1906:	20 91 ee 46 	lds	r18, 0x46EE	; 0x8046ee <_ZZ11__vector_56E9charIndex_0>
    190a:	31 e0       	ldi	r19, 0x01	; 1
    190c:	32 0f       	add	r19, r18
    190e:	30 93 ee 46 	sts	0x46EE, r19	; 0x8046ee <_ZZ11__vector_56E9charIndex_0>
    1912:	22 2f       	mov	r18, r18
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	24 0f       	add	r18, r20
    1918:	35 1f       	adc	r19, r21
    191a:	f9 01       	movw	r30, r18
    191c:	20 81       	ld	r18, Z
    191e:	fc 01       	movw	r30, r24
    1920:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1922:	16 c0       	rjmp	.+44     	; 0x1950 <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1924:	10 92 ee 46 	sts	0x46EE, r1	; 0x8046ee <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    1928:	80 91 ec 46 	lds	r24, 0x46EC	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    192c:	90 91 ed 46 	lds	r25, 0x46ED	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
    1930:	fc 01       	movw	r30, r24
    1932:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1934:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <nextFullSBTxBuffer>
    1938:	80 93 ec 46 	sts	0x46EC, r24	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    193c:	90 93 ed 46 	sts	0x46ED, r25	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    1940:	80 91 ec 46 	lds	r24, 0x46EC	; 0x8046ec <_ZZ11__vector_56E4buff_0>
    1944:	90 91 ed 46 	lds	r25, 0x46ED	; 0x8046ed <_ZZ11__vector_56E4buff_0+0x1>
    1948:	89 2b       	or	r24, r25
    194a:	11 f4       	brne	.+4      	; 0x1950 <__vector_56+0x15a>
			{
				serialbus_end_tx();
    194c:	0e 94 46 5c 	call	0xb88c	; 0xb88c <serialbus_end_tx>
			}
		}
	}
}
    1950:	00 00       	nop
    1952:	df 91       	pop	r29
    1954:	cf 91       	pop	r28
    1956:	ff 91       	pop	r31
    1958:	ef 91       	pop	r30
    195a:	bf 91       	pop	r27
    195c:	af 91       	pop	r26
    195e:	9f 91       	pop	r25
    1960:	8f 91       	pop	r24
    1962:	7f 91       	pop	r23
    1964:	6f 91       	pop	r22
    1966:	5f 91       	pop	r21
    1968:	4f 91       	pop	r20
    196a:	3f 91       	pop	r19
    196c:	2f 91       	pop	r18
    196e:	0f 90       	pop	r0
    1970:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1974:	0f 90       	pop	r0
    1976:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    197a:	0f 90       	pop	r0
    197c:	1f 90       	pop	r1
    197e:	18 95       	reti

00001980 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1980:	1f 92       	push	r1
    1982:	0f 92       	push	r0
    1984:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1988:	0f 92       	push	r0
    198a:	11 24       	eor	r1, r1
    198c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1990:	0f 92       	push	r0
    1992:	2f 93       	push	r18
    1994:	3f 93       	push	r19
    1996:	4f 93       	push	r20
    1998:	5f 93       	push	r21
    199a:	6f 93       	push	r22
    199c:	7f 93       	push	r23
    199e:	8f 93       	push	r24
    19a0:	9f 93       	push	r25
    19a2:	af 93       	push	r26
    19a4:	bf 93       	push	r27
    19a6:	ef 93       	push	r30
    19a8:	ff 93       	push	r31
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	1f 92       	push	r1
    19b0:	cd b7       	in	r28, 0x3d	; 61
    19b2:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    19b4:	0e 94 9e 6d 	call	0xdb3c	; 0xdb3c <USART1_get_data>
    19b8:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    19ba:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    19be:	81 30       	cpi	r24, 0x01	; 1
    19c0:	19 f4       	brne	.+6      	; 0x19c8 <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    19c2:	89 81       	ldd	r24, Y+1	; 0x01
    19c4:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    19c8:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    19cc:	81 30       	cpi	r24, 0x01	; 1
    19ce:	19 f4       	brne	.+6      	; 0x19d6 <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    19d0:	89 81       	ldd	r24, Y+1	; 0x01
    19d2:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z9serial_Rxh>
	}
}
    19d6:	00 00       	nop
    19d8:	0f 90       	pop	r0
    19da:	df 91       	pop	r29
    19dc:	cf 91       	pop	r28
    19de:	ff 91       	pop	r31
    19e0:	ef 91       	pop	r30
    19e2:	bf 91       	pop	r27
    19e4:	af 91       	pop	r26
    19e6:	9f 91       	pop	r25
    19e8:	8f 91       	pop	r24
    19ea:	7f 91       	pop	r23
    19ec:	6f 91       	pop	r22
    19ee:	5f 91       	pop	r21
    19f0:	4f 91       	pop	r20
    19f2:	3f 91       	pop	r19
    19f4:	2f 91       	pop	r18
    19f6:	0f 90       	pop	r0
    19f8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    19fc:	0f 90       	pop	r0
    19fe:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1a02:	0f 90       	pop	r0
    1a04:	1f 90       	pop	r1
    1a06:	18 95       	reti

00001a08 <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	1f 92       	push	r1
    1a0e:	cd b7       	in	r28, 0x3d	; 61
    1a10:	de b7       	in	r29, 0x3e	; 62
    1a12:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1a14:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1a18:	90 91 f0 46 	lds	r25, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1a1c:	89 2b       	or	r24, r25
    1a1e:	31 f4       	brne	.+12     	; 0x1a2c <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1a20:	0e 94 dc 52 	call	0xa5b8	; 0xa5b8 <_Z19nextEmptyLBRxBufferv>
    1a24:	80 93 ef 46 	sts	0x46EF, r24	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1a28:	90 93 f0 46 	sts	0x46F0, r25	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1a2c:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1a30:	90 91 f0 46 	lds	r25, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1a34:	89 2b       	or	r24, r25
    1a36:	09 f4       	brne	.+2      	; 0x1a3a <_Z10linkbus_Rxh+0x32>
    1a38:	43 c1       	rjmp	.+646    	; 0x1cc0 <_Z10linkbus_Rxh+0x2b8>
	{
		rx_char = toupper(rx_char);
    1a3a:	89 81       	ldd	r24, Y+1	; 0x01
    1a3c:	88 2f       	mov	r24, r24
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	0e 94 7c 76 	call	0xecf8	; 0xecf8 <toupper>
    1a44:	89 83       	std	Y+1, r24	; 0x01

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
    1a46:	89 81       	ldd	r24, Y+1	; 0x01
    1a48:	84 32       	cpi	r24, 0x24	; 36
    1a4a:	19 f0       	breq	.+6      	; 0x1a52 <_Z10linkbus_Rxh+0x4a>
    1a4c:	89 81       	ldd	r24, Y+1	; 0x01
    1a4e:	81 32       	cpi	r24, 0x21	; 33
    1a50:	e9 f5       	brne	.+122    	; 0x1acc <_Z10linkbus_Rxh+0xc4>
		{
			charIndex = 0;
    1a52:	10 92 f1 46 	sts	0x46F1, r1	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1a56:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1a5a:	90 91 f0 46 	lds	r25, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1a5e:	29 81       	ldd	r18, Y+1	; 0x01
    1a60:	21 32       	cpi	r18, 0x21	; 33
    1a62:	11 f4       	brne	.+4      	; 0x1a68 <_Z10linkbus_Rxh+0x60>
    1a64:	23 e0       	ldi	r18, 0x03	; 3
    1a66:	01 c0       	rjmp	.+2      	; 0x1a6a <_Z10linkbus_Rxh+0x62>
    1a68:	21 e0       	ldi	r18, 0x01	; 1
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	20 83       	st	Z, r18
			field_len = 0;
    1a6e:	10 92 f2 46 	sts	0x46F2, r1	; 0x8046f2 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1a72:	10 92 f3 46 	sts	0x46F3, r1	; 0x8046f3 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1a76:	10 92 f4 46 	sts	0x46F4, r1	; 0x8046f4 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1a7a:	10 92 f5 46 	sts	0x46F5, r1	; 0x8046f5 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1a7e:	10 92 f6 46 	sts	0x46F6, r1	; 0x8046f6 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1a82:	81 e0       	ldi	r24, 0x01	; 1
    1a84:	80 93 f7 46 	sts	0x46F7, r24	; 0x8046f7 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1a88:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1a8c:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1a90:	83 30       	cpi	r24, 0x03	; 3
    1a92:	c8 f4       	brcc	.+50     	; 0x1ac6 <_Z10linkbus_Rxh+0xbe>
			{
				buff->fields[field_index][0] = '\0';
    1a94:	20 91 ef 46 	lds	r18, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1a98:	30 91 f0 46 	lds	r19, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1a9c:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1aa0:	48 2f       	mov	r20, r24
    1aa2:	50 e0       	ldi	r21, 0x00	; 0
    1aa4:	65 e1       	ldi	r22, 0x15	; 21
    1aa6:	64 9f       	mul	r22, r20
    1aa8:	c0 01       	movw	r24, r0
    1aaa:	65 9f       	mul	r22, r21
    1aac:	90 0d       	add	r25, r0
    1aae:	11 24       	eor	r1, r1
    1ab0:	82 0f       	add	r24, r18
    1ab2:	93 1f       	adc	r25, r19
    1ab4:	03 96       	adiw	r24, 0x03	; 3
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1aba:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1abe:	8f 5f       	subi	r24, 0xFF	; 255
    1ac0:	80 93 f8 46 	sts	0x46F8, r24	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1ac4:	e3 cf       	rjmp	.-58     	; 0x1a8c <_Z10linkbus_Rxh+0x84>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1ac6:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1aca:	e9 c0       	rjmp	.+466    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
		}
		else if(receiving_msg)
    1acc:	80 91 f7 46 	lds	r24, 0x46F7	; 0x8046f7 <_ZZ10linkbus_RxhE13receiving_msg>
    1ad0:	88 23       	and	r24, r24
    1ad2:	09 f4       	brne	.+2      	; 0x1ad6 <_Z10linkbus_Rxh+0xce>
    1ad4:	c7 c0       	rjmp	.+398    	; 0x1c64 <_Z10linkbus_Rxh+0x25c>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
    1ad6:	89 81       	ldd	r24, Y+1	; 0x01
    1ad8:	8c 32       	cpi	r24, 0x2C	; 44
    1ada:	39 f0       	breq	.+14     	; 0x1aea <_Z10linkbus_Rxh+0xe2>
    1adc:	89 81       	ldd	r24, Y+1	; 0x01
    1ade:	8b 33       	cpi	r24, 0x3B	; 59
    1ae0:	21 f0       	breq	.+8      	; 0x1aea <_Z10linkbus_Rxh+0xe2>
    1ae2:	89 81       	ldd	r24, Y+1	; 0x01
    1ae4:	8f 33       	cpi	r24, 0x3F	; 63
    1ae6:	09 f0       	breq	.+2      	; 0x1aea <_Z10linkbus_Rxh+0xe2>
    1ae8:	6b c0       	rjmp	.+214    	; 0x1bc0 <_Z10linkbus_Rxh+0x1b8>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1aea:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1aee:	88 23       	and	r24, r24
    1af0:	e1 f0       	breq	.+56     	; 0x1b2a <_Z10linkbus_Rxh+0x122>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1af2:	40 91 ef 46 	lds	r20, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1af6:	50 91 f0 46 	lds	r21, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1afa:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1afe:	88 2f       	mov	r24, r24
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	bc 01       	movw	r22, r24
    1b04:	61 50       	subi	r22, 0x01	; 1
    1b06:	71 09       	sbc	r23, r1
    1b08:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <_ZZ10linkbus_RxhE9field_len>
    1b0c:	88 2f       	mov	r24, r24
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	e5 e1       	ldi	r30, 0x15	; 21
    1b12:	e6 9f       	mul	r30, r22
    1b14:	90 01       	movw	r18, r0
    1b16:	e7 9f       	mul	r30, r23
    1b18:	30 0d       	add	r19, r0
    1b1a:	11 24       	eor	r1, r1
    1b1c:	24 0f       	add	r18, r20
    1b1e:	35 1f       	adc	r19, r21
    1b20:	82 0f       	add	r24, r18
    1b22:	93 1f       	adc	r25, r19
    1b24:	03 96       	adiw	r24, 0x03	; 3
    1b26:	fc 01       	movw	r30, r24
    1b28:	10 82       	st	Z, r1
				}

				field_index++;
    1b2a:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1b2e:	8f 5f       	subi	r24, 0xFF	; 255
    1b30:	80 93 f8 46 	sts	0x46F8, r24	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1b34:	10 92 f2 46 	sts	0x46F2, r1	; 0x8046f2 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1b38:	89 81       	ldd	r24, Y+1	; 0x01
    1b3a:	8b 33       	cpi	r24, 0x3B	; 59
    1b3c:	b1 f4       	brne	.+44     	; 0x1b6a <_Z10linkbus_Rxh+0x162>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1b3e:	80 91 f1 46 	lds	r24, 0x46F1	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
    1b42:	84 30       	cpi	r24, 0x04	; 4
    1b44:	78 f0       	brcs	.+30     	; 0x1b64 <_Z10linkbus_Rxh+0x15c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b46:	20 91 ef 46 	lds	r18, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1b4a:	30 91 f0 46 	lds	r19, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1b4e:	80 91 f3 46 	lds	r24, 0x46F3	; 0x8046f3 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b52:	90 91 f4 46 	lds	r25, 0x46F4	; 0x8046f4 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b56:	a0 91 f5 46 	lds	r26, 0x46F5	; 0x8046f5 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b5a:	b0 91 f6 46 	lds	r27, 0x46F6	; 0x8046f6 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b5e:	f9 01       	movw	r30, r18
    1b60:	81 83       	std	Z+1, r24	; 0x01
    1b62:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1b64:	10 92 f7 46 	sts	0x46F7, r1	; 0x8046f7 <_ZZ10linkbus_RxhE13receiving_msg>
    1b68:	1f c0       	rjmp	.+62     	; 0x1ba8 <_Z10linkbus_Rxh+0x1a0>
				}
				else if(rx_char == '?')
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	8f 33       	cpi	r24, 0x3F	; 63
    1b6e:	e1 f4       	brne	.+56     	; 0x1ba8 <_Z10linkbus_Rxh+0x1a0>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1b70:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1b74:	90 91 f0 46 	lds	r25, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1b78:	22 e0       	ldi	r18, 0x02	; 2
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1b7e:	80 91 f1 46 	lds	r24, 0x46F1	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
    1b82:	83 30       	cpi	r24, 0x03	; 3
    1b84:	78 f0       	brcs	.+30     	; 0x1ba4 <_Z10linkbus_Rxh+0x19c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b86:	20 91 ef 46 	lds	r18, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1b8a:	30 91 f0 46 	lds	r19, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1b8e:	80 91 f3 46 	lds	r24, 0x46F3	; 0x8046f3 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b92:	90 91 f4 46 	lds	r25, 0x46F4	; 0x8046f4 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b96:	a0 91 f5 46 	lds	r26, 0x46F5	; 0x8046f5 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b9a:	b0 91 f6 46 	lds	r27, 0x46F6	; 0x8046f6 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b9e:	f9 01       	movw	r30, r18
    1ba0:	81 83       	std	Z+1, r24	; 0x01
    1ba2:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1ba4:	10 92 f7 46 	sts	0x46F7, r1	; 0x8046f7 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1ba8:	90 91 f7 46 	lds	r25, 0x46F7	; 0x8046f7 <_ZZ10linkbus_RxhE13receiving_msg>
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	89 27       	eor	r24, r25
    1bb0:	88 23       	and	r24, r24
    1bb2:	09 f4       	brne	.+2      	; 0x1bb6 <_Z10linkbus_Rxh+0x1ae>
    1bb4:	74 c0       	rjmp	.+232    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
				{
					buff = 0;
    1bb6:	10 92 ef 46 	sts	0x46EF, r1	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1bba:	10 92 f0 46 	sts	0x46F0, r1	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1bbe:	6f c0       	rjmp	.+222    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1bc0:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1bc4:	88 23       	and	r24, r24
    1bc6:	61 f5       	brne	.+88     	; 0x1c20 <_Z10linkbus_Rxh+0x218>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1bc8:	80 91 f3 46 	lds	r24, 0x46F3	; 0x8046f3 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bcc:	90 91 f4 46 	lds	r25, 0x46F4	; 0x8046f4 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bd0:	a0 91 f5 46 	lds	r26, 0x46F5	; 0x8046f5 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1bd4:	b0 91 f6 46 	lds	r27, 0x46F6	; 0x8046f6 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1bd8:	88 0f       	add	r24, r24
    1bda:	99 1f       	adc	r25, r25
    1bdc:	aa 1f       	adc	r26, r26
    1bde:	bb 1f       	adc	r27, r27
    1be0:	9c 01       	movw	r18, r24
    1be2:	ad 01       	movw	r20, r26
    1be4:	22 0f       	add	r18, r18
    1be6:	33 1f       	adc	r19, r19
    1be8:	44 1f       	adc	r20, r20
    1bea:	55 1f       	adc	r21, r21
    1bec:	22 0f       	add	r18, r18
    1bee:	33 1f       	adc	r19, r19
    1bf0:	44 1f       	adc	r20, r20
    1bf2:	55 1f       	adc	r21, r21
    1bf4:	28 0f       	add	r18, r24
    1bf6:	39 1f       	adc	r19, r25
    1bf8:	4a 1f       	adc	r20, r26
    1bfa:	5b 1f       	adc	r21, r27
    1bfc:	89 81       	ldd	r24, Y+1	; 0x01
    1bfe:	88 2f       	mov	r24, r24
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	a0 e0       	ldi	r26, 0x00	; 0
    1c04:	b0 e0       	ldi	r27, 0x00	; 0
    1c06:	82 0f       	add	r24, r18
    1c08:	93 1f       	adc	r25, r19
    1c0a:	a4 1f       	adc	r26, r20
    1c0c:	b5 1f       	adc	r27, r21
    1c0e:	80 93 f3 46 	sts	0x46F3, r24	; 0x8046f3 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c12:	90 93 f4 46 	sts	0x46F4, r25	; 0x8046f4 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c16:	a0 93 f5 46 	sts	0x46F5, r26	; 0x8046f5 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c1a:	b0 93 f6 46 	sts	0x46F6, r27	; 0x8046f6 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c1e:	3f c0       	rjmp	.+126    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1c20:	40 91 ef 46 	lds	r20, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1c24:	50 91 f0 46 	lds	r21, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1c28:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
    1c2c:	88 2f       	mov	r24, r24
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	bc 01       	movw	r22, r24
    1c32:	61 50       	subi	r22, 0x01	; 1
    1c34:	71 09       	sbc	r23, r1
    1c36:	80 91 f2 46 	lds	r24, 0x46F2	; 0x8046f2 <_ZZ10linkbus_RxhE9field_len>
    1c3a:	91 e0       	ldi	r25, 0x01	; 1
    1c3c:	98 0f       	add	r25, r24
    1c3e:	90 93 f2 46 	sts	0x46F2, r25	; 0x8046f2 <_ZZ10linkbus_RxhE9field_len>
    1c42:	88 2f       	mov	r24, r24
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	e5 e1       	ldi	r30, 0x15	; 21
    1c48:	e6 9f       	mul	r30, r22
    1c4a:	90 01       	movw	r18, r0
    1c4c:	e7 9f       	mul	r30, r23
    1c4e:	30 0d       	add	r19, r0
    1c50:	11 24       	eor	r1, r1
    1c52:	24 0f       	add	r18, r20
    1c54:	35 1f       	adc	r19, r21
    1c56:	82 0f       	add	r24, r18
    1c58:	93 1f       	adc	r25, r19
    1c5a:	03 96       	adiw	r24, 0x03	; 3
    1c5c:	29 81       	ldd	r18, Y+1	; 0x01
    1c5e:	fc 01       	movw	r30, r24
    1c60:	20 83       	st	Z, r18
    1c62:	1d c0       	rjmp	.+58     	; 0x1c9e <_Z10linkbus_Rxh+0x296>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1c64:	89 81       	ldd	r24, Y+1	; 0x01
    1c66:	8d 30       	cpi	r24, 0x0D	; 13
    1c68:	d1 f4       	brne	.+52     	; 0x1c9e <_Z10linkbus_Rxh+0x296>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1c6a:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1c6e:	90 91 f0 46 	lds	r25, 0x46F0	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
    1c72:	fc 01       	movw	r30, r24
    1c74:	11 82       	std	Z+1, r1	; 0x01
    1c76:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1c78:	82 e3       	ldi	r24, 0x32	; 50
    1c7a:	80 93 f1 46 	sts	0x46F1, r24	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1c7e:	10 92 f2 46 	sts	0x46F2, r1	; 0x8046f2 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1c82:	10 92 f3 46 	sts	0x46F3, r1	; 0x8046f3 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c86:	10 92 f4 46 	sts	0x46F4, r1	; 0x8046f4 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c8a:	10 92 f5 46 	sts	0x46F5, r1	; 0x8046f5 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c8e:	10 92 f6 46 	sts	0x46F6, r1	; 0x8046f6 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1c92:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1c96:	10 92 ef 46 	sts	0x46EF, r1	; 0x8046ef <_ZZ10linkbus_RxhE4buff>
    1c9a:	10 92 f0 46 	sts	0x46F0, r1	; 0x8046f0 <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1c9e:	80 91 f1 46 	lds	r24, 0x46F1	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
    1ca2:	8f 5f       	subi	r24, 0xFF	; 255
    1ca4:	80 93 f1 46 	sts	0x46F1, r24	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
    1ca8:	90 91 f1 46 	lds	r25, 0x46F1	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	92 33       	cpi	r25, 0x32	; 50
    1cb0:	08 f4       	brcc	.+2      	; 0x1cb4 <_Z10linkbus_Rxh+0x2ac>
    1cb2:	80 e0       	ldi	r24, 0x00	; 0
    1cb4:	88 23       	and	r24, r24
    1cb6:	21 f0       	breq	.+8      	; 0x1cc0 <_Z10linkbus_Rxh+0x2b8>
		{
			receiving_msg = false;
    1cb8:	10 92 f7 46 	sts	0x46F7, r1	; 0x8046f7 <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
    1cbc:	10 92 f1 46 	sts	0x46F1, r1	; 0x8046f1 <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
    1cc0:	00 00       	nop
    1cc2:	0f 90       	pop	r0
    1cc4:	df 91       	pop	r29
    1cc6:	cf 91       	pop	r28
    1cc8:	08 95       	ret

00001cca <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1cca:	1f 92       	push	r1
    1ccc:	0f 92       	push	r0
    1cce:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1cd2:	0f 92       	push	r0
    1cd4:	11 24       	eor	r1, r1
    1cd6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1cda:	0f 92       	push	r0
    1cdc:	2f 93       	push	r18
    1cde:	3f 93       	push	r19
    1ce0:	4f 93       	push	r20
    1ce2:	5f 93       	push	r21
    1ce4:	6f 93       	push	r22
    1ce6:	7f 93       	push	r23
    1ce8:	8f 93       	push	r24
    1cea:	9f 93       	push	r25
    1cec:	af 93       	push	r26
    1cee:	bf 93       	push	r27
    1cf0:	ef 93       	push	r30
    1cf2:	ff 93       	push	r31
    1cf4:	cf 93       	push	r28
    1cf6:	df 93       	push	r29
    1cf8:	cd b7       	in	r28, 0x3d	; 61
    1cfa:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1cfc:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    1d00:	81 30       	cpi	r24, 0x01	; 1
    1d02:	09 f0       	breq	.+2      	; 0x1d06 <__vector_32+0x3c>
    1d04:	45 c0       	rjmp	.+138    	; 0x1d90 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1d06:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d0a:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
    1d0e:	89 2b       	or	r24, r25
    1d10:	31 f4       	brne	.+12     	; 0x1d1e <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1d12:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <nextFullSBTxBuffer>
    1d16:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d1a:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1d1e:	20 91 f9 46 	lds	r18, 0x46F9	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d22:	30 91 fa 46 	lds	r19, 0x46FA	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
    1d26:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ11__vector_32E9charIndex>
    1d2a:	88 2f       	mov	r24, r24
    1d2c:	90 e0       	ldi	r25, 0x00	; 0
    1d2e:	82 0f       	add	r24, r18
    1d30:	93 1f       	adc	r25, r19
    1d32:	fc 01       	movw	r30, r24
    1d34:	80 81       	ld	r24, Z
    1d36:	88 23       	and	r24, r24
    1d38:	a9 f0       	breq	.+42     	; 0x1d64 <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1d3a:	80 e2       	ldi	r24, 0x20	; 32
    1d3c:	98 e0       	ldi	r25, 0x08	; 8
    1d3e:	40 91 f9 46 	lds	r20, 0x46F9	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d42:	50 91 fa 46 	lds	r21, 0x46FA	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
    1d46:	20 91 fb 46 	lds	r18, 0x46FB	; 0x8046fb <_ZZ11__vector_32E9charIndex>
    1d4a:	31 e0       	ldi	r19, 0x01	; 1
    1d4c:	32 0f       	add	r19, r18
    1d4e:	30 93 fb 46 	sts	0x46FB, r19	; 0x8046fb <_ZZ11__vector_32E9charIndex>
    1d52:	22 2f       	mov	r18, r18
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	24 0f       	add	r18, r20
    1d58:	35 1f       	adc	r19, r21
    1d5a:	f9 01       	movw	r30, r18
    1d5c:	20 81       	ld	r18, Z
    1d5e:	fc 01       	movw	r30, r24
    1d60:	22 83       	std	Z+2, r18	; 0x02
    1d62:	16 c0       	rjmp	.+44     	; 0x1d90 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1d64:	10 92 fb 46 	sts	0x46FB, r1	; 0x8046fb <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1d68:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d6c:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
    1d70:	fc 01       	movw	r30, r24
    1d72:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1d74:	0e 94 f1 5a 	call	0xb5e2	; 0xb5e2 <nextFullSBTxBuffer>
    1d78:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d7c:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1d80:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ11__vector_32E4buff>
    1d84:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ11__vector_32E4buff+0x1>
    1d88:	89 2b       	or	r24, r25
    1d8a:	11 f4       	brne	.+4      	; 0x1d90 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1d8c:	0e 94 46 5c 	call	0xb88c	; 0xb88c <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1d90:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    1d94:	81 30       	cpi	r24, 0x01	; 1
    1d96:	09 f0       	breq	.+2      	; 0x1d9a <__vector_32+0xd0>
    1d98:	45 c0       	rjmp	.+138    	; 0x1e24 <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1d9a:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1d9e:	90 91 fd 46 	lds	r25, 0x46FD	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
    1da2:	89 2b       	or	r24, r25
    1da4:	31 f4       	brne	.+12     	; 0x1db2 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1da6:	0e 94 4e 52 	call	0xa49c	; 0xa49c <_Z18nextFullLBTxBufferv>
    1daa:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1dae:	90 93 fd 46 	sts	0x46FD, r25	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1db2:	20 91 fc 46 	lds	r18, 0x46FC	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1db6:	30 91 fd 46 	lds	r19, 0x46FD	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
    1dba:	80 91 fe 46 	lds	r24, 0x46FE	; 0x8046fe <_ZZ11__vector_32E9charIndex_0>
    1dbe:	88 2f       	mov	r24, r24
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	82 0f       	add	r24, r18
    1dc4:	93 1f       	adc	r25, r19
    1dc6:	fc 01       	movw	r30, r24
    1dc8:	80 81       	ld	r24, Z
    1dca:	88 23       	and	r24, r24
    1dcc:	a9 f0       	breq	.+42     	; 0x1df8 <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1dce:	80 e2       	ldi	r24, 0x20	; 32
    1dd0:	98 e0       	ldi	r25, 0x08	; 8
    1dd2:	40 91 fc 46 	lds	r20, 0x46FC	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1dd6:	50 91 fd 46 	lds	r21, 0x46FD	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
    1dda:	20 91 fe 46 	lds	r18, 0x46FE	; 0x8046fe <_ZZ11__vector_32E9charIndex_0>
    1dde:	31 e0       	ldi	r19, 0x01	; 1
    1de0:	32 0f       	add	r19, r18
    1de2:	30 93 fe 46 	sts	0x46FE, r19	; 0x8046fe <_ZZ11__vector_32E9charIndex_0>
    1de6:	22 2f       	mov	r18, r18
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	24 0f       	add	r18, r20
    1dec:	35 1f       	adc	r19, r21
    1dee:	f9 01       	movw	r30, r18
    1df0:	20 81       	ld	r18, Z
    1df2:	fc 01       	movw	r30, r24
    1df4:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1df6:	16 c0       	rjmp	.+44     	; 0x1e24 <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1df8:	10 92 fe 46 	sts	0x46FE, r1	; 0x8046fe <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1dfc:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1e00:	90 91 fd 46 	lds	r25, 0x46FD	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
    1e04:	fc 01       	movw	r30, r24
    1e06:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1e08:	0e 94 4e 52 	call	0xa49c	; 0xa49c <_Z18nextFullLBTxBufferv>
    1e0c:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1e10:	90 93 fd 46 	sts	0x46FD, r25	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1e14:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ11__vector_32E4buff_0>
    1e18:	90 91 fd 46 	lds	r25, 0x46FD	; 0x8046fd <_ZZ11__vector_32E4buff_0+0x1>
    1e1c:	89 2b       	or	r24, r25
    1e1e:	11 f4       	brne	.+4      	; 0x1e24 <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1e20:	0e 94 93 53 	call	0xa726	; 0xa726 <_Z14linkbus_end_txv>
			}
		}
	}
}
    1e24:	00 00       	nop
    1e26:	df 91       	pop	r29
    1e28:	cf 91       	pop	r28
    1e2a:	ff 91       	pop	r31
    1e2c:	ef 91       	pop	r30
    1e2e:	bf 91       	pop	r27
    1e30:	af 91       	pop	r26
    1e32:	9f 91       	pop	r25
    1e34:	8f 91       	pop	r24
    1e36:	7f 91       	pop	r23
    1e38:	6f 91       	pop	r22
    1e3a:	5f 91       	pop	r21
    1e3c:	4f 91       	pop	r20
    1e3e:	3f 91       	pop	r19
    1e40:	2f 91       	pop	r18
    1e42:	0f 90       	pop	r0
    1e44:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e48:	0f 90       	pop	r0
    1e4a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e4e:	0f 90       	pop	r0
    1e50:	1f 90       	pop	r1
    1e52:	18 95       	reti

00001e54 <PORTA_set_pin_level>:
}

void initializeAllEventSettings(bool disableEvent)
{
	
}
    1e54:	cf 93       	push	r28
    1e56:	df 93       	push	r29
    1e58:	00 d0       	rcall	.+0      	; 0x1e5a <PORTA_set_pin_level+0x6>
    1e5a:	cd b7       	in	r28, 0x3d	; 61
    1e5c:	de b7       	in	r29, 0x3e	; 62
    1e5e:	89 83       	std	Y+1, r24	; 0x01
    1e60:	6a 83       	std	Y+2, r22	; 0x02
    1e62:	8a 81       	ldd	r24, Y+2	; 0x02
    1e64:	88 23       	and	r24, r24
    1e66:	a9 f0       	breq	.+42     	; 0x1e92 <PORTA_set_pin_level+0x3e>
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	30 e0       	ldi	r19, 0x00	; 0
    1e6c:	80 e0       	ldi	r24, 0x00	; 0
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	fc 01       	movw	r30, r24
    1e72:	81 81       	ldd	r24, Z+1	; 0x01
    1e74:	68 2f       	mov	r22, r24
    1e76:	89 81       	ldd	r24, Y+1	; 0x01
    1e78:	48 2f       	mov	r20, r24
    1e7a:	50 e0       	ldi	r21, 0x00	; 0
    1e7c:	81 e0       	ldi	r24, 0x01	; 1
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	02 c0       	rjmp	.+4      	; 0x1e86 <PORTA_set_pin_level+0x32>
    1e82:	88 0f       	add	r24, r24
    1e84:	99 1f       	adc	r25, r25
    1e86:	4a 95       	dec	r20
    1e88:	e2 f7       	brpl	.-8      	; 0x1e82 <PORTA_set_pin_level+0x2e>
    1e8a:	86 2b       	or	r24, r22
    1e8c:	f9 01       	movw	r30, r18
    1e8e:	81 83       	std	Z+1, r24	; 0x01
    1e90:	15 c0       	rjmp	.+42     	; 0x1ebc <PORTA_set_pin_level+0x68>
    1e92:	20 e0       	ldi	r18, 0x00	; 0
    1e94:	30 e0       	ldi	r19, 0x00	; 0
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	fc 01       	movw	r30, r24
    1e9c:	81 81       	ldd	r24, Z+1	; 0x01
    1e9e:	68 2f       	mov	r22, r24
    1ea0:	89 81       	ldd	r24, Y+1	; 0x01
    1ea2:	48 2f       	mov	r20, r24
    1ea4:	50 e0       	ldi	r21, 0x00	; 0
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	02 c0       	rjmp	.+4      	; 0x1eb0 <PORTA_set_pin_level+0x5c>
    1eac:	88 0f       	add	r24, r24
    1eae:	99 1f       	adc	r25, r25
    1eb0:	4a 95       	dec	r20
    1eb2:	e2 f7       	brpl	.-8      	; 0x1eac <PORTA_set_pin_level+0x58>
    1eb4:	80 95       	com	r24
    1eb6:	86 23       	and	r24, r22
    1eb8:	f9 01       	movw	r30, r18
    1eba:	81 83       	std	Z+1, r24	; 0x01
    1ebc:	00 00       	nop
    1ebe:	0f 90       	pop	r0
    1ec0:	0f 90       	pop	r0
    1ec2:	df 91       	pop	r29
    1ec4:	cf 91       	pop	r28
    1ec6:	08 95       	ret

00001ec8 <PORTB_set_pin_level>:
    1ec8:	cf 93       	push	r28
    1eca:	df 93       	push	r29
    1ecc:	00 d0       	rcall	.+0      	; 0x1ece <PORTB_set_pin_level+0x6>
    1ece:	cd b7       	in	r28, 0x3d	; 61
    1ed0:	de b7       	in	r29, 0x3e	; 62
    1ed2:	89 83       	std	Y+1, r24	; 0x01
    1ed4:	6a 83       	std	Y+2, r22	; 0x02
    1ed6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed8:	88 23       	and	r24, r24
    1eda:	a9 f0       	breq	.+42     	; 0x1f06 <PORTB_set_pin_level+0x3e>
    1edc:	84 e0       	ldi	r24, 0x04	; 4
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	24 e0       	ldi	r18, 0x04	; 4
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	f9 01       	movw	r30, r18
    1ee6:	21 81       	ldd	r18, Z+1	; 0x01
    1ee8:	62 2f       	mov	r22, r18
    1eea:	29 81       	ldd	r18, Y+1	; 0x01
    1eec:	42 2f       	mov	r20, r18
    1eee:	50 e0       	ldi	r21, 0x00	; 0
    1ef0:	21 e0       	ldi	r18, 0x01	; 1
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <PORTB_set_pin_level+0x32>
    1ef6:	22 0f       	add	r18, r18
    1ef8:	33 1f       	adc	r19, r19
    1efa:	4a 95       	dec	r20
    1efc:	e2 f7       	brpl	.-8      	; 0x1ef6 <PORTB_set_pin_level+0x2e>
    1efe:	26 2b       	or	r18, r22
    1f00:	fc 01       	movw	r30, r24
    1f02:	21 83       	std	Z+1, r18	; 0x01
    1f04:	15 c0       	rjmp	.+42     	; 0x1f30 <PORTB_set_pin_level+0x68>
    1f06:	84 e0       	ldi	r24, 0x04	; 4
    1f08:	90 e0       	ldi	r25, 0x00	; 0
    1f0a:	24 e0       	ldi	r18, 0x04	; 4
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	f9 01       	movw	r30, r18
    1f10:	21 81       	ldd	r18, Z+1	; 0x01
    1f12:	62 2f       	mov	r22, r18
    1f14:	29 81       	ldd	r18, Y+1	; 0x01
    1f16:	42 2f       	mov	r20, r18
    1f18:	50 e0       	ldi	r21, 0x00	; 0
    1f1a:	21 e0       	ldi	r18, 0x01	; 1
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	02 c0       	rjmp	.+4      	; 0x1f24 <PORTB_set_pin_level+0x5c>
    1f20:	22 0f       	add	r18, r18
    1f22:	33 1f       	adc	r19, r19
    1f24:	4a 95       	dec	r20
    1f26:	e2 f7       	brpl	.-8      	; 0x1f20 <PORTB_set_pin_level+0x58>
    1f28:	20 95       	com	r18
    1f2a:	26 23       	and	r18, r22
    1f2c:	fc 01       	movw	r30, r24
    1f2e:	21 83       	std	Z+1, r18	; 0x01
    1f30:	00 00       	nop
    1f32:	0f 90       	pop	r0
    1f34:	0f 90       	pop	r0
    1f36:	df 91       	pop	r29
    1f38:	cf 91       	pop	r28
    1f3a:	08 95       	ret

00001f3c <PORTC_set_pin_pull_mode>:
    1f3c:	cf 93       	push	r28
    1f3e:	df 93       	push	r29
    1f40:	00 d0       	rcall	.+0      	; 0x1f42 <PORTC_set_pin_pull_mode+0x6>
    1f42:	00 d0       	rcall	.+0      	; 0x1f44 <PORTC_set_pin_pull_mode+0x8>
    1f44:	cd b7       	in	r28, 0x3d	; 61
    1f46:	de b7       	in	r29, 0x3e	; 62
    1f48:	8b 83       	std	Y+3, r24	; 0x03
    1f4a:	6c 83       	std	Y+4, r22	; 0x04
    1f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f4e:	88 2f       	mov	r24, r24
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	80 5b       	subi	r24, 0xB0	; 176
    1f54:	9b 4f       	sbci	r25, 0xFB	; 251
    1f56:	89 83       	std	Y+1, r24	; 0x01
    1f58:	9a 83       	std	Y+2, r25	; 0x02
    1f5a:	8c 81       	ldd	r24, Y+4	; 0x04
    1f5c:	81 30       	cpi	r24, 0x01	; 1
    1f5e:	59 f4       	brne	.+22     	; 0x1f76 <PORTC_set_pin_pull_mode+0x3a>
    1f60:	89 81       	ldd	r24, Y+1	; 0x01
    1f62:	9a 81       	ldd	r25, Y+2	; 0x02
    1f64:	fc 01       	movw	r30, r24
    1f66:	80 81       	ld	r24, Z
    1f68:	28 2f       	mov	r18, r24
    1f6a:	28 60       	ori	r18, 0x08	; 8
    1f6c:	89 81       	ldd	r24, Y+1	; 0x01
    1f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f70:	fc 01       	movw	r30, r24
    1f72:	20 83       	st	Z, r18
    1f74:	0d c0       	rjmp	.+26     	; 0x1f90 <PORTC_set_pin_pull_mode+0x54>
    1f76:	8c 81       	ldd	r24, Y+4	; 0x04
    1f78:	88 23       	and	r24, r24
    1f7a:	51 f4       	brne	.+20     	; 0x1f90 <PORTC_set_pin_pull_mode+0x54>
    1f7c:	89 81       	ldd	r24, Y+1	; 0x01
    1f7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f80:	fc 01       	movw	r30, r24
    1f82:	80 81       	ld	r24, Z
    1f84:	28 2f       	mov	r18, r24
    1f86:	27 7f       	andi	r18, 0xF7	; 247
    1f88:	89 81       	ldd	r24, Y+1	; 0x01
    1f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f8c:	fc 01       	movw	r30, r24
    1f8e:	20 83       	st	Z, r18
    1f90:	00 00       	nop
    1f92:	24 96       	adiw	r28, 0x04	; 4
    1f94:	cd bf       	out	0x3d, r28	; 61
    1f96:	de bf       	out	0x3e, r29	; 62
    1f98:	df 91       	pop	r29
    1f9a:	cf 91       	pop	r28
    1f9c:	08 95       	ret

00001f9e <PORTC_set_pin_level>:
    1f9e:	cf 93       	push	r28
    1fa0:	df 93       	push	r29
    1fa2:	00 d0       	rcall	.+0      	; 0x1fa4 <PORTC_set_pin_level+0x6>
    1fa4:	cd b7       	in	r28, 0x3d	; 61
    1fa6:	de b7       	in	r29, 0x3e	; 62
    1fa8:	89 83       	std	Y+1, r24	; 0x01
    1faa:	6a 83       	std	Y+2, r22	; 0x02
    1fac:	8a 81       	ldd	r24, Y+2	; 0x02
    1fae:	88 23       	and	r24, r24
    1fb0:	a9 f0       	breq	.+42     	; 0x1fdc <PORTC_set_pin_level+0x3e>
    1fb2:	88 e0       	ldi	r24, 0x08	; 8
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	28 e0       	ldi	r18, 0x08	; 8
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	f9 01       	movw	r30, r18
    1fbc:	21 81       	ldd	r18, Z+1	; 0x01
    1fbe:	62 2f       	mov	r22, r18
    1fc0:	29 81       	ldd	r18, Y+1	; 0x01
    1fc2:	42 2f       	mov	r20, r18
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	21 e0       	ldi	r18, 0x01	; 1
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	02 c0       	rjmp	.+4      	; 0x1fd0 <PORTC_set_pin_level+0x32>
    1fcc:	22 0f       	add	r18, r18
    1fce:	33 1f       	adc	r19, r19
    1fd0:	4a 95       	dec	r20
    1fd2:	e2 f7       	brpl	.-8      	; 0x1fcc <PORTC_set_pin_level+0x2e>
    1fd4:	26 2b       	or	r18, r22
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	21 83       	std	Z+1, r18	; 0x01
    1fda:	15 c0       	rjmp	.+42     	; 0x2006 <PORTC_set_pin_level+0x68>
    1fdc:	88 e0       	ldi	r24, 0x08	; 8
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	28 e0       	ldi	r18, 0x08	; 8
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	f9 01       	movw	r30, r18
    1fe6:	21 81       	ldd	r18, Z+1	; 0x01
    1fe8:	62 2f       	mov	r22, r18
    1fea:	29 81       	ldd	r18, Y+1	; 0x01
    1fec:	42 2f       	mov	r20, r18
    1fee:	50 e0       	ldi	r21, 0x00	; 0
    1ff0:	21 e0       	ldi	r18, 0x01	; 1
    1ff2:	30 e0       	ldi	r19, 0x00	; 0
    1ff4:	02 c0       	rjmp	.+4      	; 0x1ffa <PORTC_set_pin_level+0x5c>
    1ff6:	22 0f       	add	r18, r18
    1ff8:	33 1f       	adc	r19, r19
    1ffa:	4a 95       	dec	r20
    1ffc:	e2 f7       	brpl	.-8      	; 0x1ff6 <PORTC_set_pin_level+0x58>
    1ffe:	20 95       	com	r18
    2000:	26 23       	and	r18, r22
    2002:	fc 01       	movw	r30, r24
    2004:	21 83       	std	Z+1, r18	; 0x01
    2006:	00 00       	nop
    2008:	0f 90       	pop	r0
    200a:	0f 90       	pop	r0
    200c:	df 91       	pop	r29
    200e:	cf 91       	pop	r28
    2010:	08 95       	ret

00002012 <PORTC_get_pin_level>:
    2012:	cf 93       	push	r28
    2014:	df 93       	push	r29
    2016:	1f 92       	push	r1
    2018:	cd b7       	in	r28, 0x3d	; 61
    201a:	de b7       	in	r29, 0x3e	; 62
    201c:	89 83       	std	Y+1, r24	; 0x01
    201e:	88 e0       	ldi	r24, 0x08	; 8
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	fc 01       	movw	r30, r24
    2024:	82 81       	ldd	r24, Z+2	; 0x02
    2026:	88 2f       	mov	r24, r24
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	29 81       	ldd	r18, Y+1	; 0x01
    202c:	22 2f       	mov	r18, r18
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	02 c0       	rjmp	.+4      	; 0x2036 <PORTC_get_pin_level+0x24>
    2032:	95 95       	asr	r25
    2034:	87 95       	ror	r24
    2036:	2a 95       	dec	r18
    2038:	e2 f7       	brpl	.-8      	; 0x2032 <PORTC_get_pin_level+0x20>
    203a:	81 70       	andi	r24, 0x01	; 1
    203c:	99 27       	eor	r25, r25
    203e:	21 e0       	ldi	r18, 0x01	; 1
    2040:	89 2b       	or	r24, r25
    2042:	09 f4       	brne	.+2      	; 0x2046 <PORTC_get_pin_level+0x34>
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	82 2f       	mov	r24, r18
    2048:	0f 90       	pop	r0
    204a:	df 91       	pop	r29
    204c:	cf 91       	pop	r28
    204e:	08 95       	ret

00002050 <PORTD_get_pin_level>:
    2050:	cf 93       	push	r28
    2052:	df 93       	push	r29
    2054:	1f 92       	push	r1
    2056:	cd b7       	in	r28, 0x3d	; 61
    2058:	de b7       	in	r29, 0x3e	; 62
    205a:	89 83       	std	Y+1, r24	; 0x01
    205c:	8c e0       	ldi	r24, 0x0C	; 12
    205e:	90 e0       	ldi	r25, 0x00	; 0
    2060:	fc 01       	movw	r30, r24
    2062:	82 81       	ldd	r24, Z+2	; 0x02
    2064:	88 2f       	mov	r24, r24
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	29 81       	ldd	r18, Y+1	; 0x01
    206a:	22 2f       	mov	r18, r18
    206c:	30 e0       	ldi	r19, 0x00	; 0
    206e:	02 c0       	rjmp	.+4      	; 0x2074 <PORTD_get_pin_level+0x24>
    2070:	95 95       	asr	r25
    2072:	87 95       	ror	r24
    2074:	2a 95       	dec	r18
    2076:	e2 f7       	brpl	.-8      	; 0x2070 <PORTD_get_pin_level+0x20>
    2078:	81 70       	andi	r24, 0x01	; 1
    207a:	99 27       	eor	r25, r25
    207c:	21 e0       	ldi	r18, 0x01	; 1
    207e:	89 2b       	or	r24, r25
    2080:	09 f4       	brne	.+2      	; 0x2084 <PORTD_get_pin_level+0x34>
    2082:	20 e0       	ldi	r18, 0x00	; 0
    2084:	82 2f       	mov	r24, r18
    2086:	0f 90       	pop	r0
    2088:	df 91       	pop	r29
    208a:	cf 91       	pop	r28
    208c:	08 95       	ret

0000208e <LED_set_RED_level>:
    208e:	cf 93       	push	r28
    2090:	df 93       	push	r29
    2092:	1f 92       	push	r1
    2094:	cd b7       	in	r28, 0x3d	; 61
    2096:	de b7       	in	r29, 0x3e	; 62
    2098:	89 83       	std	Y+1, r24	; 0x01
    209a:	69 81       	ldd	r22, Y+1	; 0x01
    209c:	86 e0       	ldi	r24, 0x06	; 6
    209e:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <PORTC_set_pin_level>
    20a2:	00 00       	nop
    20a4:	0f 90       	pop	r0
    20a6:	df 91       	pop	r29
    20a8:	cf 91       	pop	r28
    20aa:	08 95       	ret

000020ac <__vector_6>:
    20ac:	1f 92       	push	r1
    20ae:	0f 92       	push	r0
    20b0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    20b4:	0f 92       	push	r0
    20b6:	11 24       	eor	r1, r1
    20b8:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    20bc:	0f 92       	push	r0
    20be:	ef 92       	push	r14
    20c0:	ff 92       	push	r15
    20c2:	0f 93       	push	r16
    20c4:	1f 93       	push	r17
    20c6:	2f 93       	push	r18
    20c8:	3f 93       	push	r19
    20ca:	4f 93       	push	r20
    20cc:	5f 93       	push	r21
    20ce:	6f 93       	push	r22
    20d0:	7f 93       	push	r23
    20d2:	8f 93       	push	r24
    20d4:	9f 93       	push	r25
    20d6:	af 93       	push	r26
    20d8:	bf 93       	push	r27
    20da:	ef 93       	push	r30
    20dc:	ff 93       	push	r31
    20de:	cf 93       	push	r28
    20e0:	df 93       	push	r29
    20e2:	cd b7       	in	r28, 0x3d	; 61
    20e4:	de b7       	in	r29, 0x3e	; 62
    20e6:	2f 97       	sbiw	r28, 0x0f	; 15
    20e8:	cd bf       	out	0x3d, r28	; 61
    20ea:	de bf       	out	0x3e, r29	; 62
    20ec:	80 e0       	ldi	r24, 0x00	; 0
    20ee:	94 e0       	ldi	r25, 0x04	; 4
    20f0:	fc 01       	movw	r30, r24
    20f2:	81 85       	ldd	r24, Z+9	; 0x09
    20f4:	88 2f       	mov	r24, r24
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	84 70       	andi	r24, 0x04	; 4
    20fa:	99 27       	eor	r25, r25
    20fc:	21 e0       	ldi	r18, 0x01	; 1
    20fe:	89 2b       	or	r24, r25
    2100:	09 f4       	brne	.+2      	; 0x2104 <__vector_6+0x58>
    2102:	20 e0       	ldi	r18, 0x00	; 0
    2104:	22 23       	and	r18, r18
    2106:	09 f4       	brne	.+2      	; 0x210a <__vector_6+0x5e>
    2108:	d2 c3       	rjmp	.+1956   	; 0x28ae <__vector_6+0x802>
    210a:	0e 94 ed 05 	call	0xbda	; 0xbda <system_tick>
    210e:	80 91 7f 47 	lds	r24, 0x477F	; 0x80477f <_ZL10g_sleeping>
    2112:	88 23       	and	r24, r24
    2114:	09 f4       	brne	.+2      	; 0x2118 <__vector_6+0x6c>
    2116:	3e c0       	rjmp	.+124    	; 0x2194 <__vector_6+0xe8>
    2118:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <_ZL23g_seconds_left_to_sleep>
    211c:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <_ZL23g_seconds_left_to_sleep+0x1>
    2120:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <_ZL23g_seconds_left_to_sleep+0x2>
    2124:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <_ZL23g_seconds_left_to_sleep+0x3>
    2128:	21 e0       	ldi	r18, 0x01	; 1
    212a:	89 2b       	or	r24, r25
    212c:	8a 2b       	or	r24, r26
    212e:	8b 2b       	or	r24, r27
    2130:	09 f4       	brne	.+2      	; 0x2134 <__vector_6+0x88>
    2132:	20 e0       	ldi	r18, 0x00	; 0
    2134:	22 23       	and	r18, r18
    2136:	99 f0       	breq	.+38     	; 0x215e <__vector_6+0xb2>
    2138:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <_ZL23g_seconds_left_to_sleep>
    213c:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <_ZL23g_seconds_left_to_sleep+0x1>
    2140:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <_ZL23g_seconds_left_to_sleep+0x2>
    2144:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <_ZL23g_seconds_left_to_sleep+0x3>
    2148:	01 97       	sbiw	r24, 0x01	; 1
    214a:	a1 09       	sbc	r26, r1
    214c:	b1 09       	sbc	r27, r1
    214e:	80 93 80 47 	sts	0x4780, r24	; 0x804780 <_ZL23g_seconds_left_to_sleep>
    2152:	90 93 81 47 	sts	0x4781, r25	; 0x804781 <_ZL23g_seconds_left_to_sleep+0x1>
    2156:	a0 93 82 47 	sts	0x4782, r26	; 0x804782 <_ZL23g_seconds_left_to_sleep+0x2>
    215a:	b0 93 83 47 	sts	0x4783, r27	; 0x804783 <_ZL23g_seconds_left_to_sleep+0x3>
    215e:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <_ZL23g_seconds_left_to_sleep>
    2162:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <_ZL23g_seconds_left_to_sleep+0x1>
    2166:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <_ZL23g_seconds_left_to_sleep+0x2>
    216a:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <_ZL23g_seconds_left_to_sleep+0x3>
    216e:	89 2b       	or	r24, r25
    2170:	8a 2b       	or	r24, r26
    2172:	8b 2b       	or	r24, r27
    2174:	21 f0       	breq	.+8      	; 0x217e <__vector_6+0xd2>
    2176:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    217a:	88 23       	and	r24, r24
    217c:	11 f0       	breq	.+4      	; 0x2182 <__vector_6+0xd6>
    217e:	81 e0       	ldi	r24, 0x01	; 1
    2180:	01 c0       	rjmp	.+2      	; 0x2184 <__vector_6+0xd8>
    2182:	80 e0       	ldi	r24, 0x00	; 0
    2184:	88 23       	and	r24, r24
    2186:	09 f4       	brne	.+2      	; 0x218a <__vector_6+0xde>
    2188:	92 c3       	rjmp	.+1828   	; 0x28ae <__vector_6+0x802>
    218a:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <_ZL13g_go_to_sleep>
    218e:	10 92 7f 47 	sts	0x477F, r1	; 0x80477f <_ZL10g_sleeping>
    2192:	8d c3       	rjmp	.+1818   	; 0x28ae <__vector_6+0x802>
    2194:	19 86       	std	Y+9, r1	; 0x09
    2196:	1a 86       	std	Y+10, r1	; 0x0a
    2198:	1b 86       	std	Y+11, r1	; 0x0b
    219a:	1c 86       	std	Y+12, r1	; 0x0c
    219c:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    21a0:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    21a4:	21 e0       	ldi	r18, 0x01	; 1
    21a6:	89 2b       	or	r24, r25
    21a8:	09 f4       	brne	.+2      	; 0x21ac <__vector_6+0x100>
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	22 23       	and	r18, r18
    21ae:	49 f0       	breq	.+18     	; 0x21c2 <__vector_6+0x116>
    21b0:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    21b4:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    21b8:	01 97       	sbiw	r24, 0x01	; 1
    21ba:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    21be:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    21c2:	80 91 7b 47 	lds	r24, 0x477B	; 0x80477b <g_event_commenced>
    21c6:	88 23       	and	r24, r24
    21c8:	09 f4       	brne	.+2      	; 0x21cc <__vector_6+0x120>
    21ca:	5c c0       	rjmp	.+184    	; 0x2284 <__vector_6+0x1d8>
    21cc:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    21d0:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    21d4:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    21d8:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    21dc:	89 2b       	or	r24, r25
    21de:	8a 2b       	or	r24, r26
    21e0:	8b 2b       	or	r24, r27
    21e2:	71 f0       	breq	.+28     	; 0x2200 <__vector_6+0x154>
    21e4:	90 91 7c 47 	lds	r25, 0x477C	; 0x80477c <g_check_for_next_event>
    21e8:	81 e0       	ldi	r24, 0x01	; 1
    21ea:	89 27       	eor	r24, r25
    21ec:	88 23       	and	r24, r24
    21ee:	41 f0       	breq	.+16     	; 0x2200 <__vector_6+0x154>
    21f0:	90 91 42 47 	lds	r25, 0x4742	; 0x804742 <_ZL20g_shutting_down_wifi>
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	89 27       	eor	r24, r25
    21f8:	88 23       	and	r24, r24
    21fa:	11 f0       	breq	.+4      	; 0x2200 <__vector_6+0x154>
    21fc:	81 e0       	ldi	r24, 0x01	; 1
    21fe:	01 c0       	rjmp	.+2      	; 0x2202 <__vector_6+0x156>
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	88 23       	and	r24, r24
    2204:	09 f4       	brne	.+2      	; 0x2208 <__vector_6+0x15c>
    2206:	3e c0       	rjmp	.+124    	; 0x2284 <__vector_6+0x1d8>
    2208:	ce 01       	movw	r24, r28
    220a:	09 96       	adiw	r24, 0x09	; 9
    220c:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    2210:	29 85       	ldd	r18, Y+9	; 0x09
    2212:	3a 85       	ldd	r19, Y+10	; 0x0a
    2214:	4b 85       	ldd	r20, Y+11	; 0x0b
    2216:	5c 85       	ldd	r21, Y+12	; 0x0c
    2218:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    221c:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    2220:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    2224:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    2228:	61 e0       	ldi	r22, 0x01	; 1
    222a:	28 17       	cp	r18, r24
    222c:	39 07       	cpc	r19, r25
    222e:	4a 07       	cpc	r20, r26
    2230:	5b 07       	cpc	r21, r27
    2232:	08 f4       	brcc	.+2      	; 0x2236 <__vector_6+0x18a>
    2234:	60 e0       	ldi	r22, 0x00	; 0
    2236:	66 23       	and	r22, r22
    2238:	29 f1       	breq	.+74     	; 0x2284 <__vector_6+0x1d8>
    223a:	8c ef       	ldi	r24, 0xFC	; 252
    223c:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2240:	10 92 3a 47 	sts	0x473A, r1	; 0x80473a <_ZL12g_on_the_air>
    2244:	10 92 3b 47 	sts	0x473B, r1	; 0x80473b <_ZL12g_on_the_air+0x1>
    2248:	10 92 3c 47 	sts	0x473C, r1	; 0x80473c <_ZL12g_on_the_air+0x2>
    224c:	10 92 3d 47 	sts	0x473D, r1	; 0x80473d <_ZL12g_on_the_air+0x3>
    2250:	80 e0       	ldi	r24, 0x00	; 0
    2252:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
    2256:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>
    225a:	10 92 7b 47 	sts	0x477B, r1	; 0x80477b <g_event_commenced>
    225e:	81 e0       	ldi	r24, 0x01	; 1
    2260:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <g_check_for_next_event>
    2264:	8a e5       	ldi	r24, 0x5A	; 90
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    226c:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    2270:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    2274:	88 23       	and	r24, r24
    2276:	19 f0       	breq	.+6      	; 0x227e <__vector_6+0x1d2>
    2278:	8c e3       	ldi	r24, 0x3C	; 60
    227a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    227e:	80 e0       	ldi	r24, 0x00	; 0
    2280:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2284:	80 91 7a 47 	lds	r24, 0x477A	; 0x80477a <g_event_enabled>
    2288:	88 23       	and	r24, r24
    228a:	09 f4       	brne	.+2      	; 0x228e <__vector_6+0x1e2>
    228c:	92 c2       	rjmp	.+1316   	; 0x27b2 <__vector_6+0x706>
    228e:	80 91 7b 47 	lds	r24, 0x477B	; 0x80477b <g_event_commenced>
    2292:	88 23       	and	r24, r24
    2294:	09 f4       	brne	.+2      	; 0x2298 <__vector_6+0x1ec>
    2296:	f0 c1       	rjmp	.+992    	; 0x2678 <__vector_6+0x5cc>
    2298:	80 91 3e 47 	lds	r24, 0x473E	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    229c:	90 91 3f 47 	lds	r25, 0x473F	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    22a0:	21 e0       	ldi	r18, 0x01	; 1
    22a2:	89 2b       	or	r24, r25
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <__vector_6+0x1fc>
    22a6:	20 e0       	ldi	r18, 0x00	; 0
    22a8:	22 23       	and	r18, r18
    22aa:	49 f0       	breq	.+18     	; 0x22be <__vector_6+0x212>
    22ac:	80 91 3e 47 	lds	r24, 0x473E	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    22b0:	90 91 3f 47 	lds	r25, 0x473F	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    22b4:	01 97       	sbiw	r24, 0x01	; 1
    22b6:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    22ba:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    22be:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    22c2:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    22c6:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    22ca:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    22ce:	21 e0       	ldi	r18, 0x01	; 1
    22d0:	89 2b       	or	r24, r25
    22d2:	8a 2b       	or	r24, r26
    22d4:	8b 2b       	or	r24, r27
    22d6:	09 f4       	brne	.+2      	; 0x22da <__vector_6+0x22e>
    22d8:	20 e0       	ldi	r18, 0x00	; 0
    22da:	22 23       	and	r18, r18
    22dc:	09 f4       	brne	.+2      	; 0x22e0 <__vector_6+0x234>
    22de:	69 c2       	rjmp	.+1234   	; 0x27b2 <__vector_6+0x706>
    22e0:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    22e4:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    22e8:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    22ec:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    22f0:	21 e0       	ldi	r18, 0x01	; 1
    22f2:	18 16       	cp	r1, r24
    22f4:	19 06       	cpc	r1, r25
    22f6:	1a 06       	cpc	r1, r26
    22f8:	1b 06       	cpc	r1, r27
    22fa:	0c f0       	brlt	.+2      	; 0x22fe <__vector_6+0x252>
    22fc:	20 e0       	ldi	r18, 0x00	; 0
    22fe:	22 23       	and	r18, r18
    2300:	09 f4       	brne	.+2      	; 0x2304 <__vector_6+0x258>
    2302:	5e c1       	rjmp	.+700    	; 0x25c0 <__vector_6+0x514>
    2304:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    2308:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    230c:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    2310:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    2314:	01 97       	sbiw	r24, 0x01	; 1
    2316:	a1 09       	sbc	r26, r1
    2318:	b1 09       	sbc	r27, r1
    231a:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    231e:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    2322:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    2326:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    232a:	80 91 3e 47 	lds	r24, 0x473E	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    232e:	90 91 3f 47 	lds	r25, 0x473F	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    2332:	89 2b       	or	r24, r25
    2334:	41 f4       	brne	.+16     	; 0x2346 <__vector_6+0x29a>
    2336:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    233a:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    233e:	89 2b       	or	r24, r25
    2340:	11 f0       	breq	.+4      	; 0x2346 <__vector_6+0x29a>
    2342:	81 e0       	ldi	r24, 0x01	; 1
    2344:	01 c0       	rjmp	.+2      	; 0x2348 <__vector_6+0x29c>
    2346:	80 e0       	ldi	r24, 0x00	; 0
    2348:	88 23       	and	r24, r24
    234a:	a9 f1       	breq	.+106    	; 0x23b6 <__vector_6+0x30a>
    234c:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    2350:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    2354:	9c 01       	movw	r18, r24
    2356:	40 e0       	ldi	r20, 0x00	; 0
    2358:	50 e0       	ldi	r21, 0x00	; 0
    235a:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    235e:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    2362:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    2366:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    236a:	61 e0       	ldi	r22, 0x01	; 1
    236c:	28 17       	cp	r18, r24
    236e:	39 07       	cpc	r19, r25
    2370:	4a 07       	cpc	r20, r26
    2372:	5b 07       	cpc	r21, r27
    2374:	09 f0       	breq	.+2      	; 0x2378 <__vector_6+0x2cc>
    2376:	60 e0       	ldi	r22, 0x00	; 0
    2378:	66 23       	and	r22, r22
    237a:	e9 f0       	breq	.+58     	; 0x23b6 <__vector_6+0x30a>
    237c:	8f ee       	ldi	r24, 0xEF	; 239
    237e:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2382:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    2386:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    238a:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    238e:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    2392:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    2396:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    239a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    239e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    23a2:	1d 86       	std	Y+13, r1	; 0x0d
    23a4:	ce 01       	movw	r24, r28
    23a6:	0d 96       	adiw	r24, 0x0d	; 13
    23a8:	40 e0       	ldi	r20, 0x00	; 0
    23aa:	50 e0       	ldi	r21, 0x00	; 0
    23ac:	bc 01       	movw	r22, r24
    23ae:	89 e5       	ldi	r24, 0x59	; 89
    23b0:	97 e4       	ldi	r25, 0x47	; 71
    23b2:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    23b6:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    23ba:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    23be:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    23c2:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    23c6:	21 e0       	ldi	r18, 0x01	; 1
    23c8:	89 2b       	or	r24, r25
    23ca:	8a 2b       	or	r24, r26
    23cc:	8b 2b       	or	r24, r27
    23ce:	09 f0       	breq	.+2      	; 0x23d2 <__vector_6+0x326>
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	22 23       	and	r18, r18
    23d4:	09 f4       	brne	.+2      	; 0x23d8 <__vector_6+0x32c>
    23d6:	ed c1       	rjmp	.+986    	; 0x27b2 <__vector_6+0x706>
    23d8:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    23dc:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    23e0:	21 e0       	ldi	r18, 0x01	; 1
    23e2:	89 2b       	or	r24, r25
    23e4:	09 f4       	brne	.+2      	; 0x23e8 <__vector_6+0x33c>
    23e6:	20 e0       	ldi	r18, 0x00	; 0
    23e8:	22 23       	and	r18, r18
    23ea:	09 f4       	brne	.+2      	; 0x23ee <__vector_6+0x342>
    23ec:	d0 c0       	rjmp	.+416    	; 0x258e <__vector_6+0x4e2>
    23ee:	80 e0       	ldi	r24, 0x00	; 0
    23f0:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
    23f4:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    23f8:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    23fc:	20 91 3a 47 	lds	r18, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    2400:	30 91 3b 47 	lds	r19, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    2404:	40 91 3c 47 	lds	r20, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    2408:	50 91 3d 47 	lds	r21, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    240c:	09 2e       	mov	r0, r25
    240e:	00 0c       	add	r0, r0
    2410:	aa 0b       	sbc	r26, r26
    2412:	bb 0b       	sbc	r27, r27
    2414:	79 01       	movw	r14, r18
    2416:	8a 01       	movw	r16, r20
    2418:	e8 1a       	sub	r14, r24
    241a:	f9 0a       	sbc	r15, r25
    241c:	0a 0b       	sbc	r16, r26
    241e:	1b 0b       	sbc	r17, r27
    2420:	d8 01       	movw	r26, r16
    2422:	c7 01       	movw	r24, r14
    2424:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    2428:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    242c:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    2430:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    2434:	81 e0       	ldi	r24, 0x01	; 1
    2436:	8d 87       	std	Y+13, r24	; 0x0d
    2438:	ce 01       	movw	r24, r28
    243a:	0d 96       	adiw	r24, 0x0d	; 13
    243c:	40 e0       	ldi	r20, 0x00	; 0
    243e:	50 e0       	ldi	r21, 0x00	; 0
    2440:	bc 01       	movw	r22, r24
    2442:	84 e4       	ldi	r24, 0x44	; 68
    2444:	97 e4       	ldi	r25, 0x47	; 71
    2446:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    244a:	8e ef       	ldi	r24, 0xFE	; 254
    244c:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2456:	19 82       	std	Y+1, r1	; 0x01
    2458:	1a 82       	std	Y+2, r1	; 0x02
    245a:	1b 82       	std	Y+3, r1	; 0x03
    245c:	1c 82       	std	Y+4, r1	; 0x04
    245e:	ce 01       	movw	r24, r28
    2460:	09 96       	adiw	r24, 0x09	; 9
    2462:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    2466:	29 85       	ldd	r18, Y+9	; 0x09
    2468:	3a 85       	ldd	r19, Y+10	; 0x0a
    246a:	4b 85       	ldd	r20, Y+11	; 0x0b
    246c:	5c 85       	ldd	r21, Y+12	; 0x0c
    246e:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    2472:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    2476:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    247a:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    247e:	61 e0       	ldi	r22, 0x01	; 1
    2480:	28 17       	cp	r18, r24
    2482:	39 07       	cpc	r19, r25
    2484:	4a 07       	cpc	r20, r26
    2486:	5b 07       	cpc	r21, r27
    2488:	08 f0       	brcs	.+2      	; 0x248c <__vector_6+0x3e0>
    248a:	60 e0       	ldi	r22, 0x00	; 0
    248c:	66 23       	and	r22, r22
    248e:	b1 f0       	breq	.+44     	; 0x24bc <__vector_6+0x410>
    2490:	29 85       	ldd	r18, Y+9	; 0x09
    2492:	3a 85       	ldd	r19, Y+10	; 0x0a
    2494:	4b 85       	ldd	r20, Y+11	; 0x0b
    2496:	5c 85       	ldd	r21, Y+12	; 0x0c
    2498:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    249c:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    24a0:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    24a4:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    24a8:	bc 01       	movw	r22, r24
    24aa:	cd 01       	movw	r24, r26
    24ac:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <_Z7timeDifmm>
    24b0:	dc 01       	movw	r26, r24
    24b2:	cb 01       	movw	r24, r22
    24b4:	89 83       	std	Y+1, r24	; 0x01
    24b6:	9a 83       	std	Y+2, r25	; 0x02
    24b8:	ab 83       	std	Y+3, r26	; 0x03
    24ba:	bc 83       	std	Y+4, r27	; 0x04
    24bc:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    24c0:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    24c4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    24c8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    24cc:	82 0f       	add	r24, r18
    24ce:	93 1f       	adc	r25, r19
    24d0:	0f 96       	adiw	r24, 0x0f	; 15
    24d2:	9c 01       	movw	r18, r24
    24d4:	99 0f       	add	r25, r25
    24d6:	44 0b       	sbc	r20, r20
    24d8:	55 0b       	sbc	r21, r21
    24da:	61 e0       	ldi	r22, 0x01	; 1
    24dc:	89 81       	ldd	r24, Y+1	; 0x01
    24de:	9a 81       	ldd	r25, Y+2	; 0x02
    24e0:	ab 81       	ldd	r26, Y+3	; 0x03
    24e2:	bc 81       	ldd	r27, Y+4	; 0x04
    24e4:	28 17       	cp	r18, r24
    24e6:	39 07       	cpc	r19, r25
    24e8:	4a 07       	cpc	r20, r26
    24ea:	5b 07       	cpc	r21, r27
    24ec:	0c f0       	brlt	.+2      	; 0x24f0 <__vector_6+0x444>
    24ee:	60 e0       	ldi	r22, 0x00	; 0
    24f0:	66 23       	and	r22, r22
    24f2:	09 f4       	brne	.+2      	; 0x24f6 <__vector_6+0x44a>
    24f4:	5e c1       	rjmp	.+700    	; 0x27b2 <__vector_6+0x706>
    24f6:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    24fa:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    24fe:	40 97       	sbiw	r24, 0x10	; 16
    2500:	34 f0       	brlt	.+12     	; 0x250e <__vector_6+0x462>
    2502:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2506:	88 23       	and	r24, r24
    2508:	11 f4       	brne	.+4      	; 0x250e <__vector_6+0x462>
    250a:	81 e0       	ldi	r24, 0x01	; 1
    250c:	01 c0       	rjmp	.+2      	; 0x2510 <__vector_6+0x464>
    250e:	80 e0       	ldi	r24, 0x00	; 0
    2510:	88 23       	and	r24, r24
    2512:	09 f4       	brne	.+2      	; 0x2516 <__vector_6+0x46a>
    2514:	4e c1       	rjmp	.+668    	; 0x27b2 <__vector_6+0x706>
    2516:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    251a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    251e:	0a 97       	sbiw	r24, 0x0a	; 10
    2520:	09 2e       	mov	r0, r25
    2522:	00 0c       	add	r0, r0
    2524:	aa 0b       	sbc	r26, r26
    2526:	bb 0b       	sbc	r27, r27
    2528:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <_ZL18g_seconds_to_sleep>
    252c:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    2530:	a0 93 19 40 	sts	0x4019, r26	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    2534:	b0 93 1a 40 	sts	0x401A, r27	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    2538:	82 e0       	ldi	r24, 0x02	; 2
    253a:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZL11g_sleepType>
    253e:	81 e0       	ldi	r24, 0x01	; 1
    2540:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <_ZL13g_go_to_sleep>
    2544:	1d 82       	std	Y+5, r1	; 0x05
    2546:	1e 82       	std	Y+6, r1	; 0x06
    2548:	20 91 3e 47 	lds	r18, 0x473E	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    254c:	30 91 3f 47 	lds	r19, 0x473F	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    2550:	80 91 17 40 	lds	r24, 0x4017	; 0x804017 <_ZL18g_seconds_to_sleep>
    2554:	90 91 18 40 	lds	r25, 0x4018	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    2558:	a0 91 19 40 	lds	r26, 0x4019	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    255c:	b0 91 1a 40 	lds	r27, 0x401A	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    2560:	89 01       	movw	r16, r18
    2562:	08 1b       	sub	r16, r24
    2564:	19 0b       	sbc	r17, r25
    2566:	c8 01       	movw	r24, r16
    2568:	8f 83       	std	Y+7, r24	; 0x07
    256a:	98 87       	std	Y+8, r25	; 0x08
    256c:	2d 81       	ldd	r18, Y+5	; 0x05
    256e:	3e 81       	ldd	r19, Y+6	; 0x06
    2570:	8f 81       	ldd	r24, Y+7	; 0x07
    2572:	98 85       	ldd	r25, Y+8	; 0x08
    2574:	28 17       	cp	r18, r24
    2576:	39 07       	cpc	r19, r25
    2578:	1c f4       	brge	.+6      	; 0x2580 <__vector_6+0x4d4>
    257a:	8f 81       	ldd	r24, Y+7	; 0x07
    257c:	98 85       	ldd	r25, Y+8	; 0x08
    257e:	02 c0       	rjmp	.+4      	; 0x2584 <__vector_6+0x4d8>
    2580:	8d 81       	ldd	r24, Y+5	; 0x05
    2582:	9e 81       	ldd	r25, Y+6	; 0x06
    2584:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    2588:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    258c:	12 c1       	rjmp	.+548    	; 0x27b2 <__vector_6+0x706>
    258e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2592:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2596:	09 2e       	mov	r0, r25
    2598:	00 0c       	add	r0, r0
    259a:	aa 0b       	sbc	r26, r26
    259c:	bb 0b       	sbc	r27, r27
    259e:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    25a2:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    25a6:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    25aa:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    25ae:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    25b2:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    25b6:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    25ba:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    25be:	f9 c0       	rjmp	.+498    	; 0x27b2 <__vector_6+0x706>
    25c0:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    25c4:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    25c8:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    25cc:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    25d0:	88 27       	eor	r24, r24
    25d2:	b7 fd       	sbrc	r27, 7
    25d4:	83 95       	inc	r24
    25d6:	99 27       	eor	r25, r25
    25d8:	aa 27       	eor	r26, r26
    25da:	bb 27       	eor	r27, r27
    25dc:	88 23       	and	r24, r24
    25de:	09 f4       	brne	.+2      	; 0x25e2 <__vector_6+0x536>
    25e0:	e8 c0       	rjmp	.+464    	; 0x27b2 <__vector_6+0x706>
    25e2:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    25e6:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    25ea:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    25ee:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    25f2:	01 96       	adiw	r24, 0x01	; 1
    25f4:	a1 1d       	adc	r26, r1
    25f6:	b1 1d       	adc	r27, r1
    25f8:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    25fc:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    2600:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    2604:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    2608:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    260c:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    2610:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    2614:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    2618:	21 e0       	ldi	r18, 0x01	; 1
    261a:	89 2b       	or	r24, r25
    261c:	8a 2b       	or	r24, r26
    261e:	8b 2b       	or	r24, r27
    2620:	09 f0       	breq	.+2      	; 0x2624 <__vector_6+0x578>
    2622:	20 e0       	ldi	r18, 0x00	; 0
    2624:	22 23       	and	r18, r18
    2626:	09 f4       	brne	.+2      	; 0x262a <__vector_6+0x57e>
    2628:	c4 c0       	rjmp	.+392    	; 0x27b2 <__vector_6+0x706>
    262a:	8d ef       	ldi	r24, 0xFD	; 253
    262c:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2630:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2634:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2638:	09 2e       	mov	r0, r25
    263a:	00 0c       	add	r0, r0
    263c:	aa 0b       	sbc	r26, r26
    263e:	bb 0b       	sbc	r27, r27
    2640:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    2644:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    2648:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    264c:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    2650:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2654:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    2658:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    265c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2660:	81 e0       	ldi	r24, 0x01	; 1
    2662:	8e 87       	std	Y+14, r24	; 0x0e
    2664:	ce 01       	movw	r24, r28
    2666:	0e 96       	adiw	r24, 0x0e	; 14
    2668:	40 e0       	ldi	r20, 0x00	; 0
    266a:	50 e0       	ldi	r21, 0x00	; 0
    266c:	bc 01       	movw	r22, r24
    266e:	84 e4       	ldi	r24, 0x44	; 68
    2670:	97 e4       	ldi	r25, 0x47	; 71
    2672:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    2676:	9d c0       	rjmp	.+314    	; 0x27b2 <__vector_6+0x706>
    2678:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    267c:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    2680:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    2684:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    2688:	21 e0       	ldi	r18, 0x01	; 1
    268a:	89 2b       	or	r24, r25
    268c:	8a 2b       	or	r24, r26
    268e:	8b 2b       	or	r24, r27
    2690:	09 f4       	brne	.+2      	; 0x2694 <__vector_6+0x5e8>
    2692:	20 e0       	ldi	r18, 0x00	; 0
    2694:	22 23       	and	r18, r18
    2696:	09 f4       	brne	.+2      	; 0x269a <__vector_6+0x5ee>
    2698:	8c c0       	rjmp	.+280    	; 0x27b2 <__vector_6+0x706>
    269a:	ce 01       	movw	r24, r28
    269c:	09 96       	adiw	r24, 0x09	; 9
    269e:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    26a2:	29 85       	ldd	r18, Y+9	; 0x09
    26a4:	3a 85       	ldd	r19, Y+10	; 0x0a
    26a6:	4b 85       	ldd	r20, Y+11	; 0x0b
    26a8:	5c 85       	ldd	r21, Y+12	; 0x0c
    26aa:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    26ae:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    26b2:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    26b6:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    26ba:	61 e0       	ldi	r22, 0x01	; 1
    26bc:	28 17       	cp	r18, r24
    26be:	39 07       	cpc	r19, r25
    26c0:	4a 07       	cpc	r20, r26
    26c2:	5b 07       	cpc	r21, r27
    26c4:	08 f4       	brcc	.+2      	; 0x26c8 <__vector_6+0x61c>
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	66 23       	and	r22, r22
    26ca:	09 f4       	brne	.+2      	; 0x26ce <__vector_6+0x622>
    26cc:	72 c0       	rjmp	.+228    	; 0x27b2 <__vector_6+0x706>
    26ce:	80 91 70 47 	lds	r24, 0x4770	; 0x804770 <g_intra_cycle_delay_time>
    26d2:	90 91 71 47 	lds	r25, 0x4771	; 0x804771 <g_intra_cycle_delay_time+0x1>
    26d6:	21 e0       	ldi	r18, 0x01	; 1
    26d8:	89 2b       	or	r24, r25
    26da:	09 f4       	brne	.+2      	; 0x26de <__vector_6+0x632>
    26dc:	20 e0       	ldi	r18, 0x00	; 0
    26de:	22 23       	and	r18, r18
    26e0:	71 f1       	breq	.+92     	; 0x273e <__vector_6+0x692>
    26e2:	8e ef       	ldi	r24, 0xFE	; 254
    26e4:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    26e8:	80 91 70 47 	lds	r24, 0x4770	; 0x804770 <g_intra_cycle_delay_time>
    26ec:	90 91 71 47 	lds	r25, 0x4771	; 0x804771 <g_intra_cycle_delay_time+0x1>
    26f0:	91 95       	neg	r25
    26f2:	81 95       	neg	r24
    26f4:	91 09       	sbc	r25, r1
    26f6:	09 2e       	mov	r0, r25
    26f8:	00 0c       	add	r0, r0
    26fa:	aa 0b       	sbc	r26, r26
    26fc:	bb 0b       	sbc	r27, r27
    26fe:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    2702:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    2706:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    270a:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    270e:	20 91 70 47 	lds	r18, 0x4770	; 0x804770 <g_intra_cycle_delay_time>
    2712:	30 91 71 47 	lds	r19, 0x4771	; 0x804771 <g_intra_cycle_delay_time+0x1>
    2716:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    271a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    271e:	82 0f       	add	r24, r18
    2720:	93 1f       	adc	r25, r19
    2722:	9c 01       	movw	r18, r24
    2724:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    2728:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    272c:	a9 01       	movw	r20, r18
    272e:	48 1b       	sub	r20, r24
    2730:	59 0b       	sbc	r21, r25
    2732:	ca 01       	movw	r24, r20
    2734:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    2738:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    273c:	37 c0       	rjmp	.+110    	; 0x27ac <__vector_6+0x700>
    273e:	8d ef       	ldi	r24, 0xFD	; 253
    2740:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2744:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2748:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    274c:	09 2e       	mov	r0, r25
    274e:	00 0c       	add	r0, r0
    2750:	aa 0b       	sbc	r26, r26
    2752:	bb 0b       	sbc	r27, r27
    2754:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    2758:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    275c:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    2760:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    2764:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2768:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    276c:	9c 01       	movw	r18, r24
    276e:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    2772:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    2776:	f9 01       	movw	r30, r18
    2778:	e8 1b       	sub	r30, r24
    277a:	f9 0b       	sbc	r31, r25
    277c:	cf 01       	movw	r24, r30
    277e:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    2782:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    2786:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    278a:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    278e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2792:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	8f 87       	std	Y+15, r24	; 0x0f
    279a:	ce 01       	movw	r24, r28
    279c:	0f 96       	adiw	r24, 0x0f	; 15
    279e:	40 e0       	ldi	r20, 0x00	; 0
    27a0:	50 e0       	ldi	r21, 0x00	; 0
    27a2:	bc 01       	movw	r22, r24
    27a4:	84 e4       	ldi	r24, 0x44	; 68
    27a6:	97 e4       	ldi	r25, 0x47	; 71
    27a8:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    27ac:	81 e0       	ldi	r24, 0x01	; 1
    27ae:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <g_event_commenced>
    27b2:	90 91 41 47 	lds	r25, 0x4741	; 0x804741 <_ZL19g_wifi_enable_delay>
    27b6:	81 e0       	ldi	r24, 0x01	; 1
    27b8:	99 23       	and	r25, r25
    27ba:	09 f4       	brne	.+2      	; 0x27be <__vector_6+0x712>
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	88 23       	and	r24, r24
    27c0:	91 f0       	breq	.+36     	; 0x27e6 <__vector_6+0x73a>
    27c2:	80 91 41 47 	lds	r24, 0x4741	; 0x804741 <_ZL19g_wifi_enable_delay>
    27c6:	81 50       	subi	r24, 0x01	; 1
    27c8:	80 93 41 47 	sts	0x4741, r24	; 0x804741 <_ZL19g_wifi_enable_delay>
    27cc:	90 91 41 47 	lds	r25, 0x4741	; 0x804741 <_ZL19g_wifi_enable_delay>
    27d0:	81 e0       	ldi	r24, 0x01	; 1
    27d2:	99 23       	and	r25, r25
    27d4:	09 f0       	breq	.+2      	; 0x27d8 <__vector_6+0x72c>
    27d6:	80 e0       	ldi	r24, 0x00	; 0
    27d8:	88 23       	and	r24, r24
    27da:	09 f4       	brne	.+2      	; 0x27de <__vector_6+0x732>
    27dc:	68 c0       	rjmp	.+208    	; 0x28ae <__vector_6+0x802>
    27de:	80 e0       	ldi	r24, 0x00	; 0
    27e0:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <_Z10wifi_resetb>
    27e4:	64 c0       	rjmp	.+200    	; 0x28ae <__vector_6+0x802>
    27e6:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    27ea:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    27ee:	89 2b       	or	r24, r25
    27f0:	81 f0       	breq	.+32     	; 0x2812 <__vector_6+0x766>
    27f2:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZL20g_shutting_down_wifi>
    27f6:	88 23       	and	r24, r24
    27f8:	61 f4       	brne	.+24     	; 0x2812 <__vector_6+0x766>
    27fa:	90 91 7c 47 	lds	r25, 0x477C	; 0x80477c <g_check_for_next_event>
    27fe:	81 e0       	ldi	r24, 0x01	; 1
    2800:	89 27       	eor	r24, r25
    2802:	88 23       	and	r24, r24
    2804:	41 f0       	breq	.+16     	; 0x2816 <__vector_6+0x76a>
    2806:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_waiting_for_next_event>
    280a:	81 e0       	ldi	r24, 0x01	; 1
    280c:	89 27       	eor	r24, r25
    280e:	88 23       	and	r24, r24
    2810:	11 f0       	breq	.+4      	; 0x2816 <__vector_6+0x76a>
    2812:	81 e0       	ldi	r24, 0x01	; 1
    2814:	01 c0       	rjmp	.+2      	; 0x2818 <__vector_6+0x76c>
    2816:	80 e0       	ldi	r24, 0x00	; 0
    2818:	88 23       	and	r24, r24
    281a:	09 f4       	brne	.+2      	; 0x281e <__vector_6+0x772>
    281c:	41 c0       	rjmp	.+130    	; 0x28a0 <__vector_6+0x7f4>
    281e:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2822:	81 e0       	ldi	r24, 0x01	; 1
    2824:	99 23       	and	r25, r25
    2826:	09 f4       	brne	.+2      	; 0x282a <__vector_6+0x77e>
    2828:	80 e0       	ldi	r24, 0x00	; 0
    282a:	88 23       	and	r24, r24
    282c:	c9 f1       	breq	.+114    	; 0x28a0 <__vector_6+0x7f4>
    282e:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2832:	81 50       	subi	r24, 0x01	; 1
    2834:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2838:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    283c:	81 e0       	ldi	r24, 0x01	; 1
    283e:	99 23       	and	r25, r25
    2840:	09 f0       	breq	.+2      	; 0x2844 <__vector_6+0x798>
    2842:	80 e0       	ldi	r24, 0x00	; 0
    2844:	88 23       	and	r24, r24
    2846:	61 f1       	breq	.+88     	; 0x28a0 <__vector_6+0x7f4>
    2848:	81 e0       	ldi	r24, 0x01	; 1
    284a:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <_Z10wifi_resetb>
    284e:	80 e0       	ldi	r24, 0x00	; 0
    2850:	0e 94 93 37 	call	0x6f26	; 0x6f26 <_Z10wifi_powerb>
    2854:	10 92 42 47 	sts	0x4742, r1	; 0x804742 <_ZL20g_shutting_down_wifi>
    2858:	90 91 7a 47 	lds	r25, 0x477A	; 0x80477a <g_event_enabled>
    285c:	81 e0       	ldi	r24, 0x01	; 1
    285e:	89 27       	eor	r24, r25
    2860:	88 23       	and	r24, r24
    2862:	91 f0       	breq	.+36     	; 0x2888 <__vector_6+0x7dc>
    2864:	84 e0       	ldi	r24, 0x04	; 4
    2866:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZL11g_sleepType>
    286a:	81 e0       	ldi	r24, 0x01	; 1
    286c:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <_ZL13g_go_to_sleep>
    2870:	8f ef       	ldi	r24, 0xFF	; 255
    2872:	9f ef       	ldi	r25, 0xFF	; 255
    2874:	dc 01       	movw	r26, r24
    2876:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <_ZL18g_seconds_to_sleep>
    287a:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    287e:	a0 93 19 40 	sts	0x4019, r26	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    2882:	b0 93 1a 40 	sts	0x401A, r27	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    2886:	0a c0       	rjmp	.+20     	; 0x289c <__vector_6+0x7f0>
    2888:	90 91 43 47 	lds	r25, 0x4743	; 0x804743 <_ZL11g_sleepType>
    288c:	81 e0       	ldi	r24, 0x01	; 1
    288e:	93 30       	cpi	r25, 0x03	; 3
    2890:	09 f0       	breq	.+2      	; 0x2894 <__vector_6+0x7e8>
    2892:	80 e0       	ldi	r24, 0x00	; 0
    2894:	88 23       	and	r24, r24
    2896:	11 f0       	breq	.+4      	; 0x289c <__vector_6+0x7f0>
    2898:	0e 94 fc 25 	call	0x4bf8	; 0x4bf8 <_Z12eventEnabledv>
    289c:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    28a0:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    28a4:	88 23       	and	r24, r24
    28a6:	19 f0       	breq	.+6      	; 0x28ae <__vector_6+0x802>
    28a8:	81 e0       	ldi	r24, 0x01	; 1
    28aa:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL16g_report_seconds>
    28ae:	80 e0       	ldi	r24, 0x00	; 0
    28b0:	94 e0       	ldi	r25, 0x04	; 4
    28b2:	2f ef       	ldi	r18, 0xFF	; 255
    28b4:	fc 01       	movw	r30, r24
    28b6:	21 87       	std	Z+9, r18	; 0x09
    28b8:	00 00       	nop
    28ba:	2f 96       	adiw	r28, 0x0f	; 15
    28bc:	cd bf       	out	0x3d, r28	; 61
    28be:	de bf       	out	0x3e, r29	; 62
    28c0:	df 91       	pop	r29
    28c2:	cf 91       	pop	r28
    28c4:	ff 91       	pop	r31
    28c6:	ef 91       	pop	r30
    28c8:	bf 91       	pop	r27
    28ca:	af 91       	pop	r26
    28cc:	9f 91       	pop	r25
    28ce:	8f 91       	pop	r24
    28d0:	7f 91       	pop	r23
    28d2:	6f 91       	pop	r22
    28d4:	5f 91       	pop	r21
    28d6:	4f 91       	pop	r20
    28d8:	3f 91       	pop	r19
    28da:	2f 91       	pop	r18
    28dc:	1f 91       	pop	r17
    28de:	0f 91       	pop	r16
    28e0:	ff 90       	pop	r15
    28e2:	ef 90       	pop	r14
    28e4:	0f 90       	pop	r0
    28e6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    28ea:	0f 90       	pop	r0
    28ec:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    28f0:	0f 90       	pop	r0
    28f2:	1f 90       	pop	r1
    28f4:	18 95       	reti

000028f6 <__vector_22>:
    28f6:	1f 92       	push	r1
    28f8:	0f 92       	push	r0
    28fa:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    28fe:	0f 92       	push	r0
    2900:	11 24       	eor	r1, r1
    2902:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2906:	0f 92       	push	r0
    2908:	2f 93       	push	r18
    290a:	3f 93       	push	r19
    290c:	4f 93       	push	r20
    290e:	5f 93       	push	r21
    2910:	6f 93       	push	r22
    2912:	7f 93       	push	r23
    2914:	8f 93       	push	r24
    2916:	9f 93       	push	r25
    2918:	af 93       	push	r26
    291a:	bf 93       	push	r27
    291c:	ef 93       	push	r30
    291e:	ff 93       	push	r31
    2920:	cf 93       	push	r28
    2922:	df 93       	push	r29
    2924:	1f 92       	push	r1
    2926:	cd b7       	in	r28, 0x3d	; 61
    2928:	de b7       	in	r29, 0x3e	; 62
    292a:	80 e6       	ldi	r24, 0x60	; 96
    292c:	94 e0       	ldi	r25, 0x04	; 4
    292e:	fc 01       	movw	r30, r24
    2930:	81 85       	ldd	r24, Z+9	; 0x09
    2932:	88 2f       	mov	r24, r24
    2934:	90 e0       	ldi	r25, 0x00	; 0
    2936:	82 70       	andi	r24, 0x02	; 2
    2938:	99 27       	eor	r25, r25
    293a:	21 e0       	ldi	r18, 0x01	; 1
    293c:	89 2b       	or	r24, r25
    293e:	09 f4       	brne	.+2      	; 0x2942 <__vector_22+0x4c>
    2940:	20 e0       	ldi	r18, 0x00	; 0
    2942:	22 23       	and	r18, r18
    2944:	b1 f0       	breq	.+44     	; 0x2972 <__vector_22+0x7c>
    2946:	0e 94 80 29 	call	0x5300	; 0x5300 <_Z18antennaIsConnectedv>
    294a:	89 83       	std	Y+1, r24	; 0x01
    294c:	99 81       	ldd	r25, Y+1	; 0x01
    294e:	81 e0       	ldi	r24, 0x01	; 1
    2950:	89 27       	eor	r24, r25
    2952:	88 23       	and	r24, r24
    2954:	71 f0       	breq	.+28     	; 0x2972 <__vector_22+0x7c>
    2956:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <g_antenna_connect_state>
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	91 30       	cpi	r25, 0x01	; 1
    295e:	09 f4       	brne	.+2      	; 0x2962 <__vector_22+0x6c>
    2960:	80 e0       	ldi	r24, 0x00	; 0
    2962:	88 23       	and	r24, r24
    2964:	31 f0       	breq	.+12     	; 0x2972 <__vector_22+0x7c>
    2966:	81 e0       	ldi	r24, 0x01	; 1
    2968:	80 93 37 47 	sts	0x4737, r24	; 0x804737 <g_antenna_connect_state>
    296c:	81 e0       	ldi	r24, 0x01	; 1
    296e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2972:	80 e6       	ldi	r24, 0x60	; 96
    2974:	94 e0       	ldi	r25, 0x04	; 4
    2976:	2f ef       	ldi	r18, 0xFF	; 255
    2978:	fc 01       	movw	r30, r24
    297a:	21 87       	std	Z+9, r18	; 0x09
    297c:	00 00       	nop
    297e:	0f 90       	pop	r0
    2980:	df 91       	pop	r29
    2982:	cf 91       	pop	r28
    2984:	ff 91       	pop	r31
    2986:	ef 91       	pop	r30
    2988:	bf 91       	pop	r27
    298a:	af 91       	pop	r26
    298c:	9f 91       	pop	r25
    298e:	8f 91       	pop	r24
    2990:	7f 91       	pop	r23
    2992:	6f 91       	pop	r22
    2994:	5f 91       	pop	r21
    2996:	4f 91       	pop	r20
    2998:	3f 91       	pop	r19
    299a:	2f 91       	pop	r18
    299c:	0f 90       	pop	r0
    299e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    29a2:	0f 90       	pop	r0
    29a4:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    29a8:	0f 90       	pop	r0
    29aa:	1f 90       	pop	r1
    29ac:	18 95       	reti

000029ae <__vector_12>:
    29ae:	1f 92       	push	r1
    29b0:	0f 92       	push	r0
    29b2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    29b6:	0f 92       	push	r0
    29b8:	11 24       	eor	r1, r1
    29ba:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    29be:	0f 92       	push	r0
    29c0:	2f 93       	push	r18
    29c2:	3f 93       	push	r19
    29c4:	4f 93       	push	r20
    29c6:	5f 93       	push	r21
    29c8:	6f 93       	push	r22
    29ca:	7f 93       	push	r23
    29cc:	8f 93       	push	r24
    29ce:	9f 93       	push	r25
    29d0:	af 93       	push	r26
    29d2:	bf 93       	push	r27
    29d4:	ef 93       	push	r30
    29d6:	ff 93       	push	r31
    29d8:	cf 93       	push	r28
    29da:	df 93       	push	r29
    29dc:	00 d0       	rcall	.+0      	; 0x29de <__vector_12+0x30>
    29de:	cd b7       	in	r28, 0x3d	; 61
    29e0:	de b7       	in	r29, 0x3e	; 62
    29e2:	80 e0       	ldi	r24, 0x00	; 0
    29e4:	9b e0       	ldi	r25, 0x0B	; 11
    29e6:	fc 01       	movw	r30, r24
    29e8:	86 81       	ldd	r24, Z+6	; 0x06
    29ea:	88 2f       	mov	r24, r24
    29ec:	90 e0       	ldi	r25, 0x00	; 0
    29ee:	81 70       	andi	r24, 0x01	; 1
    29f0:	99 27       	eor	r25, r25
    29f2:	21 e0       	ldi	r18, 0x01	; 1
    29f4:	89 2b       	or	r24, r25
    29f6:	09 f4       	brne	.+2      	; 0x29fa <__vector_12+0x4c>
    29f8:	20 e0       	ldi	r18, 0x00	; 0
    29fa:	22 23       	and	r18, r18
    29fc:	09 f4       	brne	.+2      	; 0x2a00 <__vector_12+0x52>
    29fe:	02 c1       	rjmp	.+516    	; 0x2c04 <__vector_12+0x256>
    2a00:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    2a04:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    2a08:	21 e0       	ldi	r18, 0x01	; 1
    2a0a:	89 2b       	or	r24, r25
    2a0c:	09 f4       	brne	.+2      	; 0x2a10 <__vector_12+0x62>
    2a0e:	20 e0       	ldi	r18, 0x00	; 0
    2a10:	22 23       	and	r18, r18
    2a12:	49 f0       	breq	.+18     	; 0x2a26 <__vector_12+0x78>
    2a14:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    2a18:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    2a1c:	01 97       	sbiw	r24, 0x01	; 1
    2a1e:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    2a22:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    2a26:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c1_timeout_ticks>
    2a2a:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    2a2e:	21 e0       	ldi	r18, 0x01	; 1
    2a30:	89 2b       	or	r24, r25
    2a32:	09 f4       	brne	.+2      	; 0x2a36 <__vector_12+0x88>
    2a34:	20 e0       	ldi	r18, 0x00	; 0
    2a36:	22 23       	and	r18, r18
    2a38:	49 f0       	breq	.+18     	; 0x2a4c <__vector_12+0x9e>
    2a3a:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c1_timeout_ticks>
    2a3e:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    2a42:	01 97       	sbiw	r24, 0x01	; 1
    2a44:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c1_timeout_ticks>
    2a48:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    2a4c:	80 91 35 47 	lds	r24, 0x4735	; 0x804735 <_ZL21g_util_tick_countdown>
    2a50:	90 91 36 47 	lds	r25, 0x4736	; 0x804736 <_ZL21g_util_tick_countdown+0x1>
    2a54:	21 e0       	ldi	r18, 0x01	; 1
    2a56:	89 2b       	or	r24, r25
    2a58:	09 f4       	brne	.+2      	; 0x2a5c <__vector_12+0xae>
    2a5a:	20 e0       	ldi	r18, 0x00	; 0
    2a5c:	22 23       	and	r18, r18
    2a5e:	49 f0       	breq	.+18     	; 0x2a72 <__vector_12+0xc4>
    2a60:	80 91 35 47 	lds	r24, 0x4735	; 0x804735 <_ZL21g_util_tick_countdown>
    2a64:	90 91 36 47 	lds	r25, 0x4736	; 0x804736 <_ZL21g_util_tick_countdown+0x1>
    2a68:	01 97       	sbiw	r24, 0x01	; 1
    2a6a:	80 93 35 47 	sts	0x4735, r24	; 0x804735 <_ZL21g_util_tick_countdown>
    2a6e:	90 93 36 47 	sts	0x4736, r25	; 0x804736 <_ZL21g_util_tick_countdown+0x1>
    2a72:	87 e0       	ldi	r24, 0x07	; 7
    2a74:	0e 94 09 10 	call	0x2012	; 0x2012 <PORTC_get_pin_level>
    2a78:	98 2f       	mov	r25, r24
    2a7a:	81 e0       	ldi	r24, 0x01	; 1
    2a7c:	89 27       	eor	r24, r25
    2a7e:	88 23       	and	r24, r24
    2a80:	a1 f0       	breq	.+40     	; 0x2aaa <__vector_12+0xfc>
    2a82:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <g_switch_closed_count>
    2a86:	90 91 8f 47 	lds	r25, 0x478F	; 0x80478f <g_switch_closed_count+0x1>
    2a8a:	21 e0       	ldi	r18, 0x01	; 1
    2a8c:	88 3e       	cpi	r24, 0xE8	; 232
    2a8e:	93 40       	sbci	r25, 0x03	; 3
    2a90:	08 f0       	brcs	.+2      	; 0x2a94 <__vector_12+0xe6>
    2a92:	20 e0       	ldi	r18, 0x00	; 0
    2a94:	22 23       	and	r18, r18
    2a96:	49 f0       	breq	.+18     	; 0x2aaa <__vector_12+0xfc>
    2a98:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <g_switch_closed_count>
    2a9c:	90 91 8f 47 	lds	r25, 0x478F	; 0x80478f <g_switch_closed_count+0x1>
    2aa0:	01 96       	adiw	r24, 0x01	; 1
    2aa2:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <g_switch_closed_count>
    2aa6:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <g_switch_closed_count+0x1>
    2aaa:	0e 94 ae 25 	call	0x4b5c	; 0x4b5c <_Z19updateAntennaStatusv>
    2aae:	80 91 7a 47 	lds	r24, 0x477A	; 0x80477a <g_event_enabled>
    2ab2:	88 23       	and	r24, r24
    2ab4:	31 f0       	breq	.+12     	; 0x2ac2 <__vector_12+0x114>
    2ab6:	80 91 7b 47 	lds	r24, 0x477B	; 0x80477b <g_event_commenced>
    2aba:	88 23       	and	r24, r24
    2abc:	11 f0       	breq	.+4      	; 0x2ac2 <__vector_12+0x114>
    2abe:	81 e0       	ldi	r24, 0x01	; 1
    2ac0:	01 c0       	rjmp	.+2      	; 0x2ac4 <__vector_12+0x116>
    2ac2:	80 e0       	ldi	r24, 0x00	; 0
    2ac4:	88 23       	and	r24, r24
    2ac6:	09 f4       	brne	.+2      	; 0x2aca <__vector_12+0x11c>
    2ac8:	9d c0       	rjmp	.+314    	; 0x2c04 <__vector_12+0x256>
    2aca:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    2ace:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    2ad2:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    2ad6:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    2ada:	21 e0       	ldi	r18, 0x01	; 1
    2adc:	18 16       	cp	r1, r24
    2ade:	19 06       	cpc	r1, r25
    2ae0:	1a 06       	cpc	r1, r26
    2ae2:	1b 06       	cpc	r1, r27
    2ae4:	0c f0       	brlt	.+2      	; 0x2ae8 <__vector_12+0x13a>
    2ae6:	20 e0       	ldi	r18, 0x00	; 0
    2ae8:	22 23       	and	r18, r18
    2aea:	09 f4       	brne	.+2      	; 0x2aee <__vector_12+0x140>
    2aec:	69 c0       	rjmp	.+210    	; 0x2bc0 <__vector_12+0x212>
    2aee:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <_ZZ11__vector_12E7codeInc>
    2af2:	90 91 a1 47 	lds	r25, 0x47A1	; 0x8047a1 <_ZZ11__vector_12E7codeInc+0x1>
    2af6:	89 2b       	or	r24, r25
    2af8:	09 f4       	brne	.+2      	; 0x2afc <__vector_12+0x14e>
    2afa:	51 c0       	rjmp	.+162    	; 0x2b9e <__vector_12+0x1f0>
    2afc:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <_ZZ11__vector_12E7codeInc>
    2b00:	90 91 a1 47 	lds	r25, 0x47A1	; 0x8047a1 <_ZZ11__vector_12E7codeInc+0x1>
    2b04:	01 97       	sbiw	r24, 0x01	; 1
    2b06:	80 93 a0 47 	sts	0x47A0, r24	; 0x8047a0 <_ZZ11__vector_12E7codeInc>
    2b0a:	90 93 a1 47 	sts	0x47A1, r25	; 0x8047a1 <_ZZ11__vector_12E7codeInc+0x1>
    2b0e:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <_ZZ11__vector_12E7codeInc>
    2b12:	90 91 a1 47 	lds	r25, 0x47A1	; 0x8047a1 <_ZZ11__vector_12E7codeInc+0x1>
    2b16:	89 2b       	or	r24, r25
    2b18:	09 f0       	breq	.+2      	; 0x2b1c <__vector_12+0x16e>
    2b1a:	74 c0       	rjmp	.+232    	; 0x2c04 <__vector_12+0x256>
    2b1c:	ce 01       	movw	r24, r28
    2b1e:	02 96       	adiw	r24, 0x02	; 2
    2b20:	ac 01       	movw	r20, r24
    2b22:	ce 01       	movw	r24, r28
    2b24:	01 96       	adiw	r24, 0x01	; 1
    2b26:	bc 01       	movw	r22, r24
    2b28:	80 e0       	ldi	r24, 0x00	; 0
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    2b30:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <_ZZ11__vector_12E3key>
    2b34:	99 81       	ldd	r25, Y+1	; 0x01
    2b36:	81 e0       	ldi	r24, 0x01	; 1
    2b38:	89 27       	eor	r24, r25
    2b3a:	88 23       	and	r24, r24
    2b3c:	29 f1       	breq	.+74     	; 0x2b88 <__vector_12+0x1da>
    2b3e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b40:	88 23       	and	r24, r24
    2b42:	11 f1       	breq	.+68     	; 0x2b88 <__vector_12+0x1da>
    2b44:	8d ef       	ldi	r24, 0xFD	; 253
    2b46:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2b4a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2b4e:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    2b52:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2b56:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2b5a:	81 e0       	ldi	r24, 0x01	; 1
    2b5c:	89 83       	std	Y+1, r24	; 0x01
    2b5e:	40 e0       	ldi	r20, 0x00	; 0
    2b60:	50 e0       	ldi	r21, 0x00	; 0
    2b62:	ce 01       	movw	r24, r28
    2b64:	01 96       	adiw	r24, 0x01	; 1
    2b66:	bc 01       	movw	r22, r24
    2b68:	84 e4       	ldi	r24, 0x44	; 68
    2b6a:	97 e4       	ldi	r25, 0x47	; 71
    2b6c:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    2b70:	ce 01       	movw	r24, r28
    2b72:	02 96       	adiw	r24, 0x02	; 2
    2b74:	ac 01       	movw	r20, r24
    2b76:	ce 01       	movw	r24, r28
    2b78:	01 96       	adiw	r24, 0x01	; 1
    2b7a:	bc 01       	movw	r22, r24
    2b7c:	80 e0       	ldi	r24, 0x00	; 0
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    2b84:	80 93 a2 47 	sts	0x47A2, r24	; 0x8047a2 <_ZZ11__vector_12E3key>
    2b88:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <_ZZ11__vector_12E3key>
    2b8c:	88 23       	and	r24, r24
    2b8e:	d1 f1       	breq	.+116    	; 0x2c04 <__vector_12+0x256>
    2b90:	81 e0       	ldi	r24, 0x01	; 1
    2b92:	0e 94 37 6a 	call	0xd46e	; 0xd46e <_Z18powerToTransmitterb>
    2b96:	81 e0       	ldi	r24, 0x01	; 1
    2b98:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2b9c:	33 c0       	rjmp	.+102    	; 0x2c04 <__vector_12+0x256>
    2b9e:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <_ZZ11__vector_12E3key>
    2ba2:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
    2ba6:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <_ZZ11__vector_12E3key>
    2baa:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2bae:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2bb2:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2bb6:	80 93 a0 47 	sts	0x47A0, r24	; 0x8047a0 <_ZZ11__vector_12E7codeInc>
    2bba:	90 93 a1 47 	sts	0x47A1, r25	; 0x8047a1 <_ZZ11__vector_12E7codeInc+0x1>
    2bbe:	22 c0       	rjmp	.+68     	; 0x2c04 <__vector_12+0x256>
    2bc0:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    2bc4:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    2bc8:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    2bcc:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    2bd0:	21 e0       	ldi	r18, 0x01	; 1
    2bd2:	89 2b       	or	r24, r25
    2bd4:	8a 2b       	or	r24, r26
    2bd6:	8b 2b       	or	r24, r27
    2bd8:	09 f0       	breq	.+2      	; 0x2bdc <__vector_12+0x22e>
    2bda:	20 e0       	ldi	r18, 0x00	; 0
    2bdc:	22 23       	and	r18, r18
    2bde:	91 f0       	breq	.+36     	; 0x2c04 <__vector_12+0x256>
    2be0:	80 91 a2 47 	lds	r24, 0x47A2	; 0x8047a2 <_ZZ11__vector_12E3key>
    2be4:	88 23       	and	r24, r24
    2be6:	71 f0       	breq	.+28     	; 0x2c04 <__vector_12+0x256>
    2be8:	10 92 a2 47 	sts	0x47A2, r1	; 0x8047a2 <_ZZ11__vector_12E3key>
    2bec:	80 e0       	ldi	r24, 0x00	; 0
    2bee:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
    2bf2:	80 e0       	ldi	r24, 0x00	; 0
    2bf4:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2bf8:	80 e0       	ldi	r24, 0x00	; 0
    2bfa:	0e 94 37 6a 	call	0xd46e	; 0xd46e <_Z18powerToTransmitterb>
    2bfe:	8e ef       	ldi	r24, 0xFE	; 254
    2c00:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    2c04:	80 e0       	ldi	r24, 0x00	; 0
    2c06:	9b e0       	ldi	r25, 0x0B	; 11
    2c08:	21 e0       	ldi	r18, 0x01	; 1
    2c0a:	fc 01       	movw	r30, r24
    2c0c:	26 83       	std	Z+6, r18	; 0x06
    2c0e:	00 00       	nop
    2c10:	0f 90       	pop	r0
    2c12:	0f 90       	pop	r0
    2c14:	df 91       	pop	r29
    2c16:	cf 91       	pop	r28
    2c18:	ff 91       	pop	r31
    2c1a:	ef 91       	pop	r30
    2c1c:	bf 91       	pop	r27
    2c1e:	af 91       	pop	r26
    2c20:	9f 91       	pop	r25
    2c22:	8f 91       	pop	r24
    2c24:	7f 91       	pop	r23
    2c26:	6f 91       	pop	r22
    2c28:	5f 91       	pop	r21
    2c2a:	4f 91       	pop	r20
    2c2c:	3f 91       	pop	r19
    2c2e:	2f 91       	pop	r18
    2c30:	0f 90       	pop	r0
    2c32:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2c36:	0f 90       	pop	r0
    2c38:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2c3c:	0f 90       	pop	r0
    2c3e:	1f 90       	pop	r1
    2c40:	18 95       	reti

00002c42 <__vector_29>:
    2c42:	1f 92       	push	r1
    2c44:	0f 92       	push	r0
    2c46:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2c4a:	0f 92       	push	r0
    2c4c:	11 24       	eor	r1, r1
    2c4e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2c52:	0f 92       	push	r0
    2c54:	2f 93       	push	r18
    2c56:	3f 93       	push	r19
    2c58:	4f 93       	push	r20
    2c5a:	5f 93       	push	r21
    2c5c:	6f 93       	push	r22
    2c5e:	7f 93       	push	r23
    2c60:	8f 93       	push	r24
    2c62:	9f 93       	push	r25
    2c64:	af 93       	push	r26
    2c66:	bf 93       	push	r27
    2c68:	ef 93       	push	r30
    2c6a:	ff 93       	push	r31
    2c6c:	cf 93       	push	r28
    2c6e:	df 93       	push	r29
    2c70:	cd b7       	in	r28, 0x3d	; 61
    2c72:	de b7       	in	r29, 0x3e	; 62
    2c74:	80 e4       	ldi	r24, 0x40	; 64
    2c76:	94 e0       	ldi	r25, 0x04	; 4
    2c78:	fc 01       	movw	r30, r24
    2c7a:	81 85       	ldd	r24, Z+9	; 0x09
    2c7c:	88 1f       	adc	r24, r24
    2c7e:	88 27       	eor	r24, r24
    2c80:	88 1f       	adc	r24, r24
    2c82:	88 23       	and	r24, r24
    2c84:	09 f4       	brne	.+2      	; 0x2c88 <__vector_29+0x46>
    2c86:	40 c0       	rjmp	.+128    	; 0x2d08 <__vector_29+0xc6>
    2c88:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <g_switch_closed_count>
    2c8c:	90 91 8f 47 	lds	r25, 0x478F	; 0x80478f <g_switch_closed_count+0x1>
    2c90:	21 e0       	ldi	r18, 0x01	; 1
    2c92:	0b 97       	sbiw	r24, 0x0b	; 11
    2c94:	08 f4       	brcc	.+2      	; 0x2c98 <__vector_29+0x56>
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	22 23       	and	r18, r18
    2c9a:	91 f1       	breq	.+100    	; 0x2d00 <__vector_29+0xbe>
    2c9c:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <_ZZ11__vector_29E5count>
    2ca0:	90 91 a4 47 	lds	r25, 0x47A4	; 0x8047a4 <_ZZ11__vector_29E5count+0x1>
    2ca4:	01 96       	adiw	r24, 0x01	; 1
    2ca6:	80 93 a3 47 	sts	0x47A3, r24	; 0x8047a3 <_ZZ11__vector_29E5count>
    2caa:	90 93 a4 47 	sts	0x47A4, r25	; 0x8047a4 <_ZZ11__vector_29E5count+0x1>
    2cae:	80 91 a3 47 	lds	r24, 0x47A3	; 0x8047a3 <_ZZ11__vector_29E5count>
    2cb2:	90 91 a4 47 	lds	r25, 0x47A4	; 0x8047a4 <_ZZ11__vector_29E5count+0x1>
    2cb6:	81 70       	andi	r24, 0x01	; 1
    2cb8:	99 27       	eor	r25, r25
    2cba:	89 2b       	or	r24, r25
    2cbc:	89 f0       	breq	.+34     	; 0x2ce0 <__vector_29+0x9e>
    2cbe:	65 e0       	ldi	r22, 0x05	; 5
    2cc0:	80 e9       	ldi	r24, 0x90	; 144
    2cc2:	97 e4       	ldi	r25, 0x47	; 71
    2cc4:	0e 94 84 4e 	call	0x9d08	; 0x9d08 <_ZN4leds5blinkE7Blink_t>
    2cc8:	61 e0       	ldi	r22, 0x01	; 1
    2cca:	80 e9       	ldi	r24, 0x90	; 144
    2ccc:	97 e4       	ldi	r25, 0x47	; 71
    2cce:	0e 94 84 4e 	call	0x9d08	; 0x9d08 <_ZN4leds5blinkE7Blink_t>
    2cd2:	81 e0       	ldi	r24, 0x01	; 1
    2cd4:	0e 94 93 37 	call	0x6f26	; 0x6f26 <_Z10wifi_powerb>
    2cd8:	80 e0       	ldi	r24, 0x00	; 0
    2cda:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <_Z10wifi_resetb>
    2cde:	10 c0       	rjmp	.+32     	; 0x2d00 <__vector_29+0xbe>
    2ce0:	63 e0       	ldi	r22, 0x03	; 3
    2ce2:	80 e9       	ldi	r24, 0x90	; 144
    2ce4:	97 e4       	ldi	r25, 0x47	; 71
    2ce6:	0e 94 84 4e 	call	0x9d08	; 0x9d08 <_ZN4leds5blinkE7Blink_t>
    2cea:	62 e0       	ldi	r22, 0x02	; 2
    2cec:	80 e9       	ldi	r24, 0x90	; 144
    2cee:	97 e4       	ldi	r25, 0x47	; 71
    2cf0:	0e 94 84 4e 	call	0x9d08	; 0x9d08 <_ZN4leds5blinkE7Blink_t>
    2cf4:	81 e0       	ldi	r24, 0x01	; 1
    2cf6:	0e 94 93 37 	call	0x6f26	; 0x6f26 <_Z10wifi_powerb>
    2cfa:	81 e0       	ldi	r24, 0x01	; 1
    2cfc:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <_Z10wifi_resetb>
    2d00:	10 92 8e 47 	sts	0x478E, r1	; 0x80478e <g_switch_closed_count>
    2d04:	10 92 8f 47 	sts	0x478F, r1	; 0x80478f <g_switch_closed_count+0x1>
    2d08:	80 e4       	ldi	r24, 0x40	; 64
    2d0a:	94 e0       	ldi	r25, 0x04	; 4
    2d0c:	2f ef       	ldi	r18, 0xFF	; 255
    2d0e:	fc 01       	movw	r30, r24
    2d10:	21 87       	std	Z+9, r18	; 0x09
    2d12:	00 00       	nop
    2d14:	df 91       	pop	r29
    2d16:	cf 91       	pop	r28
    2d18:	ff 91       	pop	r31
    2d1a:	ef 91       	pop	r30
    2d1c:	bf 91       	pop	r27
    2d1e:	af 91       	pop	r26
    2d20:	9f 91       	pop	r25
    2d22:	8f 91       	pop	r24
    2d24:	7f 91       	pop	r23
    2d26:	6f 91       	pop	r22
    2d28:	5f 91       	pop	r21
    2d2a:	4f 91       	pop	r20
    2d2c:	3f 91       	pop	r19
    2d2e:	2f 91       	pop	r18
    2d30:	0f 90       	pop	r0
    2d32:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2d36:	0f 90       	pop	r0
    2d38:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2d3c:	0f 90       	pop	r0
    2d3e:	1f 90       	pop	r1
    2d40:	18 95       	reti

00002d42 <_Z10powerUp3V3v>:
    2d42:	cf 93       	push	r28
    2d44:	df 93       	push	r29
    2d46:	cd b7       	in	r28, 0x3d	; 61
    2d48:	de b7       	in	r29, 0x3e	; 62
    2d4a:	61 e0       	ldi	r22, 0x01	; 1
    2d4c:	84 e0       	ldi	r24, 0x04	; 4
    2d4e:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <PORTB_set_pin_level>
    2d52:	61 e0       	ldi	r22, 0x01	; 1
    2d54:	87 e0       	ldi	r24, 0x07	; 7
    2d56:	0e 94 2a 0f 	call	0x1e54	; 0x1e54 <PORTA_set_pin_level>
    2d5a:	81 e0       	ldi	r24, 0x01	; 1
    2d5c:	80 93 34 47 	sts	0x4734, r24	; 0x804734 <_ZL18g_perform_3V3_init>
    2d60:	00 00       	nop
    2d62:	df 91       	pop	r29
    2d64:	cf 91       	pop	r28
    2d66:	08 95       	ret

00002d68 <main>:
    2d68:	cf 93       	push	r28
    2d6a:	df 93       	push	r29
    2d6c:	00 d0       	rcall	.+0      	; 0x2d6e <main+0x6>
    2d6e:	cd b7       	in	r28, 0x3d	; 61
    2d70:	de b7       	in	r29, 0x3e	; 62
    2d72:	0e 94 ee 07 	call	0xfdc	; 0xfdc <atmel_start_init>
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2d7c:	61 e0       	ldi	r22, 0x01	; 1
    2d7e:	84 e0       	ldi	r24, 0x04	; 4
    2d80:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <PORTB_set_pin_level>
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	0e 94 93 37 	call	0x6f26	; 0x6f26 <_Z10wifi_powerb>
    2d8a:	81 e0       	ldi	r24, 0x01	; 1
    2d8c:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <_Z10wifi_resetb>
    2d90:	84 e6       	ldi	r24, 0x64	; 100
    2d92:	80 93 41 47 	sts	0x4741, r24	; 0x804741 <_ZL19g_wifi_enable_delay>
    2d96:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <_Z10powerUp3V3v>
    2d9a:	81 e9       	ldi	r24, 0x91	; 145
    2d9c:	97 e4       	ldi	r25, 0x47	; 71
    2d9e:	0e 94 d1 46 	call	0x8da2	; 0x8da2 <_ZN13EepromManager20initializeEEPROMVarsEv>
    2da2:	81 e9       	ldi	r24, 0x91	; 145
    2da4:	97 e4       	ldi	r25, 0x47	; 71
    2da6:	0e 94 63 45 	call	0x8ac6	; 0x8ac6 <_ZN13EepromManager11readNonVolsEv>
    2daa:	81 e0       	ldi	r24, 0x01	; 1
    2dac:	0e 94 f5 31 	call	0x63ea	; 0x63ea <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2db0:	0e 94 67 29 	call	0x52ce	; 0x52ce <_Z8rtc_initv>
    2db4:	98 2f       	mov	r25, r24
    2db6:	81 e0       	ldi	r24, 0x01	; 1
    2db8:	9c 3f       	cpi	r25, 0xFC	; 252
    2dba:	09 f0       	breq	.+2      	; 0x2dbe <main+0x56>
    2dbc:	80 e0       	ldi	r24, 0x00	; 0
    2dbe:	88 23       	and	r24, r24
    2dc0:	e9 f4       	brne	.+58     	; 0x2dfc <main+0x94>
    2dc2:	ce 01       	movw	r24, r28
    2dc4:	01 96       	adiw	r24, 0x01	; 1
    2dc6:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    2dca:	dc 01       	movw	r26, r24
    2dcc:	cb 01       	movw	r24, r22
    2dce:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    2dd2:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    2dd6:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    2dda:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>
    2dde:	89 81       	ldd	r24, Y+1	; 0x01
    2de0:	88 23       	and	r24, r24
    2de2:	61 f4       	brne	.+24     	; 0x2dfc <main+0x94>
    2de4:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    2de8:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    2dec:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    2df0:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    2df4:	bc 01       	movw	r22, r24
    2df6:	cd 01       	movw	r24, r26
    2df8:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    2dfc:	0e 94 c1 37 	call	0x6f82	; 0x6f82 <_Z11wifiPresentv>
    2e00:	98 2f       	mov	r25, r24
    2e02:	81 e0       	ldi	r24, 0x01	; 1
    2e04:	89 27       	eor	r24, r25
    2e06:	88 23       	and	r24, r24
    2e08:	51 f0       	breq	.+20     	; 0x2e1e <main+0xb6>
    2e0a:	80 e0       	ldi	r24, 0x00	; 0
    2e0c:	0e 94 93 37 	call	0x6f26	; 0x6f26 <_Z10wifi_powerb>
    2e10:	81 e0       	ldi	r24, 0x01	; 1
    2e12:	0e 94 aa 37 	call	0x6f54	; 0x6f54 <_Z10wifi_resetb>
    2e16:	10 92 41 47 	sts	0x4741, r1	; 0x804741 <_ZL19g_wifi_enable_delay>
    2e1a:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2e1e:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <_Z17handleLinkBusMsgsv>
    2e22:	0e 94 6f 17 	call	0x2ede	; 0x2ede <_Z19handleSerialBusMsgsv>
    2e26:	80 91 34 47 	lds	r24, 0x4734	; 0x804734 <_ZL18g_perform_3V3_init>
    2e2a:	88 23       	and	r24, r24
    2e2c:	71 f0       	breq	.+28     	; 0x2e4a <main+0xe2>
    2e2e:	0e 94 16 6b 	call	0xd62c	; 0xd62c <_Z16init_transmitterv>
    2e32:	98 2f       	mov	r25, r24
    2e34:	81 e0       	ldi	r24, 0x01	; 1
    2e36:	92 3d       	cpi	r25, 0xD2	; 210
    2e38:	09 f4       	brne	.+2      	; 0x2e3c <main+0xd4>
    2e3a:	80 e0       	ldi	r24, 0x00	; 0
    2e3c:	88 23       	and	r24, r24
    2e3e:	29 f0       	breq	.+10     	; 0x2e4a <main+0xe2>
    2e40:	81 e0       	ldi	r24, 0x01	; 1
    2e42:	80 93 33 47 	sts	0x4733, r24	; 0x804733 <_ZL33g_powerUp_initialization_complete>
    2e46:	10 92 34 47 	sts	0x4734, r1	; 0x804734 <_ZL18g_perform_3V3_init>
    2e4a:	80 91 38 47 	lds	r24, 0x4738	; 0x804738 <_ZL13g_start_event>
    2e4e:	88 23       	and	r24, r24
    2e50:	69 f0       	breq	.+26     	; 0x2e6c <main+0x104>
    2e52:	10 92 38 47 	sts	0x4738, r1	; 0x804738 <_ZL13g_start_event>
    2e56:	80 91 33 47 	lds	r24, 0x4733	; 0x804733 <_ZL33g_powerUp_initialization_complete>
    2e5a:	88 23       	and	r24, r24
    2e5c:	39 f0       	breq	.+14     	; 0x2e6c <main+0x104>
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	8a 83       	std	Y+2, r24	; 0x02
    2e62:	ce 01       	movw	r24, r28
    2e64:	02 96       	adiw	r24, 0x02	; 2
    2e66:	61 e0       	ldi	r22, 0x01	; 1
    2e68:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
    2e6c:	80 91 39 47 	lds	r24, 0x4739	; 0x804739 <_ZL11g_end_event>
    2e70:	88 23       	and	r24, r24
    2e72:	29 f0       	breq	.+10     	; 0x2e7e <main+0x116>
    2e74:	10 92 39 47 	sts	0x4739, r1	; 0x804739 <_ZL11g_end_event>
    2e78:	82 e0       	ldi	r24, 0x02	; 2
    2e7a:	0e 94 fa 29 	call	0x53f4	; 0x53f4 <_Z12stopEventNow19EventActionSource_t>
    2e7e:	80 91 40 47 	lds	r24, 0x4740	; 0x804740 <_ZL16g_report_seconds>
    2e82:	88 23       	and	r24, r24
    2e84:	61 f2       	breq	.-104    	; 0x2e1e <main+0xb6>
    2e86:	10 92 40 47 	sts	0x4740, r1	; 0x804740 <_ZL16g_report_seconds>
    2e8a:	80 e0       	ldi	r24, 0x00	; 0
    2e8c:	90 e0       	ldi	r25, 0x00	; 0
    2e8e:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    2e92:	dc 01       	movw	r26, r24
    2e94:	cb 01       	movw	r24, r22
    2e96:	2b 2f       	mov	r18, r27
    2e98:	2f 93       	push	r18
    2e9a:	2a 2f       	mov	r18, r26
    2e9c:	2f 93       	push	r18
    2e9e:	29 2f       	mov	r18, r25
    2ea0:	2f 93       	push	r18
    2ea2:	8f 93       	push	r24
    2ea4:	86 e4       	ldi	r24, 0x46	; 70
    2ea6:	90 e4       	ldi	r25, 0x40	; 64
    2ea8:	89 2f       	mov	r24, r25
    2eaa:	8f 93       	push	r24
    2eac:	86 e4       	ldi	r24, 0x46	; 70
    2eae:	90 e4       	ldi	r25, 0x40	; 64
    2eb0:	8f 93       	push	r24
    2eb2:	8f ef       	ldi	r24, 0xFF	; 255
    2eb4:	96 e4       	ldi	r25, 0x46	; 70
    2eb6:	89 2f       	mov	r24, r25
    2eb8:	8f 93       	push	r24
    2eba:	8f ef       	ldi	r24, 0xFF	; 255
    2ebc:	96 e4       	ldi	r25, 0x46	; 70
    2ebe:	8f 93       	push	r24
    2ec0:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    2ec4:	8d b7       	in	r24, 0x3d	; 61
    2ec6:	9e b7       	in	r25, 0x3e	; 62
    2ec8:	08 96       	adiw	r24, 0x08	; 8
    2eca:	cd bf       	out	0x3d, r28	; 61
    2ecc:	de bf       	out	0x3e, r29	; 62
    2ece:	4f ef       	ldi	r20, 0xFF	; 255
    2ed0:	56 e4       	ldi	r21, 0x46	; 70
    2ed2:	6a e4       	ldi	r22, 0x4A	; 74
    2ed4:	70 e4       	ldi	r23, 0x40	; 64
    2ed6:	83 e0       	ldi	r24, 0x03	; 3
    2ed8:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    2edc:	a0 cf       	rjmp	.-192    	; 0x2e1e <main+0xb6>

00002ede <_Z19handleSerialBusMsgsv>:
    2ede:	ef 92       	push	r14
    2ee0:	ff 92       	push	r15
    2ee2:	0f 93       	push	r16
    2ee4:	1f 93       	push	r17
    2ee6:	cf 93       	push	r28
    2ee8:	df 93       	push	r29
    2eea:	cd b7       	in	r28, 0x3d	; 61
    2eec:	de b7       	in	r29, 0x3e	; 62
    2eee:	c6 59       	subi	r28, 0x96	; 150
    2ef0:	d1 09       	sbc	r29, r1
    2ef2:	cd bf       	out	0x3d, r28	; 61
    2ef4:	de bf       	out	0x3e, r29	; 62
    2ef6:	0e 94 d3 5b 	call	0xb7a6	; 0xb7a6 <nextFullSBRxBuffer>
    2efa:	8e 83       	std	Y+6, r24	; 0x06
    2efc:	9f 83       	std	Y+7, r25	; 0x07
    2efe:	21 e0       	ldi	r18, 0x01	; 1
    2f00:	8e 81       	ldd	r24, Y+6	; 0x06
    2f02:	9f 81       	ldd	r25, Y+7	; 0x07
    2f04:	89 2b       	or	r24, r25
    2f06:	09 f4       	brne	.+2      	; 0x2f0a <_Z19handleSerialBusMsgsv+0x2c>
    2f08:	20 e0       	ldi	r18, 0x00	; 0
    2f0a:	22 23       	and	r18, r18
    2f0c:	09 f4       	brne	.+2      	; 0x2f10 <_Z19handleSerialBusMsgsv+0x32>
    2f0e:	4b c7       	rjmp	.+3734   	; 0x3da6 <_Z19handleSerialBusMsgsv+0xec8>
    2f10:	8e 81       	ldd	r24, Y+6	; 0x06
    2f12:	9f 81       	ldd	r25, Y+7	; 0x07
    2f14:	fc 01       	movw	r30, r24
    2f16:	81 81       	ldd	r24, Z+1	; 0x01
    2f18:	92 81       	ldd	r25, Z+2	; 0x02
    2f1a:	88 87       	std	Y+8, r24	; 0x08
    2f1c:	99 87       	std	Y+9, r25	; 0x09
    2f1e:	88 85       	ldd	r24, Y+8	; 0x08
    2f20:	99 85       	ldd	r25, Y+9	; 0x09
    2f22:	8a 3e       	cpi	r24, 0xEA	; 234
    2f24:	f2 e2       	ldi	r31, 0x22	; 34
    2f26:	9f 07       	cpc	r25, r31
    2f28:	09 f4       	brne	.+2      	; 0x2f2c <_Z19handleSerialBusMsgsv+0x4e>
    2f2a:	a4 c3       	rjmp	.+1864   	; 0x3674 <_Z19handleSerialBusMsgsv+0x796>
    2f2c:	8b 3e       	cpi	r24, 0xEB	; 235
    2f2e:	22 e2       	ldi	r18, 0x22	; 34
    2f30:	92 07       	cpc	r25, r18
    2f32:	b8 f4       	brcc	.+46     	; 0x2f62 <_Z19handleSerialBusMsgsv+0x84>
    2f34:	8f 36       	cpi	r24, 0x6F	; 111
    2f36:	ed e1       	ldi	r30, 0x1D	; 29
    2f38:	9e 07       	cpc	r25, r30
    2f3a:	09 f4       	brne	.+2      	; 0x2f3e <_Z19handleSerialBusMsgsv+0x60>
    2f3c:	ed c3       	rjmp	.+2010   	; 0x3718 <_Z19handleSerialBusMsgsv+0x83a>
    2f3e:	80 37       	cpi	r24, 0x70	; 112
    2f40:	fd e1       	ldi	r31, 0x1D	; 29
    2f42:	9f 07       	cpc	r25, r31
    2f44:	28 f4       	brcc	.+10     	; 0x2f50 <_Z19handleSerialBusMsgsv+0x72>
    2f46:	8e 31       	cpi	r24, 0x1E	; 30
    2f48:	93 40       	sbci	r25, 0x03	; 3
    2f4a:	09 f4       	brne	.+2      	; 0x2f4e <_Z19handleSerialBusMsgsv+0x70>
    2f4c:	81 c2       	rjmp	.+1282   	; 0x3450 <_Z19handleSerialBusMsgsv+0x572>
    2f4e:	19 c7       	rjmp	.+3634   	; 0x3d82 <_Z19handleSerialBusMsgsv+0xea4>
    2f50:	86 3c       	cpi	r24, 0xC6	; 198
    2f52:	ee e1       	ldi	r30, 0x1E	; 30
    2f54:	9e 07       	cpc	r25, r30
    2f56:	e9 f0       	breq	.+58     	; 0x2f92 <_Z19handleSerialBusMsgsv+0xb4>
    2f58:	81 3d       	cpi	r24, 0xD1	; 209
    2f5a:	9e 41       	sbci	r25, 0x1E	; 30
    2f5c:	09 f4       	brne	.+2      	; 0x2f60 <_Z19handleSerialBusMsgsv+0x82>
    2f5e:	a9 c1       	rjmp	.+850    	; 0x32b2 <_Z19handleSerialBusMsgsv+0x3d4>
    2f60:	10 c7       	rjmp	.+3616   	; 0x3d82 <_Z19handleSerialBusMsgsv+0xea4>
    2f62:	82 37       	cpi	r24, 0x72	; 114
    2f64:	23 e2       	ldi	r18, 0x23	; 35
    2f66:	92 07       	cpc	r25, r18
    2f68:	09 f4       	brne	.+2      	; 0x2f6c <_Z19handleSerialBusMsgsv+0x8e>
    2f6a:	00 c3       	rjmp	.+1536   	; 0x356c <_Z19handleSerialBusMsgsv+0x68e>
    2f6c:	83 37       	cpi	r24, 0x73	; 115
    2f6e:	e3 e2       	ldi	r30, 0x23	; 35
    2f70:	9e 07       	cpc	r25, r30
    2f72:	28 f4       	brcc	.+10     	; 0x2f7e <_Z19handleSerialBusMsgsv+0xa0>
    2f74:	88 3f       	cpi	r24, 0xF8	; 248
    2f76:	92 42       	sbci	r25, 0x22	; 34
    2f78:	09 f4       	brne	.+2      	; 0x2f7c <_Z19handleSerialBusMsgsv+0x9e>
    2f7a:	38 c1       	rjmp	.+624    	; 0x31ec <_Z19handleSerialBusMsgsv+0x30e>
    2f7c:	02 c7       	rjmp	.+3588   	; 0x3d82 <_Z19handleSerialBusMsgsv+0xea4>
    2f7e:	84 33       	cpi	r24, 0x34	; 52
    2f80:	24 e2       	ldi	r18, 0x24	; 36
    2f82:	92 07       	cpc	r25, r18
    2f84:	09 f4       	brne	.+2      	; 0x2f88 <_Z19handleSerialBusMsgsv+0xaa>
    2f86:	29 c2       	rjmp	.+1106   	; 0x33da <_Z19handleSerialBusMsgsv+0x4fc>
    2f88:	85 3c       	cpi	r24, 0xC5	; 197
    2f8a:	94 42       	sbci	r25, 0x24	; 36
    2f8c:	09 f4       	brne	.+2      	; 0x2f90 <_Z19handleSerialBusMsgsv+0xb2>
    2f8e:	e5 c6       	rjmp	.+3530   	; 0x3d5a <_Z19handleSerialBusMsgsv+0xe7c>
    2f90:	f8 c6       	rjmp	.+3568   	; 0x3d82 <_Z19handleSerialBusMsgsv+0xea4>
    2f92:	8e 81       	ldd	r24, Y+6	; 0x06
    2f94:	9f 81       	ldd	r25, Y+7	; 0x07
    2f96:	fc 01       	movw	r30, r24
    2f98:	83 81       	ldd	r24, Z+3	; 0x03
    2f9a:	88 2f       	mov	r24, r24
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	89 83       	std	Y+1, r24	; 0x01
    2fa0:	9a 83       	std	Y+2, r25	; 0x02
    2fa2:	89 81       	ldd	r24, Y+1	; 0x01
    2fa4:	9a 81       	ldd	r25, Y+2	; 0x02
    2fa6:	89 2b       	or	r24, r25
    2fa8:	09 f4       	brne	.+2      	; 0x2fac <_Z19handleSerialBusMsgsv+0xce>
    2faa:	d0 c0       	rjmp	.+416    	; 0x314c <_Z19handleSerialBusMsgsv+0x26e>
    2fac:	89 81       	ldd	r24, Y+1	; 0x01
    2fae:	9a 81       	ldd	r25, Y+2	; 0x02
    2fb0:	82 34       	cpi	r24, 0x42	; 66
    2fb2:	91 05       	cpc	r25, r1
    2fb4:	19 f4       	brne	.+6      	; 0x2fbc <_Z19handleSerialBusMsgsv+0xde>
    2fb6:	19 82       	std	Y+1, r1	; 0x01
    2fb8:	1a 82       	std	Y+2, r1	; 0x02
    2fba:	ac c0       	rjmp	.+344    	; 0x3114 <_Z19handleSerialBusMsgsv+0x236>
    2fbc:	89 81       	ldd	r24, Y+1	; 0x01
    2fbe:	9a 81       	ldd	r25, Y+2	; 0x02
    2fc0:	86 34       	cpi	r24, 0x46	; 70
    2fc2:	91 05       	cpc	r25, r1
    2fc4:	29 f4       	brne	.+10     	; 0x2fd0 <_Z19handleSerialBusMsgsv+0xf2>
    2fc6:	86 e0       	ldi	r24, 0x06	; 6
    2fc8:	90 e0       	ldi	r25, 0x00	; 0
    2fca:	89 83       	std	Y+1, r24	; 0x01
    2fcc:	9a 83       	std	Y+2, r25	; 0x02
    2fce:	a2 c0       	rjmp	.+324    	; 0x3114 <_Z19handleSerialBusMsgsv+0x236>
    2fd0:	89 81       	ldd	r24, Y+1	; 0x01
    2fd2:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd4:	83 34       	cpi	r24, 0x43	; 67
    2fd6:	91 05       	cpc	r25, r1
    2fd8:	b9 f5       	brne	.+110    	; 0x3048 <_Z19handleSerialBusMsgsv+0x16a>
    2fda:	8e 81       	ldd	r24, Y+6	; 0x06
    2fdc:	9f 81       	ldd	r25, Y+7	; 0x07
    2fde:	fc 01       	movw	r30, r24
    2fe0:	87 89       	ldd	r24, Z+23	; 0x17
    2fe2:	8b 83       	std	Y+3, r24	; 0x03
    2fe4:	8e 81       	ldd	r24, Y+6	; 0x06
    2fe6:	9f 81       	ldd	r25, Y+7	; 0x07
    2fe8:	fc 01       	movw	r30, r24
    2fea:	10 8e       	std	Z+24, r1	; 0x18
    2fec:	8b 81       	ldd	r24, Y+3	; 0x03
    2fee:	82 34       	cpi	r24, 0x42	; 66
    2ff0:	11 f4       	brne	.+4      	; 0x2ff6 <_Z19handleSerialBusMsgsv+0x118>
    2ff2:	80 e3       	ldi	r24, 0x30	; 48
    2ff4:	8b 83       	std	Y+3, r24	; 0x03
    2ff6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ff8:	88 2f       	mov	r24, r24
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	c0 97       	sbiw	r24, 0x30	; 48
    2ffe:	0a 97       	sbiw	r24, 0x0a	; 10
    3000:	08 f0       	brcs	.+2      	; 0x3004 <_Z19handleSerialBusMsgsv+0x126>
    3002:	88 c0       	rjmp	.+272    	; 0x3114 <_Z19handleSerialBusMsgsv+0x236>
    3004:	8e 81       	ldd	r24, Y+6	; 0x06
    3006:	9f 81       	ldd	r25, Y+7	; 0x07
    3008:	47 96       	adiw	r24, 0x17	; 23
    300a:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    300e:	8a 87       	std	Y+10, r24	; 0x0a
    3010:	9b 87       	std	Y+11, r25	; 0x0b
    3012:	1c 86       	std	Y+12, r1	; 0x0c
    3014:	85 e0       	ldi	r24, 0x05	; 5
    3016:	8d 87       	std	Y+13, r24	; 0x0d
    3018:	8d 85       	ldd	r24, Y+13	; 0x0d
    301a:	28 2f       	mov	r18, r24
    301c:	30 e0       	ldi	r19, 0x00	; 0
    301e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3020:	9b 85       	ldd	r25, Y+11	; 0x0b
    3022:	28 17       	cp	r18, r24
    3024:	39 07       	cpc	r19, r25
    3026:	24 f4       	brge	.+8      	; 0x3030 <_Z19handleSerialBusMsgsv+0x152>
    3028:	8d 85       	ldd	r24, Y+13	; 0x0d
    302a:	88 2f       	mov	r24, r24
    302c:	90 e0       	ldi	r25, 0x00	; 0
    302e:	09 c0       	rjmp	.+18     	; 0x3042 <_Z19handleSerialBusMsgsv+0x164>
    3030:	8c 85       	ldd	r24, Y+12	; 0x0c
    3032:	88 2f       	mov	r24, r24
    3034:	90 e0       	ldi	r25, 0x00	; 0
    3036:	2a 85       	ldd	r18, Y+10	; 0x0a
    3038:	3b 85       	ldd	r19, Y+11	; 0x0b
    303a:	82 17       	cp	r24, r18
    303c:	93 07       	cpc	r25, r19
    303e:	0c f4       	brge	.+2      	; 0x3042 <_Z19handleSerialBusMsgsv+0x164>
    3040:	c9 01       	movw	r24, r18
    3042:	89 83       	std	Y+1, r24	; 0x01
    3044:	9a 83       	std	Y+2, r25	; 0x02
    3046:	66 c0       	rjmp	.+204    	; 0x3114 <_Z19handleSerialBusMsgsv+0x236>
    3048:	89 81       	ldd	r24, Y+1	; 0x01
    304a:	9a 81       	ldd	r25, Y+2	; 0x02
    304c:	83 35       	cpi	r24, 0x53	; 83
    304e:	91 05       	cpc	r25, r1
    3050:	09 f0       	breq	.+2      	; 0x3054 <_Z19handleSerialBusMsgsv+0x176>
    3052:	59 c0       	rjmp	.+178    	; 0x3106 <_Z19handleSerialBusMsgsv+0x228>
    3054:	1c 82       	std	Y+4, r1	; 0x04
    3056:	8e 81       	ldd	r24, Y+6	; 0x06
    3058:	9f 81       	ldd	r25, Y+7	; 0x07
    305a:	fc 01       	movw	r30, r24
    305c:	87 89       	ldd	r24, Z+23	; 0x17
    305e:	8e 87       	std	Y+14, r24	; 0x0e
    3060:	8e 81       	ldd	r24, Y+6	; 0x06
    3062:	9f 81       	ldd	r25, Y+7	; 0x07
    3064:	fc 01       	movw	r30, r24
    3066:	80 8d       	ldd	r24, Z+24	; 0x18
    3068:	8f 87       	std	Y+15, r24	; 0x0f
    306a:	8e 81       	ldd	r24, Y+6	; 0x06
    306c:	9f 81       	ldd	r25, Y+7	; 0x07
    306e:	fc 01       	movw	r30, r24
    3070:	11 8e       	std	Z+25, r1	; 0x19
    3072:	8e 85       	ldd	r24, Y+14	; 0x0e
    3074:	82 34       	cpi	r24, 0x42	; 66
    3076:	11 f4       	brne	.+4      	; 0x307c <_Z19handleSerialBusMsgsv+0x19e>
    3078:	1c 82       	std	Y+4, r1	; 0x04
    307a:	36 c0       	rjmp	.+108    	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    307c:	8e 85       	ldd	r24, Y+14	; 0x0e
    307e:	86 34       	cpi	r24, 0x46	; 70
    3080:	51 f4       	brne	.+20     	; 0x3096 <_Z19handleSerialBusMsgsv+0x1b8>
    3082:	8f 85       	ldd	r24, Y+15	; 0x0f
    3084:	81 33       	cpi	r24, 0x31	; 49
    3086:	80 f1       	brcs	.+96     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    3088:	8f 85       	ldd	r24, Y+15	; 0x0f
    308a:	86 33       	cpi	r24, 0x36	; 54
    308c:	68 f5       	brcc	.+90     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    308e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3090:	84 52       	subi	r24, 0x24	; 36
    3092:	8c 83       	std	Y+4, r24	; 0x04
    3094:	29 c0       	rjmp	.+82     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    3096:	8e 85       	ldd	r24, Y+14	; 0x0e
    3098:	83 35       	cpi	r24, 0x53	; 83
    309a:	69 f4       	brne	.+26     	; 0x30b6 <_Z19handleSerialBusMsgsv+0x1d8>
    309c:	8f 85       	ldd	r24, Y+15	; 0x0f
    309e:	81 33       	cpi	r24, 0x31	; 49
    30a0:	38 f0       	brcs	.+14     	; 0x30b0 <_Z19handleSerialBusMsgsv+0x1d2>
    30a2:	8f 85       	ldd	r24, Y+15	; 0x0f
    30a4:	86 33       	cpi	r24, 0x36	; 54
    30a6:	20 f4       	brcc	.+8      	; 0x30b0 <_Z19handleSerialBusMsgsv+0x1d2>
    30a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    30aa:	89 52       	subi	r24, 0x29	; 41
    30ac:	8c 83       	std	Y+4, r24	; 0x04
    30ae:	1c c0       	rjmp	.+56     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30b0:	87 e0       	ldi	r24, 0x07	; 7
    30b2:	8c 83       	std	Y+4, r24	; 0x04
    30b4:	19 c0       	rjmp	.+50     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    30b8:	86 34       	cpi	r24, 0x46	; 70
    30ba:	51 f4       	brne	.+20     	; 0x30d0 <_Z19handleSerialBusMsgsv+0x1f2>
    30bc:	8e 85       	ldd	r24, Y+14	; 0x0e
    30be:	81 33       	cpi	r24, 0x31	; 49
    30c0:	98 f0       	brcs	.+38     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30c2:	8e 85       	ldd	r24, Y+14	; 0x0e
    30c4:	86 33       	cpi	r24, 0x36	; 54
    30c6:	80 f4       	brcc	.+32     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30c8:	8e 85       	ldd	r24, Y+14	; 0x0e
    30ca:	84 52       	subi	r24, 0x24	; 36
    30cc:	8c 83       	std	Y+4, r24	; 0x04
    30ce:	0c c0       	rjmp	.+24     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30d0:	8f 85       	ldd	r24, Y+15	; 0x0f
    30d2:	83 35       	cpi	r24, 0x53	; 83
    30d4:	49 f4       	brne	.+18     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30d6:	8e 85       	ldd	r24, Y+14	; 0x0e
    30d8:	81 33       	cpi	r24, 0x31	; 49
    30da:	30 f0       	brcs	.+12     	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30dc:	8e 85       	ldd	r24, Y+14	; 0x0e
    30de:	86 33       	cpi	r24, 0x36	; 54
    30e0:	18 f4       	brcc	.+6      	; 0x30e8 <_Z19handleSerialBusMsgsv+0x20a>
    30e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    30e4:	89 52       	subi	r24, 0x29	; 41
    30e6:	8c 83       	std	Y+4, r24	; 0x04
    30e8:	8c 81       	ldd	r24, Y+4	; 0x04
    30ea:	87 30       	cpi	r24, 0x07	; 7
    30ec:	48 f0       	brcs	.+18     	; 0x3100 <_Z19handleSerialBusMsgsv+0x222>
    30ee:	8c 81       	ldd	r24, Y+4	; 0x04
    30f0:	82 31       	cpi	r24, 0x12	; 18
    30f2:	30 f4       	brcc	.+12     	; 0x3100 <_Z19handleSerialBusMsgsv+0x222>
    30f4:	8c 81       	ldd	r24, Y+4	; 0x04
    30f6:	88 2f       	mov	r24, r24
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	89 83       	std	Y+1, r24	; 0x01
    30fc:	9a 83       	std	Y+2, r25	; 0x02
    30fe:	0a c0       	rjmp	.+20     	; 0x3114 <_Z19handleSerialBusMsgsv+0x236>
    3100:	19 82       	std	Y+1, r1	; 0x01
    3102:	1a 82       	std	Y+2, r1	; 0x02
    3104:	07 c0       	rjmp	.+14     	; 0x3114 <_Z19handleSerialBusMsgsv+0x236>
    3106:	8e 81       	ldd	r24, Y+6	; 0x06
    3108:	9f 81       	ldd	r25, Y+7	; 0x07
    310a:	03 96       	adiw	r24, 0x03	; 3
    310c:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    3110:	89 83       	std	Y+1, r24	; 0x01
    3112:	9a 83       	std	Y+2, r25	; 0x02
    3114:	89 81       	ldd	r24, Y+1	; 0x01
    3116:	9a 81       	ldd	r25, Y+2	; 0x02
    3118:	99 23       	and	r25, r25
    311a:	c4 f0       	brlt	.+48     	; 0x314c <_Z19handleSerialBusMsgsv+0x26e>
    311c:	89 81       	ldd	r24, Y+1	; 0x01
    311e:	9a 81       	ldd	r25, Y+2	; 0x02
    3120:	42 97       	sbiw	r24, 0x12	; 18
    3122:	a4 f4       	brge	.+40     	; 0x314c <_Z19handleSerialBusMsgsv+0x26e>
    3124:	89 81       	ldd	r24, Y+1	; 0x01
    3126:	8a a7       	std	Y+42, r24	; 0x2a
    3128:	ce 01       	movw	r24, r28
    312a:	8a 96       	adiw	r24, 0x2a	; 42
    312c:	ac 01       	movw	r20, r24
    312e:	69 e2       	ldi	r22, 0x29	; 41
    3130:	81 e9       	ldi	r24, 0x91	; 145
    3132:	97 e4       	ldi	r25, 0x47	; 71
    3134:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3138:	9a a5       	ldd	r25, Y+42	; 0x2a
    313a:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    313e:	98 17       	cp	r25, r24
    3140:	29 f0       	breq	.+10     	; 0x314c <_Z19handleSerialBusMsgsv+0x26e>
    3142:	ce 01       	movw	r24, r28
    3144:	8a 96       	adiw	r24, 0x2a	; 42
    3146:	60 e0       	ldi	r22, 0x00	; 0
    3148:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
    314c:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    3150:	68 2f       	mov	r22, r24
    3152:	8f ef       	ldi	r24, 0xFF	; 255
    3154:	96 e4       	ldi	r25, 0x46	; 70
    3156:	0e 94 f0 70 	call	0xe1e0	; 0xe1e0 <_Z8fox2TextPc5Fox_t>
    315a:	98 2f       	mov	r25, r24
    315c:	81 e0       	ldi	r24, 0x01	; 1
    315e:	89 27       	eor	r24, r25
    3160:	88 23       	and	r24, r24
    3162:	11 f1       	breq	.+68     	; 0x31a8 <_Z19handleSerialBusMsgsv+0x2ca>
    3164:	ce 01       	movw	r24, r28
    3166:	8b 96       	adiw	r24, 0x2b	; 43
    3168:	6f ef       	ldi	r22, 0xFF	; 255
    316a:	76 e4       	ldi	r23, 0x46	; 70
    316c:	0e 94 a1 76 	call	0xed42	; 0xed42 <strcpy>
    3170:	ce 01       	movw	r24, r28
    3172:	8b 96       	adiw	r24, 0x2b	; 43
    3174:	29 2f       	mov	r18, r25
    3176:	2f 93       	push	r18
    3178:	8f 93       	push	r24
    317a:	8e e4       	ldi	r24, 0x4E	; 78
    317c:	90 e4       	ldi	r25, 0x40	; 64
    317e:	89 2f       	mov	r24, r25
    3180:	8f 93       	push	r24
    3182:	8e e4       	ldi	r24, 0x4E	; 78
    3184:	90 e4       	ldi	r25, 0x40	; 64
    3186:	8f 93       	push	r24
    3188:	8f ef       	ldi	r24, 0xFF	; 255
    318a:	96 e4       	ldi	r25, 0x46	; 70
    318c:	89 2f       	mov	r24, r25
    318e:	8f 93       	push	r24
    3190:	8f ef       	ldi	r24, 0xFF	; 255
    3192:	96 e4       	ldi	r25, 0x46	; 70
    3194:	8f 93       	push	r24
    3196:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    319a:	0f 90       	pop	r0
    319c:	0f 90       	pop	r0
    319e:	0f 90       	pop	r0
    31a0:	0f 90       	pop	r0
    31a2:	0f 90       	pop	r0
    31a4:	0f 90       	pop	r0
    31a6:	1d c0       	rjmp	.+58     	; 0x31e2 <_Z19handleSerialBusMsgsv+0x304>
    31a8:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    31ac:	88 2f       	mov	r24, r24
    31ae:	90 e0       	ldi	r25, 0x00	; 0
    31b0:	29 2f       	mov	r18, r25
    31b2:	2f 93       	push	r18
    31b4:	8f 93       	push	r24
    31b6:	86 e5       	ldi	r24, 0x56	; 86
    31b8:	90 e4       	ldi	r25, 0x40	; 64
    31ba:	89 2f       	mov	r24, r25
    31bc:	8f 93       	push	r24
    31be:	86 e5       	ldi	r24, 0x56	; 86
    31c0:	90 e4       	ldi	r25, 0x40	; 64
    31c2:	8f 93       	push	r24
    31c4:	8f ef       	ldi	r24, 0xFF	; 255
    31c6:	96 e4       	ldi	r25, 0x46	; 70
    31c8:	89 2f       	mov	r24, r25
    31ca:	8f 93       	push	r24
    31cc:	8f ef       	ldi	r24, 0xFF	; 255
    31ce:	96 e4       	ldi	r25, 0x46	; 70
    31d0:	8f 93       	push	r24
    31d2:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    31d6:	0f 90       	pop	r0
    31d8:	0f 90       	pop	r0
    31da:	0f 90       	pop	r0
    31dc:	0f 90       	pop	r0
    31de:	0f 90       	pop	r0
    31e0:	0f 90       	pop	r0
    31e2:	8f ef       	ldi	r24, 0xFF	; 255
    31e4:	96 e4       	ldi	r25, 0x46	; 70
    31e6:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    31ea:	d5 c5       	rjmp	.+2986   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    31ec:	8e 81       	ldd	r24, Y+6	; 0x06
    31ee:	9f 81       	ldd	r25, Y+7	; 0x07
    31f0:	fc 01       	movw	r30, r24
    31f2:	83 81       	ldd	r24, Z+3	; 0x03
    31f4:	88 23       	and	r24, r24
    31f6:	e9 f1       	breq	.+122    	; 0x3272 <_Z19handleSerialBusMsgsv+0x394>
    31f8:	8e 81       	ldd	r24, Y+6	; 0x06
    31fa:	9f 81       	ldd	r25, Y+7	; 0x07
    31fc:	03 96       	adiw	r24, 0x03	; 3
    31fe:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    3202:	80 93 a5 47 	sts	0x47A5, r24	; 0x8047a5 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    3206:	90 93 a6 47 	sts	0x47A6, r25	; 0x8047a6 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    320a:	80 91 a5 47 	lds	r24, 0x47A5	; 0x8047a5 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    320e:	90 91 a6 47 	lds	r25, 0x47A6	; 0x8047a6 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    3212:	89 38       	cpi	r24, 0x89	; 137
    3214:	93 41       	sbci	r25, 0x13	; 19
    3216:	68 f4       	brcc	.+26     	; 0x3232 <_Z19handleSerialBusMsgsv+0x354>
    3218:	60 e0       	ldi	r22, 0x00	; 0
    321a:	70 e0       	ldi	r23, 0x00	; 0
    321c:	85 ea       	ldi	r24, 0xA5	; 165
    321e:	97 e4       	ldi	r25, 0x47	; 71
    3220:	0e 94 84 6a 	call	0xd508	; 0xd508 <_Z15txSetParametersPjPb>
    3224:	88 8b       	std	Y+16, r24	; 0x10
    3226:	88 89       	ldd	r24, Y+16	; 0x10
    3228:	88 23       	and	r24, r24
    322a:	19 f0       	breq	.+6      	; 0x3232 <_Z19handleSerialBusMsgsv+0x354>
    322c:	88 89       	ldd	r24, Y+16	; 0x10
    322e:	80 93 31 47 	sts	0x4731, r24	; 0x804731 <_ZL17g_last_error_code>
    3232:	0e 94 79 6a 	call	0xd4f2	; 0xd4f2 <_Z12txGetPowerMwv>
    3236:	29 2f       	mov	r18, r25
    3238:	2f 93       	push	r18
    323a:	8f 93       	push	r24
    323c:	8e e5       	ldi	r24, 0x5E	; 94
    323e:	90 e4       	ldi	r25, 0x40	; 64
    3240:	89 2f       	mov	r24, r25
    3242:	8f 93       	push	r24
    3244:	8e e5       	ldi	r24, 0x5E	; 94
    3246:	90 e4       	ldi	r25, 0x40	; 64
    3248:	8f 93       	push	r24
    324a:	8f ef       	ldi	r24, 0xFF	; 255
    324c:	96 e4       	ldi	r25, 0x46	; 70
    324e:	89 2f       	mov	r24, r25
    3250:	8f 93       	push	r24
    3252:	8f ef       	ldi	r24, 0xFF	; 255
    3254:	96 e4       	ldi	r25, 0x46	; 70
    3256:	8f 93       	push	r24
    3258:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    325c:	0f 90       	pop	r0
    325e:	0f 90       	pop	r0
    3260:	0f 90       	pop	r0
    3262:	0f 90       	pop	r0
    3264:	0f 90       	pop	r0
    3266:	0f 90       	pop	r0
    3268:	8f ef       	ldi	r24, 0xFF	; 255
    326a:	96 e4       	ldi	r25, 0x46	; 70
    326c:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3270:	92 c5       	rjmp	.+2852   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3272:	0e 94 79 6a 	call	0xd4f2	; 0xd4f2 <_Z12txGetPowerMwv>
    3276:	29 2f       	mov	r18, r25
    3278:	2f 93       	push	r18
    327a:	8f 93       	push	r24
    327c:	8e e5       	ldi	r24, 0x5E	; 94
    327e:	90 e4       	ldi	r25, 0x40	; 64
    3280:	89 2f       	mov	r24, r25
    3282:	8f 93       	push	r24
    3284:	8e e5       	ldi	r24, 0x5E	; 94
    3286:	90 e4       	ldi	r25, 0x40	; 64
    3288:	8f 93       	push	r24
    328a:	8f ef       	ldi	r24, 0xFF	; 255
    328c:	96 e4       	ldi	r25, 0x46	; 70
    328e:	89 2f       	mov	r24, r25
    3290:	8f 93       	push	r24
    3292:	8f ef       	ldi	r24, 0xFF	; 255
    3294:	96 e4       	ldi	r25, 0x46	; 70
    3296:	8f 93       	push	r24
    3298:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    329c:	0f 90       	pop	r0
    329e:	0f 90       	pop	r0
    32a0:	0f 90       	pop	r0
    32a2:	0f 90       	pop	r0
    32a4:	0f 90       	pop	r0
    32a6:	0f 90       	pop	r0
    32a8:	8f ef       	ldi	r24, 0xFF	; 255
    32aa:	96 e4       	ldi	r25, 0x46	; 70
    32ac:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    32b0:	72 c5       	rjmp	.+2788   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    32b2:	19 8a       	std	Y+17, r1	; 0x11
    32b4:	1a 8a       	std	Y+18, r1	; 0x12
    32b6:	1b 8a       	std	Y+19, r1	; 0x13
    32b8:	1c 8a       	std	Y+20, r1	; 0x14
    32ba:	8e 81       	ldd	r24, Y+6	; 0x06
    32bc:	9f 81       	ldd	r25, Y+7	; 0x07
    32be:	fc 01       	movw	r30, r24
    32c0:	83 81       	ldd	r24, Z+3	; 0x03
    32c2:	88 23       	and	r24, r24
    32c4:	49 f1       	breq	.+82     	; 0x3318 <_Z19handleSerialBusMsgsv+0x43a>
    32c6:	8e 81       	ldd	r24, Y+6	; 0x06
    32c8:	9f 81       	ldd	r25, Y+7	; 0x07
    32ca:	03 96       	adiw	r24, 0x03	; 3
    32cc:	9e 01       	movw	r18, r28
    32ce:	2c 5b       	subi	r18, 0xBC	; 188
    32d0:	3f 4f       	sbci	r19, 0xFF	; 255
    32d2:	b9 01       	movw	r22, r18
    32d4:	0e 94 2b 6f 	call	0xde56	; 0xde56 <_Z12frequencyValPcPm>
    32d8:	ce 01       	movw	r24, r28
    32da:	8c 5b       	subi	r24, 0xBC	; 188
    32dc:	9f 4f       	sbci	r25, 0xFF	; 255
    32de:	61 e0       	ldi	r22, 0x01	; 1
    32e0:	0e 94 dc 69 	call	0xd3b8	; 0xd3b8 <_Z14txSetFrequencyPmb>
    32e4:	98 2f       	mov	r25, r24
    32e6:	81 e0       	ldi	r24, 0x01	; 1
    32e8:	89 27       	eor	r24, r25
    32ea:	88 23       	and	r24, r24
    32ec:	89 f0       	breq	.+34     	; 0x3310 <_Z19handleSerialBusMsgsv+0x432>
    32ee:	ce 01       	movw	r24, r28
    32f0:	8c 5b       	subi	r24, 0xBC	; 188
    32f2:	9f 4f       	sbci	r25, 0xFF	; 255
    32f4:	fc 01       	movw	r30, r24
    32f6:	80 81       	ld	r24, Z
    32f8:	91 81       	ldd	r25, Z+1	; 0x01
    32fa:	a2 81       	ldd	r26, Z+2	; 0x02
    32fc:	b3 81       	ldd	r27, Z+3	; 0x03
    32fe:	89 8b       	std	Y+17, r24	; 0x11
    3300:	9a 8b       	std	Y+18, r25	; 0x12
    3302:	ab 8b       	std	Y+19, r26	; 0x13
    3304:	bc 8b       	std	Y+20, r27	; 0x14
    3306:	81 e9       	ldi	r24, 0x91	; 145
    3308:	97 e4       	ldi	r25, 0x47	; 71
    330a:	0e 94 46 44 	call	0x888c	; 0x888c <_ZN13EepromManager13saveAllEEPROMEv>
    330e:	04 c0       	rjmp	.+8      	; 0x3318 <_Z19handleSerialBusMsgsv+0x43a>
    3310:	89 e6       	ldi	r24, 0x69	; 105
    3312:	90 e4       	ldi	r25, 0x40	; 64
    3314:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3318:	0e 94 26 6a 	call	0xd44c	; 0xd44c <_Z14txGetFrequencyv>
    331c:	dc 01       	movw	r26, r24
    331e:	cb 01       	movw	r24, r22
    3320:	89 8b       	std	Y+17, r24	; 0x11
    3322:	9a 8b       	std	Y+18, r25	; 0x12
    3324:	ab 8b       	std	Y+19, r26	; 0x13
    3326:	bc 8b       	std	Y+20, r27	; 0x14
    3328:	89 89       	ldd	r24, Y+17	; 0x11
    332a:	9a 89       	ldd	r25, Y+18	; 0x12
    332c:	ab 89       	ldd	r26, Y+19	; 0x13
    332e:	bc 89       	ldd	r27, Y+20	; 0x14
    3330:	89 2b       	or	r24, r25
    3332:	8a 2b       	or	r24, r26
    3334:	8b 2b       	or	r24, r27
    3336:	09 f4       	brne	.+2      	; 0x333a <_Z19handleSerialBusMsgsv+0x45c>
    3338:	29 c5       	rjmp	.+2642   	; 0x3d8c <_Z19handleSerialBusMsgsv+0xeae>
    333a:	89 89       	ldd	r24, Y+17	; 0x11
    333c:	9a 89       	ldd	r25, Y+18	; 0x12
    333e:	ab 89       	ldd	r26, Y+19	; 0x13
    3340:	bc 89       	ldd	r27, Y+20	; 0x14
    3342:	9e 01       	movw	r18, r28
    3344:	28 5b       	subi	r18, 0xB8	; 184
    3346:	3f 4f       	sbci	r19, 0xFF	; 255
    3348:	ac 01       	movw	r20, r24
    334a:	bd 01       	movw	r22, r26
    334c:	c9 01       	movw	r24, r18
    334e:	0e 94 af 6e 	call	0xdd5e	; 0xdd5e <_Z15frequencyStringPcm>
    3352:	98 2f       	mov	r25, r24
    3354:	81 e0       	ldi	r24, 0x01	; 1
    3356:	89 27       	eor	r24, r25
    3358:	88 23       	and	r24, r24
    335a:	e9 f0       	breq	.+58     	; 0x3396 <_Z19handleSerialBusMsgsv+0x4b8>
    335c:	ce 01       	movw	r24, r28
    335e:	88 5b       	subi	r24, 0xB8	; 184
    3360:	9f 4f       	sbci	r25, 0xFF	; 255
    3362:	29 2f       	mov	r18, r25
    3364:	2f 93       	push	r18
    3366:	8f 93       	push	r24
    3368:	84 e9       	ldi	r24, 0x94	; 148
    336a:	90 e4       	ldi	r25, 0x40	; 64
    336c:	89 2f       	mov	r24, r25
    336e:	8f 93       	push	r24
    3370:	84 e9       	ldi	r24, 0x94	; 148
    3372:	90 e4       	ldi	r25, 0x40	; 64
    3374:	8f 93       	push	r24
    3376:	8f ef       	ldi	r24, 0xFF	; 255
    3378:	96 e4       	ldi	r25, 0x46	; 70
    337a:	89 2f       	mov	r24, r25
    337c:	8f 93       	push	r24
    337e:	8f ef       	ldi	r24, 0xFF	; 255
    3380:	96 e4       	ldi	r25, 0x46	; 70
    3382:	8f 93       	push	r24
    3384:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3388:	0f 90       	pop	r0
    338a:	0f 90       	pop	r0
    338c:	0f 90       	pop	r0
    338e:	0f 90       	pop	r0
    3390:	0f 90       	pop	r0
    3392:	0f 90       	pop	r0
    3394:	1d c0       	rjmp	.+58     	; 0x33d0 <_Z19handleSerialBusMsgsv+0x4f2>
    3396:	8c 89       	ldd	r24, Y+20	; 0x14
    3398:	8f 93       	push	r24
    339a:	8b 89       	ldd	r24, Y+19	; 0x13
    339c:	8f 93       	push	r24
    339e:	8a 89       	ldd	r24, Y+18	; 0x12
    33a0:	8f 93       	push	r24
    33a2:	89 89       	ldd	r24, Y+17	; 0x11
    33a4:	8f 93       	push	r24
    33a6:	8c e9       	ldi	r24, 0x9C	; 156
    33a8:	90 e4       	ldi	r25, 0x40	; 64
    33aa:	89 2f       	mov	r24, r25
    33ac:	8f 93       	push	r24
    33ae:	8c e9       	ldi	r24, 0x9C	; 156
    33b0:	90 e4       	ldi	r25, 0x40	; 64
    33b2:	8f 93       	push	r24
    33b4:	8f ef       	ldi	r24, 0xFF	; 255
    33b6:	96 e4       	ldi	r25, 0x46	; 70
    33b8:	89 2f       	mov	r24, r25
    33ba:	8f 93       	push	r24
    33bc:	8f ef       	ldi	r24, 0xFF	; 255
    33be:	96 e4       	ldi	r25, 0x46	; 70
    33c0:	8f 93       	push	r24
    33c2:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    33c6:	8d b7       	in	r24, 0x3d	; 61
    33c8:	9e b7       	in	r25, 0x3e	; 62
    33ca:	08 96       	adiw	r24, 0x08	; 8
    33cc:	cd bf       	out	0x3d, r28	; 61
    33ce:	de bf       	out	0x3e, r29	; 62
    33d0:	8f ef       	ldi	r24, 0xFF	; 255
    33d2:	96 e4       	ldi	r25, 0x46	; 70
    33d4:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    33d8:	d9 c4       	rjmp	.+2482   	; 0x3d8c <_Z19handleSerialBusMsgsv+0xeae>
    33da:	8e 81       	ldd	r24, Y+6	; 0x06
    33dc:	9f 81       	ldd	r25, Y+7	; 0x07
    33de:	fc 01       	movw	r30, r24
    33e0:	83 81       	ldd	r24, Z+3	; 0x03
    33e2:	88 23       	and	r24, r24
    33e4:	81 f1       	breq	.+96     	; 0x3446 <_Z19handleSerialBusMsgsv+0x568>
    33e6:	8e 81       	ldd	r24, Y+6	; 0x06
    33e8:	9f 81       	ldd	r25, Y+7	; 0x07
    33ea:	fc 01       	movw	r30, r24
    33ec:	83 81       	ldd	r24, Z+3	; 0x03
    33ee:	80 33       	cpi	r24, 0x30	; 48
    33f0:	21 f4       	brne	.+8      	; 0x33fa <_Z19handleSerialBusMsgsv+0x51c>
    33f2:	82 e0       	ldi	r24, 0x02	; 2
    33f4:	0e 94 fa 29 	call	0x53f4	; 0x53f4 <_Z12stopEventNow19EventActionSource_t>
    33f8:	ce c4       	rjmp	.+2460   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    33fa:	8e 81       	ldd	r24, Y+6	; 0x06
    33fc:	9f 81       	ldd	r25, Y+7	; 0x07
    33fe:	fc 01       	movw	r30, r24
    3400:	83 81       	ldd	r24, Z+3	; 0x03
    3402:	81 33       	cpi	r24, 0x31	; 49
    3404:	21 f4       	brne	.+8      	; 0x340e <_Z19handleSerialBusMsgsv+0x530>
    3406:	82 e0       	ldi	r24, 0x02	; 2
    3408:	0e 94 98 29 	call	0x5330	; 0x5330 <_Z13startEventNow19EventActionSource_t>
    340c:	c4 c4       	rjmp	.+2440   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    340e:	8e 81       	ldd	r24, Y+6	; 0x06
    3410:	9f 81       	ldd	r25, Y+7	; 0x07
    3412:	fc 01       	movw	r30, r24
    3414:	83 81       	ldd	r24, Z+3	; 0x03
    3416:	82 33       	cpi	r24, 0x32	; 50
    3418:	29 f4       	brne	.+10     	; 0x3424 <_Z19handleSerialBusMsgsv+0x546>
    341a:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>
    341e:	0e 94 28 2a 	call	0x5450	; 0x5450 <_Z18startEventUsingRTCv>
    3422:	b9 c4       	rjmp	.+2418   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3424:	8e 81       	ldd	r24, Y+6	; 0x06
    3426:	9f 81       	ldd	r25, Y+7	; 0x07
    3428:	fc 01       	movw	r30, r24
    342a:	83 81       	ldd	r24, Z+3	; 0x03
    342c:	83 33       	cpi	r24, 0x33	; 51
    342e:	31 f4       	brne	.+12     	; 0x343c <_Z19handleSerialBusMsgsv+0x55e>
    3430:	62 e0       	ldi	r22, 0x02	; 2
    3432:	80 e0       	ldi	r24, 0x00	; 0
    3434:	90 e0       	ldi	r25, 0x00	; 0
    3436:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
    343a:	ad c4       	rjmp	.+2394   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    343c:	85 ea       	ldi	r24, 0xA5	; 165
    343e:	90 e4       	ldi	r25, 0x40	; 64
    3440:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3444:	a8 c4       	rjmp	.+2384   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3446:	85 ea       	ldi	r24, 0xA5	; 165
    3448:	90 e4       	ldi	r25, 0x40	; 64
    344a:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    344e:	a3 c4       	rjmp	.+2374   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3450:	8e 81       	ldd	r24, Y+6	; 0x06
    3452:	9f 81       	ldd	r25, Y+7	; 0x07
    3454:	fc 01       	movw	r30, r24
    3456:	83 81       	ldd	r24, Z+3	; 0x03
    3458:	88 23       	and	r24, r24
    345a:	09 f4       	brne	.+2      	; 0x345e <_Z19handleSerialBusMsgsv+0x580>
    345c:	41 c0       	rjmp	.+130    	; 0x34e0 <_Z19handleSerialBusMsgsv+0x602>
    345e:	80 e2       	ldi	r24, 0x20	; 32
    3460:	90 e0       	ldi	r25, 0x00	; 0
    3462:	80 93 ff 46 	sts	0x46FF, r24	; 0x8046ff <_ZL9g_tempStr>
    3466:	90 93 00 47 	sts	0x4700, r25	; 0x804700 <_ZL9g_tempStr+0x1>
    346a:	8e 81       	ldd	r24, Y+6	; 0x06
    346c:	9f 81       	ldd	r25, Y+7	; 0x07
    346e:	03 96       	adiw	r24, 0x03	; 3
    3470:	bc 01       	movw	r22, r24
    3472:	8f ef       	ldi	r24, 0xFF	; 255
    3474:	96 e4       	ldi	r25, 0x46	; 70
    3476:	0e 94 8b 76 	call	0xed16	; 0xed16 <strcat>
    347a:	8e 81       	ldd	r24, Y+6	; 0x06
    347c:	9f 81       	ldd	r25, Y+7	; 0x07
    347e:	fc 01       	movw	r30, r24
    3480:	87 89       	ldd	r24, Z+23	; 0x17
    3482:	88 23       	and	r24, r24
    3484:	d1 f0       	breq	.+52     	; 0x34ba <_Z19handleSerialBusMsgsv+0x5dc>
    3486:	8f ef       	ldi	r24, 0xFF	; 255
    3488:	96 e4       	ldi	r25, 0x46	; 70
    348a:	9c 01       	movw	r18, r24
    348c:	f9 01       	movw	r30, r18
    348e:	01 90       	ld	r0, Z+
    3490:	00 20       	and	r0, r0
    3492:	e9 f7       	brne	.-6      	; 0x348e <_Z19handleSerialBusMsgsv+0x5b0>
    3494:	cf 01       	movw	r24, r30
    3496:	01 97       	sbiw	r24, 0x01	; 1
    3498:	82 1b       	sub	r24, r18
    349a:	93 0b       	sbc	r25, r19
    349c:	81 50       	subi	r24, 0x01	; 1
    349e:	99 4b       	sbci	r25, 0xB9	; 185
    34a0:	20 e2       	ldi	r18, 0x20	; 32
    34a2:	30 e0       	ldi	r19, 0x00	; 0
    34a4:	fc 01       	movw	r30, r24
    34a6:	20 83       	st	Z, r18
    34a8:	31 83       	std	Z+1, r19	; 0x01
    34aa:	8e 81       	ldd	r24, Y+6	; 0x06
    34ac:	9f 81       	ldd	r25, Y+7	; 0x07
    34ae:	47 96       	adiw	r24, 0x17	; 23
    34b0:	bc 01       	movw	r22, r24
    34b2:	8f ef       	ldi	r24, 0xFF	; 255
    34b4:	96 e4       	ldi	r25, 0x46	; 70
    34b6:	0e 94 8b 76 	call	0xed16	; 0xed16 <strcat>
    34ba:	8f ef       	ldi	r24, 0xFF	; 255
    34bc:	96 e4       	ldi	r25, 0x46	; 70
    34be:	0e 94 a8 76 	call	0xed50	; 0xed50 <strlen>
    34c2:	45 97       	sbiw	r24, 0x15	; 21
    34c4:	68 f4       	brcc	.+26     	; 0x34e0 <_Z19handleSerialBusMsgsv+0x602>
    34c6:	6f ef       	ldi	r22, 0xFF	; 255
    34c8:	76 e4       	ldi	r23, 0x46	; 70
    34ca:	89 e5       	ldi	r24, 0x59	; 89
    34cc:	97 e4       	ldi	r25, 0x47	; 71
    34ce:	0e 94 a1 76 	call	0xed42	; 0xed42 <strcpy>
    34d2:	4f ef       	ldi	r20, 0xFF	; 255
    34d4:	56 e4       	ldi	r21, 0x46	; 70
    34d6:	6a e0       	ldi	r22, 0x0A	; 10
    34d8:	81 e9       	ldi	r24, 0x91	; 145
    34da:	97 e4       	ldi	r25, 0x47	; 71
    34dc:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    34e0:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    34e4:	88 23       	and	r24, r24
    34e6:	01 f1       	breq	.+64     	; 0x3528 <_Z19handleSerialBusMsgsv+0x64a>
    34e8:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    34ec:	88 2f       	mov	r24, r24
    34ee:	90 e0       	ldi	r25, 0x00	; 0
    34f0:	bc 01       	movw	r22, r24
    34f2:	89 e5       	ldi	r24, 0x59	; 89
    34f4:	97 e4       	ldi	r25, 0x47	; 71
    34f6:	0e 94 f0 56 	call	0xade0	; 0xade0 <_Z26timeRequiredToSendStrAtWPMPcj>
    34fa:	88 5a       	subi	r24, 0xA8	; 168
    34fc:	9d 4f       	sbci	r25, 0xFD	; 253
    34fe:	96 95       	lsr	r25
    3500:	87 95       	ror	r24
    3502:	96 95       	lsr	r25
    3504:	87 95       	ror	r24
    3506:	96 95       	lsr	r25
    3508:	87 95       	ror	r24
    350a:	9c 01       	movw	r18, r24
    350c:	a5 ec       	ldi	r26, 0xC5	; 197
    350e:	b0 e2       	ldi	r27, 0x20	; 32
    3510:	0e 94 f8 74 	call	0xe9f0	; 0xe9f0 <__umulhisi3>
    3514:	92 95       	swap	r25
    3516:	82 95       	swap	r24
    3518:	8f 70       	andi	r24, 0x0F	; 15
    351a:	89 27       	eor	r24, r25
    351c:	9f 70       	andi	r25, 0x0F	; 15
    351e:	89 27       	eor	r24, r25
    3520:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_time_needed_for_ID>
    3524:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_time_needed_for_ID+0x1>
    3528:	89 e5       	ldi	r24, 0x59	; 89
    352a:	97 e4       	ldi	r25, 0x47	; 71
    352c:	89 2f       	mov	r24, r25
    352e:	8f 93       	push	r24
    3530:	89 e5       	ldi	r24, 0x59	; 89
    3532:	97 e4       	ldi	r25, 0x47	; 71
    3534:	8f 93       	push	r24
    3536:	8a ea       	ldi	r24, 0xAA	; 170
    3538:	90 e4       	ldi	r25, 0x40	; 64
    353a:	89 2f       	mov	r24, r25
    353c:	8f 93       	push	r24
    353e:	8a ea       	ldi	r24, 0xAA	; 170
    3540:	90 e4       	ldi	r25, 0x40	; 64
    3542:	8f 93       	push	r24
    3544:	8f ef       	ldi	r24, 0xFF	; 255
    3546:	96 e4       	ldi	r25, 0x46	; 70
    3548:	89 2f       	mov	r24, r25
    354a:	8f 93       	push	r24
    354c:	8f ef       	ldi	r24, 0xFF	; 255
    354e:	96 e4       	ldi	r25, 0x46	; 70
    3550:	8f 93       	push	r24
    3552:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3556:	0f 90       	pop	r0
    3558:	0f 90       	pop	r0
    355a:	0f 90       	pop	r0
    355c:	0f 90       	pop	r0
    355e:	0f 90       	pop	r0
    3560:	0f 90       	pop	r0
    3562:	8f ef       	ldi	r24, 0xFF	; 255
    3564:	96 e4       	ldi	r25, 0x46	; 70
    3566:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    356a:	15 c4       	rjmp	.+2090   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    356c:	8e 81       	ldd	r24, Y+6	; 0x06
    356e:	9f 81       	ldd	r25, Y+7	; 0x07
    3570:	fc 01       	movw	r30, r24
    3572:	83 81       	ldd	r24, Z+3	; 0x03
    3574:	83 35       	cpi	r24, 0x53	; 83
    3576:	09 f0       	breq	.+2      	; 0x357a <_Z19handleSerialBusMsgsv+0x69c>
    3578:	6f c0       	rjmp	.+222    	; 0x3658 <_Z19handleSerialBusMsgsv+0x77a>
    357a:	8e 81       	ldd	r24, Y+6	; 0x06
    357c:	9f 81       	ldd	r25, Y+7	; 0x07
    357e:	fc 01       	movw	r30, r24
    3580:	87 89       	ldd	r24, Z+23	; 0x17
    3582:	8d 8b       	std	Y+21, r24	; 0x15
    3584:	8d 89       	ldd	r24, Y+21	; 0x15
    3586:	88 23       	and	r24, r24
    3588:	09 f4       	brne	.+2      	; 0x358c <_Z19handleSerialBusMsgsv+0x6ae>
    358a:	48 c0       	rjmp	.+144    	; 0x361c <_Z19handleSerialBusMsgsv+0x73e>
    358c:	8e 81       	ldd	r24, Y+6	; 0x06
    358e:	9f 81       	ldd	r25, Y+7	; 0x07
    3590:	47 96       	adiw	r24, 0x17	; 23
    3592:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    3596:	dc 01       	movw	r26, r24
    3598:	cb 01       	movw	r24, r22
    359a:	8e 8b       	std	Y+22, r24	; 0x16
    359c:	8e 89       	ldd	r24, Y+22	; 0x16
    359e:	8f 8b       	std	Y+23, r24	; 0x17
    35a0:	85 e0       	ldi	r24, 0x05	; 5
    35a2:	88 8f       	std	Y+24, r24	; 0x18
    35a4:	84 e1       	ldi	r24, 0x14	; 20
    35a6:	89 8f       	std	Y+25, r24	; 0x19
    35a8:	9f 89       	ldd	r25, Y+23	; 0x17
    35aa:	89 8d       	ldd	r24, Y+25	; 0x19
    35ac:	89 17       	cp	r24, r25
    35ae:	40 f0       	brcs	.+16     	; 0x35c0 <_Z19handleSerialBusMsgsv+0x6e2>
    35b0:	9f 89       	ldd	r25, Y+23	; 0x17
    35b2:	88 8d       	ldd	r24, Y+24	; 0x18
    35b4:	98 17       	cp	r25, r24
    35b6:	10 f4       	brcc	.+4      	; 0x35bc <_Z19handleSerialBusMsgsv+0x6de>
    35b8:	88 8d       	ldd	r24, Y+24	; 0x18
    35ba:	03 c0       	rjmp	.+6      	; 0x35c2 <_Z19handleSerialBusMsgsv+0x6e4>
    35bc:	8f 89       	ldd	r24, Y+23	; 0x17
    35be:	01 c0       	rjmp	.+2      	; 0x35c2 <_Z19handleSerialBusMsgsv+0x6e4>
    35c0:	89 8d       	ldd	r24, Y+25	; 0x19
    35c2:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    35c6:	4b e0       	ldi	r20, 0x0B	; 11
    35c8:	50 e4       	ldi	r21, 0x40	; 64
    35ca:	68 e2       	ldi	r22, 0x28	; 40
    35cc:	81 e9       	ldi	r24, 0x91	; 145
    35ce:	97 e4       	ldi	r25, 0x47	; 71
    35d0:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    35d4:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    35d8:	88 23       	and	r24, r24
    35da:	01 f1       	breq	.+64     	; 0x361c <_Z19handleSerialBusMsgsv+0x73e>
    35dc:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    35e0:	88 2f       	mov	r24, r24
    35e2:	90 e0       	ldi	r25, 0x00	; 0
    35e4:	bc 01       	movw	r22, r24
    35e6:	89 e5       	ldi	r24, 0x59	; 89
    35e8:	97 e4       	ldi	r25, 0x47	; 71
    35ea:	0e 94 f0 56 	call	0xade0	; 0xade0 <_Z26timeRequiredToSendStrAtWPMPcj>
    35ee:	88 5a       	subi	r24, 0xA8	; 168
    35f0:	9d 4f       	sbci	r25, 0xFD	; 253
    35f2:	96 95       	lsr	r25
    35f4:	87 95       	ror	r24
    35f6:	96 95       	lsr	r25
    35f8:	87 95       	ror	r24
    35fa:	96 95       	lsr	r25
    35fc:	87 95       	ror	r24
    35fe:	9c 01       	movw	r18, r24
    3600:	a5 ec       	ldi	r26, 0xC5	; 197
    3602:	b0 e2       	ldi	r27, 0x20	; 32
    3604:	0e 94 f8 74 	call	0xe9f0	; 0xe9f0 <__umulhisi3>
    3608:	92 95       	swap	r25
    360a:	82 95       	swap	r24
    360c:	8f 70       	andi	r24, 0x0F	; 15
    360e:	89 27       	eor	r24, r25
    3610:	9f 70       	andi	r25, 0x0F	; 15
    3612:	89 27       	eor	r24, r25
    3614:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_time_needed_for_ID>
    3618:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_time_needed_for_ID+0x1>
    361c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3620:	88 2f       	mov	r24, r24
    3622:	90 e0       	ldi	r25, 0x00	; 0
    3624:	29 2f       	mov	r18, r25
    3626:	2f 93       	push	r18
    3628:	8f 93       	push	r24
    362a:	81 eb       	ldi	r24, 0xB1	; 177
    362c:	90 e4       	ldi	r25, 0x40	; 64
    362e:	89 2f       	mov	r24, r25
    3630:	8f 93       	push	r24
    3632:	81 eb       	ldi	r24, 0xB1	; 177
    3634:	90 e4       	ldi	r25, 0x40	; 64
    3636:	8f 93       	push	r24
    3638:	8f ef       	ldi	r24, 0xFF	; 255
    363a:	96 e4       	ldi	r25, 0x46	; 70
    363c:	89 2f       	mov	r24, r25
    363e:	8f 93       	push	r24
    3640:	8f ef       	ldi	r24, 0xFF	; 255
    3642:	96 e4       	ldi	r25, 0x46	; 70
    3644:	8f 93       	push	r24
    3646:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    364a:	0f 90       	pop	r0
    364c:	0f 90       	pop	r0
    364e:	0f 90       	pop	r0
    3650:	0f 90       	pop	r0
    3652:	0f 90       	pop	r0
    3654:	0f 90       	pop	r0
    3656:	09 c0       	rjmp	.+18     	; 0x366a <_Z19handleSerialBusMsgsv+0x78c>
    3658:	85 e0       	ldi	r24, 0x05	; 5
    365a:	e5 ea       	ldi	r30, 0xA5	; 165
    365c:	f0 e4       	ldi	r31, 0x40	; 64
    365e:	af ef       	ldi	r26, 0xFF	; 255
    3660:	b6 e4       	ldi	r27, 0x46	; 70
    3662:	01 90       	ld	r0, Z+
    3664:	0d 92       	st	X+, r0
    3666:	8a 95       	dec	r24
    3668:	e1 f7       	brne	.-8      	; 0x3662 <_Z19handleSerialBusMsgsv+0x784>
    366a:	8f ef       	ldi	r24, 0xFF	; 255
    366c:	96 e4       	ldi	r25, 0x46	; 70
    366e:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3672:	91 c3       	rjmp	.+1826   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3674:	8e 81       	ldd	r24, Y+6	; 0x06
    3676:	9f 81       	ldd	r25, Y+7	; 0x07
    3678:	fc 01       	movw	r30, r24
    367a:	83 81       	ldd	r24, Z+3	; 0x03
    367c:	88 23       	and	r24, r24
    367e:	51 f1       	breq	.+84     	; 0x36d4 <_Z19handleSerialBusMsgsv+0x7f6>
    3680:	8e 81       	ldd	r24, Y+6	; 0x06
    3682:	9f 81       	ldd	r25, Y+7	; 0x07
    3684:	03 96       	adiw	r24, 0x03	; 3
    3686:	48 e0       	ldi	r20, 0x08	; 8
    3688:	50 e0       	ldi	r21, 0x00	; 0
    368a:	bc 01       	movw	r22, r24
    368c:	8f ef       	ldi	r24, 0xFF	; 255
    368e:	96 e4       	ldi	r25, 0x46	; 70
    3690:	0e 94 b1 76 	call	0xed62	; 0xed62 <strncpy>
    3694:	10 92 07 47 	sts	0x4707, r1	; 0x804707 <_ZL9g_tempStr+0x8>
    3698:	8f ef       	ldi	r24, 0xFF	; 255
    369a:	96 e4       	ldi	r25, 0x46	; 70
    369c:	0e 94 88 6e 	call	0xdd10	; 0xdd10 <_Z11only_digitsPc>
    36a0:	88 23       	and	r24, r24
    36a2:	41 f0       	breq	.+16     	; 0x36b4 <_Z19handleSerialBusMsgsv+0x7d6>
    36a4:	8f ef       	ldi	r24, 0xFF	; 255
    36a6:	96 e4       	ldi	r25, 0x46	; 70
    36a8:	0e 94 a8 76 	call	0xed50	; 0xed50 <strlen>
    36ac:	04 97       	sbiw	r24, 0x04	; 4
    36ae:	10 f0       	brcs	.+4      	; 0x36b4 <_Z19handleSerialBusMsgsv+0x7d6>
    36b0:	81 e0       	ldi	r24, 0x01	; 1
    36b2:	01 c0       	rjmp	.+2      	; 0x36b6 <_Z19handleSerialBusMsgsv+0x7d8>
    36b4:	80 e0       	ldi	r24, 0x00	; 0
    36b6:	88 23       	and	r24, r24
    36b8:	69 f0       	breq	.+26     	; 0x36d4 <_Z19handleSerialBusMsgsv+0x7f6>
    36ba:	6f ef       	ldi	r22, 0xFF	; 255
    36bc:	76 e4       	ldi	r23, 0x46	; 70
    36be:	83 e9       	ldi	r24, 0x93	; 147
    36c0:	97 e4       	ldi	r25, 0x47	; 71
    36c2:	0e 94 a1 76 	call	0xed42	; 0xed42 <strcpy>
    36c6:	43 e9       	ldi	r20, 0x93	; 147
    36c8:	57 e4       	ldi	r21, 0x47	; 71
    36ca:	6f e1       	ldi	r22, 0x1F	; 31
    36cc:	81 e9       	ldi	r24, 0x91	; 145
    36ce:	97 e4       	ldi	r25, 0x47	; 71
    36d0:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    36d4:	83 e9       	ldi	r24, 0x93	; 147
    36d6:	97 e4       	ldi	r25, 0x47	; 71
    36d8:	89 2f       	mov	r24, r25
    36da:	8f 93       	push	r24
    36dc:	83 e9       	ldi	r24, 0x93	; 147
    36de:	97 e4       	ldi	r25, 0x47	; 71
    36e0:	8f 93       	push	r24
    36e2:	83 ec       	ldi	r24, 0xC3	; 195
    36e4:	90 e4       	ldi	r25, 0x40	; 64
    36e6:	89 2f       	mov	r24, r25
    36e8:	8f 93       	push	r24
    36ea:	83 ec       	ldi	r24, 0xC3	; 195
    36ec:	90 e4       	ldi	r25, 0x40	; 64
    36ee:	8f 93       	push	r24
    36f0:	8f ef       	ldi	r24, 0xFF	; 255
    36f2:	96 e4       	ldi	r25, 0x46	; 70
    36f4:	89 2f       	mov	r24, r25
    36f6:	8f 93       	push	r24
    36f8:	8f ef       	ldi	r24, 0xFF	; 255
    36fa:	96 e4       	ldi	r25, 0x46	; 70
    36fc:	8f 93       	push	r24
    36fe:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3702:	0f 90       	pop	r0
    3704:	0f 90       	pop	r0
    3706:	0f 90       	pop	r0
    3708:	0f 90       	pop	r0
    370a:	0f 90       	pop	r0
    370c:	0f 90       	pop	r0
    370e:	8f ef       	ldi	r24, 0xFF	; 255
    3710:	96 e4       	ldi	r25, 0x46	; 70
    3712:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3716:	3f c3       	rjmp	.+1662   	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3718:	1d 82       	std	Y+5, r1	; 0x05
    371a:	8e 81       	ldd	r24, Y+6	; 0x06
    371c:	9f 81       	ldd	r25, Y+7	; 0x07
    371e:	fc 01       	movw	r30, r24
    3720:	83 81       	ldd	r24, Z+3	; 0x03
    3722:	88 23       	and	r24, r24
    3724:	39 f0       	breq	.+14     	; 0x3734 <_Z19handleSerialBusMsgsv+0x856>
    3726:	8e 81       	ldd	r24, Y+6	; 0x06
    3728:	9f 81       	ldd	r25, Y+7	; 0x07
    372a:	fc 01       	movw	r30, r24
    372c:	83 81       	ldd	r24, Z+3	; 0x03
    372e:	84 35       	cpi	r24, 0x54	; 84
    3730:	09 f0       	breq	.+2      	; 0x3734 <_Z19handleSerialBusMsgsv+0x856>
    3732:	9b c1       	rjmp	.+822    	; 0x3a6a <_Z19handleSerialBusMsgsv+0xb8c>
    3734:	8e 81       	ldd	r24, Y+6	; 0x06
    3736:	9f 81       	ldd	r25, Y+7	; 0x07
    3738:	fc 01       	movw	r30, r24
    373a:	87 89       	ldd	r24, Z+23	; 0x17
    373c:	88 23       	and	r24, r24
    373e:	09 f4       	brne	.+2      	; 0x3742 <_Z19handleSerialBusMsgsv+0x864>
    3740:	76 c0       	rjmp	.+236    	; 0x382e <_Z19handleSerialBusMsgsv+0x950>
    3742:	8e 81       	ldd	r24, Y+6	; 0x06
    3744:	9f 81       	ldd	r25, Y+7	; 0x07
    3746:	47 96       	adiw	r24, 0x17	; 23
    3748:	4c e0       	ldi	r20, 0x0C	; 12
    374a:	50 e0       	ldi	r21, 0x00	; 0
    374c:	bc 01       	movw	r22, r24
    374e:	8f ef       	ldi	r24, 0xFF	; 255
    3750:	96 e4       	ldi	r25, 0x46	; 70
    3752:	0e 94 b1 76 	call	0xed62	; 0xed62 <strncpy>
    3756:	10 92 0b 47 	sts	0x470B, r1	; 0x80470b <_ZL9g_tempStr+0xc>
    375a:	80 91 92 47 	lds	r24, 0x4792	; 0x804792 <g_utc_offset>
    375e:	81 95       	neg	r24
    3760:	48 2f       	mov	r20, r24
    3762:	6b e9       	ldi	r22, 0x9B	; 155
    3764:	77 e4       	ldi	r23, 0x47	; 71
    3766:	8f ef       	ldi	r24, 0xFF	; 255
    3768:	96 e4       	ldi	r25, 0x46	; 70
    376a:	0e 94 a2 2d 	call	0x5b44	; 0x5b44 <_Z18validateTimeStringPcPma>
    376e:	dc 01       	movw	r26, r24
    3770:	cb 01       	movw	r24, r22
    3772:	8a a3       	std	Y+34, r24	; 0x22
    3774:	9b a3       	std	Y+35, r25	; 0x23
    3776:	ac a3       	std	Y+36, r26	; 0x24
    3778:	bd a3       	std	Y+37, r27	; 0x25
    377a:	8a a1       	ldd	r24, Y+34	; 0x22
    377c:	9b a1       	ldd	r25, Y+35	; 0x23
    377e:	ac a1       	ldd	r26, Y+36	; 0x24
    3780:	bd a1       	ldd	r27, Y+37	; 0x25
    3782:	89 2b       	or	r24, r25
    3784:	8a 2b       	or	r24, r26
    3786:	8b 2b       	or	r24, r27
    3788:	09 f4       	brne	.+2      	; 0x378c <_Z19handleSerialBusMsgsv+0x8ae>
    378a:	6c c1       	rjmp	.+728    	; 0x3a64 <_Z19handleSerialBusMsgsv+0xb86>
    378c:	60 e0       	ldi	r22, 0x00	; 0
    378e:	8f ef       	ldi	r24, 0xFF	; 255
    3790:	96 e4       	ldi	r25, 0x46	; 70
    3792:	0e 94 1f 3f 	call	0x7e3e	; 0x7e3e <ds3231_set_date_time_arducon>
    3796:	8e a3       	std	Y+38, r24	; 0x26
    3798:	8e a1       	ldd	r24, Y+38	; 0x26
    379a:	88 23       	and	r24, r24
    379c:	51 f0       	breq	.+20     	; 0x37b2 <_Z19handleSerialBusMsgsv+0x8d4>
    379e:	88 e2       	ldi	r24, 0x28	; 40
    37a0:	eb ec       	ldi	r30, 0xCB	; 203
    37a2:	f0 e4       	ldi	r31, 0x40	; 64
    37a4:	af ef       	ldi	r26, 0xFF	; 255
    37a6:	b6 e4       	ldi	r27, 0x46	; 70
    37a8:	01 90       	ld	r0, Z+
    37aa:	0d 92       	st	X+, r0
    37ac:	8a 95       	dec	r24
    37ae:	e1 f7       	brne	.-8      	; 0x37a8 <_Z19handleSerialBusMsgsv+0x8ca>
    37b0:	59 c1       	rjmp	.+690    	; 0x3a64 <_Z19handleSerialBusMsgsv+0xb86>
    37b2:	80 e0       	ldi	r24, 0x00	; 0
    37b4:	90 e0       	ldi	r25, 0x00	; 0
    37b6:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    37ba:	dc 01       	movw	r26, r24
    37bc:	cb 01       	movw	r24, r22
    37be:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    37c2:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    37c6:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    37ca:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>
    37ce:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    37d2:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    37d6:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    37da:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    37de:	ae 01       	movw	r20, r28
    37e0:	4b 59       	subi	r20, 0x9B	; 155
    37e2:	5f 4f       	sbci	r21, 0xFF	; 255
    37e4:	22 e3       	ldi	r18, 0x32	; 50
    37e6:	30 e0       	ldi	r19, 0x00	; 0
    37e8:	bc 01       	movw	r22, r24
    37ea:	cd 01       	movw	r24, r26
    37ec:	0e 94 53 42 	call	0x84a6	; 0x84a6 <convertEpochToTimeString>
    37f0:	29 2f       	mov	r18, r25
    37f2:	2f 93       	push	r18
    37f4:	8f 93       	push	r24
    37f6:	83 ef       	ldi	r24, 0xF3	; 243
    37f8:	90 e4       	ldi	r25, 0x40	; 64
    37fa:	89 2f       	mov	r24, r25
    37fc:	8f 93       	push	r24
    37fe:	83 ef       	ldi	r24, 0xF3	; 243
    3800:	90 e4       	ldi	r25, 0x40	; 64
    3802:	8f 93       	push	r24
    3804:	8f ef       	ldi	r24, 0xFF	; 255
    3806:	96 e4       	ldi	r25, 0x46	; 70
    3808:	89 2f       	mov	r24, r25
    380a:	8f 93       	push	r24
    380c:	8f ef       	ldi	r24, 0xFF	; 255
    380e:	96 e4       	ldi	r25, 0x46	; 70
    3810:	8f 93       	push	r24
    3812:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3816:	0f 90       	pop	r0
    3818:	0f 90       	pop	r0
    381a:	0f 90       	pop	r0
    381c:	0f 90       	pop	r0
    381e:	0f 90       	pop	r0
    3820:	0f 90       	pop	r0
    3822:	60 e0       	ldi	r22, 0x00	; 0
    3824:	80 e0       	ldi	r24, 0x00	; 0
    3826:	90 e0       	ldi	r25, 0x00	; 0
    3828:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
    382c:	1b c1       	rjmp	.+566    	; 0x3a64 <_Z19handleSerialBusMsgsv+0xb86>
    382e:	ce 01       	movw	r24, r28
    3830:	84 5a       	subi	r24, 0xA4	; 164
    3832:	9f 4f       	sbci	r25, 0xFF	; 255
    3834:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    3838:	dc 01       	movw	r26, r24
    383a:	cb 01       	movw	r24, r22
    383c:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    3840:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    3844:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    3848:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>
    384c:	ce 01       	movw	r24, r28
    384e:	84 5a       	subi	r24, 0xA4	; 164
    3850:	9f 4f       	sbci	r25, 0xFF	; 255
    3852:	fc 01       	movw	r30, r24
    3854:	80 81       	ld	r24, Z
    3856:	88 23       	and	r24, r24
    3858:	51 f0       	breq	.+20     	; 0x386e <_Z19handleSerialBusMsgsv+0x990>
    385a:	88 e2       	ldi	r24, 0x28	; 40
    385c:	eb ec       	ldi	r30, 0xCB	; 203
    385e:	f0 e4       	ldi	r31, 0x40	; 64
    3860:	af ef       	ldi	r26, 0xFF	; 255
    3862:	b6 e4       	ldi	r27, 0x46	; 70
    3864:	01 90       	ld	r0, Z+
    3866:	0d 92       	st	X+, r0
    3868:	8a 95       	dec	r24
    386a:	e1 f7       	brne	.-8      	; 0x3864 <_Z19handleSerialBusMsgsv+0x986>
    386c:	fb c0       	rjmp	.+502    	; 0x3a64 <_Z19handleSerialBusMsgsv+0xb86>
    386e:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    3872:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    3876:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    387a:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    387e:	ae 01       	movw	r20, r28
    3880:	4b 59       	subi	r20, 0x9B	; 155
    3882:	5f 4f       	sbci	r21, 0xFF	; 255
    3884:	22 e3       	ldi	r18, 0x32	; 50
    3886:	30 e0       	ldi	r19, 0x00	; 0
    3888:	bc 01       	movw	r22, r24
    388a:	cd 01       	movw	r24, r26
    388c:	0e 94 53 42 	call	0x84a6	; 0x84a6 <convertEpochToTimeString>
    3890:	29 2f       	mov	r18, r25
    3892:	2f 93       	push	r18
    3894:	8f 93       	push	r24
    3896:	8d ef       	ldi	r24, 0xFD	; 253
    3898:	90 e4       	ldi	r25, 0x40	; 64
    389a:	89 2f       	mov	r24, r25
    389c:	8f 93       	push	r24
    389e:	8d ef       	ldi	r24, 0xFD	; 253
    38a0:	90 e4       	ldi	r25, 0x40	; 64
    38a2:	8f 93       	push	r24
    38a4:	8f ef       	ldi	r24, 0xFF	; 255
    38a6:	96 e4       	ldi	r25, 0x46	; 70
    38a8:	89 2f       	mov	r24, r25
    38aa:	8f 93       	push	r24
    38ac:	8f ef       	ldi	r24, 0xFF	; 255
    38ae:	96 e4       	ldi	r25, 0x46	; 70
    38b0:	8f 93       	push	r24
    38b2:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    38b6:	0f 90       	pop	r0
    38b8:	0f 90       	pop	r0
    38ba:	0f 90       	pop	r0
    38bc:	0f 90       	pop	r0
    38be:	0f 90       	pop	r0
    38c0:	0f 90       	pop	r0
    38c2:	8f ef       	ldi	r24, 0xFF	; 255
    38c4:	96 e4       	ldi	r25, 0x46	; 70
    38c6:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    38ca:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    38ce:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    38d2:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    38d6:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    38da:	ae 01       	movw	r20, r28
    38dc:	4b 59       	subi	r20, 0x9B	; 155
    38de:	5f 4f       	sbci	r21, 0xFF	; 255
    38e0:	22 e3       	ldi	r18, 0x32	; 50
    38e2:	30 e0       	ldi	r19, 0x00	; 0
    38e4:	bc 01       	movw	r22, r24
    38e6:	cd 01       	movw	r24, r26
    38e8:	0e 94 53 42 	call	0x84a6	; 0x84a6 <convertEpochToTimeString>
    38ec:	29 2f       	mov	r18, r25
    38ee:	2f 93       	push	r18
    38f0:	8f 93       	push	r24
    38f2:	89 e0       	ldi	r24, 0x09	; 9
    38f4:	91 e4       	ldi	r25, 0x41	; 65
    38f6:	89 2f       	mov	r24, r25
    38f8:	8f 93       	push	r24
    38fa:	89 e0       	ldi	r24, 0x09	; 9
    38fc:	91 e4       	ldi	r25, 0x41	; 65
    38fe:	8f 93       	push	r24
    3900:	8f ef       	ldi	r24, 0xFF	; 255
    3902:	96 e4       	ldi	r25, 0x46	; 70
    3904:	89 2f       	mov	r24, r25
    3906:	8f 93       	push	r24
    3908:	8f ef       	ldi	r24, 0xFF	; 255
    390a:	96 e4       	ldi	r25, 0x46	; 70
    390c:	8f 93       	push	r24
    390e:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3912:	0f 90       	pop	r0
    3914:	0f 90       	pop	r0
    3916:	0f 90       	pop	r0
    3918:	0f 90       	pop	r0
    391a:	0f 90       	pop	r0
    391c:	0f 90       	pop	r0
    391e:	8f ef       	ldi	r24, 0xFF	; 255
    3920:	96 e4       	ldi	r25, 0x46	; 70
    3922:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3926:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    392a:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    392e:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    3932:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    3936:	ae 01       	movw	r20, r28
    3938:	4b 59       	subi	r20, 0x9B	; 155
    393a:	5f 4f       	sbci	r21, 0xFF	; 255
    393c:	22 e3       	ldi	r18, 0x32	; 50
    393e:	30 e0       	ldi	r19, 0x00	; 0
    3940:	bc 01       	movw	r22, r24
    3942:	cd 01       	movw	r24, r26
    3944:	0e 94 53 42 	call	0x84a6	; 0x84a6 <convertEpochToTimeString>
    3948:	29 2f       	mov	r18, r25
    394a:	2f 93       	push	r18
    394c:	8f 93       	push	r24
    394e:	85 e1       	ldi	r24, 0x15	; 21
    3950:	91 e4       	ldi	r25, 0x41	; 65
    3952:	89 2f       	mov	r24, r25
    3954:	8f 93       	push	r24
    3956:	85 e1       	ldi	r24, 0x15	; 21
    3958:	91 e4       	ldi	r25, 0x41	; 65
    395a:	8f 93       	push	r24
    395c:	8f ef       	ldi	r24, 0xFF	; 255
    395e:	96 e4       	ldi	r25, 0x46	; 70
    3960:	89 2f       	mov	r24, r25
    3962:	8f 93       	push	r24
    3964:	8f ef       	ldi	r24, 0xFF	; 255
    3966:	96 e4       	ldi	r25, 0x46	; 70
    3968:	8f 93       	push	r24
    396a:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    396e:	0f 90       	pop	r0
    3970:	0f 90       	pop	r0
    3972:	0f 90       	pop	r0
    3974:	0f 90       	pop	r0
    3976:	0f 90       	pop	r0
    3978:	0f 90       	pop	r0
    397a:	8f ef       	ldi	r24, 0xFF	; 255
    397c:	96 e4       	ldi	r25, 0x46	; 70
    397e:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3982:	0e 94 76 30 	call	0x60ec	; 0x60ec <_Z23clockConfigurationCheckv>
    3986:	8f a3       	std	Y+39, r24	; 0x27
    3988:	8f a1       	ldd	r24, Y+39	; 0x27
    398a:	81 30       	cpi	r24, 0x01	; 1
    398c:	31 f0       	breq	.+12     	; 0x399a <_Z19handleSerialBusMsgsv+0xabc>
    398e:	8f a1       	ldd	r24, Y+39	; 0x27
    3990:	85 30       	cpi	r24, 0x05	; 5
    3992:	19 f0       	breq	.+6      	; 0x399a <_Z19handleSerialBusMsgsv+0xabc>
    3994:	0e 94 0d 31 	call	0x621a	; 0x621a <_Z18reportConfigErrorsv>
    3998:	65 c0       	rjmp	.+202    	; 0x3a64 <_Z19handleSerialBusMsgsv+0xb86>
    399a:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    399e:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    39a2:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    39a6:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    39aa:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    39ae:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    39b2:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    39b6:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    39ba:	0f 2e       	mov	r0, r31
    39bc:	f1 e2       	ldi	r31, 0x21	; 33
    39be:	ef 2e       	mov	r14, r31
    39c0:	f1 e4       	ldi	r31, 0x41	; 65
    39c2:	ff 2e       	mov	r15, r31
    39c4:	f0 2d       	mov	r31, r0
    39c6:	0e e2       	ldi	r16, 0x2E	; 46
    39c8:	11 e4       	ldi	r17, 0x41	; 65
    39ca:	bc 01       	movw	r22, r24
    39cc:	cd 01       	movw	r24, r26
    39ce:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_Z14reportTimeTillmmPKcS0_>
    39d2:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    39d6:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    39da:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    39de:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    39e2:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    39e6:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    39ea:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    39ee:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    39f2:	e1 2c       	mov	r14, r1
    39f4:	f1 2c       	mov	r15, r1
    39f6:	0a e3       	ldi	r16, 0x3A	; 58
    39f8:	11 e4       	ldi	r17, 0x41	; 65
    39fa:	bc 01       	movw	r22, r24
    39fc:	cd 01       	movw	r24, r26
    39fe:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_Z14reportTimeTillmmPKcS0_>
    3a02:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    3a06:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    3a0a:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    3a0e:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    3a12:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    3a16:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    3a1a:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    3a1e:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    3a22:	61 e0       	ldi	r22, 0x01	; 1
    3a24:	28 17       	cp	r18, r24
    3a26:	39 07       	cpc	r19, r25
    3a28:	4a 07       	cpc	r20, r26
    3a2a:	5b 07       	cpc	r21, r27
    3a2c:	08 f0       	brcs	.+2      	; 0x3a30 <_Z19handleSerialBusMsgsv+0xb52>
    3a2e:	60 e0       	ldi	r22, 0x00	; 0
    3a30:	66 23       	and	r22, r22
    3a32:	c1 f0       	breq	.+48     	; 0x3a64 <_Z19handleSerialBusMsgsv+0xb86>
    3a34:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    3a38:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    3a3c:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    3a40:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    3a44:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    3a48:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    3a4c:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    3a50:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    3a54:	e1 2c       	mov	r14, r1
    3a56:	f1 2c       	mov	r15, r1
    3a58:	02 e4       	ldi	r16, 0x42	; 66
    3a5a:	11 e4       	ldi	r17, 0x41	; 65
    3a5c:	bc 01       	movw	r22, r24
    3a5e:	cd 01       	movw	r24, r26
    3a60:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_Z14reportTimeTillmmPKcS0_>
    3a64:	81 e0       	ldi	r24, 0x01	; 1
    3a66:	8d 83       	std	Y+5, r24	; 0x05
    3a68:	70 c1       	rjmp	.+736    	; 0x3d4a <_Z19handleSerialBusMsgsv+0xe6c>
    3a6a:	8e 81       	ldd	r24, Y+6	; 0x06
    3a6c:	9f 81       	ldd	r25, Y+7	; 0x07
    3a6e:	fc 01       	movw	r30, r24
    3a70:	83 81       	ldd	r24, Z+3	; 0x03
    3a72:	83 35       	cpi	r24, 0x53	; 83
    3a74:	09 f0       	breq	.+2      	; 0x3a78 <_Z19handleSerialBusMsgsv+0xb9a>
    3a76:	da c0       	rjmp	.+436    	; 0x3c2c <_Z19handleSerialBusMsgsv+0xd4e>
    3a78:	8e 81       	ldd	r24, Y+6	; 0x06
    3a7a:	9f 81       	ldd	r25, Y+7	; 0x07
    3a7c:	47 96       	adiw	r24, 0x17	; 23
    3a7e:	bc 01       	movw	r22, r24
    3a80:	8f ef       	ldi	r24, 0xFF	; 255
    3a82:	96 e4       	ldi	r25, 0x46	; 70
    3a84:	0e 94 a1 76 	call	0xed42	; 0xed42 <strcpy>
    3a88:	80 91 92 47 	lds	r24, 0x4792	; 0x804792 <g_utc_offset>
    3a8c:	81 95       	neg	r24
    3a8e:	48 2f       	mov	r20, r24
    3a90:	62 e7       	ldi	r22, 0x72	; 114
    3a92:	77 e4       	ldi	r23, 0x47	; 71
    3a94:	8f ef       	ldi	r24, 0xFF	; 255
    3a96:	96 e4       	ldi	r25, 0x46	; 70
    3a98:	0e 94 a2 2d 	call	0x5b44	; 0x5b44 <_Z18validateTimeStringPcPma>
    3a9c:	dc 01       	movw	r26, r24
    3a9e:	cb 01       	movw	r24, r22
    3aa0:	8a 8f       	std	Y+26, r24	; 0x1a
    3aa2:	9b 8f       	std	Y+27, r25	; 0x1b
    3aa4:	ac 8f       	std	Y+28, r26	; 0x1c
    3aa6:	bd 8f       	std	Y+29, r27	; 0x1d
    3aa8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3aaa:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3aac:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3aae:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3ab0:	89 2b       	or	r24, r25
    3ab2:	8a 2b       	or	r24, r26
    3ab4:	8b 2b       	or	r24, r27
    3ab6:	09 f4       	brne	.+2      	; 0x3aba <_Z19handleSerialBusMsgsv+0xbdc>
    3ab8:	8c c0       	rjmp	.+280    	; 0x3bd2 <_Z19handleSerialBusMsgsv+0xcf4>
    3aba:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3abc:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3abe:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3ac0:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3ac2:	80 93 72 47 	sts	0x4772, r24	; 0x804772 <g_event_start_epoch>
    3ac6:	90 93 73 47 	sts	0x4773, r25	; 0x804773 <g_event_start_epoch+0x1>
    3aca:	a0 93 74 47 	sts	0x4774, r26	; 0x804774 <g_event_start_epoch+0x2>
    3ace:	b0 93 75 47 	sts	0x4775, r27	; 0x804775 <g_event_start_epoch+0x3>
    3ad2:	42 e7       	ldi	r20, 0x72	; 114
    3ad4:	57 e4       	ldi	r21, 0x47	; 71
    3ad6:	62 e0       	ldi	r22, 0x02	; 2
    3ad8:	81 e9       	ldi	r24, 0x91	; 145
    3ada:	97 e4       	ldi	r25, 0x47	; 71
    3adc:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3ae0:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    3ae4:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    3ae8:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    3aec:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    3af0:	9e 01       	movw	r18, r28
    3af2:	23 5a       	subi	r18, 0xA3	; 163
    3af4:	3f 4f       	sbci	r19, 0xFF	; 255
    3af6:	f9 01       	movw	r30, r18
    3af8:	80 83       	st	Z, r24
    3afa:	91 83       	std	Z+1, r25	; 0x01
    3afc:	a2 83       	std	Z+2, r26	; 0x02
    3afe:	b3 83       	std	Z+3, r27	; 0x03
    3b00:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    3b04:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    3b08:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    3b0c:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    3b10:	80 58       	subi	r24, 0x80	; 128
    3b12:	9e 4a       	sbci	r25, 0xAE	; 174
    3b14:	ae 4f       	sbci	r26, 0xFE	; 254
    3b16:	bf 4f       	sbci	r27, 0xFF	; 255
    3b18:	9e 01       	movw	r18, r28
    3b1a:	2f 59       	subi	r18, 0x9F	; 159
    3b1c:	3f 4f       	sbci	r19, 0xFF	; 255
    3b1e:	f9 01       	movw	r30, r18
    3b20:	80 83       	st	Z, r24
    3b22:	91 83       	std	Z+1, r25	; 0x01
    3b24:	a2 83       	std	Z+2, r26	; 0x02
    3b26:	b3 83       	std	Z+3, r27	; 0x03
    3b28:	ce 01       	movw	r24, r28
    3b2a:	83 5a       	subi	r24, 0xA3	; 163
    3b2c:	9f 4f       	sbci	r25, 0xFF	; 255
    3b2e:	fc 01       	movw	r30, r24
    3b30:	20 81       	ld	r18, Z
    3b32:	31 81       	ldd	r19, Z+1	; 0x01
    3b34:	42 81       	ldd	r20, Z+2	; 0x02
    3b36:	53 81       	ldd	r21, Z+3	; 0x03
    3b38:	ce 01       	movw	r24, r28
    3b3a:	8f 59       	subi	r24, 0x9F	; 159
    3b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    3b3e:	fc 01       	movw	r30, r24
    3b40:	80 81       	ld	r24, Z
    3b42:	91 81       	ldd	r25, Z+1	; 0x01
    3b44:	a2 81       	ldd	r26, Z+2	; 0x02
    3b46:	b3 81       	ldd	r27, Z+3	; 0x03
    3b48:	28 17       	cp	r18, r24
    3b4a:	39 07       	cpc	r19, r25
    3b4c:	4a 07       	cpc	r20, r26
    3b4e:	5b 07       	cpc	r21, r27
    3b50:	48 f4       	brcc	.+18     	; 0x3b64 <_Z19handleSerialBusMsgsv+0xc86>
    3b52:	ce 01       	movw	r24, r28
    3b54:	8f 59       	subi	r24, 0x9F	; 159
    3b56:	9f 4f       	sbci	r25, 0xFF	; 255
    3b58:	fc 01       	movw	r30, r24
    3b5a:	80 81       	ld	r24, Z
    3b5c:	91 81       	ldd	r25, Z+1	; 0x01
    3b5e:	a2 81       	ldd	r26, Z+2	; 0x02
    3b60:	b3 81       	ldd	r27, Z+3	; 0x03
    3b62:	08 c0       	rjmp	.+16     	; 0x3b74 <_Z19handleSerialBusMsgsv+0xc96>
    3b64:	ce 01       	movw	r24, r28
    3b66:	83 5a       	subi	r24, 0xA3	; 163
    3b68:	9f 4f       	sbci	r25, 0xFF	; 255
    3b6a:	fc 01       	movw	r30, r24
    3b6c:	80 81       	ld	r24, Z
    3b6e:	91 81       	ldd	r25, Z+1	; 0x01
    3b70:	a2 81       	ldd	r26, Z+2	; 0x02
    3b72:	b3 81       	ldd	r27, Z+3	; 0x03
    3b74:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    3b78:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    3b7c:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    3b80:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
    3b84:	46 e7       	ldi	r20, 0x76	; 118
    3b86:	57 e4       	ldi	r21, 0x47	; 71
    3b88:	66 e0       	ldi	r22, 0x06	; 6
    3b8a:	81 e9       	ldi	r24, 0x91	; 145
    3b8c:	97 e4       	ldi	r25, 0x47	; 71
    3b8e:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3b92:	63 e0       	ldi	r22, 0x03	; 3
    3b94:	80 e0       	ldi	r24, 0x00	; 0
    3b96:	90 e0       	ldi	r25, 0x00	; 0
    3b98:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
    3b9c:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    3ba0:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    3ba4:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    3ba8:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    3bac:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    3bb0:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    3bb4:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    3bb8:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    3bbc:	61 e0       	ldi	r22, 0x01	; 1
    3bbe:	82 17       	cp	r24, r18
    3bc0:	93 07       	cpc	r25, r19
    3bc2:	a4 07       	cpc	r26, r20
    3bc4:	b5 07       	cpc	r27, r21
    3bc6:	08 f0       	brcs	.+2      	; 0x3bca <_Z19handleSerialBusMsgsv+0xcec>
    3bc8:	60 e0       	ldi	r22, 0x00	; 0
    3bca:	66 23       	and	r22, r22
    3bcc:	11 f0       	breq	.+4      	; 0x3bd2 <_Z19handleSerialBusMsgsv+0xcf4>
    3bce:	0e 94 28 2a 	call	0x5450	; 0x5450 <_Z18startEventUsingRTCv>
    3bd2:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    3bd6:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    3bda:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    3bde:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    3be2:	ae 01       	movw	r20, r28
    3be4:	4b 59       	subi	r20, 0x9B	; 155
    3be6:	5f 4f       	sbci	r21, 0xFF	; 255
    3be8:	22 e3       	ldi	r18, 0x32	; 50
    3bea:	30 e0       	ldi	r19, 0x00	; 0
    3bec:	bc 01       	movw	r22, r24
    3bee:	cd 01       	movw	r24, r26
    3bf0:	0e 94 53 42 	call	0x84a6	; 0x84a6 <convertEpochToTimeString>
    3bf4:	29 2f       	mov	r18, r25
    3bf6:	2f 93       	push	r18
    3bf8:	8f 93       	push	r24
    3bfa:	83 e5       	ldi	r24, 0x53	; 83
    3bfc:	91 e4       	ldi	r25, 0x41	; 65
    3bfe:	89 2f       	mov	r24, r25
    3c00:	8f 93       	push	r24
    3c02:	83 e5       	ldi	r24, 0x53	; 83
    3c04:	91 e4       	ldi	r25, 0x41	; 65
    3c06:	8f 93       	push	r24
    3c08:	8f ef       	ldi	r24, 0xFF	; 255
    3c0a:	96 e4       	ldi	r25, 0x46	; 70
    3c0c:	89 2f       	mov	r24, r25
    3c0e:	8f 93       	push	r24
    3c10:	8f ef       	ldi	r24, 0xFF	; 255
    3c12:	96 e4       	ldi	r25, 0x46	; 70
    3c14:	8f 93       	push	r24
    3c16:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3c1a:	0f 90       	pop	r0
    3c1c:	0f 90       	pop	r0
    3c1e:	0f 90       	pop	r0
    3c20:	0f 90       	pop	r0
    3c22:	0f 90       	pop	r0
    3c24:	0f 90       	pop	r0
    3c26:	81 e0       	ldi	r24, 0x01	; 1
    3c28:	8d 83       	std	Y+5, r24	; 0x05
    3c2a:	8f c0       	rjmp	.+286    	; 0x3d4a <_Z19handleSerialBusMsgsv+0xe6c>
    3c2c:	8e 81       	ldd	r24, Y+6	; 0x06
    3c2e:	9f 81       	ldd	r25, Y+7	; 0x07
    3c30:	fc 01       	movw	r30, r24
    3c32:	83 81       	ldd	r24, Z+3	; 0x03
    3c34:	86 34       	cpi	r24, 0x46	; 70
    3c36:	09 f0       	breq	.+2      	; 0x3c3a <_Z19handleSerialBusMsgsv+0xd5c>
    3c38:	80 c0       	rjmp	.+256    	; 0x3d3a <_Z19handleSerialBusMsgsv+0xe5c>
    3c3a:	8e 81       	ldd	r24, Y+6	; 0x06
    3c3c:	9f 81       	ldd	r25, Y+7	; 0x07
    3c3e:	47 96       	adiw	r24, 0x17	; 23
    3c40:	bc 01       	movw	r22, r24
    3c42:	8f ef       	ldi	r24, 0xFF	; 255
    3c44:	96 e4       	ldi	r25, 0x46	; 70
    3c46:	0e 94 a1 76 	call	0xed42	; 0xed42 <strcpy>
    3c4a:	80 91 92 47 	lds	r24, 0x4792	; 0x804792 <g_utc_offset>
    3c4e:	81 95       	neg	r24
    3c50:	48 2f       	mov	r20, r24
    3c52:	66 e7       	ldi	r22, 0x76	; 118
    3c54:	77 e4       	ldi	r23, 0x47	; 71
    3c56:	8f ef       	ldi	r24, 0xFF	; 255
    3c58:	96 e4       	ldi	r25, 0x46	; 70
    3c5a:	0e 94 a2 2d 	call	0x5b44	; 0x5b44 <_Z18validateTimeStringPcPma>
    3c5e:	dc 01       	movw	r26, r24
    3c60:	cb 01       	movw	r24, r22
    3c62:	8e 8f       	std	Y+30, r24	; 0x1e
    3c64:	9f 8f       	std	Y+31, r25	; 0x1f
    3c66:	a8 a3       	std	Y+32, r26	; 0x20
    3c68:	b9 a3       	std	Y+33, r27	; 0x21
    3c6a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3c6c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3c6e:	a8 a1       	ldd	r26, Y+32	; 0x20
    3c70:	b9 a1       	ldd	r27, Y+33	; 0x21
    3c72:	89 2b       	or	r24, r25
    3c74:	8a 2b       	or	r24, r26
    3c76:	8b 2b       	or	r24, r27
    3c78:	99 f1       	breq	.+102    	; 0x3ce0 <_Z19handleSerialBusMsgsv+0xe02>
    3c7a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3c7c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3c7e:	a8 a1       	ldd	r26, Y+32	; 0x20
    3c80:	b9 a1       	ldd	r27, Y+33	; 0x21
    3c82:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    3c86:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    3c8a:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    3c8e:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
    3c92:	46 e7       	ldi	r20, 0x76	; 118
    3c94:	57 e4       	ldi	r21, 0x47	; 71
    3c96:	66 e0       	ldi	r22, 0x06	; 6
    3c98:	81 e9       	ldi	r24, 0x91	; 145
    3c9a:	97 e4       	ldi	r25, 0x47	; 71
    3c9c:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3ca0:	63 e0       	ldi	r22, 0x03	; 3
    3ca2:	80 e0       	ldi	r24, 0x00	; 0
    3ca4:	90 e0       	ldi	r25, 0x00	; 0
    3ca6:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
    3caa:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    3cae:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    3cb2:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    3cb6:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    3cba:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    3cbe:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    3cc2:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    3cc6:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    3cca:	61 e0       	ldi	r22, 0x01	; 1
    3ccc:	82 17       	cp	r24, r18
    3cce:	93 07       	cpc	r25, r19
    3cd0:	a4 07       	cpc	r26, r20
    3cd2:	b5 07       	cpc	r27, r21
    3cd4:	08 f0       	brcs	.+2      	; 0x3cd8 <_Z19handleSerialBusMsgsv+0xdfa>
    3cd6:	60 e0       	ldi	r22, 0x00	; 0
    3cd8:	66 23       	and	r22, r22
    3cda:	11 f0       	breq	.+4      	; 0x3ce0 <_Z19handleSerialBusMsgsv+0xe02>
    3cdc:	0e 94 28 2a 	call	0x5450	; 0x5450 <_Z18startEventUsingRTCv>
    3ce0:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    3ce4:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    3ce8:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    3cec:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    3cf0:	ae 01       	movw	r20, r28
    3cf2:	4b 59       	subi	r20, 0x9B	; 155
    3cf4:	5f 4f       	sbci	r21, 0xFF	; 255
    3cf6:	22 e3       	ldi	r18, 0x32	; 50
    3cf8:	30 e0       	ldi	r19, 0x00	; 0
    3cfa:	bc 01       	movw	r22, r24
    3cfc:	cd 01       	movw	r24, r26
    3cfe:	0e 94 53 42 	call	0x84a6	; 0x84a6 <convertEpochToTimeString>
    3d02:	29 2f       	mov	r18, r25
    3d04:	2f 93       	push	r18
    3d06:	8f 93       	push	r24
    3d08:	85 e1       	ldi	r24, 0x15	; 21
    3d0a:	91 e4       	ldi	r25, 0x41	; 65
    3d0c:	89 2f       	mov	r24, r25
    3d0e:	8f 93       	push	r24
    3d10:	85 e1       	ldi	r24, 0x15	; 21
    3d12:	91 e4       	ldi	r25, 0x41	; 65
    3d14:	8f 93       	push	r24
    3d16:	8f ef       	ldi	r24, 0xFF	; 255
    3d18:	96 e4       	ldi	r25, 0x46	; 70
    3d1a:	89 2f       	mov	r24, r25
    3d1c:	8f 93       	push	r24
    3d1e:	8f ef       	ldi	r24, 0xFF	; 255
    3d20:	96 e4       	ldi	r25, 0x46	; 70
    3d22:	8f 93       	push	r24
    3d24:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3d28:	0f 90       	pop	r0
    3d2a:	0f 90       	pop	r0
    3d2c:	0f 90       	pop	r0
    3d2e:	0f 90       	pop	r0
    3d30:	0f 90       	pop	r0
    3d32:	0f 90       	pop	r0
    3d34:	81 e0       	ldi	r24, 0x01	; 1
    3d36:	8d 83       	std	Y+5, r24	; 0x05
    3d38:	08 c0       	rjmp	.+16     	; 0x3d4a <_Z19handleSerialBusMsgsv+0xe6c>
    3d3a:	8e 81       	ldd	r24, Y+6	; 0x06
    3d3c:	9f 81       	ldd	r25, Y+7	; 0x07
    3d3e:	fc 01       	movw	r30, r24
    3d40:	83 81       	ldd	r24, Z+3	; 0x03
    3d42:	8a 32       	cpi	r24, 0x2A	; 42
    3d44:	11 f4       	brne	.+4      	; 0x3d4a <_Z19handleSerialBusMsgsv+0xe6c>
    3d46:	0e 94 6a 41 	call	0x82d4	; 0x82d4 <ds3231_sync2nearestMinute>
    3d4a:	8d 81       	ldd	r24, Y+5	; 0x05
    3d4c:	88 23       	and	r24, r24
    3d4e:	01 f1       	breq	.+64     	; 0x3d90 <_Z19handleSerialBusMsgsv+0xeb2>
    3d50:	8f ef       	ldi	r24, 0xFF	; 255
    3d52:	96 e4       	ldi	r25, 0x46	; 70
    3d54:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3d58:	1b c0       	rjmp	.+54     	; 0x3d90 <_Z19handleSerialBusMsgsv+0xeb2>
    3d5a:	8e 81       	ldd	r24, Y+6	; 0x06
    3d5c:	9f 81       	ldd	r25, Y+7	; 0x07
    3d5e:	fc 01       	movw	r30, r24
    3d60:	83 81       	ldd	r24, Z+3	; 0x03
    3d62:	83 34       	cpi	r24, 0x43	; 67
    3d64:	b9 f4       	brne	.+46     	; 0x3d94 <_Z19handleSerialBusMsgsv+0xeb6>
    3d66:	8e 81       	ldd	r24, Y+6	; 0x06
    3d68:	9f 81       	ldd	r25, Y+7	; 0x07
    3d6a:	fc 01       	movw	r30, r24
    3d6c:	87 89       	ldd	r24, Z+23	; 0x17
    3d6e:	88 23       	and	r24, r24
    3d70:	89 f0       	breq	.+34     	; 0x3d94 <_Z19handleSerialBusMsgsv+0xeb6>
    3d72:	8e 81       	ldd	r24, Y+6	; 0x06
    3d74:	9f 81       	ldd	r25, Y+7	; 0x07
    3d76:	47 96       	adiw	r24, 0x17	; 23
    3d78:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    3d7c:	88 a7       	std	Y+40, r24	; 0x28
    3d7e:	99 a7       	std	Y+41, r25	; 0x29
    3d80:	09 c0       	rjmp	.+18     	; 0x3d94 <_Z19handleSerialBusMsgsv+0xeb6>
    3d82:	8e e5       	ldi	r24, 0x5E	; 94
    3d84:	91 e4       	ldi	r25, 0x41	; 65
    3d86:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    3d8a:	05 c0       	rjmp	.+10     	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3d8c:	00 00       	nop
    3d8e:	03 c0       	rjmp	.+6      	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3d90:	00 00       	nop
    3d92:	01 c0       	rjmp	.+2      	; 0x3d96 <_Z19handleSerialBusMsgsv+0xeb8>
    3d94:	00 00       	nop
    3d96:	8e 81       	ldd	r24, Y+6	; 0x06
    3d98:	9f 81       	ldd	r25, Y+7	; 0x07
    3d9a:	fc 01       	movw	r30, r24
    3d9c:	11 82       	std	Z+1, r1	; 0x01
    3d9e:	12 82       	std	Z+2, r1	; 0x02
    3da0:	0e 94 65 5d 	call	0xbaca	; 0xbaca <sb_send_NewPrompt>
    3da4:	a8 c8       	rjmp	.-3760   	; 0x2ef6 <_Z19handleSerialBusMsgsv+0x18>
    3da6:	00 00       	nop
    3da8:	ca 56       	subi	r28, 0x6A	; 106
    3daa:	df 4f       	sbci	r29, 0xFF	; 255
    3dac:	cd bf       	out	0x3d, r28	; 61
    3dae:	de bf       	out	0x3e, r29	; 62
    3db0:	df 91       	pop	r29
    3db2:	cf 91       	pop	r28
    3db4:	1f 91       	pop	r17
    3db6:	0f 91       	pop	r16
    3db8:	ff 90       	pop	r15
    3dba:	ef 90       	pop	r14
    3dbc:	08 95       	ret

00003dbe <_Z17handleLinkBusMsgsv>:
    3dbe:	ef 92       	push	r14
    3dc0:	ff 92       	push	r15
    3dc2:	0f 93       	push	r16
    3dc4:	1f 93       	push	r17
    3dc6:	cf 93       	push	r28
    3dc8:	df 93       	push	r29
    3dca:	cd b7       	in	r28, 0x3d	; 61
    3dcc:	de b7       	in	r29, 0x3e	; 62
    3dce:	e3 97       	sbiw	r28, 0x33	; 51
    3dd0:	cd bf       	out	0x3d, r28	; 61
    3dd2:	de bf       	out	0x3e, r29	; 62
    3dd4:	81 e0       	ldi	r24, 0x01	; 1
    3dd6:	89 83       	std	Y+1, r24	; 0x01
    3dd8:	0e 94 24 53 	call	0xa648	; 0xa648 <_Z18nextFullLBRxBufferv>
    3ddc:	8c 87       	std	Y+12, r24	; 0x0c
    3dde:	9d 87       	std	Y+13, r25	; 0x0d
    3de0:	21 e0       	ldi	r18, 0x01	; 1
    3de2:	8c 85       	ldd	r24, Y+12	; 0x0c
    3de4:	9d 85       	ldd	r25, Y+13	; 0x0d
    3de6:	89 2b       	or	r24, r25
    3de8:	09 f4       	brne	.+2      	; 0x3dec <_Z17handleLinkBusMsgsv+0x2e>
    3dea:	20 e0       	ldi	r18, 0x00	; 0
    3dec:	22 23       	and	r18, r18
    3dee:	09 f4       	brne	.+2      	; 0x3df2 <_Z17handleLinkBusMsgsv+0x34>
    3df0:	aa c6       	rjmp	.+3412   	; 0x4b46 <__DATA_REGION_LENGTH__+0xb46>
    3df2:	8c 85       	ldd	r24, Y+12	; 0x0c
    3df4:	9d 85       	ldd	r25, Y+13	; 0x0d
    3df6:	fc 01       	movw	r30, r24
    3df8:	81 81       	ldd	r24, Z+1	; 0x01
    3dfa:	92 81       	ldd	r25, Z+2	; 0x02
    3dfc:	8e 87       	std	Y+14, r24	; 0x0e
    3dfe:	9f 87       	std	Y+15, r25	; 0x0f
    3e00:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e02:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e04:	82 38       	cpi	r24, 0x82	; 130
    3e06:	fe e1       	ldi	r31, 0x1E	; 30
    3e08:	9f 07       	cpc	r25, r31
    3e0a:	09 f4       	brne	.+2      	; 0x3e0e <_Z17handleLinkBusMsgsv+0x50>
    3e0c:	92 c0       	rjmp	.+292    	; 0x3f32 <_Z17handleLinkBusMsgsv+0x174>
    3e0e:	83 38       	cpi	r24, 0x83	; 131
    3e10:	2e e1       	ldi	r18, 0x1E	; 30
    3e12:	92 07       	cpc	r25, r18
    3e14:	80 f5       	brcc	.+96     	; 0x3e76 <_Z17handleLinkBusMsgsv+0xb8>
    3e16:	81 36       	cpi	r24, 0x61	; 97
    3e18:	33 e0       	ldi	r19, 0x03	; 3
    3e1a:	93 07       	cpc	r25, r19
    3e1c:	09 f4       	brne	.+2      	; 0x3e20 <_Z17handleLinkBusMsgsv+0x62>
    3e1e:	fb c4       	rjmp	.+2550   	; 0x4816 <__DATA_REGION_LENGTH__+0x816>
    3e20:	82 36       	cpi	r24, 0x62	; 98
    3e22:	e3 e0       	ldi	r30, 0x03	; 3
    3e24:	9e 07       	cpc	r25, r30
    3e26:	78 f4       	brcc	.+30     	; 0x3e46 <_Z17handleLinkBusMsgsv+0x88>
    3e28:	85 31       	cpi	r24, 0x15	; 21
    3e2a:	f3 e0       	ldi	r31, 0x03	; 3
    3e2c:	9f 07       	cpc	r25, r31
    3e2e:	09 f4       	brne	.+2      	; 0x3e32 <_Z17handleLinkBusMsgsv+0x74>
    3e30:	3e c1       	rjmp	.+636    	; 0x40ae <__DATA_REGION_LENGTH__+0xae>
    3e32:	8e 31       	cpi	r24, 0x1E	; 30
    3e34:	23 e0       	ldi	r18, 0x03	; 3
    3e36:	92 07       	cpc	r25, r18
    3e38:	09 f4       	brne	.+2      	; 0x3e3c <_Z17handleLinkBusMsgsv+0x7e>
    3e3a:	62 c3       	rjmp	.+1732   	; 0x4500 <__DATA_REGION_LENGTH__+0x500>
    3e3c:	84 35       	cpi	r24, 0x54	; 84
    3e3e:	91 05       	cpc	r25, r1
    3e40:	09 f4       	brne	.+2      	; 0x3e44 <_Z17handleLinkBusMsgsv+0x86>
    3e42:	5e c4       	rjmp	.+2236   	; 0x4700 <__DATA_REGION_LENGTH__+0x700>
    3e44:	53 c6       	rjmp	.+3238   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3e46:	8f 3a       	cpi	r24, 0xAF	; 175
    3e48:	33 e0       	ldi	r19, 0x03	; 3
    3e4a:	93 07       	cpc	r25, r19
    3e4c:	09 f4       	brne	.+2      	; 0x3e50 <_Z17handleLinkBusMsgsv+0x92>
    3e4e:	4c c0       	rjmp	.+152    	; 0x3ee8 <_Z17handleLinkBusMsgsv+0x12a>
    3e50:	80 3b       	cpi	r24, 0xB0	; 176
    3e52:	e3 e0       	ldi	r30, 0x03	; 3
    3e54:	9e 07       	cpc	r25, r30
    3e56:	28 f4       	brcc	.+10     	; 0x3e62 <_Z17handleLinkBusMsgsv+0xa4>
    3e58:	84 38       	cpi	r24, 0x84	; 132
    3e5a:	93 40       	sbci	r25, 0x03	; 3
    3e5c:	09 f4       	brne	.+2      	; 0x3e60 <_Z17handleLinkBusMsgsv+0xa2>
    3e5e:	ec c1       	rjmp	.+984    	; 0x4238 <__DATA_REGION_LENGTH__+0x238>
    3e60:	45 c6       	rjmp	.+3210   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3e62:	86 3a       	cpi	r24, 0xA6	; 166
    3e64:	2c e1       	ldi	r18, 0x1C	; 28
    3e66:	92 07       	cpc	r25, r18
    3e68:	09 f4       	brne	.+2      	; 0x3e6c <_Z17handleLinkBusMsgsv+0xae>
    3e6a:	60 c5       	rjmp	.+2752   	; 0x492c <__DATA_REGION_LENGTH__+0x92c>
    3e6c:	88 31       	cpi	r24, 0x18	; 24
    3e6e:	9d 41       	sbci	r25, 0x1D	; 29
    3e70:	09 f4       	brne	.+2      	; 0x3e74 <_Z17handleLinkBusMsgsv+0xb6>
    3e72:	42 c6       	rjmp	.+3204   	; 0x4af8 <__DATA_REGION_LENGTH__+0xaf8>
    3e74:	3b c6       	rjmp	.+3190   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3e76:	8a 39       	cpi	r24, 0x9A	; 154
    3e78:	e3 e2       	ldi	r30, 0x23	; 35
    3e7a:	9e 07       	cpc	r25, r30
    3e7c:	09 f4       	brne	.+2      	; 0x3e80 <_Z17handleLinkBusMsgsv+0xc2>
    3e7e:	55 c0       	rjmp	.+170    	; 0x3f2a <_Z17handleLinkBusMsgsv+0x16c>
    3e80:	8b 39       	cpi	r24, 0x9B	; 155
    3e82:	f3 e2       	ldi	r31, 0x23	; 35
    3e84:	9f 07       	cpc	r25, r31
    3e86:	c0 f4       	brcc	.+48     	; 0x3eb8 <_Z17handleLinkBusMsgsv+0xfa>
    3e88:	8e 36       	cpi	r24, 0x6E	; 110
    3e8a:	21 e2       	ldi	r18, 0x21	; 33
    3e8c:	92 07       	cpc	r25, r18
    3e8e:	09 f4       	brne	.+2      	; 0x3e92 <_Z17handleLinkBusMsgsv+0xd4>
    3e90:	33 c6       	rjmp	.+3174   	; 0x4af8 <__DATA_REGION_LENGTH__+0xaf8>
    3e92:	8f 36       	cpi	r24, 0x6F	; 111
    3e94:	31 e2       	ldi	r19, 0x21	; 33
    3e96:	93 07       	cpc	r25, r19
    3e98:	28 f4       	brcc	.+10     	; 0x3ea4 <_Z17handleLinkBusMsgsv+0xe6>
    3e9a:	81 3d       	cpi	r24, 0xD1	; 209
    3e9c:	9e 41       	sbci	r25, 0x1E	; 30
    3e9e:	09 f4       	brne	.+2      	; 0x3ea2 <_Z17handleLinkBusMsgsv+0xe4>
    3ea0:	d1 c4       	rjmp	.+2466   	; 0x4844 <__DATA_REGION_LENGTH__+0x844>
    3ea2:	24 c6       	rjmp	.+3144   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3ea4:	8d 3a       	cpi	r24, 0xAD	; 173
    3ea6:	f2 e2       	ldi	r31, 0x22	; 34
    3ea8:	9f 07       	cpc	r25, r31
    3eaa:	09 f4       	brne	.+2      	; 0x3eae <_Z17handleLinkBusMsgsv+0xf0>
    3eac:	9d c0       	rjmp	.+314    	; 0x3fe8 <_Z17handleLinkBusMsgsv+0x22a>
    3eae:	81 3c       	cpi	r24, 0xC1	; 193
    3eb0:	92 42       	sbci	r25, 0x22	; 34
    3eb2:	09 f4       	brne	.+2      	; 0x3eb6 <_Z17handleLinkBusMsgsv+0xf8>
    3eb4:	f7 c0       	rjmp	.+494    	; 0x40a4 <__DATA_REGION_LENGTH__+0xa4>
    3eb6:	1a c6       	rjmp	.+3124   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3eb8:	80 3d       	cpi	r24, 0xD0	; 208
    3eba:	33 e2       	ldi	r19, 0x23	; 35
    3ebc:	93 07       	cpc	r25, r19
    3ebe:	09 f4       	brne	.+2      	; 0x3ec2 <_Z17handleLinkBusMsgsv+0x104>
    3ec0:	82 c3       	rjmp	.+1796   	; 0x45c6 <__DATA_REGION_LENGTH__+0x5c6>
    3ec2:	81 3d       	cpi	r24, 0xD1	; 209
    3ec4:	e3 e2       	ldi	r30, 0x23	; 35
    3ec6:	9e 07       	cpc	r25, r30
    3ec8:	28 f4       	brcc	.+10     	; 0x3ed4 <_Z17handleLinkBusMsgsv+0x116>
    3eca:	8f 3c       	cpi	r24, 0xCF	; 207
    3ecc:	93 42       	sbci	r25, 0x23	; 35
    3ece:	09 f4       	brne	.+2      	; 0x3ed2 <_Z17handleLinkBusMsgsv+0x114>
    3ed0:	f5 c5       	rjmp	.+3050   	; 0x4abc <__DATA_REGION_LENGTH__+0xabc>
    3ed2:	0c c6       	rjmp	.+3096   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3ed4:	87 3f       	cpi	r24, 0xF7	; 247
    3ed6:	23 e2       	ldi	r18, 0x23	; 35
    3ed8:	92 07       	cpc	r25, r18
    3eda:	09 f4       	brne	.+2      	; 0x3ede <_Z17handleLinkBusMsgsv+0x120>
    3edc:	20 c2       	rjmp	.+1088   	; 0x431e <__DATA_REGION_LENGTH__+0x31e>
    3ede:	8c 39       	cpi	r24, 0x9C	; 156
    3ee0:	94 42       	sbci	r25, 0x24	; 36
    3ee2:	09 f4       	brne	.+2      	; 0x3ee6 <_Z17handleLinkBusMsgsv+0x128>
    3ee4:	fb c5       	rjmp	.+3062   	; 0x4adc <__DATA_REGION_LENGTH__+0xadc>
    3ee6:	02 c6       	rjmp	.+3076   	; 0x4aec <__DATA_REGION_LENGTH__+0xaec>
    3ee8:	8c 85       	ldd	r24, Y+12	; 0x0c
    3eea:	9d 85       	ldd	r25, Y+13	; 0x0d
    3eec:	fc 01       	movw	r30, r24
    3eee:	83 81       	ldd	r24, Z+3	; 0x03
    3ef0:	88 23       	and	r24, r24
    3ef2:	09 f4       	brne	.+2      	; 0x3ef6 <_Z17handleLinkBusMsgsv+0x138>
    3ef4:	03 c6       	rjmp	.+3078   	; 0x4afc <__DATA_REGION_LENGTH__+0xafc>
    3ef6:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ef8:	9d 85       	ldd	r25, Y+13	; 0x0d
    3efa:	03 96       	adiw	r24, 0x03	; 3
    3efc:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    3f00:	21 e0       	ldi	r18, 0x01	; 1
    3f02:	89 2b       	or	r24, r25
    3f04:	09 f4       	brne	.+2      	; 0x3f08 <_Z17handleLinkBusMsgsv+0x14a>
    3f06:	20 e0       	ldi	r18, 0x00	; 0
    3f08:	28 8b       	std	Y+16, r18	; 0x10
    3f0a:	0e 94 90 29 	call	0x5320	; 0x5320 <_Z12suspendEventv>
    3f0e:	0e 94 55 54 	call	0xa8aa	; 0xa8aa <_Z15linkbus_disablev>
    3f12:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3f16:	98 89       	ldd	r25, Y+16	; 0x10
    3f18:	81 e0       	ldi	r24, 0x01	; 1
    3f1a:	89 27       	eor	r24, r25
    3f1c:	88 23       	and	r24, r24
    3f1e:	09 f4       	brne	.+2      	; 0x3f22 <_Z17handleLinkBusMsgsv+0x164>
    3f20:	ed c5       	rjmp	.+3034   	; 0x4afc <__DATA_REGION_LENGTH__+0xafc>
    3f22:	80 e0       	ldi	r24, 0x00	; 0
    3f24:	0e 94 93 37 	call	0x6f26	; 0x6f26 <_Z10wifi_powerb>
    3f28:	e9 c5       	rjmp	.+3026   	; 0x4afc <__DATA_REGION_LENGTH__+0xafc>
    3f2a:	82 e0       	ldi	r24, 0x02	; 2
    3f2c:	0e 94 a6 26 	call	0x4d4c	; 0x4d4c <_Z8wdt_init7WDReset>
    3f30:	ff cf       	rjmp	.-2      	; 0x3f30 <_Z17handleLinkBusMsgsv+0x172>
    3f32:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f34:	9d 85       	ldd	r25, Y+13	; 0x0d
    3f36:	fc 01       	movw	r30, r24
    3f38:	83 81       	ldd	r24, Z+3	; 0x03
    3f3a:	89 8b       	std	Y+17, r24	; 0x11
    3f3c:	81 e0       	ldi	r24, 0x01	; 1
    3f3e:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    3f42:	89 89       	ldd	r24, Y+17	; 0x11
    3f44:	8a 35       	cpi	r24, 0x5A	; 90
    3f46:	21 f4       	brne	.+8      	; 0x3f50 <_Z17handleLinkBusMsgsv+0x192>
    3f48:	88 e7       	ldi	r24, 0x78	; 120
    3f4a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3f4e:	d8 c5       	rjmp	.+2992   	; 0x4b00 <__DATA_REGION_LENGTH__+0xb00>
    3f50:	89 89       	ldd	r24, Y+17	; 0x11
    3f52:	80 33       	cpi	r24, 0x30	; 48
    3f54:	b1 f5       	brne	.+108    	; 0x3fc2 <_Z17handleLinkBusMsgsv+0x204>
    3f56:	80 91 7d 47 	lds	r24, 0x477D	; 0x80477d <g_waiting_for_next_event>
    3f5a:	88 23       	and	r24, r24
    3f5c:	39 f0       	breq	.+14     	; 0x3f6c <_Z17handleLinkBusMsgsv+0x1ae>
    3f5e:	45 ea       	ldi	r20, 0xA5	; 165
    3f60:	52 e4       	ldi	r21, 0x42	; 66
    3f62:	67 ea       	ldi	r22, 0xA7	; 167
    3f64:	72 e4       	ldi	r23, 0x42	; 66
    3f66:	83 e0       	ldi	r24, 0x03	; 3
    3f68:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    3f6c:	80 e0       	ldi	r24, 0x00	; 0
    3f6e:	90 e0       	ldi	r25, 0x00	; 0
    3f70:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    3f74:	dc 01       	movw	r26, r24
    3f76:	cb 01       	movw	r24, r22
    3f78:	2b 2f       	mov	r18, r27
    3f7a:	2f 93       	push	r18
    3f7c:	2a 2f       	mov	r18, r26
    3f7e:	2f 93       	push	r18
    3f80:	29 2f       	mov	r18, r25
    3f82:	2f 93       	push	r18
    3f84:	8f 93       	push	r24
    3f86:	86 e4       	ldi	r24, 0x46	; 70
    3f88:	90 e4       	ldi	r25, 0x40	; 64
    3f8a:	89 2f       	mov	r24, r25
    3f8c:	8f 93       	push	r24
    3f8e:	86 e4       	ldi	r24, 0x46	; 70
    3f90:	90 e4       	ldi	r25, 0x40	; 64
    3f92:	8f 93       	push	r24
    3f94:	8f ef       	ldi	r24, 0xFF	; 255
    3f96:	96 e4       	ldi	r25, 0x46	; 70
    3f98:	89 2f       	mov	r24, r25
    3f9a:	8f 93       	push	r24
    3f9c:	8f ef       	ldi	r24, 0xFF	; 255
    3f9e:	96 e4       	ldi	r25, 0x46	; 70
    3fa0:	8f 93       	push	r24
    3fa2:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    3fa6:	2d b7       	in	r18, 0x3d	; 61
    3fa8:	3e b7       	in	r19, 0x3e	; 62
    3faa:	28 5f       	subi	r18, 0xF8	; 248
    3fac:	3f 4f       	sbci	r19, 0xFF	; 255
    3fae:	cd bf       	out	0x3d, r28	; 61
    3fb0:	de bf       	out	0x3e, r29	; 62
    3fb2:	4f ef       	ldi	r20, 0xFF	; 255
    3fb4:	56 e4       	ldi	r21, 0x46	; 70
    3fb6:	6a e4       	ldi	r22, 0x4A	; 74
    3fb8:	70 e4       	ldi	r23, 0x40	; 64
    3fba:	83 e0       	ldi	r24, 0x03	; 3
    3fbc:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    3fc0:	9f c5       	rjmp	.+2878   	; 0x4b00 <__DATA_REGION_LENGTH__+0xb00>
    3fc2:	89 89       	ldd	r24, Y+17	; 0x11
    3fc4:	83 33       	cpi	r24, 0x33	; 51
    3fc6:	09 f0       	breq	.+2      	; 0x3fca <_Z17handleLinkBusMsgsv+0x20c>
    3fc8:	9b c5       	rjmp	.+2870   	; 0x4b00 <__DATA_REGION_LENGTH__+0xb00>
    3fca:	10 92 41 47 	sts	0x4741, r1	; 0x804741 <_ZL19g_wifi_enable_delay>
    3fce:	81 e0       	ldi	r24, 0x01	; 1
    3fd0:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3fd4:	10 92 7d 47 	sts	0x477D, r1	; 0x80477d <g_waiting_for_next_event>
    3fd8:	10 92 7c 47 	sts	0x477C, r1	; 0x80477c <g_check_for_next_event>
    3fdc:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    3fe0:	81 e0       	ldi	r24, 0x01	; 1
    3fe2:	80 93 42 47 	sts	0x4742, r24	; 0x804742 <_ZL20g_shutting_down_wifi>
    3fe6:	8c c5       	rjmp	.+2840   	; 0x4b00 <__DATA_REGION_LENGTH__+0xb00>
    3fe8:	8c 85       	ldd	r24, Y+12	; 0x0c
    3fea:	9d 85       	ldd	r25, Y+13	; 0x0d
    3fec:	fc 01       	movw	r30, r24
    3fee:	83 81       	ldd	r24, Z+3	; 0x03
    3ff0:	88 23       	and	r24, r24
    3ff2:	09 f4       	brne	.+2      	; 0x3ff6 <_Z17handleLinkBusMsgsv+0x238>
    3ff4:	87 c5       	rjmp	.+2830   	; 0x4b04 <__DATA_REGION_LENGTH__+0xb04>
    3ff6:	8c 85       	ldd	r24, Y+12	; 0x0c
    3ff8:	9d 85       	ldd	r25, Y+13	; 0x0d
    3ffa:	fc 01       	movw	r30, r24
    3ffc:	83 81       	ldd	r24, Z+3	; 0x03
    3ffe:	8d 34       	cpi	r24, 0x4D	; 77
    4000:	81 f4       	brne	.+32     	; 0x4022 <__DATA_REGION_LENGTH__+0x22>
    4002:	8c 85       	ldd	r24, Y+12	; 0x0c
    4004:	9d 85       	ldd	r25, Y+13	; 0x0d
    4006:	fc 01       	movw	r30, r24
    4008:	80 8d       	ldd	r24, Z+24	; 0x18
    400a:	88 23       	and	r24, r24
    400c:	51 f0       	breq	.+20     	; 0x4022 <__DATA_REGION_LENGTH__+0x22>
    400e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4010:	9d 85       	ldd	r25, Y+13	; 0x0d
    4012:	48 96       	adiw	r24, 0x18	; 24
    4014:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    4018:	80 93 a7 47 	sts	0x47A7, r24	; 0x8047a7 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    401c:	90 93 a8 47 	sts	0x47A8, r25	; 0x8047a8 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4020:	09 c0       	rjmp	.+18     	; 0x4034 <__DATA_REGION_LENGTH__+0x34>
    4022:	8c 85       	ldd	r24, Y+12	; 0x0c
    4024:	9d 85       	ldd	r25, Y+13	; 0x0d
    4026:	03 96       	adiw	r24, 0x03	; 3
    4028:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    402c:	80 93 a7 47 	sts	0x47A7, r24	; 0x8047a7 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    4030:	90 93 a8 47 	sts	0x47A8, r25	; 0x8047a8 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4034:	60 e0       	ldi	r22, 0x00	; 0
    4036:	70 e0       	ldi	r23, 0x00	; 0
    4038:	87 ea       	ldi	r24, 0xA7	; 167
    403a:	97 e4       	ldi	r25, 0x47	; 71
    403c:	0e 94 84 6a 	call	0xd508	; 0xd508 <_Z15txSetParametersPjPb>
    4040:	8a 8b       	std	Y+18, r24	; 0x12
    4042:	8a 89       	ldd	r24, Y+18	; 0x12
    4044:	88 23       	and	r24, r24
    4046:	21 f0       	breq	.+8      	; 0x4050 <__DATA_REGION_LENGTH__+0x50>
    4048:	8a 89       	ldd	r24, Y+18	; 0x12
    404a:	80 93 31 47 	sts	0x4731, r24	; 0x804731 <_ZL17g_last_error_code>
    404e:	05 c0       	rjmp	.+10     	; 0x405a <__DATA_REGION_LENGTH__+0x5a>
    4050:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4054:	8f 5f       	subi	r24, 0xFF	; 255
    4056:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    405a:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    405e:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4062:	29 2f       	mov	r18, r25
    4064:	2f 93       	push	r18
    4066:	8f 93       	push	r24
    4068:	8b ea       	ldi	r24, 0xAB	; 171
    406a:	92 e4       	ldi	r25, 0x42	; 66
    406c:	89 2f       	mov	r24, r25
    406e:	8f 93       	push	r24
    4070:	8b ea       	ldi	r24, 0xAB	; 171
    4072:	92 e4       	ldi	r25, 0x42	; 66
    4074:	8f 93       	push	r24
    4076:	8f ef       	ldi	r24, 0xFF	; 255
    4078:	96 e4       	ldi	r25, 0x46	; 70
    407a:	89 2f       	mov	r24, r25
    407c:	8f 93       	push	r24
    407e:	8f ef       	ldi	r24, 0xFF	; 255
    4080:	96 e4       	ldi	r25, 0x46	; 70
    4082:	8f 93       	push	r24
    4084:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    4088:	0f 90       	pop	r0
    408a:	0f 90       	pop	r0
    408c:	0f 90       	pop	r0
    408e:	0f 90       	pop	r0
    4090:	0f 90       	pop	r0
    4092:	0f 90       	pop	r0
    4094:	4f ef       	ldi	r20, 0xFF	; 255
    4096:	56 e4       	ldi	r21, 0x46	; 70
    4098:	60 eb       	ldi	r22, 0xB0	; 176
    409a:	72 e4       	ldi	r23, 0x42	; 66
    409c:	83 e0       	ldi	r24, 0x03	; 3
    409e:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    40a2:	30 c5       	rjmp	.+2656   	; 0x4b04 <__DATA_REGION_LENGTH__+0xb04>
    40a4:	81 e9       	ldi	r24, 0x91	; 145
    40a6:	97 e4       	ldi	r25, 0x47	; 71
    40a8:	0e 94 46 44 	call	0x888c	; 0x888c <_ZN13EepromManager13saveAllEEPROMEv>
    40ac:	3e c5       	rjmp	.+2684   	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    40ae:	8c 85       	ldd	r24, Y+12	; 0x0c
    40b0:	9d 85       	ldd	r25, Y+13	; 0x0d
    40b2:	fc 01       	movw	r30, r24
    40b4:	83 81       	ldd	r24, Z+3	; 0x03
    40b6:	8b 8b       	std	Y+19, r24	; 0x13
    40b8:	8b 89       	ldd	r24, Y+19	; 0x13
    40ba:	81 33       	cpi	r24, 0x31	; 49
    40bc:	21 f0       	breq	.+8      	; 0x40c6 <__DATA_REGION_LENGTH__+0xc6>
    40be:	8b 89       	ldd	r24, Y+19	; 0x13
    40c0:	82 33       	cpi	r24, 0x32	; 50
    40c2:	09 f0       	breq	.+2      	; 0x40c6 <__DATA_REGION_LENGTH__+0xc6>
    40c4:	ab c0       	rjmp	.+342    	; 0x421c <__DATA_REGION_LENGTH__+0x21c>
    40c6:	80 91 37 47 	lds	r24, 0x4737	; 0x804737 <g_antenna_connect_state>
    40ca:	82 30       	cpi	r24, 0x02	; 2
    40cc:	41 f0       	breq	.+16     	; 0x40de <__DATA_REGION_LENGTH__+0xde>
    40ce:	90 91 35 40 	lds	r25, 0x4035	; 0x804035 <g_tx_power_is_zero>
    40d2:	81 e0       	ldi	r24, 0x01	; 1
    40d4:	89 27       	eor	r24, r25
    40d6:	88 23       	and	r24, r24
    40d8:	11 f0       	breq	.+4      	; 0x40de <__DATA_REGION_LENGTH__+0xde>
    40da:	81 e0       	ldi	r24, 0x01	; 1
    40dc:	01 c0       	rjmp	.+2      	; 0x40e0 <__DATA_REGION_LENGTH__+0xe0>
    40de:	80 e0       	ldi	r24, 0x00	; 0
    40e0:	88 23       	and	r24, r24
    40e2:	21 f0       	breq	.+8      	; 0x40ec <__DATA_REGION_LENGTH__+0xec>
    40e4:	87 ef       	ldi	r24, 0xF7	; 247
    40e6:	80 93 31 47 	sts	0x4731, r24	; 0x804731 <_ZL17g_last_error_code>
    40ea:	a4 c0       	rjmp	.+328    	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    40ec:	8b 89       	ldd	r24, Y+19	; 0x13
    40ee:	81 33       	cpi	r24, 0x31	; 49
    40f0:	09 f0       	breq	.+2      	; 0x40f4 <__DATA_REGION_LENGTH__+0xf4>
    40f2:	64 c0       	rjmp	.+200    	; 0x41bc <__DATA_REGION_LENGTH__+0x1bc>
    40f4:	80 91 37 47 	lds	r24, 0x4737	; 0x804737 <g_antenna_connect_state>
    40f8:	82 30       	cpi	r24, 0x02	; 2
    40fa:	21 f0       	breq	.+8      	; 0x4104 <__DATA_REGION_LENGTH__+0x104>
    40fc:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <g_tx_power_is_zero>
    4100:	88 23       	and	r24, r24
    4102:	11 f0       	breq	.+4      	; 0x4108 <__DATA_REGION_LENGTH__+0x108>
    4104:	81 e0       	ldi	r24, 0x01	; 1
    4106:	01 c0       	rjmp	.+2      	; 0x410a <__DATA_REGION_LENGTH__+0x10a>
    4108:	80 e0       	ldi	r24, 0x00	; 0
    410a:	88 23       	and	r24, r24
    410c:	09 f4       	brne	.+2      	; 0x4110 <__DATA_REGION_LENGTH__+0x110>
    410e:	52 c0       	rjmp	.+164    	; 0x41b4 <__DATA_REGION_LENGTH__+0x1b4>
    4110:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>
    4114:	81 e0       	ldi	r24, 0x01	; 1
    4116:	8c a7       	std	Y+44, r24	; 0x2c
    4118:	ce 01       	movw	r24, r28
    411a:	8c 96       	adiw	r24, 0x2c	; 44
    411c:	40 e0       	ldi	r20, 0x00	; 0
    411e:	50 e0       	ldi	r21, 0x00	; 0
    4120:	bc 01       	movw	r22, r24
    4122:	84 e4       	ldi	r24, 0x44	; 68
    4124:	97 e4       	ldi	r25, 0x47	; 71
    4126:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    412a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    412e:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    4132:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4136:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    413a:	81 e0       	ldi	r24, 0x01	; 1
    413c:	90 e0       	ldi	r25, 0x00	; 0
    413e:	a0 e0       	ldi	r26, 0x00	; 0
    4140:	b0 e0       	ldi	r27, 0x00	; 0
    4142:	80 93 72 47 	sts	0x4772, r24	; 0x804772 <g_event_start_epoch>
    4146:	90 93 73 47 	sts	0x4773, r25	; 0x804773 <g_event_start_epoch+0x1>
    414a:	a0 93 74 47 	sts	0x4774, r26	; 0x804774 <g_event_start_epoch+0x2>
    414e:	b0 93 75 47 	sts	0x4775, r27	; 0x804775 <g_event_start_epoch+0x3>
    4152:	8f ef       	ldi	r24, 0xFF	; 255
    4154:	9f ef       	ldi	r25, 0xFF	; 255
    4156:	dc 01       	movw	r26, r24
    4158:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    415c:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    4160:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    4164:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
    4168:	8f e0       	ldi	r24, 0x0F	; 15
    416a:	97 e2       	ldi	r25, 0x27	; 39
    416c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4170:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4174:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4178:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    417c:	8f e0       	ldi	r24, 0x0F	; 15
    417e:	97 e2       	ldi	r25, 0x27	; 39
    4180:	a0 e0       	ldi	r26, 0x00	; 0
    4182:	b0 e0       	ldi	r27, 0x00	; 0
    4184:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    4188:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    418c:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    4190:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    4194:	8f ef       	ldi	r24, 0xFF	; 255
    4196:	9f ef       	ldi	r25, 0xFF	; 255
    4198:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    419c:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    41a0:	81 e0       	ldi	r24, 0x01	; 1
    41a2:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <g_event_commenced>
    41a6:	81 e0       	ldi	r24, 0x01	; 1
    41a8:	80 93 7a 47 	sts	0x477A, r24	; 0x80477a <g_event_enabled>
    41ac:	8d ef       	ldi	r24, 0xFD	; 253
    41ae:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    41b2:	40 c0       	rjmp	.+128    	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    41b4:	87 ef       	ldi	r24, 0xF7	; 247
    41b6:	80 93 31 47 	sts	0x4731, r24	; 0x804731 <_ZL17g_last_error_code>
    41ba:	3c c0       	rjmp	.+120    	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    41bc:	8b 89       	ldd	r24, Y+19	; 0x13
    41be:	82 33       	cpi	r24, 0x32	; 50
    41c0:	c9 f5       	brne	.+114    	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    41c2:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    41c6:	8c 30       	cpi	r24, 0x0C	; 12
    41c8:	20 f4       	brcc	.+8      	; 0x41d2 <__DATA_REGION_LENGTH__+0x1d2>
    41ca:	8d ec       	ldi	r24, 0xCD	; 205
    41cc:	80 93 31 47 	sts	0x4731, r24	; 0x804731 <_ZL17g_last_error_code>
    41d0:	31 c0       	rjmp	.+98     	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    41d2:	1d a6       	std	Y+45, r1	; 0x2d
    41d4:	ce 01       	movw	r24, r28
    41d6:	8d 96       	adiw	r24, 0x2d	; 45
    41d8:	0e 94 01 27 	call	0x4e02	; 0x4e02 <_Z11launchEventP2SC>
    41dc:	80 93 aa 47 	sts	0x47AA, r24	; 0x8047aa <_ZZ17handleLinkBusMsgsvE2ec>
    41e0:	80 91 7e 47 	lds	r24, 0x477E	; 0x80477e <_ZL13g_go_to_sleep>
    41e4:	88 23       	and	r24, r24
    41e6:	31 f0       	breq	.+12     	; 0x41f4 <__DATA_REGION_LENGTH__+0x1f4>
    41e8:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZL11g_sleepType>
    41ec:	88 23       	and	r24, r24
    41ee:	11 f0       	breq	.+4      	; 0x41f4 <__DATA_REGION_LENGTH__+0x1f4>
    41f0:	81 e0       	ldi	r24, 0x01	; 1
    41f2:	01 c0       	rjmp	.+2      	; 0x41f6 <__DATA_REGION_LENGTH__+0x1f6>
    41f4:	80 e0       	ldi	r24, 0x00	; 0
    41f6:	88 23       	and	r24, r24
    41f8:	29 f0       	breq	.+10     	; 0x4204 <__DATA_REGION_LENGTH__+0x204>
    41fa:	83 e0       	ldi	r24, 0x03	; 3
    41fc:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZL11g_sleepType>
    4200:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <_ZL13g_go_to_sleep>
    4204:	8c e3       	ldi	r24, 0x3C	; 60
    4206:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    420a:	80 91 aa 47 	lds	r24, 0x47AA	; 0x8047aa <_ZZ17handleLinkBusMsgsvE2ec>
    420e:	88 23       	and	r24, r24
    4210:	89 f4       	brne	.+34     	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    4212:	81 e9       	ldi	r24, 0x91	; 145
    4214:	97 e4       	ldi	r25, 0x47	; 71
    4216:	0e 94 46 44 	call	0x888c	; 0x888c <_ZN13EepromManager13saveAllEEPROMEv>
    421a:	0c c0       	rjmp	.+24     	; 0x4234 <__DATA_REGION_LENGTH__+0x234>
    421c:	8b 89       	ldd	r24, Y+19	; 0x13
    421e:	80 33       	cpi	r24, 0x30	; 48
    4220:	09 f0       	breq	.+2      	; 0x4224 <__DATA_REGION_LENGTH__+0x224>
    4222:	72 c4       	rjmp	.+2276   	; 0x4b08 <__DATA_REGION_LENGTH__+0xb08>
    4224:	0e 94 90 29 	call	0x5320	; 0x5320 <_Z12suspendEventv>
    4228:	10 92 a9 47 	sts	0x47A9, r1	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    422c:	8c ee       	ldi	r24, 0xEC	; 236
    422e:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    4232:	6a c4       	rjmp	.+2260   	; 0x4b08 <__DATA_REGION_LENGTH__+0xb08>
    4234:	00 00       	nop
    4236:	68 c4       	rjmp	.+2256   	; 0x4b08 <__DATA_REGION_LENGTH__+0xb08>
    4238:	1a 82       	std	Y+2, r1	; 0x02
    423a:	1b 82       	std	Y+3, r1	; 0x03
    423c:	1c 82       	std	Y+4, r1	; 0x04
    423e:	1d 82       	std	Y+5, r1	; 0x05
    4240:	8c 85       	ldd	r24, Y+12	; 0x0c
    4242:	9d 85       	ldd	r25, Y+13	; 0x0d
    4244:	fc 01       	movw	r30, r24
    4246:	83 81       	ldd	r24, Z+3	; 0x03
    4248:	83 35       	cpi	r24, 0x53	; 83
    424a:	b1 f5       	brne	.+108    	; 0x42b8 <__DATA_REGION_LENGTH__+0x2b8>
    424c:	8c 85       	ldd	r24, Y+12	; 0x0c
    424e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4250:	fc 01       	movw	r30, r24
    4252:	80 8d       	ldd	r24, Z+24	; 0x18
    4254:	88 23       	and	r24, r24
    4256:	59 f0       	breq	.+22     	; 0x426e <__DATA_REGION_LENGTH__+0x26e>
    4258:	8c 85       	ldd	r24, Y+12	; 0x0c
    425a:	9d 85       	ldd	r25, Y+13	; 0x0d
    425c:	48 96       	adiw	r24, 0x18	; 24
    425e:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    4262:	dc 01       	movw	r26, r24
    4264:	cb 01       	movw	r24, r22
    4266:	8a 83       	std	Y+2, r24	; 0x02
    4268:	9b 83       	std	Y+3, r25	; 0x03
    426a:	ac 83       	std	Y+4, r26	; 0x04
    426c:	bd 83       	std	Y+5, r27	; 0x05
    426e:	8a 81       	ldd	r24, Y+2	; 0x02
    4270:	9b 81       	ldd	r25, Y+3	; 0x03
    4272:	ac 81       	ldd	r26, Y+4	; 0x04
    4274:	bd 81       	ldd	r27, Y+5	; 0x05
    4276:	89 2b       	or	r24, r25
    4278:	8a 2b       	or	r24, r26
    427a:	8b 2b       	or	r24, r27
    427c:	09 f4       	brne	.+2      	; 0x4280 <__DATA_REGION_LENGTH__+0x280>
    427e:	46 c4       	rjmp	.+2188   	; 0x4b0c <__DATA_REGION_LENGTH__+0xb0c>
    4280:	8a 81       	ldd	r24, Y+2	; 0x02
    4282:	9b 81       	ldd	r25, Y+3	; 0x03
    4284:	ac 81       	ldd	r26, Y+4	; 0x04
    4286:	bd 81       	ldd	r27, Y+5	; 0x05
    4288:	80 93 72 47 	sts	0x4772, r24	; 0x804772 <g_event_start_epoch>
    428c:	90 93 73 47 	sts	0x4773, r25	; 0x804773 <g_event_start_epoch+0x1>
    4290:	a0 93 74 47 	sts	0x4774, r26	; 0x804774 <g_event_start_epoch+0x2>
    4294:	b0 93 75 47 	sts	0x4775, r27	; 0x804775 <g_event_start_epoch+0x3>
    4298:	80 e0       	ldi	r24, 0x00	; 0
    429a:	90 e0       	ldi	r25, 0x00	; 0
    429c:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    42a0:	dc 01       	movw	r26, r24
    42a2:	cb 01       	movw	r24, r22
    42a4:	bc 01       	movw	r22, r24
    42a6:	cd 01       	movw	r24, r26
    42a8:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    42ac:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    42b0:	8f 5f       	subi	r24, 0xFF	; 255
    42b2:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    42b6:	2a c4       	rjmp	.+2132   	; 0x4b0c <__DATA_REGION_LENGTH__+0xb0c>
    42b8:	8c 85       	ldd	r24, Y+12	; 0x0c
    42ba:	9d 85       	ldd	r25, Y+13	; 0x0d
    42bc:	fc 01       	movw	r30, r24
    42be:	83 81       	ldd	r24, Z+3	; 0x03
    42c0:	86 34       	cpi	r24, 0x46	; 70
    42c2:	09 f0       	breq	.+2      	; 0x42c6 <__DATA_REGION_LENGTH__+0x2c6>
    42c4:	23 c4       	rjmp	.+2118   	; 0x4b0c <__DATA_REGION_LENGTH__+0xb0c>
    42c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    42c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    42ca:	fc 01       	movw	r30, r24
    42cc:	80 8d       	ldd	r24, Z+24	; 0x18
    42ce:	88 23       	and	r24, r24
    42d0:	59 f0       	breq	.+22     	; 0x42e8 <__DATA_REGION_LENGTH__+0x2e8>
    42d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    42d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    42d6:	48 96       	adiw	r24, 0x18	; 24
    42d8:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    42dc:	dc 01       	movw	r26, r24
    42de:	cb 01       	movw	r24, r22
    42e0:	8a 83       	std	Y+2, r24	; 0x02
    42e2:	9b 83       	std	Y+3, r25	; 0x03
    42e4:	ac 83       	std	Y+4, r26	; 0x04
    42e6:	bd 83       	std	Y+5, r27	; 0x05
    42e8:	8a 81       	ldd	r24, Y+2	; 0x02
    42ea:	9b 81       	ldd	r25, Y+3	; 0x03
    42ec:	ac 81       	ldd	r26, Y+4	; 0x04
    42ee:	bd 81       	ldd	r27, Y+5	; 0x05
    42f0:	89 2b       	or	r24, r25
    42f2:	8a 2b       	or	r24, r26
    42f4:	8b 2b       	or	r24, r27
    42f6:	09 f4       	brne	.+2      	; 0x42fa <__DATA_REGION_LENGTH__+0x2fa>
    42f8:	09 c4       	rjmp	.+2066   	; 0x4b0c <__DATA_REGION_LENGTH__+0xb0c>
    42fa:	8a 81       	ldd	r24, Y+2	; 0x02
    42fc:	9b 81       	ldd	r25, Y+3	; 0x03
    42fe:	ac 81       	ldd	r26, Y+4	; 0x04
    4300:	bd 81       	ldd	r27, Y+5	; 0x05
    4302:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    4306:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    430a:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    430e:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
    4312:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4316:	8f 5f       	subi	r24, 0xFF	; 255
    4318:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    431c:	f7 c3       	rjmp	.+2030   	; 0x4b0c <__DATA_REGION_LENGTH__+0xb0c>
    431e:	81 e0       	ldi	r24, 0x01	; 1
    4320:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4324:	8c 85       	ldd	r24, Y+12	; 0x0c
    4326:	9d 85       	ldd	r25, Y+13	; 0x0d
    4328:	fc 01       	movw	r30, r24
    432a:	80 81       	ld	r24, Z
    432c:	81 30       	cpi	r24, 0x01	; 1
    432e:	09 f0       	breq	.+2      	; 0x4332 <__DATA_REGION_LENGTH__+0x332>
    4330:	4b c0       	rjmp	.+150    	; 0x43c8 <__DATA_REGION_LENGTH__+0x3c8>
    4332:	8c 85       	ldd	r24, Y+12	; 0x0c
    4334:	9d 85       	ldd	r25, Y+13	; 0x0d
    4336:	fc 01       	movw	r30, r24
    4338:	83 81       	ldd	r24, Z+3	; 0x03
    433a:	88 23       	and	r24, r24
    433c:	d1 f0       	breq	.+52     	; 0x4372 <__DATA_REGION_LENGTH__+0x372>
    433e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4340:	9d 85       	ldd	r25, Y+13	; 0x0d
    4342:	03 96       	adiw	r24, 0x03	; 3
    4344:	44 e1       	ldi	r20, 0x14	; 20
    4346:	50 e0       	ldi	r21, 0x00	; 0
    4348:	bc 01       	movw	r22, r24
    434a:	8f ef       	ldi	r24, 0xFF	; 255
    434c:	96 e4       	ldi	r25, 0x46	; 70
    434e:	0e 94 b1 76 	call	0xed62	; 0xed62 <strncpy>
    4352:	60 e0       	ldi	r22, 0x00	; 0
    4354:	8f ef       	ldi	r24, 0xFF	; 255
    4356:	96 e4       	ldi	r25, 0x46	; 70
    4358:	0e 94 88 3f 	call	0x7f10	; 0x7f10 <ds3231_set_date_time>
    435c:	80 e0       	ldi	r24, 0x00	; 0
    435e:	90 e0       	ldi	r25, 0x00	; 0
    4360:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    4364:	dc 01       	movw	r26, r24
    4366:	cb 01       	movw	r24, r22
    4368:	bc 01       	movw	r22, r24
    436a:	cd 01       	movw	r24, r26
    436c:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    4370:	cf c3       	rjmp	.+1950   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    4372:	80 e0       	ldi	r24, 0x00	; 0
    4374:	90 e0       	ldi	r25, 0x00	; 0
    4376:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    437a:	dc 01       	movw	r26, r24
    437c:	cb 01       	movw	r24, r22
    437e:	2b 2f       	mov	r18, r27
    4380:	2f 93       	push	r18
    4382:	2a 2f       	mov	r18, r26
    4384:	2f 93       	push	r18
    4386:	29 2f       	mov	r18, r25
    4388:	2f 93       	push	r18
    438a:	8f 93       	push	r24
    438c:	86 e4       	ldi	r24, 0x46	; 70
    438e:	90 e4       	ldi	r25, 0x40	; 64
    4390:	89 2f       	mov	r24, r25
    4392:	8f 93       	push	r24
    4394:	86 e4       	ldi	r24, 0x46	; 70
    4396:	90 e4       	ldi	r25, 0x40	; 64
    4398:	8f 93       	push	r24
    439a:	8f ef       	ldi	r24, 0xFF	; 255
    439c:	96 e4       	ldi	r25, 0x46	; 70
    439e:	89 2f       	mov	r24, r25
    43a0:	8f 93       	push	r24
    43a2:	8f ef       	ldi	r24, 0xFF	; 255
    43a4:	96 e4       	ldi	r25, 0x46	; 70
    43a6:	8f 93       	push	r24
    43a8:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    43ac:	2d b7       	in	r18, 0x3d	; 61
    43ae:	3e b7       	in	r19, 0x3e	; 62
    43b0:	28 5f       	subi	r18, 0xF8	; 248
    43b2:	3f 4f       	sbci	r19, 0xFF	; 255
    43b4:	cd bf       	out	0x3d, r28	; 61
    43b6:	de bf       	out	0x3e, r29	; 62
    43b8:	4f ef       	ldi	r20, 0xFF	; 255
    43ba:	56 e4       	ldi	r21, 0x46	; 70
    43bc:	6a e4       	ldi	r22, 0x4A	; 74
    43be:	70 e4       	ldi	r23, 0x40	; 64
    43c0:	83 e0       	ldi	r24, 0x03	; 3
    43c2:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    43c6:	a4 c3       	rjmp	.+1864   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    43c8:	8c 85       	ldd	r24, Y+12	; 0x0c
    43ca:	9d 85       	ldd	r25, Y+13	; 0x0d
    43cc:	fc 01       	movw	r30, r24
    43ce:	80 81       	ld	r24, Z
    43d0:	82 30       	cpi	r24, 0x02	; 2
    43d2:	09 f0       	breq	.+2      	; 0x43d6 <__DATA_REGION_LENGTH__+0x3d6>
    43d4:	9d c3       	rjmp	.+1850   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    43d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    43d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    43da:	fc 01       	movw	r30, r24
    43dc:	83 81       	ldd	r24, Z+3	; 0x03
    43de:	88 35       	cpi	r24, 0x58	; 88
    43e0:	c9 f5       	brne	.+114    	; 0x4454 <__DATA_REGION_LENGTH__+0x454>
    43e2:	1c 8a       	std	Y+20, r1	; 0x14
    43e4:	8c 85       	ldd	r24, Y+12	; 0x0c
    43e6:	9d 85       	ldd	r25, Y+13	; 0x0d
    43e8:	fc 01       	movw	r30, r24
    43ea:	80 8d       	ldd	r24, Z+24	; 0x18
    43ec:	88 23       	and	r24, r24
    43ee:	51 f0       	breq	.+20     	; 0x4404 <__DATA_REGION_LENGTH__+0x404>
    43f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    43f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    43f4:	48 96       	adiw	r24, 0x18	; 24
    43f6:	0e 94 37 76 	call	0xec6e	; 0xec6e <atoi>
    43fa:	8c 8b       	std	Y+20, r24	; 0x14
    43fc:	8c 89       	ldd	r24, Y+20	; 0x14
    43fe:	0e 94 e0 40 	call	0x81c0	; 0x81c0 <ds3231_set_aging>
    4402:	86 c3       	rjmp	.+1804   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    4404:	0e 94 0f 41 	call	0x821e	; 0x821e <ds3231_get_aging>
    4408:	8c 8b       	std	Y+20, r24	; 0x14
    440a:	8c 89       	ldd	r24, Y+20	; 0x14
    440c:	08 2e       	mov	r0, r24
    440e:	00 0c       	add	r0, r0
    4410:	99 0b       	sbc	r25, r25
    4412:	29 2f       	mov	r18, r25
    4414:	2f 93       	push	r18
    4416:	8f 93       	push	r24
    4418:	84 eb       	ldi	r24, 0xB4	; 180
    441a:	92 e4       	ldi	r25, 0x42	; 66
    441c:	89 2f       	mov	r24, r25
    441e:	8f 93       	push	r24
    4420:	84 eb       	ldi	r24, 0xB4	; 180
    4422:	92 e4       	ldi	r25, 0x42	; 66
    4424:	8f 93       	push	r24
    4426:	8f ef       	ldi	r24, 0xFF	; 255
    4428:	96 e4       	ldi	r25, 0x46	; 70
    442a:	89 2f       	mov	r24, r25
    442c:	8f 93       	push	r24
    442e:	8f ef       	ldi	r24, 0xFF	; 255
    4430:	96 e4       	ldi	r25, 0x46	; 70
    4432:	8f 93       	push	r24
    4434:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    4438:	0f 90       	pop	r0
    443a:	0f 90       	pop	r0
    443c:	0f 90       	pop	r0
    443e:	0f 90       	pop	r0
    4440:	0f 90       	pop	r0
    4442:	0f 90       	pop	r0
    4444:	4f ef       	ldi	r20, 0xFF	; 255
    4446:	56 e4       	ldi	r21, 0x46	; 70
    4448:	6a e4       	ldi	r22, 0x4A	; 74
    444a:	70 e4       	ldi	r23, 0x40	; 64
    444c:	83 e0       	ldi	r24, 0x03	; 3
    444e:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    4452:	5e c3       	rjmp	.+1724   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    4454:	80 e0       	ldi	r24, 0x00	; 0
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    445c:	dc 01       	movw	r26, r24
    445e:	cb 01       	movw	r24, r22
    4460:	8d 8b       	std	Y+21, r24	; 0x15
    4462:	9e 8b       	std	Y+22, r25	; 0x16
    4464:	af 8b       	std	Y+23, r26	; 0x17
    4466:	b8 8f       	std	Y+24, r27	; 0x18
    4468:	8d 89       	ldd	r24, Y+21	; 0x15
    446a:	9e 89       	ldd	r25, Y+22	; 0x16
    446c:	af 89       	ldd	r26, Y+23	; 0x17
    446e:	b8 8d       	ldd	r27, Y+24	; 0x18
    4470:	bc 01       	movw	r22, r24
    4472:	cd 01       	movw	r24, r26
    4474:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    4478:	80 91 ab 47 	lds	r24, 0x47AB	; 0x8047ab <_ZZ17handleLinkBusMsgsvE8lastTime>
    447c:	90 91 ac 47 	lds	r25, 0x47AC	; 0x8047ac <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    4480:	a0 91 ad 47 	lds	r26, 0x47AD	; 0x8047ad <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    4484:	b0 91 ae 47 	lds	r27, 0x47AE	; 0x8047ae <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    4488:	2d 89       	ldd	r18, Y+21	; 0x15
    448a:	3e 89       	ldd	r19, Y+22	; 0x16
    448c:	4f 89       	ldd	r20, Y+23	; 0x17
    448e:	58 8d       	ldd	r21, Y+24	; 0x18
    4490:	28 17       	cp	r18, r24
    4492:	39 07       	cpc	r19, r25
    4494:	4a 07       	cpc	r20, r26
    4496:	5b 07       	cpc	r21, r27
    4498:	09 f4       	brne	.+2      	; 0x449c <__DATA_REGION_LENGTH__+0x49c>
    449a:	3a c3       	rjmp	.+1652   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    449c:	88 8d       	ldd	r24, Y+24	; 0x18
    449e:	8f 93       	push	r24
    44a0:	8f 89       	ldd	r24, Y+23	; 0x17
    44a2:	8f 93       	push	r24
    44a4:	8e 89       	ldd	r24, Y+22	; 0x16
    44a6:	8f 93       	push	r24
    44a8:	8d 89       	ldd	r24, Y+21	; 0x15
    44aa:	8f 93       	push	r24
    44ac:	86 e4       	ldi	r24, 0x46	; 70
    44ae:	90 e4       	ldi	r25, 0x40	; 64
    44b0:	89 2f       	mov	r24, r25
    44b2:	8f 93       	push	r24
    44b4:	86 e4       	ldi	r24, 0x46	; 70
    44b6:	90 e4       	ldi	r25, 0x40	; 64
    44b8:	8f 93       	push	r24
    44ba:	8f ef       	ldi	r24, 0xFF	; 255
    44bc:	96 e4       	ldi	r25, 0x46	; 70
    44be:	89 2f       	mov	r24, r25
    44c0:	8f 93       	push	r24
    44c2:	8f ef       	ldi	r24, 0xFF	; 255
    44c4:	96 e4       	ldi	r25, 0x46	; 70
    44c6:	8f 93       	push	r24
    44c8:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    44cc:	2d b7       	in	r18, 0x3d	; 61
    44ce:	3e b7       	in	r19, 0x3e	; 62
    44d0:	28 5f       	subi	r18, 0xF8	; 248
    44d2:	3f 4f       	sbci	r19, 0xFF	; 255
    44d4:	cd bf       	out	0x3d, r28	; 61
    44d6:	de bf       	out	0x3e, r29	; 62
    44d8:	4f ef       	ldi	r20, 0xFF	; 255
    44da:	56 e4       	ldi	r21, 0x46	; 70
    44dc:	6a e4       	ldi	r22, 0x4A	; 74
    44de:	70 e4       	ldi	r23, 0x40	; 64
    44e0:	83 e0       	ldi	r24, 0x03	; 3
    44e2:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    44e6:	8d 89       	ldd	r24, Y+21	; 0x15
    44e8:	9e 89       	ldd	r25, Y+22	; 0x16
    44ea:	af 89       	ldd	r26, Y+23	; 0x17
    44ec:	b8 8d       	ldd	r27, Y+24	; 0x18
    44ee:	80 93 ab 47 	sts	0x47AB, r24	; 0x8047ab <_ZZ17handleLinkBusMsgsvE8lastTime>
    44f2:	90 93 ac 47 	sts	0x47AC, r25	; 0x8047ac <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    44f6:	a0 93 ad 47 	sts	0x47AD, r26	; 0x8047ad <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    44fa:	b0 93 ae 47 	sts	0x47AE, r27	; 0x8047ae <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    44fe:	08 c3       	rjmp	.+1552   	; 0x4b10 <__DATA_REGION_LENGTH__+0xb10>
    4500:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4504:	8f 5f       	subi	r24, 0xFF	; 255
    4506:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    450a:	8c 85       	ldd	r24, Y+12	; 0x0c
    450c:	9d 85       	ldd	r25, Y+13	; 0x0d
    450e:	fc 01       	movw	r30, r24
    4510:	83 81       	ldd	r24, Z+3	; 0x03
    4512:	88 23       	and	r24, r24
    4514:	81 f1       	breq	.+96     	; 0x4576 <__DATA_REGION_LENGTH__+0x576>
    4516:	8c 85       	ldd	r24, Y+12	; 0x0c
    4518:	9d 85       	ldd	r25, Y+13	; 0x0d
    451a:	03 96       	adiw	r24, 0x03	; 3
    451c:	44 e1       	ldi	r20, 0x14	; 20
    451e:	50 e0       	ldi	r21, 0x00	; 0
    4520:	bc 01       	movw	r22, r24
    4522:	89 e5       	ldi	r24, 0x59	; 89
    4524:	97 e4       	ldi	r25, 0x47	; 71
    4526:	0e 94 b1 76 	call	0xed62	; 0xed62 <strncpy>
    452a:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    452e:	88 23       	and	r24, r24
    4530:	09 f4       	brne	.+2      	; 0x4534 <__DATA_REGION_LENGTH__+0x534>
    4532:	f0 c2       	rjmp	.+1504   	; 0x4b14 <__DATA_REGION_LENGTH__+0xb14>
    4534:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4538:	88 2f       	mov	r24, r24
    453a:	90 e0       	ldi	r25, 0x00	; 0
    453c:	bc 01       	movw	r22, r24
    453e:	89 e5       	ldi	r24, 0x59	; 89
    4540:	97 e4       	ldi	r25, 0x47	; 71
    4542:	0e 94 f0 56 	call	0xade0	; 0xade0 <_Z26timeRequiredToSendStrAtWPMPcj>
    4546:	8c 50       	subi	r24, 0x0C	; 12
    4548:	9e 4f       	sbci	r25, 0xFE	; 254
    454a:	96 95       	lsr	r25
    454c:	87 95       	ror	r24
    454e:	96 95       	lsr	r25
    4550:	87 95       	ror	r24
    4552:	96 95       	lsr	r25
    4554:	87 95       	ror	r24
    4556:	9c 01       	movw	r18, r24
    4558:	a5 ec       	ldi	r26, 0xC5	; 197
    455a:	b0 e2       	ldi	r27, 0x20	; 32
    455c:	0e 94 f8 74 	call	0xe9f0	; 0xe9f0 <__umulhisi3>
    4560:	92 95       	swap	r25
    4562:	82 95       	swap	r24
    4564:	8f 70       	andi	r24, 0x0F	; 15
    4566:	89 27       	eor	r24, r25
    4568:	9f 70       	andi	r25, 0x0F	; 15
    456a:	89 27       	eor	r24, r25
    456c:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_time_needed_for_ID>
    4570:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_time_needed_for_ID+0x1>
    4574:	cf c2       	rjmp	.+1438   	; 0x4b14 <__DATA_REGION_LENGTH__+0xb14>
    4576:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    457a:	88 23       	and	r24, r24
    457c:	09 f4       	brne	.+2      	; 0x4580 <__DATA_REGION_LENGTH__+0x580>
    457e:	ca c2       	rjmp	.+1428   	; 0x4b14 <__DATA_REGION_LENGTH__+0xb14>
    4580:	89 e5       	ldi	r24, 0x59	; 89
    4582:	97 e4       	ldi	r25, 0x47	; 71
    4584:	89 2f       	mov	r24, r25
    4586:	8f 93       	push	r24
    4588:	89 e5       	ldi	r24, 0x59	; 89
    458a:	97 e4       	ldi	r25, 0x47	; 71
    458c:	8f 93       	push	r24
    458e:	89 eb       	ldi	r24, 0xB9	; 185
    4590:	92 e4       	ldi	r25, 0x42	; 66
    4592:	89 2f       	mov	r24, r25
    4594:	8f 93       	push	r24
    4596:	89 eb       	ldi	r24, 0xB9	; 185
    4598:	92 e4       	ldi	r25, 0x42	; 66
    459a:	8f 93       	push	r24
    459c:	8f ef       	ldi	r24, 0xFF	; 255
    459e:	96 e4       	ldi	r25, 0x46	; 70
    45a0:	89 2f       	mov	r24, r25
    45a2:	8f 93       	push	r24
    45a4:	8f ef       	ldi	r24, 0xFF	; 255
    45a6:	96 e4       	ldi	r25, 0x46	; 70
    45a8:	8f 93       	push	r24
    45aa:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    45ae:	0f 90       	pop	r0
    45b0:	0f 90       	pop	r0
    45b2:	0f 90       	pop	r0
    45b4:	0f 90       	pop	r0
    45b6:	0f 90       	pop	r0
    45b8:	0f 90       	pop	r0
    45ba:	8f ef       	ldi	r24, 0xFF	; 255
    45bc:	96 e4       	ldi	r25, 0x46	; 70
    45be:	0e 94 8a 54 	call	0xa914	; 0xa914 <_Z12lb_send_textPc>
    45c2:	19 82       	std	Y+1, r1	; 0x01
    45c4:	a7 c2       	rjmp	.+1358   	; 0x4b14 <__DATA_REGION_LENGTH__+0xb14>
    45c6:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    45ca:	89 8f       	std	Y+25, r24	; 0x19
    45cc:	8c 85       	ldd	r24, Y+12	; 0x0c
    45ce:	9d 85       	ldd	r25, Y+13	; 0x0d
    45d0:	fc 01       	movw	r30, r24
    45d2:	83 81       	ldd	r24, Z+3	; 0x03
    45d4:	89 34       	cpi	r24, 0x49	; 73
    45d6:	09 f0       	breq	.+2      	; 0x45da <__DATA_REGION_LENGTH__+0x5da>
    45d8:	4f c0       	rjmp	.+158    	; 0x4678 <__DATA_REGION_LENGTH__+0x678>
    45da:	8c 85       	ldd	r24, Y+12	; 0x0c
    45dc:	9d 85       	ldd	r25, Y+13	; 0x0d
    45de:	fc 01       	movw	r30, r24
    45e0:	80 8d       	ldd	r24, Z+24	; 0x18
    45e2:	88 23       	and	r24, r24
    45e4:	09 f4       	brne	.+2      	; 0x45e8 <__DATA_REGION_LENGTH__+0x5e8>
    45e6:	98 c2       	rjmp	.+1328   	; 0x4b18 <__DATA_REGION_LENGTH__+0xb18>
    45e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    45ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    45ec:	48 96       	adiw	r24, 0x18	; 24
    45ee:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    45f2:	dc 01       	movw	r26, r24
    45f4:	cb 01       	movw	r24, r22
    45f6:	89 8f       	std	Y+25, r24	; 0x19
    45f8:	89 8d       	ldd	r24, Y+25	; 0x19
    45fa:	8a 8f       	std	Y+26, r24	; 0x1a
    45fc:	85 e0       	ldi	r24, 0x05	; 5
    45fe:	8b 8f       	std	Y+27, r24	; 0x1b
    4600:	84 e1       	ldi	r24, 0x14	; 20
    4602:	8c 8f       	std	Y+28, r24	; 0x1c
    4604:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4606:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4608:	89 17       	cp	r24, r25
    460a:	40 f0       	brcs	.+16     	; 0x461c <__DATA_REGION_LENGTH__+0x61c>
    460c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    460e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4610:	98 17       	cp	r25, r24
    4612:	10 f4       	brcc	.+4      	; 0x4618 <__DATA_REGION_LENGTH__+0x618>
    4614:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4616:	03 c0       	rjmp	.+6      	; 0x461e <__DATA_REGION_LENGTH__+0x61e>
    4618:	8a 8d       	ldd	r24, Y+26	; 0x1a
    461a:	01 c0       	rjmp	.+2      	; 0x461e <__DATA_REGION_LENGTH__+0x61e>
    461c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    461e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    4622:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4626:	8f 5f       	subi	r24, 0xFF	; 255
    4628:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    462c:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    4630:	88 23       	and	r24, r24
    4632:	09 f4       	brne	.+2      	; 0x4636 <__DATA_REGION_LENGTH__+0x636>
    4634:	71 c2       	rjmp	.+1250   	; 0x4b18 <__DATA_REGION_LENGTH__+0xb18>
    4636:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    463a:	88 2f       	mov	r24, r24
    463c:	90 e0       	ldi	r25, 0x00	; 0
    463e:	bc 01       	movw	r22, r24
    4640:	89 e5       	ldi	r24, 0x59	; 89
    4642:	97 e4       	ldi	r25, 0x47	; 71
    4644:	0e 94 f0 56 	call	0xade0	; 0xade0 <_Z26timeRequiredToSendStrAtWPMPcj>
    4648:	8c 50       	subi	r24, 0x0C	; 12
    464a:	9e 4f       	sbci	r25, 0xFE	; 254
    464c:	96 95       	lsr	r25
    464e:	87 95       	ror	r24
    4650:	96 95       	lsr	r25
    4652:	87 95       	ror	r24
    4654:	96 95       	lsr	r25
    4656:	87 95       	ror	r24
    4658:	9c 01       	movw	r18, r24
    465a:	a5 ec       	ldi	r26, 0xC5	; 197
    465c:	b0 e2       	ldi	r27, 0x20	; 32
    465e:	0e 94 f8 74 	call	0xe9f0	; 0xe9f0 <__umulhisi3>
    4662:	92 95       	swap	r25
    4664:	82 95       	swap	r24
    4666:	8f 70       	andi	r24, 0x0F	; 15
    4668:	89 27       	eor	r24, r25
    466a:	9f 70       	andi	r25, 0x0F	; 15
    466c:	89 27       	eor	r24, r25
    466e:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_time_needed_for_ID>
    4672:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_time_needed_for_ID+0x1>
    4676:	50 c2       	rjmp	.+1184   	; 0x4b18 <__DATA_REGION_LENGTH__+0xb18>
    4678:	8c 85       	ldd	r24, Y+12	; 0x0c
    467a:	9d 85       	ldd	r25, Y+13	; 0x0d
    467c:	fc 01       	movw	r30, r24
    467e:	83 81       	ldd	r24, Z+3	; 0x03
    4680:	80 35       	cpi	r24, 0x50	; 80
    4682:	09 f0       	breq	.+2      	; 0x4686 <__DATA_REGION_LENGTH__+0x686>
    4684:	49 c2       	rjmp	.+1170   	; 0x4b18 <__DATA_REGION_LENGTH__+0xb18>
    4686:	8c 85       	ldd	r24, Y+12	; 0x0c
    4688:	9d 85       	ldd	r25, Y+13	; 0x0d
    468a:	fc 01       	movw	r30, r24
    468c:	80 8d       	ldd	r24, Z+24	; 0x18
    468e:	88 23       	and	r24, r24
    4690:	09 f4       	brne	.+2      	; 0x4694 <__DATA_REGION_LENGTH__+0x694>
    4692:	42 c2       	rjmp	.+1156   	; 0x4b18 <__DATA_REGION_LENGTH__+0xb18>
    4694:	8c 85       	ldd	r24, Y+12	; 0x0c
    4696:	9d 85       	ldd	r25, Y+13	; 0x0d
    4698:	48 96       	adiw	r24, 0x18	; 24
    469a:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    469e:	dc 01       	movw	r26, r24
    46a0:	cb 01       	movw	r24, r22
    46a2:	89 8f       	std	Y+25, r24	; 0x19
    46a4:	89 8d       	ldd	r24, Y+25	; 0x19
    46a6:	8d 8f       	std	Y+29, r24	; 0x1d
    46a8:	85 e0       	ldi	r24, 0x05	; 5
    46aa:	90 e0       	ldi	r25, 0x00	; 0
    46ac:	8e 8f       	std	Y+30, r24	; 0x1e
    46ae:	9f 8f       	std	Y+31, r25	; 0x1f
    46b0:	84 e1       	ldi	r24, 0x14	; 20
    46b2:	90 e0       	ldi	r25, 0x00	; 0
    46b4:	88 a3       	std	Y+32, r24	; 0x20
    46b6:	99 a3       	std	Y+33, r25	; 0x21
    46b8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46ba:	28 2f       	mov	r18, r24
    46bc:	30 e0       	ldi	r19, 0x00	; 0
    46be:	88 a1       	ldd	r24, Y+32	; 0x20
    46c0:	99 a1       	ldd	r25, Y+33	; 0x21
    46c2:	82 17       	cp	r24, r18
    46c4:	93 07       	cpc	r25, r19
    46c6:	54 f0       	brlt	.+20     	; 0x46dc <__DATA_REGION_LENGTH__+0x6dc>
    46c8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    46ca:	88 2f       	mov	r24, r24
    46cc:	90 e0       	ldi	r25, 0x00	; 0
    46ce:	2e 8d       	ldd	r18, Y+30	; 0x1e
    46d0:	3f 8d       	ldd	r19, Y+31	; 0x1f
    46d2:	82 17       	cp	r24, r18
    46d4:	93 07       	cpc	r25, r19
    46d6:	24 f4       	brge	.+8      	; 0x46e0 <__DATA_REGION_LENGTH__+0x6e0>
    46d8:	c9 01       	movw	r24, r18
    46da:	02 c0       	rjmp	.+4      	; 0x46e0 <__DATA_REGION_LENGTH__+0x6e0>
    46dc:	88 a1       	ldd	r24, Y+32	; 0x20
    46de:	99 a1       	ldd	r25, Y+33	; 0x21
    46e0:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    46e4:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    46e8:	8f 5f       	subi	r24, 0xFF	; 255
    46ea:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    46ee:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    46f2:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    46f6:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    46fa:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    46fe:	0c c2       	rjmp	.+1048   	; 0x4b18 <__DATA_REGION_LENGTH__+0xb18>
    4700:	1a a2       	std	Y+34, r1	; 0x22
    4702:	1b a2       	std	Y+35, r1	; 0x23
    4704:	8c 85       	ldd	r24, Y+12	; 0x0c
    4706:	9d 85       	ldd	r25, Y+13	; 0x0d
    4708:	fc 01       	movw	r30, r24
    470a:	83 81       	ldd	r24, Z+3	; 0x03
    470c:	80 33       	cpi	r24, 0x30	; 48
    470e:	e1 f4       	brne	.+56     	; 0x4748 <__DATA_REGION_LENGTH__+0x748>
    4710:	8c 85       	ldd	r24, Y+12	; 0x0c
    4712:	9d 85       	ldd	r25, Y+13	; 0x0d
    4714:	fc 01       	movw	r30, r24
    4716:	80 8d       	ldd	r24, Z+24	; 0x18
    4718:	88 23       	and	r24, r24
    471a:	09 f4       	brne	.+2      	; 0x471e <__DATA_REGION_LENGTH__+0x71e>
    471c:	ff c1       	rjmp	.+1022   	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    471e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4720:	9d 85       	ldd	r25, Y+13	; 0x0d
    4722:	48 96       	adiw	r24, 0x18	; 24
    4724:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    4728:	dc 01       	movw	r26, r24
    472a:	cb 01       	movw	r24, r22
    472c:	8a a3       	std	Y+34, r24	; 0x22
    472e:	9b a3       	std	Y+35, r25	; 0x23
    4730:	8a a1       	ldd	r24, Y+34	; 0x22
    4732:	9b a1       	ldd	r25, Y+35	; 0x23
    4734:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4738:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    473c:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4740:	8f 5f       	subi	r24, 0xFF	; 255
    4742:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4746:	ea c1       	rjmp	.+980    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    4748:	8c 85       	ldd	r24, Y+12	; 0x0c
    474a:	9d 85       	ldd	r25, Y+13	; 0x0d
    474c:	fc 01       	movw	r30, r24
    474e:	83 81       	ldd	r24, Z+3	; 0x03
    4750:	81 33       	cpi	r24, 0x31	; 49
    4752:	e1 f4       	brne	.+56     	; 0x478c <__DATA_REGION_LENGTH__+0x78c>
    4754:	8c 85       	ldd	r24, Y+12	; 0x0c
    4756:	9d 85       	ldd	r25, Y+13	; 0x0d
    4758:	fc 01       	movw	r30, r24
    475a:	80 8d       	ldd	r24, Z+24	; 0x18
    475c:	88 23       	and	r24, r24
    475e:	09 f4       	brne	.+2      	; 0x4762 <__DATA_REGION_LENGTH__+0x762>
    4760:	dd c1       	rjmp	.+954    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    4762:	8c 85       	ldd	r24, Y+12	; 0x0c
    4764:	9d 85       	ldd	r25, Y+13	; 0x0d
    4766:	48 96       	adiw	r24, 0x18	; 24
    4768:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    476c:	dc 01       	movw	r26, r24
    476e:	cb 01       	movw	r24, r22
    4770:	8a a3       	std	Y+34, r24	; 0x22
    4772:	9b a3       	std	Y+35, r25	; 0x23
    4774:	8a a1       	ldd	r24, Y+34	; 0x22
    4776:	9b a1       	ldd	r25, Y+35	; 0x23
    4778:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    477c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4780:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4784:	8f 5f       	subi	r24, 0xFF	; 255
    4786:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    478a:	c8 c1       	rjmp	.+912    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    478c:	8c 85       	ldd	r24, Y+12	; 0x0c
    478e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4790:	fc 01       	movw	r30, r24
    4792:	83 81       	ldd	r24, Z+3	; 0x03
    4794:	89 34       	cpi	r24, 0x49	; 73
    4796:	e1 f4       	brne	.+56     	; 0x47d0 <__DATA_REGION_LENGTH__+0x7d0>
    4798:	8c 85       	ldd	r24, Y+12	; 0x0c
    479a:	9d 85       	ldd	r25, Y+13	; 0x0d
    479c:	fc 01       	movw	r30, r24
    479e:	80 8d       	ldd	r24, Z+24	; 0x18
    47a0:	88 23       	and	r24, r24
    47a2:	09 f4       	brne	.+2      	; 0x47a6 <__DATA_REGION_LENGTH__+0x7a6>
    47a4:	bb c1       	rjmp	.+886    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    47a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    47a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    47aa:	48 96       	adiw	r24, 0x18	; 24
    47ac:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    47b0:	dc 01       	movw	r26, r24
    47b2:	cb 01       	movw	r24, r22
    47b4:	8a a3       	std	Y+34, r24	; 0x22
    47b6:	9b a3       	std	Y+35, r25	; 0x23
    47b8:	8a a1       	ldd	r24, Y+34	; 0x22
    47ba:	9b a1       	ldd	r25, Y+35	; 0x23
    47bc:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    47c0:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    47c4:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    47c8:	8f 5f       	subi	r24, 0xFF	; 255
    47ca:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    47ce:	a6 c1       	rjmp	.+844    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    47d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    47d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    47d4:	fc 01       	movw	r30, r24
    47d6:	83 81       	ldd	r24, Z+3	; 0x03
    47d8:	84 34       	cpi	r24, 0x44	; 68
    47da:	09 f0       	breq	.+2      	; 0x47de <__DATA_REGION_LENGTH__+0x7de>
    47dc:	9f c1       	rjmp	.+830    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    47de:	8c 85       	ldd	r24, Y+12	; 0x0c
    47e0:	9d 85       	ldd	r25, Y+13	; 0x0d
    47e2:	fc 01       	movw	r30, r24
    47e4:	80 8d       	ldd	r24, Z+24	; 0x18
    47e6:	88 23       	and	r24, r24
    47e8:	09 f4       	brne	.+2      	; 0x47ec <__DATA_REGION_LENGTH__+0x7ec>
    47ea:	98 c1       	rjmp	.+816    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    47ec:	8c 85       	ldd	r24, Y+12	; 0x0c
    47ee:	9d 85       	ldd	r25, Y+13	; 0x0d
    47f0:	48 96       	adiw	r24, 0x18	; 24
    47f2:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    47f6:	dc 01       	movw	r26, r24
    47f8:	cb 01       	movw	r24, r22
    47fa:	8a a3       	std	Y+34, r24	; 0x22
    47fc:	9b a3       	std	Y+35, r25	; 0x23
    47fe:	8a a1       	ldd	r24, Y+34	; 0x22
    4800:	9b a1       	ldd	r25, Y+35	; 0x23
    4802:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    4806:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
    480a:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    480e:	8f 5f       	subi	r24, 0xFF	; 255
    4810:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4814:	83 c1       	rjmp	.+774    	; 0x4b1c <__DATA_REGION_LENGTH__+0xb1c>
    4816:	8c 85       	ldd	r24, Y+12	; 0x0c
    4818:	9d 85       	ldd	r25, Y+13	; 0x0d
    481a:	fc 01       	movw	r30, r24
    481c:	83 81       	ldd	r24, Z+3	; 0x03
    481e:	88 23       	and	r24, r24
    4820:	09 f4       	brne	.+2      	; 0x4824 <__DATA_REGION_LENGTH__+0x824>
    4822:	7e c1       	rjmp	.+764    	; 0x4b20 <__DATA_REGION_LENGTH__+0xb20>
    4824:	8c 85       	ldd	r24, Y+12	; 0x0c
    4826:	9d 85       	ldd	r25, Y+13	; 0x0d
    4828:	03 96       	adiw	r24, 0x03	; 3
    482a:	44 e1       	ldi	r20, 0x14	; 20
    482c:	50 e0       	ldi	r21, 0x00	; 0
    482e:	bc 01       	movw	r22, r24
    4830:	84 e4       	ldi	r24, 0x44	; 68
    4832:	97 e4       	ldi	r25, 0x47	; 71
    4834:	0e 94 b1 76 	call	0xed62	; 0xed62 <strncpy>
    4838:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    483c:	8f 5f       	subi	r24, 0xFF	; 255
    483e:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4842:	6e c1       	rjmp	.+732    	; 0x4b20 <__DATA_REGION_LENGTH__+0xb20>
    4844:	1e 82       	std	Y+6, r1	; 0x06
    4846:	1f 82       	std	Y+7, r1	; 0x07
    4848:	18 86       	std	Y+8, r1	; 0x08
    484a:	19 86       	std	Y+9, r1	; 0x09
    484c:	8c 85       	ldd	r24, Y+12	; 0x0c
    484e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4850:	fc 01       	movw	r30, r24
    4852:	83 81       	ldd	r24, Z+3	; 0x03
    4854:	88 23       	and	r24, r24
    4856:	99 f1       	breq	.+102    	; 0x48be <__DATA_REGION_LENGTH__+0x8be>
    4858:	8c 85       	ldd	r24, Y+12	; 0x0c
    485a:	9d 85       	ldd	r25, Y+13	; 0x0d
    485c:	03 96       	adiw	r24, 0x03	; 3
    485e:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    4862:	dc 01       	movw	r26, r24
    4864:	cb 01       	movw	r24, r22
    4866:	80 93 af 47 	sts	0x47AF, r24	; 0x8047af <_ZZ17handleLinkBusMsgsvE1f>
    486a:	90 93 b0 47 	sts	0x47B0, r25	; 0x8047b0 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    486e:	a0 93 b1 47 	sts	0x47B1, r26	; 0x8047b1 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    4872:	b0 93 b2 47 	sts	0x47B2, r27	; 0x8047b2 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    4876:	80 91 af 47 	lds	r24, 0x47AF	; 0x8047af <_ZZ17handleLinkBusMsgsvE1f>
    487a:	90 91 b0 47 	lds	r25, 0x47B0	; 0x8047b0 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    487e:	a0 91 b1 47 	lds	r26, 0x47B1	; 0x8047b1 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    4882:	b0 91 b2 47 	lds	r27, 0x47B2	; 0x8047b2 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    4886:	8e a7       	std	Y+46, r24	; 0x2e
    4888:	9f a7       	std	Y+47, r25	; 0x2f
    488a:	a8 ab       	std	Y+48, r26	; 0x30
    488c:	b9 ab       	std	Y+49, r27	; 0x31
    488e:	ce 01       	movw	r24, r28
    4890:	8e 96       	adiw	r24, 0x2e	; 46
    4892:	61 e0       	ldi	r22, 0x01	; 1
    4894:	0e 94 dc 69 	call	0xd3b8	; 0xd3b8 <_Z14txSetFrequencyPmb>
    4898:	98 2f       	mov	r25, r24
    489a:	81 e0       	ldi	r24, 0x01	; 1
    489c:	89 27       	eor	r24, r25
    489e:	88 23       	and	r24, r24
    48a0:	b1 f0       	breq	.+44     	; 0x48ce <__DATA_REGION_LENGTH__+0x8ce>
    48a2:	8e a5       	ldd	r24, Y+46	; 0x2e
    48a4:	9f a5       	ldd	r25, Y+47	; 0x2f
    48a6:	a8 a9       	ldd	r26, Y+48	; 0x30
    48a8:	b9 a9       	ldd	r27, Y+49	; 0x31
    48aa:	8e 83       	std	Y+6, r24	; 0x06
    48ac:	9f 83       	std	Y+7, r25	; 0x07
    48ae:	a8 87       	std	Y+8, r26	; 0x08
    48b0:	b9 87       	std	Y+9, r27	; 0x09
    48b2:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    48b6:	8f 5f       	subi	r24, 0xFF	; 255
    48b8:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    48bc:	08 c0       	rjmp	.+16     	; 0x48ce <__DATA_REGION_LENGTH__+0x8ce>
    48be:	0e 94 26 6a 	call	0xd44c	; 0xd44c <_Z14txGetFrequencyv>
    48c2:	dc 01       	movw	r26, r24
    48c4:	cb 01       	movw	r24, r22
    48c6:	8e 83       	std	Y+6, r24	; 0x06
    48c8:	9f 83       	std	Y+7, r25	; 0x07
    48ca:	a8 87       	std	Y+8, r26	; 0x08
    48cc:	b9 87       	std	Y+9, r27	; 0x09
    48ce:	8e 81       	ldd	r24, Y+6	; 0x06
    48d0:	9f 81       	ldd	r25, Y+7	; 0x07
    48d2:	a8 85       	ldd	r26, Y+8	; 0x08
    48d4:	b9 85       	ldd	r27, Y+9	; 0x09
    48d6:	89 2b       	or	r24, r25
    48d8:	8a 2b       	or	r24, r26
    48da:	8b 2b       	or	r24, r27
    48dc:	09 f4       	brne	.+2      	; 0x48e0 <__DATA_REGION_LENGTH__+0x8e0>
    48de:	22 c1       	rjmp	.+580    	; 0x4b24 <__DATA_REGION_LENGTH__+0xb24>
    48e0:	89 85       	ldd	r24, Y+9	; 0x09
    48e2:	8f 93       	push	r24
    48e4:	88 85       	ldd	r24, Y+8	; 0x08
    48e6:	8f 93       	push	r24
    48e8:	8f 81       	ldd	r24, Y+7	; 0x07
    48ea:	8f 93       	push	r24
    48ec:	8e 81       	ldd	r24, Y+6	; 0x06
    48ee:	8f 93       	push	r24
    48f0:	82 ec       	ldi	r24, 0xC2	; 194
    48f2:	92 e4       	ldi	r25, 0x42	; 66
    48f4:	89 2f       	mov	r24, r25
    48f6:	8f 93       	push	r24
    48f8:	82 ec       	ldi	r24, 0xC2	; 194
    48fa:	92 e4       	ldi	r25, 0x42	; 66
    48fc:	8f 93       	push	r24
    48fe:	8f ef       	ldi	r24, 0xFF	; 255
    4900:	96 e4       	ldi	r25, 0x46	; 70
    4902:	89 2f       	mov	r24, r25
    4904:	8f 93       	push	r24
    4906:	8f ef       	ldi	r24, 0xFF	; 255
    4908:	96 e4       	ldi	r25, 0x46	; 70
    490a:	8f 93       	push	r24
    490c:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    4910:	2d b7       	in	r18, 0x3d	; 61
    4912:	3e b7       	in	r19, 0x3e	; 62
    4914:	28 5f       	subi	r18, 0xF8	; 248
    4916:	3f 4f       	sbci	r19, 0xFF	; 255
    4918:	cd bf       	out	0x3d, r28	; 61
    491a:	de bf       	out	0x3e, r29	; 62
    491c:	4f ef       	ldi	r20, 0xFF	; 255
    491e:	56 e4       	ldi	r21, 0x46	; 70
    4920:	67 ec       	ldi	r22, 0xC7	; 199
    4922:	72 e4       	ldi	r23, 0x42	; 66
    4924:	83 e0       	ldi	r24, 0x03	; 3
    4926:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    492a:	fc c0       	rjmp	.+504    	; 0x4b24 <__DATA_REGION_LENGTH__+0xb24>
    492c:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL22g_lastConversionResult>
    4930:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL22g_lastConversionResult+0x1>
    4934:	21 e0       	ldi	r18, 0x01	; 1
    4936:	8d 38       	cpi	r24, 0x8D	; 141
    4938:	92 40       	sbci	r25, 0x02	; 2
    493a:	08 f4       	brcc	.+2      	; 0x493e <__DATA_REGION_LENGTH__+0x93e>
    493c:	20 e0       	ldi	r18, 0x00	; 0
    493e:	22 23       	and	r18, r18
    4940:	09 f4       	brne	.+2      	; 0x4944 <__DATA_REGION_LENGTH__+0x944>
    4942:	7c c0       	rjmp	.+248    	; 0x4a3c <__DATA_REGION_LENGTH__+0xa3c>
    4944:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <_ZL22g_lastConversionResult>
    4948:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <_ZL22g_lastConversionResult+0x1>
    494c:	cc 01       	movw	r24, r24
    494e:	a0 e0       	ldi	r26, 0x00	; 0
    4950:	b0 e0       	ldi	r27, 0x00	; 0
    4952:	9c 01       	movw	r18, r24
    4954:	ad 01       	movw	r20, r26
    4956:	60 ea       	ldi	r22, 0xA0	; 160
    4958:	78 e6       	ldi	r23, 0x68	; 104
    495a:	86 e0       	ldi	r24, 0x06	; 6
    495c:	90 e0       	ldi	r25, 0x00	; 0
    495e:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    4962:	dc 01       	movw	r26, r24
    4964:	cb 01       	movw	r24, r22
    4966:	7c 01       	movw	r14, r24
    4968:	8d 01       	movw	r16, r26
    496a:	ed e7       	ldi	r30, 0x7D	; 125
    496c:	fe 1a       	sub	r15, r30
    496e:	0c 40       	sbci	r16, 0x0C	; 12
    4970:	1e 4f       	sbci	r17, 0xFE	; 254
    4972:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <g_battery_empty_mV>
    4976:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <g_battery_empty_mV+0x1>
    497a:	cc 01       	movw	r24, r24
    497c:	a0 e0       	ldi	r26, 0x00	; 0
    497e:	b0 e0       	ldi	r27, 0x00	; 0
    4980:	9c 01       	movw	r18, r24
    4982:	ad 01       	movw	r20, r26
    4984:	64 e6       	ldi	r22, 0x64	; 100
    4986:	70 e7       	ldi	r23, 0x70	; 112
    4988:	8e ef       	ldi	r24, 0xFE	; 254
    498a:	9f ef       	ldi	r25, 0xFF	; 255
    498c:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    4990:	dc 01       	movw	r26, r24
    4992:	cb 01       	movw	r24, r22
    4994:	e8 0e       	add	r14, r24
    4996:	f9 1e       	adc	r15, r25
    4998:	0a 1f       	adc	r16, r26
    499a:	1b 1f       	adc	r17, r27
    499c:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <g_battery_empty_mV>
    49a0:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <g_battery_empty_mV+0x1>
    49a4:	cc 01       	movw	r24, r24
    49a6:	a0 e0       	ldi	r26, 0x00	; 0
    49a8:	b0 e0       	ldi	r27, 0x00	; 0
    49aa:	28 e6       	ldi	r18, 0x68	; 104
    49ac:	30 e1       	ldi	r19, 0x10	; 16
    49ae:	40 e0       	ldi	r20, 0x00	; 0
    49b0:	50 e0       	ldi	r21, 0x00	; 0
    49b2:	28 1b       	sub	r18, r24
    49b4:	39 0b       	sbc	r19, r25
    49b6:	4a 0b       	sbc	r20, r26
    49b8:	5b 0b       	sbc	r21, r27
    49ba:	8f ef       	ldi	r24, 0xFF	; 255
    49bc:	93 e0       	ldi	r25, 0x03	; 3
    49be:	dc 01       	movw	r26, r24
    49c0:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    49c4:	9b 01       	movw	r18, r22
    49c6:	ac 01       	movw	r20, r24
    49c8:	c8 01       	movw	r24, r16
    49ca:	b7 01       	movw	r22, r14
    49cc:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
    49d0:	da 01       	movw	r26, r20
    49d2:	c9 01       	movw	r24, r18
    49d4:	8c a3       	std	Y+36, r24	; 0x24
    49d6:	9d a3       	std	Y+37, r25	; 0x25
    49d8:	ae a3       	std	Y+38, r26	; 0x26
    49da:	bf a3       	std	Y+39, r27	; 0x27
    49dc:	18 a6       	std	Y+40, r1	; 0x28
    49de:	19 a6       	std	Y+41, r1	; 0x29
    49e0:	84 e6       	ldi	r24, 0x64	; 100
    49e2:	90 e0       	ldi	r25, 0x00	; 0
    49e4:	8a a7       	std	Y+42, r24	; 0x2a
    49e6:	9b a7       	std	Y+43, r25	; 0x2b
    49e8:	8a a5       	ldd	r24, Y+42	; 0x2a
    49ea:	9b a5       	ldd	r25, Y+43	; 0x2b
    49ec:	9c 01       	movw	r18, r24
    49ee:	99 0f       	add	r25, r25
    49f0:	44 0b       	sbc	r20, r20
    49f2:	55 0b       	sbc	r21, r21
    49f4:	8c a1       	ldd	r24, Y+36	; 0x24
    49f6:	9d a1       	ldd	r25, Y+37	; 0x25
    49f8:	ae a1       	ldd	r26, Y+38	; 0x26
    49fa:	bf a1       	ldd	r27, Y+39	; 0x27
    49fc:	28 17       	cp	r18, r24
    49fe:	39 07       	cpc	r19, r25
    4a00:	4a 07       	cpc	r20, r26
    4a02:	5b 07       	cpc	r21, r27
    4a04:	3c f4       	brge	.+14     	; 0x4a14 <__DATA_REGION_LENGTH__+0xa14>
    4a06:	8a a5       	ldd	r24, Y+42	; 0x2a
    4a08:	9b a5       	ldd	r25, Y+43	; 0x2b
    4a0a:	09 2e       	mov	r0, r25
    4a0c:	00 0c       	add	r0, r0
    4a0e:	aa 0b       	sbc	r26, r26
    4a10:	bb 0b       	sbc	r27, r27
    4a12:	11 c0       	rjmp	.+34     	; 0x4a36 <__DATA_REGION_LENGTH__+0xa36>
    4a14:	88 a5       	ldd	r24, Y+40	; 0x28
    4a16:	99 a5       	ldd	r25, Y+41	; 0x29
    4a18:	09 2e       	mov	r0, r25
    4a1a:	00 0c       	add	r0, r0
    4a1c:	aa 0b       	sbc	r26, r26
    4a1e:	bb 0b       	sbc	r27, r27
    4a20:	2c a1       	ldd	r18, Y+36	; 0x24
    4a22:	3d a1       	ldd	r19, Y+37	; 0x25
    4a24:	4e a1       	ldd	r20, Y+38	; 0x26
    4a26:	5f a1       	ldd	r21, Y+39	; 0x27
    4a28:	82 17       	cp	r24, r18
    4a2a:	93 07       	cpc	r25, r19
    4a2c:	a4 07       	cpc	r26, r20
    4a2e:	b5 07       	cpc	r27, r21
    4a30:	14 f4       	brge	.+4      	; 0x4a36 <__DATA_REGION_LENGTH__+0xa36>
    4a32:	da 01       	movw	r26, r20
    4a34:	c9 01       	movw	r24, r18
    4a36:	8a 87       	std	Y+10, r24	; 0x0a
    4a38:	9b 87       	std	Y+11, r25	; 0x0b
    4a3a:	2f c0       	rjmp	.+94     	; 0x4a9a <__DATA_REGION_LENGTH__+0xa9a>
    4a3c:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <_ZL22g_lastConversionResult+0x4>
    4a40:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <_ZL22g_lastConversionResult+0x5>
    4a44:	9c 01       	movw	r18, r24
    4a46:	40 e0       	ldi	r20, 0x00	; 0
    4a48:	50 e0       	ldi	r21, 0x00	; 0
    4a4a:	da 01       	movw	r26, r20
    4a4c:	c9 01       	movw	r24, r18
    4a4e:	88 0f       	add	r24, r24
    4a50:	99 1f       	adc	r25, r25
    4a52:	aa 1f       	adc	r26, r26
    4a54:	bb 1f       	adc	r27, r27
    4a56:	88 0f       	add	r24, r24
    4a58:	99 1f       	adc	r25, r25
    4a5a:	aa 1f       	adc	r26, r26
    4a5c:	bb 1f       	adc	r27, r27
    4a5e:	88 0f       	add	r24, r24
    4a60:	99 1f       	adc	r25, r25
    4a62:	aa 1f       	adc	r26, r26
    4a64:	bb 1f       	adc	r27, r27
    4a66:	82 1b       	sub	r24, r18
    4a68:	93 0b       	sbc	r25, r19
    4a6a:	a4 0b       	sbc	r26, r20
    4a6c:	b5 0b       	sbc	r27, r21
    4a6e:	88 0f       	add	r24, r24
    4a70:	99 1f       	adc	r25, r25
    4a72:	aa 1f       	adc	r26, r26
    4a74:	bb 1f       	adc	r27, r27
    4a76:	8a 5c       	subi	r24, 0xCA	; 202
    4a78:	9e 4f       	sbci	r25, 0xFE	; 254
    4a7a:	af 4f       	sbci	r26, 0xFF	; 255
    4a7c:	bf 4f       	sbci	r27, 0xFF	; 255
    4a7e:	24 e6       	ldi	r18, 0x64	; 100
    4a80:	30 e0       	ldi	r19, 0x00	; 0
    4a82:	40 e0       	ldi	r20, 0x00	; 0
    4a84:	50 e0       	ldi	r21, 0x00	; 0
    4a86:	bc 01       	movw	r22, r24
    4a88:	cd 01       	movw	r24, r26
    4a8a:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
    4a8e:	da 01       	movw	r26, r20
    4a90:	c9 01       	movw	r24, r18
    4a92:	80 5f       	subi	r24, 0xF0	; 240
    4a94:	98 4d       	sbci	r25, 0xD8	; 216
    4a96:	8a 87       	std	Y+10, r24	; 0x0a
    4a98:	9b 87       	std	Y+11, r25	; 0x0b
    4a9a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a9c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a9e:	6b ec       	ldi	r22, 0xCB	; 203
    4aa0:	72 e4       	ldi	r23, 0x42	; 66
    4aa2:	0e 94 36 55 	call	0xaa6c	; 0xaa6c <_Z16lb_broadcast_numjPKc>
    4aa6:	80 e0       	ldi	r24, 0x00	; 0
    4aa8:	90 e0       	ldi	r25, 0x00	; 0
    4aaa:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    4aae:	dc 01       	movw	r26, r24
    4ab0:	cb 01       	movw	r24, r22
    4ab2:	bc 01       	movw	r22, r24
    4ab4:	cd 01       	movw	r24, r26
    4ab6:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    4aba:	37 c0       	rjmp	.+110    	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4abc:	ce 01       	movw	r24, r28
    4abe:	c2 96       	adiw	r24, 0x32	; 50
    4ac0:	0e 94 c6 3e 	call	0x7d8c	; 0x7d8c <ds3231_get_temp>
    4ac4:	98 2f       	mov	r25, r24
    4ac6:	81 e0       	ldi	r24, 0x01	; 1
    4ac8:	89 27       	eor	r24, r25
    4aca:	88 23       	and	r24, r24
    4acc:	69 f1       	breq	.+90     	; 0x4b28 <__DATA_REGION_LENGTH__+0xb28>
    4ace:	8a a9       	ldd	r24, Y+50	; 0x32
    4ad0:	9b a9       	ldd	r25, Y+51	; 0x33
    4ad2:	60 ed       	ldi	r22, 0xD0	; 208
    4ad4:	72 e4       	ldi	r23, 0x42	; 66
    4ad6:	0e 94 36 55 	call	0xaa6c	; 0xaa6c <_Z16lb_broadcast_numjPKc>
    4ada:	26 c0       	rjmp	.+76     	; 0x4b28 <__DATA_REGION_LENGTH__+0xb28>
    4adc:	45 ed       	ldi	r20, 0xD5	; 213
    4ade:	52 e4       	ldi	r21, 0x42	; 66
    4ae0:	69 ed       	ldi	r22, 0xD9	; 217
    4ae2:	72 e4       	ldi	r23, 0x42	; 66
    4ae4:	83 e0       	ldi	r24, 0x03	; 3
    4ae6:	0e 94 e7 54 	call	0xa9ce	; 0xa9ce <_Z11lb_send_msg13LBMessageTypePKcPc>
    4aea:	1f c0       	rjmp	.+62     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4aec:	19 82       	std	Y+1, r1	; 0x01
    4aee:	8d ed       	ldi	r24, 0xDD	; 221
    4af0:	92 e4       	ldi	r25, 0x42	; 66
    4af2:	0e 94 8a 54 	call	0xa914	; 0xa914 <_Z12lb_send_textPc>
    4af6:	19 c0       	rjmp	.+50     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4af8:	00 00       	nop
    4afa:	17 c0       	rjmp	.+46     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4afc:	00 00       	nop
    4afe:	15 c0       	rjmp	.+42     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b00:	00 00       	nop
    4b02:	13 c0       	rjmp	.+38     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b04:	00 00       	nop
    4b06:	11 c0       	rjmp	.+34     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b08:	00 00       	nop
    4b0a:	0f c0       	rjmp	.+30     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b0c:	00 00       	nop
    4b0e:	0d c0       	rjmp	.+26     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b10:	00 00       	nop
    4b12:	0b c0       	rjmp	.+22     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b14:	00 00       	nop
    4b16:	09 c0       	rjmp	.+18     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b18:	00 00       	nop
    4b1a:	07 c0       	rjmp	.+14     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b1c:	00 00       	nop
    4b1e:	05 c0       	rjmp	.+10     	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b20:	00 00       	nop
    4b22:	03 c0       	rjmp	.+6      	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b24:	00 00       	nop
    4b26:	01 c0       	rjmp	.+2      	; 0x4b2a <__DATA_REGION_LENGTH__+0xb2a>
    4b28:	00 00       	nop
    4b2a:	8c 85       	ldd	r24, Y+12	; 0x0c
    4b2c:	9d 85       	ldd	r25, Y+13	; 0x0d
    4b2e:	fc 01       	movw	r30, r24
    4b30:	11 82       	std	Z+1, r1	; 0x01
    4b32:	12 82       	std	Z+2, r1	; 0x02
    4b34:	89 81       	ldd	r24, Y+1	; 0x01
    4b36:	88 23       	and	r24, r24
    4b38:	09 f4       	brne	.+2      	; 0x4b3c <__DATA_REGION_LENGTH__+0xb3c>
    4b3a:	4e c9       	rjmp	.-3428   	; 0x3dd8 <_Z17handleLinkBusMsgsv+0x1a>
    4b3c:	83 ee       	ldi	r24, 0xE3	; 227
    4b3e:	92 e4       	ldi	r25, 0x42	; 66
    4b40:	0e 94 8a 54 	call	0xa914	; 0xa914 <_Z12lb_send_textPc>
    4b44:	49 c9       	rjmp	.-3438   	; 0x3dd8 <_Z17handleLinkBusMsgsv+0x1a>
    4b46:	00 00       	nop
    4b48:	e3 96       	adiw	r28, 0x33	; 51
    4b4a:	cd bf       	out	0x3d, r28	; 61
    4b4c:	de bf       	out	0x3e, r29	; 62
    4b4e:	df 91       	pop	r29
    4b50:	cf 91       	pop	r28
    4b52:	1f 91       	pop	r17
    4b54:	0f 91       	pop	r16
    4b56:	ff 90       	pop	r15
    4b58:	ef 90       	pop	r14
    4b5a:	08 95       	ret

00004b5c <_Z19updateAntennaStatusv>:
    4b5c:	cf 93       	push	r28
    4b5e:	df 93       	push	r29
    4b60:	1f 92       	push	r1
    4b62:	cd b7       	in	r28, 0x3d	; 61
    4b64:	de b7       	in	r29, 0x3e	; 62
    4b66:	0e 94 80 29 	call	0x5300	; 0x5300 <_Z18antennaIsConnectedv>
    4b6a:	89 83       	std	Y+1, r24	; 0x01
    4b6c:	99 81       	ldd	r25, Y+1	; 0x01
    4b6e:	81 e0       	ldi	r24, 0x01	; 1
    4b70:	89 27       	eor	r24, r25
    4b72:	88 23       	and	r24, r24
    4b74:	91 f0       	breq	.+36     	; 0x4b9a <_Z19updateAntennaStatusv+0x3e>
    4b76:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <g_antenna_connect_state>
    4b7a:	81 e0       	ldi	r24, 0x01	; 1
    4b7c:	91 30       	cpi	r25, 0x01	; 1
    4b7e:	09 f4       	brne	.+2      	; 0x4b82 <_Z19updateAntennaStatusv+0x26>
    4b80:	80 e0       	ldi	r24, 0x00	; 0
    4b82:	88 23       	and	r24, r24
    4b84:	31 f0       	breq	.+12     	; 0x4b92 <_Z19updateAntennaStatusv+0x36>
    4b86:	81 e0       	ldi	r24, 0x01	; 1
    4b88:	80 93 37 47 	sts	0x4737, r24	; 0x804737 <g_antenna_connect_state>
    4b8c:	81 e0       	ldi	r24, 0x01	; 1
    4b8e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4b92:	83 e0       	ldi	r24, 0x03	; 3
    4b94:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4b98:	27 c0       	rjmp	.+78     	; 0x4be8 <_Z19updateAntennaStatusv+0x8c>
    4b9a:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <g_antenna_connect_state>
    4b9e:	81 e0       	ldi	r24, 0x01	; 1
    4ba0:	92 30       	cpi	r25, 0x02	; 2
    4ba2:	09 f4       	brne	.+2      	; 0x4ba6 <_Z19updateAntennaStatusv+0x4a>
    4ba4:	80 e0       	ldi	r24, 0x00	; 0
    4ba6:	88 23       	and	r24, r24
    4ba8:	f9 f0       	breq	.+62     	; 0x4be8 <_Z19updateAntennaStatusv+0x8c>
    4baa:	80 91 b3 47 	lds	r24, 0x47B3	; 0x8047b3 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4bae:	99 81       	ldd	r25, Y+1	; 0x01
    4bb0:	98 17       	cp	r25, r24
    4bb2:	b9 f4       	brne	.+46     	; 0x4be2 <_Z19updateAntennaStatusv+0x86>
    4bb4:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4bb8:	88 23       	and	r24, r24
    4bba:	b1 f0       	breq	.+44     	; 0x4be8 <_Z19updateAntennaStatusv+0x8c>
    4bbc:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4bc0:	81 50       	subi	r24, 0x01	; 1
    4bc2:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4bc6:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4bca:	88 23       	and	r24, r24
    4bcc:	69 f4       	brne	.+26     	; 0x4be8 <_Z19updateAntennaStatusv+0x8c>
    4bce:	82 e0       	ldi	r24, 0x02	; 2
    4bd0:	80 93 37 47 	sts	0x4737, r24	; 0x804737 <g_antenna_connect_state>
    4bd4:	81 e0       	ldi	r24, 0x01	; 1
    4bd6:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4bda:	83 e0       	ldi	r24, 0x03	; 3
    4bdc:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4be0:	03 c0       	rjmp	.+6      	; 0x4be8 <_Z19updateAntennaStatusv+0x8c>
    4be2:	83 e0       	ldi	r24, 0x03	; 3
    4be4:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4be8:	89 81       	ldd	r24, Y+1	; 0x01
    4bea:	80 93 b3 47 	sts	0x47B3, r24	; 0x8047b3 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4bee:	00 00       	nop
    4bf0:	0f 90       	pop	r0
    4bf2:	df 91       	pop	r29
    4bf4:	cf 91       	pop	r28
    4bf6:	08 95       	ret

00004bf8 <_Z12eventEnabledv>:
    4bf8:	ef 92       	push	r14
    4bfa:	ff 92       	push	r15
    4bfc:	0f 93       	push	r16
    4bfe:	1f 93       	push	r17
    4c00:	cf 93       	push	r28
    4c02:	df 93       	push	r29
    4c04:	cd b7       	in	r28, 0x3d	; 61
    4c06:	de b7       	in	r29, 0x3e	; 62
    4c08:	29 97       	sbiw	r28, 0x09	; 9
    4c0a:	cd bf       	out	0x3d, r28	; 61
    4c0c:	de bf       	out	0x3e, r29	; 62
    4c0e:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    4c12:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    4c16:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    4c1a:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    4c1e:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    4c22:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    4c26:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    4c2a:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    4c2e:	bc 01       	movw	r22, r24
    4c30:	cd 01       	movw	r24, r26
    4c32:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <_Z7timeDifmm>
    4c36:	dc 01       	movw	r26, r24
    4c38:	cb 01       	movw	r24, r22
    4c3a:	89 83       	std	Y+1, r24	; 0x01
    4c3c:	9a 83       	std	Y+2, r25	; 0x02
    4c3e:	ab 83       	std	Y+3, r26	; 0x03
    4c40:	bc 83       	std	Y+4, r27	; 0x04
    4c42:	21 e0       	ldi	r18, 0x01	; 1
    4c44:	89 81       	ldd	r24, Y+1	; 0x01
    4c46:	9a 81       	ldd	r25, Y+2	; 0x02
    4c48:	ab 81       	ldd	r26, Y+3	; 0x03
    4c4a:	bc 81       	ldd	r27, Y+4	; 0x04
    4c4c:	18 16       	cp	r1, r24
    4c4e:	19 06       	cpc	r1, r25
    4c50:	1a 06       	cpc	r1, r26
    4c52:	1b 06       	cpc	r1, r27
    4c54:	0c f0       	brlt	.+2      	; 0x4c58 <_Z12eventEnabledv+0x60>
    4c56:	20 e0       	ldi	r18, 0x00	; 0
    4c58:	2d 83       	std	Y+5, r18	; 0x05
    4c5a:	ce 01       	movw	r24, r28
    4c5c:	06 96       	adiw	r24, 0x06	; 6
    4c5e:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    4c62:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    4c66:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    4c6a:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    4c6e:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    4c72:	8e 81       	ldd	r24, Y+6	; 0x06
    4c74:	9f 81       	ldd	r25, Y+7	; 0x07
    4c76:	a8 85       	ldd	r26, Y+8	; 0x08
    4c78:	b9 85       	ldd	r27, Y+9	; 0x09
    4c7a:	bc 01       	movw	r22, r24
    4c7c:	cd 01       	movw	r24, r26
    4c7e:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <_Z7timeDifmm>
    4c82:	dc 01       	movw	r26, r24
    4c84:	cb 01       	movw	r24, r22
    4c86:	89 83       	std	Y+1, r24	; 0x01
    4c88:	9a 83       	std	Y+2, r25	; 0x02
    4c8a:	ab 83       	std	Y+3, r26	; 0x03
    4c8c:	bc 83       	std	Y+4, r27	; 0x04
    4c8e:	89 81       	ldd	r24, Y+1	; 0x01
    4c90:	9a 81       	ldd	r25, Y+2	; 0x02
    4c92:	ab 81       	ldd	r26, Y+3	; 0x03
    4c94:	bc 81       	ldd	r27, Y+4	; 0x04
    4c96:	bb 23       	and	r27, r27
    4c98:	2c f0       	brlt	.+10     	; 0x4ca4 <_Z12eventEnabledv+0xac>
    4c9a:	8d 81       	ldd	r24, Y+5	; 0x05
    4c9c:	88 23       	and	r24, r24
    4c9e:	11 f0       	breq	.+4      	; 0x4ca4 <_Z12eventEnabledv+0xac>
    4ca0:	80 e0       	ldi	r24, 0x00	; 0
    4ca2:	4a c0       	rjmp	.+148    	; 0x4d38 <_Z12eventEnabledv+0x140>
    4ca4:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    4ca8:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    4cac:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    4cb0:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    4cb4:	8e 81       	ldd	r24, Y+6	; 0x06
    4cb6:	9f 81       	ldd	r25, Y+7	; 0x07
    4cb8:	a8 85       	ldd	r26, Y+8	; 0x08
    4cba:	b9 85       	ldd	r27, Y+9	; 0x09
    4cbc:	bc 01       	movw	r22, r24
    4cbe:	cd 01       	movw	r24, r26
    4cc0:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <_Z7timeDifmm>
    4cc4:	dc 01       	movw	r26, r24
    4cc6:	cb 01       	movw	r24, r22
    4cc8:	89 83       	std	Y+1, r24	; 0x01
    4cca:	9a 83       	std	Y+2, r25	; 0x02
    4ccc:	ab 83       	std	Y+3, r26	; 0x03
    4cce:	bc 83       	std	Y+4, r27	; 0x04
    4cd0:	89 81       	ldd	r24, Y+1	; 0x01
    4cd2:	9a 81       	ldd	r25, Y+2	; 0x02
    4cd4:	ab 81       	ldd	r26, Y+3	; 0x03
    4cd6:	bc 81       	ldd	r27, Y+4	; 0x04
    4cd8:	84 3c       	cpi	r24, 0xC4	; 196
    4cda:	9f 4f       	sbci	r25, 0xFF	; 255
    4cdc:	af 4f       	sbci	r26, 0xFF	; 255
    4cde:	bf 4f       	sbci	r27, 0xFF	; 255
    4ce0:	64 f0       	brlt	.+24     	; 0x4cfa <_Z12eventEnabledv+0x102>
    4ce2:	10 92 43 47 	sts	0x4743, r1	; 0x804743 <_ZL11g_sleepType>
    4ce6:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <_ZL18g_seconds_to_sleep>
    4cea:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    4cee:	10 92 19 40 	sts	0x4019, r1	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    4cf2:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    4cf6:	81 e0       	ldi	r24, 0x01	; 1
    4cf8:	1f c0       	rjmp	.+62     	; 0x4d38 <_Z12eventEnabledv+0x140>
    4cfa:	24 ec       	ldi	r18, 0xC4	; 196
    4cfc:	3f ef       	ldi	r19, 0xFF	; 255
    4cfe:	4f ef       	ldi	r20, 0xFF	; 255
    4d00:	5f ef       	ldi	r21, 0xFF	; 255
    4d02:	89 81       	ldd	r24, Y+1	; 0x01
    4d04:	9a 81       	ldd	r25, Y+2	; 0x02
    4d06:	ab 81       	ldd	r26, Y+3	; 0x03
    4d08:	bc 81       	ldd	r27, Y+4	; 0x04
    4d0a:	79 01       	movw	r14, r18
    4d0c:	8a 01       	movw	r16, r20
    4d0e:	e8 1a       	sub	r14, r24
    4d10:	f9 0a       	sbc	r15, r25
    4d12:	0a 0b       	sbc	r16, r26
    4d14:	1b 0b       	sbc	r17, r27
    4d16:	d8 01       	movw	r26, r16
    4d18:	c7 01       	movw	r24, r14
    4d1a:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <_ZL18g_seconds_to_sleep>
    4d1e:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <_ZL18g_seconds_to_sleep+0x1>
    4d22:	a0 93 19 40 	sts	0x4019, r26	; 0x804019 <_ZL18g_seconds_to_sleep+0x2>
    4d26:	b0 93 1a 40 	sts	0x401A, r27	; 0x80401a <_ZL18g_seconds_to_sleep+0x3>
    4d2a:	81 e0       	ldi	r24, 0x01	; 1
    4d2c:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZL11g_sleepType>
    4d30:	81 e0       	ldi	r24, 0x01	; 1
    4d32:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <_ZL13g_go_to_sleep>
    4d36:	81 e0       	ldi	r24, 0x01	; 1
    4d38:	29 96       	adiw	r28, 0x09	; 9
    4d3a:	cd bf       	out	0x3d, r28	; 61
    4d3c:	de bf       	out	0x3e, r29	; 62
    4d3e:	df 91       	pop	r29
    4d40:	cf 91       	pop	r28
    4d42:	1f 91       	pop	r17
    4d44:	0f 91       	pop	r16
    4d46:	ff 90       	pop	r15
    4d48:	ef 90       	pop	r14
    4d4a:	08 95       	ret

00004d4c <_Z8wdt_init7WDReset>:
    4d4c:	cf 93       	push	r28
    4d4e:	df 93       	push	r29
    4d50:	1f 92       	push	r1
    4d52:	cd b7       	in	r28, 0x3d	; 61
    4d54:	de b7       	in	r29, 0x3e	; 62
    4d56:	89 83       	std	Y+1, r24	; 0x01
    4d58:	00 00       	nop
    4d5a:	0f 90       	pop	r0
    4d5c:	df 91       	pop	r29
    4d5e:	cf 91       	pop	r28
    4d60:	08 95       	ret

00004d62 <_Z13throttleValueh>:
    4d62:	cf 93       	push	r28
    4d64:	df 93       	push	r29
    4d66:	cd b7       	in	r28, 0x3d	; 61
    4d68:	de b7       	in	r29, 0x3e	; 62
    4d6a:	2a 97       	sbiw	r28, 0x0a	; 10
    4d6c:	cd bf       	out	0x3d, r28	; 61
    4d6e:	de bf       	out	0x3e, r29	; 62
    4d70:	8a 87       	std	Y+10, r24	; 0x0a
    4d72:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d74:	89 83       	std	Y+1, r24	; 0x01
    4d76:	85 e0       	ldi	r24, 0x05	; 5
    4d78:	90 e0       	ldi	r25, 0x00	; 0
    4d7a:	8a 83       	std	Y+2, r24	; 0x02
    4d7c:	9b 83       	std	Y+3, r25	; 0x03
    4d7e:	84 e1       	ldi	r24, 0x14	; 20
    4d80:	90 e0       	ldi	r25, 0x00	; 0
    4d82:	8c 83       	std	Y+4, r24	; 0x04
    4d84:	9d 83       	std	Y+5, r25	; 0x05
    4d86:	89 81       	ldd	r24, Y+1	; 0x01
    4d88:	28 2f       	mov	r18, r24
    4d8a:	88 0f       	add	r24, r24
    4d8c:	33 0b       	sbc	r19, r19
    4d8e:	8c 81       	ldd	r24, Y+4	; 0x04
    4d90:	9d 81       	ldd	r25, Y+5	; 0x05
    4d92:	82 17       	cp	r24, r18
    4d94:	93 07       	cpc	r25, r19
    4d96:	5c f0       	brlt	.+22     	; 0x4dae <_Z13throttleValueh+0x4c>
    4d98:	89 81       	ldd	r24, Y+1	; 0x01
    4d9a:	08 2e       	mov	r0, r24
    4d9c:	00 0c       	add	r0, r0
    4d9e:	99 0b       	sbc	r25, r25
    4da0:	2a 81       	ldd	r18, Y+2	; 0x02
    4da2:	3b 81       	ldd	r19, Y+3	; 0x03
    4da4:	82 17       	cp	r24, r18
    4da6:	93 07       	cpc	r25, r19
    4da8:	24 f4       	brge	.+8      	; 0x4db2 <_Z13throttleValueh+0x50>
    4daa:	c9 01       	movw	r24, r18
    4dac:	02 c0       	rjmp	.+4      	; 0x4db2 <_Z13throttleValueh+0x50>
    4dae:	8c 81       	ldd	r24, Y+4	; 0x04
    4db0:	9d 81       	ldd	r25, Y+5	; 0x05
    4db2:	8a 87       	std	Y+10, r24	; 0x0a
    4db4:	8a 85       	ldd	r24, Y+10	; 0x0a
    4db6:	28 2f       	mov	r18, r24
    4db8:	30 e0       	ldi	r19, 0x00	; 0
    4dba:	40 e0       	ldi	r20, 0x00	; 0
    4dbc:	50 e0       	ldi	r21, 0x00	; 0
    4dbe:	82 ec       	ldi	r24, 0xC2	; 194
    4dc0:	91 e0       	ldi	r25, 0x01	; 1
    4dc2:	a0 e0       	ldi	r26, 0x00	; 0
    4dc4:	b0 e0       	ldi	r27, 0x00	; 0
    4dc6:	bc 01       	movw	r22, r24
    4dc8:	cd 01       	movw	r24, r26
    4dca:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
    4dce:	da 01       	movw	r26, r20
    4dd0:	c9 01       	movw	r24, r18
    4dd2:	bc 01       	movw	r22, r24
    4dd4:	cd 01       	movw	r24, r26
    4dd6:	0e 94 13 73 	call	0xe626	; 0xe626 <__floatsisf>
    4dda:	dc 01       	movw	r26, r24
    4ddc:	cb 01       	movw	r24, r22
    4dde:	8e 83       	std	Y+6, r24	; 0x06
    4de0:	9f 83       	std	Y+7, r25	; 0x07
    4de2:	a8 87       	std	Y+8, r26	; 0x08
    4de4:	b9 87       	std	Y+9, r27	; 0x09
    4de6:	6e 81       	ldd	r22, Y+6	; 0x06
    4de8:	7f 81       	ldd	r23, Y+7	; 0x07
    4dea:	88 85       	ldd	r24, Y+8	; 0x08
    4dec:	99 85       	ldd	r25, Y+9	; 0x09
    4dee:	0e 94 e2 72 	call	0xe5c4	; 0xe5c4 <__fixunssfsi>
    4df2:	dc 01       	movw	r26, r24
    4df4:	cb 01       	movw	r24, r22
    4df6:	2a 96       	adiw	r28, 0x0a	; 10
    4df8:	cd bf       	out	0x3d, r28	; 61
    4dfa:	de bf       	out	0x3e, r29	; 62
    4dfc:	df 91       	pop	r29
    4dfe:	cf 91       	pop	r28
    4e00:	08 95       	ret

00004e02 <_Z11launchEventP2SC>:
    4e02:	cf 93       	push	r28
    4e04:	df 93       	push	r29
    4e06:	00 d0       	rcall	.+0      	; 0x4e08 <_Z11launchEventP2SC+0x6>
    4e08:	1f 92       	push	r1
    4e0a:	cd b7       	in	r28, 0x3d	; 61
    4e0c:	de b7       	in	r29, 0x3e	; 62
    4e0e:	8a 83       	std	Y+2, r24	; 0x02
    4e10:	9b 83       	std	Y+3, r25	; 0x03
    4e12:	8a 81       	ldd	r24, Y+2	; 0x02
    4e14:	9b 81       	ldd	r25, Y+3	; 0x03
    4e16:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <_Z33activateEventUsingCurrentSettingsP2SC>
    4e1a:	89 83       	std	Y+1, r24	; 0x01
    4e1c:	8a 81       	ldd	r24, Y+2	; 0x02
    4e1e:	9b 81       	ldd	r25, Y+3	; 0x03
    4e20:	fc 01       	movw	r30, r24
    4e22:	80 81       	ld	r24, Z
    4e24:	88 23       	and	r24, r24
    4e26:	31 f0       	breq	.+12     	; 0x4e34 <_Z11launchEventP2SC+0x32>
    4e28:	8a 81       	ldd	r24, Y+2	; 0x02
    4e2a:	9b 81       	ldd	r25, Y+3	; 0x03
    4e2c:	fc 01       	movw	r30, r24
    4e2e:	80 81       	ld	r24, Z
    4e30:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
    4e34:	89 81       	ldd	r24, Y+1	; 0x01
    4e36:	88 23       	and	r24, r24
    4e38:	21 f0       	breq	.+8      	; 0x4e42 <_Z11launchEventP2SC+0x40>
    4e3a:	89 81       	ldd	r24, Y+1	; 0x01
    4e3c:	80 93 31 47 	sts	0x4731, r24	; 0x804731 <_ZL17g_last_error_code>
    4e40:	04 c0       	rjmp	.+8      	; 0x4e4a <_Z11launchEventP2SC+0x48>
    4e42:	0e 94 fc 25 	call	0x4bf8	; 0x4bf8 <_Z12eventEnabledv>
    4e46:	80 93 7a 47 	sts	0x477A, r24	; 0x80477a <g_event_enabled>
    4e4a:	89 81       	ldd	r24, Y+1	; 0x01
    4e4c:	23 96       	adiw	r28, 0x03	; 3
    4e4e:	cd bf       	out	0x3d, r28	; 61
    4e50:	de bf       	out	0x3e, r29	; 62
    4e52:	df 91       	pop	r29
    4e54:	cf 91       	pop	r28
    4e56:	08 95       	ret

00004e58 <_Z33activateEventUsingCurrentSettingsP2SC>:
    4e58:	cf 93       	push	r28
    4e5a:	df 93       	push	r29
    4e5c:	cd b7       	in	r28, 0x3d	; 61
    4e5e:	de b7       	in	r29, 0x3e	; 62
    4e60:	63 97       	sbiw	r28, 0x13	; 19
    4e62:	cd bf       	out	0x3d, r28	; 61
    4e64:	de bf       	out	0x3e, r29	; 62
    4e66:	8a 8b       	std	Y+18, r24	; 0x12
    4e68:	9b 8b       	std	Y+19, r25	; 0x13
    4e6a:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    4e6e:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    4e72:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    4e76:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    4e7a:	21 e0       	ldi	r18, 0x01	; 1
    4e7c:	89 2b       	or	r24, r25
    4e7e:	8a 2b       	or	r24, r26
    4e80:	8b 2b       	or	r24, r27
    4e82:	09 f0       	breq	.+2      	; 0x4e86 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    4e84:	20 e0       	ldi	r18, 0x00	; 0
    4e86:	22 23       	and	r18, r18
    4e88:	11 f0       	breq	.+4      	; 0x4e8e <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    4e8a:	8c ec       	ldi	r24, 0xCC	; 204
    4e8c:	1a c2       	rjmp	.+1076   	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4e8e:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    4e92:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    4e96:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    4e9a:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    4e9e:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    4ea2:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    4ea6:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    4eaa:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    4eae:	61 e0       	ldi	r22, 0x01	; 1
    4eb0:	28 17       	cp	r18, r24
    4eb2:	39 07       	cpc	r19, r25
    4eb4:	4a 07       	cpc	r20, r26
    4eb6:	5b 07       	cpc	r21, r27
    4eb8:	08 f4       	brcc	.+2      	; 0x4ebc <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    4eba:	60 e0       	ldi	r22, 0x00	; 0
    4ebc:	66 23       	and	r22, r22
    4ebe:	11 f0       	breq	.+4      	; 0x4ec4 <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    4ec0:	8d ec       	ldi	r24, 0xCD	; 205
    4ec2:	ff c1       	rjmp	.+1022   	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4ec4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4ec8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4ecc:	21 e0       	ldi	r18, 0x01	; 1
    4ece:	89 2b       	or	r24, r25
    4ed0:	09 f0       	breq	.+2      	; 0x4ed4 <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    4ed2:	20 e0       	ldi	r18, 0x00	; 0
    4ed4:	22 23       	and	r18, r18
    4ed6:	11 f0       	breq	.+4      	; 0x4edc <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    4ed8:	8b ec       	ldi	r24, 0xCB	; 203
    4eda:	f3 c1       	rjmp	.+998    	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4edc:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    4ee0:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    4ee4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4ee8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4eec:	28 0f       	add	r18, r24
    4eee:	39 1f       	adc	r19, r25
    4ef0:	80 91 70 47 	lds	r24, 0x4770	; 0x804770 <g_intra_cycle_delay_time>
    4ef4:	90 91 71 47 	lds	r25, 0x4771	; 0x804771 <g_intra_cycle_delay_time+0x1>
    4ef8:	41 e0       	ldi	r20, 0x01	; 1
    4efa:	28 17       	cp	r18, r24
    4efc:	39 07       	cpc	r19, r25
    4efe:	0c f0       	brlt	.+2      	; 0x4f02 <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    4f00:	40 e0       	ldi	r20, 0x00	; 0
    4f02:	44 23       	and	r20, r20
    4f04:	11 f0       	breq	.+4      	; 0x4f0a <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    4f06:	8a ec       	ldi	r24, 0xCA	; 202
    4f08:	dc c1       	rjmp	.+952    	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4f0a:	80 91 44 47 	lds	r24, 0x4744	; 0x804744 <g_messages_text>
    4f0e:	88 23       	and	r24, r24
    4f10:	11 f4       	brne	.+4      	; 0x4f16 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    4f12:	89 ec       	ldi	r24, 0xC9	; 201
    4f14:	d6 c1       	rjmp	.+940    	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4f16:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    4f1a:	81 e0       	ldi	r24, 0x01	; 1
    4f1c:	99 23       	and	r25, r25
    4f1e:	09 f0       	breq	.+2      	; 0x4f22 <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    4f20:	80 e0       	ldi	r24, 0x00	; 0
    4f22:	88 23       	and	r24, r24
    4f24:	11 f0       	breq	.+4      	; 0x4f2a <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    4f26:	88 ec       	ldi	r24, 0xC8	; 200
    4f28:	cc c1       	rjmp	.+920    	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4f2a:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    4f2e:	88 23       	and	r24, r24
    4f30:	91 f1       	breq	.+100    	; 0x4f96 <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    4f32:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4f36:	88 23       	and	r24, r24
    4f38:	31 f0       	breq	.+12     	; 0x4f46 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    4f3a:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    4f3e:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    4f42:	89 2b       	or	r24, r25
    4f44:	11 f4       	brne	.+4      	; 0x4f4a <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    4f46:	81 e0       	ldi	r24, 0x01	; 1
    4f48:	01 c0       	rjmp	.+2      	; 0x4f4c <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    4f4a:	80 e0       	ldi	r24, 0x00	; 0
    4f4c:	88 23       	and	r24, r24
    4f4e:	11 f0       	breq	.+4      	; 0x4f54 <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    4f50:	87 ec       	ldi	r24, 0xC7	; 199
    4f52:	b7 c1       	rjmp	.+878    	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    4f54:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4f58:	88 2f       	mov	r24, r24
    4f5a:	90 e0       	ldi	r25, 0x00	; 0
    4f5c:	bc 01       	movw	r22, r24
    4f5e:	89 e5       	ldi	r24, 0x59	; 89
    4f60:	97 e4       	ldi	r25, 0x47	; 71
    4f62:	0e 94 f0 56 	call	0xade0	; 0xade0 <_Z26timeRequiredToSendStrAtWPMPcj>
    4f66:	8c 50       	subi	r24, 0x0C	; 12
    4f68:	9e 4f       	sbci	r25, 0xFE	; 254
    4f6a:	96 95       	lsr	r25
    4f6c:	87 95       	ror	r24
    4f6e:	96 95       	lsr	r25
    4f70:	87 95       	ror	r24
    4f72:	96 95       	lsr	r25
    4f74:	87 95       	ror	r24
    4f76:	9c 01       	movw	r18, r24
    4f78:	a5 ec       	ldi	r26, 0xC5	; 197
    4f7a:	b0 e2       	ldi	r27, 0x20	; 32
    4f7c:	0e 94 f8 74 	call	0xe9f0	; 0xe9f0 <__umulhisi3>
    4f80:	92 95       	swap	r25
    4f82:	82 95       	swap	r24
    4f84:	8f 70       	andi	r24, 0x0F	; 15
    4f86:	89 27       	eor	r24, r25
    4f88:	9f 70       	andi	r25, 0x0F	; 15
    4f8a:	89 27       	eor	r24, r25
    4f8c:	80 93 6e 47 	sts	0x476E, r24	; 0x80476e <g_time_needed_for_ID>
    4f90:	90 93 6f 47 	sts	0x476F, r25	; 0x80476f <g_time_needed_for_ID+0x1>
    4f94:	04 c0       	rjmp	.+8      	; 0x4f9e <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    4f96:	10 92 6e 47 	sts	0x476E, r1	; 0x80476e <g_time_needed_for_ID>
    4f9a:	10 92 6f 47 	sts	0x476F, r1	; 0x80476f <g_time_needed_for_ID+0x1>
    4f9e:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    4fa2:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    4fa6:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    4faa:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    4fae:	8a 83       	std	Y+2, r24	; 0x02
    4fb0:	9b 83       	std	Y+3, r25	; 0x03
    4fb2:	ac 83       	std	Y+4, r26	; 0x04
    4fb4:	bd 83       	std	Y+5, r27	; 0x05
    4fb6:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    4fba:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    4fbe:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    4fc2:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    4fc6:	61 e0       	ldi	r22, 0x01	; 1
    4fc8:	8a 81       	ldd	r24, Y+2	; 0x02
    4fca:	9b 81       	ldd	r25, Y+3	; 0x03
    4fcc:	ac 81       	ldd	r26, Y+4	; 0x04
    4fce:	bd 81       	ldd	r27, Y+5	; 0x05
    4fd0:	28 17       	cp	r18, r24
    4fd2:	39 07       	cpc	r19, r25
    4fd4:	4a 07       	cpc	r20, r26
    4fd6:	5b 07       	cpc	r21, r27
    4fd8:	08 f0       	brcs	.+2      	; 0x4fdc <_Z33activateEventUsingCurrentSettingsP2SC+0x184>
    4fda:	60 e0       	ldi	r22, 0x00	; 0
    4fdc:	66 23       	and	r22, r22
    4fde:	59 f0       	breq	.+22     	; 0x4ff6 <_Z33activateEventUsingCurrentSettingsP2SC+0x19e>
    4fe0:	8a 89       	ldd	r24, Y+18	; 0x12
    4fe2:	9b 89       	ldd	r25, Y+19	; 0x13
    4fe4:	89 2b       	or	r24, r25
    4fe6:	09 f4       	brne	.+2      	; 0x4fea <_Z33activateEventUsingCurrentSettingsP2SC+0x192>
    4fe8:	6b c1       	rjmp	.+726    	; 0x52c0 <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    4fea:	8a 89       	ldd	r24, Y+18	; 0x12
    4fec:	9b 89       	ldd	r25, Y+19	; 0x13
    4fee:	2a ef       	ldi	r18, 0xFA	; 250
    4ff0:	fc 01       	movw	r30, r24
    4ff2:	20 83       	st	Z, r18
    4ff4:	65 c1       	rjmp	.+714    	; 0x52c0 <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    4ff6:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    4ffa:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    4ffe:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    5002:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    5006:	8a 81       	ldd	r24, Y+2	; 0x02
    5008:	9b 81       	ldd	r25, Y+3	; 0x03
    500a:	ac 81       	ldd	r26, Y+4	; 0x04
    500c:	bd 81       	ldd	r27, Y+5	; 0x05
    500e:	bc 01       	movw	r22, r24
    5010:	cd 01       	movw	r24, r26
    5012:	0e 94 2f 6e 	call	0xdc5e	; 0xdc5e <_Z7timeDifmm>
    5016:	dc 01       	movw	r26, r24
    5018:	cb 01       	movw	r24, r22
    501a:	8e 83       	std	Y+6, r24	; 0x06
    501c:	9f 83       	std	Y+7, r25	; 0x07
    501e:	a8 87       	std	Y+8, r26	; 0x08
    5020:	b9 87       	std	Y+9, r27	; 0x09
    5022:	8e 81       	ldd	r24, Y+6	; 0x06
    5024:	9f 81       	ldd	r25, Y+7	; 0x07
    5026:	a8 85       	ldd	r26, Y+8	; 0x08
    5028:	b9 85       	ldd	r27, Y+9	; 0x09
    502a:	bb 23       	and	r27, r27
    502c:	0c f4       	brge	.+2      	; 0x5030 <_Z33activateEventUsingCurrentSettingsP2SC+0x1d8>
    502e:	34 c1       	rjmp	.+616    	; 0x5298 <_Z33activateEventUsingCurrentSettingsP2SC+0x440>
    5030:	19 82       	std	Y+1, r1	; 0x01
    5032:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5036:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    503a:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    503e:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    5042:	82 0f       	add	r24, r18
    5044:	93 1f       	adc	r25, r19
    5046:	8a 87       	std	Y+10, r24	; 0x0a
    5048:	9b 87       	std	Y+11, r25	; 0x0b
    504a:	8a 85       	ldd	r24, Y+10	; 0x0a
    504c:	9b 85       	ldd	r25, Y+11	; 0x0b
    504e:	9c 01       	movw	r18, r24
    5050:	99 0f       	add	r25, r25
    5052:	44 0b       	sbc	r20, r20
    5054:	55 0b       	sbc	r21, r21
    5056:	8e 81       	ldd	r24, Y+6	; 0x06
    5058:	9f 81       	ldd	r25, Y+7	; 0x07
    505a:	a8 85       	ldd	r26, Y+8	; 0x08
    505c:	b9 85       	ldd	r27, Y+9	; 0x09
    505e:	bc 01       	movw	r22, r24
    5060:	cd 01       	movw	r24, r26
    5062:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodsi4>
    5066:	dc 01       	movw	r26, r24
    5068:	cb 01       	movw	r24, r22
    506a:	8c 87       	std	Y+12, r24	; 0x0c
    506c:	9d 87       	std	Y+13, r25	; 0x0d
    506e:	20 91 70 47 	lds	r18, 0x4770	; 0x804770 <g_intra_cycle_delay_time>
    5072:	30 91 71 47 	lds	r19, 0x4771	; 0x804771 <g_intra_cycle_delay_time+0x1>
    5076:	8c 85       	ldd	r24, Y+12	; 0x0c
    5078:	9d 85       	ldd	r25, Y+13	; 0x0d
    507a:	a9 01       	movw	r20, r18
    507c:	48 1b       	sub	r20, r24
    507e:	59 0b       	sbc	r21, r25
    5080:	ca 01       	movw	r24, r20
    5082:	8e 87       	std	Y+14, r24	; 0x0e
    5084:	9f 87       	std	Y+15, r25	; 0x0f
    5086:	8e 85       	ldd	r24, Y+14	; 0x0e
    5088:	9f 85       	ldd	r25, Y+15	; 0x0f
    508a:	18 16       	cp	r1, r24
    508c:	19 06       	cpc	r1, r25
    508e:	0c f4       	brge	.+2      	; 0x5092 <_Z33activateEventUsingCurrentSettingsP2SC+0x23a>
    5090:	a8 c0       	rjmp	.+336    	; 0x51e2 <_Z33activateEventUsingCurrentSettingsP2SC+0x38a>
    5092:	8e 85       	ldd	r24, Y+14	; 0x0e
    5094:	9f 85       	ldd	r25, Y+15	; 0x0f
    5096:	22 27       	eor	r18, r18
    5098:	33 27       	eor	r19, r19
    509a:	28 1b       	sub	r18, r24
    509c:	39 0b       	sbc	r19, r25
    509e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    50a2:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    50a6:	41 e0       	ldi	r20, 0x01	; 1
    50a8:	28 17       	cp	r18, r24
    50aa:	39 07       	cpc	r19, r25
    50ac:	0c f4       	brge	.+2      	; 0x50b0 <_Z33activateEventUsingCurrentSettingsP2SC+0x258>
    50ae:	40 e0       	ldi	r20, 0x00	; 0
    50b0:	44 23       	and	r20, r20
    50b2:	09 f4       	brne	.+2      	; 0x50b6 <_Z33activateEventUsingCurrentSettingsP2SC+0x25e>
    50b4:	41 c0       	rjmp	.+130    	; 0x5138 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e0>
    50b6:	2a 85       	ldd	r18, Y+10	; 0x0a
    50b8:	3b 85       	ldd	r19, Y+11	; 0x0b
    50ba:	8e 85       	ldd	r24, Y+14	; 0x0e
    50bc:	9f 85       	ldd	r25, Y+15	; 0x0f
    50be:	82 0f       	add	r24, r18
    50c0:	93 1f       	adc	r25, r19
    50c2:	91 95       	neg	r25
    50c4:	81 95       	neg	r24
    50c6:	91 09       	sbc	r25, r1
    50c8:	09 2e       	mov	r0, r25
    50ca:	00 0c       	add	r0, r0
    50cc:	aa 0b       	sbc	r26, r26
    50ce:	bb 0b       	sbc	r27, r27
    50d0:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    50d4:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    50d8:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    50dc:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    50e0:	8a 89       	ldd	r24, Y+18	; 0x12
    50e2:	9b 89       	ldd	r25, Y+19	; 0x13
    50e4:	89 2b       	or	r24, r25
    50e6:	29 f0       	breq	.+10     	; 0x50f2 <_Z33activateEventUsingCurrentSettingsP2SC+0x29a>
    50e8:	8a 89       	ldd	r24, Y+18	; 0x12
    50ea:	9b 89       	ldd	r25, Y+19	; 0x13
    50ec:	2e ef       	ldi	r18, 0xFE	; 254
    50ee:	fc 01       	movw	r30, r24
    50f0:	20 83       	st	Z, r18
    50f2:	90 91 7a 47 	lds	r25, 0x477A	; 0x80477a <g_event_enabled>
    50f6:	81 e0       	ldi	r24, 0x01	; 1
    50f8:	89 27       	eor	r24, r25
    50fa:	88 23       	and	r24, r24
    50fc:	09 f4       	brne	.+2      	; 0x5100 <_Z33activateEventUsingCurrentSettingsP2SC+0x2a8>
    50fe:	a6 c0       	rjmp	.+332    	; 0x524c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5100:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5104:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5108:	9c 01       	movw	r18, r24
    510a:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    510e:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    5112:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    5116:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    511a:	28 1b       	sub	r18, r24
    511c:	39 0b       	sbc	r19, r25
    511e:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    5122:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    5126:	a9 01       	movw	r20, r18
    5128:	48 1b       	sub	r20, r24
    512a:	59 0b       	sbc	r21, r25
    512c:	ca 01       	movw	r24, r20
    512e:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    5132:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    5136:	8a c0       	rjmp	.+276    	; 0x524c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5138:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    513c:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5140:	8e 85       	ldd	r24, Y+14	; 0x0e
    5142:	9f 85       	ldd	r25, Y+15	; 0x0f
    5144:	82 0f       	add	r24, r18
    5146:	93 1f       	adc	r25, r19
    5148:	09 2e       	mov	r0, r25
    514a:	00 0c       	add	r0, r0
    514c:	aa 0b       	sbc	r26, r26
    514e:	bb 0b       	sbc	r27, r27
    5150:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    5154:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    5158:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    515c:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    5160:	81 e0       	ldi	r24, 0x01	; 1
    5162:	89 83       	std	Y+1, r24	; 0x01
    5164:	8a 89       	ldd	r24, Y+18	; 0x12
    5166:	9b 89       	ldd	r25, Y+19	; 0x13
    5168:	89 2b       	or	r24, r25
    516a:	29 f0       	breq	.+10     	; 0x5176 <_Z33activateEventUsingCurrentSettingsP2SC+0x31e>
    516c:	8a 89       	ldd	r24, Y+18	; 0x12
    516e:	9b 89       	ldd	r25, Y+19	; 0x13
    5170:	2d ef       	ldi	r18, 0xFD	; 253
    5172:	fc 01       	movw	r30, r24
    5174:	20 83       	st	Z, r18
    5176:	90 91 7a 47 	lds	r25, 0x477A	; 0x80477a <g_event_enabled>
    517a:	81 e0       	ldi	r24, 0x01	; 1
    517c:	89 27       	eor	r24, r25
    517e:	88 23       	and	r24, r24
    5180:	09 f4       	brne	.+2      	; 0x5184 <_Z33activateEventUsingCurrentSettingsP2SC+0x32c>
    5182:	64 c0       	rjmp	.+200    	; 0x524c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5184:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    5188:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    518c:	9c 01       	movw	r18, r24
    518e:	40 e0       	ldi	r20, 0x00	; 0
    5190:	50 e0       	ldi	r21, 0x00	; 0
    5192:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    5196:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    519a:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    519e:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    51a2:	61 e0       	ldi	r22, 0x01	; 1
    51a4:	28 17       	cp	r18, r24
    51a6:	39 07       	cpc	r19, r25
    51a8:	4a 07       	cpc	r20, r26
    51aa:	5b 07       	cpc	r21, r27
    51ac:	0c f0       	brlt	.+2      	; 0x51b0 <_Z33activateEventUsingCurrentSettingsP2SC+0x358>
    51ae:	60 e0       	ldi	r22, 0x00	; 0
    51b0:	66 23       	and	r22, r22
    51b2:	09 f4       	brne	.+2      	; 0x51b6 <_Z33activateEventUsingCurrentSettingsP2SC+0x35e>
    51b4:	4b c0       	rjmp	.+150    	; 0x524c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    51b6:	80 91 3a 47 	lds	r24, 0x473A	; 0x80473a <_ZL12g_on_the_air>
    51ba:	90 91 3b 47 	lds	r25, 0x473B	; 0x80473b <_ZL12g_on_the_air+0x1>
    51be:	a0 91 3c 47 	lds	r26, 0x473C	; 0x80473c <_ZL12g_on_the_air+0x2>
    51c2:	b0 91 3d 47 	lds	r27, 0x473D	; 0x80473d <_ZL12g_on_the_air+0x3>
    51c6:	9c 01       	movw	r18, r24
    51c8:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    51cc:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    51d0:	a9 01       	movw	r20, r18
    51d2:	48 1b       	sub	r20, r24
    51d4:	59 0b       	sbc	r21, r25
    51d6:	ca 01       	movw	r24, r20
    51d8:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    51dc:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    51e0:	35 c0       	rjmp	.+106    	; 0x524c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    51e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    51e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    51e6:	91 95       	neg	r25
    51e8:	81 95       	neg	r24
    51ea:	91 09       	sbc	r25, r1
    51ec:	09 2e       	mov	r0, r25
    51ee:	00 0c       	add	r0, r0
    51f0:	aa 0b       	sbc	r26, r26
    51f2:	bb 0b       	sbc	r27, r27
    51f4:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    51f8:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    51fc:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    5200:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
    5204:	8a 89       	ldd	r24, Y+18	; 0x12
    5206:	9b 89       	ldd	r25, Y+19	; 0x13
    5208:	89 2b       	or	r24, r25
    520a:	29 f0       	breq	.+10     	; 0x5216 <_Z33activateEventUsingCurrentSettingsP2SC+0x3be>
    520c:	8a 89       	ldd	r24, Y+18	; 0x12
    520e:	9b 89       	ldd	r25, Y+19	; 0x13
    5210:	2e ef       	ldi	r18, 0xFE	; 254
    5212:	fc 01       	movw	r30, r24
    5214:	20 83       	st	Z, r18
    5216:	90 91 7a 47 	lds	r25, 0x477A	; 0x80477a <g_event_enabled>
    521a:	81 e0       	ldi	r24, 0x01	; 1
    521c:	89 27       	eor	r24, r25
    521e:	88 23       	and	r24, r24
    5220:	a9 f0       	breq	.+42     	; 0x524c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5222:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    5226:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    522a:	8e 85       	ldd	r24, Y+14	; 0x0e
    522c:	9f 85       	ldd	r25, Y+15	; 0x0f
    522e:	82 0f       	add	r24, r18
    5230:	93 1f       	adc	r25, r19
    5232:	9c 01       	movw	r18, r24
    5234:	80 91 6e 47 	lds	r24, 0x476E	; 0x80476e <g_time_needed_for_ID>
    5238:	90 91 6f 47 	lds	r25, 0x476F	; 0x80476f <g_time_needed_for_ID+0x1>
    523c:	a9 01       	movw	r20, r18
    523e:	48 1b       	sub	r20, r24
    5240:	59 0b       	sbc	r21, r25
    5242:	ca 01       	movw	r24, r20
    5244:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    5248:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
    524c:	89 81       	ldd	r24, Y+1	; 0x01
    524e:	88 23       	and	r24, r24
    5250:	e1 f0       	breq	.+56     	; 0x528a <_Z33activateEventUsingCurrentSettingsP2SC+0x432>
    5252:	80 91 7a 47 	lds	r24, 0x477A	; 0x80477a <g_event_enabled>
    5256:	88 8b       	std	Y+16, r24	; 0x10
    5258:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>
    525c:	81 e0       	ldi	r24, 0x01	; 1
    525e:	89 8b       	std	Y+17, r24	; 0x11
    5260:	ce 01       	movw	r24, r28
    5262:	41 96       	adiw	r24, 0x11	; 17
    5264:	40 e0       	ldi	r20, 0x00	; 0
    5266:	50 e0       	ldi	r21, 0x00	; 0
    5268:	bc 01       	movw	r22, r24
    526a:	84 e4       	ldi	r24, 0x44	; 68
    526c:	97 e4       	ldi	r25, 0x47	; 71
    526e:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
    5272:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5276:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    527a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    527e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5282:	88 89       	ldd	r24, Y+16	; 0x10
    5284:	80 93 7a 47 	sts	0x477A, r24	; 0x80477a <g_event_enabled>
    5288:	03 c0       	rjmp	.+6      	; 0x5290 <_Z33activateEventUsingCurrentSettingsP2SC+0x438>
    528a:	80 e0       	ldi	r24, 0x00	; 0
    528c:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
    5290:	81 e0       	ldi	r24, 0x01	; 1
    5292:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <g_event_commenced>
    5296:	0c c0       	rjmp	.+24     	; 0x52b0 <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    5298:	8a 89       	ldd	r24, Y+18	; 0x12
    529a:	9b 89       	ldd	r25, Y+19	; 0x13
    529c:	89 2b       	or	r24, r25
    529e:	29 f0       	breq	.+10     	; 0x52aa <_Z33activateEventUsingCurrentSettingsP2SC+0x452>
    52a0:	8a 89       	ldd	r24, Y+18	; 0x12
    52a2:	9b 89       	ldd	r25, Y+19	; 0x13
    52a4:	2f ef       	ldi	r18, 0xFF	; 255
    52a6:	fc 01       	movw	r30, r24
    52a8:	20 83       	st	Z, r18
    52aa:	80 e0       	ldi	r24, 0x00	; 0
    52ac:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
    52b0:	10 92 7d 47 	sts	0x477D, r1	; 0x80477d <g_waiting_for_next_event>
    52b4:	8a e5       	ldi	r24, 0x5A	; 90
    52b6:	90 e0       	ldi	r25, 0x00	; 0
    52b8:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    52bc:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    52c0:	80 e0       	ldi	r24, 0x00	; 0
    52c2:	63 96       	adiw	r28, 0x13	; 19
    52c4:	cd bf       	out	0x3d, r28	; 61
    52c6:	de bf       	out	0x3e, r29	; 62
    52c8:	df 91       	pop	r29
    52ca:	cf 91       	pop	r28
    52cc:	08 95       	ret

000052ce <_Z8rtc_initv>:
    52ce:	cf 93       	push	r28
    52d0:	df 93       	push	r29
    52d2:	cd b7       	in	r28, 0x3d	; 61
    52d4:	de b7       	in	r29, 0x3e	; 62
    52d6:	61 e0       	ldi	r22, 0x01	; 1
    52d8:	83 e0       	ldi	r24, 0x03	; 3
    52da:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <PORTC_set_pin_pull_mode>
    52de:	61 e0       	ldi	r22, 0x01	; 1
    52e0:	82 e0       	ldi	r24, 0x02	; 2
    52e2:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <PORTC_set_pin_pull_mode>
    52e6:	0e 94 bd 3a 	call	0x757a	; 0x757a <ds3231_init>
    52ea:	81 e0       	ldi	r24, 0x01	; 1
    52ec:	0e 94 ac 40 	call	0x8158	; 0x8158 <ds3231_1s_sqw>
    52f0:	88 23       	and	r24, r24
    52f2:	11 f0       	breq	.+4      	; 0x52f8 <_Z8rtc_initv+0x2a>
    52f4:	8c ef       	ldi	r24, 0xFC	; 252
    52f6:	01 c0       	rjmp	.+2      	; 0x52fa <_Z8rtc_initv+0x2c>
    52f8:	80 e0       	ldi	r24, 0x00	; 0
    52fa:	df 91       	pop	r29
    52fc:	cf 91       	pop	r28
    52fe:	08 95       	ret

00005300 <_Z18antennaIsConnectedv>:
    5300:	cf 93       	push	r28
    5302:	df 93       	push	r29
    5304:	1f 92       	push	r1
    5306:	cd b7       	in	r28, 0x3d	; 61
    5308:	de b7       	in	r29, 0x3e	; 62
    530a:	81 e0       	ldi	r24, 0x01	; 1
    530c:	0e 94 28 10 	call	0x2050	; 0x2050 <PORTD_get_pin_level>
    5310:	89 83       	std	Y+1, r24	; 0x01
    5312:	99 81       	ldd	r25, Y+1	; 0x01
    5314:	81 e0       	ldi	r24, 0x01	; 1
    5316:	89 27       	eor	r24, r25
    5318:	0f 90       	pop	r0
    531a:	df 91       	pop	r29
    531c:	cf 91       	pop	r28
    531e:	08 95       	ret

00005320 <_Z12suspendEventv>:

void suspendEvent()
{
    5320:	cf 93       	push	r28
    5322:	df 93       	push	r29
    5324:	cd b7       	in	r28, 0x3d	; 61
    5326:	de b7       	in	r29, 0x3e	; 62
	
}
    5328:	00 00       	nop
    532a:	df 91       	pop	r29
    532c:	cf 91       	pop	r28
    532e:	08 95       	ret

00005330 <_Z13startEventNow19EventActionSource_t>:


void startEventNow(EventActionSource_t activationSource)
{
    5330:	cf 93       	push	r28
    5332:	df 93       	push	r29
    5334:	00 d0       	rcall	.+0      	; 0x5336 <_Z13startEventNow19EventActionSource_t+0x6>
    5336:	cd b7       	in	r28, 0x3d	; 61
    5338:	de b7       	in	r29, 0x3e	; 62
    533a:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    533c:	0e 94 76 30 	call	0x60ec	; 0x60ec <_Z23clockConfigurationCheckv>
    5340:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == POWER_UP)
    5342:	8a 81       	ldd	r24, Y+2	; 0x02
    5344:	88 23       	and	r24, r24
    5346:	79 f4       	brne	.+30     	; 0x5366 <_Z13startEventNow19EventActionSource_t+0x36>
	{
		if(conf == CONFIGURATION_ERROR)
    5348:	89 81       	ldd	r24, Y+1	; 0x01
    534a:	82 30       	cpi	r24, 0x02	; 2
    534c:	31 f4       	brne	.+12     	; 0x535a <_Z13startEventNow19EventActionSource_t+0x2a>
		{
			setupForFox(NULL, START_NOTHING);
    534e:	60 e0       	ldi	r22, 0x00	; 0
    5350:	80 e0       	ldi	r24, 0x00	; 0
    5352:	90 e0       	ldi	r25, 0x00	; 0
    5354:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5358:	47 c0       	rjmp	.+142    	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    535a:	63 e0       	ldi	r22, 0x03	; 3
    535c:	80 e0       	ldi	r24, 0x00	; 0
    535e:	90 e0       	ldi	r25, 0x00	; 0
    5360:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5364:	41 c0       	rjmp	.+130    	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
		}
	}
	else if(activationSource == PROGRAMMATIC)
    5366:	8a 81       	ldd	r24, Y+2	; 0x02
    5368:	82 30       	cpi	r24, 0x02	; 2
    536a:	f1 f4       	brne	.+60     	; 0x53a8 <_Z13startEventNow19EventActionSource_t+0x78>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
    536c:	89 81       	ldd	r24, Y+1	; 0x01
    536e:	82 30       	cpi	r24, 0x02	; 2
    5370:	31 f4       	brne	.+12     	; 0x537e <_Z13startEventNow19EventActionSource_t+0x4e>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5372:	61 e0       	ldi	r22, 0x01	; 1
    5374:	80 e0       	ldi	r24, 0x00	; 0
    5376:	90 e0       	ldi	r25, 0x00	; 0
    5378:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    537c:	35 c0       	rjmp	.+106    	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else if((conf == WAITING_FOR_START) || (conf == SCHEDULED_EVENT_WILL_NEVER_RUN) || (conf == SCHEDULED_EVENT_DID_NOT_START)) /* Start immediately */
    537e:	89 81       	ldd	r24, Y+1	; 0x01
    5380:	81 30       	cpi	r24, 0x01	; 1
    5382:	31 f0       	breq	.+12     	; 0x5390 <_Z13startEventNow19EventActionSource_t+0x60>
    5384:	89 81       	ldd	r24, Y+1	; 0x01
    5386:	84 30       	cpi	r24, 0x04	; 4
    5388:	19 f0       	breq	.+6      	; 0x5390 <_Z13startEventNow19EventActionSource_t+0x60>
    538a:	89 81       	ldd	r24, Y+1	; 0x01
    538c:	83 30       	cpi	r24, 0x03	; 3
    538e:	31 f4       	brne	.+12     	; 0x539c <_Z13startEventNow19EventActionSource_t+0x6c>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5390:	61 e0       	ldi	r22, 0x01	; 1
    5392:	80 e0       	ldi	r24, 0x00	; 0
    5394:	90 e0       	ldi	r25, 0x00	; 0
    5396:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    539a:	26 c0       	rjmp	.+76     	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /*if((conf == EVENT_IN_PROGRESS) */
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
    539c:	63 e0       	ldi	r22, 0x03	; 3
    539e:	80 e0       	ldi	r24, 0x00	; 0
    53a0:	90 e0       	ldi	r25, 0x00	; 0
    53a2:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    53a6:	20 c0       	rjmp	.+64     	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
		}
	}
	else                                                                                                                            /* PUSHBUTTON */
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* No scheduled event */
    53a8:	89 81       	ldd	r24, Y+1	; 0x01
    53aa:	82 30       	cpi	r24, 0x02	; 2
    53ac:	31 f4       	brne	.+12     	; 0x53ba <_Z13startEventNow19EventActionSource_t+0x8a>
		{
			setupForFox(NULL, START_EVENT_NOW);
    53ae:	61 e0       	ldi	r22, 0x01	; 1
    53b0:	80 e0       	ldi	r24, 0x00	; 0
    53b2:	90 e0       	ldi	r25, 0x00	; 0
    53b4:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    53b8:	17 c0       	rjmp	.+46     	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /* if(buttonActivated) */
		{
			if(conf == WAITING_FOR_START)
    53ba:	89 81       	ldd	r24, Y+1	; 0x01
    53bc:	81 30       	cpi	r24, 0x01	; 1
    53be:	31 f4       	brne	.+12     	; 0x53cc <_Z13startEventNow19EventActionSource_t+0x9c>
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
    53c0:	62 e0       	ldi	r22, 0x02	; 2
    53c2:	80 e0       	ldi	r24, 0x00	; 0
    53c4:	90 e0       	ldi	r25, 0x00	; 0
    53c6:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    53ca:	0e c0       	rjmp	.+28     	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			if(conf == WAITING_FOR_START)
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
			}
			else if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    53cc:	89 81       	ldd	r24, Y+1	; 0x01
    53ce:	84 30       	cpi	r24, 0x04	; 4
    53d0:	31 f4       	brne	.+12     	; 0x53de <_Z13startEventNow19EventActionSource_t+0xae>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
    53d2:	63 e0       	ldi	r22, 0x03	; 3
    53d4:	80 e0       	ldi	r24, 0x00	; 0
    53d6:	90 e0       	ldi	r25, 0x00	; 0
    53d8:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    53dc:	05 c0       	rjmp	.+10     	; 0x53e8 <_Z13startEventNow19EventActionSource_t+0xb8>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
			}
			else                                                                                                                    /* Event should be running now */
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* start the running event */
    53de:	63 e0       	ldi	r22, 0x03	; 3
    53e0:	80 e0       	ldi	r24, 0x00	; 0
    53e2:	90 e0       	ldi	r25, 0x00	; 0
    53e4:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    53e8:	00 00       	nop
    53ea:	0f 90       	pop	r0
    53ec:	0f 90       	pop	r0
    53ee:	df 91       	pop	r29
    53f0:	cf 91       	pop	r28
    53f2:	08 95       	ret

000053f4 <_Z12stopEventNow19EventActionSource_t>:

void stopEventNow(EventActionSource_t activationSource)
{
    53f4:	cf 93       	push	r28
    53f6:	df 93       	push	r29
    53f8:	00 d0       	rcall	.+0      	; 0x53fa <_Z12stopEventNow19EventActionSource_t+0x6>
    53fa:	cd b7       	in	r28, 0x3d	; 61
    53fc:	de b7       	in	r29, 0x3e	; 62
    53fe:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    5400:	0e 94 76 30 	call	0x60ec	; 0x60ec <_Z23clockConfigurationCheckv>
    5404:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == PROGRAMMATIC)
    5406:	8a 81       	ldd	r24, Y+2	; 0x02
    5408:	82 30       	cpi	r24, 0x02	; 2
    540a:	31 f4       	brne	.+12     	; 0x5418 <_Z12stopEventNow19EventActionSource_t+0x24>
	{
		setupForFox(NULL, START_NOTHING);
    540c:	60 e0       	ldi	r22, 0x00	; 0
    540e:	80 e0       	ldi	r24, 0x00	; 0
    5410:	90 e0       	ldi	r25, 0x00	; 0
    5412:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5416:	16 c0       	rjmp	.+44     	; 0x5444 <_Z12stopEventNow19EventActionSource_t+0x50>
	{
		setupForFox(NULL, START_NOTHING);
	}
	else    /* if(activationSource == PUSHBUTTON) */
	{
		if(conf == WAITING_FOR_START)
    5418:	89 81       	ldd	r24, Y+1	; 0x01
    541a:	81 30       	cpi	r24, 0x01	; 1
    541c:	29 f4       	brne	.+10     	; 0x5428 <_Z12stopEventNow19EventActionSource_t+0x34>
		{
			setupForFox(NULL, START_TRANSMISSIONS_NOW);
    541e:	62 e0       	ldi	r22, 0x02	; 2
    5420:	80 e0       	ldi	r24, 0x00	; 0
    5422:	90 e0       	ldi	r25, 0x00	; 0
    5424:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
		}
		if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    5428:	89 81       	ldd	r24, Y+1	; 0x01
    542a:	84 30       	cpi	r24, 0x04	; 4
    542c:	31 f4       	brne	.+12     	; 0x543a <_Z12stopEventNow19EventActionSource_t+0x46>
		{
			setupForFox(NULL, START_NOTHING);
    542e:	60 e0       	ldi	r22, 0x00	; 0
    5430:	80 e0       	ldi	r24, 0x00	; 0
    5432:	90 e0       	ldi	r25, 0x00	; 0
    5434:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5438:	05 c0       	rjmp	.+10     	; 0x5444 <_Z12stopEventNow19EventActionSource_t+0x50>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else    /*if(conf == CONFIGURATION_ERROR) */
		{
			setupForFox(NULL, START_NOTHING);
    543a:	60 e0       	ldi	r22, 0x00	; 0
    543c:	80 e0       	ldi	r24, 0x00	; 0
    543e:	90 e0       	ldi	r25, 0x00	; 0
    5440:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5444:	00 00       	nop
    5446:	0f 90       	pop	r0
    5448:	0f 90       	pop	r0
    544a:	df 91       	pop	r29
    544c:	cf 91       	pop	r28
    544e:	08 95       	ret

00005450 <_Z18startEventUsingRTCv>:

void startEventUsingRTC(void)
{
    5450:	ef 92       	push	r14
    5452:	ff 92       	push	r15
    5454:	0f 93       	push	r16
    5456:	1f 93       	push	r17
    5458:	cf 93       	push	r28
    545a:	df 93       	push	r29
    545c:	1f 92       	push	r1
    545e:	cd b7       	in	r28, 0x3d	; 61
    5460:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    5462:	80 e0       	ldi	r24, 0x00	; 0
    5464:	90 e0       	ldi	r25, 0x00	; 0
    5466:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    546a:	dc 01       	movw	r26, r24
    546c:	cb 01       	movw	r24, r22
    546e:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    5472:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    5476:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    547a:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>
	ConfigurationState_t state = clockConfigurationCheck();
    547e:	0e 94 76 30 	call	0x60ec	; 0x60ec <_Z23clockConfigurationCheckv>
    5482:	89 83       	std	Y+1, r24	; 0x01

	if(state != CONFIGURATION_ERROR)
    5484:	89 81       	ldd	r24, Y+1	; 0x01
    5486:	82 30       	cpi	r24, 0x02	; 2
    5488:	09 f4       	brne	.+2      	; 0x548c <_Z18startEventUsingRTCv+0x3c>
    548a:	6c c0       	rjmp	.+216    	; 0x5564 <_Z18startEventUsingRTCv+0x114>
	{
		setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    548c:	63 e0       	ldi	r22, 0x03	; 3
    548e:	80 e0       	ldi	r24, 0x00	; 0
    5490:	90 e0       	ldi	r25, 0x00	; 0
    5492:	0e 94 bd 2a 	call	0x557a	; 0x557a <_Z11setupForFoxP5Fox_t13EventAction_t>
		reportTimeTill(g_current_epoch, g_event_start_epoch, "Starts in: ", "In progress\n");
    5496:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    549a:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    549e:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    54a2:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    54a6:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    54aa:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    54ae:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    54b2:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    54b6:	0f 2e       	mov	r0, r31
    54b8:	f1 e2       	ldi	r31, 0x21	; 33
    54ba:	ef 2e       	mov	r14, r31
    54bc:	f1 e4       	ldi	r31, 0x41	; 65
    54be:	ff 2e       	mov	r15, r31
    54c0:	f0 2d       	mov	r31, r0
    54c2:	0e e2       	ldi	r16, 0x2E	; 46
    54c4:	11 e4       	ldi	r17, 0x41	; 65
    54c6:	bc 01       	movw	r22, r24
    54c8:	cd 01       	movw	r24, r26
    54ca:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_Z14reportTimeTillmmPKcS0_>

		if(g_event_start_epoch < g_current_epoch)
    54ce:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    54d2:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    54d6:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    54da:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    54de:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    54e2:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    54e6:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    54ea:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    54ee:	61 e0       	ldi	r22, 0x01	; 1
    54f0:	28 17       	cp	r18, r24
    54f2:	39 07       	cpc	r19, r25
    54f4:	4a 07       	cpc	r20, r26
    54f6:	5b 07       	cpc	r21, r27
    54f8:	08 f0       	brcs	.+2      	; 0x54fc <_Z18startEventUsingRTCv+0xac>
    54fa:	60 e0       	ldi	r22, 0x00	; 0
    54fc:	66 23       	and	r22, r22
    54fe:	c9 f0       	breq	.+50     	; 0x5532 <_Z18startEventUsingRTCv+0xe2>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
    5500:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    5504:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    5508:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    550c:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    5510:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    5514:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    5518:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    551c:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    5520:	e1 2c       	mov	r14, r1
    5522:	f1 2c       	mov	r15, r1
    5524:	02 e4       	ldi	r16, 0x42	; 66
    5526:	11 e4       	ldi	r17, 0x41	; 65
    5528:	bc 01       	movw	r22, r24
    552a:	cd 01       	movw	r24, r26
    552c:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5530:	1b c0       	rjmp	.+54     	; 0x5568 <_Z18startEventUsingRTCv+0x118>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
		}
		else
		{
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
    5532:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    5536:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    553a:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    553e:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    5542:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    5546:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    554a:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    554e:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    5552:	e1 2c       	mov	r14, r1
    5554:	f1 2c       	mov	r15, r1
    5556:	0a e3       	ldi	r16, 0x3A	; 58
    5558:	11 e4       	ldi	r17, 0x41	; 65
    555a:	bc 01       	movw	r22, r24
    555c:	cd 01       	movw	r24, r26
    555e:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5562:	02 c0       	rjmp	.+4      	; 0x5568 <_Z18startEventUsingRTCv+0x118>
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
		}
	}
	else
	{
		reportConfigErrors();
    5564:	0e 94 0d 31 	call	0x621a	; 0x621a <_Z18reportConfigErrorsv>
	}
}
    5568:	00 00       	nop
    556a:	0f 90       	pop	r0
    556c:	df 91       	pop	r29
    556e:	cf 91       	pop	r28
    5570:	1f 91       	pop	r17
    5572:	0f 91       	pop	r16
    5574:	ff 90       	pop	r15
    5576:	ef 90       	pop	r14
    5578:	08 95       	ret

0000557a <_Z11setupForFoxP5Fox_t13EventAction_t>:



void setupForFox(Fox_t* fox, EventAction_t action)
{
    557a:	cf 93       	push	r28
    557c:	df 93       	push	r29
    557e:	cd b7       	in	r28, 0x3d	; 61
    5580:	de b7       	in	r29, 0x3e	; 62
    5582:	2c 97       	sbiw	r28, 0x0c	; 12
    5584:	cd bf       	out	0x3d, r28	; 61
    5586:	de bf       	out	0x3e, r29	; 62
    5588:	8a 87       	std	Y+10, r24	; 0x0a
    558a:	9b 87       	std	Y+11, r25	; 0x0b
    558c:	6c 87       	std	Y+12, r22	; 0x0c
	bool patternNotSet = true;
    558e:	81 e0       	ldi	r24, 0x01	; 1
    5590:	89 83       	std	Y+1, r24	; 0x01
	
	if(fox)
    5592:	8a 85       	ldd	r24, Y+10	; 0x0a
    5594:	9b 85       	ldd	r25, Y+11	; 0x0b
    5596:	89 2b       	or	r24, r25
    5598:	61 f0       	breq	.+24     	; 0x55b2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
	{
		if(*fox != INVALID_FOX)
    559a:	8a 85       	ldd	r24, Y+10	; 0x0a
    559c:	9b 85       	ldd	r25, Y+11	; 0x0b
    559e:	fc 01       	movw	r30, r24
    55a0:	80 81       	ld	r24, Z
    55a2:	82 31       	cpi	r24, 0x12	; 18
    55a4:	31 f0       	breq	.+12     	; 0x55b2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
		{
			g_fox = *fox;
    55a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    55a8:	9b 85       	ldd	r25, Y+11	; 0x0b
    55aa:	fc 01       	movw	r30, r24
    55ac:	80 81       	ld	r24, Z
    55ae:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <g_fox>
		}
	}

	g_event_enabled = false;
    55b2:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>
	g_event_commenced = false;
    55b6:	10 92 7b 47 	sts	0x477B, r1	; 0x80477b <g_event_commenced>
	LED_set_RED_level(OFF);
    55ba:	80 e0       	ldi	r24, 0x00	; 0
    55bc:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
 	g_current_epoch = ds3231_get_epoch(null);
    55c0:	80 e0       	ldi	r24, 0x00	; 0
    55c2:	90 e0       	ldi	r25, 0x00	; 0
    55c4:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    55c8:	dc 01       	movw	r26, r24
    55ca:	cb 01       	movw	r24, r22
    55cc:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    55d0:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    55d4:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    55d8:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>

	switch(g_fox)
    55dc:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    55e0:	88 2f       	mov	r24, r24
    55e2:	90 e0       	ldi	r25, 0x00	; 0
    55e4:	09 2e       	mov	r0, r25
    55e6:	00 0c       	add	r0, r0
    55e8:	aa 0b       	sbc	r26, r26
    55ea:	bb 0b       	sbc	r27, r27
    55ec:	41 e0       	ldi	r20, 0x01	; 1
    55ee:	50 e0       	ldi	r21, 0x00	; 0
    55f0:	20 e1       	ldi	r18, 0x10	; 16
    55f2:	30 e0       	ldi	r19, 0x00	; 0
    55f4:	84 1b       	sub	r24, r20
    55f6:	95 0b       	sbc	r25, r21
    55f8:	28 17       	cp	r18, r24
    55fa:	39 07       	cpc	r19, r25
    55fc:	08 f4       	brcc	.+2      	; 0x5600 <_Z11setupForFoxP5Fox_t13EventAction_t+0x86>
    55fe:	a1 c1       	rjmp	.+834    	; 0x5942 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c8>
    5600:	8c 58       	subi	r24, 0x8C	; 140
    5602:	9f 4f       	sbci	r25, 0xFF	; 255
    5604:	fc 01       	movw	r30, r24
    5606:	0c 94 ef 74 	jmp	0xe9de	; 0xe9de <__tablejump2__>
	{
		case FOX_1:
		{
			if(patternNotSet)
    560a:	89 81       	ldd	r24, Y+1	; 0x01
    560c:	88 23       	and	r24, r24
    560e:	89 f0       	breq	.+34     	; 0x5632 <_Z11setupForFoxP5Fox_t13EventAction_t+0xb8>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    5610:	8d e4       	ldi	r24, 0x4D	; 77
    5612:	9f e4       	ldi	r25, 0x4F	; 79
    5614:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    5618:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    561c:	85 e4       	ldi	r24, 0x45	; 69
    561e:	90 e0       	ldi	r25, 0x00	; 0
    5620:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <g_messages_text+0x2>
    5624:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <g_messages_text+0x3>
				patternNotSet = false;
    5628:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    562a:	10 92 70 47 	sts	0x4770, r1	; 0x804770 <g_intra_cycle_delay_time>
    562e:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    5632:	89 81       	ldd	r24, Y+1	; 0x01
    5634:	88 23       	and	r24, r24
    5636:	99 f0       	breq	.+38     	; 0x565e <_Z11setupForFoxP5Fox_t13EventAction_t+0xe4>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    5638:	8d e4       	ldi	r24, 0x4D	; 77
    563a:	9f e4       	ldi	r25, 0x4F	; 79
    563c:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    5640:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    5644:	89 e4       	ldi	r24, 0x49	; 73
    5646:	90 e0       	ldi	r25, 0x00	; 0
    5648:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <g_messages_text+0x2>
    564c:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <g_messages_text+0x3>
				patternNotSet = false;
    5650:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 60;
    5652:	8c e3       	ldi	r24, 0x3C	; 60
    5654:	90 e0       	ldi	r25, 0x00	; 0
    5656:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    565a:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    565e:	89 81       	ldd	r24, Y+1	; 0x01
    5660:	88 23       	and	r24, r24
    5662:	99 f0       	breq	.+38     	; 0x568a <_Z11setupForFoxP5Fox_t13EventAction_t+0x110>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    5664:	8d e4       	ldi	r24, 0x4D	; 77
    5666:	9f e4       	ldi	r25, 0x4F	; 79
    5668:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    566c:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    5670:	83 e5       	ldi	r24, 0x53	; 83
    5672:	90 e0       	ldi	r25, 0x00	; 0
    5674:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <g_messages_text+0x2>
    5678:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <g_messages_text+0x3>
				patternNotSet = false;
    567c:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 120;
    567e:	88 e7       	ldi	r24, 0x78	; 120
    5680:	90 e0       	ldi	r25, 0x00	; 0
    5682:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    5686:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    568a:	89 81       	ldd	r24, Y+1	; 0x01
    568c:	88 23       	and	r24, r24
    568e:	99 f0       	breq	.+38     	; 0x56b6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x13c>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    5690:	8d e4       	ldi	r24, 0x4D	; 77
    5692:	9f e4       	ldi	r25, 0x4F	; 79
    5694:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    5698:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    569c:	88 e4       	ldi	r24, 0x48	; 72
    569e:	90 e0       	ldi	r25, 0x00	; 0
    56a0:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <g_messages_text+0x2>
    56a4:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <g_messages_text+0x3>
				patternNotSet = false;
    56a8:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 180;
    56aa:	84 eb       	ldi	r24, 0xB4	; 180
    56ac:	90 e0       	ldi	r25, 0x00	; 0
    56ae:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    56b2:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    56b6:	89 81       	ldd	r24, Y+1	; 0x01
    56b8:	88 23       	and	r24, r24
    56ba:	91 f0       	breq	.+36     	; 0x56e0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x166>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    56bc:	8d e4       	ldi	r24, 0x4D	; 77
    56be:	9f e4       	ldi	r25, 0x4F	; 79
    56c0:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    56c4:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    56c8:	85 e3       	ldi	r24, 0x35	; 53
    56ca:	90 e0       	ldi	r25, 0x00	; 0
    56cc:	80 93 46 47 	sts	0x4746, r24	; 0x804746 <g_messages_text+0x2>
    56d0:	90 93 47 47 	sts	0x4747, r25	; 0x804747 <g_messages_text+0x3>
				g_intra_cycle_delay_time = 240;
    56d4:	80 ef       	ldi	r24, 0xF0	; 240
    56d6:	90 e0       	ldi	r25, 0x00	; 0
    56d8:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    56dc:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    56e0:	81 e0       	ldi	r24, 0x01	; 1
    56e2:	8a 83       	std	Y+2, r24	; 0x02
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    56e4:	ce 01       	movw	r24, r28
    56e6:	02 96       	adiw	r24, 0x02	; 2
    56e8:	40 e0       	ldi	r20, 0x00	; 0
    56ea:	50 e0       	ldi	r21, 0x00	; 0
    56ec:	bc 01       	movw	r22, r24
    56ee:	84 e4       	ldi	r24, 0x44	; 68
    56f0:	97 e4       	ldi	r25, 0x47	; 71
    56f2:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    56f6:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    56fa:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    56fe:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5702:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 60;			/* wait 1 minute to send the ID */
    5706:	8c e3       	ldi	r24, 0x3C	; 60
    5708:	90 e0       	ldi	r25, 0x00	; 0
    570a:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    570e:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5712:	8c e3       	ldi	r24, 0x3C	; 60
    5714:	90 e0       	ldi	r25, 0x00	; 0
    5716:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    571a:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    571e:	80 ef       	ldi	r24, 0xF0	; 240
    5720:	90 e0       	ldi	r25, 0x00	; 0
    5722:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5726:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    572a:	41 c1       	rjmp	.+642    	; 0x59ae <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_S1:
		{
			if(patternNotSet)
    572c:	89 81       	ldd	r24, Y+1	; 0x01
    572e:	88 23       	and	r24, r24
    5730:	69 f0       	breq	.+26     	; 0x574c <_Z11setupForFoxP5Fox_t13EventAction_t+0x1d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "ME");
    5732:	8d e4       	ldi	r24, 0x4D	; 77
    5734:	95 e4       	ldi	r25, 0x45	; 69
    5736:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    573a:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    573e:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    5742:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5744:	10 92 70 47 	sts	0x4770, r1	; 0x804770 <g_intra_cycle_delay_time>
    5748:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S2:
		{
			if(patternNotSet)
    574c:	89 81       	ldd	r24, Y+1	; 0x01
    574e:	88 23       	and	r24, r24
    5750:	79 f0       	breq	.+30     	; 0x5770 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MI");
    5752:	8d e4       	ldi	r24, 0x4D	; 77
    5754:	99 e4       	ldi	r25, 0x49	; 73
    5756:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    575a:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    575e:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    5762:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5764:	8c e0       	ldi	r24, 0x0C	; 12
    5766:	90 e0       	ldi	r25, 0x00	; 0
    5768:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    576c:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S3:
		{
			if(patternNotSet)
    5770:	89 81       	ldd	r24, Y+1	; 0x01
    5772:	88 23       	and	r24, r24
    5774:	79 f0       	breq	.+30     	; 0x5794 <_Z11setupForFoxP5Fox_t13EventAction_t+0x21a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MS");
    5776:	8d e4       	ldi	r24, 0x4D	; 77
    5778:	93 e5       	ldi	r25, 0x53	; 83
    577a:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    577e:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    5782:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    5786:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5788:	88 e1       	ldi	r24, 0x18	; 24
    578a:	90 e0       	ldi	r25, 0x00	; 0
    578c:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    5790:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S4:
		{
			if(patternNotSet)
    5794:	89 81       	ldd	r24, Y+1	; 0x01
    5796:	88 23       	and	r24, r24
    5798:	79 f0       	breq	.+30     	; 0x57b8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x23e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MH");
    579a:	8d e4       	ldi	r24, 0x4D	; 77
    579c:	98 e4       	ldi	r25, 0x48	; 72
    579e:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    57a2:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    57a6:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    57aa:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    57ac:	84 e2       	ldi	r24, 0x24	; 36
    57ae:	90 e0       	ldi	r25, 0x00	; 0
    57b0:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    57b4:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S5:
		{
			{
				if(patternNotSet)
    57b8:	89 81       	ldd	r24, Y+1	; 0x01
    57ba:	88 23       	and	r24, r24
    57bc:	71 f0       	breq	.+28     	; 0x57da <_Z11setupForFoxP5Fox_t13EventAction_t+0x260>
				{
					sprintf(g_messages_text[PATTERN_TEXT], "M5");
    57be:	8d e4       	ldi	r24, 0x4D	; 77
    57c0:	95 e3       	ldi	r25, 0x35	; 53
    57c2:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    57c6:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    57ca:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
					g_intra_cycle_delay_time = 48;
    57ce:	80 e3       	ldi	r24, 0x30	; 48
    57d0:	90 e0       	ldi	r25, 0x00	; 0
    57d2:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    57d6:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
				}
			}
			
			bool repeat = true;
    57da:	81 e0       	ldi	r24, 0x01	; 1
    57dc:	8b 83       	std	Y+3, r24	; 0x03
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    57de:	ce 01       	movw	r24, r28
    57e0:	03 96       	adiw	r24, 0x03	; 3
    57e2:	40 e0       	ldi	r20, 0x00	; 0
    57e4:	50 e0       	ldi	r21, 0x00	; 0
    57e6:	bc 01       	movw	r22, r24
    57e8:	84 e4       	ldi	r24, 0x44	; 68
    57ea:	97 e4       	ldi	r25, 0x47	; 71
    57ec:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    57f0:	88 e0       	ldi	r24, 0x08	; 8
    57f2:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    57f6:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    57fa:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    57fe:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5802:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5806:	88 e5       	ldi	r24, 0x58	; 88
    5808:	92 e0       	ldi	r25, 0x02	; 2
    580a:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    580e:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5812:	8c e0       	ldi	r24, 0x0C	; 12
    5814:	90 e0       	ldi	r25, 0x00	; 0
    5816:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    581a:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    581e:	80 e3       	ldi	r24, 0x30	; 48
    5820:	90 e0       	ldi	r25, 0x00	; 0
    5822:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5826:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    582a:	c1 c0       	rjmp	.+386    	; 0x59ae <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_F1:
		{
			if(patternNotSet)
    582c:	89 81       	ldd	r24, Y+1	; 0x01
    582e:	88 23       	and	r24, r24
    5830:	69 f0       	breq	.+26     	; 0x584c <_Z11setupForFoxP5Fox_t13EventAction_t+0x2d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OE");
    5832:	8f e4       	ldi	r24, 0x4F	; 79
    5834:	95 e4       	ldi	r25, 0x45	; 69
    5836:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    583a:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    583e:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    5842:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5844:	10 92 70 47 	sts	0x4770, r1	; 0x804770 <g_intra_cycle_delay_time>
    5848:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F2:
		{
			if(patternNotSet)
    584c:	89 81       	ldd	r24, Y+1	; 0x01
    584e:	88 23       	and	r24, r24
    5850:	79 f0       	breq	.+30     	; 0x5870 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OI");
    5852:	8f e4       	ldi	r24, 0x4F	; 79
    5854:	99 e4       	ldi	r25, 0x49	; 73
    5856:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    585a:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    585e:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    5862:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5864:	8c e0       	ldi	r24, 0x0C	; 12
    5866:	90 e0       	ldi	r25, 0x00	; 0
    5868:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    586c:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F3:
		{
			if(patternNotSet)
    5870:	89 81       	ldd	r24, Y+1	; 0x01
    5872:	88 23       	and	r24, r24
    5874:	79 f0       	breq	.+30     	; 0x5894 <_Z11setupForFoxP5Fox_t13EventAction_t+0x31a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OS");
    5876:	8f e4       	ldi	r24, 0x4F	; 79
    5878:	93 e5       	ldi	r25, 0x53	; 83
    587a:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    587e:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    5882:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    5886:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5888:	88 e1       	ldi	r24, 0x18	; 24
    588a:	90 e0       	ldi	r25, 0x00	; 0
    588c:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    5890:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F4:
		{
			if(patternNotSet)
    5894:	89 81       	ldd	r24, Y+1	; 0x01
    5896:	88 23       	and	r24, r24
    5898:	79 f0       	breq	.+30     	; 0x58b8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x33e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OH");
    589a:	8f e4       	ldi	r24, 0x4F	; 79
    589c:	98 e4       	ldi	r25, 0x48	; 72
    589e:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    58a2:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    58a6:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				patternNotSet = false;
    58aa:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    58ac:	84 e2       	ldi	r24, 0x24	; 36
    58ae:	90 e0       	ldi	r25, 0x00	; 0
    58b0:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    58b4:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F5:
		{
			if(patternNotSet)
    58b8:	89 81       	ldd	r24, Y+1	; 0x01
    58ba:	88 23       	and	r24, r24
    58bc:	71 f0       	breq	.+28     	; 0x58da <_Z11setupForFoxP5Fox_t13EventAction_t+0x360>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "O5");
    58be:	8f e4       	ldi	r24, 0x4F	; 79
    58c0:	95 e3       	ldi	r25, 0x35	; 53
    58c2:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    58c6:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    58ca:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
				g_intra_cycle_delay_time = 48;
    58ce:	80 e3       	ldi	r24, 0x30	; 48
    58d0:	90 e0       	ldi	r25, 0x00	; 0
    58d2:	80 93 70 47 	sts	0x4770, r24	; 0x804770 <g_intra_cycle_delay_time>
    58d6:	90 93 71 47 	sts	0x4771, r25	; 0x804771 <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    58da:	81 e0       	ldi	r24, 0x01	; 1
    58dc:	8c 83       	std	Y+4, r24	; 0x04
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    58de:	ce 01       	movw	r24, r28
    58e0:	04 96       	adiw	r24, 0x04	; 4
    58e2:	40 e0       	ldi	r20, 0x00	; 0
    58e4:	50 e0       	ldi	r21, 0x00	; 0
    58e6:	bc 01       	movw	r22, r24
    58e8:	84 e4       	ldi	r24, 0x44	; 68
    58ea:	97 e4       	ldi	r25, 0x47	; 71
    58ec:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 15;
    58f0:	8f e0       	ldi	r24, 0x0F	; 15
    58f2:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    58f6:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    58fa:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    58fe:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5902:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5906:	88 e5       	ldi	r24, 0x58	; 88
    5908:	92 e0       	ldi	r25, 0x02	; 2
    590a:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    590e:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5912:	8c e0       	ldi	r24, 0x0C	; 12
    5914:	90 e0       	ldi	r25, 0x00	; 0
    5916:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    591a:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    591e:	80 e3       	ldi	r24, 0x30	; 48
    5920:	90 e0       	ldi	r25, 0x00	; 0
    5922:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5926:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    592a:	41 c0       	rjmp	.+130    	; 0x59ae <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>
#endif // SUPPORT_TEMP_AND_VOLTAGE_REPORTING


		case SPECTATOR:
		{
			sprintf(g_messages_text[PATTERN_TEXT], "S");
    592c:	83 e5       	ldi	r24, 0x53	; 83
    592e:	90 e0       	ldi	r25, 0x00	; 0
    5930:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    5934:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
			patternNotSet = false;
    5938:	19 82       	std	Y+1, r1	; 0x01
			g_intra_cycle_delay_time = 0;
    593a:	10 92 70 47 	sts	0x4770, r1	; 0x804770 <g_intra_cycle_delay_time>
    593e:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <g_intra_cycle_delay_time+0x1>
		}
		case BEACON:
		default:
		{
			if(patternNotSet)
    5942:	89 81       	ldd	r24, Y+1	; 0x01
    5944:	88 23       	and	r24, r24
    5946:	41 f0       	breq	.+16     	; 0x5958 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3de>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO");
    5948:	8d e4       	ldi	r24, 0x4D	; 77
    594a:	9f e4       	ldi	r25, 0x4F	; 79
    594c:	80 93 44 47 	sts	0x4744, r24	; 0x804744 <g_messages_text>
    5950:	90 93 45 47 	sts	0x4745, r25	; 0x804745 <g_messages_text+0x1>
    5954:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <g_messages_text+0x2>
			}
			
			g_intra_cycle_delay_time = 0;
    5958:	10 92 70 47 	sts	0x4770, r1	; 0x804770 <g_intra_cycle_delay_time>
    595c:	10 92 71 47 	sts	0x4771, r1	; 0x804771 <g_intra_cycle_delay_time+0x1>
			bool repeat = true;
    5960:	81 e0       	ldi	r24, 0x01	; 1
    5962:	8d 83       	std	Y+5, r24	; 0x05
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5964:	ce 01       	movw	r24, r28
    5966:	05 96       	adiw	r24, 0x05	; 5
    5968:	40 e0       	ldi	r20, 0x00	; 0
    596a:	50 e0       	ldi	r21, 0x00	; 0
    596c:	bc 01       	movw	r22, r24
    596e:	84 e4       	ldi	r24, 0x44	; 68
    5970:	97 e4       	ldi	r25, 0x47	; 71
    5972:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5976:	88 e0       	ldi	r24, 0x08	; 8
    5978:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    597c:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5980:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    5984:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5988:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    598c:	88 e5       	ldi	r24, 0x58	; 88
    598e:	92 e0       	ldi	r25, 0x02	; 2
    5990:	80 93 3e 47 	sts	0x473E, r24	; 0x80473e <_ZL26g_sendID_seconds_countdown>
    5994:	90 93 3f 47 	sts	0x473F, r25	; 0x80473f <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5998:	8c e3       	ldi	r24, 0x3C	; 60
    599a:	90 e0       	ldi	r25, 0x00	; 0
    599c:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    59a0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 0;						/* off period is very short */
    59a4:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    59a8:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    59ac:	00 00       	nop
	}

	if(action == START_NOTHING)
    59ae:	8c 85       	ldd	r24, Y+12	; 0x0c
    59b0:	88 23       	and	r24, r24
    59b2:	91 f4       	brne	.+36     	; 0x59d8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x45e>
	{
		g_event_commenced = false;                   /* get things running immediately */
    59b4:	10 92 7b 47 	sts	0x477B, r1	; 0x80477b <g_event_commenced>
		g_event_enabled = false;                     /* get things running immediately */
    59b8:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>

 		g_use_rtc_for_startstop = false;
    59bc:	10 92 9f 47 	sts	0x479F, r1	; 0x80479f <g_use_rtc_for_startstop>
 		g_event_enabled = false;
    59c0:	10 92 7a 47 	sts	0x477A, r1	; 0x80477a <g_event_enabled>
		keyTransmitter(OFF);
    59c4:	80 e0       	ldi	r24, 0x00	; 0
    59c6:	0e 94 45 6a 	call	0xd48a	; 0xd48a <_Z14keyTransmitterb>
		LED_set_RED_level(OFF);
    59ca:	80 e0       	ldi	r24, 0x00	; 0
    59cc:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
		powerToTransmitter(OFF);
    59d0:	80 e0       	ldi	r24, 0x00	; 0
    59d2:	0e 94 37 6a 	call	0xd46e	; 0xd46e <_Z18powerToTransmitterb>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    59d6:	af c0       	rjmp	.+350    	; 0x5b36 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
 		g_event_enabled = false;
		keyTransmitter(OFF);
		LED_set_RED_level(OFF);
		powerToTransmitter(OFF);
	}
	else if(action == START_EVENT_NOW)
    59d8:	8c 85       	ldd	r24, Y+12	; 0x0c
    59da:	81 30       	cpi	r24, 0x01	; 1
    59dc:	09 f0       	breq	.+2      	; 0x59e0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x466>
    59de:	72 c0       	rjmp	.+228    	; 0x5ac4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x54a>
//  		g_event_enabled = true;
// 		g_event_commenced = true;					/* get things running immediately */
// 		g_event_enabled = true;						/* get things running immediately */

		EC result;
		g_current_epoch = ds3231_get_epoch(&result);
    59e0:	ce 01       	movw	r24, r28
    59e2:	06 96       	adiw	r24, 0x06	; 6
    59e4:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    59e8:	dc 01       	movw	r26, r24
    59ea:	cb 01       	movw	r24, r22
    59ec:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    59f0:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    59f4:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    59f8:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>
		
		if(result == ERROR_CODE_NO_ERROR)
    59fc:	8e 81       	ldd	r24, Y+6	; 0x06
    59fe:	88 23       	and	r24, r24
    5a00:	e9 f5       	brne	.+122    	; 0x5a7c <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
		{
			g_event_start_epoch = g_current_epoch;
    5a02:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    5a06:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    5a0a:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    5a0e:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    5a12:	80 93 72 47 	sts	0x4772, r24	; 0x804772 <g_event_start_epoch>
    5a16:	90 93 73 47 	sts	0x4773, r25	; 0x804773 <g_event_start_epoch+0x1>
    5a1a:	a0 93 74 47 	sts	0x4774, r26	; 0x804774 <g_event_start_epoch+0x2>
    5a1e:	b0 93 75 47 	sts	0x4775, r27	; 0x804775 <g_event_start_epoch+0x3>
			if(g_event_start_epoch > g_event_finish_epoch)
    5a22:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    5a26:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    5a2a:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    5a2e:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    5a32:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    5a36:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    5a3a:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    5a3e:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    5a42:	61 e0       	ldi	r22, 0x01	; 1
    5a44:	82 17       	cp	r24, r18
    5a46:	93 07       	cpc	r25, r19
    5a48:	a4 07       	cpc	r26, r20
    5a4a:	b5 07       	cpc	r27, r21
    5a4c:	08 f0       	brcs	.+2      	; 0x5a50 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4d6>
    5a4e:	60 e0       	ldi	r22, 0x00	; 0
    5a50:	66 23       	and	r22, r22
    5a52:	a1 f0       	breq	.+40     	; 0x5a7c <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
			{
				g_event_finish_epoch = g_event_start_epoch + DAY;
    5a54:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    5a58:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    5a5c:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    5a60:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    5a64:	80 58       	subi	r24, 0x80	; 128
    5a66:	9e 4a       	sbci	r25, 0xAE	; 174
    5a68:	ae 4f       	sbci	r26, 0xFE	; 254
    5a6a:	bf 4f       	sbci	r27, 0xFF	; 255
    5a6c:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    5a70:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    5a74:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    5a78:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
			}
		}
		
		SC status = STATUS_CODE_IDLE;
    5a7c:	1f 82       	std	Y+7, r1	; 0x07
		result = launchEvent(&status);
    5a7e:	ce 01       	movw	r24, r28
    5a80:	07 96       	adiw	r24, 0x07	; 7
    5a82:	0e 94 01 27 	call	0x4e02	; 0x4e02 <_Z11launchEventP2SC>
    5a86:	8e 83       	std	Y+6, r24	; 0x06
		
		if(g_go_to_sleep && g_sleepType)
    5a88:	80 91 7e 47 	lds	r24, 0x477E	; 0x80477e <_ZL13g_go_to_sleep>
    5a8c:	88 23       	and	r24, r24
    5a8e:	31 f0       	breq	.+12     	; 0x5a9c <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5a90:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZL11g_sleepType>
    5a94:	88 23       	and	r24, r24
    5a96:	11 f0       	breq	.+4      	; 0x5a9c <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5a98:	81 e0       	ldi	r24, 0x01	; 1
    5a9a:	01 c0       	rjmp	.+2      	; 0x5a9e <_Z11setupForFoxP5Fox_t13EventAction_t+0x524>
    5a9c:	80 e0       	ldi	r24, 0x00	; 0
    5a9e:	88 23       	and	r24, r24
    5aa0:	29 f0       	breq	.+10     	; 0x5aac <_Z11setupForFoxP5Fox_t13EventAction_t+0x532>
		{
			g_sleepType = SLEEP_AFTER_WIFI_GOES_OFF;
    5aa2:	83 e0       	ldi	r24, 0x03	; 3
    5aa4:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZL11g_sleepType>
			g_go_to_sleep = false;
    5aa8:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <_ZL13g_go_to_sleep>
		}

		g_WiFi_shutdown_seconds = 60;
    5aac:	8c e3       	ldi	r24, 0x3C	; 60
    5aae:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>

		if(!result)
    5ab2:	8e 81       	ldd	r24, Y+6	; 0x06
    5ab4:	88 23       	and	r24, r24
    5ab6:	09 f0       	breq	.+2      	; 0x5aba <_Z11setupForFoxP5Fox_t13EventAction_t+0x540>
    5ab8:	3e c0       	rjmp	.+124    	; 0x5b36 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		{
			g_ee_mgr.saveAllEEPROM();
    5aba:	81 e9       	ldi	r24, 0x91	; 145
    5abc:	97 e4       	ldi	r25, 0x47	; 71
    5abe:	0e 94 46 44 	call	0x888c	; 0x888c <_ZN13EepromManager13saveAllEEPROMEv>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5ac2:	39 c0       	rjmp	.+114    	; 0x5b36 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		if(!result)
		{
			g_ee_mgr.saveAllEEPROM();
		}
	}
	else if(action == START_TRANSMISSIONS_NOW)                                  /* Immediately start transmitting, regardless RTC or time slot */
    5ac4:	8c 85       	ldd	r24, Y+12	; 0x0c
    5ac6:	82 30       	cpi	r24, 0x02	; 2
    5ac8:	91 f5       	brne	.+100    	; 0x5b2e <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b4>
	{
		bool repeat = true;
    5aca:	81 e0       	ldi	r24, 0x01	; 1
    5acc:	88 87       	std	Y+8, r24	; 0x08
		makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5ace:	ce 01       	movw	r24, r28
    5ad0:	08 96       	adiw	r24, 0x08	; 8
    5ad2:	40 e0       	ldi	r20, 0x00	; 0
    5ad4:	50 e0       	ldi	r21, 0x00	; 0
    5ad6:	bc 01       	movw	r22, r24
    5ad8:	84 e4       	ldi	r24, 0x44	; 68
    5ada:	97 e4       	ldi	r25, 0x47	; 71
    5adc:	0e 94 98 55 	call	0xab30	; 0xab30 <_Z9makeMorsePcPbS0_>
		g_code_throttle = throttleValue(g_pattern_codespeed);
    5ae0:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5ae4:	0e 94 b1 26 	call	0x4d62	; 0x4d62 <_Z13throttleValueh>
    5ae8:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5aec:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

// 		g_event_start_epoch = 1;                     /* have it start a long time ago */
// 		g_event_finish_epoch = MAX_TIME;             /* run for a long long time */
		g_on_the_air = g_on_air_seconds;			/* start out transmitting */
    5af0:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5af4:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5af8:	09 2e       	mov	r0, r25
    5afa:	00 0c       	add	r0, r0
    5afc:	aa 0b       	sbc	r26, r26
    5afe:	bb 0b       	sbc	r27, r27
    5b00:	80 93 3a 47 	sts	0x473A, r24	; 0x80473a <_ZL12g_on_the_air>
    5b04:	90 93 3b 47 	sts	0x473B, r25	; 0x80473b <_ZL12g_on_the_air+0x1>
    5b08:	a0 93 3c 47 	sts	0x473C, r26	; 0x80473c <_ZL12g_on_the_air+0x2>
    5b0c:	b0 93 3d 47 	sts	0x473D, r27	; 0x80473d <_ZL12g_on_the_air+0x3>
		g_event_commenced = true;                   /* get things running immediately */
    5b10:	81 e0       	ldi	r24, 0x01	; 1
    5b12:	80 93 7b 47 	sts	0x477B, r24	; 0x80477b <g_event_commenced>
		g_event_enabled = true;                     /* get things running immediately */
    5b16:	81 e0       	ldi	r24, 0x01	; 1
    5b18:	80 93 7a 47 	sts	0x477A, r24	; 0x80477a <g_event_enabled>
		g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    5b1c:	8d ef       	ldi	r24, 0xFD	; 253
    5b1e:	80 93 32 47 	sts	0x4732, r24	; 0x804732 <_ZL18g_last_status_code>
		
// 		g_seconds_since_sync = (g_fox_counter - 1) * g_on_air_interval_seconds; /* Total elapsed time since start of event */
 		g_use_rtc_for_startstop = false;
    5b22:	10 92 9f 47 	sts	0x479F, r1	; 0x80479f <g_use_rtc_for_startstop>
 		g_event_enabled = true;
    5b26:	81 e0       	ldi	r24, 0x01	; 1
    5b28:	80 93 7a 47 	sts	0x477A, r24	; 0x80477a <g_event_enabled>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5b2c:	04 c0       	rjmp	.+8      	; 0x5b36 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
	}
	else         /* if(action == START_EVENT_WITH_STARTFINISH_TIMES) */
	{
		SC sc;
 //		EC ec = 
		launchEvent(&sc);
    5b2e:	ce 01       	movw	r24, r28
    5b30:	09 96       	adiw	r24, 0x09	; 9
    5b32:	0e 94 01 27 	call	0x4e02	; 0x4e02 <_Z11launchEventP2SC>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5b36:	00 00       	nop
    5b38:	2c 96       	adiw	r28, 0x0c	; 12
    5b3a:	cd bf       	out	0x3d, r28	; 61
    5b3c:	de bf       	out	0x3e, r29	; 62
    5b3e:	df 91       	pop	r29
    5b40:	cf 91       	pop	r28
    5b42:	08 95       	ret

00005b44 <_Z18validateTimeStringPcPma>:

time_t validateTimeString(char* str, time_t* epochVar, int8_t offsetHours)
{
    5b44:	cf 93       	push	r28
    5b46:	df 93       	push	r29
    5b48:	cd b7       	in	r28, 0x3d	; 61
    5b4a:	de b7       	in	r29, 0x3e	; 62
    5b4c:	a4 97       	sbiw	r28, 0x24	; 36
    5b4e:	cd bf       	out	0x3d, r28	; 61
    5b50:	de bf       	out	0x3e, r29	; 62
    5b52:	88 a3       	std	Y+32, r24	; 0x20
    5b54:	99 a3       	std	Y+33, r25	; 0x21
    5b56:	6a a3       	std	Y+34, r22	; 0x22
    5b58:	7b a3       	std	Y+35, r23	; 0x23
    5b5a:	4c a3       	std	Y+36, r20	; 0x24
	time_t valid = 0;
    5b5c:	19 82       	std	Y+1, r1	; 0x01
    5b5e:	1a 82       	std	Y+2, r1	; 0x02
    5b60:	1b 82       	std	Y+3, r1	; 0x03
    5b62:	1c 82       	std	Y+4, r1	; 0x04
	int len = strlen(str);
    5b64:	88 a1       	ldd	r24, Y+32	; 0x20
    5b66:	99 a1       	ldd	r25, Y+33	; 0x21
    5b68:	0e 94 a8 76 	call	0xed50	; 0xed50 <strlen>
    5b6c:	8d 83       	std	Y+5, r24	; 0x05
    5b6e:	9e 83       	std	Y+6, r25	; 0x06
	time_t minimumEpoch = MINIMUM_EPOCH;
    5b70:	80 e0       	ldi	r24, 0x00	; 0
    5b72:	96 e6       	ldi	r25, 0x66	; 102
    5b74:	ae ee       	ldi	r26, 0xEE	; 238
    5b76:	bf e5       	ldi	r27, 0x5F	; 95
    5b78:	8f 83       	std	Y+7, r24	; 0x07
    5b7a:	98 87       	std	Y+8, r25	; 0x08
    5b7c:	a9 87       	std	Y+9, r26	; 0x09
    5b7e:	ba 87       	std	Y+10, r27	; 0x0a
	uint8_t validationType = 0;
    5b80:	1b 86       	std	Y+11, r1	; 0x0b

	if(epochVar == &g_event_start_epoch)
    5b82:	8a a1       	ldd	r24, Y+34	; 0x22
    5b84:	9b a1       	ldd	r25, Y+35	; 0x23
    5b86:	82 57       	subi	r24, 0x72	; 114
    5b88:	97 44       	sbci	r25, 0x47	; 71
    5b8a:	89 f5       	brne	.+98     	; 0x5bee <_Z18validateTimeStringPcPma+0xaa>
	{
		minimumEpoch = MAX(g_current_epoch, MINIMUM_EPOCH);
    5b8c:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    5b90:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    5b94:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    5b98:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    5b9c:	8c 87       	std	Y+12, r24	; 0x0c
    5b9e:	9d 87       	std	Y+13, r25	; 0x0d
    5ba0:	ae 87       	std	Y+14, r26	; 0x0e
    5ba2:	bf 87       	std	Y+15, r27	; 0x0f
    5ba4:	80 e0       	ldi	r24, 0x00	; 0
    5ba6:	96 e6       	ldi	r25, 0x66	; 102
    5ba8:	ae ee       	ldi	r26, 0xEE	; 238
    5baa:	bf e5       	ldi	r27, 0x5F	; 95
    5bac:	88 8b       	std	Y+16, r24	; 0x10
    5bae:	99 8b       	std	Y+17, r25	; 0x11
    5bb0:	aa 8b       	std	Y+18, r26	; 0x12
    5bb2:	bb 8b       	std	Y+19, r27	; 0x13
    5bb4:	2c 85       	ldd	r18, Y+12	; 0x0c
    5bb6:	3d 85       	ldd	r19, Y+13	; 0x0d
    5bb8:	4e 85       	ldd	r20, Y+14	; 0x0e
    5bba:	5f 85       	ldd	r21, Y+15	; 0x0f
    5bbc:	88 89       	ldd	r24, Y+16	; 0x10
    5bbe:	99 89       	ldd	r25, Y+17	; 0x11
    5bc0:	aa 89       	ldd	r26, Y+18	; 0x12
    5bc2:	bb 89       	ldd	r27, Y+19	; 0x13
    5bc4:	28 17       	cp	r18, r24
    5bc6:	39 07       	cpc	r19, r25
    5bc8:	4a 07       	cpc	r20, r26
    5bca:	5b 07       	cpc	r21, r27
    5bcc:	28 f4       	brcc	.+10     	; 0x5bd8 <_Z18validateTimeStringPcPma+0x94>
    5bce:	88 89       	ldd	r24, Y+16	; 0x10
    5bd0:	99 89       	ldd	r25, Y+17	; 0x11
    5bd2:	aa 89       	ldd	r26, Y+18	; 0x12
    5bd4:	bb 89       	ldd	r27, Y+19	; 0x13
    5bd6:	04 c0       	rjmp	.+8      	; 0x5be0 <_Z18validateTimeStringPcPma+0x9c>
    5bd8:	8c 85       	ldd	r24, Y+12	; 0x0c
    5bda:	9d 85       	ldd	r25, Y+13	; 0x0d
    5bdc:	ae 85       	ldd	r26, Y+14	; 0x0e
    5bde:	bf 85       	ldd	r27, Y+15	; 0x0f
    5be0:	8f 83       	std	Y+7, r24	; 0x07
    5be2:	98 87       	std	Y+8, r25	; 0x08
    5be4:	a9 87       	std	Y+9, r26	; 0x09
    5be6:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 1;
    5be8:	81 e0       	ldi	r24, 0x01	; 1
    5bea:	8b 87       	std	Y+11, r24	; 0x0b
    5bec:	39 c0       	rjmp	.+114    	; 0x5c60 <_Z18validateTimeStringPcPma+0x11c>
	}
	else if(epochVar == &g_event_finish_epoch)
    5bee:	8a a1       	ldd	r24, Y+34	; 0x22
    5bf0:	9b a1       	ldd	r25, Y+35	; 0x23
    5bf2:	86 57       	subi	r24, 0x76	; 118
    5bf4:	97 44       	sbci	r25, 0x47	; 71
    5bf6:	a1 f5       	brne	.+104    	; 0x5c60 <_Z18validateTimeStringPcPma+0x11c>
	{
		minimumEpoch = MAX(g_event_start_epoch, g_current_epoch);
    5bf8:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    5bfc:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    5c00:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    5c04:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    5c08:	88 8f       	std	Y+24, r24	; 0x18
    5c0a:	99 8f       	std	Y+25, r25	; 0x19
    5c0c:	aa 8f       	std	Y+26, r26	; 0x1a
    5c0e:	bb 8f       	std	Y+27, r27	; 0x1b
    5c10:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    5c14:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    5c18:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    5c1c:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    5c20:	8c 8f       	std	Y+28, r24	; 0x1c
    5c22:	9d 8f       	std	Y+29, r25	; 0x1d
    5c24:	ae 8f       	std	Y+30, r26	; 0x1e
    5c26:	bf 8f       	std	Y+31, r27	; 0x1f
    5c28:	28 8d       	ldd	r18, Y+24	; 0x18
    5c2a:	39 8d       	ldd	r19, Y+25	; 0x19
    5c2c:	4a 8d       	ldd	r20, Y+26	; 0x1a
    5c2e:	5b 8d       	ldd	r21, Y+27	; 0x1b
    5c30:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5c32:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5c34:	ae 8d       	ldd	r26, Y+30	; 0x1e
    5c36:	bf 8d       	ldd	r27, Y+31	; 0x1f
    5c38:	28 17       	cp	r18, r24
    5c3a:	39 07       	cpc	r19, r25
    5c3c:	4a 07       	cpc	r20, r26
    5c3e:	5b 07       	cpc	r21, r27
    5c40:	28 f4       	brcc	.+10     	; 0x5c4c <_Z18validateTimeStringPcPma+0x108>
    5c42:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5c44:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5c46:	ae 8d       	ldd	r26, Y+30	; 0x1e
    5c48:	bf 8d       	ldd	r27, Y+31	; 0x1f
    5c4a:	04 c0       	rjmp	.+8      	; 0x5c54 <_Z18validateTimeStringPcPma+0x110>
    5c4c:	88 8d       	ldd	r24, Y+24	; 0x18
    5c4e:	99 8d       	ldd	r25, Y+25	; 0x19
    5c50:	aa 8d       	ldd	r26, Y+26	; 0x1a
    5c52:	bb 8d       	ldd	r27, Y+27	; 0x1b
    5c54:	8f 83       	std	Y+7, r24	; 0x07
    5c56:	98 87       	std	Y+8, r25	; 0x08
    5c58:	a9 87       	std	Y+9, r26	; 0x09
    5c5a:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 2;
    5c5c:	82 e0       	ldi	r24, 0x02	; 2
    5c5e:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	if(len == 10)
    5c60:	8d 81       	ldd	r24, Y+5	; 0x05
    5c62:	9e 81       	ldd	r25, Y+6	; 0x06
    5c64:	0a 97       	sbiw	r24, 0x0a	; 10
    5c66:	a9 f4       	brne	.+42     	; 0x5c92 <_Z18validateTimeStringPcPma+0x14e>
	{
		str[10] = '0';
    5c68:	88 a1       	ldd	r24, Y+32	; 0x20
    5c6a:	99 a1       	ldd	r25, Y+33	; 0x21
    5c6c:	0a 96       	adiw	r24, 0x0a	; 10
    5c6e:	20 e3       	ldi	r18, 0x30	; 48
    5c70:	fc 01       	movw	r30, r24
    5c72:	20 83       	st	Z, r18
		str[11] = '0';
    5c74:	88 a1       	ldd	r24, Y+32	; 0x20
    5c76:	99 a1       	ldd	r25, Y+33	; 0x21
    5c78:	0b 96       	adiw	r24, 0x0b	; 11
    5c7a:	20 e3       	ldi	r18, 0x30	; 48
    5c7c:	fc 01       	movw	r30, r24
    5c7e:	20 83       	st	Z, r18
		str[12] = '\0';
    5c80:	88 a1       	ldd	r24, Y+32	; 0x20
    5c82:	99 a1       	ldd	r25, Y+33	; 0x21
    5c84:	0c 96       	adiw	r24, 0x0c	; 12
    5c86:	fc 01       	movw	r30, r24
    5c88:	10 82       	st	Z, r1
		len = 12;
    5c8a:	8c e0       	ldi	r24, 0x0C	; 12
    5c8c:	90 e0       	ldi	r25, 0x00	; 0
    5c8e:	8d 83       	std	Y+5, r24	; 0x05
    5c90:	9e 83       	std	Y+6, r25	; 0x06
	}

	if((len == 12) && (only_digits(str)))
    5c92:	8d 81       	ldd	r24, Y+5	; 0x05
    5c94:	9e 81       	ldd	r25, Y+6	; 0x06
    5c96:	0c 97       	sbiw	r24, 0x0c	; 12
    5c98:	41 f4       	brne	.+16     	; 0x5caa <_Z18validateTimeStringPcPma+0x166>
    5c9a:	88 a1       	ldd	r24, Y+32	; 0x20
    5c9c:	99 a1       	ldd	r25, Y+33	; 0x21
    5c9e:	0e 94 88 6e 	call	0xdd10	; 0xdd10 <_Z11only_digitsPc>
    5ca2:	88 23       	and	r24, r24
    5ca4:	11 f0       	breq	.+4      	; 0x5caa <_Z18validateTimeStringPcPma+0x166>
    5ca6:	81 e0       	ldi	r24, 0x01	; 1
    5ca8:	01 c0       	rjmp	.+2      	; 0x5cac <_Z18validateTimeStringPcPma+0x168>
    5caa:	80 e0       	ldi	r24, 0x00	; 0
    5cac:	88 23       	and	r24, r24
    5cae:	09 f4       	brne	.+2      	; 0x5cb2 <_Z18validateTimeStringPcPma+0x16e>
    5cb0:	67 c0       	rjmp	.+206    	; 0x5d80 <_Z18validateTimeStringPcPma+0x23c>
	{
		time_t ep = RTC_String2Epoch(NULL, str);    /* String format "YYMMDDhhmmss" */
    5cb2:	88 a1       	ldd	r24, Y+32	; 0x20
    5cb4:	99 a1       	ldd	r25, Y+33	; 0x21
    5cb6:	bc 01       	movw	r22, r24
    5cb8:	80 e0       	ldi	r24, 0x00	; 0
    5cba:	90 e0       	ldi	r25, 0x00	; 0
    5cbc:	0e 94 3a 3b 	call	0x7674	; 0x7674 <RTC_String2Epoch>
    5cc0:	dc 01       	movw	r26, r24
    5cc2:	cb 01       	movw	r24, r22
    5cc4:	8c 8b       	std	Y+20, r24	; 0x14
    5cc6:	9d 8b       	std	Y+21, r25	; 0x15
    5cc8:	ae 8b       	std	Y+22, r26	; 0x16
    5cca:	bf 8b       	std	Y+23, r27	; 0x17

		ep += (HOUR * offsetHours);
    5ccc:	8c a1       	ldd	r24, Y+36	; 0x24
    5cce:	28 2f       	mov	r18, r24
    5cd0:	88 0f       	add	r24, r24
    5cd2:	33 0b       	sbc	r19, r19
    5cd4:	44 0b       	sbc	r20, r20
    5cd6:	55 0b       	sbc	r21, r21
    5cd8:	80 e1       	ldi	r24, 0x10	; 16
    5cda:	9e e0       	ldi	r25, 0x0E	; 14
    5cdc:	dc 01       	movw	r26, r24
    5cde:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    5ce2:	9b 01       	movw	r18, r22
    5ce4:	ac 01       	movw	r20, r24
    5ce6:	8c 89       	ldd	r24, Y+20	; 0x14
    5ce8:	9d 89       	ldd	r25, Y+21	; 0x15
    5cea:	ae 89       	ldd	r26, Y+22	; 0x16
    5cec:	bf 89       	ldd	r27, Y+23	; 0x17
    5cee:	82 0f       	add	r24, r18
    5cf0:	93 1f       	adc	r25, r19
    5cf2:	a4 1f       	adc	r26, r20
    5cf4:	b5 1f       	adc	r27, r21
    5cf6:	8c 8b       	std	Y+20, r24	; 0x14
    5cf8:	9d 8b       	std	Y+21, r25	; 0x15
    5cfa:	ae 8b       	std	Y+22, r26	; 0x16
    5cfc:	bf 8b       	std	Y+23, r27	; 0x17

		if(ep > minimumEpoch)
    5cfe:	2c 89       	ldd	r18, Y+20	; 0x14
    5d00:	3d 89       	ldd	r19, Y+21	; 0x15
    5d02:	4e 89       	ldd	r20, Y+22	; 0x16
    5d04:	5f 89       	ldd	r21, Y+23	; 0x17
    5d06:	8f 81       	ldd	r24, Y+7	; 0x07
    5d08:	98 85       	ldd	r25, Y+8	; 0x08
    5d0a:	a9 85       	ldd	r26, Y+9	; 0x09
    5d0c:	ba 85       	ldd	r27, Y+10	; 0x0a
    5d0e:	82 17       	cp	r24, r18
    5d10:	93 07       	cpc	r25, r19
    5d12:	a4 07       	cpc	r26, r20
    5d14:	b5 07       	cpc	r27, r21
    5d16:	48 f4       	brcc	.+18     	; 0x5d2a <_Z18validateTimeStringPcPma+0x1e6>
		{
			valid = ep;
    5d18:	8c 89       	ldd	r24, Y+20	; 0x14
    5d1a:	9d 89       	ldd	r25, Y+21	; 0x15
    5d1c:	ae 89       	ldd	r26, Y+22	; 0x16
    5d1e:	bf 89       	ldd	r27, Y+23	; 0x17
    5d20:	89 83       	std	Y+1, r24	; 0x01
    5d22:	9a 83       	std	Y+2, r25	; 0x02
    5d24:	ab 83       	std	Y+3, r26	; 0x03
    5d26:	bc 83       	std	Y+4, r27	; 0x04
    5d28:	33 c0       	rjmp	.+102    	; 0x5d90 <_Z18validateTimeStringPcPma+0x24c>
		}
		else
		{
			if(validationType == 1)         /* start time validation */
    5d2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    5d2c:	81 30       	cpi	r24, 0x01	; 1
    5d2e:	29 f4       	brne	.+10     	; 0x5d3a <_Z18validateTimeStringPcPma+0x1f6>
			{
				sb_send_string(TEXT_ERR_START_IN_PAST_TXT);
    5d30:	89 ee       	ldi	r24, 0xE9	; 233
    5d32:	92 e4       	ldi	r25, 0x42	; 66
    5d34:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    5d38:	2b c0       	rjmp	.+86     	; 0x5d90 <_Z18validateTimeStringPcPma+0x24c>
			}
			else if(validationType == 2)    /* finish time validation */
    5d3a:	8b 85       	ldd	r24, Y+11	; 0x0b
    5d3c:	82 30       	cpi	r24, 0x02	; 2
    5d3e:	d9 f4       	brne	.+54     	; 0x5d76 <_Z18validateTimeStringPcPma+0x232>
			{
				if(ep < g_current_epoch)
    5d40:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    5d44:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    5d48:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    5d4c:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    5d50:	2c 89       	ldd	r18, Y+20	; 0x14
    5d52:	3d 89       	ldd	r19, Y+21	; 0x15
    5d54:	4e 89       	ldd	r20, Y+22	; 0x16
    5d56:	5f 89       	ldd	r21, Y+23	; 0x17
    5d58:	28 17       	cp	r18, r24
    5d5a:	39 07       	cpc	r19, r25
    5d5c:	4a 07       	cpc	r20, r26
    5d5e:	5b 07       	cpc	r21, r27
    5d60:	28 f4       	brcc	.+10     	; 0x5d6c <_Z18validateTimeStringPcPma+0x228>
				{
					sb_send_string(TEXT_ERR_FINISH_IN_PAST_TXT);
    5d62:	8e ef       	ldi	r24, 0xFE	; 254
    5d64:	92 e4       	ldi	r25, 0x42	; 66
    5d66:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    5d6a:	12 c0       	rjmp	.+36     	; 0x5d90 <_Z18validateTimeStringPcPma+0x24c>
				}
				else
				{
					sb_send_string(TEXT_ERR_FINISH_BEFORE_START_TXT);
    5d6c:	84 e1       	ldi	r24, 0x14	; 20
    5d6e:	93 e4       	ldi	r25, 0x43	; 67
    5d70:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    5d74:	0d c0       	rjmp	.+26     	; 0x5d90 <_Z18validateTimeStringPcPma+0x24c>
				}
			}
			else    /* current time validation */
			{
				sb_send_string(TEXT_ERR_TIME_IN_PAST_TXT);
    5d76:	8f e2       	ldi	r24, 0x2F	; 47
    5d78:	93 e4       	ldi	r25, 0x43	; 67
    5d7a:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    5d7e:	08 c0       	rjmp	.+16     	; 0x5d90 <_Z18validateTimeStringPcPma+0x24c>
			}
		}
	}
	else if(len)
    5d80:	8d 81       	ldd	r24, Y+5	; 0x05
    5d82:	9e 81       	ldd	r25, Y+6	; 0x06
    5d84:	89 2b       	or	r24, r25
    5d86:	21 f0       	breq	.+8      	; 0x5d90 <_Z18validateTimeStringPcPma+0x24c>
	{
		sb_send_string(TEXT_ERR_INVALID_TIME_TXT);
    5d88:	83 e4       	ldi	r24, 0x43	; 67
    5d8a:	93 e4       	ldi	r25, 0x43	; 67
    5d8c:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
	}

	return(valid);
    5d90:	89 81       	ldd	r24, Y+1	; 0x01
    5d92:	9a 81       	ldd	r25, Y+2	; 0x02
    5d94:	ab 81       	ldd	r26, Y+3	; 0x03
    5d96:	bc 81       	ldd	r27, Y+4	; 0x04
}
    5d98:	bc 01       	movw	r22, r24
    5d9a:	cd 01       	movw	r24, r26
    5d9c:	a4 96       	adiw	r28, 0x24	; 36
    5d9e:	cd bf       	out	0x3d, r28	; 61
    5da0:	de bf       	out	0x3e, r29	; 62
    5da2:	df 91       	pop	r29
    5da4:	cf 91       	pop	r28
    5da6:	08 95       	ret

00005da8 <_Z14reportTimeTillmmPKcS0_>:


bool reportTimeTill(time_t from, time_t until, const char* prefix, const char* failMsg)
{
    5da8:	ef 92       	push	r14
    5daa:	ff 92       	push	r15
    5dac:	0f 93       	push	r16
    5dae:	1f 93       	push	r17
    5db0:	cf 93       	push	r28
    5db2:	df 93       	push	r29
    5db4:	cd b7       	in	r28, 0x3d	; 61
    5db6:	de b7       	in	r29, 0x3e	; 62
    5db8:	6f 97       	sbiw	r28, 0x1f	; 31
    5dba:	cd bf       	out	0x3d, r28	; 61
    5dbc:	de bf       	out	0x3e, r29	; 62
    5dbe:	6c 8b       	std	Y+20, r22	; 0x14
    5dc0:	7d 8b       	std	Y+21, r23	; 0x15
    5dc2:	8e 8b       	std	Y+22, r24	; 0x16
    5dc4:	9f 8b       	std	Y+23, r25	; 0x17
    5dc6:	28 8f       	std	Y+24, r18	; 0x18
    5dc8:	39 8f       	std	Y+25, r19	; 0x19
    5dca:	4a 8f       	std	Y+26, r20	; 0x1a
    5dcc:	5b 8f       	std	Y+27, r21	; 0x1b
    5dce:	0c 8f       	std	Y+28, r16	; 0x1c
    5dd0:	1d 8f       	std	Y+29, r17	; 0x1d
    5dd2:	ee 8e       	std	Y+30, r14	; 0x1e
    5dd4:	ff 8e       	std	Y+31, r15	; 0x1f
	bool failure = false;
    5dd6:	19 82       	std	Y+1, r1	; 0x01

	if(from >= until)   /* Negative time */
    5dd8:	2c 89       	ldd	r18, Y+20	; 0x14
    5dda:	3d 89       	ldd	r19, Y+21	; 0x15
    5ddc:	4e 89       	ldd	r20, Y+22	; 0x16
    5dde:	5f 89       	ldd	r21, Y+23	; 0x17
    5de0:	88 8d       	ldd	r24, Y+24	; 0x18
    5de2:	99 8d       	ldd	r25, Y+25	; 0x19
    5de4:	aa 8d       	ldd	r26, Y+26	; 0x1a
    5de6:	bb 8d       	ldd	r27, Y+27	; 0x1b
    5de8:	28 17       	cp	r18, r24
    5dea:	39 07       	cpc	r19, r25
    5dec:	4a 07       	cpc	r20, r26
    5dee:	5b 07       	cpc	r21, r27
    5df0:	60 f0       	brcs	.+24     	; 0x5e0a <_Z14reportTimeTillmmPKcS0_+0x62>
	{
		failure = true;
    5df2:	81 e0       	ldi	r24, 0x01	; 1
    5df4:	89 83       	std	Y+1, r24	; 0x01
		if(failMsg)
    5df6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5df8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5dfa:	89 2b       	or	r24, r25
    5dfc:	09 f4       	brne	.+2      	; 0x5e00 <_Z14reportTimeTillmmPKcS0_+0x58>
    5dfe:	6b c1       	rjmp	.+726    	; 0x60d6 <_Z14reportTimeTillmmPKcS0_+0x32e>
		{
			sb_send_string((char*)failMsg);
    5e00:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5e02:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5e04:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
    5e08:	66 c1       	rjmp	.+716    	; 0x60d6 <_Z14reportTimeTillmmPKcS0_+0x32e>
		}
	}
	else
	{
		if(prefix)
    5e0a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5e0c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5e0e:	89 2b       	or	r24, r25
    5e10:	21 f0       	breq	.+8      	; 0x5e1a <_Z14reportTimeTillmmPKcS0_+0x72>
		{
			sb_send_string((char*)prefix);
    5e12:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5e14:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5e16:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}
		time_t dif = until - from;
    5e1a:	28 8d       	ldd	r18, Y+24	; 0x18
    5e1c:	39 8d       	ldd	r19, Y+25	; 0x19
    5e1e:	4a 8d       	ldd	r20, Y+26	; 0x1a
    5e20:	5b 8d       	ldd	r21, Y+27	; 0x1b
    5e22:	8c 89       	ldd	r24, Y+20	; 0x14
    5e24:	9d 89       	ldd	r25, Y+21	; 0x15
    5e26:	ae 89       	ldd	r26, Y+22	; 0x16
    5e28:	bf 89       	ldd	r27, Y+23	; 0x17
    5e2a:	79 01       	movw	r14, r18
    5e2c:	8a 01       	movw	r16, r20
    5e2e:	e8 1a       	sub	r14, r24
    5e30:	f9 0a       	sbc	r15, r25
    5e32:	0a 0b       	sbc	r16, r26
    5e34:	1b 0b       	sbc	r17, r27
    5e36:	d8 01       	movw	r26, r16
    5e38:	c7 01       	movw	r24, r14
    5e3a:	8a 83       	std	Y+2, r24	; 0x02
    5e3c:	9b 83       	std	Y+3, r25	; 0x03
    5e3e:	ac 83       	std	Y+4, r26	; 0x04
    5e40:	bd 83       	std	Y+5, r27	; 0x05
		uint16_t years = dif / YEAR;
    5e42:	8a 81       	ldd	r24, Y+2	; 0x02
    5e44:	9b 81       	ldd	r25, Y+3	; 0x03
    5e46:	ac 81       	ldd	r26, Y+4	; 0x04
    5e48:	bd 81       	ldd	r27, Y+5	; 0x05
    5e4a:	20 e8       	ldi	r18, 0x80	; 128
    5e4c:	33 e3       	ldi	r19, 0x33	; 51
    5e4e:	41 ee       	ldi	r20, 0xE1	; 225
    5e50:	51 e0       	ldi	r21, 0x01	; 1
    5e52:	bc 01       	movw	r22, r24
    5e54:	cd 01       	movw	r24, r26
    5e56:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    5e5a:	da 01       	movw	r26, r20
    5e5c:	c9 01       	movw	r24, r18
    5e5e:	8e 83       	std	Y+6, r24	; 0x06
    5e60:	9f 83       	std	Y+7, r25	; 0x07
		time_t hold = dif - (years * YEAR);
    5e62:	8e 81       	ldd	r24, Y+6	; 0x06
    5e64:	9f 81       	ldd	r25, Y+7	; 0x07
    5e66:	cc 01       	movw	r24, r24
    5e68:	a0 e0       	ldi	r26, 0x00	; 0
    5e6a:	b0 e0       	ldi	r27, 0x00	; 0
    5e6c:	9c 01       	movw	r18, r24
    5e6e:	ad 01       	movw	r20, r26
    5e70:	60 e8       	ldi	r22, 0x80	; 128
    5e72:	73 e3       	ldi	r23, 0x33	; 51
    5e74:	81 ee       	ldi	r24, 0xE1	; 225
    5e76:	91 e0       	ldi	r25, 0x01	; 1
    5e78:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    5e7c:	9b 01       	movw	r18, r22
    5e7e:	ac 01       	movw	r20, r24
    5e80:	8a 81       	ldd	r24, Y+2	; 0x02
    5e82:	9b 81       	ldd	r25, Y+3	; 0x03
    5e84:	ac 81       	ldd	r26, Y+4	; 0x04
    5e86:	bd 81       	ldd	r27, Y+5	; 0x05
    5e88:	82 1b       	sub	r24, r18
    5e8a:	93 0b       	sbc	r25, r19
    5e8c:	a4 0b       	sbc	r26, r20
    5e8e:	b5 0b       	sbc	r27, r21
    5e90:	88 87       	std	Y+8, r24	; 0x08
    5e92:	99 87       	std	Y+9, r25	; 0x09
    5e94:	aa 87       	std	Y+10, r26	; 0x0a
    5e96:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t days = hold / DAY;
    5e98:	88 85       	ldd	r24, Y+8	; 0x08
    5e9a:	99 85       	ldd	r25, Y+9	; 0x09
    5e9c:	aa 85       	ldd	r26, Y+10	; 0x0a
    5e9e:	bb 85       	ldd	r27, Y+11	; 0x0b
    5ea0:	20 e8       	ldi	r18, 0x80	; 128
    5ea2:	31 e5       	ldi	r19, 0x51	; 81
    5ea4:	41 e0       	ldi	r20, 0x01	; 1
    5ea6:	50 e0       	ldi	r21, 0x00	; 0
    5ea8:	bc 01       	movw	r22, r24
    5eaa:	cd 01       	movw	r24, r26
    5eac:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    5eb0:	da 01       	movw	r26, r20
    5eb2:	c9 01       	movw	r24, r18
    5eb4:	8c 87       	std	Y+12, r24	; 0x0c
    5eb6:	9d 87       	std	Y+13, r25	; 0x0d
		hold -= (days * DAY);
    5eb8:	8c 85       	ldd	r24, Y+12	; 0x0c
    5eba:	9d 85       	ldd	r25, Y+13	; 0x0d
    5ebc:	cc 01       	movw	r24, r24
    5ebe:	a0 e0       	ldi	r26, 0x00	; 0
    5ec0:	b0 e0       	ldi	r27, 0x00	; 0
    5ec2:	9c 01       	movw	r18, r24
    5ec4:	ad 01       	movw	r20, r26
    5ec6:	60 e8       	ldi	r22, 0x80	; 128
    5ec8:	71 e5       	ldi	r23, 0x51	; 81
    5eca:	81 e0       	ldi	r24, 0x01	; 1
    5ecc:	90 e0       	ldi	r25, 0x00	; 0
    5ece:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    5ed2:	9b 01       	movw	r18, r22
    5ed4:	ac 01       	movw	r20, r24
    5ed6:	88 85       	ldd	r24, Y+8	; 0x08
    5ed8:	99 85       	ldd	r25, Y+9	; 0x09
    5eda:	aa 85       	ldd	r26, Y+10	; 0x0a
    5edc:	bb 85       	ldd	r27, Y+11	; 0x0b
    5ede:	82 1b       	sub	r24, r18
    5ee0:	93 0b       	sbc	r25, r19
    5ee2:	a4 0b       	sbc	r26, r20
    5ee4:	b5 0b       	sbc	r27, r21
    5ee6:	88 87       	std	Y+8, r24	; 0x08
    5ee8:	99 87       	std	Y+9, r25	; 0x09
    5eea:	aa 87       	std	Y+10, r26	; 0x0a
    5eec:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t hours = hold / HOUR;
    5eee:	88 85       	ldd	r24, Y+8	; 0x08
    5ef0:	99 85       	ldd	r25, Y+9	; 0x09
    5ef2:	aa 85       	ldd	r26, Y+10	; 0x0a
    5ef4:	bb 85       	ldd	r27, Y+11	; 0x0b
    5ef6:	20 e1       	ldi	r18, 0x10	; 16
    5ef8:	3e e0       	ldi	r19, 0x0E	; 14
    5efa:	40 e0       	ldi	r20, 0x00	; 0
    5efc:	50 e0       	ldi	r21, 0x00	; 0
    5efe:	bc 01       	movw	r22, r24
    5f00:	cd 01       	movw	r24, r26
    5f02:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    5f06:	da 01       	movw	r26, r20
    5f08:	c9 01       	movw	r24, r18
    5f0a:	8e 87       	std	Y+14, r24	; 0x0e
    5f0c:	9f 87       	std	Y+15, r25	; 0x0f
		hold -= (hours * HOUR);
    5f0e:	8e 85       	ldd	r24, Y+14	; 0x0e
    5f10:	9f 85       	ldd	r25, Y+15	; 0x0f
    5f12:	9c 01       	movw	r18, r24
    5f14:	40 e0       	ldi	r20, 0x00	; 0
    5f16:	50 e0       	ldi	r21, 0x00	; 0
    5f18:	80 e1       	ldi	r24, 0x10	; 16
    5f1a:	9e e0       	ldi	r25, 0x0E	; 14
    5f1c:	dc 01       	movw	r26, r24
    5f1e:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    5f22:	9b 01       	movw	r18, r22
    5f24:	ac 01       	movw	r20, r24
    5f26:	88 85       	ldd	r24, Y+8	; 0x08
    5f28:	99 85       	ldd	r25, Y+9	; 0x09
    5f2a:	aa 85       	ldd	r26, Y+10	; 0x0a
    5f2c:	bb 85       	ldd	r27, Y+11	; 0x0b
    5f2e:	82 1b       	sub	r24, r18
    5f30:	93 0b       	sbc	r25, r19
    5f32:	a4 0b       	sbc	r26, r20
    5f34:	b5 0b       	sbc	r27, r21
    5f36:	88 87       	std	Y+8, r24	; 0x08
    5f38:	99 87       	std	Y+9, r25	; 0x09
    5f3a:	aa 87       	std	Y+10, r26	; 0x0a
    5f3c:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t minutes = hold / MINUTE;
    5f3e:	88 85       	ldd	r24, Y+8	; 0x08
    5f40:	99 85       	ldd	r25, Y+9	; 0x09
    5f42:	aa 85       	ldd	r26, Y+10	; 0x0a
    5f44:	bb 85       	ldd	r27, Y+11	; 0x0b
    5f46:	2c e3       	ldi	r18, 0x3C	; 60
    5f48:	30 e0       	ldi	r19, 0x00	; 0
    5f4a:	40 e0       	ldi	r20, 0x00	; 0
    5f4c:	50 e0       	ldi	r21, 0x00	; 0
    5f4e:	bc 01       	movw	r22, r24
    5f50:	cd 01       	movw	r24, r26
    5f52:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    5f56:	da 01       	movw	r26, r20
    5f58:	c9 01       	movw	r24, r18
    5f5a:	88 8b       	std	Y+16, r24	; 0x10
    5f5c:	99 8b       	std	Y+17, r25	; 0x11
		uint16_t seconds = hold - (minutes * MINUTE);
    5f5e:	28 85       	ldd	r18, Y+8	; 0x08
    5f60:	39 85       	ldd	r19, Y+9	; 0x09
    5f62:	48 89       	ldd	r20, Y+16	; 0x10
    5f64:	59 89       	ldd	r21, Y+17	; 0x11
    5f66:	6c e3       	ldi	r22, 0x3C	; 60
    5f68:	64 9f       	mul	r22, r20
    5f6a:	c0 01       	movw	r24, r0
    5f6c:	65 9f       	mul	r22, r21
    5f6e:	90 0d       	add	r25, r0
    5f70:	11 24       	eor	r1, r1
    5f72:	89 01       	movw	r16, r18
    5f74:	08 1b       	sub	r16, r24
    5f76:	19 0b       	sbc	r17, r25
    5f78:	c8 01       	movw	r24, r16
    5f7a:	8a 8b       	std	Y+18, r24	; 0x12
    5f7c:	9b 8b       	std	Y+19, r25	; 0x13

		g_tempStr[0] = '\0';
    5f7e:	10 92 ff 46 	sts	0x46FF, r1	; 0x8046ff <_ZL9g_tempStr>

		if(years)
    5f82:	8e 81       	ldd	r24, Y+6	; 0x06
    5f84:	9f 81       	ldd	r25, Y+7	; 0x07
    5f86:	89 2b       	or	r24, r25
    5f88:	f1 f0       	breq	.+60     	; 0x5fc6 <_Z14reportTimeTillmmPKcS0_+0x21e>
		{
			sprintf(g_tempStr, "%d yrs ", years);
    5f8a:	8f 81       	ldd	r24, Y+7	; 0x07
    5f8c:	8f 93       	push	r24
    5f8e:	8e 81       	ldd	r24, Y+6	; 0x06
    5f90:	8f 93       	push	r24
    5f92:	87 e5       	ldi	r24, 0x57	; 87
    5f94:	93 e4       	ldi	r25, 0x43	; 67
    5f96:	89 2f       	mov	r24, r25
    5f98:	8f 93       	push	r24
    5f9a:	87 e5       	ldi	r24, 0x57	; 87
    5f9c:	93 e4       	ldi	r25, 0x43	; 67
    5f9e:	8f 93       	push	r24
    5fa0:	8f ef       	ldi	r24, 0xFF	; 255
    5fa2:	96 e4       	ldi	r25, 0x46	; 70
    5fa4:	89 2f       	mov	r24, r25
    5fa6:	8f 93       	push	r24
    5fa8:	8f ef       	ldi	r24, 0xFF	; 255
    5faa:	96 e4       	ldi	r25, 0x46	; 70
    5fac:	8f 93       	push	r24
    5fae:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    5fb2:	0f 90       	pop	r0
    5fb4:	0f 90       	pop	r0
    5fb6:	0f 90       	pop	r0
    5fb8:	0f 90       	pop	r0
    5fba:	0f 90       	pop	r0
    5fbc:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    5fbe:	8f ef       	ldi	r24, 0xFF	; 255
    5fc0:	96 e4       	ldi	r25, 0x46	; 70
    5fc2:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}

		if(days)
    5fc6:	8c 85       	ldd	r24, Y+12	; 0x0c
    5fc8:	9d 85       	ldd	r25, Y+13	; 0x0d
    5fca:	89 2b       	or	r24, r25
    5fcc:	f1 f0       	breq	.+60     	; 0x600a <_Z14reportTimeTillmmPKcS0_+0x262>
		{
			sprintf(g_tempStr, "%d days ", days);
    5fce:	8d 85       	ldd	r24, Y+13	; 0x0d
    5fd0:	8f 93       	push	r24
    5fd2:	8c 85       	ldd	r24, Y+12	; 0x0c
    5fd4:	8f 93       	push	r24
    5fd6:	8f e5       	ldi	r24, 0x5F	; 95
    5fd8:	93 e4       	ldi	r25, 0x43	; 67
    5fda:	89 2f       	mov	r24, r25
    5fdc:	8f 93       	push	r24
    5fde:	8f e5       	ldi	r24, 0x5F	; 95
    5fe0:	93 e4       	ldi	r25, 0x43	; 67
    5fe2:	8f 93       	push	r24
    5fe4:	8f ef       	ldi	r24, 0xFF	; 255
    5fe6:	96 e4       	ldi	r25, 0x46	; 70
    5fe8:	89 2f       	mov	r24, r25
    5fea:	8f 93       	push	r24
    5fec:	8f ef       	ldi	r24, 0xFF	; 255
    5fee:	96 e4       	ldi	r25, 0x46	; 70
    5ff0:	8f 93       	push	r24
    5ff2:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    5ff6:	0f 90       	pop	r0
    5ff8:	0f 90       	pop	r0
    5ffa:	0f 90       	pop	r0
    5ffc:	0f 90       	pop	r0
    5ffe:	0f 90       	pop	r0
    6000:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6002:	8f ef       	ldi	r24, 0xFF	; 255
    6004:	96 e4       	ldi	r25, 0x46	; 70
    6006:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}

		if(hours)
    600a:	8e 85       	ldd	r24, Y+14	; 0x0e
    600c:	9f 85       	ldd	r25, Y+15	; 0x0f
    600e:	89 2b       	or	r24, r25
    6010:	f1 f0       	breq	.+60     	; 0x604e <_Z14reportTimeTillmmPKcS0_+0x2a6>
		{
			sprintf(g_tempStr, "%d hrs ", hours);
    6012:	8f 85       	ldd	r24, Y+15	; 0x0f
    6014:	8f 93       	push	r24
    6016:	8e 85       	ldd	r24, Y+14	; 0x0e
    6018:	8f 93       	push	r24
    601a:	88 e6       	ldi	r24, 0x68	; 104
    601c:	93 e4       	ldi	r25, 0x43	; 67
    601e:	89 2f       	mov	r24, r25
    6020:	8f 93       	push	r24
    6022:	88 e6       	ldi	r24, 0x68	; 104
    6024:	93 e4       	ldi	r25, 0x43	; 67
    6026:	8f 93       	push	r24
    6028:	8f ef       	ldi	r24, 0xFF	; 255
    602a:	96 e4       	ldi	r25, 0x46	; 70
    602c:	89 2f       	mov	r24, r25
    602e:	8f 93       	push	r24
    6030:	8f ef       	ldi	r24, 0xFF	; 255
    6032:	96 e4       	ldi	r25, 0x46	; 70
    6034:	8f 93       	push	r24
    6036:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    603a:	0f 90       	pop	r0
    603c:	0f 90       	pop	r0
    603e:	0f 90       	pop	r0
    6040:	0f 90       	pop	r0
    6042:	0f 90       	pop	r0
    6044:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6046:	8f ef       	ldi	r24, 0xFF	; 255
    6048:	96 e4       	ldi	r25, 0x46	; 70
    604a:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}

		if(minutes)
    604e:	88 89       	ldd	r24, Y+16	; 0x10
    6050:	99 89       	ldd	r25, Y+17	; 0x11
    6052:	89 2b       	or	r24, r25
    6054:	f1 f0       	breq	.+60     	; 0x6092 <_Z14reportTimeTillmmPKcS0_+0x2ea>
		{
			sprintf(g_tempStr, "%d min ", minutes);
    6056:	89 89       	ldd	r24, Y+17	; 0x11
    6058:	8f 93       	push	r24
    605a:	88 89       	ldd	r24, Y+16	; 0x10
    605c:	8f 93       	push	r24
    605e:	80 e7       	ldi	r24, 0x70	; 112
    6060:	93 e4       	ldi	r25, 0x43	; 67
    6062:	89 2f       	mov	r24, r25
    6064:	8f 93       	push	r24
    6066:	80 e7       	ldi	r24, 0x70	; 112
    6068:	93 e4       	ldi	r25, 0x43	; 67
    606a:	8f 93       	push	r24
    606c:	8f ef       	ldi	r24, 0xFF	; 255
    606e:	96 e4       	ldi	r25, 0x46	; 70
    6070:	89 2f       	mov	r24, r25
    6072:	8f 93       	push	r24
    6074:	8f ef       	ldi	r24, 0xFF	; 255
    6076:	96 e4       	ldi	r25, 0x46	; 70
    6078:	8f 93       	push	r24
    607a:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    607e:	0f 90       	pop	r0
    6080:	0f 90       	pop	r0
    6082:	0f 90       	pop	r0
    6084:	0f 90       	pop	r0
    6086:	0f 90       	pop	r0
    6088:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    608a:	8f ef       	ldi	r24, 0xFF	; 255
    608c:	96 e4       	ldi	r25, 0x46	; 70
    608e:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}

		sprintf(g_tempStr, "%d sec", seconds);
    6092:	8b 89       	ldd	r24, Y+19	; 0x13
    6094:	8f 93       	push	r24
    6096:	8a 89       	ldd	r24, Y+18	; 0x12
    6098:	8f 93       	push	r24
    609a:	88 e7       	ldi	r24, 0x78	; 120
    609c:	93 e4       	ldi	r25, 0x43	; 67
    609e:	89 2f       	mov	r24, r25
    60a0:	8f 93       	push	r24
    60a2:	88 e7       	ldi	r24, 0x78	; 120
    60a4:	93 e4       	ldi	r25, 0x43	; 67
    60a6:	8f 93       	push	r24
    60a8:	8f ef       	ldi	r24, 0xFF	; 255
    60aa:	96 e4       	ldi	r25, 0x46	; 70
    60ac:	89 2f       	mov	r24, r25
    60ae:	8f 93       	push	r24
    60b0:	8f ef       	ldi	r24, 0xFF	; 255
    60b2:	96 e4       	ldi	r25, 0x46	; 70
    60b4:	8f 93       	push	r24
    60b6:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    60ba:	0f 90       	pop	r0
    60bc:	0f 90       	pop	r0
    60be:	0f 90       	pop	r0
    60c0:	0f 90       	pop	r0
    60c2:	0f 90       	pop	r0
    60c4:	0f 90       	pop	r0
		sb_send_string(g_tempStr);
    60c6:	8f ef       	ldi	r24, 0xFF	; 255
    60c8:	96 e4       	ldi	r25, 0x46	; 70
    60ca:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>

		sb_send_NewLine();
    60ce:	0e 94 78 5d 	call	0xbaf0	; 0xbaf0 <sb_send_NewLine>
		g_tempStr[0] = '\0';
    60d2:	10 92 ff 46 	sts	0x46FF, r1	; 0x8046ff <_ZL9g_tempStr>
	}

	return( failure);
    60d6:	89 81       	ldd	r24, Y+1	; 0x01
}
    60d8:	6f 96       	adiw	r28, 0x1f	; 31
    60da:	cd bf       	out	0x3d, r28	; 61
    60dc:	de bf       	out	0x3e, r29	; 62
    60de:	df 91       	pop	r29
    60e0:	cf 91       	pop	r28
    60e2:	1f 91       	pop	r17
    60e4:	0f 91       	pop	r16
    60e6:	ff 90       	pop	r15
    60e8:	ef 90       	pop	r14
    60ea:	08 95       	ret

000060ec <_Z23clockConfigurationCheckv>:



ConfigurationState_t clockConfigurationCheck(void)
{
    60ec:	cf 93       	push	r28
    60ee:	df 93       	push	r29
    60f0:	cd b7       	in	r28, 0x3d	; 61
    60f2:	de b7       	in	r29, 0x3e	; 62
	if((g_event_finish_epoch < MINIMUM_EPOCH) || (g_event_start_epoch < MINIMUM_EPOCH) || (g_current_epoch < MINIMUM_EPOCH))
    60f4:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    60f8:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    60fc:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    6100:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    6104:	81 15       	cp	r24, r1
    6106:	96 46       	sbci	r25, 0x66	; 102
    6108:	ae 4e       	sbci	r26, 0xEE	; 238
    610a:	bf 45       	sbci	r27, 0x5F	; 95
    610c:	d0 f0       	brcs	.+52     	; 0x6142 <_Z23clockConfigurationCheckv+0x56>
    610e:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    6112:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    6116:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    611a:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    611e:	81 15       	cp	r24, r1
    6120:	96 46       	sbci	r25, 0x66	; 102
    6122:	ae 4e       	sbci	r26, 0xEE	; 238
    6124:	bf 45       	sbci	r27, 0x5F	; 95
    6126:	68 f0       	brcs	.+26     	; 0x6142 <_Z23clockConfigurationCheckv+0x56>
    6128:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    612c:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    6130:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    6134:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    6138:	81 15       	cp	r24, r1
    613a:	96 46       	sbci	r25, 0x66	; 102
    613c:	ae 4e       	sbci	r26, 0xEE	; 238
    613e:	bf 45       	sbci	r27, 0x5F	; 95
    6140:	10 f4       	brcc	.+4      	; 0x6146 <_Z23clockConfigurationCheckv+0x5a>
    6142:	81 e0       	ldi	r24, 0x01	; 1
    6144:	01 c0       	rjmp	.+2      	; 0x6148 <_Z23clockConfigurationCheckv+0x5c>
    6146:	80 e0       	ldi	r24, 0x00	; 0
    6148:	88 23       	and	r24, r24
    614a:	11 f0       	breq	.+4      	; 0x6150 <_Z23clockConfigurationCheckv+0x64>
	{
		return(CONFIGURATION_ERROR);
    614c:	82 e0       	ldi	r24, 0x02	; 2
    614e:	62 c0       	rjmp	.+196    	; 0x6214 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_event_finish_epoch <= g_event_start_epoch) /* Event configured to finish before it started */
    6150:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    6154:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    6158:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    615c:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    6160:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    6164:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    6168:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    616c:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    6170:	61 e0       	ldi	r22, 0x01	; 1
    6172:	82 17       	cp	r24, r18
    6174:	93 07       	cpc	r25, r19
    6176:	a4 07       	cpc	r26, r20
    6178:	b5 07       	cpc	r27, r21
    617a:	08 f4       	brcc	.+2      	; 0x617e <_Z23clockConfigurationCheckv+0x92>
    617c:	60 e0       	ldi	r22, 0x00	; 0
    617e:	66 23       	and	r22, r22
    6180:	11 f0       	breq	.+4      	; 0x6186 <_Z23clockConfigurationCheckv+0x9a>
	{
		return(CONFIGURATION_ERROR);
    6182:	82 e0       	ldi	r24, 0x02	; 2
    6184:	47 c0       	rjmp	.+142    	; 0x6214 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_finish_epoch)  /* The scheduled event is over */
    6186:	20 91 9b 47 	lds	r18, 0x479B	; 0x80479b <g_current_epoch>
    618a:	30 91 9c 47 	lds	r19, 0x479C	; 0x80479c <g_current_epoch+0x1>
    618e:	40 91 9d 47 	lds	r20, 0x479D	; 0x80479d <g_current_epoch+0x2>
    6192:	50 91 9e 47 	lds	r21, 0x479E	; 0x80479e <g_current_epoch+0x3>
    6196:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    619a:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    619e:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    61a2:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    61a6:	61 e0       	ldi	r22, 0x01	; 1
    61a8:	82 17       	cp	r24, r18
    61aa:	93 07       	cpc	r25, r19
    61ac:	a4 07       	cpc	r26, r20
    61ae:	b5 07       	cpc	r27, r21
    61b0:	08 f0       	brcs	.+2      	; 0x61b4 <_Z23clockConfigurationCheckv+0xc8>
    61b2:	60 e0       	ldi	r22, 0x00	; 0
    61b4:	66 23       	and	r22, r22
    61b6:	11 f0       	breq	.+4      	; 0x61bc <_Z23clockConfigurationCheckv+0xd0>
	{
		return(CONFIGURATION_ERROR);
    61b8:	82 e0       	ldi	r24, 0x02	; 2
    61ba:	2c c0       	rjmp	.+88     	; 0x6214 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_start_epoch)       /* Event should be running */
    61bc:	20 91 9b 47 	lds	r18, 0x479B	; 0x80479b <g_current_epoch>
    61c0:	30 91 9c 47 	lds	r19, 0x479C	; 0x80479c <g_current_epoch+0x1>
    61c4:	40 91 9d 47 	lds	r20, 0x479D	; 0x80479d <g_current_epoch+0x2>
    61c8:	50 91 9e 47 	lds	r21, 0x479E	; 0x80479e <g_current_epoch+0x3>
    61cc:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    61d0:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    61d4:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    61d8:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    61dc:	61 e0       	ldi	r22, 0x01	; 1
    61de:	82 17       	cp	r24, r18
    61e0:	93 07       	cpc	r25, r19
    61e2:	a4 07       	cpc	r26, r20
    61e4:	b5 07       	cpc	r27, r21
    61e6:	08 f0       	brcs	.+2      	; 0x61ea <_Z23clockConfigurationCheckv+0xfe>
    61e8:	60 e0       	ldi	r22, 0x00	; 0
    61ea:	66 23       	and	r22, r22
    61ec:	51 f0       	breq	.+20     	; 0x6202 <_Z23clockConfigurationCheckv+0x116>
	{
		if(!g_event_enabled)
    61ee:	90 91 7a 47 	lds	r25, 0x477A	; 0x80477a <g_event_enabled>
    61f2:	81 e0       	ldi	r24, 0x01	; 1
    61f4:	89 27       	eor	r24, r25
    61f6:	88 23       	and	r24, r24
    61f8:	11 f0       	breq	.+4      	; 0x61fe <_Z23clockConfigurationCheckv+0x112>
		{
			return(SCHEDULED_EVENT_DID_NOT_START);  /* Event scheduled to be running isn't */
    61fa:	83 e0       	ldi	r24, 0x03	; 3
    61fc:	0b c0       	rjmp	.+22     	; 0x6214 <_Z23clockConfigurationCheckv+0x128>
		}
		else
		{
			return(EVENT_IN_PROGRESS);              /* Event is running, so clock settings don't matter */
    61fe:	85 e0       	ldi	r24, 0x05	; 5
    6200:	09 c0       	rjmp	.+18     	; 0x6214 <_Z23clockConfigurationCheckv+0x128>
		}
	}
	else if(!g_use_rtc_for_startstop)
    6202:	90 91 9f 47 	lds	r25, 0x479F	; 0x80479f <g_use_rtc_for_startstop>
    6206:	81 e0       	ldi	r24, 0x01	; 1
    6208:	89 27       	eor	r24, r25
    620a:	88 23       	and	r24, r24
    620c:	11 f0       	breq	.+4      	; 0x6212 <_Z23clockConfigurationCheckv+0x126>
	{
		return(SCHEDULED_EVENT_WILL_NEVER_RUN);
    620e:	84 e0       	ldi	r24, 0x04	; 4
    6210:	01 c0       	rjmp	.+2      	; 0x6214 <_Z23clockConfigurationCheckv+0x128>
	}

	return(WAITING_FOR_START);  /* Future event hasn't started yet */
    6212:	81 e0       	ldi	r24, 0x01	; 1
}
    6214:	df 91       	pop	r29
    6216:	cf 91       	pop	r28
    6218:	08 95       	ret

0000621a <_Z18reportConfigErrorsv>:

void reportConfigErrors(void)
{
    621a:	cf 93       	push	r28
    621c:	df 93       	push	r29
    621e:	cd b7       	in	r28, 0x3d	; 61
    6220:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    6222:	80 e0       	ldi	r24, 0x00	; 0
    6224:	90 e0       	ldi	r25, 0x00	; 0
    6226:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    622a:	dc 01       	movw	r26, r24
    622c:	cb 01       	movw	r24, r22
    622e:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_current_epoch>
    6232:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_current_epoch+0x1>
    6236:	a0 93 9d 47 	sts	0x479D, r26	; 0x80479d <g_current_epoch+0x2>
    623a:	b0 93 9e 47 	sts	0x479E, r27	; 0x80479e <g_current_epoch+0x3>

	if(g_messages_text[STATION_ID][0] == '\0')
    623e:	80 91 59 47 	lds	r24, 0x4759	; 0x804759 <g_messages_text+0x15>
    6242:	88 23       	and	r24, r24
    6244:	21 f4       	brne	.+8      	; 0x624e <_Z18reportConfigErrorsv+0x34>
	{
		sb_send_string(TEXT_SET_ID_TXT);
    6246:	8f e7       	ldi	r24, 0x7F	; 127
    6248:	93 e4       	ldi	r25, 0x43	; 67
    624a:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
	}

	if(g_current_epoch < MINIMUM_EPOCH) /* Current time is invalid */
    624e:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    6252:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    6256:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    625a:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    625e:	81 15       	cp	r24, r1
    6260:	96 46       	sbci	r25, 0x66	; 102
    6262:	ae 4e       	sbci	r26, 0xEE	; 238
    6264:	bf 45       	sbci	r27, 0x5F	; 95
    6266:	20 f4       	brcc	.+8      	; 0x6270 <_Z18reportConfigErrorsv+0x56>
	{
		sb_send_string(TEXT_SET_TIME_TXT);
    6268:	80 ea       	ldi	r24, 0xA0	; 160
    626a:	93 e4       	ldi	r25, 0x43	; 67
    626c:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
	}

	if(g_event_finish_epoch < g_current_epoch)      /* Event has already finished */
    6270:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    6274:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    6278:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    627c:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    6280:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    6284:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    6288:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    628c:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    6290:	61 e0       	ldi	r22, 0x01	; 1
    6292:	28 17       	cp	r18, r24
    6294:	39 07       	cpc	r19, r25
    6296:	4a 07       	cpc	r20, r26
    6298:	5b 07       	cpc	r21, r27
    629a:	08 f0       	brcs	.+2      	; 0x629e <_Z18reportConfigErrorsv+0x84>
    629c:	60 e0       	ldi	r22, 0x00	; 0
    629e:	66 23       	and	r22, r22
    62a0:	11 f1       	breq	.+68     	; 0x62e6 <_Z18reportConfigErrorsv+0xcc>
	{
		if(g_event_start_epoch < g_current_epoch)   /* Event has already started */
    62a2:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    62a6:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    62aa:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    62ae:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    62b2:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    62b6:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    62ba:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    62be:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    62c2:	61 e0       	ldi	r22, 0x01	; 1
    62c4:	28 17       	cp	r18, r24
    62c6:	39 07       	cpc	r19, r25
    62c8:	4a 07       	cpc	r20, r26
    62ca:	5b 07       	cpc	r21, r27
    62cc:	08 f0       	brcs	.+2      	; 0x62d0 <_Z18reportConfigErrorsv+0xb6>
    62ce:	60 e0       	ldi	r22, 0x00	; 0
    62d0:	66 23       	and	r22, r22
    62d2:	21 f0       	breq	.+8      	; 0x62dc <_Z18reportConfigErrorsv+0xc2>
		{
			sb_send_string(TEXT_SET_START_TXT);
    62d4:	88 ec       	ldi	r24, 0xC8	; 200
    62d6:	93 e4       	ldi	r25, 0x43	; 67
    62d8:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
    62dc:	8e ee       	ldi	r24, 0xEE	; 238
    62de:	93 e4       	ldi	r25, 0x43	; 67
    62e0:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    62e4:	33 c0       	rjmp	.+102    	; 0x634c <_Z18reportConfigErrorsv+0x132>
			sb_send_string(TEXT_SET_START_TXT);
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
	}
	else if(g_event_start_epoch < g_current_epoch)  /* Event has already started */
    62e6:	20 91 72 47 	lds	r18, 0x4772	; 0x804772 <g_event_start_epoch>
    62ea:	30 91 73 47 	lds	r19, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    62ee:	40 91 74 47 	lds	r20, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    62f2:	50 91 75 47 	lds	r21, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    62f6:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_current_epoch>
    62fa:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_current_epoch+0x1>
    62fe:	a0 91 9d 47 	lds	r26, 0x479D	; 0x80479d <g_current_epoch+0x2>
    6302:	b0 91 9e 47 	lds	r27, 0x479E	; 0x80479e <g_current_epoch+0x3>
    6306:	61 e0       	ldi	r22, 0x01	; 1
    6308:	28 17       	cp	r18, r24
    630a:	39 07       	cpc	r19, r25
    630c:	4a 07       	cpc	r20, r26
    630e:	5b 07       	cpc	r21, r27
    6310:	08 f0       	brcs	.+2      	; 0x6314 <_Z18reportConfigErrorsv+0xfa>
    6312:	60 e0       	ldi	r22, 0x00	; 0
    6314:	66 23       	and	r22, r22
    6316:	d1 f0       	breq	.+52     	; 0x634c <_Z18reportConfigErrorsv+0x132>
	{
		if(g_event_start_epoch < MINIMUM_EPOCH)     /* Start in invalid */
    6318:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    631c:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    6320:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    6324:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    6328:	21 e0       	ldi	r18, 0x01	; 1
    632a:	81 15       	cp	r24, r1
    632c:	96 46       	sbci	r25, 0x66	; 102
    632e:	ae 4e       	sbci	r26, 0xEE	; 238
    6330:	bf 45       	sbci	r27, 0x5F	; 95
    6332:	08 f0       	brcs	.+2      	; 0x6336 <_Z18reportConfigErrorsv+0x11c>
    6334:	20 e0       	ldi	r18, 0x00	; 0
    6336:	22 23       	and	r18, r18
    6338:	29 f0       	breq	.+10     	; 0x6344 <_Z18reportConfigErrorsv+0x12a>
		{
			sb_send_string(TEXT_SET_START_TXT);
    633a:	88 ec       	ldi	r24, 0xC8	; 200
    633c:	93 e4       	ldi	r25, 0x43	; 67
    633e:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    6342:	04 c0       	rjmp	.+8      	; 0x634c <_Z18reportConfigErrorsv+0x132>
		{
			sb_send_string(TEXT_SET_START_TXT);
		}
		else
		{
			sb_send_string((char*)"Event running...\n");
    6344:	85 e1       	ldi	r24, 0x15	; 21
    6346:	94 e4       	ldi	r25, 0x44	; 68
    6348:	0e 94 a2 5d 	call	0xbb44	; 0xbb44 <sb_send_string>
		}
	}
}
    634c:	00 00       	nop
    634e:	df 91       	pop	r29
    6350:	cf 91       	pop	r28
    6352:	08 95       	ret

00006354 <_Z41__static_initialization_and_destruction_0ii>:
    6354:	cf 93       	push	r28
    6356:	df 93       	push	r29
    6358:	00 d0       	rcall	.+0      	; 0x635a <_Z41__static_initialization_and_destruction_0ii+0x6>
    635a:	00 d0       	rcall	.+0      	; 0x635c <_Z41__static_initialization_and_destruction_0ii+0x8>
    635c:	cd b7       	in	r28, 0x3d	; 61
    635e:	de b7       	in	r29, 0x3e	; 62
    6360:	89 83       	std	Y+1, r24	; 0x01
    6362:	9a 83       	std	Y+2, r25	; 0x02
    6364:	6b 83       	std	Y+3, r22	; 0x03
    6366:	7c 83       	std	Y+4, r23	; 0x04
    6368:	89 81       	ldd	r24, Y+1	; 0x01
    636a:	9a 81       	ldd	r25, Y+2	; 0x02
    636c:	01 97       	sbiw	r24, 0x01	; 1
    636e:	61 f4       	brne	.+24     	; 0x6388 <_Z41__static_initialization_and_destruction_0ii+0x34>
    6370:	8b 81       	ldd	r24, Y+3	; 0x03
    6372:	9c 81       	ldd	r25, Y+4	; 0x04
    6374:	01 96       	adiw	r24, 0x01	; 1
    6376:	41 f4       	brne	.+16     	; 0x6388 <_Z41__static_initialization_and_destruction_0ii+0x34>
static volatile uint16_t g_lastConversionResult[NUMBER_OF_POLLED_ADC_CHANNELS];

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;

leds LEDS = leds();
    6378:	80 e9       	ldi	r24, 0x90	; 144
    637a:	97 e4       	ldi	r25, 0x47	; 71
    637c:	0e 94 f1 4c 	call	0x99e2	; 0x99e2 <_ZN4ledsC1Ev>

EepromManager g_ee_mgr;
    6380:	81 e9       	ldi	r24, 0x91	; 145
    6382:	97 e4       	ldi	r25, 0x47	; 71
    6384:	0e 94 8e 42 	call	0x851c	; 0x851c <_ZN13EepromManagerC1Ev>
    6388:	89 81       	ldd	r24, Y+1	; 0x01
    638a:	9a 81       	ldd	r25, Y+2	; 0x02
    638c:	89 2b       	or	r24, r25
    638e:	61 f4       	brne	.+24     	; 0x63a8 <_Z41__static_initialization_and_destruction_0ii+0x54>
    6390:	8b 81       	ldd	r24, Y+3	; 0x03
    6392:	9c 81       	ldd	r25, Y+4	; 0x04
    6394:	01 96       	adiw	r24, 0x01	; 1
    6396:	41 f4       	brne	.+16     	; 0x63a8 <_Z41__static_initialization_and_destruction_0ii+0x54>
    6398:	81 e9       	ldi	r24, 0x91	; 145
    639a:	97 e4       	ldi	r25, 0x47	; 71
    639c:	0e 94 9b 42 	call	0x8536	; 0x8536 <_ZN13EepromManagerD1Ev>
static volatile uint16_t g_lastConversionResult[NUMBER_OF_POLLED_ADC_CHANNELS];

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;

leds LEDS = leds();
    63a0:	80 e9       	ldi	r24, 0x90	; 144
    63a2:	97 e4       	ldi	r25, 0x47	; 71
    63a4:	0e 94 fe 4c 	call	0x99fc	; 0x99fc <_ZN4ledsD1Ev>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    63a8:	00 00       	nop
    63aa:	24 96       	adiw	r28, 0x04	; 4
    63ac:	cd bf       	out	0x3d, r28	; 61
    63ae:	de bf       	out	0x3e, r29	; 62
    63b0:	df 91       	pop	r29
    63b2:	cf 91       	pop	r28
    63b4:	08 95       	ret

000063b6 <_GLOBAL__sub_I_g_battery_type>:
    63b6:	cf 93       	push	r28
    63b8:	df 93       	push	r29
    63ba:	cd b7       	in	r28, 0x3d	; 61
    63bc:	de b7       	in	r29, 0x3e	; 62
    63be:	6f ef       	ldi	r22, 0xFF	; 255
    63c0:	7f ef       	ldi	r23, 0xFF	; 255
    63c2:	81 e0       	ldi	r24, 0x01	; 1
    63c4:	90 e0       	ldi	r25, 0x00	; 0
    63c6:	0e 94 aa 31 	call	0x6354	; 0x6354 <_Z41__static_initialization_and_destruction_0ii>
    63ca:	df 91       	pop	r29
    63cc:	cf 91       	pop	r28
    63ce:	08 95       	ret

000063d0 <_GLOBAL__sub_D_g_battery_type>:
    63d0:	cf 93       	push	r28
    63d2:	df 93       	push	r29
    63d4:	cd b7       	in	r28, 0x3d	; 61
    63d6:	de b7       	in	r29, 0x3e	; 62
    63d8:	6f ef       	ldi	r22, 0xFF	; 255
    63da:	7f ef       	ldi	r23, 0xFF	; 255
    63dc:	80 e0       	ldi	r24, 0x00	; 0
    63de:	90 e0       	ldi	r25, 0x00	; 0
    63e0:	0e 94 aa 31 	call	0x6354	; 0x6354 <_Z41__static_initialization_and_destruction_0ii>
    63e4:	df 91       	pop	r29
    63e6:	cf 91       	pop	r28
    63e8:	08 95       	ret

000063ea <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
	
	return(temperature_in_C);
}
    63ea:	cf 93       	push	r28
    63ec:	df 93       	push	r29
    63ee:	1f 92       	push	r1
    63f0:	cd b7       	in	r28, 0x3d	; 61
    63f2:	de b7       	in	r29, 0x3e	; 62
    63f4:	89 83       	std	Y+1, r24	; 0x01
    63f6:	89 81       	ldd	r24, Y+1	; 0x01
    63f8:	88 2f       	mov	r24, r24
    63fa:	90 e0       	ldi	r25, 0x00	; 0
    63fc:	83 30       	cpi	r24, 0x03	; 3
    63fe:	91 05       	cpc	r25, r1
    6400:	09 f1       	breq	.+66     	; 0x6444 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5a>
    6402:	84 30       	cpi	r24, 0x04	; 4
    6404:	91 05       	cpc	r25, r1
    6406:	34 f4       	brge	.+12     	; 0x6414 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x2a>
    6408:	81 30       	cpi	r24, 0x01	; 1
    640a:	91 05       	cpc	r25, r1
    640c:	49 f0       	breq	.+18     	; 0x6420 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x36>
    640e:	02 97       	sbiw	r24, 0x02	; 2
    6410:	81 f0       	breq	.+32     	; 0x6432 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x48>
    6412:	33 c0       	rjmp	.+102    	; 0x647a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
    6414:	84 30       	cpi	r24, 0x04	; 4
    6416:	91 05       	cpc	r25, r1
    6418:	f1 f0       	breq	.+60     	; 0x6456 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x6c>
    641a:	05 97       	sbiw	r24, 0x05	; 5
    641c:	29 f1       	breq	.+74     	; 0x6468 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x7e>
    641e:	2d c0       	rjmp	.+90     	; 0x647a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
    6420:	81 e0       	ldi	r24, 0x01	; 1
    6422:	0e 94 fe 32 	call	0x65fc	; 0x65fc <_ZL16ADC0_SYSTEM_initb>
    6426:	80 e0       	ldi	r24, 0x00	; 0
    6428:	96 e0       	ldi	r25, 0x06	; 6
    642a:	22 e0       	ldi	r18, 0x02	; 2
    642c:	fc 01       	movw	r30, r24
    642e:	20 87       	std	Z+8, r18	; 0x08
    6430:	27 c0       	rjmp	.+78     	; 0x6480 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    6432:	80 e0       	ldi	r24, 0x00	; 0
    6434:	0e 94 fe 32 	call	0x65fc	; 0x65fc <_ZL16ADC0_SYSTEM_initb>
    6438:	80 e0       	ldi	r24, 0x00	; 0
    643a:	96 e0       	ldi	r25, 0x06	; 6
    643c:	23 e0       	ldi	r18, 0x03	; 3
    643e:	fc 01       	movw	r30, r24
    6440:	20 87       	std	Z+8, r18	; 0x08
    6442:	1e c0       	rjmp	.+60     	; 0x6480 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    6444:	80 e0       	ldi	r24, 0x00	; 0
    6446:	0e 94 fe 32 	call	0x65fc	; 0x65fc <_ZL16ADC0_SYSTEM_initb>
    644a:	80 e0       	ldi	r24, 0x00	; 0
    644c:	96 e0       	ldi	r25, 0x06	; 6
    644e:	24 e0       	ldi	r18, 0x04	; 4
    6450:	fc 01       	movw	r30, r24
    6452:	20 87       	std	Z+8, r18	; 0x08
    6454:	15 c0       	rjmp	.+42     	; 0x6480 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    6456:	80 e0       	ldi	r24, 0x00	; 0
    6458:	0e 94 fe 32 	call	0x65fc	; 0x65fc <_ZL16ADC0_SYSTEM_initb>
    645c:	80 e0       	ldi	r24, 0x00	; 0
    645e:	96 e0       	ldi	r25, 0x06	; 6
    6460:	25 e0       	ldi	r18, 0x05	; 5
    6462:	fc 01       	movw	r30, r24
    6464:	20 87       	std	Z+8, r18	; 0x08
    6466:	0c c0       	rjmp	.+24     	; 0x6480 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    6468:	80 e0       	ldi	r24, 0x00	; 0
    646a:	0e 94 fe 32 	call	0x65fc	; 0x65fc <_ZL16ADC0_SYSTEM_initb>
    646e:	80 e0       	ldi	r24, 0x00	; 0
    6470:	96 e0       	ldi	r25, 0x06	; 6
    6472:	22 e4       	ldi	r18, 0x42	; 66
    6474:	fc 01       	movw	r30, r24
    6476:	20 87       	std	Z+8, r18	; 0x08
    6478:	03 c0       	rjmp	.+6      	; 0x6480 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x96>
    647a:	0e 94 13 33 	call	0x6626	; 0x6626 <_ZL20ADC0_SYSTEM_shutdownv>
    647e:	00 00       	nop
    6480:	00 00       	nop
    6482:	0f 90       	pop	r0
    6484:	df 91       	pop	r29
    6486:	cf 91       	pop	r28
    6488:	08 95       	ret

0000648a <_Z9ADC0_readv>:
    648a:	cf 93       	push	r28
    648c:	df 93       	push	r29
    648e:	cd b7       	in	r28, 0x3d	; 61
    6490:	de b7       	in	r29, 0x3e	; 62
    6492:	80 e0       	ldi	r24, 0x00	; 0
    6494:	96 e0       	ldi	r25, 0x06	; 6
    6496:	fc 01       	movw	r30, r24
    6498:	80 89       	ldd	r24, Z+16	; 0x10
    649a:	91 89       	ldd	r25, Z+17	; 0x11
    649c:	df 91       	pop	r29
    649e:	cf 91       	pop	r28
    64a0:	08 95       	ret

000064a2 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    64a2:	cf 93       	push	r28
    64a4:	df 93       	push	r29
    64a6:	cd b7       	in	r28, 0x3d	; 61
    64a8:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    64aa:	80 e6       	ldi	r24, 0x60	; 96
    64ac:	94 e0       	ldi	r25, 0x04	; 4
    64ae:	20 e6       	ldi	r18, 0x60	; 96
    64b0:	34 e0       	ldi	r19, 0x04	; 4
    64b2:	f9 01       	movw	r30, r18
    64b4:	22 89       	ldd	r18, Z+18	; 0x12
    64b6:	28 7f       	andi	r18, 0xF8	; 248
    64b8:	fc 01       	movw	r30, r24
    64ba:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    64bc:	80 e6       	ldi	r24, 0x60	; 96
    64be:	94 e0       	ldi	r25, 0x04	; 4
    64c0:	20 e6       	ldi	r18, 0x60	; 96
    64c2:	34 e0       	ldi	r19, 0x04	; 4
    64c4:	f9 01       	movw	r30, r18
    64c6:	22 89       	ldd	r18, Z+18	; 0x12
    64c8:	24 60       	ori	r18, 0x04	; 4
    64ca:	fc 01       	movw	r30, r24
    64cc:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    64ce:	80 e6       	ldi	r24, 0x60	; 96
    64d0:	94 e0       	ldi	r25, 0x04	; 4
    64d2:	20 e6       	ldi	r18, 0x60	; 96
    64d4:	34 e0       	ldi	r19, 0x04	; 4
    64d6:	f9 01       	movw	r30, r18
    64d8:	23 89       	ldd	r18, Z+19	; 0x13
    64da:	28 7f       	andi	r18, 0xF8	; 248
    64dc:	fc 01       	movw	r30, r24
    64de:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    64e0:	80 e6       	ldi	r24, 0x60	; 96
    64e2:	94 e0       	ldi	r25, 0x04	; 4
    64e4:	20 e6       	ldi	r18, 0x60	; 96
    64e6:	34 e0       	ldi	r19, 0x04	; 4
    64e8:	f9 01       	movw	r30, r18
    64ea:	23 89       	ldd	r18, Z+19	; 0x13
    64ec:	24 60       	ori	r18, 0x04	; 4
    64ee:	fc 01       	movw	r30, r24
    64f0:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    64f2:	80 e6       	ldi	r24, 0x60	; 96
    64f4:	94 e0       	ldi	r25, 0x04	; 4
    64f6:	20 e6       	ldi	r18, 0x60	; 96
    64f8:	34 e0       	ldi	r19, 0x04	; 4
    64fa:	f9 01       	movw	r30, r18
    64fc:	24 89       	ldd	r18, Z+20	; 0x14
    64fe:	28 7f       	andi	r18, 0xF8	; 248
    6500:	fc 01       	movw	r30, r24
    6502:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6504:	80 e6       	ldi	r24, 0x60	; 96
    6506:	94 e0       	ldi	r25, 0x04	; 4
    6508:	20 e6       	ldi	r18, 0x60	; 96
    650a:	34 e0       	ldi	r19, 0x04	; 4
    650c:	f9 01       	movw	r30, r18
    650e:	24 89       	ldd	r18, Z+20	; 0x14
    6510:	24 60       	ori	r18, 0x04	; 4
    6512:	fc 01       	movw	r30, r24
    6514:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    6516:	80 e6       	ldi	r24, 0x60	; 96
    6518:	94 e0       	ldi	r25, 0x04	; 4
    651a:	20 e6       	ldi	r18, 0x60	; 96
    651c:	34 e0       	ldi	r19, 0x04	; 4
    651e:	f9 01       	movw	r30, r18
    6520:	25 89       	ldd	r18, Z+21	; 0x15
    6522:	28 7f       	andi	r18, 0xF8	; 248
    6524:	fc 01       	movw	r30, r24
    6526:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6528:	80 e6       	ldi	r24, 0x60	; 96
    652a:	94 e0       	ldi	r25, 0x04	; 4
    652c:	20 e6       	ldi	r18, 0x60	; 96
    652e:	34 e0       	ldi	r19, 0x04	; 4
    6530:	f9 01       	movw	r30, r18
    6532:	25 89       	ldd	r18, Z+21	; 0x15
    6534:	24 60       	ori	r18, 0x04	; 4
    6536:	fc 01       	movw	r30, r24
    6538:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    653a:	80 e6       	ldi	r24, 0x60	; 96
    653c:	94 e0       	ldi	r25, 0x04	; 4
    653e:	20 e6       	ldi	r18, 0x60	; 96
    6540:	34 e0       	ldi	r19, 0x04	; 4
    6542:	f9 01       	movw	r30, r18
    6544:	22 89       	ldd	r18, Z+18	; 0x12
    6546:	27 7f       	andi	r18, 0xF7	; 247
    6548:	fc 01       	movw	r30, r24
    654a:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    654c:	80 e6       	ldi	r24, 0x60	; 96
    654e:	94 e0       	ldi	r25, 0x04	; 4
    6550:	20 e6       	ldi	r18, 0x60	; 96
    6552:	34 e0       	ldi	r19, 0x04	; 4
    6554:	f9 01       	movw	r30, r18
    6556:	23 89       	ldd	r18, Z+19	; 0x13
    6558:	27 7f       	andi	r18, 0xF7	; 247
    655a:	fc 01       	movw	r30, r24
    655c:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    655e:	80 e6       	ldi	r24, 0x60	; 96
    6560:	94 e0       	ldi	r25, 0x04	; 4
    6562:	20 e6       	ldi	r18, 0x60	; 96
    6564:	34 e0       	ldi	r19, 0x04	; 4
    6566:	f9 01       	movw	r30, r18
    6568:	24 89       	ldd	r18, Z+20	; 0x14
    656a:	27 7f       	andi	r18, 0xF7	; 247
    656c:	fc 01       	movw	r30, r24
    656e:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    6570:	80 e6       	ldi	r24, 0x60	; 96
    6572:	94 e0       	ldi	r25, 0x04	; 4
    6574:	20 e6       	ldi	r18, 0x60	; 96
    6576:	34 e0       	ldi	r19, 0x04	; 4
    6578:	f9 01       	movw	r30, r18
    657a:	25 89       	ldd	r18, Z+21	; 0x15
    657c:	27 7f       	andi	r18, 0xF7	; 247
    657e:	fc 01       	movw	r30, r24
    6580:	25 8b       	std	Z+21, r18	; 0x15
}
    6582:	00 00       	nop
    6584:	df 91       	pop	r29
    6586:	cf 91       	pop	r28
    6588:	08 95       	ret

0000658a <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    658a:	cf 93       	push	r28
    658c:	df 93       	push	r29
    658e:	cd b7       	in	r28, 0x3d	; 61
    6590:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6592:	80 ea       	ldi	r24, 0xA0	; 160
    6594:	90 e0       	ldi	r25, 0x00	; 0
    6596:	21 e0       	ldi	r18, 0x01	; 1
    6598:	fc 01       	movw	r30, r24
    659a:	20 83       	st	Z, r18
}
    659c:	00 00       	nop
    659e:	df 91       	pop	r29
    65a0:	cf 91       	pop	r28
    65a2:	08 95       	ret

000065a4 <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    65a4:	cf 93       	push	r28
    65a6:	df 93       	push	r29
    65a8:	1f 92       	push	r1
    65aa:	cd b7       	in	r28, 0x3d	; 61
    65ac:	de b7       	in	r29, 0x3e	; 62
    65ae:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    65b0:	80 e0       	ldi	r24, 0x00	; 0
    65b2:	96 e0       	ldi	r25, 0x06	; 6
    65b4:	2a e0       	ldi	r18, 0x0A	; 10
    65b6:	fc 01       	movw	r30, r24
    65b8:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    65ba:	89 81       	ldd	r24, Y+1	; 0x01
    65bc:	88 23       	and	r24, r24
    65be:	81 f0       	breq	.+32     	; 0x65e0 <_ZL9ADC0_initb+0x3c>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    65c0:	80 e0       	ldi	r24, 0x00	; 0
    65c2:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    65c4:	23 e0       	ldi	r18, 0x03	; 3
    65c6:	fc 01       	movw	r30, r24
    65c8:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    65ca:	80 e0       	ldi	r24, 0x00	; 0
    65cc:	96 e0       	ldi	r25, 0x06	; 6
    65ce:	21 e0       	ldi	r18, 0x01	; 1
    65d0:	fc 01       	movw	r30, r24
    65d2:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    65d4:	80 e0       	ldi	r24, 0x00	; 0
    65d6:	96 e0       	ldi	r25, 0x06	; 6
    65d8:	21 e0       	ldi	r18, 0x01	; 1
    65da:	fc 01       	movw	r30, r24
    65dc:	22 87       	std	Z+10, r18	; 0x0a
		ADC0.CTRLA = ADC_ENABLE_bm  /* ADC Enable: enabled */
		| ADC_RESSEL_12BIT_gc;      /* 12-bit mode */

		ADC0.INTCTRL = 0x00; /* Disable interrupt */
	}
}
    65de:	09 c0       	rjmp	.+18     	; 0x65f2 <_ZL9ADC0_initb+0x4e>
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm  /* ADC Enable: enabled */
    65e0:	80 e0       	ldi	r24, 0x00	; 0
    65e2:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc;      /* 12-bit mode */
    65e4:	21 e0       	ldi	r18, 0x01	; 1
    65e6:	fc 01       	movw	r30, r24
    65e8:	20 83       	st	Z, r18

		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    65ea:	80 e0       	ldi	r24, 0x00	; 0
    65ec:	96 e0       	ldi	r25, 0x06	; 6
    65ee:	fc 01       	movw	r30, r24
    65f0:	14 86       	std	Z+12, r1	; 0x0c
	}
}
    65f2:	00 00       	nop
    65f4:	0f 90       	pop	r0
    65f6:	df 91       	pop	r29
    65f8:	cf 91       	pop	r28
    65fa:	08 95       	ret

000065fc <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    65fc:	cf 93       	push	r28
    65fe:	df 93       	push	r29
    6600:	1f 92       	push	r1
    6602:	cd b7       	in	r28, 0x3d	; 61
    6604:	de b7       	in	r29, 0x3e	; 62
    6606:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    6608:	0e 94 51 32 	call	0x64a2	; 0x64a2 <_ZL9PORT_initv>
	VREF0_init();
    660c:	0e 94 c5 32 	call	0x658a	; 0x658a <_ZL10VREF0_initv>
	ADC0_init(freerun);
    6610:	89 81       	ldd	r24, Y+1	; 0x01
    6612:	0e 94 d2 32 	call	0x65a4	; 0x65a4 <_ZL9ADC0_initb>
	g_adc_initialized = true;
    6616:	81 e0       	ldi	r24, 0x01	; 1
    6618:	80 93 b4 47 	sts	0x47B4, r24	; 0x8047b4 <_ZL17g_adc_initialized>
}
    661c:	00 00       	nop
    661e:	0f 90       	pop	r0
    6620:	df 91       	pop	r29
    6622:	cf 91       	pop	r28
    6624:	08 95       	ret

00006626 <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    6626:	cf 93       	push	r28
    6628:	df 93       	push	r29
    662a:	cd b7       	in	r28, 0x3d	; 61
    662c:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    662e:	80 e0       	ldi	r24, 0x00	; 0
    6630:	96 e0       	ldi	r25, 0x06	; 6
    6632:	fc 01       	movw	r30, r24
    6634:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    6636:	80 e0       	ldi	r24, 0x00	; 0
    6638:	96 e0       	ldi	r25, 0x06	; 6
    663a:	fc 01       	movw	r30, r24
    663c:	10 82       	st	Z, r1
	g_adc_initialized = false;
    663e:	10 92 b4 47 	sts	0x47B4, r1	; 0x8047b4 <_ZL17g_adc_initialized>
}
    6642:	00 00       	nop
    6644:	df 91       	pop	r29
    6646:	cf 91       	pop	r28
    6648:	08 95       	ret

0000664a <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    664a:	1f 92       	push	r1
    664c:	0f 92       	push	r0
    664e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6652:	0f 92       	push	r0
    6654:	11 24       	eor	r1, r1
    6656:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    665a:	0f 92       	push	r0
    665c:	2f 93       	push	r18
    665e:	3f 93       	push	r19
    6660:	4f 93       	push	r20
    6662:	5f 93       	push	r21
    6664:	6f 93       	push	r22
    6666:	7f 93       	push	r23
    6668:	8f 93       	push	r24
    666a:	9f 93       	push	r25
    666c:	af 93       	push	r26
    666e:	bf 93       	push	r27
    6670:	ef 93       	push	r30
    6672:	ff 93       	push	r31
    6674:	cf 93       	push	r28
    6676:	df 93       	push	r29
    6678:	00 d0       	rcall	.+0      	; 0x667a <__vector_24+0x30>
    667a:	cd b7       	in	r28, 0x3d	; 61
    667c:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    667e:	0e 94 45 32 	call	0x648a	; 0x648a <_Z9ADC0_readv>
    6682:	89 83       	std	Y+1, r24	; 0x01
    6684:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    6686:	89 81       	ldd	r24, Y+1	; 0x01
    6688:	9a 81       	ldd	r25, Y+2	; 0x02
    668a:	bc 01       	movw	r22, r24
    668c:	85 eb       	ldi	r24, 0xB5	; 181
    668e:	97 e4       	ldi	r25, 0x47	; 71
    6690:	0e 94 72 48 	call	0x90e4	; 0x90e4 <_ZN8Goertzel9DataPointEi>
    6694:	88 23       	and	r24, r24
    6696:	21 f0       	breq	.+8      	; 0x66a0 <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    6698:	80 e0       	ldi	r24, 0x00	; 0
    669a:	96 e0       	ldi	r25, 0x06	; 6
    669c:	fc 01       	movw	r30, r24
    669e:	14 86       	std	Z+12, r1	; 0x0c
	}
    66a0:	00 00       	nop
    66a2:	0f 90       	pop	r0
    66a4:	0f 90       	pop	r0
    66a6:	df 91       	pop	r29
    66a8:	cf 91       	pop	r28
    66aa:	ff 91       	pop	r31
    66ac:	ef 91       	pop	r30
    66ae:	bf 91       	pop	r27
    66b0:	af 91       	pop	r26
    66b2:	9f 91       	pop	r25
    66b4:	8f 91       	pop	r24
    66b6:	7f 91       	pop	r23
    66b8:	6f 91       	pop	r22
    66ba:	5f 91       	pop	r21
    66bc:	4f 91       	pop	r20
    66be:	3f 91       	pop	r19
    66c0:	2f 91       	pop	r18
    66c2:	0f 90       	pop	r0
    66c4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    66c8:	0f 90       	pop	r0
    66ca:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    66ce:	0f 90       	pop	r0
    66d0:	1f 90       	pop	r1
    66d2:	18 95       	reti

000066d4 <_Z41__static_initialization_and_destruction_0ii>:
    66d4:	0f 93       	push	r16
    66d6:	1f 93       	push	r17
    66d8:	cf 93       	push	r28
    66da:	df 93       	push	r29
    66dc:	00 d0       	rcall	.+0      	; 0x66de <_Z41__static_initialization_and_destruction_0ii+0xa>
    66de:	00 d0       	rcall	.+0      	; 0x66e0 <_Z41__static_initialization_and_destruction_0ii+0xc>
    66e0:	cd b7       	in	r28, 0x3d	; 61
    66e2:	de b7       	in	r29, 0x3e	; 62
    66e4:	89 83       	std	Y+1, r24	; 0x01
    66e6:	9a 83       	std	Y+2, r25	; 0x02
    66e8:	6b 83       	std	Y+3, r22	; 0x03
    66ea:	7c 83       	std	Y+4, r23	; 0x04
    66ec:	89 81       	ldd	r24, Y+1	; 0x01
    66ee:	9a 81       	ldd	r25, Y+2	; 0x02
    66f0:	01 97       	sbiw	r24, 0x01	; 1
    66f2:	91 f4       	brne	.+36     	; 0x6718 <_Z41__static_initialization_and_destruction_0ii+0x44>
    66f4:	8b 81       	ldd	r24, Y+3	; 0x03
    66f6:	9c 81       	ldd	r25, Y+4	; 0x04
    66f8:	01 96       	adiw	r24, 0x01	; 1
    66fa:	71 f4       	brne	.+28     	; 0x6718 <_Z41__static_initialization_and_destruction_0ii+0x44>
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile ADC_Active_Channel_t g_activeADCChannel = ADCDisable;
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    66fc:	80 e0       	ldi	r24, 0x00	; 0
    66fe:	90 e4       	ldi	r25, 0x40	; 64
    6700:	ac eb       	ldi	r26, 0xBC	; 188
    6702:	b6 e4       	ldi	r27, 0x46	; 70
    6704:	8c 01       	movw	r16, r24
    6706:	9d 01       	movw	r18, r26
    6708:	40 e0       	ldi	r20, 0x00	; 0
    670a:	50 e0       	ldi	r21, 0x00	; 0
    670c:	69 e4       	ldi	r22, 0x49	; 73
    670e:	73 e4       	ldi	r23, 0x43	; 67
    6710:	85 eb       	ldi	r24, 0xB5	; 181
    6712:	97 e4       	ldi	r25, 0x47	; 71
    6714:	0e 94 c7 47 	call	0x8f8e	; 0x8f8e <_ZN8GoertzelC1Eff>
    6718:	89 81       	ldd	r24, Y+1	; 0x01
    671a:	9a 81       	ldd	r25, Y+2	; 0x02
    671c:	89 2b       	or	r24, r25
    671e:	41 f4       	brne	.+16     	; 0x6730 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6720:	8b 81       	ldd	r24, Y+3	; 0x03
    6722:	9c 81       	ldd	r25, Y+4	; 0x04
    6724:	01 96       	adiw	r24, 0x01	; 1
    6726:	21 f4       	brne	.+8      	; 0x6730 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6728:	85 eb       	ldi	r24, 0xB5	; 181
    672a:	97 e4       	ldi	r25, 0x47	; 71
    672c:	0e 94 5f 48 	call	0x90be	; 0x90be <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    6730:	00 00       	nop
    6732:	24 96       	adiw	r28, 0x04	; 4
    6734:	cd bf       	out	0x3d, r28	; 61
    6736:	de bf       	out	0x3e, r29	; 62
    6738:	df 91       	pop	r29
    673a:	cf 91       	pop	r28
    673c:	1f 91       	pop	r17
    673e:	0f 91       	pop	r16
    6740:	08 95       	ret

00006742 <_GLOBAL__sub_I_g_activeADCChannel>:
    6742:	cf 93       	push	r28
    6744:	df 93       	push	r29
    6746:	cd b7       	in	r28, 0x3d	; 61
    6748:	de b7       	in	r29, 0x3e	; 62
    674a:	6f ef       	ldi	r22, 0xFF	; 255
    674c:	7f ef       	ldi	r23, 0xFF	; 255
    674e:	81 e0       	ldi	r24, 0x01	; 1
    6750:	90 e0       	ldi	r25, 0x00	; 0
    6752:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_Z41__static_initialization_and_destruction_0ii>
    6756:	df 91       	pop	r29
    6758:	cf 91       	pop	r28
    675a:	08 95       	ret

0000675c <_GLOBAL__sub_D_g_activeADCChannel>:
    675c:	cf 93       	push	r28
    675e:	df 93       	push	r29
    6760:	cd b7       	in	r28, 0x3d	; 61
    6762:	de b7       	in	r29, 0x3e	; 62
    6764:	6f ef       	ldi	r22, 0xFF	; 255
    6766:	7f ef       	ldi	r23, 0xFF	; 255
    6768:	80 e0       	ldi	r24, 0x00	; 0
    676a:	90 e0       	ldi	r25, 0x00	; 0
    676c:	0e 94 6a 33 	call	0x66d4	; 0x66d4 <_Z41__static_initialization_and_destruction_0ii>
    6770:	df 91       	pop	r29
    6772:	cf 91       	pop	r28
    6774:	08 95       	ret

00006776 <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    6776:	cf 93       	push	r28
    6778:	df 93       	push	r29
    677a:	00 d0       	rcall	.+0      	; 0x677c <PORTA_set_pin_pull_mode+0x6>
    677c:	00 d0       	rcall	.+0      	; 0x677e <PORTA_set_pin_pull_mode+0x8>
    677e:	cd b7       	in	r28, 0x3d	; 61
    6780:	de b7       	in	r29, 0x3e	; 62
    6782:	8b 83       	std	Y+3, r24	; 0x03
    6784:	6c 83       	std	Y+4, r22	; 0x04
    6786:	8b 81       	ldd	r24, Y+3	; 0x03
    6788:	88 2f       	mov	r24, r24
    678a:	90 e0       	ldi	r25, 0x00	; 0
    678c:	80 5f       	subi	r24, 0xF0	; 240
    678e:	9b 4f       	sbci	r25, 0xFB	; 251
    6790:	89 83       	std	Y+1, r24	; 0x01
    6792:	9a 83       	std	Y+2, r25	; 0x02
    6794:	8c 81       	ldd	r24, Y+4	; 0x04
    6796:	81 30       	cpi	r24, 0x01	; 1
    6798:	59 f4       	brne	.+22     	; 0x67b0 <PORTA_set_pin_pull_mode+0x3a>
    679a:	89 81       	ldd	r24, Y+1	; 0x01
    679c:	9a 81       	ldd	r25, Y+2	; 0x02
    679e:	fc 01       	movw	r30, r24
    67a0:	80 81       	ld	r24, Z
    67a2:	28 2f       	mov	r18, r24
    67a4:	28 60       	ori	r18, 0x08	; 8
    67a6:	89 81       	ldd	r24, Y+1	; 0x01
    67a8:	9a 81       	ldd	r25, Y+2	; 0x02
    67aa:	fc 01       	movw	r30, r24
    67ac:	20 83       	st	Z, r18
    67ae:	0d c0       	rjmp	.+26     	; 0x67ca <PORTA_set_pin_pull_mode+0x54>
    67b0:	8c 81       	ldd	r24, Y+4	; 0x04
    67b2:	88 23       	and	r24, r24
    67b4:	51 f4       	brne	.+20     	; 0x67ca <PORTA_set_pin_pull_mode+0x54>
    67b6:	89 81       	ldd	r24, Y+1	; 0x01
    67b8:	9a 81       	ldd	r25, Y+2	; 0x02
    67ba:	fc 01       	movw	r30, r24
    67bc:	80 81       	ld	r24, Z
    67be:	28 2f       	mov	r18, r24
    67c0:	27 7f       	andi	r18, 0xF7	; 247
    67c2:	89 81       	ldd	r24, Y+1	; 0x01
    67c4:	9a 81       	ldd	r25, Y+2	; 0x02
    67c6:	fc 01       	movw	r30, r24
    67c8:	20 83       	st	Z, r18
    67ca:	00 00       	nop
    67cc:	24 96       	adiw	r28, 0x04	; 4
    67ce:	cd bf       	out	0x3d, r28	; 61
    67d0:	de bf       	out	0x3e, r29	; 62
    67d2:	df 91       	pop	r29
    67d4:	cf 91       	pop	r28
    67d6:	08 95       	ret

000067d8 <PORTA_pin_set_isc>:
    67d8:	cf 93       	push	r28
    67da:	df 93       	push	r29
    67dc:	00 d0       	rcall	.+0      	; 0x67de <PORTA_pin_set_isc+0x6>
    67de:	00 d0       	rcall	.+0      	; 0x67e0 <PORTA_pin_set_isc+0x8>
    67e0:	cd b7       	in	r28, 0x3d	; 61
    67e2:	de b7       	in	r29, 0x3e	; 62
    67e4:	8b 83       	std	Y+3, r24	; 0x03
    67e6:	6c 83       	std	Y+4, r22	; 0x04
    67e8:	8b 81       	ldd	r24, Y+3	; 0x03
    67ea:	88 2f       	mov	r24, r24
    67ec:	90 e0       	ldi	r25, 0x00	; 0
    67ee:	80 5f       	subi	r24, 0xF0	; 240
    67f0:	9b 4f       	sbci	r25, 0xFB	; 251
    67f2:	89 83       	std	Y+1, r24	; 0x01
    67f4:	9a 83       	std	Y+2, r25	; 0x02
    67f6:	89 81       	ldd	r24, Y+1	; 0x01
    67f8:	9a 81       	ldd	r25, Y+2	; 0x02
    67fa:	fc 01       	movw	r30, r24
    67fc:	80 81       	ld	r24, Z
    67fe:	98 2f       	mov	r25, r24
    6800:	98 7f       	andi	r25, 0xF8	; 248
    6802:	8c 81       	ldd	r24, Y+4	; 0x04
    6804:	89 2b       	or	r24, r25
    6806:	28 2f       	mov	r18, r24
    6808:	89 81       	ldd	r24, Y+1	; 0x01
    680a:	9a 81       	ldd	r25, Y+2	; 0x02
    680c:	fc 01       	movw	r30, r24
    680e:	20 83       	st	Z, r18
    6810:	00 00       	nop
    6812:	24 96       	adiw	r28, 0x04	; 4
    6814:	cd bf       	out	0x3d, r28	; 61
    6816:	de bf       	out	0x3e, r29	; 62
    6818:	df 91       	pop	r29
    681a:	cf 91       	pop	r28
    681c:	08 95       	ret

0000681e <PORTA_set_pin_dir>:
    681e:	cf 93       	push	r28
    6820:	df 93       	push	r29
    6822:	00 d0       	rcall	.+0      	; 0x6824 <PORTA_set_pin_dir+0x6>
    6824:	cd b7       	in	r28, 0x3d	; 61
    6826:	de b7       	in	r29, 0x3e	; 62
    6828:	89 83       	std	Y+1, r24	; 0x01
    682a:	6a 83       	std	Y+2, r22	; 0x02
    682c:	8a 81       	ldd	r24, Y+2	; 0x02
    682e:	88 2f       	mov	r24, r24
    6830:	90 e0       	ldi	r25, 0x00	; 0
    6832:	81 30       	cpi	r24, 0x01	; 1
    6834:	91 05       	cpc	r25, r1
    6836:	e1 f0       	breq	.+56     	; 0x6870 <PORTA_set_pin_dir+0x52>
    6838:	82 30       	cpi	r24, 0x02	; 2
    683a:	91 05       	cpc	r25, r1
    683c:	71 f1       	breq	.+92     	; 0x689a <PORTA_set_pin_dir+0x7c>
    683e:	89 2b       	or	r24, r25
    6840:	09 f0       	breq	.+2      	; 0x6844 <PORTA_set_pin_dir+0x26>
    6842:	3b c0       	rjmp	.+118    	; 0x68ba <PORTA_set_pin_dir+0x9c>
    6844:	20 e0       	ldi	r18, 0x00	; 0
    6846:	30 e0       	ldi	r19, 0x00	; 0
    6848:	80 e0       	ldi	r24, 0x00	; 0
    684a:	90 e0       	ldi	r25, 0x00	; 0
    684c:	fc 01       	movw	r30, r24
    684e:	80 81       	ld	r24, Z
    6850:	68 2f       	mov	r22, r24
    6852:	89 81       	ldd	r24, Y+1	; 0x01
    6854:	48 2f       	mov	r20, r24
    6856:	50 e0       	ldi	r21, 0x00	; 0
    6858:	81 e0       	ldi	r24, 0x01	; 1
    685a:	90 e0       	ldi	r25, 0x00	; 0
    685c:	02 c0       	rjmp	.+4      	; 0x6862 <PORTA_set_pin_dir+0x44>
    685e:	88 0f       	add	r24, r24
    6860:	99 1f       	adc	r25, r25
    6862:	4a 95       	dec	r20
    6864:	e2 f7       	brpl	.-8      	; 0x685e <PORTA_set_pin_dir+0x40>
    6866:	80 95       	com	r24
    6868:	86 23       	and	r24, r22
    686a:	f9 01       	movw	r30, r18
    686c:	80 83       	st	Z, r24
    686e:	25 c0       	rjmp	.+74     	; 0x68ba <PORTA_set_pin_dir+0x9c>
    6870:	20 e0       	ldi	r18, 0x00	; 0
    6872:	30 e0       	ldi	r19, 0x00	; 0
    6874:	80 e0       	ldi	r24, 0x00	; 0
    6876:	90 e0       	ldi	r25, 0x00	; 0
    6878:	fc 01       	movw	r30, r24
    687a:	80 81       	ld	r24, Z
    687c:	68 2f       	mov	r22, r24
    687e:	89 81       	ldd	r24, Y+1	; 0x01
    6880:	48 2f       	mov	r20, r24
    6882:	50 e0       	ldi	r21, 0x00	; 0
    6884:	81 e0       	ldi	r24, 0x01	; 1
    6886:	90 e0       	ldi	r25, 0x00	; 0
    6888:	02 c0       	rjmp	.+4      	; 0x688e <PORTA_set_pin_dir+0x70>
    688a:	88 0f       	add	r24, r24
    688c:	99 1f       	adc	r25, r25
    688e:	4a 95       	dec	r20
    6890:	e2 f7       	brpl	.-8      	; 0x688a <PORTA_set_pin_dir+0x6c>
    6892:	86 2b       	or	r24, r22
    6894:	f9 01       	movw	r30, r18
    6896:	80 83       	st	Z, r24
    6898:	10 c0       	rjmp	.+32     	; 0x68ba <PORTA_set_pin_dir+0x9c>
    689a:	89 81       	ldd	r24, Y+1	; 0x01
    689c:	88 2f       	mov	r24, r24
    689e:	90 e0       	ldi	r25, 0x00	; 0
    68a0:	80 5f       	subi	r24, 0xF0	; 240
    68a2:	9b 4f       	sbci	r25, 0xFB	; 251
    68a4:	29 81       	ldd	r18, Y+1	; 0x01
    68a6:	22 2f       	mov	r18, r18
    68a8:	30 e0       	ldi	r19, 0x00	; 0
    68aa:	20 5f       	subi	r18, 0xF0	; 240
    68ac:	3b 4f       	sbci	r19, 0xFB	; 251
    68ae:	f9 01       	movw	r30, r18
    68b0:	20 81       	ld	r18, Z
    68b2:	28 60       	ori	r18, 0x08	; 8
    68b4:	fc 01       	movw	r30, r24
    68b6:	20 83       	st	Z, r18
    68b8:	00 00       	nop
    68ba:	00 00       	nop
    68bc:	0f 90       	pop	r0
    68be:	0f 90       	pop	r0
    68c0:	df 91       	pop	r29
    68c2:	cf 91       	pop	r28
    68c4:	08 95       	ret

000068c6 <PORTA_set_pin_level>:
    68c6:	cf 93       	push	r28
    68c8:	df 93       	push	r29
    68ca:	00 d0       	rcall	.+0      	; 0x68cc <PORTA_set_pin_level+0x6>
    68cc:	cd b7       	in	r28, 0x3d	; 61
    68ce:	de b7       	in	r29, 0x3e	; 62
    68d0:	89 83       	std	Y+1, r24	; 0x01
    68d2:	6a 83       	std	Y+2, r22	; 0x02
    68d4:	8a 81       	ldd	r24, Y+2	; 0x02
    68d6:	88 23       	and	r24, r24
    68d8:	a9 f0       	breq	.+42     	; 0x6904 <PORTA_set_pin_level+0x3e>
    68da:	20 e0       	ldi	r18, 0x00	; 0
    68dc:	30 e0       	ldi	r19, 0x00	; 0
    68de:	80 e0       	ldi	r24, 0x00	; 0
    68e0:	90 e0       	ldi	r25, 0x00	; 0
    68e2:	fc 01       	movw	r30, r24
    68e4:	81 81       	ldd	r24, Z+1	; 0x01
    68e6:	68 2f       	mov	r22, r24
    68e8:	89 81       	ldd	r24, Y+1	; 0x01
    68ea:	48 2f       	mov	r20, r24
    68ec:	50 e0       	ldi	r21, 0x00	; 0
    68ee:	81 e0       	ldi	r24, 0x01	; 1
    68f0:	90 e0       	ldi	r25, 0x00	; 0
    68f2:	02 c0       	rjmp	.+4      	; 0x68f8 <PORTA_set_pin_level+0x32>
    68f4:	88 0f       	add	r24, r24
    68f6:	99 1f       	adc	r25, r25
    68f8:	4a 95       	dec	r20
    68fa:	e2 f7       	brpl	.-8      	; 0x68f4 <PORTA_set_pin_level+0x2e>
    68fc:	86 2b       	or	r24, r22
    68fe:	f9 01       	movw	r30, r18
    6900:	81 83       	std	Z+1, r24	; 0x01
    6902:	15 c0       	rjmp	.+42     	; 0x692e <PORTA_set_pin_level+0x68>
    6904:	20 e0       	ldi	r18, 0x00	; 0
    6906:	30 e0       	ldi	r19, 0x00	; 0
    6908:	80 e0       	ldi	r24, 0x00	; 0
    690a:	90 e0       	ldi	r25, 0x00	; 0
    690c:	fc 01       	movw	r30, r24
    690e:	81 81       	ldd	r24, Z+1	; 0x01
    6910:	68 2f       	mov	r22, r24
    6912:	89 81       	ldd	r24, Y+1	; 0x01
    6914:	48 2f       	mov	r20, r24
    6916:	50 e0       	ldi	r21, 0x00	; 0
    6918:	81 e0       	ldi	r24, 0x01	; 1
    691a:	90 e0       	ldi	r25, 0x00	; 0
    691c:	02 c0       	rjmp	.+4      	; 0x6922 <PORTA_set_pin_level+0x5c>
    691e:	88 0f       	add	r24, r24
    6920:	99 1f       	adc	r25, r25
    6922:	4a 95       	dec	r20
    6924:	e2 f7       	brpl	.-8      	; 0x691e <PORTA_set_pin_level+0x58>
    6926:	80 95       	com	r24
    6928:	86 23       	and	r24, r22
    692a:	f9 01       	movw	r30, r18
    692c:	81 83       	std	Z+1, r24	; 0x01
    692e:	00 00       	nop
    6930:	0f 90       	pop	r0
    6932:	0f 90       	pop	r0
    6934:	df 91       	pop	r29
    6936:	cf 91       	pop	r28
    6938:	08 95       	ret

0000693a <PORTB_set_pin_dir>:
    693a:	cf 93       	push	r28
    693c:	df 93       	push	r29
    693e:	00 d0       	rcall	.+0      	; 0x6940 <PORTB_set_pin_dir+0x6>
    6940:	cd b7       	in	r28, 0x3d	; 61
    6942:	de b7       	in	r29, 0x3e	; 62
    6944:	89 83       	std	Y+1, r24	; 0x01
    6946:	6a 83       	std	Y+2, r22	; 0x02
    6948:	8a 81       	ldd	r24, Y+2	; 0x02
    694a:	88 2f       	mov	r24, r24
    694c:	90 e0       	ldi	r25, 0x00	; 0
    694e:	81 30       	cpi	r24, 0x01	; 1
    6950:	91 05       	cpc	r25, r1
    6952:	e1 f0       	breq	.+56     	; 0x698c <PORTB_set_pin_dir+0x52>
    6954:	82 30       	cpi	r24, 0x02	; 2
    6956:	91 05       	cpc	r25, r1
    6958:	71 f1       	breq	.+92     	; 0x69b6 <PORTB_set_pin_dir+0x7c>
    695a:	89 2b       	or	r24, r25
    695c:	09 f0       	breq	.+2      	; 0x6960 <PORTB_set_pin_dir+0x26>
    695e:	3b c0       	rjmp	.+118    	; 0x69d6 <PORTB_set_pin_dir+0x9c>
    6960:	84 e0       	ldi	r24, 0x04	; 4
    6962:	90 e0       	ldi	r25, 0x00	; 0
    6964:	24 e0       	ldi	r18, 0x04	; 4
    6966:	30 e0       	ldi	r19, 0x00	; 0
    6968:	f9 01       	movw	r30, r18
    696a:	20 81       	ld	r18, Z
    696c:	62 2f       	mov	r22, r18
    696e:	29 81       	ldd	r18, Y+1	; 0x01
    6970:	42 2f       	mov	r20, r18
    6972:	50 e0       	ldi	r21, 0x00	; 0
    6974:	21 e0       	ldi	r18, 0x01	; 1
    6976:	30 e0       	ldi	r19, 0x00	; 0
    6978:	02 c0       	rjmp	.+4      	; 0x697e <PORTB_set_pin_dir+0x44>
    697a:	22 0f       	add	r18, r18
    697c:	33 1f       	adc	r19, r19
    697e:	4a 95       	dec	r20
    6980:	e2 f7       	brpl	.-8      	; 0x697a <PORTB_set_pin_dir+0x40>
    6982:	20 95       	com	r18
    6984:	26 23       	and	r18, r22
    6986:	fc 01       	movw	r30, r24
    6988:	20 83       	st	Z, r18
    698a:	25 c0       	rjmp	.+74     	; 0x69d6 <PORTB_set_pin_dir+0x9c>
    698c:	84 e0       	ldi	r24, 0x04	; 4
    698e:	90 e0       	ldi	r25, 0x00	; 0
    6990:	24 e0       	ldi	r18, 0x04	; 4
    6992:	30 e0       	ldi	r19, 0x00	; 0
    6994:	f9 01       	movw	r30, r18
    6996:	20 81       	ld	r18, Z
    6998:	62 2f       	mov	r22, r18
    699a:	29 81       	ldd	r18, Y+1	; 0x01
    699c:	42 2f       	mov	r20, r18
    699e:	50 e0       	ldi	r21, 0x00	; 0
    69a0:	21 e0       	ldi	r18, 0x01	; 1
    69a2:	30 e0       	ldi	r19, 0x00	; 0
    69a4:	02 c0       	rjmp	.+4      	; 0x69aa <PORTB_set_pin_dir+0x70>
    69a6:	22 0f       	add	r18, r18
    69a8:	33 1f       	adc	r19, r19
    69aa:	4a 95       	dec	r20
    69ac:	e2 f7       	brpl	.-8      	; 0x69a6 <PORTB_set_pin_dir+0x6c>
    69ae:	26 2b       	or	r18, r22
    69b0:	fc 01       	movw	r30, r24
    69b2:	20 83       	st	Z, r18
    69b4:	10 c0       	rjmp	.+32     	; 0x69d6 <PORTB_set_pin_dir+0x9c>
    69b6:	89 81       	ldd	r24, Y+1	; 0x01
    69b8:	88 2f       	mov	r24, r24
    69ba:	90 e0       	ldi	r25, 0x00	; 0
    69bc:	80 5d       	subi	r24, 0xD0	; 208
    69be:	9b 4f       	sbci	r25, 0xFB	; 251
    69c0:	29 81       	ldd	r18, Y+1	; 0x01
    69c2:	22 2f       	mov	r18, r18
    69c4:	30 e0       	ldi	r19, 0x00	; 0
    69c6:	20 5d       	subi	r18, 0xD0	; 208
    69c8:	3b 4f       	sbci	r19, 0xFB	; 251
    69ca:	f9 01       	movw	r30, r18
    69cc:	20 81       	ld	r18, Z
    69ce:	28 60       	ori	r18, 0x08	; 8
    69d0:	fc 01       	movw	r30, r24
    69d2:	20 83       	st	Z, r18
    69d4:	00 00       	nop
    69d6:	00 00       	nop
    69d8:	0f 90       	pop	r0
    69da:	0f 90       	pop	r0
    69dc:	df 91       	pop	r29
    69de:	cf 91       	pop	r28
    69e0:	08 95       	ret

000069e2 <PORTB_set_pin_level>:
    69e2:	cf 93       	push	r28
    69e4:	df 93       	push	r29
    69e6:	00 d0       	rcall	.+0      	; 0x69e8 <PORTB_set_pin_level+0x6>
    69e8:	cd b7       	in	r28, 0x3d	; 61
    69ea:	de b7       	in	r29, 0x3e	; 62
    69ec:	89 83       	std	Y+1, r24	; 0x01
    69ee:	6a 83       	std	Y+2, r22	; 0x02
    69f0:	8a 81       	ldd	r24, Y+2	; 0x02
    69f2:	88 23       	and	r24, r24
    69f4:	a9 f0       	breq	.+42     	; 0x6a20 <PORTB_set_pin_level+0x3e>
    69f6:	84 e0       	ldi	r24, 0x04	; 4
    69f8:	90 e0       	ldi	r25, 0x00	; 0
    69fa:	24 e0       	ldi	r18, 0x04	; 4
    69fc:	30 e0       	ldi	r19, 0x00	; 0
    69fe:	f9 01       	movw	r30, r18
    6a00:	21 81       	ldd	r18, Z+1	; 0x01
    6a02:	62 2f       	mov	r22, r18
    6a04:	29 81       	ldd	r18, Y+1	; 0x01
    6a06:	42 2f       	mov	r20, r18
    6a08:	50 e0       	ldi	r21, 0x00	; 0
    6a0a:	21 e0       	ldi	r18, 0x01	; 1
    6a0c:	30 e0       	ldi	r19, 0x00	; 0
    6a0e:	02 c0       	rjmp	.+4      	; 0x6a14 <PORTB_set_pin_level+0x32>
    6a10:	22 0f       	add	r18, r18
    6a12:	33 1f       	adc	r19, r19
    6a14:	4a 95       	dec	r20
    6a16:	e2 f7       	brpl	.-8      	; 0x6a10 <PORTB_set_pin_level+0x2e>
    6a18:	26 2b       	or	r18, r22
    6a1a:	fc 01       	movw	r30, r24
    6a1c:	21 83       	std	Z+1, r18	; 0x01
    6a1e:	15 c0       	rjmp	.+42     	; 0x6a4a <PORTB_set_pin_level+0x68>
    6a20:	84 e0       	ldi	r24, 0x04	; 4
    6a22:	90 e0       	ldi	r25, 0x00	; 0
    6a24:	24 e0       	ldi	r18, 0x04	; 4
    6a26:	30 e0       	ldi	r19, 0x00	; 0
    6a28:	f9 01       	movw	r30, r18
    6a2a:	21 81       	ldd	r18, Z+1	; 0x01
    6a2c:	62 2f       	mov	r22, r18
    6a2e:	29 81       	ldd	r18, Y+1	; 0x01
    6a30:	42 2f       	mov	r20, r18
    6a32:	50 e0       	ldi	r21, 0x00	; 0
    6a34:	21 e0       	ldi	r18, 0x01	; 1
    6a36:	30 e0       	ldi	r19, 0x00	; 0
    6a38:	02 c0       	rjmp	.+4      	; 0x6a3e <PORTB_set_pin_level+0x5c>
    6a3a:	22 0f       	add	r18, r18
    6a3c:	33 1f       	adc	r19, r19
    6a3e:	4a 95       	dec	r20
    6a40:	e2 f7       	brpl	.-8      	; 0x6a3a <PORTB_set_pin_level+0x58>
    6a42:	20 95       	com	r18
    6a44:	26 23       	and	r18, r22
    6a46:	fc 01       	movw	r30, r24
    6a48:	21 83       	std	Z+1, r18	; 0x01
    6a4a:	00 00       	nop
    6a4c:	0f 90       	pop	r0
    6a4e:	0f 90       	pop	r0
    6a50:	df 91       	pop	r29
    6a52:	cf 91       	pop	r28
    6a54:	08 95       	ret

00006a56 <PORTC_set_pin_pull_mode>:
    6a56:	cf 93       	push	r28
    6a58:	df 93       	push	r29
    6a5a:	00 d0       	rcall	.+0      	; 0x6a5c <PORTC_set_pin_pull_mode+0x6>
    6a5c:	00 d0       	rcall	.+0      	; 0x6a5e <PORTC_set_pin_pull_mode+0x8>
    6a5e:	cd b7       	in	r28, 0x3d	; 61
    6a60:	de b7       	in	r29, 0x3e	; 62
    6a62:	8b 83       	std	Y+3, r24	; 0x03
    6a64:	6c 83       	std	Y+4, r22	; 0x04
    6a66:	8b 81       	ldd	r24, Y+3	; 0x03
    6a68:	88 2f       	mov	r24, r24
    6a6a:	90 e0       	ldi	r25, 0x00	; 0
    6a6c:	80 5b       	subi	r24, 0xB0	; 176
    6a6e:	9b 4f       	sbci	r25, 0xFB	; 251
    6a70:	89 83       	std	Y+1, r24	; 0x01
    6a72:	9a 83       	std	Y+2, r25	; 0x02
    6a74:	8c 81       	ldd	r24, Y+4	; 0x04
    6a76:	81 30       	cpi	r24, 0x01	; 1
    6a78:	59 f4       	brne	.+22     	; 0x6a90 <PORTC_set_pin_pull_mode+0x3a>
    6a7a:	89 81       	ldd	r24, Y+1	; 0x01
    6a7c:	9a 81       	ldd	r25, Y+2	; 0x02
    6a7e:	fc 01       	movw	r30, r24
    6a80:	80 81       	ld	r24, Z
    6a82:	28 2f       	mov	r18, r24
    6a84:	28 60       	ori	r18, 0x08	; 8
    6a86:	89 81       	ldd	r24, Y+1	; 0x01
    6a88:	9a 81       	ldd	r25, Y+2	; 0x02
    6a8a:	fc 01       	movw	r30, r24
    6a8c:	20 83       	st	Z, r18
    6a8e:	0d c0       	rjmp	.+26     	; 0x6aaa <PORTC_set_pin_pull_mode+0x54>
    6a90:	8c 81       	ldd	r24, Y+4	; 0x04
    6a92:	88 23       	and	r24, r24
    6a94:	51 f4       	brne	.+20     	; 0x6aaa <PORTC_set_pin_pull_mode+0x54>
    6a96:	89 81       	ldd	r24, Y+1	; 0x01
    6a98:	9a 81       	ldd	r25, Y+2	; 0x02
    6a9a:	fc 01       	movw	r30, r24
    6a9c:	80 81       	ld	r24, Z
    6a9e:	28 2f       	mov	r18, r24
    6aa0:	27 7f       	andi	r18, 0xF7	; 247
    6aa2:	89 81       	ldd	r24, Y+1	; 0x01
    6aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    6aa6:	fc 01       	movw	r30, r24
    6aa8:	20 83       	st	Z, r18
    6aaa:	00 00       	nop
    6aac:	24 96       	adiw	r28, 0x04	; 4
    6aae:	cd bf       	out	0x3d, r28	; 61
    6ab0:	de bf       	out	0x3e, r29	; 62
    6ab2:	df 91       	pop	r29
    6ab4:	cf 91       	pop	r28
    6ab6:	08 95       	ret

00006ab8 <PORTC_pin_set_isc>:
    6ab8:	cf 93       	push	r28
    6aba:	df 93       	push	r29
    6abc:	00 d0       	rcall	.+0      	; 0x6abe <PORTC_pin_set_isc+0x6>
    6abe:	00 d0       	rcall	.+0      	; 0x6ac0 <PORTC_pin_set_isc+0x8>
    6ac0:	cd b7       	in	r28, 0x3d	; 61
    6ac2:	de b7       	in	r29, 0x3e	; 62
    6ac4:	8b 83       	std	Y+3, r24	; 0x03
    6ac6:	6c 83       	std	Y+4, r22	; 0x04
    6ac8:	8b 81       	ldd	r24, Y+3	; 0x03
    6aca:	88 2f       	mov	r24, r24
    6acc:	90 e0       	ldi	r25, 0x00	; 0
    6ace:	80 5b       	subi	r24, 0xB0	; 176
    6ad0:	9b 4f       	sbci	r25, 0xFB	; 251
    6ad2:	89 83       	std	Y+1, r24	; 0x01
    6ad4:	9a 83       	std	Y+2, r25	; 0x02
    6ad6:	89 81       	ldd	r24, Y+1	; 0x01
    6ad8:	9a 81       	ldd	r25, Y+2	; 0x02
    6ada:	fc 01       	movw	r30, r24
    6adc:	80 81       	ld	r24, Z
    6ade:	98 2f       	mov	r25, r24
    6ae0:	98 7f       	andi	r25, 0xF8	; 248
    6ae2:	8c 81       	ldd	r24, Y+4	; 0x04
    6ae4:	89 2b       	or	r24, r25
    6ae6:	28 2f       	mov	r18, r24
    6ae8:	89 81       	ldd	r24, Y+1	; 0x01
    6aea:	9a 81       	ldd	r25, Y+2	; 0x02
    6aec:	fc 01       	movw	r30, r24
    6aee:	20 83       	st	Z, r18
    6af0:	00 00       	nop
    6af2:	24 96       	adiw	r28, 0x04	; 4
    6af4:	cd bf       	out	0x3d, r28	; 61
    6af6:	de bf       	out	0x3e, r29	; 62
    6af8:	df 91       	pop	r29
    6afa:	cf 91       	pop	r28
    6afc:	08 95       	ret

00006afe <PORTC_set_pin_dir>:
    6afe:	cf 93       	push	r28
    6b00:	df 93       	push	r29
    6b02:	00 d0       	rcall	.+0      	; 0x6b04 <PORTC_set_pin_dir+0x6>
    6b04:	cd b7       	in	r28, 0x3d	; 61
    6b06:	de b7       	in	r29, 0x3e	; 62
    6b08:	89 83       	std	Y+1, r24	; 0x01
    6b0a:	6a 83       	std	Y+2, r22	; 0x02
    6b0c:	8a 81       	ldd	r24, Y+2	; 0x02
    6b0e:	88 2f       	mov	r24, r24
    6b10:	90 e0       	ldi	r25, 0x00	; 0
    6b12:	81 30       	cpi	r24, 0x01	; 1
    6b14:	91 05       	cpc	r25, r1
    6b16:	e1 f0       	breq	.+56     	; 0x6b50 <PORTC_set_pin_dir+0x52>
    6b18:	82 30       	cpi	r24, 0x02	; 2
    6b1a:	91 05       	cpc	r25, r1
    6b1c:	71 f1       	breq	.+92     	; 0x6b7a <PORTC_set_pin_dir+0x7c>
    6b1e:	89 2b       	or	r24, r25
    6b20:	09 f0       	breq	.+2      	; 0x6b24 <PORTC_set_pin_dir+0x26>
    6b22:	3b c0       	rjmp	.+118    	; 0x6b9a <PORTC_set_pin_dir+0x9c>
    6b24:	88 e0       	ldi	r24, 0x08	; 8
    6b26:	90 e0       	ldi	r25, 0x00	; 0
    6b28:	28 e0       	ldi	r18, 0x08	; 8
    6b2a:	30 e0       	ldi	r19, 0x00	; 0
    6b2c:	f9 01       	movw	r30, r18
    6b2e:	20 81       	ld	r18, Z
    6b30:	62 2f       	mov	r22, r18
    6b32:	29 81       	ldd	r18, Y+1	; 0x01
    6b34:	42 2f       	mov	r20, r18
    6b36:	50 e0       	ldi	r21, 0x00	; 0
    6b38:	21 e0       	ldi	r18, 0x01	; 1
    6b3a:	30 e0       	ldi	r19, 0x00	; 0
    6b3c:	02 c0       	rjmp	.+4      	; 0x6b42 <PORTC_set_pin_dir+0x44>
    6b3e:	22 0f       	add	r18, r18
    6b40:	33 1f       	adc	r19, r19
    6b42:	4a 95       	dec	r20
    6b44:	e2 f7       	brpl	.-8      	; 0x6b3e <PORTC_set_pin_dir+0x40>
    6b46:	20 95       	com	r18
    6b48:	26 23       	and	r18, r22
    6b4a:	fc 01       	movw	r30, r24
    6b4c:	20 83       	st	Z, r18
    6b4e:	25 c0       	rjmp	.+74     	; 0x6b9a <PORTC_set_pin_dir+0x9c>
    6b50:	88 e0       	ldi	r24, 0x08	; 8
    6b52:	90 e0       	ldi	r25, 0x00	; 0
    6b54:	28 e0       	ldi	r18, 0x08	; 8
    6b56:	30 e0       	ldi	r19, 0x00	; 0
    6b58:	f9 01       	movw	r30, r18
    6b5a:	20 81       	ld	r18, Z
    6b5c:	62 2f       	mov	r22, r18
    6b5e:	29 81       	ldd	r18, Y+1	; 0x01
    6b60:	42 2f       	mov	r20, r18
    6b62:	50 e0       	ldi	r21, 0x00	; 0
    6b64:	21 e0       	ldi	r18, 0x01	; 1
    6b66:	30 e0       	ldi	r19, 0x00	; 0
    6b68:	02 c0       	rjmp	.+4      	; 0x6b6e <PORTC_set_pin_dir+0x70>
    6b6a:	22 0f       	add	r18, r18
    6b6c:	33 1f       	adc	r19, r19
    6b6e:	4a 95       	dec	r20
    6b70:	e2 f7       	brpl	.-8      	; 0x6b6a <PORTC_set_pin_dir+0x6c>
    6b72:	26 2b       	or	r18, r22
    6b74:	fc 01       	movw	r30, r24
    6b76:	20 83       	st	Z, r18
    6b78:	10 c0       	rjmp	.+32     	; 0x6b9a <PORTC_set_pin_dir+0x9c>
    6b7a:	89 81       	ldd	r24, Y+1	; 0x01
    6b7c:	88 2f       	mov	r24, r24
    6b7e:	90 e0       	ldi	r25, 0x00	; 0
    6b80:	80 5b       	subi	r24, 0xB0	; 176
    6b82:	9b 4f       	sbci	r25, 0xFB	; 251
    6b84:	29 81       	ldd	r18, Y+1	; 0x01
    6b86:	22 2f       	mov	r18, r18
    6b88:	30 e0       	ldi	r19, 0x00	; 0
    6b8a:	20 5b       	subi	r18, 0xB0	; 176
    6b8c:	3b 4f       	sbci	r19, 0xFB	; 251
    6b8e:	f9 01       	movw	r30, r18
    6b90:	20 81       	ld	r18, Z
    6b92:	28 60       	ori	r18, 0x08	; 8
    6b94:	fc 01       	movw	r30, r24
    6b96:	20 83       	st	Z, r18
    6b98:	00 00       	nop
    6b9a:	00 00       	nop
    6b9c:	0f 90       	pop	r0
    6b9e:	0f 90       	pop	r0
    6ba0:	df 91       	pop	r29
    6ba2:	cf 91       	pop	r28
    6ba4:	08 95       	ret

00006ba6 <PORTC_set_pin_level>:
    6ba6:	cf 93       	push	r28
    6ba8:	df 93       	push	r29
    6baa:	00 d0       	rcall	.+0      	; 0x6bac <PORTC_set_pin_level+0x6>
    6bac:	cd b7       	in	r28, 0x3d	; 61
    6bae:	de b7       	in	r29, 0x3e	; 62
    6bb0:	89 83       	std	Y+1, r24	; 0x01
    6bb2:	6a 83       	std	Y+2, r22	; 0x02
    6bb4:	8a 81       	ldd	r24, Y+2	; 0x02
    6bb6:	88 23       	and	r24, r24
    6bb8:	a9 f0       	breq	.+42     	; 0x6be4 <PORTC_set_pin_level+0x3e>
    6bba:	88 e0       	ldi	r24, 0x08	; 8
    6bbc:	90 e0       	ldi	r25, 0x00	; 0
    6bbe:	28 e0       	ldi	r18, 0x08	; 8
    6bc0:	30 e0       	ldi	r19, 0x00	; 0
    6bc2:	f9 01       	movw	r30, r18
    6bc4:	21 81       	ldd	r18, Z+1	; 0x01
    6bc6:	62 2f       	mov	r22, r18
    6bc8:	29 81       	ldd	r18, Y+1	; 0x01
    6bca:	42 2f       	mov	r20, r18
    6bcc:	50 e0       	ldi	r21, 0x00	; 0
    6bce:	21 e0       	ldi	r18, 0x01	; 1
    6bd0:	30 e0       	ldi	r19, 0x00	; 0
    6bd2:	02 c0       	rjmp	.+4      	; 0x6bd8 <PORTC_set_pin_level+0x32>
    6bd4:	22 0f       	add	r18, r18
    6bd6:	33 1f       	adc	r19, r19
    6bd8:	4a 95       	dec	r20
    6bda:	e2 f7       	brpl	.-8      	; 0x6bd4 <PORTC_set_pin_level+0x2e>
    6bdc:	26 2b       	or	r18, r22
    6bde:	fc 01       	movw	r30, r24
    6be0:	21 83       	std	Z+1, r18	; 0x01
    6be2:	15 c0       	rjmp	.+42     	; 0x6c0e <PORTC_set_pin_level+0x68>
    6be4:	88 e0       	ldi	r24, 0x08	; 8
    6be6:	90 e0       	ldi	r25, 0x00	; 0
    6be8:	28 e0       	ldi	r18, 0x08	; 8
    6bea:	30 e0       	ldi	r19, 0x00	; 0
    6bec:	f9 01       	movw	r30, r18
    6bee:	21 81       	ldd	r18, Z+1	; 0x01
    6bf0:	62 2f       	mov	r22, r18
    6bf2:	29 81       	ldd	r18, Y+1	; 0x01
    6bf4:	42 2f       	mov	r20, r18
    6bf6:	50 e0       	ldi	r21, 0x00	; 0
    6bf8:	21 e0       	ldi	r18, 0x01	; 1
    6bfa:	30 e0       	ldi	r19, 0x00	; 0
    6bfc:	02 c0       	rjmp	.+4      	; 0x6c02 <PORTC_set_pin_level+0x5c>
    6bfe:	22 0f       	add	r18, r18
    6c00:	33 1f       	adc	r19, r19
    6c02:	4a 95       	dec	r20
    6c04:	e2 f7       	brpl	.-8      	; 0x6bfe <PORTC_set_pin_level+0x58>
    6c06:	20 95       	com	r18
    6c08:	26 23       	and	r18, r22
    6c0a:	fc 01       	movw	r30, r24
    6c0c:	21 83       	std	Z+1, r18	; 0x01
    6c0e:	00 00       	nop
    6c10:	0f 90       	pop	r0
    6c12:	0f 90       	pop	r0
    6c14:	df 91       	pop	r29
    6c16:	cf 91       	pop	r28
    6c18:	08 95       	ret

00006c1a <PORTD_set_pin_pull_mode>:
    6c1a:	cf 93       	push	r28
    6c1c:	df 93       	push	r29
    6c1e:	00 d0       	rcall	.+0      	; 0x6c20 <PORTD_set_pin_pull_mode+0x6>
    6c20:	00 d0       	rcall	.+0      	; 0x6c22 <PORTD_set_pin_pull_mode+0x8>
    6c22:	cd b7       	in	r28, 0x3d	; 61
    6c24:	de b7       	in	r29, 0x3e	; 62
    6c26:	8b 83       	std	Y+3, r24	; 0x03
    6c28:	6c 83       	std	Y+4, r22	; 0x04
    6c2a:	8b 81       	ldd	r24, Y+3	; 0x03
    6c2c:	88 2f       	mov	r24, r24
    6c2e:	90 e0       	ldi	r25, 0x00	; 0
    6c30:	80 59       	subi	r24, 0x90	; 144
    6c32:	9b 4f       	sbci	r25, 0xFB	; 251
    6c34:	89 83       	std	Y+1, r24	; 0x01
    6c36:	9a 83       	std	Y+2, r25	; 0x02
    6c38:	8c 81       	ldd	r24, Y+4	; 0x04
    6c3a:	81 30       	cpi	r24, 0x01	; 1
    6c3c:	59 f4       	brne	.+22     	; 0x6c54 <PORTD_set_pin_pull_mode+0x3a>
    6c3e:	89 81       	ldd	r24, Y+1	; 0x01
    6c40:	9a 81       	ldd	r25, Y+2	; 0x02
    6c42:	fc 01       	movw	r30, r24
    6c44:	80 81       	ld	r24, Z
    6c46:	28 2f       	mov	r18, r24
    6c48:	28 60       	ori	r18, 0x08	; 8
    6c4a:	89 81       	ldd	r24, Y+1	; 0x01
    6c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c4e:	fc 01       	movw	r30, r24
    6c50:	20 83       	st	Z, r18
    6c52:	0d c0       	rjmp	.+26     	; 0x6c6e <PORTD_set_pin_pull_mode+0x54>
    6c54:	8c 81       	ldd	r24, Y+4	; 0x04
    6c56:	88 23       	and	r24, r24
    6c58:	51 f4       	brne	.+20     	; 0x6c6e <PORTD_set_pin_pull_mode+0x54>
    6c5a:	89 81       	ldd	r24, Y+1	; 0x01
    6c5c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c5e:	fc 01       	movw	r30, r24
    6c60:	80 81       	ld	r24, Z
    6c62:	28 2f       	mov	r18, r24
    6c64:	27 7f       	andi	r18, 0xF7	; 247
    6c66:	89 81       	ldd	r24, Y+1	; 0x01
    6c68:	9a 81       	ldd	r25, Y+2	; 0x02
    6c6a:	fc 01       	movw	r30, r24
    6c6c:	20 83       	st	Z, r18
    6c6e:	00 00       	nop
    6c70:	24 96       	adiw	r28, 0x04	; 4
    6c72:	cd bf       	out	0x3d, r28	; 61
    6c74:	de bf       	out	0x3e, r29	; 62
    6c76:	df 91       	pop	r29
    6c78:	cf 91       	pop	r28
    6c7a:	08 95       	ret

00006c7c <PORTD_pin_set_isc>:
    6c7c:	cf 93       	push	r28
    6c7e:	df 93       	push	r29
    6c80:	00 d0       	rcall	.+0      	; 0x6c82 <PORTD_pin_set_isc+0x6>
    6c82:	00 d0       	rcall	.+0      	; 0x6c84 <PORTD_pin_set_isc+0x8>
    6c84:	cd b7       	in	r28, 0x3d	; 61
    6c86:	de b7       	in	r29, 0x3e	; 62
    6c88:	8b 83       	std	Y+3, r24	; 0x03
    6c8a:	6c 83       	std	Y+4, r22	; 0x04
    6c8c:	8b 81       	ldd	r24, Y+3	; 0x03
    6c8e:	88 2f       	mov	r24, r24
    6c90:	90 e0       	ldi	r25, 0x00	; 0
    6c92:	80 59       	subi	r24, 0x90	; 144
    6c94:	9b 4f       	sbci	r25, 0xFB	; 251
    6c96:	89 83       	std	Y+1, r24	; 0x01
    6c98:	9a 83       	std	Y+2, r25	; 0x02
    6c9a:	89 81       	ldd	r24, Y+1	; 0x01
    6c9c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c9e:	fc 01       	movw	r30, r24
    6ca0:	80 81       	ld	r24, Z
    6ca2:	98 2f       	mov	r25, r24
    6ca4:	98 7f       	andi	r25, 0xF8	; 248
    6ca6:	8c 81       	ldd	r24, Y+4	; 0x04
    6ca8:	89 2b       	or	r24, r25
    6caa:	28 2f       	mov	r18, r24
    6cac:	89 81       	ldd	r24, Y+1	; 0x01
    6cae:	9a 81       	ldd	r25, Y+2	; 0x02
    6cb0:	fc 01       	movw	r30, r24
    6cb2:	20 83       	st	Z, r18
    6cb4:	00 00       	nop
    6cb6:	24 96       	adiw	r28, 0x04	; 4
    6cb8:	cd bf       	out	0x3d, r28	; 61
    6cba:	de bf       	out	0x3e, r29	; 62
    6cbc:	df 91       	pop	r29
    6cbe:	cf 91       	pop	r28
    6cc0:	08 95       	ret

00006cc2 <PORTD_set_pin_dir>:
    6cc2:	cf 93       	push	r28
    6cc4:	df 93       	push	r29
    6cc6:	00 d0       	rcall	.+0      	; 0x6cc8 <PORTD_set_pin_dir+0x6>
    6cc8:	cd b7       	in	r28, 0x3d	; 61
    6cca:	de b7       	in	r29, 0x3e	; 62
    6ccc:	89 83       	std	Y+1, r24	; 0x01
    6cce:	6a 83       	std	Y+2, r22	; 0x02
    6cd0:	8a 81       	ldd	r24, Y+2	; 0x02
    6cd2:	88 2f       	mov	r24, r24
    6cd4:	90 e0       	ldi	r25, 0x00	; 0
    6cd6:	81 30       	cpi	r24, 0x01	; 1
    6cd8:	91 05       	cpc	r25, r1
    6cda:	e1 f0       	breq	.+56     	; 0x6d14 <PORTD_set_pin_dir+0x52>
    6cdc:	82 30       	cpi	r24, 0x02	; 2
    6cde:	91 05       	cpc	r25, r1
    6ce0:	71 f1       	breq	.+92     	; 0x6d3e <PORTD_set_pin_dir+0x7c>
    6ce2:	89 2b       	or	r24, r25
    6ce4:	09 f0       	breq	.+2      	; 0x6ce8 <PORTD_set_pin_dir+0x26>
    6ce6:	3b c0       	rjmp	.+118    	; 0x6d5e <PORTD_set_pin_dir+0x9c>
    6ce8:	8c e0       	ldi	r24, 0x0C	; 12
    6cea:	90 e0       	ldi	r25, 0x00	; 0
    6cec:	2c e0       	ldi	r18, 0x0C	; 12
    6cee:	30 e0       	ldi	r19, 0x00	; 0
    6cf0:	f9 01       	movw	r30, r18
    6cf2:	20 81       	ld	r18, Z
    6cf4:	62 2f       	mov	r22, r18
    6cf6:	29 81       	ldd	r18, Y+1	; 0x01
    6cf8:	42 2f       	mov	r20, r18
    6cfa:	50 e0       	ldi	r21, 0x00	; 0
    6cfc:	21 e0       	ldi	r18, 0x01	; 1
    6cfe:	30 e0       	ldi	r19, 0x00	; 0
    6d00:	02 c0       	rjmp	.+4      	; 0x6d06 <PORTD_set_pin_dir+0x44>
    6d02:	22 0f       	add	r18, r18
    6d04:	33 1f       	adc	r19, r19
    6d06:	4a 95       	dec	r20
    6d08:	e2 f7       	brpl	.-8      	; 0x6d02 <PORTD_set_pin_dir+0x40>
    6d0a:	20 95       	com	r18
    6d0c:	26 23       	and	r18, r22
    6d0e:	fc 01       	movw	r30, r24
    6d10:	20 83       	st	Z, r18
    6d12:	25 c0       	rjmp	.+74     	; 0x6d5e <PORTD_set_pin_dir+0x9c>
    6d14:	8c e0       	ldi	r24, 0x0C	; 12
    6d16:	90 e0       	ldi	r25, 0x00	; 0
    6d18:	2c e0       	ldi	r18, 0x0C	; 12
    6d1a:	30 e0       	ldi	r19, 0x00	; 0
    6d1c:	f9 01       	movw	r30, r18
    6d1e:	20 81       	ld	r18, Z
    6d20:	62 2f       	mov	r22, r18
    6d22:	29 81       	ldd	r18, Y+1	; 0x01
    6d24:	42 2f       	mov	r20, r18
    6d26:	50 e0       	ldi	r21, 0x00	; 0
    6d28:	21 e0       	ldi	r18, 0x01	; 1
    6d2a:	30 e0       	ldi	r19, 0x00	; 0
    6d2c:	02 c0       	rjmp	.+4      	; 0x6d32 <PORTD_set_pin_dir+0x70>
    6d2e:	22 0f       	add	r18, r18
    6d30:	33 1f       	adc	r19, r19
    6d32:	4a 95       	dec	r20
    6d34:	e2 f7       	brpl	.-8      	; 0x6d2e <PORTD_set_pin_dir+0x6c>
    6d36:	26 2b       	or	r18, r22
    6d38:	fc 01       	movw	r30, r24
    6d3a:	20 83       	st	Z, r18
    6d3c:	10 c0       	rjmp	.+32     	; 0x6d5e <PORTD_set_pin_dir+0x9c>
    6d3e:	89 81       	ldd	r24, Y+1	; 0x01
    6d40:	88 2f       	mov	r24, r24
    6d42:	90 e0       	ldi	r25, 0x00	; 0
    6d44:	80 59       	subi	r24, 0x90	; 144
    6d46:	9b 4f       	sbci	r25, 0xFB	; 251
    6d48:	29 81       	ldd	r18, Y+1	; 0x01
    6d4a:	22 2f       	mov	r18, r18
    6d4c:	30 e0       	ldi	r19, 0x00	; 0
    6d4e:	20 59       	subi	r18, 0x90	; 144
    6d50:	3b 4f       	sbci	r19, 0xFB	; 251
    6d52:	f9 01       	movw	r30, r18
    6d54:	20 81       	ld	r18, Z
    6d56:	28 60       	ori	r18, 0x08	; 8
    6d58:	fc 01       	movw	r30, r24
    6d5a:	20 83       	st	Z, r18
    6d5c:	00 00       	nop
    6d5e:	00 00       	nop
    6d60:	0f 90       	pop	r0
    6d62:	0f 90       	pop	r0
    6d64:	df 91       	pop	r29
    6d66:	cf 91       	pop	r28
    6d68:	08 95       	ret

00006d6a <PORTD_get_pin_level>:
    6d6a:	cf 93       	push	r28
    6d6c:	df 93       	push	r29
    6d6e:	1f 92       	push	r1
    6d70:	cd b7       	in	r28, 0x3d	; 61
    6d72:	de b7       	in	r29, 0x3e	; 62
    6d74:	89 83       	std	Y+1, r24	; 0x01
    6d76:	8c e0       	ldi	r24, 0x0C	; 12
    6d78:	90 e0       	ldi	r25, 0x00	; 0
    6d7a:	fc 01       	movw	r30, r24
    6d7c:	82 81       	ldd	r24, Z+2	; 0x02
    6d7e:	88 2f       	mov	r24, r24
    6d80:	90 e0       	ldi	r25, 0x00	; 0
    6d82:	29 81       	ldd	r18, Y+1	; 0x01
    6d84:	22 2f       	mov	r18, r18
    6d86:	30 e0       	ldi	r19, 0x00	; 0
    6d88:	02 c0       	rjmp	.+4      	; 0x6d8e <PORTD_get_pin_level+0x24>
    6d8a:	95 95       	asr	r25
    6d8c:	87 95       	ror	r24
    6d8e:	2a 95       	dec	r18
    6d90:	e2 f7       	brpl	.-8      	; 0x6d8a <PORTD_get_pin_level+0x20>
    6d92:	81 70       	andi	r24, 0x01	; 1
    6d94:	99 27       	eor	r25, r25
    6d96:	21 e0       	ldi	r18, 0x01	; 1
    6d98:	89 2b       	or	r24, r25
    6d9a:	09 f4       	brne	.+2      	; 0x6d9e <PORTD_get_pin_level+0x34>
    6d9c:	20 e0       	ldi	r18, 0x00	; 0
    6d9e:	82 2f       	mov	r24, r18
    6da0:	0f 90       	pop	r0
    6da2:	df 91       	pop	r29
    6da4:	cf 91       	pop	r28
    6da6:	08 95       	ret

00006da8 <PORTE_set_pin_dir>:
    6da8:	cf 93       	push	r28
    6daa:	df 93       	push	r29
    6dac:	00 d0       	rcall	.+0      	; 0x6dae <PORTE_set_pin_dir+0x6>
    6dae:	cd b7       	in	r28, 0x3d	; 61
    6db0:	de b7       	in	r29, 0x3e	; 62
    6db2:	89 83       	std	Y+1, r24	; 0x01
    6db4:	6a 83       	std	Y+2, r22	; 0x02
    6db6:	8a 81       	ldd	r24, Y+2	; 0x02
    6db8:	88 2f       	mov	r24, r24
    6dba:	90 e0       	ldi	r25, 0x00	; 0
    6dbc:	81 30       	cpi	r24, 0x01	; 1
    6dbe:	91 05       	cpc	r25, r1
    6dc0:	e1 f0       	breq	.+56     	; 0x6dfa <PORTE_set_pin_dir+0x52>
    6dc2:	82 30       	cpi	r24, 0x02	; 2
    6dc4:	91 05       	cpc	r25, r1
    6dc6:	71 f1       	breq	.+92     	; 0x6e24 <PORTE_set_pin_dir+0x7c>
    6dc8:	89 2b       	or	r24, r25
    6dca:	09 f0       	breq	.+2      	; 0x6dce <PORTE_set_pin_dir+0x26>
    6dcc:	3b c0       	rjmp	.+118    	; 0x6e44 <PORTE_set_pin_dir+0x9c>
    6dce:	80 e1       	ldi	r24, 0x10	; 16
    6dd0:	90 e0       	ldi	r25, 0x00	; 0
    6dd2:	20 e1       	ldi	r18, 0x10	; 16
    6dd4:	30 e0       	ldi	r19, 0x00	; 0
    6dd6:	f9 01       	movw	r30, r18
    6dd8:	20 81       	ld	r18, Z
    6dda:	62 2f       	mov	r22, r18
    6ddc:	29 81       	ldd	r18, Y+1	; 0x01
    6dde:	42 2f       	mov	r20, r18
    6de0:	50 e0       	ldi	r21, 0x00	; 0
    6de2:	21 e0       	ldi	r18, 0x01	; 1
    6de4:	30 e0       	ldi	r19, 0x00	; 0
    6de6:	02 c0       	rjmp	.+4      	; 0x6dec <PORTE_set_pin_dir+0x44>
    6de8:	22 0f       	add	r18, r18
    6dea:	33 1f       	adc	r19, r19
    6dec:	4a 95       	dec	r20
    6dee:	e2 f7       	brpl	.-8      	; 0x6de8 <PORTE_set_pin_dir+0x40>
    6df0:	20 95       	com	r18
    6df2:	26 23       	and	r18, r22
    6df4:	fc 01       	movw	r30, r24
    6df6:	20 83       	st	Z, r18
    6df8:	25 c0       	rjmp	.+74     	; 0x6e44 <PORTE_set_pin_dir+0x9c>
    6dfa:	80 e1       	ldi	r24, 0x10	; 16
    6dfc:	90 e0       	ldi	r25, 0x00	; 0
    6dfe:	20 e1       	ldi	r18, 0x10	; 16
    6e00:	30 e0       	ldi	r19, 0x00	; 0
    6e02:	f9 01       	movw	r30, r18
    6e04:	20 81       	ld	r18, Z
    6e06:	62 2f       	mov	r22, r18
    6e08:	29 81       	ldd	r18, Y+1	; 0x01
    6e0a:	42 2f       	mov	r20, r18
    6e0c:	50 e0       	ldi	r21, 0x00	; 0
    6e0e:	21 e0       	ldi	r18, 0x01	; 1
    6e10:	30 e0       	ldi	r19, 0x00	; 0
    6e12:	02 c0       	rjmp	.+4      	; 0x6e18 <PORTE_set_pin_dir+0x70>
    6e14:	22 0f       	add	r18, r18
    6e16:	33 1f       	adc	r19, r19
    6e18:	4a 95       	dec	r20
    6e1a:	e2 f7       	brpl	.-8      	; 0x6e14 <PORTE_set_pin_dir+0x6c>
    6e1c:	26 2b       	or	r18, r22
    6e1e:	fc 01       	movw	r30, r24
    6e20:	20 83       	st	Z, r18
    6e22:	10 c0       	rjmp	.+32     	; 0x6e44 <PORTE_set_pin_dir+0x9c>
    6e24:	89 81       	ldd	r24, Y+1	; 0x01
    6e26:	88 2f       	mov	r24, r24
    6e28:	90 e0       	ldi	r25, 0x00	; 0
    6e2a:	80 57       	subi	r24, 0x70	; 112
    6e2c:	9b 4f       	sbci	r25, 0xFB	; 251
    6e2e:	29 81       	ldd	r18, Y+1	; 0x01
    6e30:	22 2f       	mov	r18, r18
    6e32:	30 e0       	ldi	r19, 0x00	; 0
    6e34:	20 57       	subi	r18, 0x70	; 112
    6e36:	3b 4f       	sbci	r19, 0xFB	; 251
    6e38:	f9 01       	movw	r30, r18
    6e3a:	20 81       	ld	r18, Z
    6e3c:	28 60       	ori	r18, 0x08	; 8
    6e3e:	fc 01       	movw	r30, r24
    6e40:	20 83       	st	Z, r18
    6e42:	00 00       	nop
    6e44:	00 00       	nop
    6e46:	0f 90       	pop	r0
    6e48:	0f 90       	pop	r0
    6e4a:	df 91       	pop	r29
    6e4c:	cf 91       	pop	r28
    6e4e:	08 95       	ret

00006e50 <PORTF_set_pin_dir>:
    6e50:	cf 93       	push	r28
    6e52:	df 93       	push	r29
    6e54:	00 d0       	rcall	.+0      	; 0x6e56 <PORTF_set_pin_dir+0x6>
    6e56:	cd b7       	in	r28, 0x3d	; 61
    6e58:	de b7       	in	r29, 0x3e	; 62
    6e5a:	89 83       	std	Y+1, r24	; 0x01
    6e5c:	6a 83       	std	Y+2, r22	; 0x02
    6e5e:	8a 81       	ldd	r24, Y+2	; 0x02
    6e60:	88 2f       	mov	r24, r24
    6e62:	90 e0       	ldi	r25, 0x00	; 0
    6e64:	81 30       	cpi	r24, 0x01	; 1
    6e66:	91 05       	cpc	r25, r1
    6e68:	e1 f0       	breq	.+56     	; 0x6ea2 <PORTF_set_pin_dir+0x52>
    6e6a:	82 30       	cpi	r24, 0x02	; 2
    6e6c:	91 05       	cpc	r25, r1
    6e6e:	71 f1       	breq	.+92     	; 0x6ecc <PORTF_set_pin_dir+0x7c>
    6e70:	89 2b       	or	r24, r25
    6e72:	09 f0       	breq	.+2      	; 0x6e76 <PORTF_set_pin_dir+0x26>
    6e74:	3b c0       	rjmp	.+118    	; 0x6eec <PORTF_set_pin_dir+0x9c>
    6e76:	84 e1       	ldi	r24, 0x14	; 20
    6e78:	90 e0       	ldi	r25, 0x00	; 0
    6e7a:	24 e1       	ldi	r18, 0x14	; 20
    6e7c:	30 e0       	ldi	r19, 0x00	; 0
    6e7e:	f9 01       	movw	r30, r18
    6e80:	20 81       	ld	r18, Z
    6e82:	62 2f       	mov	r22, r18
    6e84:	29 81       	ldd	r18, Y+1	; 0x01
    6e86:	42 2f       	mov	r20, r18
    6e88:	50 e0       	ldi	r21, 0x00	; 0
    6e8a:	21 e0       	ldi	r18, 0x01	; 1
    6e8c:	30 e0       	ldi	r19, 0x00	; 0
    6e8e:	02 c0       	rjmp	.+4      	; 0x6e94 <PORTF_set_pin_dir+0x44>
    6e90:	22 0f       	add	r18, r18
    6e92:	33 1f       	adc	r19, r19
    6e94:	4a 95       	dec	r20
    6e96:	e2 f7       	brpl	.-8      	; 0x6e90 <PORTF_set_pin_dir+0x40>
    6e98:	20 95       	com	r18
    6e9a:	26 23       	and	r18, r22
    6e9c:	fc 01       	movw	r30, r24
    6e9e:	20 83       	st	Z, r18
    6ea0:	25 c0       	rjmp	.+74     	; 0x6eec <PORTF_set_pin_dir+0x9c>
    6ea2:	84 e1       	ldi	r24, 0x14	; 20
    6ea4:	90 e0       	ldi	r25, 0x00	; 0
    6ea6:	24 e1       	ldi	r18, 0x14	; 20
    6ea8:	30 e0       	ldi	r19, 0x00	; 0
    6eaa:	f9 01       	movw	r30, r18
    6eac:	20 81       	ld	r18, Z
    6eae:	62 2f       	mov	r22, r18
    6eb0:	29 81       	ldd	r18, Y+1	; 0x01
    6eb2:	42 2f       	mov	r20, r18
    6eb4:	50 e0       	ldi	r21, 0x00	; 0
    6eb6:	21 e0       	ldi	r18, 0x01	; 1
    6eb8:	30 e0       	ldi	r19, 0x00	; 0
    6eba:	02 c0       	rjmp	.+4      	; 0x6ec0 <PORTF_set_pin_dir+0x70>
    6ebc:	22 0f       	add	r18, r18
    6ebe:	33 1f       	adc	r19, r19
    6ec0:	4a 95       	dec	r20
    6ec2:	e2 f7       	brpl	.-8      	; 0x6ebc <PORTF_set_pin_dir+0x6c>
    6ec4:	26 2b       	or	r18, r22
    6ec6:	fc 01       	movw	r30, r24
    6ec8:	20 83       	st	Z, r18
    6eca:	10 c0       	rjmp	.+32     	; 0x6eec <PORTF_set_pin_dir+0x9c>
    6ecc:	89 81       	ldd	r24, Y+1	; 0x01
    6ece:	88 2f       	mov	r24, r24
    6ed0:	90 e0       	ldi	r25, 0x00	; 0
    6ed2:	80 55       	subi	r24, 0x50	; 80
    6ed4:	9b 4f       	sbci	r25, 0xFB	; 251
    6ed6:	29 81       	ldd	r18, Y+1	; 0x01
    6ed8:	22 2f       	mov	r18, r18
    6eda:	30 e0       	ldi	r19, 0x00	; 0
    6edc:	20 55       	subi	r18, 0x50	; 80
    6ede:	3b 4f       	sbci	r19, 0xFB	; 251
    6ee0:	f9 01       	movw	r30, r18
    6ee2:	20 81       	ld	r18, Z
    6ee4:	28 60       	ori	r18, 0x08	; 8
    6ee6:	fc 01       	movw	r30, r24
    6ee8:	20 83       	st	Z, r18
    6eea:	00 00       	nop
    6eec:	00 00       	nop
    6eee:	0f 90       	pop	r0
    6ef0:	0f 90       	pop	r0
    6ef2:	df 91       	pop	r29
    6ef4:	cf 91       	pop	r28
    6ef6:	08 95       	ret

00006ef8 <_Z10fet_driverb>:

void fet_driver(bool state)
{
    6ef8:	cf 93       	push	r28
    6efa:	df 93       	push	r29
    6efc:	1f 92       	push	r1
    6efe:	cd b7       	in	r28, 0x3d	; 61
    6f00:	de b7       	in	r29, 0x3e	; 62
    6f02:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    6f04:	89 81       	ldd	r24, Y+1	; 0x01
    6f06:	88 23       	and	r24, r24
    6f08:	29 f0       	breq	.+10     	; 0x6f14 <_Z10fet_driverb+0x1c>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    6f0a:	61 e0       	ldi	r22, 0x01	; 1
    6f0c:	83 e0       	ldi	r24, 0x03	; 3
    6f0e:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
	}
}
    6f12:	04 c0       	rjmp	.+8      	; 0x6f1c <_Z10fet_driverb+0x24>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    6f14:	60 e0       	ldi	r22, 0x00	; 0
    6f16:	83 e0       	ldi	r24, 0x03	; 3
    6f18:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	}
}
    6f1c:	00 00       	nop
    6f1e:	0f 90       	pop	r0
    6f20:	df 91       	pop	r29
    6f22:	cf 91       	pop	r28
    6f24:	08 95       	ret

00006f26 <_Z10wifi_powerb>:


void wifi_power(bool state)
{
    6f26:	cf 93       	push	r28
    6f28:	df 93       	push	r29
    6f2a:	1f 92       	push	r1
    6f2c:	cd b7       	in	r28, 0x3d	; 61
    6f2e:	de b7       	in	r29, 0x3e	; 62
    6f30:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    6f32:	89 81       	ldd	r24, Y+1	; 0x01
    6f34:	88 23       	and	r24, r24
    6f36:	29 f0       	breq	.+10     	; 0x6f42 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    6f38:	61 e0       	ldi	r22, 0x01	; 1
    6f3a:	85 e0       	ldi	r24, 0x05	; 5
    6f3c:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    6f40:	04 c0       	rjmp	.+8      	; 0x6f4a <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    6f42:	60 e0       	ldi	r22, 0x00	; 0
    6f44:	85 e0       	ldi	r24, 0x05	; 5
    6f46:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	}
}
    6f4a:	00 00       	nop
    6f4c:	0f 90       	pop	r0
    6f4e:	df 91       	pop	r29
    6f50:	cf 91       	pop	r28
    6f52:	08 95       	ret

00006f54 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    6f54:	cf 93       	push	r28
    6f56:	df 93       	push	r29
    6f58:	1f 92       	push	r1
    6f5a:	cd b7       	in	r28, 0x3d	; 61
    6f5c:	de b7       	in	r29, 0x3e	; 62
    6f5e:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    6f60:	89 81       	ldd	r24, Y+1	; 0x01
    6f62:	88 23       	and	r24, r24
    6f64:	29 f0       	breq	.+10     	; 0x6f70 <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    6f66:	60 e0       	ldi	r22, 0x00	; 0
    6f68:	86 e0       	ldi	r24, 0x06	; 6
    6f6a:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    6f6e:	04 c0       	rjmp	.+8      	; 0x6f78 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    6f70:	61 e0       	ldi	r22, 0x01	; 1
    6f72:	86 e0       	ldi	r24, 0x06	; 6
    6f74:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	}
}
    6f78:	00 00       	nop
    6f7a:	0f 90       	pop	r0
    6f7c:	df 91       	pop	r29
    6f7e:	cf 91       	pop	r28
    6f80:	08 95       	ret

00006f82 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    6f82:	cf 93       	push	r28
    6f84:	df 93       	push	r29
    6f86:	cd b7       	in	r28, 0x3d	; 61
    6f88:	de b7       	in	r29, 0x3e	; 62
	return(PORTD_get_pin_level(WIFI_MODULE_DETECT));
    6f8a:	87 e0       	ldi	r24, 0x07	; 7
    6f8c:	0e 94 b5 36 	call	0x6d6a	; 0x6d6a <PORTD_get_pin_level>
}
    6f90:	df 91       	pop	r29
    6f92:	cf 91       	pop	r28
    6f94:	08 95       	ret

00006f96 <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    6f96:	cf 93       	push	r28
    6f98:	df 93       	push	r29
    6f9a:	cd b7       	in	r28, 0x3d	; 61
    6f9c:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    6f9e:	61 e0       	ldi	r22, 0x01	; 1
    6fa0:	81 e0       	ldi	r24, 0x01	; 1
    6fa2:	0e 94 0f 34 	call	0x681e	; 0x681e <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    6fa6:	60 e0       	ldi	r22, 0x00	; 0
    6fa8:	81 e0       	ldi	r24, 0x01	; 1
    6faa:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    6fae:	60 e0       	ldi	r22, 0x00	; 0
    6fb0:	82 e0       	ldi	r24, 0x02	; 2
    6fb2:	0e 94 0f 34 	call	0x681e	; 0x681e <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    6fb6:	61 e0       	ldi	r22, 0x01	; 1
    6fb8:	82 e0       	ldi	r24, 0x02	; 2
    6fba:	0e 94 bb 33 	call	0x6776	; 0x6776 <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    6fbe:	62 e0       	ldi	r22, 0x02	; 2
    6fc0:	82 e0       	ldi	r24, 0x02	; 2
    6fc2:	0e 94 ec 33 	call	0x67d8	; 0x67d8 <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    6fc6:	61 e0       	ldi	r22, 0x01	; 1
    6fc8:	83 e0       	ldi	r24, 0x03	; 3
    6fca:	0e 94 0f 34 	call	0x681e	; 0x681e <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    6fce:	60 e0       	ldi	r22, 0x00	; 0
    6fd0:	83 e0       	ldi	r24, 0x03	; 3
    6fd2:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    6fd6:	61 e0       	ldi	r22, 0x01	; 1
    6fd8:	85 e0       	ldi	r24, 0x05	; 5
    6fda:	0e 94 0f 34 	call	0x681e	; 0x681e <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    6fde:	61 e0       	ldi	r22, 0x01	; 1
    6fe0:	85 e0       	ldi	r24, 0x05	; 5
    6fe2:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    6fe6:	61 e0       	ldi	r22, 0x01	; 1
    6fe8:	86 e0       	ldi	r24, 0x06	; 6
    6fea:	0e 94 0f 34 	call	0x681e	; 0x681e <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    6fee:	60 e0       	ldi	r22, 0x00	; 0
    6ff0:	86 e0       	ldi	r24, 0x06	; 6
    6ff2:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    6ff6:	61 e0       	ldi	r22, 0x01	; 1
    6ff8:	87 e0       	ldi	r24, 0x07	; 7
    6ffa:	0e 94 0f 34 	call	0x681e	; 0x681e <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    6ffe:	60 e0       	ldi	r22, 0x00	; 0
    7000:	87 e0       	ldi	r24, 0x07	; 7
    7002:	0e 94 63 34 	call	0x68c6	; 0x68c6 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    7006:	61 e0       	ldi	r22, 0x01	; 1
    7008:	80 e0       	ldi	r24, 0x00	; 0
    700a:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    700e:	60 e0       	ldi	r22, 0x00	; 0
    7010:	80 e0       	ldi	r24, 0x00	; 0
    7012:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    7016:	61 e0       	ldi	r22, 0x01	; 1
    7018:	81 e0       	ldi	r24, 0x01	; 1
    701a:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    701e:	60 e0       	ldi	r22, 0x00	; 0
    7020:	81 e0       	ldi	r24, 0x01	; 1
    7022:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    7026:	61 e0       	ldi	r22, 0x01	; 1
    7028:	84 e0       	ldi	r24, 0x04	; 4
    702a:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    702e:	60 e0       	ldi	r22, 0x00	; 0
    7030:	84 e0       	ldi	r24, 0x04	; 4
    7032:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    7036:	61 e0       	ldi	r22, 0x01	; 1
    7038:	85 e0       	ldi	r24, 0x05	; 5
    703a:	0e 94 9d 34 	call	0x693a	; 0x693a <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    703e:	60 e0       	ldi	r22, 0x00	; 0
    7040:	85 e0       	ldi	r24, 0x05	; 5
    7042:	0e 94 f1 34 	call	0x69e2	; 0x69e2 <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    7046:	61 e0       	ldi	r22, 0x01	; 1
    7048:	85 e0       	ldi	r24, 0x05	; 5
    704a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    704e:	60 e0       	ldi	r22, 0x00	; 0
    7050:	85 e0       	ldi	r24, 0x05	; 5
    7052:	0e 94 d3 35 	call	0x6ba6	; 0x6ba6 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    7056:	61 e0       	ldi	r22, 0x01	; 1
    7058:	86 e0       	ldi	r24, 0x06	; 6
    705a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    705e:	60 e0       	ldi	r22, 0x00	; 0
    7060:	86 e0       	ldi	r24, 0x06	; 6
    7062:	0e 94 d3 35 	call	0x6ba6	; 0x6ba6 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    7066:	60 e0       	ldi	r22, 0x00	; 0
    7068:	87 e0       	ldi	r24, 0x07	; 7
    706a:	0e 94 7f 35 	call	0x6afe	; 0x6afe <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    706e:	61 e0       	ldi	r22, 0x01	; 1
    7070:	87 e0       	ldi	r24, 0x07	; 7
    7072:	0e 94 2b 35 	call	0x6a56	; 0x6a56 <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    7076:	62 e0       	ldi	r22, 0x02	; 2
    7078:	87 e0       	ldi	r24, 0x07	; 7
    707a:	0e 94 5c 35 	call	0x6ab8	; 0x6ab8 <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    707e:	60 e0       	ldi	r22, 0x00	; 0
    7080:	80 e0       	ldi	r24, 0x00	; 0
    7082:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    7086:	60 e0       	ldi	r22, 0x00	; 0
    7088:	81 e0       	ldi	r24, 0x01	; 1
    708a:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    708e:	61 e0       	ldi	r22, 0x01	; 1
    7090:	81 e0       	ldi	r24, 0x01	; 1
    7092:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    7096:	61 e0       	ldi	r22, 0x01	; 1
    7098:	81 e0       	ldi	r24, 0x01	; 1
    709a:	0e 94 3e 36 	call	0x6c7c	; 0x6c7c <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    709e:	60 e0       	ldi	r22, 0x00	; 0
    70a0:	87 e0       	ldi	r24, 0x07	; 7
    70a2:	0e 94 61 36 	call	0x6cc2	; 0x6cc2 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    70a6:	60 e0       	ldi	r22, 0x00	; 0
    70a8:	87 e0       	ldi	r24, 0x07	; 7
    70aa:	0e 94 0d 36 	call	0x6c1a	; 0x6c1a <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    70ae:	62 e0       	ldi	r22, 0x02	; 2
    70b0:	80 e0       	ldi	r24, 0x00	; 0
    70b2:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    70b6:	62 e0       	ldi	r22, 0x02	; 2
    70b8:	81 e0       	ldi	r24, 0x01	; 1
    70ba:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    70be:	62 e0       	ldi	r22, 0x02	; 2
    70c0:	82 e0       	ldi	r24, 0x02	; 2
    70c2:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    70c6:	62 e0       	ldi	r22, 0x02	; 2
    70c8:	83 e0       	ldi	r24, 0x03	; 3
    70ca:	0e 94 d4 36 	call	0x6da8	; 0x6da8 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    70ce:	62 e0       	ldi	r22, 0x02	; 2
    70d0:	80 e0       	ldi	r24, 0x00	; 0
    70d2:	0e 94 28 37 	call	0x6e50	; 0x6e50 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    70d6:	62 e0       	ldi	r22, 0x02	; 2
    70d8:	81 e0       	ldi	r24, 0x01	; 1
    70da:	0e 94 28 37 	call	0x6e50	; 0x6e50 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    70de:	62 e0       	ldi	r22, 0x02	; 2
    70e0:	82 e0       	ldi	r24, 0x02	; 2
    70e2:	0e 94 28 37 	call	0x6e50	; 0x6e50 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    70e6:	62 e0       	ldi	r22, 0x02	; 2
    70e8:	83 e0       	ldi	r24, 0x03	; 3
    70ea:	0e 94 28 37 	call	0x6e50	; 0x6e50 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    70ee:	62 e0       	ldi	r22, 0x02	; 2
    70f0:	84 e0       	ldi	r24, 0x04	; 4
    70f2:	0e 94 28 37 	call	0x6e50	; 0x6e50 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    70f6:	62 e0       	ldi	r22, 0x02	; 2
    70f8:	85 e0       	ldi	r24, 0x05	; 5
    70fa:	0e 94 28 37 	call	0x6e50	; 0x6e50 <PORTF_set_pin_dir>
	/* PORTF.PIN6 = Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    70fe:	80 e0       	ldi	r24, 0x00	; 0
    7100:	94 e0       	ldi	r25, 0x04	; 4
    7102:	2a e0       	ldi	r18, 0x0A	; 10
    7104:	fc 01       	movw	r30, r24
    7106:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    7108:	80 e6       	ldi	r24, 0x60	; 96
    710a:	94 e0       	ldi	r25, 0x04	; 4
    710c:	29 e0       	ldi	r18, 0x09	; 9
    710e:	fc 01       	movw	r30, r24
    7110:	21 8b       	std	Z+17, r18	; 0x11
}
    7112:	00 00       	nop
    7114:	df 91       	pop	r29
    7116:	cf 91       	pop	r28
    7118:	08 95       	ret

0000711a <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    711a:	cf 93       	push	r28
    711c:	df 93       	push	r29
    711e:	cd b7       	in	r28, 0x3d	; 61
    7120:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    7122:	80 e8       	ldi	r24, 0x80	; 128
    7124:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    7126:	fc 01       	movw	r30, r24
    7128:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    712a:	80 e0       	ldi	r24, 0x00	; 0
}
    712c:	df 91       	pop	r29
    712e:	cf 91       	pop	r28
    7130:	08 95       	ret

00007132 <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    7132:	cf 93       	push	r28
    7134:	df 93       	push	r29
    7136:	00 d0       	rcall	.+0      	; 0x7138 <ccp_write_io+0x6>
    7138:	1f 92       	push	r1
    713a:	cd b7       	in	r28, 0x3d	; 61
    713c:	de b7       	in	r29, 0x3e	; 62
    713e:	89 83       	std	Y+1, r24	; 0x01
    7140:	9a 83       	std	Y+2, r25	; 0x02
    7142:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    7144:	89 81       	ldd	r24, Y+1	; 0x01
    7146:	9a 81       	ldd	r25, Y+2	; 0x02
    7148:	4b 81       	ldd	r20, Y+3	; 0x03
    714a:	68 ed       	ldi	r22, 0xD8	; 216
    714c:	0e 94 f6 58 	call	0xb1ec	; 0xb1ec <protected_write_io>
}
    7150:	00 00       	nop
    7152:	23 96       	adiw	r28, 0x03	; 3
    7154:	cd bf       	out	0x3d, r28	; 61
    7156:	de bf       	out	0x3e, r29	; 62
    7158:	df 91       	pop	r29
    715a:	cf 91       	pop	r28
    715c:	08 95       	ret

0000715e <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    715e:	cf 93       	push	r28
    7160:	df 93       	push	r29
    7162:	cd b7       	in	r28, 0x3d	; 61
    7164:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    7166:	64 e2       	ldi	r22, 0x24	; 36
    7168:	88 e6       	ldi	r24, 0x68	; 104
    716a:	90 e0       	ldi	r25, 0x00	; 0
    716c:	0e 94 99 38 	call	0x7132	; 0x7132 <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    7170:	80 e0       	ldi	r24, 0x00	; 0
}
    7172:	df 91       	pop	r29
    7174:	cf 91       	pop	r28
    7176:	08 95       	ret

00007178 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    7178:	cf 93       	push	r28
    717a:	df 93       	push	r29
    717c:	cd b7       	in	r28, 0x3d	; 61
    717e:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    7180:	78 94       	sei

	return 0;
    7182:	80 e0       	ldi	r24, 0x00	; 0
}
    7184:	df 91       	pop	r29
    7186:	cf 91       	pop	r28
    7188:	08 95       	ret

0000718a <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    718a:	cf 93       	push	r28
    718c:	df 93       	push	r29
    718e:	cd b7       	in	r28, 0x3d	; 61
    7190:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    7192:	80 ea       	ldi	r24, 0xA0	; 160
    7194:	90 e0       	ldi	r25, 0x00	; 0
    7196:	23 e0       	ldi	r18, 0x03	; 3
    7198:	fc 01       	movw	r30, r24
    719a:	22 83       	std	Z+2, r18	; 0x02
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    719c:	6a e0       	ldi	r22, 0x0A	; 10
    719e:	70 e0       	ldi	r23, 0x00	; 0
    71a0:	80 e0       	ldi	r24, 0x00	; 0
    71a2:	90 e0       	ldi	r25, 0x00	; 0
    71a4:	0e 94 c3 68 	call	0xd186	; 0xd186 <util_delay_ms>
    71a8:	88 23       	and	r24, r24
    71aa:	09 f0       	breq	.+2      	; 0x71ae <_ZL9VREF_initv+0x24>
    71ac:	f7 cf       	rjmp	.-18     	; 0x719c <_ZL9VREF_initv+0x12>
}
    71ae:	00 00       	nop
    71b0:	df 91       	pop	r29
    71b2:	cf 91       	pop	r28
    71b4:	08 95       	ret

000071b6 <_Z9DAC0_initv>:

void DAC0_init(void)
{
    71b6:	cf 93       	push	r28
    71b8:	df 93       	push	r29
    71ba:	cd b7       	in	r28, 0x3d	; 61
    71bc:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    71be:	0e 94 c5 38 	call	0x718a	; 0x718a <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    71c2:	80 e6       	ldi	r24, 0x60	; 96
    71c4:	94 e0       	ldi	r25, 0x04	; 4
    71c6:	20 e6       	ldi	r18, 0x60	; 96
    71c8:	34 e0       	ldi	r19, 0x04	; 4
    71ca:	f9 01       	movw	r30, r18
    71cc:	26 89       	ldd	r18, Z+22	; 0x16
    71ce:	28 7f       	andi	r18, 0xF8	; 248
    71d0:	fc 01       	movw	r30, r24
    71d2:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    71d4:	80 e6       	ldi	r24, 0x60	; 96
    71d6:	94 e0       	ldi	r25, 0x04	; 4
    71d8:	20 e6       	ldi	r18, 0x60	; 96
    71da:	34 e0       	ldi	r19, 0x04	; 4
    71dc:	f9 01       	movw	r30, r18
    71de:	26 89       	ldd	r18, Z+22	; 0x16
    71e0:	24 60       	ori	r18, 0x04	; 4
    71e2:	fc 01       	movw	r30, r24
    71e4:	26 8b       	std	Z+22, r18	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    71e6:	80 e6       	ldi	r24, 0x60	; 96
    71e8:	94 e0       	ldi	r25, 0x04	; 4
    71ea:	20 e6       	ldi	r18, 0x60	; 96
    71ec:	34 e0       	ldi	r19, 0x04	; 4
    71ee:	f9 01       	movw	r30, r18
    71f0:	26 89       	ldd	r18, Z+22	; 0x16
    71f2:	27 7f       	andi	r18, 0xF7	; 247
    71f4:	fc 01       	movw	r30, r24
    71f6:	26 8b       	std	Z+22, r18	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    71f8:	80 ea       	ldi	r24, 0xA0	; 160
    71fa:	96 e0       	ldi	r25, 0x06	; 6
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    71fc:	21 ec       	ldi	r18, 0xC1	; 193
    71fe:	fc 01       	movw	r30, r24
    7200:	20 83       	st	Z, r18
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    7202:	80 e0       	ldi	r24, 0x00	; 0
    7204:	90 e0       	ldi	r25, 0x00	; 0
    7206:	0e 94 09 39 	call	0x7212	; 0x7212 <_Z11DAC0_setValj>
}
    720a:	00 00       	nop
    720c:	df 91       	pop	r29
    720e:	cf 91       	pop	r28
    7210:	08 95       	ret

00007212 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    7212:	cf 93       	push	r28
    7214:	df 93       	push	r29
    7216:	00 d0       	rcall	.+0      	; 0x7218 <_Z11DAC0_setValj+0x6>
    7218:	cd b7       	in	r28, 0x3d	; 61
    721a:	de b7       	in	r29, 0x3e	; 62
    721c:	89 83       	std	Y+1, r24	; 0x01
    721e:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    7220:	80 ea       	ldi	r24, 0xA0	; 160
    7222:	96 e0       	ldi	r25, 0x06	; 6
    7224:	29 81       	ldd	r18, Y+1	; 0x01
    7226:	22 95       	swap	r18
    7228:	22 0f       	add	r18, r18
    722a:	22 0f       	add	r18, r18
    722c:	20 7c       	andi	r18, 0xC0	; 192
    722e:	fc 01       	movw	r30, r24
    7230:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    7232:	80 ea       	ldi	r24, 0xA0	; 160
    7234:	96 e0       	ldi	r25, 0x06	; 6
    7236:	29 81       	ldd	r18, Y+1	; 0x01
    7238:	3a 81       	ldd	r19, Y+2	; 0x02
    723a:	36 95       	lsr	r19
    723c:	27 95       	ror	r18
    723e:	36 95       	lsr	r19
    7240:	27 95       	ror	r18
    7242:	fc 01       	movw	r30, r24
    7244:	23 83       	std	Z+3, r18	; 0x03
}
    7246:	00 00       	nop
    7248:	0f 90       	pop	r0
    724a:	0f 90       	pop	r0
    724c:	df 91       	pop	r29
    724e:	cf 91       	pop	r28
    7250:	08 95       	ret

00007252 <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    7252:	cf 93       	push	r28
    7254:	df 93       	push	r29
    7256:	00 d0       	rcall	.+0      	; 0x7258 <PORTC_set_pin_dir+0x6>
    7258:	cd b7       	in	r28, 0x3d	; 61
    725a:	de b7       	in	r29, 0x3e	; 62
    725c:	89 83       	std	Y+1, r24	; 0x01
    725e:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    7260:	8a 81       	ldd	r24, Y+2	; 0x02
    7262:	88 2f       	mov	r24, r24
    7264:	90 e0       	ldi	r25, 0x00	; 0
    7266:	81 30       	cpi	r24, 0x01	; 1
    7268:	91 05       	cpc	r25, r1
    726a:	e1 f0       	breq	.+56     	; 0x72a4 <PORTC_set_pin_dir+0x52>
    726c:	82 30       	cpi	r24, 0x02	; 2
    726e:	91 05       	cpc	r25, r1
    7270:	71 f1       	breq	.+92     	; 0x72ce <PORTC_set_pin_dir+0x7c>
    7272:	89 2b       	or	r24, r25
    7274:	09 f0       	breq	.+2      	; 0x7278 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    7276:	3b c0       	rjmp	.+118    	; 0x72ee <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7278:	88 e0       	ldi	r24, 0x08	; 8
    727a:	90 e0       	ldi	r25, 0x00	; 0
    727c:	28 e0       	ldi	r18, 0x08	; 8
    727e:	30 e0       	ldi	r19, 0x00	; 0
    7280:	f9 01       	movw	r30, r18
    7282:	20 81       	ld	r18, Z
    7284:	62 2f       	mov	r22, r18
    7286:	29 81       	ldd	r18, Y+1	; 0x01
    7288:	42 2f       	mov	r20, r18
    728a:	50 e0       	ldi	r21, 0x00	; 0
    728c:	21 e0       	ldi	r18, 0x01	; 1
    728e:	30 e0       	ldi	r19, 0x00	; 0
    7290:	02 c0       	rjmp	.+4      	; 0x7296 <PORTC_set_pin_dir+0x44>
    7292:	22 0f       	add	r18, r18
    7294:	33 1f       	adc	r19, r19
    7296:	4a 95       	dec	r20
    7298:	e2 f7       	brpl	.-8      	; 0x7292 <PORTC_set_pin_dir+0x40>
    729a:	20 95       	com	r18
    729c:	26 23       	and	r18, r22
    729e:	fc 01       	movw	r30, r24
    72a0:	20 83       	st	Z, r18
		break;
    72a2:	25 c0       	rjmp	.+74     	; 0x72ee <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    72a4:	88 e0       	ldi	r24, 0x08	; 8
    72a6:	90 e0       	ldi	r25, 0x00	; 0
    72a8:	28 e0       	ldi	r18, 0x08	; 8
    72aa:	30 e0       	ldi	r19, 0x00	; 0
    72ac:	f9 01       	movw	r30, r18
    72ae:	20 81       	ld	r18, Z
    72b0:	62 2f       	mov	r22, r18
    72b2:	29 81       	ldd	r18, Y+1	; 0x01
    72b4:	42 2f       	mov	r20, r18
    72b6:	50 e0       	ldi	r21, 0x00	; 0
    72b8:	21 e0       	ldi	r18, 0x01	; 1
    72ba:	30 e0       	ldi	r19, 0x00	; 0
    72bc:	02 c0       	rjmp	.+4      	; 0x72c2 <PORTC_set_pin_dir+0x70>
    72be:	22 0f       	add	r18, r18
    72c0:	33 1f       	adc	r19, r19
    72c2:	4a 95       	dec	r20
    72c4:	e2 f7       	brpl	.-8      	; 0x72be <PORTC_set_pin_dir+0x6c>
    72c6:	26 2b       	or	r18, r22
    72c8:	fc 01       	movw	r30, r24
    72ca:	20 83       	st	Z, r18
		break;
    72cc:	10 c0       	rjmp	.+32     	; 0x72ee <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    72ce:	89 81       	ldd	r24, Y+1	; 0x01
    72d0:	88 2f       	mov	r24, r24
    72d2:	90 e0       	ldi	r25, 0x00	; 0
    72d4:	80 5b       	subi	r24, 0xB0	; 176
    72d6:	9b 4f       	sbci	r25, 0xFB	; 251
    72d8:	29 81       	ldd	r18, Y+1	; 0x01
    72da:	22 2f       	mov	r18, r18
    72dc:	30 e0       	ldi	r19, 0x00	; 0
    72de:	20 5b       	subi	r18, 0xB0	; 176
    72e0:	3b 4f       	sbci	r19, 0xFB	; 251
    72e2:	f9 01       	movw	r30, r18
    72e4:	20 81       	ld	r18, Z
    72e6:	28 60       	ori	r18, 0x08	; 8
    72e8:	fc 01       	movw	r30, r24
    72ea:	20 83       	st	Z, r18
		break;
    72ec:	00 00       	nop
	default:
		break;
	}
}
    72ee:	00 00       	nop
    72f0:	0f 90       	pop	r0
    72f2:	0f 90       	pop	r0
    72f4:	df 91       	pop	r29
    72f6:	cf 91       	pop	r28
    72f8:	08 95       	ret

000072fa <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    72fa:	cf 93       	push	r28
    72fc:	df 93       	push	r29
    72fe:	00 d0       	rcall	.+0      	; 0x7300 <PORTC_set_pin_level+0x6>
    7300:	cd b7       	in	r28, 0x3d	; 61
    7302:	de b7       	in	r29, 0x3e	; 62
    7304:	89 83       	std	Y+1, r24	; 0x01
    7306:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    7308:	8a 81       	ldd	r24, Y+2	; 0x02
    730a:	88 23       	and	r24, r24
    730c:	a9 f0       	breq	.+42     	; 0x7338 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    730e:	88 e0       	ldi	r24, 0x08	; 8
    7310:	90 e0       	ldi	r25, 0x00	; 0
    7312:	28 e0       	ldi	r18, 0x08	; 8
    7314:	30 e0       	ldi	r19, 0x00	; 0
    7316:	f9 01       	movw	r30, r18
    7318:	21 81       	ldd	r18, Z+1	; 0x01
    731a:	62 2f       	mov	r22, r18
    731c:	29 81       	ldd	r18, Y+1	; 0x01
    731e:	42 2f       	mov	r20, r18
    7320:	50 e0       	ldi	r21, 0x00	; 0
    7322:	21 e0       	ldi	r18, 0x01	; 1
    7324:	30 e0       	ldi	r19, 0x00	; 0
    7326:	02 c0       	rjmp	.+4      	; 0x732c <PORTC_set_pin_level+0x32>
    7328:	22 0f       	add	r18, r18
    732a:	33 1f       	adc	r19, r19
    732c:	4a 95       	dec	r20
    732e:	e2 f7       	brpl	.-8      	; 0x7328 <PORTC_set_pin_level+0x2e>
    7330:	26 2b       	or	r18, r22
    7332:	fc 01       	movw	r30, r24
    7334:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    7336:	15 c0       	rjmp	.+42     	; 0x7362 <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    7338:	88 e0       	ldi	r24, 0x08	; 8
    733a:	90 e0       	ldi	r25, 0x00	; 0
    733c:	28 e0       	ldi	r18, 0x08	; 8
    733e:	30 e0       	ldi	r19, 0x00	; 0
    7340:	f9 01       	movw	r30, r18
    7342:	21 81       	ldd	r18, Z+1	; 0x01
    7344:	62 2f       	mov	r22, r18
    7346:	29 81       	ldd	r18, Y+1	; 0x01
    7348:	42 2f       	mov	r20, r18
    734a:	50 e0       	ldi	r21, 0x00	; 0
    734c:	21 e0       	ldi	r18, 0x01	; 1
    734e:	30 e0       	ldi	r19, 0x00	; 0
    7350:	02 c0       	rjmp	.+4      	; 0x7356 <PORTC_set_pin_level+0x5c>
    7352:	22 0f       	add	r18, r18
    7354:	33 1f       	adc	r19, r19
    7356:	4a 95       	dec	r20
    7358:	e2 f7       	brpl	.-8      	; 0x7352 <PORTC_set_pin_level+0x58>
    735a:	20 95       	com	r18
    735c:	26 23       	and	r18, r22
    735e:	fc 01       	movw	r30, r24
    7360:	21 83       	std	Z+1, r18	; 0x01
	}
}
    7362:	00 00       	nop
    7364:	0f 90       	pop	r0
    7366:	0f 90       	pop	r0
    7368:	df 91       	pop	r29
    736a:	cf 91       	pop	r28
    736c:	08 95       	ret

0000736e <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    736e:	cf 93       	push	r28
    7370:	df 93       	push	r29
    7372:	1f 92       	push	r1
    7374:	cd b7       	in	r28, 0x3d	; 61
    7376:	de b7       	in	r29, 0x3e	; 62
    7378:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    737a:	69 81       	ldd	r22, Y+1	; 0x01
    737c:	86 e0       	ldi	r24, 0x06	; 6
    737e:	0e 94 29 39 	call	0x7252	; 0x7252 <PORTC_set_pin_dir>
}
    7382:	00 00       	nop
    7384:	0f 90       	pop	r0
    7386:	df 91       	pop	r29
    7388:	cf 91       	pop	r28
    738a:	08 95       	ret

0000738c <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    738c:	cf 93       	push	r28
    738e:	df 93       	push	r29
    7390:	1f 92       	push	r1
    7392:	cd b7       	in	r28, 0x3d	; 61
    7394:	de b7       	in	r29, 0x3e	; 62
    7396:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    7398:	69 81       	ldd	r22, Y+1	; 0x01
    739a:	85 e0       	ldi	r24, 0x05	; 5
    739c:	0e 94 29 39 	call	0x7252	; 0x7252 <PORTC_set_pin_dir>
}
    73a0:	00 00       	nop
    73a2:	0f 90       	pop	r0
    73a4:	df 91       	pop	r29
    73a6:	cf 91       	pop	r28
    73a8:	08 95       	ret

000073aa <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    73aa:	cf 93       	push	r28
    73ac:	df 93       	push	r29
    73ae:	1f 92       	push	r1
    73b0:	cd b7       	in	r28, 0x3d	; 61
    73b2:	de b7       	in	r29, 0x3e	; 62
    73b4:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    73b6:	69 81       	ldd	r22, Y+1	; 0x01
    73b8:	86 e0       	ldi	r24, 0x06	; 6
    73ba:	0e 94 7d 39 	call	0x72fa	; 0x72fa <PORTC_set_pin_level>
}
    73be:	00 00       	nop
    73c0:	0f 90       	pop	r0
    73c2:	df 91       	pop	r29
    73c4:	cf 91       	pop	r28
    73c6:	08 95       	ret

000073c8 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    73c8:	cf 93       	push	r28
    73ca:	df 93       	push	r29
    73cc:	1f 92       	push	r1
    73ce:	cd b7       	in	r28, 0x3d	; 61
    73d0:	de b7       	in	r29, 0x3e	; 62
    73d2:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    73d4:	69 81       	ldd	r22, Y+1	; 0x01
    73d6:	85 e0       	ldi	r24, 0x05	; 5
    73d8:	0e 94 7d 39 	call	0x72fa	; 0x72fa <PORTC_set_pin_level>
}
    73dc:	00 00       	nop
    73de:	0f 90       	pop	r0
    73e0:	df 91       	pop	r29
    73e2:	cf 91       	pop	r28
    73e4:	08 95       	ret

000073e6 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    73e6:	cf 93       	push	r28
    73e8:	df 93       	push	r29
    73ea:	cd b7       	in	r28, 0x3d	; 61
    73ec:	de b7       	in	r29, 0x3e	; 62
    73ee:	26 97       	sbiw	r28, 0x06	; 6
    73f0:	cd bf       	out	0x3d, r28	; 61
    73f2:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    73f4:	19 82       	std	Y+1, r1	; 0x01
    73f6:	89 81       	ldd	r24, Y+1	; 0x01
    73f8:	88 30       	cpi	r24, 0x08	; 8
    73fa:	98 f4       	brcc	.+38     	; 0x7422 <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    73fc:	89 81       	ldd	r24, Y+1	; 0x01
    73fe:	88 2f       	mov	r24, r24
    7400:	90 e0       	ldi	r25, 0x00	; 0
    7402:	80 5f       	subi	r24, 0xF0	; 240
    7404:	9b 4f       	sbci	r25, 0xFB	; 251
    7406:	29 81       	ldd	r18, Y+1	; 0x01
    7408:	22 2f       	mov	r18, r18
    740a:	30 e0       	ldi	r19, 0x00	; 0
    740c:	20 5f       	subi	r18, 0xF0	; 240
    740e:	3b 4f       	sbci	r19, 0xFB	; 251
    7410:	f9 01       	movw	r30, r18
    7412:	20 81       	ld	r18, Z
    7414:	28 60       	ori	r18, 0x08	; 8
    7416:	fc 01       	movw	r30, r24
    7418:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    741a:	89 81       	ldd	r24, Y+1	; 0x01
    741c:	8f 5f       	subi	r24, 0xFF	; 255
    741e:	89 83       	std	Y+1, r24	; 0x01
    7420:	ea cf       	rjmp	.-44     	; 0x73f6 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7422:	1a 82       	std	Y+2, r1	; 0x02
    7424:	8a 81       	ldd	r24, Y+2	; 0x02
    7426:	88 30       	cpi	r24, 0x08	; 8
    7428:	98 f4       	brcc	.+38     	; 0x7450 <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    742a:	8a 81       	ldd	r24, Y+2	; 0x02
    742c:	88 2f       	mov	r24, r24
    742e:	90 e0       	ldi	r25, 0x00	; 0
    7430:	80 5d       	subi	r24, 0xD0	; 208
    7432:	9b 4f       	sbci	r25, 0xFB	; 251
    7434:	2a 81       	ldd	r18, Y+2	; 0x02
    7436:	22 2f       	mov	r18, r18
    7438:	30 e0       	ldi	r19, 0x00	; 0
    743a:	20 5d       	subi	r18, 0xD0	; 208
    743c:	3b 4f       	sbci	r19, 0xFB	; 251
    743e:	f9 01       	movw	r30, r18
    7440:	20 81       	ld	r18, Z
    7442:	28 60       	ori	r18, 0x08	; 8
    7444:	fc 01       	movw	r30, r24
    7446:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7448:	8a 81       	ldd	r24, Y+2	; 0x02
    744a:	8f 5f       	subi	r24, 0xFF	; 255
    744c:	8a 83       	std	Y+2, r24	; 0x02
    744e:	ea cf       	rjmp	.-44     	; 0x7424 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7450:	1b 82       	std	Y+3, r1	; 0x03
    7452:	8b 81       	ldd	r24, Y+3	; 0x03
    7454:	88 30       	cpi	r24, 0x08	; 8
    7456:	98 f4       	brcc	.+38     	; 0x747e <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7458:	8b 81       	ldd	r24, Y+3	; 0x03
    745a:	88 2f       	mov	r24, r24
    745c:	90 e0       	ldi	r25, 0x00	; 0
    745e:	80 5b       	subi	r24, 0xB0	; 176
    7460:	9b 4f       	sbci	r25, 0xFB	; 251
    7462:	2b 81       	ldd	r18, Y+3	; 0x03
    7464:	22 2f       	mov	r18, r18
    7466:	30 e0       	ldi	r19, 0x00	; 0
    7468:	20 5b       	subi	r18, 0xB0	; 176
    746a:	3b 4f       	sbci	r19, 0xFB	; 251
    746c:	f9 01       	movw	r30, r18
    746e:	20 81       	ld	r18, Z
    7470:	28 60       	ori	r18, 0x08	; 8
    7472:	fc 01       	movw	r30, r24
    7474:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7476:	8b 81       	ldd	r24, Y+3	; 0x03
    7478:	8f 5f       	subi	r24, 0xFF	; 255
    747a:	8b 83       	std	Y+3, r24	; 0x03
    747c:	ea cf       	rjmp	.-44     	; 0x7452 <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    747e:	1c 82       	std	Y+4, r1	; 0x04
    7480:	8c 81       	ldd	r24, Y+4	; 0x04
    7482:	88 30       	cpi	r24, 0x08	; 8
    7484:	98 f4       	brcc	.+38     	; 0x74ac <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7486:	8c 81       	ldd	r24, Y+4	; 0x04
    7488:	88 2f       	mov	r24, r24
    748a:	90 e0       	ldi	r25, 0x00	; 0
    748c:	80 59       	subi	r24, 0x90	; 144
    748e:	9b 4f       	sbci	r25, 0xFB	; 251
    7490:	2c 81       	ldd	r18, Y+4	; 0x04
    7492:	22 2f       	mov	r18, r18
    7494:	30 e0       	ldi	r19, 0x00	; 0
    7496:	20 59       	subi	r18, 0x90	; 144
    7498:	3b 4f       	sbci	r19, 0xFB	; 251
    749a:	f9 01       	movw	r30, r18
    749c:	20 81       	ld	r18, Z
    749e:	28 60       	ori	r18, 0x08	; 8
    74a0:	fc 01       	movw	r30, r24
    74a2:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    74a4:	8c 81       	ldd	r24, Y+4	; 0x04
    74a6:	8f 5f       	subi	r24, 0xFF	; 255
    74a8:	8c 83       	std	Y+4, r24	; 0x04
    74aa:	ea cf       	rjmp	.-44     	; 0x7480 <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    74ac:	1d 82       	std	Y+5, r1	; 0x05
    74ae:	8d 81       	ldd	r24, Y+5	; 0x05
    74b0:	88 30       	cpi	r24, 0x08	; 8
    74b2:	98 f4       	brcc	.+38     	; 0x74da <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    74b4:	8d 81       	ldd	r24, Y+5	; 0x05
    74b6:	88 2f       	mov	r24, r24
    74b8:	90 e0       	ldi	r25, 0x00	; 0
    74ba:	80 57       	subi	r24, 0x70	; 112
    74bc:	9b 4f       	sbci	r25, 0xFB	; 251
    74be:	2d 81       	ldd	r18, Y+5	; 0x05
    74c0:	22 2f       	mov	r18, r18
    74c2:	30 e0       	ldi	r19, 0x00	; 0
    74c4:	20 57       	subi	r18, 0x70	; 112
    74c6:	3b 4f       	sbci	r19, 0xFB	; 251
    74c8:	f9 01       	movw	r30, r18
    74ca:	20 81       	ld	r18, Z
    74cc:	28 60       	ori	r18, 0x08	; 8
    74ce:	fc 01       	movw	r30, r24
    74d0:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    74d2:	8d 81       	ldd	r24, Y+5	; 0x05
    74d4:	8f 5f       	subi	r24, 0xFF	; 255
    74d6:	8d 83       	std	Y+5, r24	; 0x05
    74d8:	ea cf       	rjmp	.-44     	; 0x74ae <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    74da:	1e 82       	std	Y+6, r1	; 0x06
    74dc:	8e 81       	ldd	r24, Y+6	; 0x06
    74de:	88 30       	cpi	r24, 0x08	; 8
    74e0:	98 f4       	brcc	.+38     	; 0x7508 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    74e2:	8e 81       	ldd	r24, Y+6	; 0x06
    74e4:	88 2f       	mov	r24, r24
    74e6:	90 e0       	ldi	r25, 0x00	; 0
    74e8:	80 55       	subi	r24, 0x50	; 80
    74ea:	9b 4f       	sbci	r25, 0xFB	; 251
    74ec:	2e 81       	ldd	r18, Y+6	; 0x06
    74ee:	22 2f       	mov	r18, r18
    74f0:	30 e0       	ldi	r19, 0x00	; 0
    74f2:	20 55       	subi	r18, 0x50	; 80
    74f4:	3b 4f       	sbci	r19, 0xFB	; 251
    74f6:	f9 01       	movw	r30, r18
    74f8:	20 81       	ld	r18, Z
    74fa:	28 60       	ori	r18, 0x08	; 8
    74fc:	fc 01       	movw	r30, r24
    74fe:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7500:	8e 81       	ldd	r24, Y+6	; 0x06
    7502:	8f 5f       	subi	r24, 0xFF	; 255
    7504:	8e 83       	std	Y+6, r24	; 0x06
    7506:	ea cf       	rjmp	.-44     	; 0x74dc <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7508:	00 00       	nop
    750a:	26 96       	adiw	r28, 0x06	; 6
    750c:	cd bf       	out	0x3d, r28	; 61
    750e:	de bf       	out	0x3e, r29	; 62
    7510:	df 91       	pop	r29
    7512:	cf 91       	pop	r28
    7514:	08 95       	ret

00007516 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    7516:	cf 93       	push	r28
    7518:	df 93       	push	r29
    751a:	cd b7       	in	r28, 0x3d	; 61
    751c:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    751e:	0e 94 f3 39 	call	0x73e6	; 0x73e6 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    7522:	0e 94 af 38 	call	0x715e	; 0x715e <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    7526:	0e 94 79 68 	call	0xd0f2	; 0xd0f2 <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    752a:	0e 94 bc 38 	call	0x7178	; 0x7178 <CPUINT_init>
	BINIO_init();
    752e:	0e 94 cb 37 	call	0x6f96	; 0x6f96 <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    7532:	81 e0       	ldi	r24, 0x01	; 1
    7534:	0e 94 b7 39 	call	0x736e	; 0x736e <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7538:	80 e0       	ldi	r24, 0x00	; 0
    753a:	0e 94 d5 39 	call	0x73aa	; 0x73aa <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    753e:	81 e0       	ldi	r24, 0x01	; 1
    7540:	0e 94 c6 39 	call	0x738c	; 0x738c <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    7544:	80 e0       	ldi	r24, 0x00	; 0
    7546:	0e 94 e4 39 	call	0x73c8	; 0x73c8 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    754a:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <SLPCTRL_init>
	
	DAC0_init();
    754e:	0e 94 db 38 	call	0x71b6	; 0x71b6 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    7552:	41 e0       	ldi	r20, 0x01	; 1
    7554:	60 e8       	ldi	r22, 0x80	; 128
    7556:	75 e2       	ldi	r23, 0x25	; 37
    7558:	80 e0       	ldi	r24, 0x00	; 0
    755a:	90 e0       	ldi	r25, 0x00	; 0
    755c:	0e 94 02 54 	call	0xa804	; 0xa804 <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7560:	44 e0       	ldi	r20, 0x04	; 4
    7562:	60 e8       	ldi	r22, 0x80	; 128
    7564:	75 e2       	ldi	r23, 0x25	; 37
    7566:	80 e0       	ldi	r24, 0x00	; 0
    7568:	90 e0       	ldi	r25, 0x00	; 0
    756a:	0e 94 b5 5c 	call	0xb96a	; 0xb96a <serialbus_init>

	BOD_init();
    756e:	0e 94 8d 38 	call	0x711a	; 0x711a <BOD_init>
}
    7572:	00 00       	nop
    7574:	df 91       	pop	r29
    7576:	cf 91       	pop	r28
    7578:	08 95       	ret

0000757a <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    757a:	cf 93       	push	r28
    757c:	df 93       	push	r29
    757e:	cd b7       	in	r28, 0x3d	; 61
    7580:	de b7       	in	r29, 0x3e	; 62
    7582:	0e 94 1d 49 	call	0x923a	; 0x923a <I2C_0_Init>
    7586:	0e 94 3b 41 	call	0x8276	; 0x8276 <ds3231_responding>
    758a:	98 2f       	mov	r25, r24
    758c:	81 e0       	ldi	r24, 0x01	; 1
    758e:	89 27       	eor	r24, r25
    7590:	df 91       	pop	r29
    7592:	cf 91       	pop	r28
    7594:	08 95       	ret

00007596 <_Z7bcd2dech>:
    7596:	cf 93       	push	r28
    7598:	df 93       	push	r29
    759a:	00 d0       	rcall	.+0      	; 0x759c <_Z7bcd2dech+0x6>
    759c:	cd b7       	in	r28, 0x3d	; 61
    759e:	de b7       	in	r29, 0x3e	; 62
    75a0:	8a 83       	std	Y+2, r24	; 0x02
    75a2:	8a 81       	ldd	r24, Y+2	; 0x02
    75a4:	88 2f       	mov	r24, r24
    75a6:	90 e0       	ldi	r25, 0x00	; 0
    75a8:	95 95       	asr	r25
    75aa:	87 95       	ror	r24
    75ac:	95 95       	asr	r25
    75ae:	87 95       	ror	r24
    75b0:	95 95       	asr	r25
    75b2:	87 95       	ror	r24
    75b4:	95 95       	asr	r25
    75b6:	87 95       	ror	r24
    75b8:	88 0f       	add	r24, r24
    75ba:	98 2f       	mov	r25, r24
    75bc:	99 0f       	add	r25, r25
    75be:	99 0f       	add	r25, r25
    75c0:	98 0f       	add	r25, r24
    75c2:	8a 81       	ldd	r24, Y+2	; 0x02
    75c4:	8f 70       	andi	r24, 0x0F	; 15
    75c6:	89 0f       	add	r24, r25
    75c8:	89 83       	std	Y+1, r24	; 0x01
    75ca:	89 81       	ldd	r24, Y+1	; 0x01
    75cc:	0f 90       	pop	r0
    75ce:	0f 90       	pop	r0
    75d0:	df 91       	pop	r29
    75d2:	cf 91       	pop	r28
    75d4:	08 95       	ret

000075d6 <_Z7dec2bcdh>:
    75d6:	cf 93       	push	r28
    75d8:	df 93       	push	r29
    75da:	00 d0       	rcall	.+0      	; 0x75dc <_Z7dec2bcdh+0x6>
    75dc:	cd b7       	in	r28, 0x3d	; 61
    75de:	de b7       	in	r29, 0x3e	; 62
    75e0:	8a 83       	std	Y+2, r24	; 0x02
    75e2:	9a 81       	ldd	r25, Y+2	; 0x02
    75e4:	8d ec       	ldi	r24, 0xCD	; 205
    75e6:	98 9f       	mul	r25, r24
    75e8:	81 2d       	mov	r24, r1
    75ea:	11 24       	eor	r1, r1
    75ec:	86 95       	lsr	r24
    75ee:	86 95       	lsr	r24
    75f0:	86 95       	lsr	r24
    75f2:	88 0f       	add	r24, r24
    75f4:	28 2f       	mov	r18, r24
    75f6:	22 0f       	add	r18, r18
    75f8:	22 0f       	add	r18, r18
    75fa:	82 0f       	add	r24, r18
    75fc:	29 2f       	mov	r18, r25
    75fe:	28 1b       	sub	r18, r24
    7600:	82 2f       	mov	r24, r18
    7602:	89 83       	std	Y+1, r24	; 0x01
    7604:	9a 81       	ldd	r25, Y+2	; 0x02
    7606:	8d ec       	ldi	r24, 0xCD	; 205
    7608:	98 9f       	mul	r25, r24
    760a:	81 2d       	mov	r24, r1
    760c:	11 24       	eor	r1, r1
    760e:	86 95       	lsr	r24
    7610:	86 95       	lsr	r24
    7612:	86 95       	lsr	r24
    7614:	88 2f       	mov	r24, r24
    7616:	90 e0       	ldi	r25, 0x00	; 0
    7618:	82 95       	swap	r24
    761a:	92 95       	swap	r25
    761c:	90 7f       	andi	r25, 0xF0	; 240
    761e:	98 27       	eor	r25, r24
    7620:	80 7f       	andi	r24, 0xF0	; 240
    7622:	98 27       	eor	r25, r24
    7624:	98 2f       	mov	r25, r24
    7626:	89 81       	ldd	r24, Y+1	; 0x01
    7628:	89 2b       	or	r24, r25
    762a:	89 83       	std	Y+1, r24	; 0x01
    762c:	89 81       	ldd	r24, Y+1	; 0x01
    762e:	0f 90       	pop	r0
    7630:	0f 90       	pop	r0
    7632:	df 91       	pop	r29
    7634:	cf 91       	pop	r28
    7636:	08 95       	ret

00007638 <_Z8char2bcdPc>:
    7638:	cf 93       	push	r28
    763a:	df 93       	push	r29
    763c:	00 d0       	rcall	.+0      	; 0x763e <_Z8char2bcdPc+0x6>
    763e:	1f 92       	push	r1
    7640:	cd b7       	in	r28, 0x3d	; 61
    7642:	de b7       	in	r29, 0x3e	; 62
    7644:	8a 83       	std	Y+2, r24	; 0x02
    7646:	9b 83       	std	Y+3, r25	; 0x03
    7648:	8a 81       	ldd	r24, Y+2	; 0x02
    764a:	9b 81       	ldd	r25, Y+3	; 0x03
    764c:	01 96       	adiw	r24, 0x01	; 1
    764e:	fc 01       	movw	r30, r24
    7650:	20 81       	ld	r18, Z
    7652:	8a 81       	ldd	r24, Y+2	; 0x02
    7654:	9b 81       	ldd	r25, Y+3	; 0x03
    7656:	fc 01       	movw	r30, r24
    7658:	80 81       	ld	r24, Z
    765a:	80 53       	subi	r24, 0x30	; 48
    765c:	82 95       	swap	r24
    765e:	80 7f       	andi	r24, 0xF0	; 240
    7660:	82 0f       	add	r24, r18
    7662:	80 53       	subi	r24, 0x30	; 48
    7664:	89 83       	std	Y+1, r24	; 0x01
    7666:	89 81       	ldd	r24, Y+1	; 0x01
    7668:	23 96       	adiw	r28, 0x03	; 3
    766a:	cd bf       	out	0x3d, r28	; 61
    766c:	de bf       	out	0x3e, r29	; 62
    766e:	df 91       	pop	r29
    7670:	cf 91       	pop	r28
    7672:	08 95       	ret

00007674 <RTC_String2Epoch>:
    7674:	cf 93       	push	r28
    7676:	df 93       	push	r29
    7678:	cd b7       	in	r28, 0x3d	; 61
    767a:	de b7       	in	r29, 0x3e	; 62
    767c:	a3 97       	sbiw	r28, 0x23	; 35
    767e:	cd bf       	out	0x3d, r28	; 61
    7680:	de bf       	out	0x3e, r29	; 62
    7682:	88 a3       	std	Y+32, r24	; 0x20
    7684:	99 a3       	std	Y+33, r25	; 0x21
    7686:	6a a3       	std	Y+34, r22	; 0x22
    7688:	7b a3       	std	Y+35, r23	; 0x23
    768a:	19 82       	std	Y+1, r1	; 0x01
    768c:	1a 82       	std	Y+2, r1	; 0x02
    768e:	1b 82       	std	Y+3, r1	; 0x03
    7690:	1c 82       	std	Y+4, r1	; 0x04
    7692:	27 e0       	ldi	r18, 0x07	; 7
    7694:	ce 01       	movw	r24, r28
    7696:	0d 96       	adiw	r24, 0x0d	; 13
    7698:	fc 01       	movw	r30, r24
    769a:	32 2f       	mov	r19, r18
    769c:	11 92       	st	Z+, r1
    769e:	3a 95       	dec	r19
    76a0:	e9 f7       	brne	.-6      	; 0x769c <RTC_String2Epoch+0x28>
    76a2:	2c e0       	ldi	r18, 0x0C	; 12
    76a4:	ce 01       	movw	r24, r28
    76a6:	44 96       	adiw	r24, 0x14	; 20
    76a8:	fc 01       	movw	r30, r24
    76aa:	32 2f       	mov	r19, r18
    76ac:	11 92       	st	Z+, r1
    76ae:	3a 95       	dec	r19
    76b0:	e9 f7       	brne	.-6      	; 0x76ac <RTC_String2Epoch+0x38>
    76b2:	84 e6       	ldi	r24, 0x64	; 100
    76b4:	90 e0       	ldi	r25, 0x00	; 0
    76b6:	8e 83       	std	Y+6, r24	; 0x06
    76b8:	9f 83       	std	Y+7, r25	; 0x07
    76ba:	8a a1       	ldd	r24, Y+34	; 0x22
    76bc:	9b a1       	ldd	r25, Y+35	; 0x23
    76be:	89 2b       	or	r24, r25
    76c0:	09 f4       	brne	.+2      	; 0x76c4 <RTC_String2Epoch+0x50>
    76c2:	86 c0       	rjmp	.+268    	; 0x77d0 <RTC_String2Epoch+0x15c>
    76c4:	8a a1       	ldd	r24, Y+34	; 0x22
    76c6:	9b a1       	ldd	r25, Y+35	; 0x23
    76c8:	0a 96       	adiw	r24, 0x0a	; 10
    76ca:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    76ce:	8d 87       	std	Y+13, r24	; 0x0d
    76d0:	8a a1       	ldd	r24, Y+34	; 0x22
    76d2:	9b a1       	ldd	r25, Y+35	; 0x23
    76d4:	08 96       	adiw	r24, 0x08	; 8
    76d6:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    76da:	8e 87       	std	Y+14, r24	; 0x0e
    76dc:	8a a1       	ldd	r24, Y+34	; 0x22
    76de:	9b a1       	ldd	r25, Y+35	; 0x23
    76e0:	06 96       	adiw	r24, 0x06	; 6
    76e2:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    76e6:	8f 87       	std	Y+15, r24	; 0x0f
    76e8:	8a a1       	ldd	r24, Y+34	; 0x22
    76ea:	9b a1       	ldd	r25, Y+35	; 0x23
    76ec:	04 96       	adiw	r24, 0x04	; 4
    76ee:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    76f2:	89 8b       	std	Y+17, r24	; 0x11
    76f4:	8a a1       	ldd	r24, Y+34	; 0x22
    76f6:	9b a1       	ldd	r25, Y+35	; 0x23
    76f8:	02 96       	adiw	r24, 0x02	; 2
    76fa:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    76fe:	8a 8b       	std	Y+18, r24	; 0x12
    7700:	8a a1       	ldd	r24, Y+34	; 0x22
    7702:	9b a1       	ldd	r25, Y+35	; 0x23
    7704:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7708:	8b 8b       	std	Y+19, r24	; 0x13
    770a:	8f 85       	ldd	r24, Y+15	; 0x0f
    770c:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    7710:	88 87       	std	Y+8, r24	; 0x08
    7712:	8b 89       	ldd	r24, Y+19	; 0x13
    7714:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    7718:	88 2f       	mov	r24, r24
    771a:	90 e0       	ldi	r25, 0x00	; 0
    771c:	2e 81       	ldd	r18, Y+6	; 0x06
    771e:	3f 81       	ldd	r19, Y+7	; 0x07
    7720:	82 0f       	add	r24, r18
    7722:	93 1f       	adc	r25, r19
    7724:	8e 83       	std	Y+6, r24	; 0x06
    7726:	9f 83       	std	Y+7, r25	; 0x07
    7728:	8e 81       	ldd	r24, Y+6	; 0x06
    772a:	9f 81       	ldd	r25, Y+7	; 0x07
    772c:	8a 8f       	std	Y+26, r24	; 0x1a
    772e:	9b 8f       	std	Y+27, r25	; 0x1b
    7730:	8e 81       	ldd	r24, Y+6	; 0x06
    7732:	9f 81       	ldd	r25, Y+7	; 0x07
    7734:	84 59       	subi	r24, 0x94	; 148
    7736:	98 4f       	sbci	r25, 0xF8	; 248
    7738:	8e 83       	std	Y+6, r24	; 0x06
    773a:	9f 83       	std	Y+7, r25	; 0x07
    773c:	8a 89       	ldd	r24, Y+18	; 0x12
    773e:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    7742:	89 87       	std	Y+9, r24	; 0x09
    7744:	89 85       	ldd	r24, Y+9	; 0x09
    7746:	81 50       	subi	r24, 0x01	; 1
    7748:	89 8f       	std	Y+25, r24	; 0x19
    774a:	89 89       	ldd	r24, Y+17	; 0x11
    774c:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    7750:	8a 87       	std	Y+10, r24	; 0x0a
    7752:	8a 85       	ldd	r24, Y+10	; 0x0a
    7754:	8f 8b       	std	Y+23, r24	; 0x17
    7756:	1c 8e       	std	Y+28, r1	; 0x1c
    7758:	1d 8e       	std	Y+29, r1	; 0x1d
    775a:	81 e0       	ldi	r24, 0x01	; 1
    775c:	8d 83       	std	Y+5, r24	; 0x05
    775e:	9d 81       	ldd	r25, Y+5	; 0x05
    7760:	89 85       	ldd	r24, Y+9	; 0x09
    7762:	98 17       	cp	r25, r24
    7764:	88 f4       	brcc	.+34     	; 0x7788 <RTC_String2Epoch+0x114>
    7766:	8e 81       	ldd	r24, Y+6	; 0x06
    7768:	9f 81       	ldd	r25, Y+7	; 0x07
    776a:	6d 81       	ldd	r22, Y+5	; 0x05
    776c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <month_length>
    7770:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7772:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7774:	88 2f       	mov	r24, r24
    7776:	90 e0       	ldi	r25, 0x00	; 0
    7778:	82 0f       	add	r24, r18
    777a:	93 1f       	adc	r25, r19
    777c:	8c 8f       	std	Y+28, r24	; 0x1c
    777e:	9d 8f       	std	Y+29, r25	; 0x1d
    7780:	8d 81       	ldd	r24, Y+5	; 0x05
    7782:	8f 5f       	subi	r24, 0xFF	; 255
    7784:	8d 83       	std	Y+5, r24	; 0x05
    7786:	eb cf       	rjmp	.-42     	; 0x775e <RTC_String2Epoch+0xea>
    7788:	2c 8d       	ldd	r18, Y+28	; 0x1c
    778a:	3d 8d       	ldd	r19, Y+29	; 0x1d
    778c:	8f 89       	ldd	r24, Y+23	; 0x17
    778e:	08 2e       	mov	r0, r24
    7790:	00 0c       	add	r0, r0
    7792:	99 0b       	sbc	r25, r25
    7794:	01 97       	sbiw	r24, 0x01	; 1
    7796:	82 0f       	add	r24, r18
    7798:	93 1f       	adc	r25, r19
    779a:	8c 8f       	std	Y+28, r24	; 0x1c
    779c:	9d 8f       	std	Y+29, r25	; 0x1d
    779e:	8d 85       	ldd	r24, Y+13	; 0x0d
    77a0:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    77a4:	8b 87       	std	Y+11, r24	; 0x0b
    77a6:	8e 85       	ldd	r24, Y+14	; 0x0e
    77a8:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    77ac:	8c 87       	std	Y+12, r24	; 0x0c
    77ae:	88 85       	ldd	r24, Y+8	; 0x08
    77b0:	8e 8b       	std	Y+22, r24	; 0x16
    77b2:	8c 85       	ldd	r24, Y+12	; 0x0c
    77b4:	8d 8b       	std	Y+21, r24	; 0x15
    77b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    77b8:	8c 8b       	std	Y+20, r24	; 0x14
    77ba:	ce 01       	movw	r24, r28
    77bc:	44 96       	adiw	r24, 0x14	; 20
    77be:	0e 94 10 3c 	call	0x7820	; 0x7820 <_Z14epoch_from_ltmP2tm>
    77c2:	dc 01       	movw	r26, r24
    77c4:	cb 01       	movw	r24, r22
    77c6:	89 83       	std	Y+1, r24	; 0x01
    77c8:	9a 83       	std	Y+2, r25	; 0x02
    77ca:	ab 83       	std	Y+3, r26	; 0x03
    77cc:	bc 83       	std	Y+4, r27	; 0x04
    77ce:	0a c0       	rjmp	.+20     	; 0x77e4 <RTC_String2Epoch+0x170>
    77d0:	80 e0       	ldi	r24, 0x00	; 0
    77d2:	90 e0       	ldi	r25, 0x00	; 0
    77d4:	0e 94 ec 3c 	call	0x79d8	; 0x79d8 <ds3231_get_epoch>
    77d8:	dc 01       	movw	r26, r24
    77da:	cb 01       	movw	r24, r22
    77dc:	89 83       	std	Y+1, r24	; 0x01
    77de:	9a 83       	std	Y+2, r25	; 0x02
    77e0:	ab 83       	std	Y+3, r26	; 0x03
    77e2:	bc 83       	std	Y+4, r27	; 0x04
    77e4:	88 a1       	ldd	r24, Y+32	; 0x20
    77e6:	99 a1       	ldd	r25, Y+33	; 0x21
    77e8:	89 2b       	or	r24, r25
    77ea:	71 f0       	breq	.+28     	; 0x7808 <RTC_String2Epoch+0x194>
    77ec:	21 e0       	ldi	r18, 0x01	; 1
    77ee:	89 81       	ldd	r24, Y+1	; 0x01
    77f0:	9a 81       	ldd	r25, Y+2	; 0x02
    77f2:	ab 81       	ldd	r26, Y+3	; 0x03
    77f4:	bc 81       	ldd	r27, Y+4	; 0x04
    77f6:	89 2b       	or	r24, r25
    77f8:	8a 2b       	or	r24, r26
    77fa:	8b 2b       	or	r24, r27
    77fc:	09 f0       	breq	.+2      	; 0x7800 <RTC_String2Epoch+0x18c>
    77fe:	20 e0       	ldi	r18, 0x00	; 0
    7800:	88 a1       	ldd	r24, Y+32	; 0x20
    7802:	99 a1       	ldd	r25, Y+33	; 0x21
    7804:	fc 01       	movw	r30, r24
    7806:	20 83       	st	Z, r18
    7808:	89 81       	ldd	r24, Y+1	; 0x01
    780a:	9a 81       	ldd	r25, Y+2	; 0x02
    780c:	ab 81       	ldd	r26, Y+3	; 0x03
    780e:	bc 81       	ldd	r27, Y+4	; 0x04
    7810:	bc 01       	movw	r22, r24
    7812:	cd 01       	movw	r24, r26
    7814:	a3 96       	adiw	r28, 0x23	; 35
    7816:	cd bf       	out	0x3d, r28	; 61
    7818:	de bf       	out	0x3e, r29	; 62
    781a:	df 91       	pop	r29
    781c:	cf 91       	pop	r28
    781e:	08 95       	ret

00007820 <_Z14epoch_from_ltmP2tm>:
    7820:	ef 92       	push	r14
    7822:	ff 92       	push	r15
    7824:	0f 93       	push	r16
    7826:	1f 93       	push	r17
    7828:	cf 93       	push	r28
    782a:	df 93       	push	r29
    782c:	cd b7       	in	r28, 0x3d	; 61
    782e:	de b7       	in	r29, 0x3e	; 62
    7830:	26 97       	sbiw	r28, 0x06	; 6
    7832:	cd bf       	out	0x3d, r28	; 61
    7834:	de bf       	out	0x3e, r29	; 62
    7836:	8d 83       	std	Y+5, r24	; 0x05
    7838:	9e 83       	std	Y+6, r25	; 0x06
    783a:	8d 81       	ldd	r24, Y+5	; 0x05
    783c:	9e 81       	ldd	r25, Y+6	; 0x06
    783e:	fc 01       	movw	r30, r24
    7840:	80 81       	ld	r24, Z
    7842:	28 2f       	mov	r18, r24
    7844:	88 0f       	add	r24, r24
    7846:	33 0b       	sbc	r19, r19
    7848:	8d 81       	ldd	r24, Y+5	; 0x05
    784a:	9e 81       	ldd	r25, Y+6	; 0x06
    784c:	fc 01       	movw	r30, r24
    784e:	81 81       	ldd	r24, Z+1	; 0x01
    7850:	48 2f       	mov	r20, r24
    7852:	88 0f       	add	r24, r24
    7854:	55 0b       	sbc	r21, r21
    7856:	6c e3       	ldi	r22, 0x3C	; 60
    7858:	64 9f       	mul	r22, r20
    785a:	c0 01       	movw	r24, r0
    785c:	65 9f       	mul	r22, r21
    785e:	90 0d       	add	r25, r0
    7860:	11 24       	eor	r1, r1
    7862:	82 0f       	add	r24, r18
    7864:	93 1f       	adc	r25, r19
    7866:	7c 01       	movw	r14, r24
    7868:	99 0f       	add	r25, r25
    786a:	00 0b       	sbc	r16, r16
    786c:	11 0b       	sbc	r17, r17
    786e:	8d 81       	ldd	r24, Y+5	; 0x05
    7870:	9e 81       	ldd	r25, Y+6	; 0x06
    7872:	fc 01       	movw	r30, r24
    7874:	82 81       	ldd	r24, Z+2	; 0x02
    7876:	28 2f       	mov	r18, r24
    7878:	88 0f       	add	r24, r24
    787a:	33 0b       	sbc	r19, r19
    787c:	44 0b       	sbc	r20, r20
    787e:	55 0b       	sbc	r21, r21
    7880:	80 e1       	ldi	r24, 0x10	; 16
    7882:	9e e0       	ldi	r25, 0x0E	; 14
    7884:	dc 01       	movw	r26, r24
    7886:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    788a:	dc 01       	movw	r26, r24
    788c:	cb 01       	movw	r24, r22
    788e:	e8 0e       	add	r14, r24
    7890:	f9 1e       	adc	r15, r25
    7892:	0a 1f       	adc	r16, r26
    7894:	1b 1f       	adc	r17, r27
    7896:	8d 81       	ldd	r24, Y+5	; 0x05
    7898:	9e 81       	ldd	r25, Y+6	; 0x06
    789a:	fc 01       	movw	r30, r24
    789c:	80 85       	ldd	r24, Z+8	; 0x08
    789e:	91 85       	ldd	r25, Z+9	; 0x09
    78a0:	09 2e       	mov	r0, r25
    78a2:	00 0c       	add	r0, r0
    78a4:	aa 0b       	sbc	r26, r26
    78a6:	bb 0b       	sbc	r27, r27
    78a8:	9c 01       	movw	r18, r24
    78aa:	ad 01       	movw	r20, r26
    78ac:	60 e8       	ldi	r22, 0x80	; 128
    78ae:	71 e5       	ldi	r23, 0x51	; 81
    78b0:	81 e0       	ldi	r24, 0x01	; 1
    78b2:	90 e0       	ldi	r25, 0x00	; 0
    78b4:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    78b8:	dc 01       	movw	r26, r24
    78ba:	cb 01       	movw	r24, r22
    78bc:	e8 0e       	add	r14, r24
    78be:	f9 1e       	adc	r15, r25
    78c0:	0a 1f       	adc	r16, r26
    78c2:	1b 1f       	adc	r17, r27
    78c4:	8d 81       	ldd	r24, Y+5	; 0x05
    78c6:	9e 81       	ldd	r25, Y+6	; 0x06
    78c8:	fc 01       	movw	r30, r24
    78ca:	86 81       	ldd	r24, Z+6	; 0x06
    78cc:	97 81       	ldd	r25, Z+7	; 0x07
    78ce:	86 54       	subi	r24, 0x46	; 70
    78d0:	91 09       	sbc	r25, r1
    78d2:	09 2e       	mov	r0, r25
    78d4:	00 0c       	add	r0, r0
    78d6:	aa 0b       	sbc	r26, r26
    78d8:	bb 0b       	sbc	r27, r27
    78da:	9c 01       	movw	r18, r24
    78dc:	ad 01       	movw	r20, r26
    78de:	60 e8       	ldi	r22, 0x80	; 128
    78e0:	73 e3       	ldi	r23, 0x33	; 51
    78e2:	81 ee       	ldi	r24, 0xE1	; 225
    78e4:	91 e0       	ldi	r25, 0x01	; 1
    78e6:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    78ea:	dc 01       	movw	r26, r24
    78ec:	cb 01       	movw	r24, r22
    78ee:	e8 0e       	add	r14, r24
    78f0:	f9 1e       	adc	r15, r25
    78f2:	0a 1f       	adc	r16, r26
    78f4:	1b 1f       	adc	r17, r27
    78f6:	8d 81       	ldd	r24, Y+5	; 0x05
    78f8:	9e 81       	ldd	r25, Y+6	; 0x06
    78fa:	fc 01       	movw	r30, r24
    78fc:	86 81       	ldd	r24, Z+6	; 0x06
    78fe:	97 81       	ldd	r25, Z+7	; 0x07
    7900:	85 54       	subi	r24, 0x45	; 69
    7902:	91 09       	sbc	r25, r1
    7904:	99 23       	and	r25, r25
    7906:	0c f4       	brge	.+2      	; 0x790a <_Z14epoch_from_ltmP2tm+0xea>
    7908:	03 96       	adiw	r24, 0x03	; 3
    790a:	95 95       	asr	r25
    790c:	87 95       	ror	r24
    790e:	95 95       	asr	r25
    7910:	87 95       	ror	r24
    7912:	09 2e       	mov	r0, r25
    7914:	00 0c       	add	r0, r0
    7916:	aa 0b       	sbc	r26, r26
    7918:	bb 0b       	sbc	r27, r27
    791a:	9c 01       	movw	r18, r24
    791c:	ad 01       	movw	r20, r26
    791e:	60 e8       	ldi	r22, 0x80	; 128
    7920:	71 e5       	ldi	r23, 0x51	; 81
    7922:	81 e0       	ldi	r24, 0x01	; 1
    7924:	90 e0       	ldi	r25, 0x00	; 0
    7926:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    792a:	dc 01       	movw	r26, r24
    792c:	cb 01       	movw	r24, r22
    792e:	e8 0e       	add	r14, r24
    7930:	f9 1e       	adc	r15, r25
    7932:	0a 1f       	adc	r16, r26
    7934:	1b 1f       	adc	r17, r27
    7936:	8d 81       	ldd	r24, Y+5	; 0x05
    7938:	9e 81       	ldd	r25, Y+6	; 0x06
    793a:	fc 01       	movw	r30, r24
    793c:	86 81       	ldd	r24, Z+6	; 0x06
    793e:	97 81       	ldd	r25, Z+7	; 0x07
    7940:	01 97       	sbiw	r24, 0x01	; 1
    7942:	24 e6       	ldi	r18, 0x64	; 100
    7944:	30 e0       	ldi	r19, 0x00	; 0
    7946:	b9 01       	movw	r22, r18
    7948:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
    794c:	cb 01       	movw	r24, r22
    794e:	09 2e       	mov	r0, r25
    7950:	00 0c       	add	r0, r0
    7952:	aa 0b       	sbc	r26, r26
    7954:	bb 0b       	sbc	r27, r27
    7956:	9c 01       	movw	r18, r24
    7958:	ad 01       	movw	r20, r26
    795a:	60 e8       	ldi	r22, 0x80	; 128
    795c:	7e ea       	ldi	r23, 0xAE	; 174
    795e:	8e ef       	ldi	r24, 0xFE	; 254
    7960:	9f ef       	ldi	r25, 0xFF	; 255
    7962:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    7966:	dc 01       	movw	r26, r24
    7968:	cb 01       	movw	r24, r22
    796a:	e8 0e       	add	r14, r24
    796c:	f9 1e       	adc	r15, r25
    796e:	0a 1f       	adc	r16, r26
    7970:	1b 1f       	adc	r17, r27
    7972:	8d 81       	ldd	r24, Y+5	; 0x05
    7974:	9e 81       	ldd	r25, Y+6	; 0x06
    7976:	fc 01       	movw	r30, r24
    7978:	86 81       	ldd	r24, Z+6	; 0x06
    797a:	97 81       	ldd	r25, Z+7	; 0x07
    797c:	85 5d       	subi	r24, 0xD5	; 213
    797e:	9e 4f       	sbci	r25, 0xFE	; 254
    7980:	20 e9       	ldi	r18, 0x90	; 144
    7982:	31 e0       	ldi	r19, 0x01	; 1
    7984:	b9 01       	movw	r22, r18
    7986:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
    798a:	cb 01       	movw	r24, r22
    798c:	09 2e       	mov	r0, r25
    798e:	00 0c       	add	r0, r0
    7990:	aa 0b       	sbc	r26, r26
    7992:	bb 0b       	sbc	r27, r27
    7994:	9c 01       	movw	r18, r24
    7996:	ad 01       	movw	r20, r26
    7998:	60 e8       	ldi	r22, 0x80	; 128
    799a:	71 e5       	ldi	r23, 0x51	; 81
    799c:	81 e0       	ldi	r24, 0x01	; 1
    799e:	90 e0       	ldi	r25, 0x00	; 0
    79a0:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    79a4:	dc 01       	movw	r26, r24
    79a6:	cb 01       	movw	r24, r22
    79a8:	8e 0d       	add	r24, r14
    79aa:	9f 1d       	adc	r25, r15
    79ac:	a0 1f       	adc	r26, r16
    79ae:	b1 1f       	adc	r27, r17
    79b0:	89 83       	std	Y+1, r24	; 0x01
    79b2:	9a 83       	std	Y+2, r25	; 0x02
    79b4:	ab 83       	std	Y+3, r26	; 0x03
    79b6:	bc 83       	std	Y+4, r27	; 0x04
    79b8:	89 81       	ldd	r24, Y+1	; 0x01
    79ba:	9a 81       	ldd	r25, Y+2	; 0x02
    79bc:	ab 81       	ldd	r26, Y+3	; 0x03
    79be:	bc 81       	ldd	r27, Y+4	; 0x04
    79c0:	bc 01       	movw	r22, r24
    79c2:	cd 01       	movw	r24, r26
    79c4:	26 96       	adiw	r28, 0x06	; 6
    79c6:	cd bf       	out	0x3d, r28	; 61
    79c8:	de bf       	out	0x3e, r29	; 62
    79ca:	df 91       	pop	r29
    79cc:	cf 91       	pop	r28
    79ce:	1f 91       	pop	r17
    79d0:	0f 91       	pop	r16
    79d2:	ff 90       	pop	r15
    79d4:	ef 90       	pop	r14
    79d6:	08 95       	ret

000079d8 <ds3231_get_epoch>:
    79d8:	ef 92       	push	r14
    79da:	ff 92       	push	r15
    79dc:	0f 93       	push	r16
    79de:	1f 93       	push	r17
    79e0:	cf 93       	push	r28
    79e2:	df 93       	push	r29
    79e4:	cd b7       	in	r28, 0x3d	; 61
    79e6:	de b7       	in	r29, 0x3e	; 62
    79e8:	a5 97       	sbiw	r28, 0x25	; 37
    79ea:	cd bf       	out	0x3d, r28	; 61
    79ec:	de bf       	out	0x3e, r29	; 62
    79ee:	8c a3       	std	Y+36, r24	; 0x24
    79f0:	9d a3       	std	Y+37, r25	; 0x25
    79f2:	8a e0       	ldi	r24, 0x0A	; 10
    79f4:	89 83       	std	Y+1, r24	; 0x01
    79f6:	1a 82       	std	Y+2, r1	; 0x02
    79f8:	1b 82       	std	Y+3, r1	; 0x03
    79fa:	1c 82       	std	Y+4, r1	; 0x04
    79fc:	1d 82       	std	Y+5, r1	; 0x05
    79fe:	27 e0       	ldi	r18, 0x07	; 7
    7a00:	ce 01       	movw	r24, r28
    7a02:	41 96       	adiw	r24, 0x11	; 17
    7a04:	fc 01       	movw	r30, r24
    7a06:	32 2f       	mov	r19, r18
    7a08:	11 92       	st	Z+, r1
    7a0a:	3a 95       	dec	r19
    7a0c:	e9 f7       	brne	.-6      	; 0x7a08 <ds3231_get_epoch+0x30>
    7a0e:	89 81       	ldd	r24, Y+1	; 0x01
    7a10:	9f ef       	ldi	r25, 0xFF	; 255
    7a12:	98 0f       	add	r25, r24
    7a14:	99 83       	std	Y+1, r25	; 0x01
    7a16:	88 23       	and	r24, r24
    7a18:	99 f0       	breq	.+38     	; 0x7a40 <ds3231_get_epoch+0x68>
    7a1a:	ce 01       	movw	r24, r28
    7a1c:	41 96       	adiw	r24, 0x11	; 17
    7a1e:	27 e0       	ldi	r18, 0x07	; 7
    7a20:	ac 01       	movw	r20, r24
    7a22:	60 e0       	ldi	r22, 0x00	; 0
    7a24:	80 ed       	ldi	r24, 0xD0	; 208
    7a26:	0e 94 5d 4a 	call	0x94ba	; 0x94ba <I2C_0_GetData>
    7a2a:	98 2f       	mov	r25, r24
    7a2c:	81 e0       	ldi	r24, 0x01	; 1
    7a2e:	97 30       	cpi	r25, 0x07	; 7
    7a30:	09 f4       	brne	.+2      	; 0x7a34 <ds3231_get_epoch+0x5c>
    7a32:	80 e0       	ldi	r24, 0x00	; 0
    7a34:	8e 83       	std	Y+6, r24	; 0x06
    7a36:	8e 81       	ldd	r24, Y+6	; 0x06
    7a38:	88 23       	and	r24, r24
    7a3a:	11 f0       	breq	.+4      	; 0x7a40 <ds3231_get_epoch+0x68>
    7a3c:	81 e0       	ldi	r24, 0x01	; 1
    7a3e:	01 c0       	rjmp	.+2      	; 0x7a42 <ds3231_get_epoch+0x6a>
    7a40:	80 e0       	ldi	r24, 0x00	; 0
    7a42:	88 23       	and	r24, r24
    7a44:	09 f0       	breq	.+2      	; 0x7a48 <ds3231_get_epoch+0x70>
    7a46:	e3 cf       	rjmp	.-58     	; 0x7a0e <ds3231_get_epoch+0x36>
    7a48:	9e 81       	ldd	r25, Y+6	; 0x06
    7a4a:	81 e0       	ldi	r24, 0x01	; 1
    7a4c:	89 27       	eor	r24, r25
    7a4e:	88 23       	and	r24, r24
    7a50:	09 f4       	brne	.+2      	; 0x7a54 <ds3231_get_epoch+0x7c>
    7a52:	7e c1       	rjmp	.+764    	; 0x7d50 <ds3231_get_epoch+0x378>
    7a54:	2c e0       	ldi	r18, 0x0C	; 12
    7a56:	ce 01       	movw	r24, r28
    7a58:	48 96       	adiw	r24, 0x18	; 24
    7a5a:	fc 01       	movw	r30, r24
    7a5c:	32 2f       	mov	r19, r18
    7a5e:	11 92       	st	Z+, r1
    7a60:	3a 95       	dec	r19
    7a62:	e9 f7       	brne	.-6      	; 0x7a5e <ds3231_get_epoch+0x86>
    7a64:	84 e6       	ldi	r24, 0x64	; 100
    7a66:	90 e0       	ldi	r25, 0x00	; 0
    7a68:	89 87       	std	Y+9, r24	; 0x09
    7a6a:	9a 87       	std	Y+10, r25	; 0x0a
    7a6c:	8f 89       	ldd	r24, Y+23	; 0x17
    7a6e:	88 2f       	mov	r24, r24
    7a70:	90 e0       	ldi	r25, 0x00	; 0
    7a72:	8f 70       	andi	r24, 0x0F	; 15
    7a74:	99 27       	eor	r25, r25
    7a76:	29 85       	ldd	r18, Y+9	; 0x09
    7a78:	3a 85       	ldd	r19, Y+10	; 0x0a
    7a7a:	82 0f       	add	r24, r18
    7a7c:	93 1f       	adc	r25, r19
    7a7e:	89 87       	std	Y+9, r24	; 0x09
    7a80:	9a 87       	std	Y+10, r25	; 0x0a
    7a82:	8f 89       	ldd	r24, Y+23	; 0x17
    7a84:	82 95       	swap	r24
    7a86:	8f 70       	andi	r24, 0x0F	; 15
    7a88:	88 2f       	mov	r24, r24
    7a8a:	90 e0       	ldi	r25, 0x00	; 0
    7a8c:	88 0f       	add	r24, r24
    7a8e:	99 1f       	adc	r25, r25
    7a90:	9c 01       	movw	r18, r24
    7a92:	22 0f       	add	r18, r18
    7a94:	33 1f       	adc	r19, r19
    7a96:	22 0f       	add	r18, r18
    7a98:	33 1f       	adc	r19, r19
    7a9a:	82 0f       	add	r24, r18
    7a9c:	93 1f       	adc	r25, r19
    7a9e:	29 85       	ldd	r18, Y+9	; 0x09
    7aa0:	3a 85       	ldd	r19, Y+10	; 0x0a
    7aa2:	82 0f       	add	r24, r18
    7aa4:	93 1f       	adc	r25, r19
    7aa6:	89 87       	std	Y+9, r24	; 0x09
    7aa8:	9a 87       	std	Y+10, r25	; 0x0a
    7aaa:	89 85       	ldd	r24, Y+9	; 0x09
    7aac:	9a 85       	ldd	r25, Y+10	; 0x0a
    7aae:	8e 8f       	std	Y+30, r24	; 0x1e
    7ab0:	9f 8f       	std	Y+31, r25	; 0x1f
    7ab2:	89 85       	ldd	r24, Y+9	; 0x09
    7ab4:	9a 85       	ldd	r25, Y+10	; 0x0a
    7ab6:	84 59       	subi	r24, 0x94	; 148
    7ab8:	98 4f       	sbci	r25, 0xF8	; 248
    7aba:	89 87       	std	Y+9, r24	; 0x09
    7abc:	9a 87       	std	Y+10, r25	; 0x0a
    7abe:	8e 89       	ldd	r24, Y+22	; 0x16
    7ac0:	8f 70       	andi	r24, 0x0F	; 15
    7ac2:	8b 87       	std	Y+11, r24	; 0x0b
    7ac4:	8e 89       	ldd	r24, Y+22	; 0x16
    7ac6:	82 95       	swap	r24
    7ac8:	8f 70       	andi	r24, 0x0F	; 15
    7aca:	88 0f       	add	r24, r24
    7acc:	98 2f       	mov	r25, r24
    7ace:	99 0f       	add	r25, r25
    7ad0:	99 0f       	add	r25, r25
    7ad2:	89 0f       	add	r24, r25
    7ad4:	9b 85       	ldd	r25, Y+11	; 0x0b
    7ad6:	89 0f       	add	r24, r25
    7ad8:	8b 87       	std	Y+11, r24	; 0x0b
    7ada:	8b 85       	ldd	r24, Y+11	; 0x0b
    7adc:	81 50       	subi	r24, 0x01	; 1
    7ade:	8d 8f       	std	Y+29, r24	; 0x1d
    7ae0:	8d 89       	ldd	r24, Y+21	; 0x15
    7ae2:	8f 70       	andi	r24, 0x0F	; 15
    7ae4:	8c 87       	std	Y+12, r24	; 0x0c
    7ae6:	8d 89       	ldd	r24, Y+21	; 0x15
    7ae8:	82 95       	swap	r24
    7aea:	8f 70       	andi	r24, 0x0F	; 15
    7aec:	88 0f       	add	r24, r24
    7aee:	98 2f       	mov	r25, r24
    7af0:	99 0f       	add	r25, r25
    7af2:	99 0f       	add	r25, r25
    7af4:	89 0f       	add	r24, r25
    7af6:	9c 85       	ldd	r25, Y+12	; 0x0c
    7af8:	89 0f       	add	r24, r25
    7afa:	8c 87       	std	Y+12, r24	; 0x0c
    7afc:	8c 85       	ldd	r24, Y+12	; 0x0c
    7afe:	8b 8f       	std	Y+27, r24	; 0x1b
    7b00:	18 a2       	std	Y+32, r1	; 0x20
    7b02:	19 a2       	std	Y+33, r1	; 0x21
    7b04:	81 e0       	ldi	r24, 0x01	; 1
    7b06:	88 87       	std	Y+8, r24	; 0x08
    7b08:	98 85       	ldd	r25, Y+8	; 0x08
    7b0a:	8b 85       	ldd	r24, Y+11	; 0x0b
    7b0c:	98 17       	cp	r25, r24
    7b0e:	88 f4       	brcc	.+34     	; 0x7b32 <ds3231_get_epoch+0x15a>
    7b10:	89 85       	ldd	r24, Y+9	; 0x09
    7b12:	9a 85       	ldd	r25, Y+10	; 0x0a
    7b14:	68 85       	ldd	r22, Y+8	; 0x08
    7b16:	0e 94 54 02 	call	0x4a8	; 0x4a8 <month_length>
    7b1a:	28 a1       	ldd	r18, Y+32	; 0x20
    7b1c:	39 a1       	ldd	r19, Y+33	; 0x21
    7b1e:	88 2f       	mov	r24, r24
    7b20:	90 e0       	ldi	r25, 0x00	; 0
    7b22:	82 0f       	add	r24, r18
    7b24:	93 1f       	adc	r25, r19
    7b26:	88 a3       	std	Y+32, r24	; 0x20
    7b28:	99 a3       	std	Y+33, r25	; 0x21
    7b2a:	88 85       	ldd	r24, Y+8	; 0x08
    7b2c:	8f 5f       	subi	r24, 0xFF	; 255
    7b2e:	88 87       	std	Y+8, r24	; 0x08
    7b30:	eb cf       	rjmp	.-42     	; 0x7b08 <ds3231_get_epoch+0x130>
    7b32:	28 a1       	ldd	r18, Y+32	; 0x20
    7b34:	39 a1       	ldd	r19, Y+33	; 0x21
    7b36:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7b38:	08 2e       	mov	r0, r24
    7b3a:	00 0c       	add	r0, r0
    7b3c:	99 0b       	sbc	r25, r25
    7b3e:	01 97       	sbiw	r24, 0x01	; 1
    7b40:	82 0f       	add	r24, r18
    7b42:	93 1f       	adc	r25, r19
    7b44:	88 a3       	std	Y+32, r24	; 0x20
    7b46:	99 a3       	std	Y+33, r25	; 0x21
    7b48:	89 89       	ldd	r24, Y+17	; 0x11
    7b4a:	82 95       	swap	r24
    7b4c:	8f 70       	andi	r24, 0x0F	; 15
    7b4e:	88 0f       	add	r24, r24
    7b50:	98 2f       	mov	r25, r24
    7b52:	99 0f       	add	r25, r25
    7b54:	99 0f       	add	r25, r25
    7b56:	89 0f       	add	r24, r25
    7b58:	8d 87       	std	Y+13, r24	; 0x0d
    7b5a:	89 89       	ldd	r24, Y+17	; 0x11
    7b5c:	8f 70       	andi	r24, 0x0F	; 15
    7b5e:	9d 85       	ldd	r25, Y+13	; 0x0d
    7b60:	89 0f       	add	r24, r25
    7b62:	8d 87       	std	Y+13, r24	; 0x0d
    7b64:	8a 89       	ldd	r24, Y+18	; 0x12
    7b66:	82 95       	swap	r24
    7b68:	8f 70       	andi	r24, 0x0F	; 15
    7b6a:	88 0f       	add	r24, r24
    7b6c:	98 2f       	mov	r25, r24
    7b6e:	99 0f       	add	r25, r25
    7b70:	99 0f       	add	r25, r25
    7b72:	89 0f       	add	r24, r25
    7b74:	8e 87       	std	Y+14, r24	; 0x0e
    7b76:	8a 89       	ldd	r24, Y+18	; 0x12
    7b78:	8f 70       	andi	r24, 0x0F	; 15
    7b7a:	9e 85       	ldd	r25, Y+14	; 0x0e
    7b7c:	89 0f       	add	r24, r25
    7b7e:	8e 87       	std	Y+14, r24	; 0x0e
    7b80:	8b 89       	ldd	r24, Y+19	; 0x13
    7b82:	88 2f       	mov	r24, r24
    7b84:	90 e0       	ldi	r25, 0x00	; 0
    7b86:	80 72       	andi	r24, 0x20	; 32
    7b88:	99 27       	eor	r25, r25
    7b8a:	21 e0       	ldi	r18, 0x01	; 1
    7b8c:	89 2b       	or	r24, r25
    7b8e:	09 f4       	brne	.+2      	; 0x7b92 <ds3231_get_epoch+0x1ba>
    7b90:	20 e0       	ldi	r18, 0x00	; 0
    7b92:	2f 87       	std	Y+15, r18	; 0x0f
    7b94:	8b 89       	ldd	r24, Y+19	; 0x13
    7b96:	88 2f       	mov	r24, r24
    7b98:	90 e0       	ldi	r25, 0x00	; 0
    7b9a:	95 95       	asr	r25
    7b9c:	87 95       	ror	r24
    7b9e:	95 95       	asr	r25
    7ba0:	87 95       	ror	r24
    7ba2:	95 95       	asr	r25
    7ba4:	87 95       	ror	r24
    7ba6:	95 95       	asr	r25
    7ba8:	87 95       	ror	r24
    7baa:	81 70       	andi	r24, 0x01	; 1
    7bac:	88 0f       	add	r24, r24
    7bae:	98 2f       	mov	r25, r24
    7bb0:	99 0f       	add	r25, r25
    7bb2:	99 0f       	add	r25, r25
    7bb4:	89 0f       	add	r24, r25
    7bb6:	8f 83       	std	Y+7, r24	; 0x07
    7bb8:	8b 89       	ldd	r24, Y+19	; 0x13
    7bba:	8f 70       	andi	r24, 0x0F	; 15
    7bbc:	9f 81       	ldd	r25, Y+7	; 0x07
    7bbe:	89 0f       	add	r24, r25
    7bc0:	8f 83       	std	Y+7, r24	; 0x07
    7bc2:	8b 89       	ldd	r24, Y+19	; 0x13
    7bc4:	88 2f       	mov	r24, r24
    7bc6:	90 e0       	ldi	r25, 0x00	; 0
    7bc8:	80 74       	andi	r24, 0x40	; 64
    7bca:	99 27       	eor	r25, r25
    7bcc:	21 e0       	ldi	r18, 0x01	; 1
    7bce:	89 2b       	or	r24, r25
    7bd0:	09 f4       	brne	.+2      	; 0x7bd4 <ds3231_get_epoch+0x1fc>
    7bd2:	20 e0       	ldi	r18, 0x00	; 0
    7bd4:	28 8b       	std	Y+16, r18	; 0x10
    7bd6:	88 89       	ldd	r24, Y+16	; 0x10
    7bd8:	88 23       	and	r24, r24
    7bda:	39 f0       	breq	.+14     	; 0x7bea <ds3231_get_epoch+0x212>
    7bdc:	8f 85       	ldd	r24, Y+15	; 0x0f
    7bde:	88 23       	and	r24, r24
    7be0:	51 f0       	breq	.+20     	; 0x7bf6 <ds3231_get_epoch+0x21e>
    7be2:	8f 81       	ldd	r24, Y+7	; 0x07
    7be4:	84 5f       	subi	r24, 0xF4	; 244
    7be6:	8f 83       	std	Y+7, r24	; 0x07
    7be8:	06 c0       	rjmp	.+12     	; 0x7bf6 <ds3231_get_epoch+0x21e>
    7bea:	8f 85       	ldd	r24, Y+15	; 0x0f
    7bec:	88 23       	and	r24, r24
    7bee:	19 f0       	breq	.+6      	; 0x7bf6 <ds3231_get_epoch+0x21e>
    7bf0:	8f 81       	ldd	r24, Y+7	; 0x07
    7bf2:	8c 5e       	subi	r24, 0xEC	; 236
    7bf4:	8f 83       	std	Y+7, r24	; 0x07
    7bf6:	8f 81       	ldd	r24, Y+7	; 0x07
    7bf8:	8a 8f       	std	Y+26, r24	; 0x1a
    7bfa:	8e 85       	ldd	r24, Y+14	; 0x0e
    7bfc:	89 8f       	std	Y+25, r24	; 0x19
    7bfe:	8d 85       	ldd	r24, Y+13	; 0x0d
    7c00:	88 8f       	std	Y+24, r24	; 0x18
    7c02:	88 8d       	ldd	r24, Y+24	; 0x18
    7c04:	28 2f       	mov	r18, r24
    7c06:	88 0f       	add	r24, r24
    7c08:	33 0b       	sbc	r19, r19
    7c0a:	89 8d       	ldd	r24, Y+25	; 0x19
    7c0c:	48 2f       	mov	r20, r24
    7c0e:	88 0f       	add	r24, r24
    7c10:	55 0b       	sbc	r21, r21
    7c12:	6c e3       	ldi	r22, 0x3C	; 60
    7c14:	64 9f       	mul	r22, r20
    7c16:	c0 01       	movw	r24, r0
    7c18:	65 9f       	mul	r22, r21
    7c1a:	90 0d       	add	r25, r0
    7c1c:	11 24       	eor	r1, r1
    7c1e:	82 0f       	add	r24, r18
    7c20:	93 1f       	adc	r25, r19
    7c22:	7c 01       	movw	r14, r24
    7c24:	99 0f       	add	r25, r25
    7c26:	00 0b       	sbc	r16, r16
    7c28:	11 0b       	sbc	r17, r17
    7c2a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    7c2c:	28 2f       	mov	r18, r24
    7c2e:	88 0f       	add	r24, r24
    7c30:	33 0b       	sbc	r19, r19
    7c32:	44 0b       	sbc	r20, r20
    7c34:	55 0b       	sbc	r21, r21
    7c36:	80 e1       	ldi	r24, 0x10	; 16
    7c38:	9e e0       	ldi	r25, 0x0E	; 14
    7c3a:	dc 01       	movw	r26, r24
    7c3c:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    7c40:	dc 01       	movw	r26, r24
    7c42:	cb 01       	movw	r24, r22
    7c44:	e8 0e       	add	r14, r24
    7c46:	f9 1e       	adc	r15, r25
    7c48:	0a 1f       	adc	r16, r26
    7c4a:	1b 1f       	adc	r17, r27
    7c4c:	88 a1       	ldd	r24, Y+32	; 0x20
    7c4e:	99 a1       	ldd	r25, Y+33	; 0x21
    7c50:	09 2e       	mov	r0, r25
    7c52:	00 0c       	add	r0, r0
    7c54:	aa 0b       	sbc	r26, r26
    7c56:	bb 0b       	sbc	r27, r27
    7c58:	9c 01       	movw	r18, r24
    7c5a:	ad 01       	movw	r20, r26
    7c5c:	60 e8       	ldi	r22, 0x80	; 128
    7c5e:	71 e5       	ldi	r23, 0x51	; 81
    7c60:	81 e0       	ldi	r24, 0x01	; 1
    7c62:	90 e0       	ldi	r25, 0x00	; 0
    7c64:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    7c68:	dc 01       	movw	r26, r24
    7c6a:	cb 01       	movw	r24, r22
    7c6c:	e8 0e       	add	r14, r24
    7c6e:	f9 1e       	adc	r15, r25
    7c70:	0a 1f       	adc	r16, r26
    7c72:	1b 1f       	adc	r17, r27
    7c74:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7c76:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7c78:	86 54       	subi	r24, 0x46	; 70
    7c7a:	91 09       	sbc	r25, r1
    7c7c:	09 2e       	mov	r0, r25
    7c7e:	00 0c       	add	r0, r0
    7c80:	aa 0b       	sbc	r26, r26
    7c82:	bb 0b       	sbc	r27, r27
    7c84:	9c 01       	movw	r18, r24
    7c86:	ad 01       	movw	r20, r26
    7c88:	60 e8       	ldi	r22, 0x80	; 128
    7c8a:	73 e3       	ldi	r23, 0x33	; 51
    7c8c:	81 ee       	ldi	r24, 0xE1	; 225
    7c8e:	91 e0       	ldi	r25, 0x01	; 1
    7c90:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    7c94:	dc 01       	movw	r26, r24
    7c96:	cb 01       	movw	r24, r22
    7c98:	e8 0e       	add	r14, r24
    7c9a:	f9 1e       	adc	r15, r25
    7c9c:	0a 1f       	adc	r16, r26
    7c9e:	1b 1f       	adc	r17, r27
    7ca0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7ca2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7ca4:	85 54       	subi	r24, 0x45	; 69
    7ca6:	91 09       	sbc	r25, r1
    7ca8:	99 23       	and	r25, r25
    7caa:	0c f4       	brge	.+2      	; 0x7cae <ds3231_get_epoch+0x2d6>
    7cac:	03 96       	adiw	r24, 0x03	; 3
    7cae:	95 95       	asr	r25
    7cb0:	87 95       	ror	r24
    7cb2:	95 95       	asr	r25
    7cb4:	87 95       	ror	r24
    7cb6:	09 2e       	mov	r0, r25
    7cb8:	00 0c       	add	r0, r0
    7cba:	aa 0b       	sbc	r26, r26
    7cbc:	bb 0b       	sbc	r27, r27
    7cbe:	9c 01       	movw	r18, r24
    7cc0:	ad 01       	movw	r20, r26
    7cc2:	60 e8       	ldi	r22, 0x80	; 128
    7cc4:	71 e5       	ldi	r23, 0x51	; 81
    7cc6:	81 e0       	ldi	r24, 0x01	; 1
    7cc8:	90 e0       	ldi	r25, 0x00	; 0
    7cca:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    7cce:	dc 01       	movw	r26, r24
    7cd0:	cb 01       	movw	r24, r22
    7cd2:	e8 0e       	add	r14, r24
    7cd4:	f9 1e       	adc	r15, r25
    7cd6:	0a 1f       	adc	r16, r26
    7cd8:	1b 1f       	adc	r17, r27
    7cda:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7cdc:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7cde:	01 97       	sbiw	r24, 0x01	; 1
    7ce0:	24 e6       	ldi	r18, 0x64	; 100
    7ce2:	30 e0       	ldi	r19, 0x00	; 0
    7ce4:	b9 01       	movw	r22, r18
    7ce6:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
    7cea:	cb 01       	movw	r24, r22
    7cec:	09 2e       	mov	r0, r25
    7cee:	00 0c       	add	r0, r0
    7cf0:	aa 0b       	sbc	r26, r26
    7cf2:	bb 0b       	sbc	r27, r27
    7cf4:	9c 01       	movw	r18, r24
    7cf6:	ad 01       	movw	r20, r26
    7cf8:	60 e8       	ldi	r22, 0x80	; 128
    7cfa:	7e ea       	ldi	r23, 0xAE	; 174
    7cfc:	8e ef       	ldi	r24, 0xFE	; 254
    7cfe:	9f ef       	ldi	r25, 0xFF	; 255
    7d00:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    7d04:	dc 01       	movw	r26, r24
    7d06:	cb 01       	movw	r24, r22
    7d08:	e8 0e       	add	r14, r24
    7d0a:	f9 1e       	adc	r15, r25
    7d0c:	0a 1f       	adc	r16, r26
    7d0e:	1b 1f       	adc	r17, r27
    7d10:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7d12:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7d14:	85 5d       	subi	r24, 0xD5	; 213
    7d16:	9e 4f       	sbci	r25, 0xFE	; 254
    7d18:	20 e9       	ldi	r18, 0x90	; 144
    7d1a:	31 e0       	ldi	r19, 0x01	; 1
    7d1c:	b9 01       	movw	r22, r18
    7d1e:	0e 94 9a 74 	call	0xe934	; 0xe934 <__divmodhi4>
    7d22:	cb 01       	movw	r24, r22
    7d24:	09 2e       	mov	r0, r25
    7d26:	00 0c       	add	r0, r0
    7d28:	aa 0b       	sbc	r26, r26
    7d2a:	bb 0b       	sbc	r27, r27
    7d2c:	9c 01       	movw	r18, r24
    7d2e:	ad 01       	movw	r20, r26
    7d30:	60 e8       	ldi	r22, 0x80	; 128
    7d32:	71 e5       	ldi	r23, 0x51	; 81
    7d34:	81 e0       	ldi	r24, 0x01	; 1
    7d36:	90 e0       	ldi	r25, 0x00	; 0
    7d38:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    7d3c:	dc 01       	movw	r26, r24
    7d3e:	cb 01       	movw	r24, r22
    7d40:	8e 0d       	add	r24, r14
    7d42:	9f 1d       	adc	r25, r15
    7d44:	a0 1f       	adc	r26, r16
    7d46:	b1 1f       	adc	r27, r17
    7d48:	8a 83       	std	Y+2, r24	; 0x02
    7d4a:	9b 83       	std	Y+3, r25	; 0x03
    7d4c:	ac 83       	std	Y+4, r26	; 0x04
    7d4e:	bd 83       	std	Y+5, r27	; 0x05
    7d50:	8c a1       	ldd	r24, Y+36	; 0x24
    7d52:	9d a1       	ldd	r25, Y+37	; 0x25
    7d54:	89 2b       	or	r24, r25
    7d56:	51 f0       	breq	.+20     	; 0x7d6c <ds3231_get_epoch+0x394>
    7d58:	8e 81       	ldd	r24, Y+6	; 0x06
    7d5a:	88 23       	and	r24, r24
    7d5c:	11 f0       	breq	.+4      	; 0x7d62 <ds3231_get_epoch+0x38a>
    7d5e:	2c ef       	ldi	r18, 0xFC	; 252
    7d60:	01 c0       	rjmp	.+2      	; 0x7d64 <ds3231_get_epoch+0x38c>
    7d62:	20 e0       	ldi	r18, 0x00	; 0
    7d64:	8c a1       	ldd	r24, Y+36	; 0x24
    7d66:	9d a1       	ldd	r25, Y+37	; 0x25
    7d68:	fc 01       	movw	r30, r24
    7d6a:	20 83       	st	Z, r18
    7d6c:	8a 81       	ldd	r24, Y+2	; 0x02
    7d6e:	9b 81       	ldd	r25, Y+3	; 0x03
    7d70:	ac 81       	ldd	r26, Y+4	; 0x04
    7d72:	bd 81       	ldd	r27, Y+5	; 0x05
    7d74:	bc 01       	movw	r22, r24
    7d76:	cd 01       	movw	r24, r26
    7d78:	a5 96       	adiw	r28, 0x25	; 37
    7d7a:	cd bf       	out	0x3d, r28	; 61
    7d7c:	de bf       	out	0x3e, r29	; 62
    7d7e:	df 91       	pop	r29
    7d80:	cf 91       	pop	r28
    7d82:	1f 91       	pop	r17
    7d84:	0f 91       	pop	r16
    7d86:	ff 90       	pop	r15
    7d88:	ef 90       	pop	r14
    7d8a:	08 95       	ret

00007d8c <ds3231_get_temp>:
    7d8c:	cf 93       	push	r28
    7d8e:	df 93       	push	r29
    7d90:	cd b7       	in	r28, 0x3d	; 61
    7d92:	de b7       	in	r29, 0x3e	; 62
    7d94:	26 97       	sbiw	r28, 0x06	; 6
    7d96:	cd bf       	out	0x3d, r28	; 61
    7d98:	de bf       	out	0x3e, r29	; 62
    7d9a:	8d 83       	std	Y+5, r24	; 0x05
    7d9c:	9e 83       	std	Y+6, r25	; 0x06
    7d9e:	8a e0       	ldi	r24, 0x0A	; 10
    7da0:	89 83       	std	Y+1, r24	; 0x01
    7da2:	1b 82       	std	Y+3, r1	; 0x03
    7da4:	1c 82       	std	Y+4, r1	; 0x04
    7da6:	89 81       	ldd	r24, Y+1	; 0x01
    7da8:	9f ef       	ldi	r25, 0xFF	; 255
    7daa:	98 0f       	add	r25, r24
    7dac:	99 83       	std	Y+1, r25	; 0x01
    7dae:	88 23       	and	r24, r24
    7db0:	99 f0       	breq	.+38     	; 0x7dd8 <ds3231_get_temp+0x4c>
    7db2:	ce 01       	movw	r24, r28
    7db4:	03 96       	adiw	r24, 0x03	; 3
    7db6:	22 e0       	ldi	r18, 0x02	; 2
    7db8:	ac 01       	movw	r20, r24
    7dba:	61 e1       	ldi	r22, 0x11	; 17
    7dbc:	80 ed       	ldi	r24, 0xD0	; 208
    7dbe:	0e 94 5d 4a 	call	0x94ba	; 0x94ba <I2C_0_GetData>
    7dc2:	98 2f       	mov	r25, r24
    7dc4:	81 e0       	ldi	r24, 0x01	; 1
    7dc6:	92 30       	cpi	r25, 0x02	; 2
    7dc8:	09 f4       	brne	.+2      	; 0x7dcc <ds3231_get_temp+0x40>
    7dca:	80 e0       	ldi	r24, 0x00	; 0
    7dcc:	8a 83       	std	Y+2, r24	; 0x02
    7dce:	8a 81       	ldd	r24, Y+2	; 0x02
    7dd0:	88 23       	and	r24, r24
    7dd2:	11 f0       	breq	.+4      	; 0x7dd8 <ds3231_get_temp+0x4c>
    7dd4:	81 e0       	ldi	r24, 0x01	; 1
    7dd6:	01 c0       	rjmp	.+2      	; 0x7dda <ds3231_get_temp+0x4e>
    7dd8:	80 e0       	ldi	r24, 0x00	; 0
    7dda:	88 23       	and	r24, r24
    7ddc:	09 f0       	breq	.+2      	; 0x7de0 <ds3231_get_temp+0x54>
    7dde:	e3 cf       	rjmp	.-58     	; 0x7da6 <ds3231_get_temp+0x1a>
    7de0:	9a 81       	ldd	r25, Y+2	; 0x02
    7de2:	81 e0       	ldi	r24, 0x01	; 1
    7de4:	89 27       	eor	r24, r25
    7de6:	88 23       	and	r24, r24
    7de8:	19 f1       	breq	.+70     	; 0x7e30 <ds3231_get_temp+0xa4>
    7dea:	8b 81       	ldd	r24, Y+3	; 0x03
    7dec:	28 2f       	mov	r18, r24
    7dee:	30 e0       	ldi	r19, 0x00	; 0
    7df0:	8d 81       	ldd	r24, Y+5	; 0x05
    7df2:	9e 81       	ldd	r25, Y+6	; 0x06
    7df4:	fc 01       	movw	r30, r24
    7df6:	20 83       	st	Z, r18
    7df8:	31 83       	std	Z+1, r19	; 0x01
    7dfa:	8d 81       	ldd	r24, Y+5	; 0x05
    7dfc:	9e 81       	ldd	r25, Y+6	; 0x06
    7dfe:	fc 01       	movw	r30, r24
    7e00:	80 81       	ld	r24, Z
    7e02:	91 81       	ldd	r25, Z+1	; 0x01
    7e04:	38 2f       	mov	r19, r24
    7e06:	22 27       	eor	r18, r18
    7e08:	8d 81       	ldd	r24, Y+5	; 0x05
    7e0a:	9e 81       	ldd	r25, Y+6	; 0x06
    7e0c:	fc 01       	movw	r30, r24
    7e0e:	20 83       	st	Z, r18
    7e10:	31 83       	std	Z+1, r19	; 0x01
    7e12:	8d 81       	ldd	r24, Y+5	; 0x05
    7e14:	9e 81       	ldd	r25, Y+6	; 0x06
    7e16:	fc 01       	movw	r30, r24
    7e18:	20 81       	ld	r18, Z
    7e1a:	31 81       	ldd	r19, Z+1	; 0x01
    7e1c:	8c 81       	ldd	r24, Y+4	; 0x04
    7e1e:	88 2f       	mov	r24, r24
    7e20:	90 e0       	ldi	r25, 0x00	; 0
    7e22:	28 2b       	or	r18, r24
    7e24:	39 2b       	or	r19, r25
    7e26:	8d 81       	ldd	r24, Y+5	; 0x05
    7e28:	9e 81       	ldd	r25, Y+6	; 0x06
    7e2a:	fc 01       	movw	r30, r24
    7e2c:	20 83       	st	Z, r18
    7e2e:	31 83       	std	Z+1, r19	; 0x01
    7e30:	8a 81       	ldd	r24, Y+2	; 0x02
    7e32:	26 96       	adiw	r28, 0x06	; 6
    7e34:	cd bf       	out	0x3d, r28	; 61
    7e36:	de bf       	out	0x3e, r29	; 62
    7e38:	df 91       	pop	r29
    7e3a:	cf 91       	pop	r28
    7e3c:	08 95       	ret

00007e3e <ds3231_set_date_time_arducon>:
    7e3e:	cf 93       	push	r28
    7e40:	df 93       	push	r29
    7e42:	cd b7       	in	r28, 0x3d	; 61
    7e44:	de b7       	in	r29, 0x3e	; 62
    7e46:	2c 97       	sbiw	r28, 0x0c	; 12
    7e48:	cd bf       	out	0x3d, r28	; 61
    7e4a:	de bf       	out	0x3e, r29	; 62
    7e4c:	8a 87       	std	Y+10, r24	; 0x0a
    7e4e:	9b 87       	std	Y+11, r25	; 0x0b
    7e50:	6c 87       	std	Y+12, r22	; 0x0c
    7e52:	8a e0       	ldi	r24, 0x0A	; 10
    7e54:	89 83       	std	Y+1, r24	; 0x01
    7e56:	81 e0       	ldi	r24, 0x01	; 1
    7e58:	8a 83       	std	Y+2, r24	; 0x02
    7e5a:	27 e0       	ldi	r18, 0x07	; 7
    7e5c:	ce 01       	movw	r24, r28
    7e5e:	03 96       	adiw	r24, 0x03	; 3
    7e60:	fc 01       	movw	r30, r24
    7e62:	32 2f       	mov	r19, r18
    7e64:	11 92       	st	Z+, r1
    7e66:	3a 95       	dec	r19
    7e68:	e9 f7       	brne	.-6      	; 0x7e64 <ds3231_set_date_time_arducon+0x26>
    7e6a:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e6c:	9b 85       	ldd	r25, Y+11	; 0x0b
    7e6e:	89 2b       	or	r24, r25
    7e70:	09 f4       	brne	.+2      	; 0x7e74 <ds3231_set_date_time_arducon+0x36>
    7e72:	47 c0       	rjmp	.+142    	; 0x7f02 <ds3231_set_date_time_arducon+0xc4>
    7e74:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e76:	9b 85       	ldd	r25, Y+11	; 0x0b
    7e78:	0a 96       	adiw	r24, 0x0a	; 10
    7e7a:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7e7e:	8b 83       	std	Y+3, r24	; 0x03
    7e80:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e82:	9b 85       	ldd	r25, Y+11	; 0x0b
    7e84:	08 96       	adiw	r24, 0x08	; 8
    7e86:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7e8a:	8c 83       	std	Y+4, r24	; 0x04
    7e8c:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e8e:	9b 85       	ldd	r25, Y+11	; 0x0b
    7e90:	06 96       	adiw	r24, 0x06	; 6
    7e92:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7e96:	8d 83       	std	Y+5, r24	; 0x05
    7e98:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e9a:	9b 85       	ldd	r25, Y+11	; 0x0b
    7e9c:	04 96       	adiw	r24, 0x04	; 4
    7e9e:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7ea2:	8f 83       	std	Y+7, r24	; 0x07
    7ea4:	8a 85       	ldd	r24, Y+10	; 0x0a
    7ea6:	9b 85       	ldd	r25, Y+11	; 0x0b
    7ea8:	02 96       	adiw	r24, 0x02	; 2
    7eaa:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7eae:	88 87       	std	Y+8, r24	; 0x08
    7eb0:	8a 85       	ldd	r24, Y+10	; 0x0a
    7eb2:	9b 85       	ldd	r25, Y+11	; 0x0b
    7eb4:	0e 94 1c 3b 	call	0x7638	; 0x7638 <_Z8char2bcdPc>
    7eb8:	89 87       	std	Y+9, r24	; 0x09
    7eba:	89 81       	ldd	r24, Y+1	; 0x01
    7ebc:	9f ef       	ldi	r25, 0xFF	; 255
    7ebe:	98 0f       	add	r25, r24
    7ec0:	99 83       	std	Y+1, r25	; 0x01
    7ec2:	88 23       	and	r24, r24
    7ec4:	d1 f0       	breq	.+52     	; 0x7efa <ds3231_set_date_time_arducon+0xbc>
    7ec6:	9c 85       	ldd	r25, Y+12	; 0x0c
    7ec8:	89 2f       	mov	r24, r25
    7eca:	88 0f       	add	r24, r24
    7ecc:	88 0f       	add	r24, r24
    7ece:	88 0f       	add	r24, r24
    7ed0:	38 2f       	mov	r19, r24
    7ed2:	39 1b       	sub	r19, r25
    7ed4:	ce 01       	movw	r24, r28
    7ed6:	03 96       	adiw	r24, 0x03	; 3
    7ed8:	27 e0       	ldi	r18, 0x07	; 7
    7eda:	ac 01       	movw	r20, r24
    7edc:	63 2f       	mov	r22, r19
    7ede:	80 ed       	ldi	r24, 0xD0	; 208
    7ee0:	0e 94 f5 49 	call	0x93ea	; 0x93ea <I2C_0_SendData>
    7ee4:	98 2f       	mov	r25, r24
    7ee6:	81 e0       	ldi	r24, 0x01	; 1
    7ee8:	97 30       	cpi	r25, 0x07	; 7
    7eea:	09 f4       	brne	.+2      	; 0x7eee <ds3231_set_date_time_arducon+0xb0>
    7eec:	80 e0       	ldi	r24, 0x00	; 0
    7eee:	8a 83       	std	Y+2, r24	; 0x02
    7ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    7ef2:	88 23       	and	r24, r24
    7ef4:	11 f0       	breq	.+4      	; 0x7efa <ds3231_set_date_time_arducon+0xbc>
    7ef6:	81 e0       	ldi	r24, 0x01	; 1
    7ef8:	01 c0       	rjmp	.+2      	; 0x7efc <ds3231_set_date_time_arducon+0xbe>
    7efa:	80 e0       	ldi	r24, 0x00	; 0
    7efc:	88 23       	and	r24, r24
    7efe:	09 f0       	breq	.+2      	; 0x7f02 <ds3231_set_date_time_arducon+0xc4>
    7f00:	dc cf       	rjmp	.-72     	; 0x7eba <ds3231_set_date_time_arducon+0x7c>
    7f02:	8a 81       	ldd	r24, Y+2	; 0x02
    7f04:	2c 96       	adiw	r28, 0x0c	; 12
    7f06:	cd bf       	out	0x3d, r28	; 61
    7f08:	de bf       	out	0x3e, r29	; 62
    7f0a:	df 91       	pop	r29
    7f0c:	cf 91       	pop	r28
    7f0e:	08 95       	ret

00007f10 <ds3231_set_date_time>:
    7f10:	cf 93       	push	r28
    7f12:	df 93       	push	r29
    7f14:	cd b7       	in	r28, 0x3d	; 61
    7f16:	de b7       	in	r29, 0x3e	; 62
    7f18:	63 97       	sbiw	r28, 0x13	; 19
    7f1a:	cd bf       	out	0x3d, r28	; 61
    7f1c:	de bf       	out	0x3e, r29	; 62
    7f1e:	89 8b       	std	Y+17, r24	; 0x11
    7f20:	9a 8b       	std	Y+18, r25	; 0x12
    7f22:	6b 8b       	std	Y+19, r22	; 0x13
    7f24:	8a e0       	ldi	r24, 0x0A	; 10
    7f26:	89 83       	std	Y+1, r24	; 0x01
    7f28:	1a 86       	std	Y+10, r1	; 0x0a
    7f2a:	1b 86       	std	Y+11, r1	; 0x0b
    7f2c:	1c 86       	std	Y+12, r1	; 0x0c
    7f2e:	81 e0       	ldi	r24, 0x01	; 1
    7f30:	8d 87       	std	Y+13, r24	; 0x0d
    7f32:	1e 86       	std	Y+14, r1	; 0x0e
    7f34:	1f 86       	std	Y+15, r1	; 0x0f
    7f36:	18 8a       	std	Y+16, r1	; 0x10
    7f38:	80 ed       	ldi	r24, 0xD0	; 208
    7f3a:	97 e0       	ldi	r25, 0x07	; 7
    7f3c:	8a 83       	std	Y+2, r24	; 0x02
    7f3e:	9b 83       	std	Y+3, r25	; 0x03
    7f40:	89 89       	ldd	r24, Y+17	; 0x11
    7f42:	9a 89       	ldd	r25, Y+18	; 0x12
    7f44:	42 96       	adiw	r24, 0x12	; 18
    7f46:	fc 01       	movw	r30, r24
    7f48:	80 81       	ld	r24, Z
    7f4a:	80 53       	subi	r24, 0x30	; 48
    7f4c:	8a 87       	std	Y+10, r24	; 0x0a
    7f4e:	8a 85       	ldd	r24, Y+10	; 0x0a
    7f50:	28 2f       	mov	r18, r24
    7f52:	89 89       	ldd	r24, Y+17	; 0x11
    7f54:	9a 89       	ldd	r25, Y+18	; 0x12
    7f56:	41 96       	adiw	r24, 0x11	; 17
    7f58:	fc 01       	movw	r30, r24
    7f5a:	80 81       	ld	r24, Z
    7f5c:	88 2f       	mov	r24, r24
    7f5e:	90 e0       	ldi	r25, 0x00	; 0
    7f60:	c0 97       	sbiw	r24, 0x30	; 48
    7f62:	82 95       	swap	r24
    7f64:	92 95       	swap	r25
    7f66:	90 7f       	andi	r25, 0xF0	; 240
    7f68:	98 27       	eor	r25, r24
    7f6a:	80 7f       	andi	r24, 0xF0	; 240
    7f6c:	98 27       	eor	r25, r24
    7f6e:	82 2b       	or	r24, r18
    7f70:	8a 87       	std	Y+10, r24	; 0x0a
    7f72:	89 89       	ldd	r24, Y+17	; 0x11
    7f74:	9a 89       	ldd	r25, Y+18	; 0x12
    7f76:	0f 96       	adiw	r24, 0x0f	; 15
    7f78:	fc 01       	movw	r30, r24
    7f7a:	80 81       	ld	r24, Z
    7f7c:	80 53       	subi	r24, 0x30	; 48
    7f7e:	8b 87       	std	Y+11, r24	; 0x0b
    7f80:	8b 85       	ldd	r24, Y+11	; 0x0b
    7f82:	28 2f       	mov	r18, r24
    7f84:	89 89       	ldd	r24, Y+17	; 0x11
    7f86:	9a 89       	ldd	r25, Y+18	; 0x12
    7f88:	0e 96       	adiw	r24, 0x0e	; 14
    7f8a:	fc 01       	movw	r30, r24
    7f8c:	80 81       	ld	r24, Z
    7f8e:	88 2f       	mov	r24, r24
    7f90:	90 e0       	ldi	r25, 0x00	; 0
    7f92:	c0 97       	sbiw	r24, 0x30	; 48
    7f94:	82 95       	swap	r24
    7f96:	92 95       	swap	r25
    7f98:	90 7f       	andi	r25, 0xF0	; 240
    7f9a:	98 27       	eor	r25, r24
    7f9c:	80 7f       	andi	r24, 0xF0	; 240
    7f9e:	98 27       	eor	r25, r24
    7fa0:	82 2b       	or	r24, r18
    7fa2:	8b 87       	std	Y+11, r24	; 0x0b
    7fa4:	89 89       	ldd	r24, Y+17	; 0x11
    7fa6:	9a 89       	ldd	r25, Y+18	; 0x12
    7fa8:	0c 96       	adiw	r24, 0x0c	; 12
    7faa:	fc 01       	movw	r30, r24
    7fac:	80 81       	ld	r24, Z
    7fae:	80 53       	subi	r24, 0x30	; 48
    7fb0:	8c 87       	std	Y+12, r24	; 0x0c
    7fb2:	8c 85       	ldd	r24, Y+12	; 0x0c
    7fb4:	28 2f       	mov	r18, r24
    7fb6:	89 89       	ldd	r24, Y+17	; 0x11
    7fb8:	9a 89       	ldd	r25, Y+18	; 0x12
    7fba:	0b 96       	adiw	r24, 0x0b	; 11
    7fbc:	fc 01       	movw	r30, r24
    7fbe:	80 81       	ld	r24, Z
    7fc0:	88 2f       	mov	r24, r24
    7fc2:	90 e0       	ldi	r25, 0x00	; 0
    7fc4:	c0 97       	sbiw	r24, 0x30	; 48
    7fc6:	82 95       	swap	r24
    7fc8:	92 95       	swap	r25
    7fca:	90 7f       	andi	r25, 0xF0	; 240
    7fcc:	98 27       	eor	r25, r24
    7fce:	80 7f       	andi	r24, 0xF0	; 240
    7fd0:	98 27       	eor	r25, r24
    7fd2:	82 2b       	or	r24, r18
    7fd4:	8c 87       	std	Y+12, r24	; 0x0c
    7fd6:	89 89       	ldd	r24, Y+17	; 0x11
    7fd8:	9a 89       	ldd	r25, Y+18	; 0x12
    7fda:	09 96       	adiw	r24, 0x09	; 9
    7fdc:	fc 01       	movw	r30, r24
    7fde:	80 81       	ld	r24, Z
    7fe0:	80 53       	subi	r24, 0x30	; 48
    7fe2:	8e 87       	std	Y+14, r24	; 0x0e
    7fe4:	8f 85       	ldd	r24, Y+15	; 0x0f
    7fe6:	88 2f       	mov	r24, r24
    7fe8:	90 e0       	ldi	r25, 0x00	; 0
    7fea:	8c 83       	std	Y+4, r24	; 0x04
    7fec:	9d 83       	std	Y+5, r25	; 0x05
    7fee:	89 89       	ldd	r24, Y+17	; 0x11
    7ff0:	9a 89       	ldd	r25, Y+18	; 0x12
    7ff2:	08 96       	adiw	r24, 0x08	; 8
    7ff4:	fc 01       	movw	r30, r24
    7ff6:	80 81       	ld	r24, Z
    7ff8:	88 2f       	mov	r24, r24
    7ffa:	90 e0       	ldi	r25, 0x00	; 0
    7ffc:	c0 97       	sbiw	r24, 0x30	; 48
    7ffe:	8e 83       	std	Y+6, r24	; 0x06
    8000:	9f 83       	std	Y+7, r25	; 0x07
    8002:	8e 81       	ldd	r24, Y+6	; 0x06
    8004:	9f 81       	ldd	r25, Y+7	; 0x07
    8006:	88 0f       	add	r24, r24
    8008:	99 1f       	adc	r25, r25
    800a:	9c 01       	movw	r18, r24
    800c:	22 0f       	add	r18, r18
    800e:	33 1f       	adc	r19, r19
    8010:	22 0f       	add	r18, r18
    8012:	33 1f       	adc	r19, r19
    8014:	82 0f       	add	r24, r18
    8016:	93 1f       	adc	r25, r19
    8018:	2c 81       	ldd	r18, Y+4	; 0x04
    801a:	3d 81       	ldd	r19, Y+5	; 0x05
    801c:	82 0f       	add	r24, r18
    801e:	93 1f       	adc	r25, r19
    8020:	8c 83       	std	Y+4, r24	; 0x04
    8022:	9d 83       	std	Y+5, r25	; 0x05
    8024:	8e 85       	ldd	r24, Y+14	; 0x0e
    8026:	28 2f       	mov	r18, r24
    8028:	8e 81       	ldd	r24, Y+6	; 0x06
    802a:	9f 81       	ldd	r25, Y+7	; 0x07
    802c:	82 95       	swap	r24
    802e:	92 95       	swap	r25
    8030:	90 7f       	andi	r25, 0xF0	; 240
    8032:	98 27       	eor	r25, r24
    8034:	80 7f       	andi	r24, 0xF0	; 240
    8036:	98 27       	eor	r25, r24
    8038:	82 2b       	or	r24, r18
    803a:	8e 87       	std	Y+14, r24	; 0x0e
    803c:	89 89       	ldd	r24, Y+17	; 0x11
    803e:	9a 89       	ldd	r25, Y+18	; 0x12
    8040:	06 96       	adiw	r24, 0x06	; 6
    8042:	fc 01       	movw	r30, r24
    8044:	80 81       	ld	r24, Z
    8046:	80 53       	subi	r24, 0x30	; 48
    8048:	8f 87       	std	Y+15, r24	; 0x0f
    804a:	88 89       	ldd	r24, Y+16	; 0x10
    804c:	88 2f       	mov	r24, r24
    804e:	90 e0       	ldi	r25, 0x00	; 0
    8050:	88 87       	std	Y+8, r24	; 0x08
    8052:	99 87       	std	Y+9, r25	; 0x09
    8054:	89 89       	ldd	r24, Y+17	; 0x11
    8056:	9a 89       	ldd	r25, Y+18	; 0x12
    8058:	05 96       	adiw	r24, 0x05	; 5
    805a:	fc 01       	movw	r30, r24
    805c:	80 81       	ld	r24, Z
    805e:	88 2f       	mov	r24, r24
    8060:	90 e0       	ldi	r25, 0x00	; 0
    8062:	c0 97       	sbiw	r24, 0x30	; 48
    8064:	8e 83       	std	Y+6, r24	; 0x06
    8066:	9f 83       	std	Y+7, r25	; 0x07
    8068:	8e 81       	ldd	r24, Y+6	; 0x06
    806a:	9f 81       	ldd	r25, Y+7	; 0x07
    806c:	88 0f       	add	r24, r24
    806e:	99 1f       	adc	r25, r25
    8070:	9c 01       	movw	r18, r24
    8072:	22 0f       	add	r18, r18
    8074:	33 1f       	adc	r19, r19
    8076:	22 0f       	add	r18, r18
    8078:	33 1f       	adc	r19, r19
    807a:	82 0f       	add	r24, r18
    807c:	93 1f       	adc	r25, r19
    807e:	28 85       	ldd	r18, Y+8	; 0x08
    8080:	39 85       	ldd	r19, Y+9	; 0x09
    8082:	82 0f       	add	r24, r18
    8084:	93 1f       	adc	r25, r19
    8086:	88 87       	std	Y+8, r24	; 0x08
    8088:	99 87       	std	Y+9, r25	; 0x09
    808a:	8f 85       	ldd	r24, Y+15	; 0x0f
    808c:	28 2f       	mov	r18, r24
    808e:	8e 81       	ldd	r24, Y+6	; 0x06
    8090:	9f 81       	ldd	r25, Y+7	; 0x07
    8092:	82 95       	swap	r24
    8094:	92 95       	swap	r25
    8096:	90 7f       	andi	r25, 0xF0	; 240
    8098:	98 27       	eor	r25, r24
    809a:	80 7f       	andi	r24, 0xF0	; 240
    809c:	98 27       	eor	r25, r24
    809e:	82 2b       	or	r24, r18
    80a0:	8f 87       	std	Y+15, r24	; 0x0f
    80a2:	89 89       	ldd	r24, Y+17	; 0x11
    80a4:	9a 89       	ldd	r25, Y+18	; 0x12
    80a6:	03 96       	adiw	r24, 0x03	; 3
    80a8:	fc 01       	movw	r30, r24
    80aa:	80 81       	ld	r24, Z
    80ac:	80 53       	subi	r24, 0x30	; 48
    80ae:	88 8b       	std	Y+16, r24	; 0x10
    80b0:	89 89       	ldd	r24, Y+17	; 0x11
    80b2:	88 2f       	mov	r24, r24
    80b4:	90 e0       	ldi	r25, 0x00	; 0
    80b6:	2a 81       	ldd	r18, Y+2	; 0x02
    80b8:	3b 81       	ldd	r19, Y+3	; 0x03
    80ba:	82 0f       	add	r24, r18
    80bc:	93 1f       	adc	r25, r19
    80be:	8a 83       	std	Y+2, r24	; 0x02
    80c0:	9b 83       	std	Y+3, r25	; 0x03
    80c2:	89 89       	ldd	r24, Y+17	; 0x11
    80c4:	9a 89       	ldd	r25, Y+18	; 0x12
    80c6:	02 96       	adiw	r24, 0x02	; 2
    80c8:	fc 01       	movw	r30, r24
    80ca:	80 81       	ld	r24, Z
    80cc:	88 2f       	mov	r24, r24
    80ce:	90 e0       	ldi	r25, 0x00	; 0
    80d0:	c0 97       	sbiw	r24, 0x30	; 48
    80d2:	8e 83       	std	Y+6, r24	; 0x06
    80d4:	9f 83       	std	Y+7, r25	; 0x07
    80d6:	8e 81       	ldd	r24, Y+6	; 0x06
    80d8:	9f 81       	ldd	r25, Y+7	; 0x07
    80da:	88 0f       	add	r24, r24
    80dc:	99 1f       	adc	r25, r25
    80de:	9c 01       	movw	r18, r24
    80e0:	22 0f       	add	r18, r18
    80e2:	33 1f       	adc	r19, r19
    80e4:	22 0f       	add	r18, r18
    80e6:	33 1f       	adc	r19, r19
    80e8:	82 0f       	add	r24, r18
    80ea:	93 1f       	adc	r25, r19
    80ec:	2a 81       	ldd	r18, Y+2	; 0x02
    80ee:	3b 81       	ldd	r19, Y+3	; 0x03
    80f0:	82 0f       	add	r24, r18
    80f2:	93 1f       	adc	r25, r19
    80f4:	8a 83       	std	Y+2, r24	; 0x02
    80f6:	9b 83       	std	Y+3, r25	; 0x03
    80f8:	88 89       	ldd	r24, Y+16	; 0x10
    80fa:	28 2f       	mov	r18, r24
    80fc:	8e 81       	ldd	r24, Y+6	; 0x06
    80fe:	9f 81       	ldd	r25, Y+7	; 0x07
    8100:	82 95       	swap	r24
    8102:	92 95       	swap	r25
    8104:	90 7f       	andi	r25, 0xF0	; 240
    8106:	98 27       	eor	r25, r24
    8108:	80 7f       	andi	r24, 0xF0	; 240
    810a:	98 27       	eor	r25, r24
    810c:	82 2b       	or	r24, r18
    810e:	88 8b       	std	Y+16, r24	; 0x10
    8110:	89 81       	ldd	r24, Y+1	; 0x01
    8112:	9f ef       	ldi	r25, 0xFF	; 255
    8114:	98 0f       	add	r25, r24
    8116:	99 83       	std	Y+1, r25	; 0x01
    8118:	88 23       	and	r24, r24
    811a:	99 f0       	breq	.+38     	; 0x8142 <__RODATA_PM_OFFSET__+0x142>
    811c:	9b 89       	ldd	r25, Y+19	; 0x13
    811e:	89 2f       	mov	r24, r25
    8120:	88 0f       	add	r24, r24
    8122:	88 0f       	add	r24, r24
    8124:	88 0f       	add	r24, r24
    8126:	38 2f       	mov	r19, r24
    8128:	39 1b       	sub	r19, r25
    812a:	ce 01       	movw	r24, r28
    812c:	0a 96       	adiw	r24, 0x0a	; 10
    812e:	27 e0       	ldi	r18, 0x07	; 7
    8130:	ac 01       	movw	r20, r24
    8132:	63 2f       	mov	r22, r19
    8134:	80 ed       	ldi	r24, 0xD0	; 208
    8136:	0e 94 f5 49 	call	0x93ea	; 0x93ea <I2C_0_SendData>
    813a:	87 30       	cpi	r24, 0x07	; 7
    813c:	11 f0       	breq	.+4      	; 0x8142 <__RODATA_PM_OFFSET__+0x142>
    813e:	81 e0       	ldi	r24, 0x01	; 1
    8140:	01 c0       	rjmp	.+2      	; 0x8144 <__RODATA_PM_OFFSET__+0x144>
    8142:	80 e0       	ldi	r24, 0x00	; 0
    8144:	88 23       	and	r24, r24
    8146:	09 f0       	breq	.+2      	; 0x814a <__RODATA_PM_OFFSET__+0x14a>
    8148:	e3 cf       	rjmp	.-58     	; 0x8110 <__RODATA_PM_OFFSET__+0x110>
    814a:	00 00       	nop
    814c:	63 96       	adiw	r28, 0x13	; 19
    814e:	cd bf       	out	0x3d, r28	; 61
    8150:	de bf       	out	0x3e, r29	; 62
    8152:	df 91       	pop	r29
    8154:	cf 91       	pop	r28
    8156:	08 95       	ret

00008158 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    8158:	cf 93       	push	r28
    815a:	df 93       	push	r29
    815c:	00 d0       	rcall	.+0      	; 0x815e <ds3231_1s_sqw+0x6>
    815e:	00 d0       	rcall	.+0      	; 0x8160 <ds3231_1s_sqw+0x8>
    8160:	cd b7       	in	r28, 0x3d	; 61
    8162:	de b7       	in	r29, 0x3e	; 62
    8164:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8166:	8a e0       	ldi	r24, 0x0A	; 10
    8168:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    816a:	8c 81       	ldd	r24, Y+4	; 0x04
    816c:	88 23       	and	r24, r24
    816e:	11 f0       	breq	.+4      	; 0x8174 <ds3231_1s_sqw+0x1c>
    8170:	80 e0       	ldi	r24, 0x00	; 0
    8172:	01 c0       	rjmp	.+2      	; 0x8176 <ds3231_1s_sqw+0x1e>
    8174:	84 e0       	ldi	r24, 0x04	; 4
    8176:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    8178:	89 81       	ldd	r24, Y+1	; 0x01
    817a:	9f ef       	ldi	r25, 0xFF	; 255
    817c:	98 0f       	add	r25, r24
    817e:	99 83       	std	Y+1, r25	; 0x01
    8180:	88 23       	and	r24, r24
    8182:	99 f0       	breq	.+38     	; 0x81aa <ds3231_1s_sqw+0x52>
    8184:	ce 01       	movw	r24, r28
    8186:	03 96       	adiw	r24, 0x03	; 3
    8188:	21 e0       	ldi	r18, 0x01	; 1
    818a:	ac 01       	movw	r20, r24
    818c:	6e e0       	ldi	r22, 0x0E	; 14
    818e:	80 ed       	ldi	r24, 0xD0	; 208
    8190:	0e 94 f5 49 	call	0x93ea	; 0x93ea <I2C_0_SendData>
    8194:	98 2f       	mov	r25, r24
    8196:	81 e0       	ldi	r24, 0x01	; 1
    8198:	91 30       	cpi	r25, 0x01	; 1
    819a:	09 f4       	brne	.+2      	; 0x819e <ds3231_1s_sqw+0x46>
    819c:	80 e0       	ldi	r24, 0x00	; 0
    819e:	8a 83       	std	Y+2, r24	; 0x02
    81a0:	8a 81       	ldd	r24, Y+2	; 0x02
    81a2:	88 23       	and	r24, r24
    81a4:	11 f0       	breq	.+4      	; 0x81aa <ds3231_1s_sqw+0x52>
    81a6:	81 e0       	ldi	r24, 0x01	; 1
    81a8:	01 c0       	rjmp	.+2      	; 0x81ac <ds3231_1s_sqw+0x54>
    81aa:	80 e0       	ldi	r24, 0x00	; 0
    81ac:	88 23       	and	r24, r24
    81ae:	09 f0       	breq	.+2      	; 0x81b2 <ds3231_1s_sqw+0x5a>
    81b0:	e3 cf       	rjmp	.-58     	; 0x8178 <ds3231_1s_sqw+0x20>
		
		return(failure);
    81b2:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    81b4:	24 96       	adiw	r28, 0x04	; 4
    81b6:	cd bf       	out	0x3d, r28	; 61
    81b8:	de bf       	out	0x3e, r29	; 62
    81ba:	df 91       	pop	r29
    81bc:	cf 91       	pop	r28
    81be:	08 95       	ret

000081c0 <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    81c0:	cf 93       	push	r28
    81c2:	df 93       	push	r29
    81c4:	00 d0       	rcall	.+0      	; 0x81c6 <ds3231_set_aging+0x6>
    81c6:	00 d0       	rcall	.+0      	; 0x81c8 <ds3231_set_aging+0x8>
    81c8:	cd b7       	in	r28, 0x3d	; 61
    81ca:	de b7       	in	r29, 0x3e	; 62
    81cc:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    81ce:	8a e0       	ldi	r24, 0x0A	; 10
    81d0:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    81d2:	8c 81       	ldd	r24, Y+4	; 0x04
    81d4:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    81d6:	89 81       	ldd	r24, Y+1	; 0x01
    81d8:	9f ef       	ldi	r25, 0xFF	; 255
    81da:	98 0f       	add	r25, r24
    81dc:	99 83       	std	Y+1, r25	; 0x01
    81de:	88 23       	and	r24, r24
    81e0:	99 f0       	breq	.+38     	; 0x8208 <ds3231_set_aging+0x48>
    81e2:	ce 01       	movw	r24, r28
    81e4:	03 96       	adiw	r24, 0x03	; 3
    81e6:	21 e0       	ldi	r18, 0x01	; 1
    81e8:	ac 01       	movw	r20, r24
    81ea:	60 e1       	ldi	r22, 0x10	; 16
    81ec:	80 ed       	ldi	r24, 0xD0	; 208
    81ee:	0e 94 f5 49 	call	0x93ea	; 0x93ea <I2C_0_SendData>
    81f2:	98 2f       	mov	r25, r24
    81f4:	81 e0       	ldi	r24, 0x01	; 1
    81f6:	91 30       	cpi	r25, 0x01	; 1
    81f8:	09 f4       	brne	.+2      	; 0x81fc <ds3231_set_aging+0x3c>
    81fa:	80 e0       	ldi	r24, 0x00	; 0
    81fc:	8a 83       	std	Y+2, r24	; 0x02
    81fe:	8a 81       	ldd	r24, Y+2	; 0x02
    8200:	88 23       	and	r24, r24
    8202:	11 f0       	breq	.+4      	; 0x8208 <ds3231_set_aging+0x48>
    8204:	81 e0       	ldi	r24, 0x01	; 1
    8206:	01 c0       	rjmp	.+2      	; 0x820a <ds3231_set_aging+0x4a>
    8208:	80 e0       	ldi	r24, 0x00	; 0
    820a:	88 23       	and	r24, r24
    820c:	09 f0       	breq	.+2      	; 0x8210 <ds3231_set_aging+0x50>
    820e:	e3 cf       	rjmp	.-58     	; 0x81d6 <ds3231_set_aging+0x16>
		return(failure);
    8210:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    8212:	24 96       	adiw	r28, 0x04	; 4
    8214:	cd bf       	out	0x3d, r28	; 61
    8216:	de bf       	out	0x3e, r29	; 62
    8218:	df 91       	pop	r29
    821a:	cf 91       	pop	r28
    821c:	08 95       	ret

0000821e <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    821e:	cf 93       	push	r28
    8220:	df 93       	push	r29
    8222:	00 d0       	rcall	.+0      	; 0x8224 <ds3231_get_aging+0x6>
    8224:	1f 92       	push	r1
    8226:	cd b7       	in	r28, 0x3d	; 61
    8228:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    822a:	8a e0       	ldi	r24, 0x0A	; 10
    822c:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    822e:	89 81       	ldd	r24, Y+1	; 0x01
    8230:	9f ef       	ldi	r25, 0xFF	; 255
    8232:	98 0f       	add	r25, r24
    8234:	99 83       	std	Y+1, r25	; 0x01
    8236:	88 23       	and	r24, r24
    8238:	99 f0       	breq	.+38     	; 0x8260 <ds3231_get_aging+0x42>
    823a:	ce 01       	movw	r24, r28
    823c:	03 96       	adiw	r24, 0x03	; 3
    823e:	21 e0       	ldi	r18, 0x01	; 1
    8240:	ac 01       	movw	r20, r24
    8242:	60 e1       	ldi	r22, 0x10	; 16
    8244:	80 ed       	ldi	r24, 0xD0	; 208
    8246:	0e 94 5d 4a 	call	0x94ba	; 0x94ba <I2C_0_GetData>
    824a:	98 2f       	mov	r25, r24
    824c:	81 e0       	ldi	r24, 0x01	; 1
    824e:	91 30       	cpi	r25, 0x01	; 1
    8250:	09 f4       	brne	.+2      	; 0x8254 <ds3231_get_aging+0x36>
    8252:	80 e0       	ldi	r24, 0x00	; 0
    8254:	8a 83       	std	Y+2, r24	; 0x02
    8256:	8a 81       	ldd	r24, Y+2	; 0x02
    8258:	88 23       	and	r24, r24
    825a:	11 f0       	breq	.+4      	; 0x8260 <ds3231_get_aging+0x42>
    825c:	81 e0       	ldi	r24, 0x01	; 1
    825e:	01 c0       	rjmp	.+2      	; 0x8262 <ds3231_get_aging+0x44>
    8260:	80 e0       	ldi	r24, 0x00	; 0
    8262:	88 23       	and	r24, r24
    8264:	09 f0       	breq	.+2      	; 0x8268 <ds3231_get_aging+0x4a>
    8266:	e3 cf       	rjmp	.-58     	; 0x822e <ds3231_get_aging+0x10>
		return(data[0]);
    8268:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    826a:	23 96       	adiw	r28, 0x03	; 3
    826c:	cd bf       	out	0x3d, r28	; 61
    826e:	de bf       	out	0x3e, r29	; 62
    8270:	df 91       	pop	r29
    8272:	cf 91       	pop	r28
    8274:	08 95       	ret

00008276 <ds3231_responding>:

	bool ds3231_responding()
	{
    8276:	cf 93       	push	r28
    8278:	df 93       	push	r29
    827a:	00 d0       	rcall	.+0      	; 0x827c <ds3231_responding+0x6>
    827c:	1f 92       	push	r1
    827e:	cd b7       	in	r28, 0x3d	; 61
    8280:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    8282:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 10;
    8284:	8a e0       	ldi	r24, 0x0A	; 10
    8286:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    8288:	8a 81       	ldd	r24, Y+2	; 0x02
    828a:	9f ef       	ldi	r25, 0xFF	; 255
    828c:	98 0f       	add	r25, r24
    828e:	9a 83       	std	Y+2, r25	; 0x02
    8290:	88 23       	and	r24, r24
    8292:	a9 f0       	breq	.+42     	; 0x82be <ds3231_responding+0x48>
    8294:	ce 01       	movw	r24, r28
    8296:	03 96       	adiw	r24, 0x03	; 3
    8298:	21 e0       	ldi	r18, 0x01	; 1
    829a:	ac 01       	movw	r20, r24
    829c:	60 e1       	ldi	r22, 0x10	; 16
    829e:	80 ed       	ldi	r24, 0xD0	; 208
    82a0:	0e 94 5d 4a 	call	0x94ba	; 0x94ba <I2C_0_GetData>
    82a4:	98 2f       	mov	r25, r24
    82a6:	81 e0       	ldi	r24, 0x01	; 1
    82a8:	91 30       	cpi	r25, 0x01	; 1
    82aa:	09 f0       	breq	.+2      	; 0x82ae <ds3231_responding+0x38>
    82ac:	80 e0       	ldi	r24, 0x00	; 0
    82ae:	89 83       	std	Y+1, r24	; 0x01
    82b0:	99 81       	ldd	r25, Y+1	; 0x01
    82b2:	81 e0       	ldi	r24, 0x01	; 1
    82b4:	89 27       	eor	r24, r25
    82b6:	88 23       	and	r24, r24
    82b8:	11 f0       	breq	.+4      	; 0x82be <ds3231_responding+0x48>
    82ba:	81 e0       	ldi	r24, 0x01	; 1
    82bc:	01 c0       	rjmp	.+2      	; 0x82c0 <ds3231_responding+0x4a>
    82be:	80 e0       	ldi	r24, 0x00	; 0
    82c0:	88 23       	and	r24, r24
    82c2:	09 f0       	breq	.+2      	; 0x82c6 <ds3231_responding+0x50>
    82c4:	e1 cf       	rjmp	.-62     	; 0x8288 <ds3231_responding+0x12>
		return(responseReceived);
    82c6:	89 81       	ldd	r24, Y+1	; 0x01
	}
    82c8:	23 96       	adiw	r28, 0x03	; 3
    82ca:	cd bf       	out	0x3d, r28	; 61
    82cc:	de bf       	out	0x3e, r29	; 62
    82ce:	df 91       	pop	r29
    82d0:	cf 91       	pop	r28
    82d2:	08 95       	ret

000082d4 <ds3231_sync2nearestMinute>:

/* This simple synchronization approach works for all times except 12 midnight. If synchronization
results in the advancement to the next day, then one day would be lost. Instead of introducing that
error, this function merely fails to synchronize at midnight. */
bool ds3231_sync2nearestMinute()
{
    82d4:	cf 93       	push	r28
    82d6:	df 93       	push	r29
    82d8:	cd b7       	in	r28, 0x3d	; 61
    82da:	de b7       	in	r29, 0x3e	; 62
    82dc:	61 97       	sbiw	r28, 0x11	; 17
    82de:	cd bf       	out	0x3d, r28	; 61
    82e0:	de bf       	out	0x3e, r29	; 62
	uint8_t tries = 10; /* try several times in case of transient bus issues */
    82e2:	8a e0       	ldi	r24, 0x0A	; 10
    82e4:	89 83       	std	Y+1, r24	; 0x01
	bool err = false;
    82e6:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t data[8] = { 0, 0, 0 };
    82e8:	28 e0       	ldi	r18, 0x08	; 8
    82ea:	ce 01       	movw	r24, r28
    82ec:	0a 96       	adiw	r24, 0x0a	; 10
    82ee:	fc 01       	movw	r30, r24
    82f0:	32 2f       	mov	r19, r18
    82f2:	11 92       	st	Z+, r1
    82f4:	3a 95       	dec	r19
    82f6:	e9 f7       	brne	.-6      	; 0x82f2 <ds3231_sync2nearestMinute+0x1e>
		
	while(tries-- && (err = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 3) != 3)));
    82f8:	89 81       	ldd	r24, Y+1	; 0x01
    82fa:	9f ef       	ldi	r25, 0xFF	; 255
    82fc:	98 0f       	add	r25, r24
    82fe:	99 83       	std	Y+1, r25	; 0x01
    8300:	88 23       	and	r24, r24
    8302:	99 f0       	breq	.+38     	; 0x832a <ds3231_sync2nearestMinute+0x56>
    8304:	ce 01       	movw	r24, r28
    8306:	0a 96       	adiw	r24, 0x0a	; 10
    8308:	23 e0       	ldi	r18, 0x03	; 3
    830a:	ac 01       	movw	r20, r24
    830c:	60 e0       	ldi	r22, 0x00	; 0
    830e:	80 ed       	ldi	r24, 0xD0	; 208
    8310:	0e 94 5d 4a 	call	0x94ba	; 0x94ba <I2C_0_GetData>
    8314:	98 2f       	mov	r25, r24
    8316:	81 e0       	ldi	r24, 0x01	; 1
    8318:	93 30       	cpi	r25, 0x03	; 3
    831a:	09 f4       	brne	.+2      	; 0x831e <ds3231_sync2nearestMinute+0x4a>
    831c:	80 e0       	ldi	r24, 0x00	; 0
    831e:	8a 83       	std	Y+2, r24	; 0x02
    8320:	8a 81       	ldd	r24, Y+2	; 0x02
    8322:	88 23       	and	r24, r24
    8324:	11 f0       	breq	.+4      	; 0x832a <ds3231_sync2nearestMinute+0x56>
    8326:	81 e0       	ldi	r24, 0x01	; 1
    8328:	01 c0       	rjmp	.+2      	; 0x832c <ds3231_sync2nearestMinute+0x58>
    832a:	80 e0       	ldi	r24, 0x00	; 0
    832c:	88 23       	and	r24, r24
    832e:	09 f0       	breq	.+2      	; 0x8332 <ds3231_sync2nearestMinute+0x5e>
    8330:	e3 cf       	rjmp	.-58     	; 0x82f8 <ds3231_sync2nearestMinute+0x24>

	if(!err)
    8332:	9a 81       	ldd	r25, Y+2	; 0x02
    8334:	81 e0       	ldi	r24, 0x01	; 1
    8336:	89 27       	eor	r24, r25
    8338:	88 23       	and	r24, r24
    833a:	09 f4       	brne	.+2      	; 0x833e <ds3231_sync2nearestMinute+0x6a>
    833c:	ad c0       	rjmp	.+346    	; 0x8498 <ds3231_sync2nearestMinute+0x1c4>
		uint8_t hour10;
		uint8_t hour;
		bool am_pm;
		bool twelvehour;

		seconds = bcd2dec(data[0]);
    833e:	8a 85       	ldd	r24, Y+10	; 0x0a
    8340:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    8344:	8e 83       	std	Y+6, r24	; 0x06
		minutes = bcd2dec(data[1]);
    8346:	8b 85       	ldd	r24, Y+11	; 0x0b
    8348:	0e 94 cb 3a 	call	0x7596	; 0x7596 <_Z7bcd2dech>
    834c:	8c 83       	std	Y+4, r24	; 0x04
		am_pm = ((data[2] >> 5) & 0x01);
    834e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8350:	88 2f       	mov	r24, r24
    8352:	90 e0       	ldi	r25, 0x00	; 0
    8354:	80 72       	andi	r24, 0x20	; 32
    8356:	99 27       	eor	r25, r25
    8358:	21 e0       	ldi	r18, 0x01	; 1
    835a:	89 2b       	or	r24, r25
    835c:	09 f4       	brne	.+2      	; 0x8360 <ds3231_sync2nearestMinute+0x8c>
    835e:	20 e0       	ldi	r18, 0x00	; 0
    8360:	2f 83       	std	Y+7, r18	; 0x07
		hour10 = ((data[2] >> 4) & 0x01);
    8362:	8c 85       	ldd	r24, Y+12	; 0x0c
    8364:	88 2f       	mov	r24, r24
    8366:	90 e0       	ldi	r25, 0x00	; 0
    8368:	95 95       	asr	r25
    836a:	87 95       	ror	r24
    836c:	95 95       	asr	r25
    836e:	87 95       	ror	r24
    8370:	95 95       	asr	r25
    8372:	87 95       	ror	r24
    8374:	95 95       	asr	r25
    8376:	87 95       	ror	r24
    8378:	81 70       	andi	r24, 0x01	; 1
    837a:	8d 83       	std	Y+5, r24	; 0x05
		hour = (data[2] & 0x0f);
    837c:	8c 85       	ldd	r24, Y+12	; 0x0c
    837e:	8f 70       	andi	r24, 0x0F	; 15
    8380:	88 87       	std	Y+8, r24	; 0x08

		twelvehour = ((data[2] >> 6) & 0x01);
    8382:	8c 85       	ldd	r24, Y+12	; 0x0c
    8384:	88 2f       	mov	r24, r24
    8386:	90 e0       	ldi	r25, 0x00	; 0
    8388:	80 74       	andi	r24, 0x40	; 64
    838a:	99 27       	eor	r25, r25
    838c:	21 e0       	ldi	r18, 0x01	; 1
    838e:	89 2b       	or	r24, r25
    8390:	09 f4       	brne	.+2      	; 0x8394 <ds3231_sync2nearestMinute+0xc0>
    8392:	20 e0       	ldi	r18, 0x00	; 0
    8394:	29 87       	std	Y+9, r18	; 0x09

		if(!twelvehour && am_pm)
    8396:	99 85       	ldd	r25, Y+9	; 0x09
    8398:	81 e0       	ldi	r24, 0x01	; 1
    839a:	89 27       	eor	r24, r25
    839c:	88 23       	and	r24, r24
    839e:	29 f0       	breq	.+10     	; 0x83aa <ds3231_sync2nearestMinute+0xd6>
    83a0:	8f 81       	ldd	r24, Y+7	; 0x07
    83a2:	88 23       	and	r24, r24
    83a4:	11 f0       	breq	.+4      	; 0x83aa <ds3231_sync2nearestMinute+0xd6>
		{
			hour10 = 2;
    83a6:	82 e0       	ldi	r24, 0x02	; 2
    83a8:	8d 83       	std	Y+5, r24	; 0x05
		}

		hours = 10 * hour10 + hour;
    83aa:	8d 81       	ldd	r24, Y+5	; 0x05
    83ac:	88 0f       	add	r24, r24
    83ae:	98 2f       	mov	r25, r24
    83b0:	99 0f       	add	r25, r25
    83b2:	99 0f       	add	r25, r25
    83b4:	98 0f       	add	r25, r24
    83b6:	88 85       	ldd	r24, Y+8	; 0x08
    83b8:	89 0f       	add	r24, r25
    83ba:	8b 83       	std	Y+3, r24	; 0x03

		if(seconds > 30)
    83bc:	8e 81       	ldd	r24, Y+6	; 0x06
    83be:	8f 31       	cpi	r24, 0x1F	; 31
    83c0:	78 f0       	brcs	.+30     	; 0x83e0 <ds3231_sync2nearestMinute+0x10c>
		{
			minutes++;
    83c2:	8c 81       	ldd	r24, Y+4	; 0x04
    83c4:	8f 5f       	subi	r24, 0xFF	; 255
    83c6:	8c 83       	std	Y+4, r24	; 0x04

			if(minutes > 59)
    83c8:	8c 81       	ldd	r24, Y+4	; 0x04
    83ca:	8c 33       	cpi	r24, 0x3C	; 60
    83cc:	48 f0       	brcs	.+18     	; 0x83e0 <ds3231_sync2nearestMinute+0x10c>
			{
				minutes = 0;
    83ce:	1c 82       	std	Y+4, r1	; 0x04
				hours++;
    83d0:	8b 81       	ldd	r24, Y+3	; 0x03
    83d2:	8f 5f       	subi	r24, 0xFF	; 255
    83d4:	8b 83       	std	Y+3, r24	; 0x03

				if(hours > 23) /* Don't attempt to synchronize at midnight */
    83d6:	8b 81       	ldd	r24, Y+3	; 0x03
    83d8:	88 31       	cpi	r24, 0x18	; 24
    83da:	10 f0       	brcs	.+4      	; 0x83e0 <ds3231_sync2nearestMinute+0x10c>
				{
					err = true;
    83dc:	81 e0       	ldi	r24, 0x01	; 1
    83de:	8a 83       	std	Y+2, r24	; 0x02
				}
			}
		}

		if(!err)
    83e0:	9a 81       	ldd	r25, Y+2	; 0x02
    83e2:	81 e0       	ldi	r24, 0x01	; 1
    83e4:	89 27       	eor	r24, r25
    83e6:	88 23       	and	r24, r24
    83e8:	09 f4       	brne	.+2      	; 0x83ec <ds3231_sync2nearestMinute+0x118>
    83ea:	56 c0       	rjmp	.+172    	; 0x8498 <ds3231_sync2nearestMinute+0x1c4>
		{
			data[0] = 0; /* seconds = 00 */
    83ec:	1a 86       	std	Y+10, r1	; 0x0a
			data[1] = dec2bcd(minutes);
    83ee:	8c 81       	ldd	r24, Y+4	; 0x04
    83f0:	0e 94 eb 3a 	call	0x75d6	; 0x75d6 <_Z7dec2bcdh>
    83f4:	8b 87       	std	Y+11, r24	; 0x0b
			data[2] = 0;
    83f6:	1c 86       	std	Y+12, r1	; 0x0c

			if(twelvehour)
    83f8:	89 85       	ldd	r24, Y+9	; 0x09
    83fa:	88 23       	and	r24, r24
    83fc:	81 f0       	breq	.+32     	; 0x841e <ds3231_sync2nearestMinute+0x14a>
			{
				data[2] |= 0x40; /* set  12-hour bit */
    83fe:	8c 85       	ldd	r24, Y+12	; 0x0c
    8400:	80 64       	ori	r24, 0x40	; 64
    8402:	8c 87       	std	Y+12, r24	; 0x0c

				if(hours >= 12)
    8404:	8b 81       	ldd	r24, Y+3	; 0x03
    8406:	8c 30       	cpi	r24, 0x0C	; 12
    8408:	18 f0       	brcs	.+6      	; 0x8410 <ds3231_sync2nearestMinute+0x13c>
				{
					data[2] |= 0x20; /* set pm bit */
    840a:	8c 85       	ldd	r24, Y+12	; 0x0c
    840c:	80 62       	ori	r24, 0x20	; 32
    840e:	8c 87       	std	Y+12, r24	; 0x0c
				}

				if(hours >= 10)
    8410:	8b 81       	ldd	r24, Y+3	; 0x03
    8412:	8a 30       	cpi	r24, 0x0A	; 10
    8414:	88 f0       	brcs	.+34     	; 0x8438 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10;
    8416:	8c 85       	ldd	r24, Y+12	; 0x0c
    8418:	80 61       	ori	r24, 0x10	; 16
    841a:	8c 87       	std	Y+12, r24	; 0x0c
    841c:	0d c0       	rjmp	.+26     	; 0x8438 <ds3231_sync2nearestMinute+0x164>
				}
			}
			else
			{
				if(hours >= 20)
    841e:	8b 81       	ldd	r24, Y+3	; 0x03
    8420:	84 31       	cpi	r24, 0x14	; 20
    8422:	20 f0       	brcs	.+8      	; 0x842c <ds3231_sync2nearestMinute+0x158>
				{
					data[2] |= 0x20; /* set 20 bit */
    8424:	8c 85       	ldd	r24, Y+12	; 0x0c
    8426:	80 62       	ori	r24, 0x20	; 32
    8428:	8c 87       	std	Y+12, r24	; 0x0c
    842a:	06 c0       	rjmp	.+12     	; 0x8438 <ds3231_sync2nearestMinute+0x164>
				}
				else if(hours >= 10)
    842c:	8b 81       	ldd	r24, Y+3	; 0x03
    842e:	8a 30       	cpi	r24, 0x0A	; 10
    8430:	18 f0       	brcs	.+6      	; 0x8438 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10; /* set 10 bit */
    8432:	8c 85       	ldd	r24, Y+12	; 0x0c
    8434:	80 61       	ori	r24, 0x10	; 16
    8436:	8c 87       	std	Y+12, r24	; 0x0c
				}
			}

			data[2] |= hours % 10;
    8438:	2c 85       	ldd	r18, Y+12	; 0x0c
    843a:	9b 81       	ldd	r25, Y+3	; 0x03
    843c:	8d ec       	ldi	r24, 0xCD	; 205
    843e:	98 9f       	mul	r25, r24
    8440:	81 2d       	mov	r24, r1
    8442:	11 24       	eor	r1, r1
    8444:	86 95       	lsr	r24
    8446:	86 95       	lsr	r24
    8448:	86 95       	lsr	r24
    844a:	88 0f       	add	r24, r24
    844c:	38 2f       	mov	r19, r24
    844e:	33 0f       	add	r19, r19
    8450:	33 0f       	add	r19, r19
    8452:	83 0f       	add	r24, r19
    8454:	e9 2f       	mov	r30, r25
    8456:	e8 1b       	sub	r30, r24
    8458:	8e 2f       	mov	r24, r30
    845a:	82 2b       	or	r24, r18
    845c:	8c 87       	std	Y+12, r24	; 0x0c
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    845e:	89 81       	ldd	r24, Y+1	; 0x01
    8460:	9f ef       	ldi	r25, 0xFF	; 255
    8462:	98 0f       	add	r25, r24
    8464:	99 83       	std	Y+1, r25	; 0x01
    8466:	88 23       	and	r24, r24
    8468:	99 f0       	breq	.+38     	; 0x8490 <ds3231_sync2nearestMinute+0x1bc>
    846a:	ce 01       	movw	r24, r28
    846c:	0a 96       	adiw	r24, 0x0a	; 10
    846e:	24 e0       	ldi	r18, 0x04	; 4
    8470:	ac 01       	movw	r20, r24
    8472:	60 e0       	ldi	r22, 0x00	; 0
    8474:	80 ed       	ldi	r24, 0xD0	; 208
    8476:	0e 94 f5 49 	call	0x93ea	; 0x93ea <I2C_0_SendData>
    847a:	98 2f       	mov	r25, r24
    847c:	81 e0       	ldi	r24, 0x01	; 1
    847e:	94 30       	cpi	r25, 0x04	; 4
    8480:	09 f4       	brne	.+2      	; 0x8484 <ds3231_sync2nearestMinute+0x1b0>
    8482:	80 e0       	ldi	r24, 0x00	; 0
    8484:	8a 83       	std	Y+2, r24	; 0x02
    8486:	8a 81       	ldd	r24, Y+2	; 0x02
    8488:	88 23       	and	r24, r24
    848a:	11 f0       	breq	.+4      	; 0x8490 <ds3231_sync2nearestMinute+0x1bc>
    848c:	81 e0       	ldi	r24, 0x01	; 1
    848e:	01 c0       	rjmp	.+2      	; 0x8492 <ds3231_sync2nearestMinute+0x1be>
    8490:	80 e0       	ldi	r24, 0x00	; 0
    8492:	88 23       	and	r24, r24
    8494:	09 f0       	breq	.+2      	; 0x8498 <ds3231_sync2nearestMinute+0x1c4>
    8496:	e3 cf       	rjmp	.-58     	; 0x845e <ds3231_sync2nearestMinute+0x18a>
		}
	}

	return err;
    8498:	8a 81       	ldd	r24, Y+2	; 0x02
}
    849a:	61 96       	adiw	r28, 0x11	; 17
    849c:	cd bf       	out	0x3d, r28	; 61
    849e:	de bf       	out	0x3e, r29	; 62
    84a0:	df 91       	pop	r29
    84a2:	cf 91       	pop	r28
    84a4:	08 95       	ret

000084a6 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    84a6:	cf 93       	push	r28
    84a8:	df 93       	push	r29
    84aa:	cd b7       	in	r28, 0x3d	; 61
    84ac:	de b7       	in	r29, 0x3e	; 62
    84ae:	68 97       	sbiw	r28, 0x18	; 24
    84b0:	cd bf       	out	0x3d, r28	; 61
    84b2:	de bf       	out	0x3e, r29	; 62
    84b4:	69 8b       	std	Y+17, r22	; 0x11
    84b6:	7a 8b       	std	Y+18, r23	; 0x12
    84b8:	8b 8b       	std	Y+19, r24	; 0x13
    84ba:	9c 8b       	std	Y+20, r25	; 0x14
    84bc:	4d 8b       	std	Y+21, r20	; 0x15
    84be:	5e 8b       	std	Y+22, r21	; 0x16
    84c0:	2f 8b       	std	Y+23, r18	; 0x17
    84c2:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    84c4:	89 89       	ldd	r24, Y+17	; 0x11
    84c6:	9a 89       	ldd	r25, Y+18	; 0x12
    84c8:	ab 89       	ldd	r26, Y+19	; 0x13
    84ca:	bc 89       	ldd	r27, Y+20	; 0x14
    84cc:	80 58       	subi	r24, 0x80	; 128
    84ce:	93 44       	sbci	r25, 0x43	; 67
    84d0:	ad 46       	sbci	r26, 0x6D	; 109
    84d2:	b8 43       	sbci	r27, 0x38	; 56
    84d4:	8d 87       	std	Y+13, r24	; 0x0d
    84d6:	9e 87       	std	Y+14, r25	; 0x0e
    84d8:	af 87       	std	Y+15, r26	; 0x0f
    84da:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    84dc:	ce 01       	movw	r24, r28
    84de:	0d 96       	adiw	r24, 0x0d	; 13
    84e0:	0e 94 fd 01 	call	0x3fa	; 0x3fa <localtime>
    84e4:	2c e0       	ldi	r18, 0x0C	; 12
    84e6:	fc 01       	movw	r30, r24
    84e8:	ce 01       	movw	r24, r28
    84ea:	01 96       	adiw	r24, 0x01	; 1
    84ec:	dc 01       	movw	r26, r24
    84ee:	01 90       	ld	r0, Z+
    84f0:	0d 92       	st	X+, r0
    84f2:	2a 95       	dec	r18
    84f4:	e1 f7       	brne	.-8      	; 0x84ee <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    84f6:	6f 89       	ldd	r22, Y+23	; 0x17
    84f8:	78 8d       	ldd	r23, Y+24	; 0x18
    84fa:	8d 89       	ldd	r24, Y+21	; 0x15
    84fc:	9e 89       	ldd	r25, Y+22	; 0x16
    84fe:	9e 01       	movw	r18, r28
    8500:	2f 5f       	subi	r18, 0xFF	; 255
    8502:	3f 4f       	sbci	r19, 0xFF	; 255
    8504:	4a e8       	ldi	r20, 0x8A	; 138
    8506:	54 e4       	ldi	r21, 0x44	; 68
    8508:	0e 94 a6 02 	call	0x54c	; 0x54c <strftime>
   return buf;
    850c:	8d 89       	ldd	r24, Y+21	; 0x15
    850e:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    8510:	68 96       	adiw	r28, 0x18	; 24
    8512:	cd bf       	out	0x3d, r28	; 61
    8514:	de bf       	out	0x3e, r29	; 62
    8516:	df 91       	pop	r29
    8518:	cf 91       	pop	r28
    851a:	08 95       	ret

0000851c <_ZN13EepromManagerC1Ev>:
extern uint16_t g_80m_power_level_mW;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    851c:	cf 93       	push	r28
    851e:	df 93       	push	r29
    8520:	00 d0       	rcall	.+0      	; 0x8522 <_ZN13EepromManagerC1Ev+0x6>
    8522:	cd b7       	in	r28, 0x3d	; 61
    8524:	de b7       	in	r29, 0x3e	; 62
    8526:	89 83       	std	Y+1, r24	; 0x01
    8528:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    852a:	00 00       	nop
    852c:	0f 90       	pop	r0
    852e:	0f 90       	pop	r0
    8530:	df 91       	pop	r29
    8532:	cf 91       	pop	r28
    8534:	08 95       	ret

00008536 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    8536:	cf 93       	push	r28
    8538:	df 93       	push	r29
    853a:	00 d0       	rcall	.+0      	; 0x853c <_ZN13EepromManagerD1Ev+0x6>
    853c:	cd b7       	in	r28, 0x3d	; 61
    853e:	de b7       	in	r29, 0x3e	; 62
    8540:	89 83       	std	Y+1, r24	; 0x01
    8542:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    8544:	00 00       	nop
    8546:	0f 90       	pop	r0
    8548:	0f 90       	pop	r0
    854a:	df 91       	pop	r29
    854c:	cf 91       	pop	r28
    854e:	08 95       	ret

00008550 <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    8550:	cf 93       	push	r28
    8552:	df 93       	push	r29
    8554:	00 d0       	rcall	.+0      	; 0x8556 <_Z21avr_eeprom_write_bytejh+0x6>
    8556:	1f 92       	push	r1
    8558:	cd b7       	in	r28, 0x3d	; 61
    855a:	de b7       	in	r29, 0x3e	; 62
    855c:	89 83       	std	Y+1, r24	; 0x01
    855e:	9a 83       	std	Y+2, r25	; 0x02
    8560:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8562:	80 e0       	ldi	r24, 0x00	; 0
    8564:	90 e1       	ldi	r25, 0x10	; 16
    8566:	fc 01       	movw	r30, r24
    8568:	82 81       	ldd	r24, Z+2	; 0x02
    856a:	88 2f       	mov	r24, r24
    856c:	90 e0       	ldi	r25, 0x00	; 0
    856e:	82 70       	andi	r24, 0x02	; 2
    8570:	99 27       	eor	r25, r25
    8572:	21 e0       	ldi	r18, 0x01	; 1
    8574:	89 2b       	or	r24, r25
    8576:	09 f4       	brne	.+2      	; 0x857a <_Z21avr_eeprom_write_bytejh+0x2a>
    8578:	20 e0       	ldi	r18, 0x00	; 0
    857a:	22 23       	and	r18, r18
    857c:	09 f0       	breq	.+2      	; 0x8580 <_Z21avr_eeprom_write_bytejh+0x30>
    857e:	f1 cf       	rjmp	.-30     	; 0x8562 <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8580:	8d e9       	ldi	r24, 0x9D	; 157
    8582:	93 e1       	ldi	r25, 0x13	; 19
    8584:	84 bf       	out	0x34, r24	; 52
    8586:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    858a:	89 81       	ldd	r24, Y+1	; 0x01
    858c:	9a 81       	ldd	r25, Y+2	; 0x02
    858e:	9c 5e       	subi	r25, 0xEC	; 236
    8590:	2b 81       	ldd	r18, Y+3	; 0x03
    8592:	fc 01       	movw	r30, r24
    8594:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8596:	8d e9       	ldi	r24, 0x9D	; 157
    8598:	90 e0       	ldi	r25, 0x00	; 0
    859a:	84 bf       	out	0x34, r24	; 52
    859c:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    85a0:	00 00       	nop
    85a2:	23 96       	adiw	r28, 0x03	; 3
    85a4:	cd bf       	out	0x3d, r28	; 61
    85a6:	de bf       	out	0x3e, r29	; 62
    85a8:	df 91       	pop	r29
    85aa:	cf 91       	pop	r28
    85ac:	08 95       	ret

000085ae <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    85ae:	cf 93       	push	r28
    85b0:	df 93       	push	r29
    85b2:	00 d0       	rcall	.+0      	; 0x85b4 <_Z21avr_eeprom_write_wordjj+0x6>
    85b4:	00 d0       	rcall	.+0      	; 0x85b6 <_Z21avr_eeprom_write_wordjj+0x8>
    85b6:	cd b7       	in	r28, 0x3d	; 61
    85b8:	de b7       	in	r29, 0x3e	; 62
    85ba:	89 83       	std	Y+1, r24	; 0x01
    85bc:	9a 83       	std	Y+2, r25	; 0x02
    85be:	6b 83       	std	Y+3, r22	; 0x03
    85c0:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    85c2:	80 e0       	ldi	r24, 0x00	; 0
    85c4:	90 e1       	ldi	r25, 0x10	; 16
    85c6:	fc 01       	movw	r30, r24
    85c8:	82 81       	ldd	r24, Z+2	; 0x02
    85ca:	88 2f       	mov	r24, r24
    85cc:	90 e0       	ldi	r25, 0x00	; 0
    85ce:	82 70       	andi	r24, 0x02	; 2
    85d0:	99 27       	eor	r25, r25
    85d2:	21 e0       	ldi	r18, 0x01	; 1
    85d4:	89 2b       	or	r24, r25
    85d6:	09 f4       	brne	.+2      	; 0x85da <_Z21avr_eeprom_write_wordjj+0x2c>
    85d8:	20 e0       	ldi	r18, 0x00	; 0
    85da:	22 23       	and	r18, r18
    85dc:	09 f0       	breq	.+2      	; 0x85e0 <_Z21avr_eeprom_write_wordjj+0x32>
    85de:	f1 cf       	rjmp	.-30     	; 0x85c2 <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    85e0:	8d e9       	ldi	r24, 0x9D	; 157
    85e2:	93 e1       	ldi	r25, 0x13	; 19
    85e4:	84 bf       	out	0x34, r24	; 52
    85e6:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    85ea:	89 81       	ldd	r24, Y+1	; 0x01
    85ec:	9a 81       	ldd	r25, Y+2	; 0x02
    85ee:	9c 5e       	subi	r25, 0xEC	; 236
    85f0:	9c 01       	movw	r18, r24
    85f2:	8b 81       	ldd	r24, Y+3	; 0x03
    85f4:	9c 81       	ldd	r25, Y+4	; 0x04
    85f6:	f9 01       	movw	r30, r18
    85f8:	80 83       	st	Z, r24
    85fa:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    85fc:	8d e9       	ldi	r24, 0x9D	; 157
    85fe:	90 e0       	ldi	r25, 0x00	; 0
    8600:	84 bf       	out	0x34, r24	; 52
    8602:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8606:	00 00       	nop
    8608:	24 96       	adiw	r28, 0x04	; 4
    860a:	cd bf       	out	0x3d, r28	; 61
    860c:	de bf       	out	0x3e, r29	; 62
    860e:	df 91       	pop	r29
    8610:	cf 91       	pop	r28
    8612:	08 95       	ret

00008614 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    8614:	cf 93       	push	r28
    8616:	df 93       	push	r29
    8618:	cd b7       	in	r28, 0x3d	; 61
    861a:	de b7       	in	r29, 0x3e	; 62
    861c:	26 97       	sbiw	r28, 0x06	; 6
    861e:	cd bf       	out	0x3d, r28	; 61
    8620:	de bf       	out	0x3e, r29	; 62
    8622:	89 83       	std	Y+1, r24	; 0x01
    8624:	9a 83       	std	Y+2, r25	; 0x02
    8626:	4b 83       	std	Y+3, r20	; 0x03
    8628:	5c 83       	std	Y+4, r21	; 0x04
    862a:	6d 83       	std	Y+5, r22	; 0x05
    862c:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    862e:	80 e0       	ldi	r24, 0x00	; 0
    8630:	90 e1       	ldi	r25, 0x10	; 16
    8632:	fc 01       	movw	r30, r24
    8634:	82 81       	ldd	r24, Z+2	; 0x02
    8636:	88 2f       	mov	r24, r24
    8638:	90 e0       	ldi	r25, 0x00	; 0
    863a:	82 70       	andi	r24, 0x02	; 2
    863c:	99 27       	eor	r25, r25
    863e:	21 e0       	ldi	r18, 0x01	; 1
    8640:	89 2b       	or	r24, r25
    8642:	09 f4       	brne	.+2      	; 0x8646 <_Z22avr_eeprom_write_dwordjm+0x32>
    8644:	20 e0       	ldi	r18, 0x00	; 0
    8646:	22 23       	and	r18, r18
    8648:	09 f0       	breq	.+2      	; 0x864c <_Z22avr_eeprom_write_dwordjm+0x38>
    864a:	f1 cf       	rjmp	.-30     	; 0x862e <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    864c:	8d e9       	ldi	r24, 0x9D	; 157
    864e:	93 e1       	ldi	r25, 0x13	; 19
    8650:	84 bf       	out	0x34, r24	; 52
    8652:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8656:	89 81       	ldd	r24, Y+1	; 0x01
    8658:	9a 81       	ldd	r25, Y+2	; 0x02
    865a:	9c 5e       	subi	r25, 0xEC	; 236
    865c:	9c 01       	movw	r18, r24
    865e:	8b 81       	ldd	r24, Y+3	; 0x03
    8660:	9c 81       	ldd	r25, Y+4	; 0x04
    8662:	ad 81       	ldd	r26, Y+5	; 0x05
    8664:	be 81       	ldd	r27, Y+6	; 0x06
    8666:	f9 01       	movw	r30, r18
    8668:	80 83       	st	Z, r24
    866a:	91 83       	std	Z+1, r25	; 0x01
    866c:	a2 83       	std	Z+2, r26	; 0x02
    866e:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8670:	8d e9       	ldi	r24, 0x9D	; 157
    8672:	90 e0       	ldi	r25, 0x00	; 0
    8674:	84 bf       	out	0x34, r24	; 52
    8676:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    867a:	00 00       	nop
    867c:	26 96       	adiw	r28, 0x06	; 6
    867e:	cd bf       	out	0x3d, r28	; 61
    8680:	de bf       	out	0x3e, r29	; 62
    8682:	df 91       	pop	r29
    8684:	cf 91       	pop	r28
    8686:	08 95       	ret

00008688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8688:	cf 93       	push	r28
    868a:	df 93       	push	r29
    868c:	cd b7       	in	r28, 0x3d	; 61
    868e:	de b7       	in	r29, 0x3e	; 62
    8690:	60 97       	sbiw	r28, 0x10	; 16
    8692:	cd bf       	out	0x3d, r28	; 61
    8694:	de bf       	out	0x3e, r29	; 62
    8696:	8c 87       	std	Y+12, r24	; 0x0c
    8698:	9d 87       	std	Y+13, r25	; 0x0d
    869a:	6e 87       	std	Y+14, r22	; 0x0e
    869c:	4f 87       	std	Y+15, r20	; 0x0f
    869e:	58 8b       	std	Y+16, r21	; 0x10
	if(!val)
    86a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    86a2:	98 89       	ldd	r25, Y+16	; 0x10
    86a4:	89 2b       	or	r24, r25
    86a6:	09 f4       	brne	.+2      	; 0x86aa <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    86a8:	e8 c0       	rjmp	.+464    	; 0x887a <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f2>
	{
		return;
	}

	switch(v)
    86aa:	8e 85       	ldd	r24, Y+14	; 0x0e
    86ac:	88 2f       	mov	r24, r24
    86ae:	90 e0       	ldi	r25, 0x00	; 0
    86b0:	09 2e       	mov	r0, r25
    86b2:	00 0c       	add	r0, r0
    86b4:	aa 0b       	sbc	r26, r26
    86b6:	bb 0b       	sbc	r27, r27
    86b8:	40 e0       	ldi	r20, 0x00	; 0
    86ba:	50 e0       	ldi	r21, 0x00	; 0
    86bc:	23 e3       	ldi	r18, 0x33	; 51
    86be:	30 e0       	ldi	r19, 0x00	; 0
    86c0:	84 1b       	sub	r24, r20
    86c2:	95 0b       	sbc	r25, r21
    86c4:	28 17       	cp	r18, r24
    86c6:	39 07       	cpc	r19, r25
    86c8:	08 f4       	brcc	.+2      	; 0x86cc <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    86ca:	d9 c0       	rjmp	.+434    	; 0x887e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f6>
    86cc:	8b 57       	subi	r24, 0x7B	; 123
    86ce:	9f 4f       	sbci	r25, 0xFF	; 255
    86d0:	fc 01       	movw	r30, r24
    86d2:	0c 94 ef 74 	jmp	0xe9de	; 0xe9de <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    86d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    86d8:	98 89       	ldd	r25, Y+16	; 0x10
    86da:	fc 01       	movw	r30, r24
    86dc:	80 81       	ld	r24, Z
    86de:	91 81       	ldd	r25, Z+1	; 0x01
    86e0:	a2 81       	ldd	r26, Z+2	; 0x02
    86e2:	b3 81       	ldd	r27, Z+3	; 0x03
    86e4:	ac 01       	movw	r20, r24
    86e6:	bd 01       	movw	r22, r26
    86e8:	8b e2       	ldi	r24, 0x2B	; 43
    86ea:	90 e0       	ldi	r25, 0x00	; 0
    86ec:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    86f0:	c7 c0       	rjmp	.+398    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    86f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    86f4:	98 89       	ldd	r25, Y+16	; 0x10
    86f6:	fc 01       	movw	r30, r24
    86f8:	80 81       	ld	r24, Z
    86fa:	91 81       	ldd	r25, Z+1	; 0x01
    86fc:	a2 81       	ldd	r26, Z+2	; 0x02
    86fe:	b3 81       	ldd	r27, Z+3	; 0x03
    8700:	ac 01       	movw	r20, r24
    8702:	bd 01       	movw	r22, r26
    8704:	8f e2       	ldi	r24, 0x2F	; 47
    8706:	90 e0       	ldi	r25, 0x00	; 0
    8708:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    870c:	b9 c0       	rjmp	.+370    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    870e:	8f 85       	ldd	r24, Y+15	; 0x0f
    8710:	98 89       	ldd	r25, Y+16	; 0x10
    8712:	fc 01       	movw	r30, r24
    8714:	80 81       	ld	r24, Z
    8716:	91 81       	ldd	r25, Z+1	; 0x01
    8718:	a2 81       	ldd	r26, Z+2	; 0x02
    871a:	b3 81       	ldd	r27, Z+3	; 0x03
    871c:	bc 01       	movw	r22, r24
    871e:	83 e3       	ldi	r24, 0x33	; 51
    8720:	90 e0       	ldi	r25, 0x00	; 0
    8722:	0e 94 d7 42 	call	0x85ae	; 0x85ae <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8726:	ac c0       	rjmp	.+344    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    8728:	8f 85       	ldd	r24, Y+15	; 0x0f
    872a:	98 89       	ldd	r25, Y+16	; 0x10
    872c:	89 83       	std	Y+1, r24	; 0x01
    872e:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    8730:	89 81       	ldd	r24, Y+1	; 0x01
    8732:	9a 81       	ldd	r25, Y+2	; 0x02
    8734:	9c 01       	movw	r18, r24
    8736:	2f 5f       	subi	r18, 0xFF	; 255
    8738:	3f 4f       	sbci	r19, 0xFF	; 255
    873a:	29 83       	std	Y+1, r18	; 0x01
    873c:	3a 83       	std	Y+2, r19	; 0x02
    873e:	fc 01       	movw	r30, r24
    8740:	80 81       	ld	r24, Z
    8742:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    8744:	8a e0       	ldi	r24, 0x0A	; 10
    8746:	90 e0       	ldi	r25, 0x00	; 0
    8748:	8c 83       	std	Y+4, r24	; 0x04
    874a:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    874c:	8b 81       	ldd	r24, Y+3	; 0x03
    874e:	88 23       	and	r24, r24
    8750:	a9 f0       	breq	.+42     	; 0x877c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    8752:	8c 81       	ldd	r24, Y+4	; 0x04
    8754:	9d 81       	ldd	r25, Y+5	; 0x05
    8756:	9c 01       	movw	r18, r24
    8758:	2f 5f       	subi	r18, 0xFF	; 255
    875a:	3f 4f       	sbci	r19, 0xFF	; 255
    875c:	2c 83       	std	Y+4, r18	; 0x04
    875e:	3d 83       	std	Y+5, r19	; 0x05
    8760:	6b 81       	ldd	r22, Y+3	; 0x03
    8762:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8766:	89 81       	ldd	r24, Y+1	; 0x01
    8768:	9a 81       	ldd	r25, Y+2	; 0x02
    876a:	9c 01       	movw	r18, r24
    876c:	2f 5f       	subi	r18, 0xFF	; 255
    876e:	3f 4f       	sbci	r19, 0xFF	; 255
    8770:	29 83       	std	Y+1, r18	; 0x01
    8772:	3a 83       	std	Y+2, r19	; 0x02
    8774:	fc 01       	movw	r30, r24
    8776:	80 81       	ld	r24, Z
    8778:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    877a:	e8 cf       	rjmp	.-48     	; 0x874c <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    877c:	8c 81       	ldd	r24, Y+4	; 0x04
    877e:	9d 81       	ldd	r25, Y+5	; 0x05
    8780:	60 e0       	ldi	r22, 0x00	; 0
    8782:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8786:	7c c0       	rjmp	.+248    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    8788:	8f 85       	ldd	r24, Y+15	; 0x0f
    878a:	98 89       	ldd	r25, Y+16	; 0x10
    878c:	8e 83       	std	Y+6, r24	; 0x06
    878e:	9f 83       	std	Y+7, r25	; 0x07
			uint8_t c = *uint8_addr++;
    8790:	8e 81       	ldd	r24, Y+6	; 0x06
    8792:	9f 81       	ldd	r25, Y+7	; 0x07
    8794:	9c 01       	movw	r18, r24
    8796:	2f 5f       	subi	r18, 0xFF	; 255
    8798:	3f 4f       	sbci	r19, 0xFF	; 255
    879a:	2e 83       	std	Y+6, r18	; 0x06
    879c:	3f 83       	std	Y+7, r19	; 0x07
    879e:	fc 01       	movw	r30, r24
    87a0:	80 81       	ld	r24, Z
    87a2:	88 87       	std	Y+8, r24	; 0x08
			int i = 0;
    87a4:	1a 86       	std	Y+10, r1	; 0x0a
    87a6:	1b 86       	std	Y+11, r1	; 0x0b
			uint8_t j = (uint8_t)UnlockCode;
    87a8:	8f e1       	ldi	r24, 0x1F	; 31
    87aa:	89 87       	std	Y+9, r24	; 0x09
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    87ac:	88 85       	ldd	r24, Y+8	; 0x08
    87ae:	88 23       	and	r24, r24
    87b0:	c1 f0       	breq	.+48     	; 0x87e2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x15a>
    87b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    87b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    87b6:	08 97       	sbiw	r24, 0x08	; 8
    87b8:	a4 f4       	brge	.+40     	; 0x87e2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x15a>
			{
				avr_eeprom_write_byte(j++, c);
    87ba:	89 85       	ldd	r24, Y+9	; 0x09
    87bc:	91 e0       	ldi	r25, 0x01	; 1
    87be:	98 0f       	add	r25, r24
    87c0:	99 87       	std	Y+9, r25	; 0x09
    87c2:	88 2f       	mov	r24, r24
    87c4:	90 e0       	ldi	r25, 0x00	; 0
    87c6:	68 85       	ldd	r22, Y+8	; 0x08
    87c8:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    87cc:	8e 81       	ldd	r24, Y+6	; 0x06
    87ce:	9f 81       	ldd	r25, Y+7	; 0x07
    87d0:	9c 01       	movw	r18, r24
    87d2:	2f 5f       	subi	r18, 0xFF	; 255
    87d4:	3f 4f       	sbci	r19, 0xFF	; 255
    87d6:	2e 83       	std	Y+6, r18	; 0x06
    87d8:	3f 83       	std	Y+7, r19	; 0x07
    87da:	fc 01       	movw	r30, r24
    87dc:	80 81       	ld	r24, Z
    87de:	88 87       	std	Y+8, r24	; 0x08
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    87e0:	e5 cf       	rjmp	.-54     	; 0x87ac <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    87e2:	89 85       	ldd	r24, Y+9	; 0x09
    87e4:	88 2f       	mov	r24, r24
    87e6:	90 e0       	ldi	r25, 0x00	; 0
    87e8:	60 e0       	ldi	r22, 0x00	; 0
    87ea:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    87ee:	48 c0       	rjmp	.+144    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    87f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    87f2:	98 89       	ldd	r25, Y+16	; 0x10
    87f4:	fc 01       	movw	r30, r24
    87f6:	80 81       	ld	r24, Z
    87f8:	68 2f       	mov	r22, r24
    87fa:	88 e2       	ldi	r24, 0x28	; 40
    87fc:	90 e0       	ldi	r25, 0x00	; 0
    87fe:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8802:	3e c0       	rjmp	.+124    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    8804:	8f 85       	ldd	r24, Y+15	; 0x0f
    8806:	98 89       	ldd	r25, Y+16	; 0x10
    8808:	fc 01       	movw	r30, r24
    880a:	80 81       	ld	r24, Z
    880c:	68 2f       	mov	r22, r24
    880e:	89 e2       	ldi	r24, 0x29	; 41
    8810:	90 e0       	ldi	r25, 0x00	; 0
    8812:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8816:	34 c0       	rjmp	.+104    	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    8818:	8f 85       	ldd	r24, Y+15	; 0x0f
    881a:	98 89       	ldd	r25, Y+16	; 0x10
    881c:	fc 01       	movw	r30, r24
    881e:	80 81       	ld	r24, Z
    8820:	91 81       	ldd	r25, Z+1	; 0x01
    8822:	a2 81       	ldd	r26, Z+2	; 0x02
    8824:	b3 81       	ldd	r27, Z+3	; 0x03
    8826:	ac 01       	movw	r20, r24
    8828:	bd 01       	movw	r22, r26
    882a:	82 e0       	ldi	r24, 0x02	; 2
    882c:	90 e0       	ldi	r25, 0x00	; 0
    882e:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8832:	26 c0       	rjmp	.+76     	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    8834:	8f 85       	ldd	r24, Y+15	; 0x0f
    8836:	98 89       	ldd	r25, Y+16	; 0x10
    8838:	fc 01       	movw	r30, r24
    883a:	80 81       	ld	r24, Z
    883c:	91 81       	ldd	r25, Z+1	; 0x01
    883e:	a2 81       	ldd	r26, Z+2	; 0x02
    8840:	b3 81       	ldd	r27, Z+3	; 0x03
    8842:	ac 01       	movw	r20, r24
    8844:	bd 01       	movw	r22, r26
    8846:	86 e0       	ldi	r24, 0x06	; 6
    8848:	90 e0       	ldi	r25, 0x00	; 0
    884a:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    884e:	18 c0       	rjmp	.+48     	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    8850:	8f 85       	ldd	r24, Y+15	; 0x0f
    8852:	98 89       	ldd	r25, Y+16	; 0x10
    8854:	fc 01       	movw	r30, r24
    8856:	80 81       	ld	r24, Z
    8858:	68 2f       	mov	r22, r24
    885a:	8a e2       	ldi	r24, 0x2A	; 42
    885c:	90 e0       	ldi	r25, 0x00	; 0
    885e:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8862:	0e c0       	rjmp	.+28     	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    8864:	8f 85       	ldd	r24, Y+15	; 0x0f
    8866:	98 89       	ldd	r25, Y+16	; 0x10
    8868:	fc 01       	movw	r30, r24
    886a:	80 81       	ld	r24, Z
    886c:	91 81       	ldd	r25, Z+1	; 0x01
    886e:	bc 01       	movw	r22, r24
    8870:	80 e0       	ldi	r24, 0x00	; 0
    8872:	90 e0       	ldi	r25, 0x00	; 0
    8874:	0e 94 d7 42 	call	0x85ae	; 0x85ae <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8878:	03 c0       	rjmp	.+6      	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    887a:	00 00       	nop
    887c:	01 c0       	rjmp	.+2      	; 0x8880 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		default:
		{

		}
		break;
    887e:	00 00       	nop
	}
}
    8880:	60 96       	adiw	r28, 0x10	; 16
    8882:	cd bf       	out	0x3d, r28	; 61
    8884:	de bf       	out	0x3e, r29	; 62
    8886:	df 91       	pop	r29
    8888:	cf 91       	pop	r28
    888a:	08 95       	ret

0000888c <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    888c:	0f 93       	push	r16
    888e:	1f 93       	push	r17
    8890:	cf 93       	push	r28
    8892:	df 93       	push	r29
    8894:	00 d0       	rcall	.+0      	; 0x8896 <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    8896:	00 d0       	rcall	.+0      	; 0x8898 <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    8898:	cd b7       	in	r28, 0x3d	; 61
    889a:	de b7       	in	r29, 0x3e	; 62
    889c:	8b 83       	std	Y+3, r24	; 0x03
    889e:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    88a0:	88 e2       	ldi	r24, 0x28	; 40
    88a2:	90 e0       	ldi	r25, 0x00	; 0
    88a4:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    88a8:	28 2f       	mov	r18, r24
    88aa:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    88ae:	81 e0       	ldi	r24, 0x01	; 1
    88b0:	29 17       	cp	r18, r25
    88b2:	09 f4       	brne	.+2      	; 0x88b6 <_ZN13EepromManager13saveAllEEPROMEv+0x2a>
    88b4:	80 e0       	ldi	r24, 0x00	; 0
    88b6:	88 23       	and	r24, r24
    88b8:	39 f0       	breq	.+14     	; 0x88c8 <_ZN13EepromManager13saveAllEEPROMEv+0x3c>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    88ba:	8b 81       	ldd	r24, Y+3	; 0x03
    88bc:	9c 81       	ldd	r25, Y+4	; 0x04
    88be:	4b e0       	ldi	r20, 0x0B	; 11
    88c0:	50 e4       	ldi	r21, 0x40	; 64
    88c2:	68 e2       	ldi	r22, 0x28	; 40
    88c4:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    88c8:	89 e2       	ldi	r24, 0x29	; 41
    88ca:	90 e0       	ldi	r25, 0x00	; 0
    88cc:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    88d0:	28 2f       	mov	r18, r24
    88d2:	90 91 1b 40 	lds	r25, 0x401B	; 0x80401b <g_fox>
    88d6:	81 e0       	ldi	r24, 0x01	; 1
    88d8:	29 17       	cp	r18, r25
    88da:	09 f4       	brne	.+2      	; 0x88de <_ZN13EepromManager13saveAllEEPROMEv+0x52>
    88dc:	80 e0       	ldi	r24, 0x00	; 0
    88de:	88 23       	and	r24, r24
    88e0:	39 f0       	breq	.+14     	; 0x88f0 <_ZN13EepromManager13saveAllEEPROMEv+0x64>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    88e2:	8b 81       	ldd	r24, Y+3	; 0x03
    88e4:	9c 81       	ldd	r25, Y+4	; 0x04
    88e6:	4b e1       	ldi	r20, 0x1B	; 27
    88e8:	50 e4       	ldi	r21, 0x40	; 64
    88ea:	69 e2       	ldi	r22, 0x29	; 41
    88ec:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    88f0:	82 e0       	ldi	r24, 0x02	; 2
    88f2:	90 e0       	ldi	r25, 0x00	; 0
    88f4:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    88f8:	9b 01       	movw	r18, r22
    88fa:	ac 01       	movw	r20, r24
    88fc:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    8900:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    8904:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    8908:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    890c:	61 e0       	ldi	r22, 0x01	; 1
    890e:	28 17       	cp	r18, r24
    8910:	39 07       	cpc	r19, r25
    8912:	4a 07       	cpc	r20, r26
    8914:	5b 07       	cpc	r21, r27
    8916:	09 f4       	brne	.+2      	; 0x891a <_ZN13EepromManager13saveAllEEPROMEv+0x8e>
    8918:	60 e0       	ldi	r22, 0x00	; 0
    891a:	66 23       	and	r22, r22
    891c:	39 f0       	breq	.+14     	; 0x892c <_ZN13EepromManager13saveAllEEPROMEv+0xa0>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    891e:	8b 81       	ldd	r24, Y+3	; 0x03
    8920:	9c 81       	ldd	r25, Y+4	; 0x04
    8922:	42 e7       	ldi	r20, 0x72	; 114
    8924:	57 e4       	ldi	r21, 0x47	; 71
    8926:	62 e0       	ldi	r22, 0x02	; 2
    8928:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    892c:	86 e0       	ldi	r24, 0x06	; 6
    892e:	90 e0       	ldi	r25, 0x00	; 0
    8930:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8934:	9b 01       	movw	r18, r22
    8936:	ac 01       	movw	r20, r24
    8938:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    893c:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    8940:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    8944:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    8948:	61 e0       	ldi	r22, 0x01	; 1
    894a:	28 17       	cp	r18, r24
    894c:	39 07       	cpc	r19, r25
    894e:	4a 07       	cpc	r20, r26
    8950:	5b 07       	cpc	r21, r27
    8952:	09 f4       	brne	.+2      	; 0x8956 <_ZN13EepromManager13saveAllEEPROMEv+0xca>
    8954:	60 e0       	ldi	r22, 0x00	; 0
    8956:	66 23       	and	r22, r22
    8958:	39 f0       	breq	.+14     	; 0x8968 <_ZN13EepromManager13saveAllEEPROMEv+0xdc>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    895a:	8b 81       	ldd	r24, Y+3	; 0x03
    895c:	9c 81       	ldd	r25, Y+4	; 0x04
    895e:	46 e7       	ldi	r20, 0x76	; 118
    8960:	57 e4       	ldi	r21, 0x47	; 71
    8962:	66 e0       	ldi	r22, 0x06	; 6
    8964:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    8968:	80 91 92 47 	lds	r24, 0x4792	; 0x804792 <g_utc_offset>
    896c:	08 2f       	mov	r16, r24
    896e:	88 0f       	add	r24, r24
    8970:	11 0b       	sbc	r17, r17
    8972:	8a e2       	ldi	r24, 0x2A	; 42
    8974:	90 e0       	ldi	r25, 0x00	; 0
    8976:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    897a:	88 2f       	mov	r24, r24
    897c:	90 e0       	ldi	r25, 0x00	; 0
    897e:	21 e0       	ldi	r18, 0x01	; 1
    8980:	08 17       	cp	r16, r24
    8982:	19 07       	cpc	r17, r25
    8984:	09 f4       	brne	.+2      	; 0x8988 <_ZN13EepromManager13saveAllEEPROMEv+0xfc>
    8986:	20 e0       	ldi	r18, 0x00	; 0
    8988:	22 23       	and	r18, r18
    898a:	39 f0       	breq	.+14     	; 0x899a <_ZN13EepromManager13saveAllEEPROMEv+0x10e>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    898c:	8b 81       	ldd	r24, Y+3	; 0x03
    898e:	9c 81       	ldd	r25, Y+4	; 0x04
    8990:	42 e9       	ldi	r20, 0x92	; 146
    8992:	57 e4       	ldi	r21, 0x47	; 71
    8994:	6a e2       	ldi	r22, 0x2A	; 42
    8996:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    899a:	19 82       	std	Y+1, r1	; 0x01
    899c:	1a 82       	std	Y+2, r1	; 0x02
    899e:	89 81       	ldd	r24, Y+1	; 0x01
    89a0:	9a 81       	ldd	r25, Y+2	; 0x02
    89a2:	44 97       	sbiw	r24, 0x14	; 20
    89a4:	e8 f4       	brcc	.+58     	; 0x89e0 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    89a6:	89 81       	ldd	r24, Y+1	; 0x01
    89a8:	9a 81       	ldd	r25, Y+2	; 0x02
    89aa:	87 5a       	subi	r24, 0xA7	; 167
    89ac:	98 4b       	sbci	r25, 0xB8	; 184
    89ae:	fc 01       	movw	r30, r24
    89b0:	10 81       	ld	r17, Z
    89b2:	89 81       	ldd	r24, Y+1	; 0x01
    89b4:	9a 81       	ldd	r25, Y+2	; 0x02
    89b6:	0a 96       	adiw	r24, 0x0a	; 10
    89b8:	80 50       	subi	r24, 0x00	; 0
    89ba:	90 40       	sbci	r25, 0x00	; 0
    89bc:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    89c0:	18 17       	cp	r17, r24
    89c2:	41 f0       	breq	.+16     	; 0x89d4 <_ZN13EepromManager13saveAllEEPROMEv+0x148>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    89c4:	8b 81       	ldd	r24, Y+3	; 0x03
    89c6:	9c 81       	ldd	r25, Y+4	; 0x04
    89c8:	49 e5       	ldi	r20, 0x59	; 89
    89ca:	57 e4       	ldi	r21, 0x47	; 71
    89cc:	6a e0       	ldi	r22, 0x0A	; 10
    89ce:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    89d2:	06 c0       	rjmp	.+12     	; 0x89e0 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    89d4:	89 81       	ldd	r24, Y+1	; 0x01
    89d6:	9a 81       	ldd	r25, Y+2	; 0x02
    89d8:	01 96       	adiw	r24, 0x01	; 1
    89da:	89 83       	std	Y+1, r24	; 0x01
    89dc:	9a 83       	std	Y+2, r25	; 0x02
    89de:	df cf       	rjmp	.-66     	; 0x899e <_ZN13EepromManager13saveAllEEPROMEv+0x112>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    89e0:	19 82       	std	Y+1, r1	; 0x01
    89e2:	1a 82       	std	Y+2, r1	; 0x02
    89e4:	89 81       	ldd	r24, Y+1	; 0x01
    89e6:	9a 81       	ldd	r25, Y+2	; 0x02
    89e8:	08 97       	sbiw	r24, 0x08	; 8
    89ea:	e8 f4       	brcc	.+58     	; 0x8a26 <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    89ec:	89 81       	ldd	r24, Y+1	; 0x01
    89ee:	9a 81       	ldd	r25, Y+2	; 0x02
    89f0:	8d 56       	subi	r24, 0x6D	; 109
    89f2:	98 4b       	sbci	r25, 0xB8	; 184
    89f4:	fc 01       	movw	r30, r24
    89f6:	10 81       	ld	r17, Z
    89f8:	89 81       	ldd	r24, Y+1	; 0x01
    89fa:	9a 81       	ldd	r25, Y+2	; 0x02
    89fc:	4f 96       	adiw	r24, 0x1f	; 31
    89fe:	80 50       	subi	r24, 0x00	; 0
    8a00:	90 40       	sbci	r25, 0x00	; 0
    8a02:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    8a06:	18 17       	cp	r17, r24
    8a08:	41 f0       	breq	.+16     	; 0x8a1a <_ZN13EepromManager13saveAllEEPROMEv+0x18e>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    8a0a:	8b 81       	ldd	r24, Y+3	; 0x03
    8a0c:	9c 81       	ldd	r25, Y+4	; 0x04
    8a0e:	43 e9       	ldi	r20, 0x93	; 147
    8a10:	57 e4       	ldi	r21, 0x47	; 71
    8a12:	6f e1       	ldi	r22, 0x1F	; 31
    8a14:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    8a18:	06 c0       	rjmp	.+12     	; 0x8a26 <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8a1a:	89 81       	ldd	r24, Y+1	; 0x01
    8a1c:	9a 81       	ldd	r25, Y+2	; 0x02
    8a1e:	01 96       	adiw	r24, 0x01	; 1
    8a20:	89 83       	std	Y+1, r24	; 0x01
    8a22:	9a 83       	std	Y+2, r25	; 0x02
    8a24:	df cf       	rjmp	.-66     	; 0x89e4 <_ZN13EepromManager13saveAllEEPROMEv+0x158>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    8a26:	8b e2       	ldi	r24, 0x2B	; 43
    8a28:	90 e0       	ldi	r25, 0x00	; 0
    8a2a:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8a2e:	9b 01       	movw	r18, r22
    8a30:	ac 01       	movw	r20, r24
    8a32:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    8a36:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    8a3a:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    8a3e:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
    8a42:	28 17       	cp	r18, r24
    8a44:	39 07       	cpc	r19, r25
    8a46:	4a 07       	cpc	r20, r26
    8a48:	5b 07       	cpc	r21, r27
    8a4a:	39 f0       	breq	.+14     	; 0x8a5a <_ZN13EepromManager13saveAllEEPROMEv+0x1ce>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    8a4c:	8b 81       	ldd	r24, Y+3	; 0x03
    8a4e:	9c 81       	ldd	r25, Y+4	; 0x04
    8a50:	4b e2       	ldi	r20, 0x2B	; 43
    8a52:	50 e4       	ldi	r21, 0x40	; 64
    8a54:	6b e2       	ldi	r22, 0x2B	; 43
    8a56:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    8a5a:	8f e2       	ldi	r24, 0x2F	; 47
    8a5c:	90 e0       	ldi	r25, 0x00	; 0
    8a5e:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8a62:	9b 01       	movw	r18, r22
    8a64:	ac 01       	movw	r20, r24
    8a66:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <g_rtty_offset>
    8a6a:	90 91 32 40 	lds	r25, 0x4032	; 0x804032 <g_rtty_offset+0x1>
    8a6e:	a0 91 33 40 	lds	r26, 0x4033	; 0x804033 <g_rtty_offset+0x2>
    8a72:	b0 91 34 40 	lds	r27, 0x4034	; 0x804034 <g_rtty_offset+0x3>
    8a76:	28 17       	cp	r18, r24
    8a78:	39 07       	cpc	r19, r25
    8a7a:	4a 07       	cpc	r20, r26
    8a7c:	5b 07       	cpc	r21, r27
    8a7e:	39 f0       	breq	.+14     	; 0x8a8e <_ZN13EepromManager13saveAllEEPROMEv+0x202>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    8a80:	8b 81       	ldd	r24, Y+3	; 0x03
    8a82:	9c 81       	ldd	r25, Y+4	; 0x04
    8a84:	41 e3       	ldi	r20, 0x31	; 49
    8a86:	50 e4       	ldi	r21, 0x40	; 64
    8a88:	6f e2       	ldi	r22, 0x2F	; 47
    8a8a:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    8a8e:	83 e3       	ldi	r24, 0x33	; 51
    8a90:	90 e0       	ldi	r25, 0x00	; 0
    8a92:	0e 94 49 7b 	call	0xf692	; 0xf692 <eeprom_read_word>
    8a96:	9c 01       	movw	r18, r24
    8a98:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    8a9c:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
    8aa0:	28 17       	cp	r18, r24
    8aa2:	39 07       	cpc	r19, r25
    8aa4:	39 f0       	breq	.+14     	; 0x8ab4 <_ZN13EepromManager13saveAllEEPROMEv+0x228>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    8aa6:	8b 81       	ldd	r24, Y+3	; 0x03
    8aa8:	9c 81       	ldd	r25, Y+4	; 0x04
    8aaa:	4f e2       	ldi	r20, 0x2F	; 47
    8aac:	50 e4       	ldi	r21, 0x40	; 64
    8aae:	63 e3       	ldi	r22, 0x33	; 51
    8ab0:	0e 94 44 43 	call	0x8688	; 0x8688 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
}
    8ab4:	00 00       	nop
    8ab6:	24 96       	adiw	r28, 0x04	; 4
    8ab8:	cd bf       	out	0x3d, r28	; 61
    8aba:	de bf       	out	0x3e, r29	; 62
    8abc:	df 91       	pop	r29
    8abe:	cf 91       	pop	r28
    8ac0:	1f 91       	pop	r17
    8ac2:	0f 91       	pop	r16
    8ac4:	08 95       	ret

00008ac6 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    8ac6:	cf 93       	push	r28
    8ac8:	df 93       	push	r29
    8aca:	cd b7       	in	r28, 0x3d	; 61
    8acc:	de b7       	in	r29, 0x3e	; 62
    8ace:	6f 97       	sbiw	r28, 0x1f	; 31
    8ad0:	cd bf       	out	0x3d, r28	; 61
    8ad2:	de bf       	out	0x3e, r29	; 62
    8ad4:	8e 8f       	std	Y+30, r24	; 0x1e
    8ad6:	9f 8f       	std	Y+31, r25	; 0x1f
	bool failure = true;
    8ad8:	81 e0       	ldi	r24, 0x01	; 1
    8ada:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    8adc:	80 e0       	ldi	r24, 0x00	; 0
    8ade:	90 e0       	ldi	r25, 0x00	; 0
    8ae0:	0e 94 49 7b 	call	0xf692	; 0xf692 <eeprom_read_word>
    8ae4:	8c 83       	std	Y+4, r24	; 0x04
    8ae6:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    8ae8:	8c 81       	ldd	r24, Y+4	; 0x04
    8aea:	9d 81       	ldd	r25, Y+5	; 0x05
    8aec:	8e 3c       	cpi	r24, 0xCE	; 206
    8aee:	91 05       	cpc	r25, r1
    8af0:	09 f0       	breq	.+2      	; 0x8af4 <_ZN13EepromManager11readNonVolsEv+0x2e>
    8af2:	50 c1       	rjmp	.+672    	; 0x8d94 <_ZN13EepromManager11readNonVolsEv+0x2ce>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    8af4:	88 e2       	ldi	r24, 0x28	; 40
    8af6:	90 e0       	ldi	r25, 0x00	; 0
    8af8:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    8afc:	8e 83       	std	Y+6, r24	; 0x06
    8afe:	85 e0       	ldi	r24, 0x05	; 5
    8b00:	8f 83       	std	Y+7, r24	; 0x07
    8b02:	84 e1       	ldi	r24, 0x14	; 20
    8b04:	88 87       	std	Y+8, r24	; 0x08
    8b06:	9e 81       	ldd	r25, Y+6	; 0x06
    8b08:	88 85       	ldd	r24, Y+8	; 0x08
    8b0a:	89 17       	cp	r24, r25
    8b0c:	40 f0       	brcs	.+16     	; 0x8b1e <_ZN13EepromManager11readNonVolsEv+0x58>
    8b0e:	9e 81       	ldd	r25, Y+6	; 0x06
    8b10:	8f 81       	ldd	r24, Y+7	; 0x07
    8b12:	98 17       	cp	r25, r24
    8b14:	10 f4       	brcc	.+4      	; 0x8b1a <_ZN13EepromManager11readNonVolsEv+0x54>
    8b16:	8f 81       	ldd	r24, Y+7	; 0x07
    8b18:	03 c0       	rjmp	.+6      	; 0x8b20 <_ZN13EepromManager11readNonVolsEv+0x5a>
    8b1a:	8e 81       	ldd	r24, Y+6	; 0x06
    8b1c:	01 c0       	rjmp	.+2      	; 0x8b20 <_ZN13EepromManager11readNonVolsEv+0x5a>
    8b1e:	88 85       	ldd	r24, Y+8	; 0x08
    8b20:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    8b24:	89 e2       	ldi	r24, 0x29	; 41
    8b26:	90 e0       	ldi	r25, 0x00	; 0
    8b28:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    8b2c:	89 87       	std	Y+9, r24	; 0x09
    8b2e:	1a 86       	std	Y+10, r1	; 0x0a
    8b30:	81 e1       	ldi	r24, 0x11	; 17
    8b32:	8b 87       	std	Y+11, r24	; 0x0b
    8b34:	99 85       	ldd	r25, Y+9	; 0x09
    8b36:	8b 85       	ldd	r24, Y+11	; 0x0b
    8b38:	89 17       	cp	r24, r25
    8b3a:	40 f0       	brcs	.+16     	; 0x8b4c <_ZN13EepromManager11readNonVolsEv+0x86>
    8b3c:	99 85       	ldd	r25, Y+9	; 0x09
    8b3e:	8a 85       	ldd	r24, Y+10	; 0x0a
    8b40:	98 17       	cp	r25, r24
    8b42:	10 f4       	brcc	.+4      	; 0x8b48 <_ZN13EepromManager11readNonVolsEv+0x82>
    8b44:	8a 85       	ldd	r24, Y+10	; 0x0a
    8b46:	03 c0       	rjmp	.+6      	; 0x8b4e <_ZN13EepromManager11readNonVolsEv+0x88>
    8b48:	89 85       	ldd	r24, Y+9	; 0x09
    8b4a:	01 c0       	rjmp	.+2      	; 0x8b4e <_ZN13EepromManager11readNonVolsEv+0x88>
    8b4c:	8b 85       	ldd	r24, Y+11	; 0x0b
    8b4e:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    8b52:	82 e0       	ldi	r24, 0x02	; 2
    8b54:	90 e0       	ldi	r25, 0x00	; 0
    8b56:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8b5a:	dc 01       	movw	r26, r24
    8b5c:	cb 01       	movw	r24, r22
    8b5e:	80 93 72 47 	sts	0x4772, r24	; 0x804772 <g_event_start_epoch>
    8b62:	90 93 73 47 	sts	0x4773, r25	; 0x804773 <g_event_start_epoch+0x1>
    8b66:	a0 93 74 47 	sts	0x4774, r26	; 0x804774 <g_event_start_epoch+0x2>
    8b6a:	b0 93 75 47 	sts	0x4775, r27	; 0x804775 <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    8b6e:	86 e0       	ldi	r24, 0x06	; 6
    8b70:	90 e0       	ldi	r25, 0x00	; 0
    8b72:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8b76:	dc 01       	movw	r26, r24
    8b78:	cb 01       	movw	r24, r22
    8b7a:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    8b7e:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    8b82:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    8b86:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    8b8a:	8a e2       	ldi	r24, 0x2A	; 42
    8b8c:	90 e0       	ldi	r25, 0x00	; 0
    8b8e:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    8b92:	80 93 92 47 	sts	0x4792, r24	; 0x804792 <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8b96:	1a 82       	std	Y+2, r1	; 0x02
    8b98:	1b 82       	std	Y+3, r1	; 0x03
    8b9a:	8a 81       	ldd	r24, Y+2	; 0x02
    8b9c:	9b 81       	ldd	r25, Y+3	; 0x03
    8b9e:	44 97       	sbiw	r24, 0x14	; 20
    8ba0:	e8 f4       	brcc	.+58     	; 0x8bdc <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    8ba2:	8a 81       	ldd	r24, Y+2	; 0x02
    8ba4:	9b 81       	ldd	r25, Y+3	; 0x03
    8ba6:	0a 96       	adiw	r24, 0x0a	; 10
    8ba8:	80 50       	subi	r24, 0x00	; 0
    8baa:	90 40       	sbci	r25, 0x00	; 0
    8bac:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    8bb0:	28 2f       	mov	r18, r24
    8bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    8bb4:	9b 81       	ldd	r25, Y+3	; 0x03
    8bb6:	87 5a       	subi	r24, 0xA7	; 167
    8bb8:	98 4b       	sbci	r25, 0xB8	; 184
    8bba:	fc 01       	movw	r30, r24
    8bbc:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    8bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    8bc0:	9b 81       	ldd	r25, Y+3	; 0x03
    8bc2:	87 5a       	subi	r24, 0xA7	; 167
    8bc4:	98 4b       	sbci	r25, 0xB8	; 184
    8bc6:	fc 01       	movw	r30, r24
    8bc8:	80 81       	ld	r24, Z
    8bca:	88 23       	and	r24, r24
    8bcc:	31 f0       	breq	.+12     	; 0x8bda <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8bce:	8a 81       	ldd	r24, Y+2	; 0x02
    8bd0:	9b 81       	ldd	r25, Y+3	; 0x03
    8bd2:	01 96       	adiw	r24, 0x01	; 1
    8bd4:	8a 83       	std	Y+2, r24	; 0x02
    8bd6:	9b 83       	std	Y+3, r25	; 0x03
    8bd8:	e0 cf       	rjmp	.-64     	; 0x8b9a <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    8bda:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8bdc:	1a 82       	std	Y+2, r1	; 0x02
    8bde:	1b 82       	std	Y+3, r1	; 0x03
    8be0:	8a 81       	ldd	r24, Y+2	; 0x02
    8be2:	9b 81       	ldd	r25, Y+3	; 0x03
    8be4:	08 97       	sbiw	r24, 0x08	; 8
    8be6:	e8 f4       	brcc	.+58     	; 0x8c22 <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    8be8:	8a 81       	ldd	r24, Y+2	; 0x02
    8bea:	9b 81       	ldd	r25, Y+3	; 0x03
    8bec:	4f 96       	adiw	r24, 0x1f	; 31
    8bee:	80 50       	subi	r24, 0x00	; 0
    8bf0:	90 40       	sbci	r25, 0x00	; 0
    8bf2:	0e 94 3a 7b 	call	0xf674	; 0xf674 <eeprom_read_byte>
    8bf6:	28 2f       	mov	r18, r24
    8bf8:	8a 81       	ldd	r24, Y+2	; 0x02
    8bfa:	9b 81       	ldd	r25, Y+3	; 0x03
    8bfc:	8d 56       	subi	r24, 0x6D	; 109
    8bfe:	98 4b       	sbci	r25, 0xB8	; 184
    8c00:	fc 01       	movw	r30, r24
    8c02:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    8c04:	8a 81       	ldd	r24, Y+2	; 0x02
    8c06:	9b 81       	ldd	r25, Y+3	; 0x03
    8c08:	8d 56       	subi	r24, 0x6D	; 109
    8c0a:	98 4b       	sbci	r25, 0xB8	; 184
    8c0c:	fc 01       	movw	r30, r24
    8c0e:	80 81       	ld	r24, Z
    8c10:	88 23       	and	r24, r24
    8c12:	31 f0       	breq	.+12     	; 0x8c20 <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8c14:	8a 81       	ldd	r24, Y+2	; 0x02
    8c16:	9b 81       	ldd	r25, Y+3	; 0x03
    8c18:	01 96       	adiw	r24, 0x01	; 1
    8c1a:	8a 83       	std	Y+2, r24	; 0x02
    8c1c:	9b 83       	std	Y+3, r25	; 0x03
    8c1e:	e0 cf       	rjmp	.-64     	; 0x8be0 <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    8c20:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    8c22:	8b e2       	ldi	r24, 0x2B	; 43
    8c24:	90 e0       	ldi	r25, 0x00	; 0
    8c26:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8c2a:	dc 01       	movw	r26, r24
    8c2c:	cb 01       	movw	r24, r22
    8c2e:	8c 87       	std	Y+12, r24	; 0x0c
    8c30:	9d 87       	std	Y+13, r25	; 0x0d
    8c32:	ae 87       	std	Y+14, r26	; 0x0e
    8c34:	bf 87       	std	Y+15, r27	; 0x0f
    8c36:	80 ee       	ldi	r24, 0xE0	; 224
    8c38:	97 e6       	ldi	r25, 0x67	; 103
    8c3a:	a5 e3       	ldi	r26, 0x35	; 53
    8c3c:	b0 e0       	ldi	r27, 0x00	; 0
    8c3e:	88 8b       	std	Y+16, r24	; 0x10
    8c40:	99 8b       	std	Y+17, r25	; 0x11
    8c42:	aa 8b       	std	Y+18, r26	; 0x12
    8c44:	bb 8b       	std	Y+19, r27	; 0x13
    8c46:	80 e0       	ldi	r24, 0x00	; 0
    8c48:	99 e0       	ldi	r25, 0x09	; 9
    8c4a:	ad e3       	ldi	r26, 0x3D	; 61
    8c4c:	b0 e0       	ldi	r27, 0x00	; 0
    8c4e:	8c 8b       	std	Y+20, r24	; 0x14
    8c50:	9d 8b       	std	Y+21, r25	; 0x15
    8c52:	ae 8b       	std	Y+22, r26	; 0x16
    8c54:	bf 8b       	std	Y+23, r27	; 0x17
    8c56:	2c 85       	ldd	r18, Y+12	; 0x0c
    8c58:	3d 85       	ldd	r19, Y+13	; 0x0d
    8c5a:	4e 85       	ldd	r20, Y+14	; 0x0e
    8c5c:	5f 85       	ldd	r21, Y+15	; 0x0f
    8c5e:	8c 89       	ldd	r24, Y+20	; 0x14
    8c60:	9d 89       	ldd	r25, Y+21	; 0x15
    8c62:	ae 89       	ldd	r26, Y+22	; 0x16
    8c64:	bf 89       	ldd	r27, Y+23	; 0x17
    8c66:	82 17       	cp	r24, r18
    8c68:	93 07       	cpc	r25, r19
    8c6a:	a4 07       	cpc	r26, r20
    8c6c:	b5 07       	cpc	r27, r21
    8c6e:	b8 f0       	brcs	.+46     	; 0x8c9e <_ZN13EepromManager11readNonVolsEv+0x1d8>
    8c70:	2c 85       	ldd	r18, Y+12	; 0x0c
    8c72:	3d 85       	ldd	r19, Y+13	; 0x0d
    8c74:	4e 85       	ldd	r20, Y+14	; 0x0e
    8c76:	5f 85       	ldd	r21, Y+15	; 0x0f
    8c78:	88 89       	ldd	r24, Y+16	; 0x10
    8c7a:	99 89       	ldd	r25, Y+17	; 0x11
    8c7c:	aa 89       	ldd	r26, Y+18	; 0x12
    8c7e:	bb 89       	ldd	r27, Y+19	; 0x13
    8c80:	28 17       	cp	r18, r24
    8c82:	39 07       	cpc	r19, r25
    8c84:	4a 07       	cpc	r20, r26
    8c86:	5b 07       	cpc	r21, r27
    8c88:	28 f4       	brcc	.+10     	; 0x8c94 <_ZN13EepromManager11readNonVolsEv+0x1ce>
    8c8a:	88 89       	ldd	r24, Y+16	; 0x10
    8c8c:	99 89       	ldd	r25, Y+17	; 0x11
    8c8e:	aa 89       	ldd	r26, Y+18	; 0x12
    8c90:	bb 89       	ldd	r27, Y+19	; 0x13
    8c92:	09 c0       	rjmp	.+18     	; 0x8ca6 <_ZN13EepromManager11readNonVolsEv+0x1e0>
    8c94:	8c 85       	ldd	r24, Y+12	; 0x0c
    8c96:	9d 85       	ldd	r25, Y+13	; 0x0d
    8c98:	ae 85       	ldd	r26, Y+14	; 0x0e
    8c9a:	bf 85       	ldd	r27, Y+15	; 0x0f
    8c9c:	04 c0       	rjmp	.+8      	; 0x8ca6 <_ZN13EepromManager11readNonVolsEv+0x1e0>
    8c9e:	8c 89       	ldd	r24, Y+20	; 0x14
    8ca0:	9d 89       	ldd	r25, Y+21	; 0x15
    8ca2:	ae 89       	ldd	r26, Y+22	; 0x16
    8ca4:	bf 89       	ldd	r27, Y+23	; 0x17
    8ca6:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_80m_frequency>
    8caa:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <g_80m_frequency+0x1>
    8cae:	a0 93 2d 40 	sts	0x402D, r26	; 0x80402d <g_80m_frequency+0x2>
    8cb2:	b0 93 2e 40 	sts	0x402E, r27	; 0x80402e <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    8cb6:	8f e2       	ldi	r24, 0x2F	; 47
    8cb8:	90 e0       	ldi	r25, 0x00	; 0
    8cba:	0e 94 42 7b 	call	0xf684	; 0xf684 <eeprom_read_dword>
    8cbe:	dc 01       	movw	r26, r24
    8cc0:	cb 01       	movw	r24, r22
    8cc2:	80 93 31 40 	sts	0x4031, r24	; 0x804031 <g_rtty_offset>
    8cc6:	90 93 32 40 	sts	0x4032, r25	; 0x804032 <g_rtty_offset+0x1>
    8cca:	a0 93 33 40 	sts	0x4033, r26	; 0x804033 <g_rtty_offset+0x2>
    8cce:	b0 93 34 40 	sts	0x4034, r27	; 0x804034 <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    8cd2:	83 e3       	ldi	r24, 0x33	; 51
    8cd4:	90 e0       	ldi	r25, 0x00	; 0
    8cd6:	0e 94 49 7b 	call	0xf692	; 0xf692 <eeprom_read_word>
    8cda:	88 8f       	std	Y+24, r24	; 0x18
    8cdc:	99 8f       	std	Y+25, r25	; 0x19
    8cde:	1a 8e       	std	Y+26, r1	; 0x1a
    8ce0:	1b 8e       	std	Y+27, r1	; 0x1b
    8ce2:	88 e8       	ldi	r24, 0x88	; 136
    8ce4:	93 e1       	ldi	r25, 0x13	; 19
    8ce6:	8c 8f       	std	Y+28, r24	; 0x1c
    8ce8:	9d 8f       	std	Y+29, r25	; 0x1d
    8cea:	28 8d       	ldd	r18, Y+24	; 0x18
    8cec:	39 8d       	ldd	r19, Y+25	; 0x19
    8cee:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8cf0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8cf2:	82 17       	cp	r24, r18
    8cf4:	93 07       	cpc	r25, r19
    8cf6:	68 f0       	brcs	.+26     	; 0x8d12 <_ZN13EepromManager11readNonVolsEv+0x24c>
    8cf8:	28 8d       	ldd	r18, Y+24	; 0x18
    8cfa:	39 8d       	ldd	r19, Y+25	; 0x19
    8cfc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8cfe:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8d00:	28 17       	cp	r18, r24
    8d02:	39 07       	cpc	r19, r25
    8d04:	18 f4       	brcc	.+6      	; 0x8d0c <_ZN13EepromManager11readNonVolsEv+0x246>
    8d06:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8d08:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8d0a:	05 c0       	rjmp	.+10     	; 0x8d16 <_ZN13EepromManager11readNonVolsEv+0x250>
    8d0c:	88 8d       	ldd	r24, Y+24	; 0x18
    8d0e:	99 8d       	ldd	r25, Y+25	; 0x19
    8d10:	02 c0       	rjmp	.+4      	; 0x8d16 <_ZN13EepromManager11readNonVolsEv+0x250>
    8d12:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8d14:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8d16:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <g_80m_power_level_mW>
    8d1a:	90 93 30 40 	sts	0x4030, r25	; 0x804030 <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    8d1e:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    8d22:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    8d26:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    8d2a:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    8d2e:	89 2b       	or	r24, r25
    8d30:	8a 2b       	or	r24, r26
    8d32:	8b 2b       	or	r24, r27
    8d34:	b9 f0       	breq	.+46     	; 0x8d64 <_ZN13EepromManager11readNonVolsEv+0x29e>
    8d36:	20 91 76 47 	lds	r18, 0x4776	; 0x804776 <g_event_finish_epoch>
    8d3a:	30 91 77 47 	lds	r19, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    8d3e:	40 91 78 47 	lds	r20, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    8d42:	50 91 79 47 	lds	r21, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    8d46:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    8d4a:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    8d4e:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    8d52:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    8d56:	82 17       	cp	r24, r18
    8d58:	93 07       	cpc	r25, r19
    8d5a:	a4 07       	cpc	r26, r20
    8d5c:	b5 07       	cpc	r27, r21
    8d5e:	10 f0       	brcs	.+4      	; 0x8d64 <_ZN13EepromManager11readNonVolsEv+0x29e>
    8d60:	81 e0       	ldi	r24, 0x01	; 1
    8d62:	01 c0       	rjmp	.+2      	; 0x8d66 <_ZN13EepromManager11readNonVolsEv+0x2a0>
    8d64:	80 e0       	ldi	r24, 0x00	; 0
    8d66:	88 23       	and	r24, r24
    8d68:	a1 f0       	breq	.+40     	; 0x8d92 <_ZN13EepromManager11readNonVolsEv+0x2cc>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    8d6a:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    8d6e:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    8d72:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    8d76:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    8d7a:	80 58       	subi	r24, 0x80	; 128
    8d7c:	9e 4a       	sbci	r25, 0xAE	; 174
    8d7e:	ae 4f       	sbci	r26, 0xFE	; 254
    8d80:	bf 4f       	sbci	r27, 0xFF	; 255
    8d82:	80 93 76 47 	sts	0x4776, r24	; 0x804776 <g_event_finish_epoch>
    8d86:	90 93 77 47 	sts	0x4777, r25	; 0x804777 <g_event_finish_epoch+0x1>
    8d8a:	a0 93 78 47 	sts	0x4778, r26	; 0x804778 <g_event_finish_epoch+0x2>
    8d8e:	b0 93 79 47 	sts	0x4779, r27	; 0x804779 <g_event_finish_epoch+0x3>
		}

		failure = false;
    8d92:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    8d94:	89 81       	ldd	r24, Y+1	; 0x01
}
    8d96:	6f 96       	adiw	r28, 0x1f	; 31
    8d98:	cd bf       	out	0x3d, r28	; 61
    8d9a:	de bf       	out	0x3e, r29	; 62
    8d9c:	df 91       	pop	r29
    8d9e:	cf 91       	pop	r28
    8da0:	08 95       	ret

00008da2 <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    8da2:	cf 93       	push	r28
    8da4:	df 93       	push	r29
    8da6:	cd b7       	in	r28, 0x3d	; 61
    8da8:	de b7       	in	r29, 0x3e	; 62
    8daa:	2b 97       	sbiw	r28, 0x0b	; 11
    8dac:	cd bf       	out	0x3d, r28	; 61
    8dae:	de bf       	out	0x3e, r29	; 62
    8db0:	8a 87       	std	Y+10, r24	; 0x0a
    8db2:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    8db4:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    8db6:	80 e0       	ldi	r24, 0x00	; 0
    8db8:	90 e0       	ldi	r25, 0x00	; 0
    8dba:	0e 94 49 7b 	call	0xf692	; 0xf692 <eeprom_read_word>
    8dbe:	88 87       	std	Y+8, r24	; 0x08
    8dc0:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    8dc2:	88 85       	ldd	r24, Y+8	; 0x08
    8dc4:	99 85       	ldd	r25, Y+9	; 0x09
    8dc6:	8e 3c       	cpi	r24, 0xCE	; 206
    8dc8:	91 05       	cpc	r25, r1
    8dca:	09 f4       	brne	.+2      	; 0x8dce <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    8dcc:	d9 c0       	rjmp	.+434    	; 0x8f80 <_ZN13EepromManager20initializeEEPROMVarsEv+0x1de>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    8dce:	84 e1       	ldi	r24, 0x14	; 20
    8dd0:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    8dd4:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    8dd8:	68 2f       	mov	r22, r24
    8dda:	88 e2       	ldi	r24, 0x28	; 40
    8ddc:	90 e0       	ldi	r25, 0x00	; 0
    8dde:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    8de2:	81 e0       	ldi	r24, 0x01	; 1
    8de4:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    8de8:	80 91 1b 40 	lds	r24, 0x401B	; 0x80401b <g_fox>
    8dec:	68 2f       	mov	r22, r24
    8dee:	89 e2       	ldi	r24, 0x29	; 41
    8df0:	90 e0       	ldi	r25, 0x00	; 0
    8df2:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    8df6:	10 92 72 47 	sts	0x4772, r1	; 0x804772 <g_event_start_epoch>
    8dfa:	10 92 73 47 	sts	0x4773, r1	; 0x804773 <g_event_start_epoch+0x1>
    8dfe:	10 92 74 47 	sts	0x4774, r1	; 0x804774 <g_event_start_epoch+0x2>
    8e02:	10 92 75 47 	sts	0x4775, r1	; 0x804775 <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    8e06:	80 91 72 47 	lds	r24, 0x4772	; 0x804772 <g_event_start_epoch>
    8e0a:	90 91 73 47 	lds	r25, 0x4773	; 0x804773 <g_event_start_epoch+0x1>
    8e0e:	a0 91 74 47 	lds	r26, 0x4774	; 0x804774 <g_event_start_epoch+0x2>
    8e12:	b0 91 75 47 	lds	r27, 0x4775	; 0x804775 <g_event_start_epoch+0x3>
    8e16:	ac 01       	movw	r20, r24
    8e18:	bd 01       	movw	r22, r26
    8e1a:	82 e0       	ldi	r24, 0x02	; 2
    8e1c:	90 e0       	ldi	r25, 0x00	; 0
    8e1e:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    8e22:	10 92 76 47 	sts	0x4776, r1	; 0x804776 <g_event_finish_epoch>
    8e26:	10 92 77 47 	sts	0x4777, r1	; 0x804777 <g_event_finish_epoch+0x1>
    8e2a:	10 92 78 47 	sts	0x4778, r1	; 0x804778 <g_event_finish_epoch+0x2>
    8e2e:	10 92 79 47 	sts	0x4779, r1	; 0x804779 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    8e32:	80 91 76 47 	lds	r24, 0x4776	; 0x804776 <g_event_finish_epoch>
    8e36:	90 91 77 47 	lds	r25, 0x4777	; 0x804777 <g_event_finish_epoch+0x1>
    8e3a:	a0 91 78 47 	lds	r26, 0x4778	; 0x804778 <g_event_finish_epoch+0x2>
    8e3e:	b0 91 79 47 	lds	r27, 0x4779	; 0x804779 <g_event_finish_epoch+0x3>
    8e42:	ac 01       	movw	r20, r24
    8e44:	bd 01       	movw	r22, r26
    8e46:	86 e0       	ldi	r24, 0x06	; 6
    8e48:	90 e0       	ldi	r25, 0x00	; 0
    8e4a:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    8e4e:	10 92 92 47 	sts	0x4792, r1	; 0x804792 <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    8e52:	80 91 92 47 	lds	r24, 0x4792	; 0x804792 <g_utc_offset>
    8e56:	68 2f       	mov	r22, r24
    8e58:	8a e2       	ldi	r24, 0x2A	; 42
    8e5a:	90 e0       	ldi	r25, 0x00	; 0
    8e5c:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    8e60:	10 92 59 47 	sts	0x4759, r1	; 0x804759 <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    8e64:	60 e0       	ldi	r22, 0x00	; 0
    8e66:	8a e0       	ldi	r24, 0x0A	; 10
    8e68:	90 e0       	ldi	r25, 0x00	; 0
    8e6a:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    8e6e:	8f e9       	ldi	r24, 0x9F	; 159
    8e70:	94 e4       	ldi	r25, 0x44	; 68
    8e72:	8d 83       	std	Y+5, r24	; 0x05
    8e74:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    8e76:	8f e1       	ldi	r24, 0x1F	; 31
    8e78:	90 e0       	ldi	r25, 0x00	; 0
    8e7a:	89 83       	std	Y+1, r24	; 0x01
    8e7c:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    8e7e:	1b 82       	std	Y+3, r1	; 0x03
    8e80:	1c 82       	std	Y+4, r1	; 0x04
    8e82:	8b 81       	ldd	r24, Y+3	; 0x03
    8e84:	9c 81       	ldd	r25, Y+4	; 0x04
    8e86:	04 97       	sbiw	r24, 0x04	; 4
    8e88:	18 f5       	brcc	.+70     	; 0x8ed0 <_ZN13EepromManager20initializeEEPROMVarsEv+0x12e>
			{
				g_unlockCode[j] = *v;
    8e8a:	8d 81       	ldd	r24, Y+5	; 0x05
    8e8c:	9e 81       	ldd	r25, Y+6	; 0x06
    8e8e:	fc 01       	movw	r30, r24
    8e90:	20 81       	ld	r18, Z
    8e92:	8b 81       	ldd	r24, Y+3	; 0x03
    8e94:	9c 81       	ldd	r25, Y+4	; 0x04
    8e96:	8d 56       	subi	r24, 0x6D	; 109
    8e98:	98 4b       	sbci	r25, 0xB8	; 184
    8e9a:	fc 01       	movw	r30, r24
    8e9c:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    8e9e:	8d 81       	ldd	r24, Y+5	; 0x05
    8ea0:	9e 81       	ldd	r25, Y+6	; 0x06
    8ea2:	9c 01       	movw	r18, r24
    8ea4:	2f 5f       	subi	r18, 0xFF	; 255
    8ea6:	3f 4f       	sbci	r19, 0xFF	; 255
    8ea8:	2d 83       	std	Y+5, r18	; 0x05
    8eaa:	3e 83       	std	Y+6, r19	; 0x06
    8eac:	fc 01       	movw	r30, r24
    8eae:	40 81       	ld	r20, Z
    8eb0:	89 81       	ldd	r24, Y+1	; 0x01
    8eb2:	9a 81       	ldd	r25, Y+2	; 0x02
    8eb4:	9c 01       	movw	r18, r24
    8eb6:	2f 5f       	subi	r18, 0xFF	; 255
    8eb8:	3f 4f       	sbci	r19, 0xFF	; 255
    8eba:	29 83       	std	Y+1, r18	; 0x01
    8ebc:	3a 83       	std	Y+2, r19	; 0x02
    8ebe:	64 2f       	mov	r22, r20
    8ec0:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    8ec4:	8b 81       	ldd	r24, Y+3	; 0x03
    8ec6:	9c 81       	ldd	r25, Y+4	; 0x04
    8ec8:	01 96       	adiw	r24, 0x01	; 1
    8eca:	8b 83       	std	Y+3, r24	; 0x03
    8ecc:	9c 83       	std	Y+4, r25	; 0x04
    8ece:	d9 cf       	rjmp	.-78     	; 0x8e82 <_ZN13EepromManager20initializeEEPROMVarsEv+0xe0>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    8ed0:	89 81       	ldd	r24, Y+1	; 0x01
    8ed2:	9a 81       	ldd	r25, Y+2	; 0x02
    8ed4:	60 e0       	ldi	r22, 0x00	; 0
    8ed6:	0e 94 a8 42 	call	0x8550	; 0x8550 <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    8eda:	8b 81       	ldd	r24, Y+3	; 0x03
    8edc:	9c 81       	ldd	r25, Y+4	; 0x04
    8ede:	8d 56       	subi	r24, 0x6D	; 109
    8ee0:	98 4b       	sbci	r25, 0xB8	; 184
    8ee2:	fc 01       	movw	r30, r24
    8ee4:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    8ee6:	80 e2       	ldi	r24, 0x20	; 32
    8ee8:	94 e0       	ldi	r25, 0x04	; 4
    8eea:	a6 e3       	ldi	r26, 0x36	; 54
    8eec:	b0 e0       	ldi	r27, 0x00	; 0
    8eee:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_80m_frequency>
    8ef2:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <g_80m_frequency+0x1>
    8ef6:	a0 93 2d 40 	sts	0x402D, r26	; 0x80402d <g_80m_frequency+0x2>
    8efa:	b0 93 2e 40 	sts	0x402E, r27	; 0x80402e <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    8efe:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    8f02:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    8f06:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    8f0a:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
    8f0e:	ac 01       	movw	r20, r24
    8f10:	bd 01       	movw	r22, r26
    8f12:	8b e2       	ldi	r24, 0x2B	; 43
    8f14:	90 e0       	ldi	r25, 0x00	; 0
    8f16:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    8f1a:	8a ea       	ldi	r24, 0xAA	; 170
    8f1c:	90 e0       	ldi	r25, 0x00	; 0
    8f1e:	a0 e0       	ldi	r26, 0x00	; 0
    8f20:	b0 e0       	ldi	r27, 0x00	; 0
    8f22:	80 93 31 40 	sts	0x4031, r24	; 0x804031 <g_rtty_offset>
    8f26:	90 93 32 40 	sts	0x4032, r25	; 0x804032 <g_rtty_offset+0x1>
    8f2a:	a0 93 33 40 	sts	0x4033, r26	; 0x804033 <g_rtty_offset+0x2>
    8f2e:	b0 93 34 40 	sts	0x4034, r27	; 0x804034 <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    8f32:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    8f36:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    8f3a:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    8f3e:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
    8f42:	ac 01       	movw	r20, r24
    8f44:	bd 01       	movw	r22, r26
    8f46:	8b e2       	ldi	r24, 0x2B	; 43
    8f48:	90 e0       	ldi	r25, 0x00	; 0
    8f4a:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    8f4e:	84 ef       	ldi	r24, 0xF4	; 244
    8f50:	91 e0       	ldi	r25, 0x01	; 1
    8f52:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <g_80m_power_level_mW>
    8f56:	90 93 30 40 	sts	0x4030, r25	; 0x804030 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    8f5a:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    8f5e:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
    8f62:	cc 01       	movw	r24, r24
    8f64:	a0 e0       	ldi	r26, 0x00	; 0
    8f66:	b0 e0       	ldi	r27, 0x00	; 0
    8f68:	ac 01       	movw	r20, r24
    8f6a:	bd 01       	movw	r22, r26
    8f6c:	83 e3       	ldi	r24, 0x33	; 51
    8f6e:	90 e0       	ldi	r25, 0x00	; 0
    8f70:	0e 94 0a 43 	call	0x8614	; 0x8614 <_Z22avr_eeprom_write_dwordjm>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    8f74:	6e ec       	ldi	r22, 0xCE	; 206
    8f76:	70 e0       	ldi	r23, 0x00	; 0
    8f78:	80 e0       	ldi	r24, 0x00	; 0
    8f7a:	90 e0       	ldi	r25, 0x00	; 0
    8f7c:	0e 94 d7 42 	call	0x85ae	; 0x85ae <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    8f80:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    8f82:	2b 96       	adiw	r28, 0x0b	; 11
    8f84:	cd bf       	out	0x3d, r28	; 61
    8f86:	de bf       	out	0x3e, r29	; 62
    8f88:	df 91       	pop	r29
    8f8a:	cf 91       	pop	r28
    8f8c:	08 95       	ret

00008f8e <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    8f8e:	0f 93       	push	r16
    8f90:	1f 93       	push	r17
    8f92:	cf 93       	push	r28
    8f94:	df 93       	push	r29
    8f96:	cd b7       	in	r28, 0x3d	; 61
    8f98:	de b7       	in	r29, 0x3e	; 62
    8f9a:	62 97       	sbiw	r28, 0x12	; 18
    8f9c:	cd bf       	out	0x3d, r28	; 61
    8f9e:	de bf       	out	0x3e, r29	; 62
    8fa0:	89 87       	std	Y+9, r24	; 0x09
    8fa2:	9a 87       	std	Y+10, r25	; 0x0a
    8fa4:	4b 87       	std	Y+11, r20	; 0x0b
    8fa6:	5c 87       	std	Y+12, r21	; 0x0c
    8fa8:	6d 87       	std	Y+13, r22	; 0x0d
    8faa:	7e 87       	std	Y+14, r23	; 0x0e
    8fac:	0f 87       	std	Y+15, r16	; 0x0f
    8fae:	18 8b       	std	Y+16, r17	; 0x10
    8fb0:	29 8b       	std	Y+17, r18	; 0x11
    8fb2:	3a 8b       	std	Y+18, r19	; 0x12
    8fb4:	8f 85       	ldd	r24, Y+15	; 0x0f
    8fb6:	98 89       	ldd	r25, Y+16	; 0x10
    8fb8:	a9 89       	ldd	r26, Y+17	; 0x11
    8fba:	ba 89       	ldd	r27, Y+18	; 0x12
    8fbc:	80 93 b6 47 	sts	0x47B6, r24	; 0x8047b6 <_SAMPLING_FREQUENCY>
    8fc0:	90 93 b7 47 	sts	0x47B7, r25	; 0x8047b7 <_SAMPLING_FREQUENCY+0x1>
    8fc4:	a0 93 b8 47 	sts	0x47B8, r26	; 0x8047b8 <_SAMPLING_FREQUENCY+0x2>
    8fc8:	b0 93 b9 47 	sts	0x47B9, r27	; 0x8047b9 <_SAMPLING_FREQUENCY+0x3>
    8fcc:	8b 85       	ldd	r24, Y+11	; 0x0b
    8fce:	9c 85       	ldd	r25, Y+12	; 0x0c
    8fd0:	ad 85       	ldd	r26, Y+13	; 0x0d
    8fd2:	be 85       	ldd	r27, Y+14	; 0x0e
    8fd4:	89 83       	std	Y+1, r24	; 0x01
    8fd6:	9a 83       	std	Y+2, r25	; 0x02
    8fd8:	ab 83       	std	Y+3, r26	; 0x03
    8fda:	bc 83       	std	Y+4, r27	; 0x04
    8fdc:	84 e6       	ldi	r24, 0x64	; 100
    8fde:	90 e0       	ldi	r25, 0x00	; 0
    8fe0:	8d 83       	std	Y+5, r24	; 0x05
    8fe2:	9e 83       	std	Y+6, r25	; 0x06
    8fe4:	81 ed       	ldi	r24, 0xD1	; 209
    8fe6:	90 e0       	ldi	r25, 0x00	; 0
    8fe8:	8f 83       	std	Y+7, r24	; 0x07
    8fea:	98 87       	std	Y+8, r25	; 0x08
    8fec:	8f 81       	ldd	r24, Y+7	; 0x07
    8fee:	98 85       	ldd	r25, Y+8	; 0x08
    8ff0:	09 2e       	mov	r0, r25
    8ff2:	00 0c       	add	r0, r0
    8ff4:	aa 0b       	sbc	r26, r26
    8ff6:	bb 0b       	sbc	r27, r27
    8ff8:	bc 01       	movw	r22, r24
    8ffa:	cd 01       	movw	r24, r26
    8ffc:	0e 94 13 73 	call	0xe626	; 0xe626 <__floatsisf>
    9000:	dc 01       	movw	r26, r24
    9002:	cb 01       	movw	r24, r22
    9004:	29 81       	ldd	r18, Y+1	; 0x01
    9006:	3a 81       	ldd	r19, Y+2	; 0x02
    9008:	4b 81       	ldd	r20, Y+3	; 0x03
    900a:	5c 81       	ldd	r21, Y+4	; 0x04
    900c:	bc 01       	movw	r22, r24
    900e:	cd 01       	movw	r24, r26
    9010:	0e 94 64 72 	call	0xe4c8	; 0xe4c8 <__cmpsf2>
    9014:	88 23       	and	r24, r24
    9016:	6c f4       	brge	.+26     	; 0x9032 <_ZN8GoertzelC1Eff+0xa4>
    9018:	8f 81       	ldd	r24, Y+7	; 0x07
    901a:	98 85       	ldd	r25, Y+8	; 0x08
    901c:	09 2e       	mov	r0, r25
    901e:	00 0c       	add	r0, r0
    9020:	aa 0b       	sbc	r26, r26
    9022:	bb 0b       	sbc	r27, r27
    9024:	bc 01       	movw	r22, r24
    9026:	cd 01       	movw	r24, r26
    9028:	0e 94 13 73 	call	0xe626	; 0xe626 <__floatsisf>
    902c:	dc 01       	movw	r26, r24
    902e:	cb 01       	movw	r24, r22
    9030:	27 c0       	rjmp	.+78     	; 0x9080 <_ZN8GoertzelC1Eff+0xf2>
    9032:	8d 81       	ldd	r24, Y+5	; 0x05
    9034:	9e 81       	ldd	r25, Y+6	; 0x06
    9036:	09 2e       	mov	r0, r25
    9038:	00 0c       	add	r0, r0
    903a:	aa 0b       	sbc	r26, r26
    903c:	bb 0b       	sbc	r27, r27
    903e:	bc 01       	movw	r22, r24
    9040:	cd 01       	movw	r24, r26
    9042:	0e 94 13 73 	call	0xe626	; 0xe626 <__floatsisf>
    9046:	dc 01       	movw	r26, r24
    9048:	cb 01       	movw	r24, r22
    904a:	29 81       	ldd	r18, Y+1	; 0x01
    904c:	3a 81       	ldd	r19, Y+2	; 0x02
    904e:	4b 81       	ldd	r20, Y+3	; 0x03
    9050:	5c 81       	ldd	r21, Y+4	; 0x04
    9052:	bc 01       	movw	r22, r24
    9054:	cd 01       	movw	r24, r26
    9056:	0e 94 04 74 	call	0xe808	; 0xe808 <__gesf2>
    905a:	18 16       	cp	r1, r24
    905c:	6c f4       	brge	.+26     	; 0x9078 <_ZN8GoertzelC1Eff+0xea>
    905e:	8d 81       	ldd	r24, Y+5	; 0x05
    9060:	9e 81       	ldd	r25, Y+6	; 0x06
    9062:	09 2e       	mov	r0, r25
    9064:	00 0c       	add	r0, r0
    9066:	aa 0b       	sbc	r26, r26
    9068:	bb 0b       	sbc	r27, r27
    906a:	bc 01       	movw	r22, r24
    906c:	cd 01       	movw	r24, r26
    906e:	0e 94 13 73 	call	0xe626	; 0xe626 <__floatsisf>
    9072:	dc 01       	movw	r26, r24
    9074:	cb 01       	movw	r24, r22
    9076:	04 c0       	rjmp	.+8      	; 0x9080 <_ZN8GoertzelC1Eff+0xf2>
    9078:	89 81       	ldd	r24, Y+1	; 0x01
    907a:	9a 81       	ldd	r25, Y+2	; 0x02
    907c:	ab 81       	ldd	r26, Y+3	; 0x03
    907e:	bc 81       	ldd	r27, Y+4	; 0x04
    9080:	bc 01       	movw	r22, r24
    9082:	cd 01       	movw	r24, r26
    9084:	0e 94 db 72 	call	0xe5b6	; 0xe5b6 <__fixsfsi>
    9088:	dc 01       	movw	r26, r24
    908a:	cb 01       	movw	r24, r22
    908c:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <_N>
    9090:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <_N+0x1>
    9094:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_N>
    9098:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <_N+0x1>
    909c:	88 0f       	add	r24, r24
    909e:	99 1f       	adc	r25, r25
    90a0:	0e 94 12 75 	call	0xea24	; 0xea24 <malloc>
    90a4:	80 93 bf 47 	sts	0x47BF, r24	; 0x8047bf <testData>
    90a8:	90 93 c0 47 	sts	0x47C0, r25	; 0x8047c0 <testData+0x1>
    90ac:	00 00       	nop
    90ae:	62 96       	adiw	r28, 0x12	; 18
    90b0:	cd bf       	out	0x3d, r28	; 61
    90b2:	de bf       	out	0x3e, r29	; 62
    90b4:	df 91       	pop	r29
    90b6:	cf 91       	pop	r28
    90b8:	1f 91       	pop	r17
    90ba:	0f 91       	pop	r16
    90bc:	08 95       	ret

000090be <_ZN8GoertzelD1Ev>:
    90be:	cf 93       	push	r28
    90c0:	df 93       	push	r29
    90c2:	00 d0       	rcall	.+0      	; 0x90c4 <_ZN8GoertzelD1Ev+0x6>
    90c4:	cd b7       	in	r28, 0x3d	; 61
    90c6:	de b7       	in	r29, 0x3e	; 62
    90c8:	89 83       	std	Y+1, r24	; 0x01
    90ca:	9a 83       	std	Y+2, r25	; 0x02
    90cc:	80 91 bf 47 	lds	r24, 0x47BF	; 0x8047bf <testData>
    90d0:	90 91 c0 47 	lds	r25, 0x47C0	; 0x8047c0 <testData+0x1>
    90d4:	0e 94 aa 75 	call	0xeb54	; 0xeb54 <free>
    90d8:	00 00       	nop
    90da:	0f 90       	pop	r0
    90dc:	0f 90       	pop	r0
    90de:	df 91       	pop	r29
    90e0:	cf 91       	pop	r28
    90e2:	08 95       	ret

000090e4 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    90e4:	cf 93       	push	r28
    90e6:	df 93       	push	r29
    90e8:	00 d0       	rcall	.+0      	; 0x90ea <_ZN8Goertzel9DataPointEi+0x6>
    90ea:	00 d0       	rcall	.+0      	; 0x90ec <_ZN8Goertzel9DataPointEi+0x8>
    90ec:	cd b7       	in	r28, 0x3d	; 61
    90ee:	de b7       	in	r29, 0x3e	; 62
    90f0:	89 83       	std	Y+1, r24	; 0x01
    90f2:	9a 83       	std	Y+2, r25	; 0x02
    90f4:	6b 83       	std	Y+3, r22	; 0x03
    90f6:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    90f8:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_samplesReady>
    90fc:	88 23       	and	r24, r24
    90fe:	19 f0       	breq	.+6      	; 0x9106 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    9100:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_samplesReady>
    9104:	32 c0       	rjmp	.+100    	; 0x916a <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    9106:	20 91 bf 47 	lds	r18, 0x47BF	; 0x8047bf <testData>
    910a:	30 91 c0 47 	lds	r19, 0x47C0	; 0x8047c0 <testData+0x1>
    910e:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_index>
    9112:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <_index+0x1>
    9116:	88 0f       	add	r24, r24
    9118:	99 1f       	adc	r25, r25
    911a:	82 0f       	add	r24, r18
    911c:	93 1f       	adc	r25, r19
    911e:	2b 81       	ldd	r18, Y+3	; 0x03
    9120:	3c 81       	ldd	r19, Y+4	; 0x04
    9122:	fc 01       	movw	r30, r24
    9124:	20 83       	st	Z, r18
    9126:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    9128:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_index>
    912c:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <_index+0x1>
    9130:	01 96       	adiw	r24, 0x01	; 1
    9132:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <_index>
    9136:	90 93 bd 47 	sts	0x47BD, r25	; 0x8047bd <_index+0x1>
	if(_index >= _N)
    913a:	20 91 bc 47 	lds	r18, 0x47BC	; 0x8047bc <_index>
    913e:	30 91 bd 47 	lds	r19, 0x47BD	; 0x8047bd <_index+0x1>
    9142:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_N>
    9146:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <_N+0x1>
    914a:	41 e0       	ldi	r20, 0x01	; 1
    914c:	28 17       	cp	r18, r24
    914e:	39 07       	cpc	r19, r25
    9150:	0c f4       	brge	.+2      	; 0x9154 <_ZN8Goertzel9DataPointEi+0x70>
    9152:	40 e0       	ldi	r20, 0x00	; 0
    9154:	44 23       	and	r20, r20
    9156:	39 f0       	breq	.+14     	; 0x9166 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    9158:	10 92 bc 47 	sts	0x47BC, r1	; 0x8047bc <_index>
    915c:	10 92 bd 47 	sts	0x47BD, r1	; 0x8047bd <_index+0x1>
		_samplesReady = true;
    9160:	81 e0       	ldi	r24, 0x01	; 1
    9162:	80 93 be 47 	sts	0x47BE, r24	; 0x8047be <_samplesReady>
	}

	return(_samplesReady);
    9166:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_samplesReady>
}
    916a:	24 96       	adiw	r28, 0x04	; 4
    916c:	cd bf       	out	0x3d, r28	; 61
    916e:	de bf       	out	0x3e, r29	; 62
    9170:	df 91       	pop	r29
    9172:	cf 91       	pop	r28
    9174:	08 95       	ret

00009176 <PORTB_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9176:	cf 93       	push	r28
    9178:	df 93       	push	r29
    917a:	00 d0       	rcall	.+0      	; 0x917c <PORTB_set_pin_pull_mode+0x6>
    917c:	00 d0       	rcall	.+0      	; 0x917e <PORTB_set_pin_pull_mode+0x8>
    917e:	cd b7       	in	r28, 0x3d	; 61
    9180:	de b7       	in	r29, 0x3e	; 62
    9182:	8b 83       	std	Y+3, r24	; 0x03
    9184:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);
    9186:	8b 81       	ldd	r24, Y+3	; 0x03
    9188:	88 2f       	mov	r24, r24
    918a:	90 e0       	ldi	r25, 0x00	; 0
    918c:	80 5d       	subi	r24, 0xD0	; 208
    918e:	9b 4f       	sbci	r25, 0xFB	; 251
    9190:	89 83       	std	Y+1, r24	; 0x01
    9192:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9194:	8c 81       	ldd	r24, Y+4	; 0x04
    9196:	81 30       	cpi	r24, 0x01	; 1
    9198:	59 f4       	brne	.+22     	; 0x91b0 <PORTB_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    919a:	89 81       	ldd	r24, Y+1	; 0x01
    919c:	9a 81       	ldd	r25, Y+2	; 0x02
    919e:	fc 01       	movw	r30, r24
    91a0:	80 81       	ld	r24, Z
    91a2:	28 2f       	mov	r18, r24
    91a4:	28 60       	ori	r18, 0x08	; 8
    91a6:	89 81       	ldd	r24, Y+1	; 0x01
    91a8:	9a 81       	ldd	r25, Y+2	; 0x02
    91aa:	fc 01       	movw	r30, r24
    91ac:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    91ae:	0d c0       	rjmp	.+26     	; 0x91ca <PORTB_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    91b0:	8c 81       	ldd	r24, Y+4	; 0x04
    91b2:	88 23       	and	r24, r24
    91b4:	51 f4       	brne	.+20     	; 0x91ca <PORTB_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    91b6:	89 81       	ldd	r24, Y+1	; 0x01
    91b8:	9a 81       	ldd	r25, Y+2	; 0x02
    91ba:	fc 01       	movw	r30, r24
    91bc:	80 81       	ld	r24, Z
    91be:	28 2f       	mov	r18, r24
    91c0:	27 7f       	andi	r18, 0xF7	; 247
    91c2:	89 81       	ldd	r24, Y+1	; 0x01
    91c4:	9a 81       	ldd	r25, Y+2	; 0x02
    91c6:	fc 01       	movw	r30, r24
    91c8:	20 83       	st	Z, r18
	}
}
    91ca:	00 00       	nop
    91cc:	24 96       	adiw	r28, 0x04	; 4
    91ce:	cd bf       	out	0x3d, r28	; 61
    91d0:	de bf       	out	0x3e, r29	; 62
    91d2:	df 91       	pop	r29
    91d4:	cf 91       	pop	r28
    91d6:	08 95       	ret

000091d8 <PORTC_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    91d8:	cf 93       	push	r28
    91da:	df 93       	push	r29
    91dc:	00 d0       	rcall	.+0      	; 0x91de <PORTC_set_pin_pull_mode+0x6>
    91de:	00 d0       	rcall	.+0      	; 0x91e0 <PORTC_set_pin_pull_mode+0x8>
    91e0:	cd b7       	in	r28, 0x3d	; 61
    91e2:	de b7       	in	r29, 0x3e	; 62
    91e4:	8b 83       	std	Y+3, r24	; 0x03
    91e6:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
    91e8:	8b 81       	ldd	r24, Y+3	; 0x03
    91ea:	88 2f       	mov	r24, r24
    91ec:	90 e0       	ldi	r25, 0x00	; 0
    91ee:	80 5b       	subi	r24, 0xB0	; 176
    91f0:	9b 4f       	sbci	r25, 0xFB	; 251
    91f2:	89 83       	std	Y+1, r24	; 0x01
    91f4:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    91f6:	8c 81       	ldd	r24, Y+4	; 0x04
    91f8:	81 30       	cpi	r24, 0x01	; 1
    91fa:	59 f4       	brne	.+22     	; 0x9212 <PORTC_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    91fc:	89 81       	ldd	r24, Y+1	; 0x01
    91fe:	9a 81       	ldd	r25, Y+2	; 0x02
    9200:	fc 01       	movw	r30, r24
    9202:	80 81       	ld	r24, Z
    9204:	28 2f       	mov	r18, r24
    9206:	28 60       	ori	r18, 0x08	; 8
    9208:	89 81       	ldd	r24, Y+1	; 0x01
    920a:	9a 81       	ldd	r25, Y+2	; 0x02
    920c:	fc 01       	movw	r30, r24
    920e:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    9210:	0d c0       	rjmp	.+26     	; 0x922c <PORTC_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    9212:	8c 81       	ldd	r24, Y+4	; 0x04
    9214:	88 23       	and	r24, r24
    9216:	51 f4       	brne	.+20     	; 0x922c <PORTC_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9218:	89 81       	ldd	r24, Y+1	; 0x01
    921a:	9a 81       	ldd	r25, Y+2	; 0x02
    921c:	fc 01       	movw	r30, r24
    921e:	80 81       	ld	r24, Z
    9220:	28 2f       	mov	r18, r24
    9222:	27 7f       	andi	r18, 0xF7	; 247
    9224:	89 81       	ldd	r24, Y+1	; 0x01
    9226:	9a 81       	ldd	r25, Y+2	; 0x02
    9228:	fc 01       	movw	r30, r24
    922a:	20 83       	st	Z, r18
	}
}
    922c:	00 00       	nop
    922e:	24 96       	adiw	r28, 0x04	; 4
    9230:	cd bf       	out	0x3d, r28	; 61
    9232:	de bf       	out	0x3e, r29	; 62
    9234:	df 91       	pop	r29
    9236:	cf 91       	pop	r28
    9238:	08 95       	ret

0000923a <I2C_0_Init>:
/************************************************************************/
/* I2C_0                                                               */
/************************************************************************/

void I2C_0_Init(void)
{
    923a:	cf 93       	push	r28
    923c:	df 93       	push	r29
    923e:	cd b7       	in	r28, 0x3d	; 61
    9240:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PC2/PC3 */
	PORTMUX.TWIROUTEA &= 0x0A;
    9242:	80 ee       	ldi	r24, 0xE0	; 224
    9244:	95 e0       	ldi	r25, 0x05	; 5
    9246:	20 ee       	ldi	r18, 0xE0	; 224
    9248:	35 e0       	ldi	r19, 0x05	; 5
    924a:	f9 01       	movw	r30, r18
    924c:	25 81       	ldd	r18, Z+5	; 0x05
    924e:	2a 70       	andi	r18, 0x0A	; 10
    9250:	fc 01       	movw	r30, r24
    9252:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    9254:	80 ee       	ldi	r24, 0xE0	; 224
    9256:	95 e0       	ldi	r25, 0x05	; 5
    9258:	20 ee       	ldi	r18, 0xE0	; 224
    925a:	35 e0       	ldi	r19, 0x05	; 5
    925c:	f9 01       	movw	r30, r18
    925e:	25 81       	ldd	r18, Z+5	; 0x05
    9260:	22 60       	ori	r18, 0x02	; 2
    9262:	fc 01       	movw	r30, r24
    9264:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    9266:	80 e0       	ldi	r24, 0x00	; 0
    9268:	99 e0       	ldi	r25, 0x09	; 9
    926a:	23 e7       	ldi	r18, 0x73	; 115
    926c:	fc 01       	movw	r30, r24
    926e:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    9270:	80 e0       	ldi	r24, 0x00	; 0
    9272:	99 e0       	ldi	r25, 0x09	; 9
    9274:	21 e0       	ldi	r18, 0x01	; 1
    9276:	fc 01       	movw	r30, r24
    9278:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    927a:	80 e0       	ldi	r24, 0x00	; 0
    927c:	99 e0       	ldi	r25, 0x09	; 9
    927e:	fc 01       	movw	r30, r24
    9280:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    9282:	80 e0       	ldi	r24, 0x00	; 0
    9284:	99 e0       	ldi	r25, 0x09	; 9
    9286:	fc 01       	movw	r30, r24
    9288:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    928a:	80 e0       	ldi	r24, 0x00	; 0
    928c:	99 e0       	ldi	r25, 0x09	; 9
    928e:	21 e0       	ldi	r18, 0x01	; 1
    9290:	fc 01       	movw	r30, r24
    9292:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
	
	PORTC_set_pin_pull_mode(2, PORT_PULL_UP);
    9294:	61 e0       	ldi	r22, 0x01	; 1
    9296:	82 e0       	ldi	r24, 0x02	; 2
    9298:	0e 94 ec 48 	call	0x91d8	; 0x91d8 <PORTC_set_pin_pull_mode>
	PORTC_set_pin_pull_mode(3, PORT_PULL_UP);
    929c:	61 e0       	ldi	r22, 0x01	; 1
    929e:	83 e0       	ldi	r24, 0x03	; 3
    92a0:	0e 94 ec 48 	call	0x91d8	; 0x91d8 <PORTC_set_pin_pull_mode>
}
    92a4:	00 00       	nop
    92a6:	df 91       	pop	r29
    92a8:	cf 91       	pop	r28
    92aa:	08 95       	ret

000092ac <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    92ac:	cf 93       	push	r28
    92ae:	df 93       	push	r29
    92b0:	1f 92       	push	r1
    92b2:	cd b7       	in	r28, 0x3d	; 61
    92b4:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    92b6:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 300;
    92b8:	8c e2       	ldi	r24, 0x2C	; 44
    92ba:	91 e0       	ldi	r25, 0x01	; 1
    92bc:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    92c0:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    92c4:	80 e0       	ldi	r24, 0x00	; 0
    92c6:	99 e0       	ldi	r25, 0x09	; 9
    92c8:	fc 01       	movw	r30, r24
    92ca:	85 81       	ldd	r24, Z+5	; 0x05
    92cc:	88 2f       	mov	r24, r24
    92ce:	90 e0       	ldi	r25, 0x00	; 0
    92d0:	80 7c       	andi	r24, 0xC0	; 192
    92d2:	99 27       	eor	r25, r25
    92d4:	21 e0       	ldi	r18, 0x01	; 1
    92d6:	89 2b       	or	r24, r25
    92d8:	09 f4       	brne	.+2      	; 0x92dc <_ZL11i2c_0_WaitWv+0x30>
    92da:	20 e0       	ldi	r18, 0x00	; 0
    92dc:	22 23       	and	r18, r18
    92de:	a1 f0       	breq	.+40     	; 0x9308 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    92e0:	80 e0       	ldi	r24, 0x00	; 0
    92e2:	99 e0       	ldi	r25, 0x09	; 9
    92e4:	fc 01       	movw	r30, r24
    92e6:	85 81       	ldd	r24, Z+5	; 0x05
    92e8:	88 2f       	mov	r24, r24
    92ea:	90 e0       	ldi	r25, 0x00	; 0
    92ec:	80 71       	andi	r24, 0x10	; 16
    92ee:	99 27       	eor	r25, r25
    92f0:	21 e0       	ldi	r18, 0x01	; 1
    92f2:	89 2b       	or	r24, r25
    92f4:	09 f0       	breq	.+2      	; 0x92f8 <_ZL11i2c_0_WaitWv+0x4c>
    92f6:	20 e0       	ldi	r18, 0x00	; 0
    92f8:	22 23       	and	r18, r18
    92fa:	19 f0       	breq	.+6      	; 0x9302 <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    92fc:	81 e0       	ldi	r24, 0x01	; 1
    92fe:	89 83       	std	Y+1, r24	; 0x01
    9300:	13 c0       	rjmp	.+38     	; 0x9328 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    9302:	82 e0       	ldi	r24, 0x02	; 2
    9304:	89 83       	std	Y+1, r24	; 0x01
    9306:	10 c0       	rjmp	.+32     	; 0x9328 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9308:	80 e0       	ldi	r24, 0x00	; 0
    930a:	99 e0       	ldi	r25, 0x09	; 9
    930c:	fc 01       	movw	r30, r24
    930e:	85 81       	ldd	r24, Z+5	; 0x05
    9310:	88 2f       	mov	r24, r24
    9312:	90 e0       	ldi	r25, 0x00	; 0
    9314:	8c 70       	andi	r24, 0x0C	; 12
    9316:	99 27       	eor	r25, r25
    9318:	21 e0       	ldi	r18, 0x01	; 1
    931a:	89 2b       	or	r24, r25
    931c:	09 f4       	brne	.+2      	; 0x9320 <_ZL11i2c_0_WaitWv+0x74>
    931e:	20 e0       	ldi	r18, 0x00	; 0
    9320:	22 23       	and	r18, r18
    9322:	11 f0       	breq	.+4      	; 0x9328 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9324:	84 e0       	ldi	r24, 0x04	; 4
    9326:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9328:	89 81       	ldd	r24, Y+1	; 0x01
    932a:	88 23       	and	r24, r24
    932c:	41 f4       	brne	.+16     	; 0x933e <_ZL11i2c_0_WaitWv+0x92>
    932e:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    9332:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    9336:	89 2b       	or	r24, r25
    9338:	11 f0       	breq	.+4      	; 0x933e <_ZL11i2c_0_WaitWv+0x92>
    933a:	81 e0       	ldi	r24, 0x01	; 1
    933c:	01 c0       	rjmp	.+2      	; 0x9340 <_ZL11i2c_0_WaitWv+0x94>
    933e:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 300;
	
	do
    9340:	88 23       	and	r24, r24
    9342:	09 f0       	breq	.+2      	; 0x9346 <_ZL11i2c_0_WaitWv+0x9a>
    9344:	bf cf       	rjmp	.-130    	; 0x92c4 <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    9346:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    934a:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    934e:	21 e0       	ldi	r18, 0x01	; 1
    9350:	89 2b       	or	r24, r25
    9352:	09 f0       	breq	.+2      	; 0x9356 <_ZL11i2c_0_WaitWv+0xaa>
    9354:	20 e0       	ldi	r18, 0x00	; 0
    9356:	22 23       	and	r18, r18
    9358:	11 f0       	breq	.+4      	; 0x935e <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    935a:	84 e0       	ldi	r24, 0x04	; 4
    935c:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    935e:	89 81       	ldd	r24, Y+1	; 0x01
}
    9360:	0f 90       	pop	r0
    9362:	df 91       	pop	r29
    9364:	cf 91       	pop	r28
    9366:	08 95       	ret

00009368 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    9368:	cf 93       	push	r28
    936a:	df 93       	push	r29
    936c:	1f 92       	push	r1
    936e:	cd b7       	in	r28, 0x3d	; 61
    9370:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9372:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    9374:	88 ec       	ldi	r24, 0xC8	; 200
    9376:	90 e0       	ldi	r25, 0x00	; 0
    9378:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    937c:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9380:	80 e0       	ldi	r24, 0x00	; 0
    9382:	99 e0       	ldi	r25, 0x09	; 9
    9384:	fc 01       	movw	r30, r24
    9386:	85 81       	ldd	r24, Z+5	; 0x05
    9388:	88 2f       	mov	r24, r24
    938a:	90 e0       	ldi	r25, 0x00	; 0
    938c:	80 7c       	andi	r24, 0xC0	; 192
    938e:	99 27       	eor	r25, r25
    9390:	21 e0       	ldi	r18, 0x01	; 1
    9392:	89 2b       	or	r24, r25
    9394:	09 f4       	brne	.+2      	; 0x9398 <_ZL11i2c_0_WaitRv+0x30>
    9396:	20 e0       	ldi	r18, 0x00	; 0
    9398:	22 23       	and	r18, r18
    939a:	19 f0       	breq	.+6      	; 0x93a2 <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    939c:	83 e0       	ldi	r24, 0x03	; 3
    939e:	89 83       	std	Y+1, r24	; 0x01
    93a0:	10 c0       	rjmp	.+32     	; 0x93c2 <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    93a2:	80 e0       	ldi	r24, 0x00	; 0
    93a4:	99 e0       	ldi	r25, 0x09	; 9
    93a6:	fc 01       	movw	r30, r24
    93a8:	85 81       	ldd	r24, Z+5	; 0x05
    93aa:	88 2f       	mov	r24, r24
    93ac:	90 e0       	ldi	r25, 0x00	; 0
    93ae:	8c 70       	andi	r24, 0x0C	; 12
    93b0:	99 27       	eor	r25, r25
    93b2:	21 e0       	ldi	r18, 0x01	; 1
    93b4:	89 2b       	or	r24, r25
    93b6:	09 f4       	brne	.+2      	; 0x93ba <_ZL11i2c_0_WaitRv+0x52>
    93b8:	20 e0       	ldi	r18, 0x00	; 0
    93ba:	22 23       	and	r18, r18
    93bc:	11 f0       	breq	.+4      	; 0x93c2 <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    93be:	84 e0       	ldi	r24, 0x04	; 4
    93c0:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    93c2:	89 81       	ldd	r24, Y+1	; 0x01
    93c4:	88 23       	and	r24, r24
    93c6:	41 f4       	brne	.+16     	; 0x93d8 <_ZL11i2c_0_WaitRv+0x70>
    93c8:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    93cc:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    93d0:	89 2b       	or	r24, r25
    93d2:	11 f0       	breq	.+4      	; 0x93d8 <_ZL11i2c_0_WaitRv+0x70>
    93d4:	81 e0       	ldi	r24, 0x01	; 1
    93d6:	01 c0       	rjmp	.+2      	; 0x93da <_ZL11i2c_0_WaitRv+0x72>
    93d8:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    93da:	88 23       	and	r24, r24
    93dc:	09 f0       	breq	.+2      	; 0x93e0 <_ZL11i2c_0_WaitRv+0x78>
    93de:	d0 cf       	rjmp	.-96     	; 0x9380 <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    93e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    93e2:	0f 90       	pop	r0
    93e4:	df 91       	pop	r29
    93e6:	cf 91       	pop	r28
    93e8:	08 95       	ret

000093ea <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    93ea:	cf 93       	push	r28
    93ec:	df 93       	push	r29
    93ee:	cd b7       	in	r28, 0x3d	; 61
    93f0:	de b7       	in	r29, 0x3e	; 62
    93f2:	26 97       	sbiw	r28, 0x06	; 6
    93f4:	cd bf       	out	0x3d, r28	; 61
    93f6:	de bf       	out	0x3e, r29	; 62
    93f8:	8a 83       	std	Y+2, r24	; 0x02
    93fa:	6b 83       	std	Y+3, r22	; 0x03
    93fc:	4c 83       	std	Y+4, r20	; 0x04
    93fe:	5d 83       	std	Y+5, r21	; 0x05
    9400:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    9402:	8f ef       	ldi	r24, 0xFF	; 255
    9404:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    9406:	80 e0       	ldi	r24, 0x00	; 0
    9408:	99 e0       	ldi	r25, 0x09	; 9
    940a:	2a 81       	ldd	r18, Y+2	; 0x02
    940c:	fc 01       	movw	r30, r24
    940e:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9410:	0e 94 56 49 	call	0x92ac	; 0x92ac <_ZL11i2c_0_WaitWv>
    9414:	98 2f       	mov	r25, r24
    9416:	81 e0       	ldi	r24, 0x01	; 1
    9418:	91 30       	cpi	r25, 0x01	; 1
    941a:	09 f4       	brne	.+2      	; 0x941e <I2C_0_SendData+0x34>
    941c:	80 e0       	ldi	r24, 0x00	; 0
    941e:	88 23       	and	r24, r24
    9420:	11 f0       	breq	.+4      	; 0x9426 <I2C_0_SendData+0x3c>
	{
		return retVal;
    9422:	89 81       	ldd	r24, Y+1	; 0x01
    9424:	44 c0       	rjmp	.+136    	; 0x94ae <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9426:	80 e0       	ldi	r24, 0x00	; 0
    9428:	99 e0       	ldi	r25, 0x09	; 9
    942a:	2b 81       	ldd	r18, Y+3	; 0x03
    942c:	fc 01       	movw	r30, r24
    942e:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9430:	0e 94 56 49 	call	0x92ac	; 0x92ac <_ZL11i2c_0_WaitWv>
    9434:	98 2f       	mov	r25, r24
    9436:	81 e0       	ldi	r24, 0x01	; 1
    9438:	91 30       	cpi	r25, 0x01	; 1
    943a:	09 f4       	brne	.+2      	; 0x943e <I2C_0_SendData+0x54>
    943c:	80 e0       	ldi	r24, 0x00	; 0
    943e:	88 23       	and	r24, r24
    9440:	11 f0       	breq	.+4      	; 0x9446 <I2C_0_SendData+0x5c>
	{
		return retVal;
    9442:	89 81       	ldd	r24, Y+1	; 0x01
    9444:	34 c0       	rjmp	.+104    	; 0x94ae <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    9446:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    9448:	8e 81       	ldd	r24, Y+6	; 0x06
    944a:	88 23       	and	r24, r24
    944c:	79 f1       	breq	.+94     	; 0x94ac <I2C_0_SendData+0xc2>
    944e:	8c 81       	ldd	r24, Y+4	; 0x04
    9450:	9d 81       	ldd	r25, Y+5	; 0x05
    9452:	89 2b       	or	r24, r25
    9454:	59 f1       	breq	.+86     	; 0x94ac <I2C_0_SendData+0xc2>
	{
		while(len--)
    9456:	8e 81       	ldd	r24, Y+6	; 0x06
    9458:	9f ef       	ldi	r25, 0xFF	; 255
    945a:	98 0f       	add	r25, r24
    945c:	9e 83       	std	Y+6, r25	; 0x06
    945e:	91 e0       	ldi	r25, 0x01	; 1
    9460:	88 23       	and	r24, r24
    9462:	09 f4       	brne	.+2      	; 0x9466 <I2C_0_SendData+0x7c>
    9464:	90 e0       	ldi	r25, 0x00	; 0
    9466:	99 23       	and	r25, r25
    9468:	09 f1       	breq	.+66     	; 0x94ac <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    946a:	80 e0       	ldi	r24, 0x00	; 0
    946c:	99 e0       	ldi	r25, 0x09	; 9
    946e:	2c 81       	ldd	r18, Y+4	; 0x04
    9470:	3d 81       	ldd	r19, Y+5	; 0x05
    9472:	f9 01       	movw	r30, r18
    9474:	20 81       	ld	r18, Z
    9476:	fc 01       	movw	r30, r24
    9478:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    947a:	0e 94 56 49 	call	0x92ac	; 0x92ac <_ZL11i2c_0_WaitWv>
    947e:	98 2f       	mov	r25, r24
    9480:	81 e0       	ldi	r24, 0x01	; 1
    9482:	91 30       	cpi	r25, 0x01	; 1
    9484:	09 f0       	breq	.+2      	; 0x9488 <I2C_0_SendData+0x9e>
    9486:	80 e0       	ldi	r24, 0x00	; 0
    9488:	88 23       	and	r24, r24
    948a:	79 f0       	breq	.+30     	; 0x94aa <I2C_0_SendData+0xc0>
			{
				retVal++;
    948c:	89 81       	ldd	r24, Y+1	; 0x01
    948e:	8f 5f       	subi	r24, 0xFF	; 255
    9490:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9492:	8c 81       	ldd	r24, Y+4	; 0x04
    9494:	9d 81       	ldd	r25, Y+5	; 0x05
    9496:	01 96       	adiw	r24, 0x01	; 1
    9498:	8c 83       	std	Y+4, r24	; 0x04
    949a:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    949c:	8e 81       	ldd	r24, Y+6	; 0x06
    949e:	88 23       	and	r24, r24
    94a0:	11 f4       	brne	.+4      	; 0x94a6 <I2C_0_SendData+0xbc>
    94a2:	0e 94 db 4a 	call	0x95b6	; 0x95b6 <I2C_0_EndSession>
				continue;
    94a6:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    94a8:	d6 cf       	rjmp	.-84     	; 0x9456 <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    94aa:	00 00       	nop
			}
		}
	}
	
	return retVal;
    94ac:	89 81       	ldd	r24, Y+1	; 0x01
}
    94ae:	26 96       	adiw	r28, 0x06	; 6
    94b0:	cd bf       	out	0x3d, r28	; 61
    94b2:	de bf       	out	0x3e, r29	; 62
    94b4:	df 91       	pop	r29
    94b6:	cf 91       	pop	r28
    94b8:	08 95       	ret

000094ba <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    94ba:	cf 93       	push	r28
    94bc:	df 93       	push	r29
    94be:	cd b7       	in	r28, 0x3d	; 61
    94c0:	de b7       	in	r29, 0x3e	; 62
    94c2:	26 97       	sbiw	r28, 0x06	; 6
    94c4:	cd bf       	out	0x3d, r28	; 61
    94c6:	de bf       	out	0x3e, r29	; 62
    94c8:	8a 83       	std	Y+2, r24	; 0x02
    94ca:	6b 83       	std	Y+3, r22	; 0x03
    94cc:	4c 83       	std	Y+4, r20	; 0x04
    94ce:	5d 83       	std	Y+5, r21	; 0x05
    94d0:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    94d2:	8f ef       	ldi	r24, 0xFF	; 255
    94d4:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    94d6:	80 e0       	ldi	r24, 0x00	; 0
    94d8:	99 e0       	ldi	r25, 0x09	; 9
    94da:	2a 81       	ldd	r18, Y+2	; 0x02
    94dc:	fc 01       	movw	r30, r24
    94de:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    94e0:	0e 94 56 49 	call	0x92ac	; 0x92ac <_ZL11i2c_0_WaitWv>
    94e4:	98 2f       	mov	r25, r24
    94e6:	81 e0       	ldi	r24, 0x01	; 1
    94e8:	91 30       	cpi	r25, 0x01	; 1
    94ea:	09 f4       	brne	.+2      	; 0x94ee <I2C_0_GetData+0x34>
    94ec:	80 e0       	ldi	r24, 0x00	; 0
    94ee:	88 23       	and	r24, r24
    94f0:	11 f0       	breq	.+4      	; 0x94f6 <I2C_0_GetData+0x3c>
	{
		return retVal;
    94f2:	89 81       	ldd	r24, Y+1	; 0x01
    94f4:	5a c0       	rjmp	.+180    	; 0x95aa <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    94f6:	80 e0       	ldi	r24, 0x00	; 0
    94f8:	99 e0       	ldi	r25, 0x09	; 9
    94fa:	2b 81       	ldd	r18, Y+3	; 0x03
    94fc:	fc 01       	movw	r30, r24
    94fe:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9500:	0e 94 56 49 	call	0x92ac	; 0x92ac <_ZL11i2c_0_WaitWv>
    9504:	98 2f       	mov	r25, r24
    9506:	81 e0       	ldi	r24, 0x01	; 1
    9508:	91 30       	cpi	r25, 0x01	; 1
    950a:	09 f4       	brne	.+2      	; 0x950e <I2C_0_GetData+0x54>
    950c:	80 e0       	ldi	r24, 0x00	; 0
    950e:	88 23       	and	r24, r24
    9510:	11 f0       	breq	.+4      	; 0x9516 <I2C_0_GetData+0x5c>
	{
		return retVal;
    9512:	89 81       	ldd	r24, Y+1	; 0x01
    9514:	4a c0       	rjmp	.+148    	; 0x95aa <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    9516:	80 e0       	ldi	r24, 0x00	; 0
    9518:	99 e0       	ldi	r25, 0x09	; 9
    951a:	2a 81       	ldd	r18, Y+2	; 0x02
    951c:	21 60       	ori	r18, 0x01	; 1
    951e:	fc 01       	movw	r30, r24
    9520:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9522:	0e 94 56 49 	call	0x92ac	; 0x92ac <_ZL11i2c_0_WaitWv>
    9526:	98 2f       	mov	r25, r24
    9528:	81 e0       	ldi	r24, 0x01	; 1
    952a:	91 30       	cpi	r25, 0x01	; 1
    952c:	09 f4       	brne	.+2      	; 0x9530 <I2C_0_GetData+0x76>
    952e:	80 e0       	ldi	r24, 0x00	; 0
    9530:	88 23       	and	r24, r24
    9532:	11 f0       	breq	.+4      	; 0x9538 <I2C_0_GetData+0x7e>
	{
		return retVal;
    9534:	89 81       	ldd	r24, Y+1	; 0x01
    9536:	39 c0       	rjmp	.+114    	; 0x95aa <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    9538:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    953a:	8e 81       	ldd	r24, Y+6	; 0x06
    953c:	88 23       	and	r24, r24
    953e:	a1 f1       	breq	.+104    	; 0x95a8 <I2C_0_GetData+0xee>
    9540:	8c 81       	ldd	r24, Y+4	; 0x04
    9542:	9d 81       	ldd	r25, Y+5	; 0x05
    9544:	89 2b       	or	r24, r25
    9546:	81 f1       	breq	.+96     	; 0x95a8 <I2C_0_GetData+0xee>
	{
		while(len--)
    9548:	8e 81       	ldd	r24, Y+6	; 0x06
    954a:	9f ef       	ldi	r25, 0xFF	; 255
    954c:	98 0f       	add	r25, r24
    954e:	9e 83       	std	Y+6, r25	; 0x06
    9550:	91 e0       	ldi	r25, 0x01	; 1
    9552:	88 23       	and	r24, r24
    9554:	09 f4       	brne	.+2      	; 0x9558 <I2C_0_GetData+0x9e>
    9556:	90 e0       	ldi	r25, 0x00	; 0
    9558:	99 23       	and	r25, r25
    955a:	31 f1       	breq	.+76     	; 0x95a8 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    955c:	0e 94 b4 49 	call	0x9368	; 0x9368 <_ZL11i2c_0_WaitRv>
    9560:	98 2f       	mov	r25, r24
    9562:	81 e0       	ldi	r24, 0x01	; 1
    9564:	93 30       	cpi	r25, 0x03	; 3
    9566:	09 f0       	breq	.+2      	; 0x956a <I2C_0_GetData+0xb0>
    9568:	80 e0       	ldi	r24, 0x00	; 0
    956a:	88 23       	and	r24, r24
    956c:	e1 f0       	breq	.+56     	; 0x95a6 <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    956e:	80 e0       	ldi	r24, 0x00	; 0
    9570:	99 e0       	ldi	r25, 0x09	; 9
    9572:	fc 01       	movw	r30, r24
    9574:	20 85       	ldd	r18, Z+8	; 0x08
    9576:	8c 81       	ldd	r24, Y+4	; 0x04
    9578:	9d 81       	ldd	r25, Y+5	; 0x05
    957a:	fc 01       	movw	r30, r24
    957c:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    957e:	80 e0       	ldi	r24, 0x00	; 0
    9580:	99 e0       	ldi	r25, 0x09	; 9
    9582:	2e 81       	ldd	r18, Y+6	; 0x06
    9584:	22 23       	and	r18, r18
    9586:	11 f4       	brne	.+4      	; 0x958c <I2C_0_GetData+0xd2>
    9588:	27 e0       	ldi	r18, 0x07	; 7
    958a:	01 c0       	rjmp	.+2      	; 0x958e <I2C_0_GetData+0xd4>
    958c:	22 e0       	ldi	r18, 0x02	; 2
    958e:	fc 01       	movw	r30, r24
    9590:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    9592:	89 81       	ldd	r24, Y+1	; 0x01
    9594:	8f 5f       	subi	r24, 0xFF	; 255
    9596:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9598:	8c 81       	ldd	r24, Y+4	; 0x04
    959a:	9d 81       	ldd	r25, Y+5	; 0x05
    959c:	01 96       	adiw	r24, 0x01	; 1
    959e:	8c 83       	std	Y+4, r24	; 0x04
    95a0:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    95a2:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    95a4:	d1 cf       	rjmp	.-94     	; 0x9548 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    95a6:	00 00       	nop
		}
	}
	
	return retVal;
    95a8:	89 81       	ldd	r24, Y+1	; 0x01
}
    95aa:	26 96       	adiw	r28, 0x06	; 6
    95ac:	cd bf       	out	0x3d, r28	; 61
    95ae:	de bf       	out	0x3e, r29	; 62
    95b0:	df 91       	pop	r29
    95b2:	cf 91       	pop	r28
    95b4:	08 95       	ret

000095b6 <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    95b6:	cf 93       	push	r28
    95b8:	df 93       	push	r29
    95ba:	cd b7       	in	r28, 0x3d	; 61
    95bc:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    95be:	80 e0       	ldi	r24, 0x00	; 0
    95c0:	99 e0       	ldi	r25, 0x09	; 9
    95c2:	23 e0       	ldi	r18, 0x03	; 3
    95c4:	fc 01       	movw	r30, r24
    95c6:	24 83       	std	Z+4, r18	; 0x04
}
    95c8:	00 00       	nop
    95ca:	df 91       	pop	r29
    95cc:	cf 91       	pop	r28
    95ce:	08 95       	ret

000095d0 <I2C_1_Init>:
/* I2C_1                                                               */
/************************************************************************/


void I2C_1_Init(void)
{
    95d0:	cf 93       	push	r28
    95d2:	df 93       	push	r29
    95d4:	cd b7       	in	r28, 0x3d	; 61
    95d6:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    95d8:	80 ee       	ldi	r24, 0xE0	; 224
    95da:	95 e0       	ldi	r25, 0x05	; 5
    95dc:	20 ee       	ldi	r18, 0xE0	; 224
    95de:	35 e0       	ldi	r19, 0x05	; 5
    95e0:	f9 01       	movw	r30, r18
    95e2:	25 81       	ldd	r18, Z+5	; 0x05
    95e4:	23 70       	andi	r18, 0x03	; 3
    95e6:	fc 01       	movw	r30, r24
    95e8:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    95ea:	80 ee       	ldi	r24, 0xE0	; 224
    95ec:	95 e0       	ldi	r25, 0x05	; 5
    95ee:	20 ee       	ldi	r18, 0xE0	; 224
    95f0:	35 e0       	ldi	r19, 0x05	; 5
    95f2:	f9 01       	movw	r30, r18
    95f4:	25 81       	ldd	r18, Z+5	; 0x05
    95f6:	28 60       	ori	r18, 0x08	; 8
    95f8:	fc 01       	movw	r30, r24
    95fa:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    95fc:	80 e2       	ldi	r24, 0x20	; 32
    95fe:	99 e0       	ldi	r25, 0x09	; 9
    9600:	23 e7       	ldi	r18, 0x73	; 115
    9602:	fc 01       	movw	r30, r24
    9604:	26 83       	std	Z+6, r18	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    9606:	80 e2       	ldi	r24, 0x20	; 32
    9608:	99 e0       	ldi	r25, 0x09	; 9
    960a:	21 e0       	ldi	r18, 0x01	; 1
    960c:	fc 01       	movw	r30, r24
    960e:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    9610:	80 e2       	ldi	r24, 0x20	; 32
    9612:	99 e0       	ldi	r25, 0x09	; 9
    9614:	fc 01       	movw	r30, r24
    9616:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    9618:	80 e2       	ldi	r24, 0x20	; 32
    961a:	99 e0       	ldi	r25, 0x09	; 9
    961c:	fc 01       	movw	r30, r24
    961e:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    9620:	80 e2       	ldi	r24, 0x20	; 32
    9622:	99 e0       	ldi	r25, 0x09	; 9
    9624:	21 e0       	ldi	r18, 0x01	; 1
    9626:	fc 01       	movw	r30, r24
    9628:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    962a:	61 e0       	ldi	r22, 0x01	; 1
    962c:	82 e0       	ldi	r24, 0x02	; 2
    962e:	0e 94 bb 48 	call	0x9176	; 0x9176 <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    9632:	61 e0       	ldi	r22, 0x01	; 1
    9634:	83 e0       	ldi	r24, 0x03	; 3
    9636:	0e 94 bb 48 	call	0x9176	; 0x9176 <PORTB_set_pin_pull_mode>
}
    963a:	00 00       	nop
    963c:	df 91       	pop	r29
    963e:	cf 91       	pop	r28
    9640:	08 95       	ret

00009642 <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    9642:	cf 93       	push	r28
    9644:	df 93       	push	r29
    9646:	00 d0       	rcall	.+0      	; 0x9648 <_ZL11i2c_1_WaitWv+0x6>
    9648:	cd b7       	in	r28, 0x3d	; 61
    964a:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    964c:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 200;
    964e:	88 ec       	ldi	r24, 0xC8	; 200
    9650:	90 e0       	ldi	r25, 0x00	; 0
    9652:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <g_i2c1_timeout_ticks>
    9656:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    965a:	80 e2       	ldi	r24, 0x20	; 32
    965c:	99 e0       	ldi	r25, 0x09	; 9
    965e:	fc 01       	movw	r30, r24
    9660:	85 81       	ldd	r24, Z+5	; 0x05
    9662:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    9664:	8a 81       	ldd	r24, Y+2	; 0x02
    9666:	88 2f       	mov	r24, r24
    9668:	90 e0       	ldi	r25, 0x00	; 0
    966a:	80 7c       	andi	r24, 0xC0	; 192
    966c:	99 27       	eor	r25, r25
    966e:	89 2b       	or	r24, r25
    9670:	69 f0       	breq	.+26     	; 0x968c <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    9672:	8a 81       	ldd	r24, Y+2	; 0x02
    9674:	88 2f       	mov	r24, r24
    9676:	90 e0       	ldi	r25, 0x00	; 0
    9678:	80 71       	andi	r24, 0x10	; 16
    967a:	99 27       	eor	r25, r25
    967c:	89 2b       	or	r24, r25
    967e:	19 f4       	brne	.+6      	; 0x9686 <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9680:	81 e0       	ldi	r24, 0x01	; 1
    9682:	89 83       	std	Y+1, r24	; 0x01
    9684:	0c c0       	rjmp	.+24     	; 0x969e <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    9686:	82 e0       	ldi	r24, 0x02	; 2
    9688:	89 83       	std	Y+1, r24	; 0x01
    968a:	09 c0       	rjmp	.+18     	; 0x969e <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    968c:	8a 81       	ldd	r24, Y+2	; 0x02
    968e:	88 2f       	mov	r24, r24
    9690:	90 e0       	ldi	r25, 0x00	; 0
    9692:	8c 70       	andi	r24, 0x0C	; 12
    9694:	99 27       	eor	r25, r25
    9696:	89 2b       	or	r24, r25
    9698:	11 f0       	breq	.+4      	; 0x969e <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    969a:	84 e0       	ldi	r24, 0x04	; 4
    969c:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    969e:	89 81       	ldd	r24, Y+1	; 0x01
    96a0:	88 23       	and	r24, r24
    96a2:	41 f4       	brne	.+16     	; 0x96b4 <_ZL11i2c_1_WaitWv+0x72>
    96a4:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <g_i2c1_timeout_ticks>
    96a8:	90 91 20 40 	lds	r25, 0x4020	; 0x804020 <g_i2c1_timeout_ticks+0x1>
    96ac:	89 2b       	or	r24, r25
    96ae:	11 f0       	breq	.+4      	; 0x96b4 <_ZL11i2c_1_WaitWv+0x72>
    96b0:	81 e0       	ldi	r24, 0x01	; 1
    96b2:	01 c0       	rjmp	.+2      	; 0x96b6 <_ZL11i2c_1_WaitWv+0x74>
    96b4:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 200;
	
	do
    96b6:	88 23       	and	r24, r24
    96b8:	09 f0       	breq	.+2      	; 0x96bc <_ZL11i2c_1_WaitWv+0x7a>
    96ba:	cf cf       	rjmp	.-98     	; 0x965a <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    96bc:	89 81       	ldd	r24, Y+1	; 0x01
}
    96be:	0f 90       	pop	r0
    96c0:	0f 90       	pop	r0
    96c2:	df 91       	pop	r29
    96c4:	cf 91       	pop	r28
    96c6:	08 95       	ret

000096c8 <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    96c8:	cf 93       	push	r28
    96ca:	df 93       	push	r29
    96cc:	1f 92       	push	r1
    96ce:	cd b7       	in	r28, 0x3d	; 61
    96d0:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    96d2:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    96d4:	88 ec       	ldi	r24, 0xC8	; 200
    96d6:	90 e0       	ldi	r25, 0x00	; 0
    96d8:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <g_i2c0_timeout_ticks>
    96dc:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    96e0:	80 e2       	ldi	r24, 0x20	; 32
    96e2:	99 e0       	ldi	r25, 0x09	; 9
    96e4:	fc 01       	movw	r30, r24
    96e6:	85 81       	ldd	r24, Z+5	; 0x05
    96e8:	88 2f       	mov	r24, r24
    96ea:	90 e0       	ldi	r25, 0x00	; 0
    96ec:	80 7c       	andi	r24, 0xC0	; 192
    96ee:	99 27       	eor	r25, r25
    96f0:	21 e0       	ldi	r18, 0x01	; 1
    96f2:	89 2b       	or	r24, r25
    96f4:	09 f4       	brne	.+2      	; 0x96f8 <_ZL11I2C_1_WaitRv+0x30>
    96f6:	20 e0       	ldi	r18, 0x00	; 0
    96f8:	22 23       	and	r18, r18
    96fa:	19 f0       	breq	.+6      	; 0x9702 <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    96fc:	83 e0       	ldi	r24, 0x03	; 3
    96fe:	89 83       	std	Y+1, r24	; 0x01
    9700:	10 c0       	rjmp	.+32     	; 0x9722 <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9702:	80 e2       	ldi	r24, 0x20	; 32
    9704:	99 e0       	ldi	r25, 0x09	; 9
    9706:	fc 01       	movw	r30, r24
    9708:	85 81       	ldd	r24, Z+5	; 0x05
    970a:	88 2f       	mov	r24, r24
    970c:	90 e0       	ldi	r25, 0x00	; 0
    970e:	8c 70       	andi	r24, 0x0C	; 12
    9710:	99 27       	eor	r25, r25
    9712:	21 e0       	ldi	r18, 0x01	; 1
    9714:	89 2b       	or	r24, r25
    9716:	09 f4       	brne	.+2      	; 0x971a <_ZL11I2C_1_WaitRv+0x52>
    9718:	20 e0       	ldi	r18, 0x00	; 0
    971a:	22 23       	and	r18, r18
    971c:	11 f0       	breq	.+4      	; 0x9722 <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    971e:	84 e0       	ldi	r24, 0x04	; 4
    9720:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9722:	89 81       	ldd	r24, Y+1	; 0x01
    9724:	88 23       	and	r24, r24
    9726:	41 f4       	brne	.+16     	; 0x9738 <_ZL11I2C_1_WaitRv+0x70>
    9728:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <g_i2c0_timeout_ticks>
    972c:	90 91 1e 40 	lds	r25, 0x401E	; 0x80401e <g_i2c0_timeout_ticks+0x1>
    9730:	89 2b       	or	r24, r25
    9732:	11 f0       	breq	.+4      	; 0x9738 <_ZL11I2C_1_WaitRv+0x70>
    9734:	81 e0       	ldi	r24, 0x01	; 1
    9736:	01 c0       	rjmp	.+2      	; 0x973a <_ZL11I2C_1_WaitRv+0x72>
    9738:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    973a:	88 23       	and	r24, r24
    973c:	09 f0       	breq	.+2      	; 0x9740 <_ZL11I2C_1_WaitRv+0x78>
    973e:	d0 cf       	rjmp	.-96     	; 0x96e0 <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    9740:	89 81       	ldd	r24, Y+1	; 0x01
}
    9742:	0f 90       	pop	r0
    9744:	df 91       	pop	r29
    9746:	cf 91       	pop	r28
    9748:	08 95       	ret

0000974a <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    974a:	cf 93       	push	r28
    974c:	df 93       	push	r29
    974e:	cd b7       	in	r28, 0x3d	; 61
    9750:	de b7       	in	r29, 0x3e	; 62
    9752:	26 97       	sbiw	r28, 0x06	; 6
    9754:	cd bf       	out	0x3d, r28	; 61
    9756:	de bf       	out	0x3e, r29	; 62
    9758:	8a 83       	std	Y+2, r24	; 0x02
    975a:	6b 83       	std	Y+3, r22	; 0x03
    975c:	4c 83       	std	Y+4, r20	; 0x04
    975e:	5d 83       	std	Y+5, r21	; 0x05
    9760:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    9762:	8f ef       	ldi	r24, 0xFF	; 255
    9764:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    9766:	80 e2       	ldi	r24, 0x20	; 32
    9768:	99 e0       	ldi	r25, 0x09	; 9
    976a:	2a 81       	ldd	r18, Y+2	; 0x02
    976c:	2e 7f       	andi	r18, 0xFE	; 254
    976e:	fc 01       	movw	r30, r24
    9770:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9772:	0e 94 21 4b 	call	0x9642	; 0x9642 <_ZL11i2c_1_WaitWv>
    9776:	98 2f       	mov	r25, r24
    9778:	81 e0       	ldi	r24, 0x01	; 1
    977a:	91 30       	cpi	r25, 0x01	; 1
    977c:	09 f4       	brne	.+2      	; 0x9780 <I2C_1_SendData+0x36>
    977e:	80 e0       	ldi	r24, 0x00	; 0
    9780:	88 23       	and	r24, r24
    9782:	11 f0       	breq	.+4      	; 0x9788 <I2C_1_SendData+0x3e>
	{
		return retVal;
    9784:	89 81       	ldd	r24, Y+1	; 0x01
    9786:	44 c0       	rjmp	.+136    	; 0x9810 <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    9788:	80 e2       	ldi	r24, 0x20	; 32
    978a:	99 e0       	ldi	r25, 0x09	; 9
    978c:	2b 81       	ldd	r18, Y+3	; 0x03
    978e:	fc 01       	movw	r30, r24
    9790:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    9792:	0e 94 21 4b 	call	0x9642	; 0x9642 <_ZL11i2c_1_WaitWv>
    9796:	98 2f       	mov	r25, r24
    9798:	81 e0       	ldi	r24, 0x01	; 1
    979a:	91 30       	cpi	r25, 0x01	; 1
    979c:	09 f4       	brne	.+2      	; 0x97a0 <I2C_1_SendData+0x56>
    979e:	80 e0       	ldi	r24, 0x00	; 0
    97a0:	88 23       	and	r24, r24
    97a2:	11 f0       	breq	.+4      	; 0x97a8 <I2C_1_SendData+0x5e>
	{
		return retVal;
    97a4:	89 81       	ldd	r24, Y+1	; 0x01
    97a6:	34 c0       	rjmp	.+104    	; 0x9810 <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    97a8:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    97aa:	8e 81       	ldd	r24, Y+6	; 0x06
    97ac:	88 23       	and	r24, r24
    97ae:	79 f1       	breq	.+94     	; 0x980e <I2C_1_SendData+0xc4>
    97b0:	8c 81       	ldd	r24, Y+4	; 0x04
    97b2:	9d 81       	ldd	r25, Y+5	; 0x05
    97b4:	89 2b       	or	r24, r25
    97b6:	59 f1       	breq	.+86     	; 0x980e <I2C_1_SendData+0xc4>
	{
		while(len--)
    97b8:	8e 81       	ldd	r24, Y+6	; 0x06
    97ba:	9f ef       	ldi	r25, 0xFF	; 255
    97bc:	98 0f       	add	r25, r24
    97be:	9e 83       	std	Y+6, r25	; 0x06
    97c0:	91 e0       	ldi	r25, 0x01	; 1
    97c2:	88 23       	and	r24, r24
    97c4:	09 f4       	brne	.+2      	; 0x97c8 <I2C_1_SendData+0x7e>
    97c6:	90 e0       	ldi	r25, 0x00	; 0
    97c8:	99 23       	and	r25, r25
    97ca:	09 f1       	breq	.+66     	; 0x980e <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    97cc:	80 e2       	ldi	r24, 0x20	; 32
    97ce:	99 e0       	ldi	r25, 0x09	; 9
    97d0:	2c 81       	ldd	r18, Y+4	; 0x04
    97d2:	3d 81       	ldd	r19, Y+5	; 0x05
    97d4:	f9 01       	movw	r30, r18
    97d6:	20 81       	ld	r18, Z
    97d8:	fc 01       	movw	r30, r24
    97da:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    97dc:	0e 94 21 4b 	call	0x9642	; 0x9642 <_ZL11i2c_1_WaitWv>
    97e0:	98 2f       	mov	r25, r24
    97e2:	81 e0       	ldi	r24, 0x01	; 1
    97e4:	91 30       	cpi	r25, 0x01	; 1
    97e6:	09 f0       	breq	.+2      	; 0x97ea <I2C_1_SendData+0xa0>
    97e8:	80 e0       	ldi	r24, 0x00	; 0
    97ea:	88 23       	and	r24, r24
    97ec:	79 f0       	breq	.+30     	; 0x980c <I2C_1_SendData+0xc2>
			{
				retVal++;
    97ee:	89 81       	ldd	r24, Y+1	; 0x01
    97f0:	8f 5f       	subi	r24, 0xFF	; 255
    97f2:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    97f4:	8c 81       	ldd	r24, Y+4	; 0x04
    97f6:	9d 81       	ldd	r25, Y+5	; 0x05
    97f8:	01 96       	adiw	r24, 0x01	; 1
    97fa:	8c 83       	std	Y+4, r24	; 0x04
    97fc:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    97fe:	8e 81       	ldd	r24, Y+6	; 0x06
    9800:	88 23       	and	r24, r24
    9802:	11 f4       	brne	.+4      	; 0x9808 <I2C_1_SendData+0xbe>
    9804:	0e 94 8c 4c 	call	0x9918	; 0x9918 <I2C_1_EndSession>
				continue;
    9808:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    980a:	d6 cf       	rjmp	.-84     	; 0x97b8 <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    980c:	00 00       	nop
			}
		}
	}
	
	return retVal;
    980e:	89 81       	ldd	r24, Y+1	; 0x01
}
    9810:	26 96       	adiw	r28, 0x06	; 6
    9812:	cd bf       	out	0x3d, r28	; 61
    9814:	de bf       	out	0x3e, r29	; 62
    9816:	df 91       	pop	r29
    9818:	cf 91       	pop	r28
    981a:	08 95       	ret

0000981c <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    981c:	cf 93       	push	r28
    981e:	df 93       	push	r29
    9820:	cd b7       	in	r28, 0x3d	; 61
    9822:	de b7       	in	r29, 0x3e	; 62
    9824:	26 97       	sbiw	r28, 0x06	; 6
    9826:	cd bf       	out	0x3d, r28	; 61
    9828:	de bf       	out	0x3e, r29	; 62
    982a:	8a 83       	std	Y+2, r24	; 0x02
    982c:	6b 83       	std	Y+3, r22	; 0x03
    982e:	4c 83       	std	Y+4, r20	; 0x04
    9830:	5d 83       	std	Y+5, r21	; 0x05
    9832:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    9834:	8f ef       	ldi	r24, 0xFF	; 255
    9836:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    9838:	80 e2       	ldi	r24, 0x20	; 32
    983a:	99 e0       	ldi	r25, 0x09	; 9
    983c:	2a 81       	ldd	r18, Y+2	; 0x02
    983e:	fc 01       	movw	r30, r24
    9840:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9842:	0e 94 21 4b 	call	0x9642	; 0x9642 <_ZL11i2c_1_WaitWv>
    9846:	98 2f       	mov	r25, r24
    9848:	81 e0       	ldi	r24, 0x01	; 1
    984a:	91 30       	cpi	r25, 0x01	; 1
    984c:	09 f4       	brne	.+2      	; 0x9850 <I2C_1_GetData+0x34>
    984e:	80 e0       	ldi	r24, 0x00	; 0
    9850:	88 23       	and	r24, r24
    9852:	11 f0       	breq	.+4      	; 0x9858 <I2C_1_GetData+0x3c>
	{
		return retVal;
    9854:	89 81       	ldd	r24, Y+1	; 0x01
    9856:	5a c0       	rjmp	.+180    	; 0x990c <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    9858:	80 e2       	ldi	r24, 0x20	; 32
    985a:	99 e0       	ldi	r25, 0x09	; 9
    985c:	2b 81       	ldd	r18, Y+3	; 0x03
    985e:	fc 01       	movw	r30, r24
    9860:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    9862:	0e 94 21 4b 	call	0x9642	; 0x9642 <_ZL11i2c_1_WaitWv>
    9866:	98 2f       	mov	r25, r24
    9868:	81 e0       	ldi	r24, 0x01	; 1
    986a:	91 30       	cpi	r25, 0x01	; 1
    986c:	09 f4       	brne	.+2      	; 0x9870 <I2C_1_GetData+0x54>
    986e:	80 e0       	ldi	r24, 0x00	; 0
    9870:	88 23       	and	r24, r24
    9872:	11 f0       	breq	.+4      	; 0x9878 <I2C_1_GetData+0x5c>
	{
		return retVal;
    9874:	89 81       	ldd	r24, Y+1	; 0x01
    9876:	4a c0       	rjmp	.+148    	; 0x990c <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    9878:	80 e2       	ldi	r24, 0x20	; 32
    987a:	99 e0       	ldi	r25, 0x09	; 9
    987c:	2a 81       	ldd	r18, Y+2	; 0x02
    987e:	21 60       	ori	r18, 0x01	; 1
    9880:	fc 01       	movw	r30, r24
    9882:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9884:	0e 94 21 4b 	call	0x9642	; 0x9642 <_ZL11i2c_1_WaitWv>
    9888:	98 2f       	mov	r25, r24
    988a:	81 e0       	ldi	r24, 0x01	; 1
    988c:	91 30       	cpi	r25, 0x01	; 1
    988e:	09 f4       	brne	.+2      	; 0x9892 <I2C_1_GetData+0x76>
    9890:	80 e0       	ldi	r24, 0x00	; 0
    9892:	88 23       	and	r24, r24
    9894:	11 f0       	breq	.+4      	; 0x989a <I2C_1_GetData+0x7e>
	{
		return retVal;	
    9896:	89 81       	ldd	r24, Y+1	; 0x01
    9898:	39 c0       	rjmp	.+114    	; 0x990c <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    989a:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    989c:	8e 81       	ldd	r24, Y+6	; 0x06
    989e:	88 23       	and	r24, r24
    98a0:	a1 f1       	breq	.+104    	; 0x990a <I2C_1_GetData+0xee>
    98a2:	8c 81       	ldd	r24, Y+4	; 0x04
    98a4:	9d 81       	ldd	r25, Y+5	; 0x05
    98a6:	89 2b       	or	r24, r25
    98a8:	81 f1       	breq	.+96     	; 0x990a <I2C_1_GetData+0xee>
	{
		while(len--)
    98aa:	8e 81       	ldd	r24, Y+6	; 0x06
    98ac:	9f ef       	ldi	r25, 0xFF	; 255
    98ae:	98 0f       	add	r25, r24
    98b0:	9e 83       	std	Y+6, r25	; 0x06
    98b2:	91 e0       	ldi	r25, 0x01	; 1
    98b4:	88 23       	and	r24, r24
    98b6:	09 f4       	brne	.+2      	; 0x98ba <I2C_1_GetData+0x9e>
    98b8:	90 e0       	ldi	r25, 0x00	; 0
    98ba:	99 23       	and	r25, r25
    98bc:	31 f1       	breq	.+76     	; 0x990a <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    98be:	0e 94 64 4b 	call	0x96c8	; 0x96c8 <_ZL11I2C_1_WaitRv>
    98c2:	98 2f       	mov	r25, r24
    98c4:	81 e0       	ldi	r24, 0x01	; 1
    98c6:	93 30       	cpi	r25, 0x03	; 3
    98c8:	09 f0       	breq	.+2      	; 0x98cc <I2C_1_GetData+0xb0>
    98ca:	80 e0       	ldi	r24, 0x00	; 0
    98cc:	88 23       	and	r24, r24
    98ce:	e1 f0       	breq	.+56     	; 0x9908 <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    98d0:	80 e2       	ldi	r24, 0x20	; 32
    98d2:	99 e0       	ldi	r25, 0x09	; 9
    98d4:	fc 01       	movw	r30, r24
    98d6:	20 85       	ldd	r18, Z+8	; 0x08
    98d8:	8c 81       	ldd	r24, Y+4	; 0x04
    98da:	9d 81       	ldd	r25, Y+5	; 0x05
    98dc:	fc 01       	movw	r30, r24
    98de:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    98e0:	80 e2       	ldi	r24, 0x20	; 32
    98e2:	99 e0       	ldi	r25, 0x09	; 9
    98e4:	2e 81       	ldd	r18, Y+6	; 0x06
    98e6:	22 23       	and	r18, r18
    98e8:	11 f4       	brne	.+4      	; 0x98ee <I2C_1_GetData+0xd2>
    98ea:	27 e0       	ldi	r18, 0x07	; 7
    98ec:	01 c0       	rjmp	.+2      	; 0x98f0 <I2C_1_GetData+0xd4>
    98ee:	22 e0       	ldi	r18, 0x02	; 2
    98f0:	fc 01       	movw	r30, r24
    98f2:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    98f4:	89 81       	ldd	r24, Y+1	; 0x01
    98f6:	8f 5f       	subi	r24, 0xFF	; 255
    98f8:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    98fa:	8c 81       	ldd	r24, Y+4	; 0x04
    98fc:	9d 81       	ldd	r25, Y+5	; 0x05
    98fe:	01 96       	adiw	r24, 0x01	; 1
    9900:	8c 83       	std	Y+4, r24	; 0x04
    9902:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    9904:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    9906:	d1 cf       	rjmp	.-94     	; 0x98aa <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    9908:	00 00       	nop
		}
	}
	
	return retVal;
    990a:	89 81       	ldd	r24, Y+1	; 0x01
}
    990c:	26 96       	adiw	r28, 0x06	; 6
    990e:	cd bf       	out	0x3d, r28	; 61
    9910:	de bf       	out	0x3e, r29	; 62
    9912:	df 91       	pop	r29
    9914:	cf 91       	pop	r28
    9916:	08 95       	ret

00009918 <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    9918:	cf 93       	push	r28
    991a:	df 93       	push	r29
    991c:	cd b7       	in	r28, 0x3d	; 61
    991e:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    9920:	80 e2       	ldi	r24, 0x20	; 32
    9922:	99 e0       	ldi	r25, 0x09	; 9
    9924:	23 e0       	ldi	r18, 0x03	; 3
    9926:	fc 01       	movw	r30, r24
    9928:	24 83       	std	Z+4, r18	; 0x04
}
    992a:	00 00       	nop
    992c:	df 91       	pop	r29
    992e:	cf 91       	pop	r28
    9930:	08 95       	ret

00009932 <PORTC_set_pin_level>:
}

Blink_t leds::setting(void)
{
	return lastBlinkSetting;
}
    9932:	cf 93       	push	r28
    9934:	df 93       	push	r29
    9936:	00 d0       	rcall	.+0      	; 0x9938 <PORTC_set_pin_level+0x6>
    9938:	cd b7       	in	r28, 0x3d	; 61
    993a:	de b7       	in	r29, 0x3e	; 62
    993c:	89 83       	std	Y+1, r24	; 0x01
    993e:	6a 83       	std	Y+2, r22	; 0x02
    9940:	8a 81       	ldd	r24, Y+2	; 0x02
    9942:	88 23       	and	r24, r24
    9944:	a9 f0       	breq	.+42     	; 0x9970 <PORTC_set_pin_level+0x3e>
    9946:	88 e0       	ldi	r24, 0x08	; 8
    9948:	90 e0       	ldi	r25, 0x00	; 0
    994a:	28 e0       	ldi	r18, 0x08	; 8
    994c:	30 e0       	ldi	r19, 0x00	; 0
    994e:	f9 01       	movw	r30, r18
    9950:	21 81       	ldd	r18, Z+1	; 0x01
    9952:	62 2f       	mov	r22, r18
    9954:	29 81       	ldd	r18, Y+1	; 0x01
    9956:	42 2f       	mov	r20, r18
    9958:	50 e0       	ldi	r21, 0x00	; 0
    995a:	21 e0       	ldi	r18, 0x01	; 1
    995c:	30 e0       	ldi	r19, 0x00	; 0
    995e:	02 c0       	rjmp	.+4      	; 0x9964 <PORTC_set_pin_level+0x32>
    9960:	22 0f       	add	r18, r18
    9962:	33 1f       	adc	r19, r19
    9964:	4a 95       	dec	r20
    9966:	e2 f7       	brpl	.-8      	; 0x9960 <PORTC_set_pin_level+0x2e>
    9968:	26 2b       	or	r18, r22
    996a:	fc 01       	movw	r30, r24
    996c:	21 83       	std	Z+1, r18	; 0x01
    996e:	15 c0       	rjmp	.+42     	; 0x999a <PORTC_set_pin_level+0x68>
    9970:	88 e0       	ldi	r24, 0x08	; 8
    9972:	90 e0       	ldi	r25, 0x00	; 0
    9974:	28 e0       	ldi	r18, 0x08	; 8
    9976:	30 e0       	ldi	r19, 0x00	; 0
    9978:	f9 01       	movw	r30, r18
    997a:	21 81       	ldd	r18, Z+1	; 0x01
    997c:	62 2f       	mov	r22, r18
    997e:	29 81       	ldd	r18, Y+1	; 0x01
    9980:	42 2f       	mov	r20, r18
    9982:	50 e0       	ldi	r21, 0x00	; 0
    9984:	21 e0       	ldi	r18, 0x01	; 1
    9986:	30 e0       	ldi	r19, 0x00	; 0
    9988:	02 c0       	rjmp	.+4      	; 0x998e <PORTC_set_pin_level+0x5c>
    998a:	22 0f       	add	r18, r18
    998c:	33 1f       	adc	r19, r19
    998e:	4a 95       	dec	r20
    9990:	e2 f7       	brpl	.-8      	; 0x998a <PORTC_set_pin_level+0x58>
    9992:	20 95       	com	r18
    9994:	26 23       	and	r18, r22
    9996:	fc 01       	movw	r30, r24
    9998:	21 83       	std	Z+1, r18	; 0x01
    999a:	00 00       	nop
    999c:	0f 90       	pop	r0
    999e:	0f 90       	pop	r0
    99a0:	df 91       	pop	r29
    99a2:	cf 91       	pop	r28
    99a4:	08 95       	ret

000099a6 <_ZL17LED_set_RED_levelb>:
    99a6:	cf 93       	push	r28
    99a8:	df 93       	push	r29
    99aa:	1f 92       	push	r1
    99ac:	cd b7       	in	r28, 0x3d	; 61
    99ae:	de b7       	in	r29, 0x3e	; 62
    99b0:	89 83       	std	Y+1, r24	; 0x01
    99b2:	69 81       	ldd	r22, Y+1	; 0x01
    99b4:	86 e0       	ldi	r24, 0x06	; 6
    99b6:	0e 94 99 4c 	call	0x9932	; 0x9932 <PORTC_set_pin_level>
    99ba:	00 00       	nop
    99bc:	0f 90       	pop	r0
    99be:	df 91       	pop	r29
    99c0:	cf 91       	pop	r28
    99c2:	08 95       	ret

000099c4 <_ZL19LED_set_GREEN_levelb>:
    99c4:	cf 93       	push	r28
    99c6:	df 93       	push	r29
    99c8:	1f 92       	push	r1
    99ca:	cd b7       	in	r28, 0x3d	; 61
    99cc:	de b7       	in	r29, 0x3e	; 62
    99ce:	89 83       	std	Y+1, r24	; 0x01
    99d0:	69 81       	ldd	r22, Y+1	; 0x01
    99d2:	85 e0       	ldi	r24, 0x05	; 5
    99d4:	0e 94 99 4c 	call	0x9932	; 0x9932 <PORTC_set_pin_level>
    99d8:	00 00       	nop
    99da:	0f 90       	pop	r0
    99dc:	df 91       	pop	r29
    99de:	cf 91       	pop	r28
    99e0:	08 95       	ret

000099e2 <_ZN4ledsC1Ev>:
    99e2:	cf 93       	push	r28
    99e4:	df 93       	push	r29
    99e6:	00 d0       	rcall	.+0      	; 0x99e8 <_ZN4ledsC1Ev+0x6>
    99e8:	cd b7       	in	r28, 0x3d	; 61
    99ea:	de b7       	in	r29, 0x3e	; 62
    99ec:	89 83       	std	Y+1, r24	; 0x01
    99ee:	9a 83       	std	Y+2, r25	; 0x02
    99f0:	00 00       	nop
    99f2:	0f 90       	pop	r0
    99f4:	0f 90       	pop	r0
    99f6:	df 91       	pop	r29
    99f8:	cf 91       	pop	r28
    99fa:	08 95       	ret

000099fc <_ZN4ledsD1Ev>:
    99fc:	cf 93       	push	r28
    99fe:	df 93       	push	r29
    9a00:	00 d0       	rcall	.+0      	; 0x9a02 <_ZN4ledsD1Ev+0x6>
    9a02:	cd b7       	in	r28, 0x3d	; 61
    9a04:	de b7       	in	r29, 0x3e	; 62
    9a06:	89 83       	std	Y+1, r24	; 0x01
    9a08:	9a 83       	std	Y+2, r25	; 0x02
    9a0a:	00 00       	nop
    9a0c:	0f 90       	pop	r0
    9a0e:	0f 90       	pop	r0
    9a10:	df 91       	pop	r29
    9a12:	cf 91       	pop	r28
    9a14:	08 95       	ret

00009a16 <__vector_41>:
    9a16:	1f 92       	push	r1
    9a18:	0f 92       	push	r0
    9a1a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9a1e:	0f 92       	push	r0
    9a20:	11 24       	eor	r1, r1
    9a22:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    9a26:	0f 92       	push	r0
    9a28:	2f 93       	push	r18
    9a2a:	3f 93       	push	r19
    9a2c:	4f 93       	push	r20
    9a2e:	5f 93       	push	r21
    9a30:	6f 93       	push	r22
    9a32:	7f 93       	push	r23
    9a34:	8f 93       	push	r24
    9a36:	9f 93       	push	r25
    9a38:	af 93       	push	r26
    9a3a:	bf 93       	push	r27
    9a3c:	ef 93       	push	r30
    9a3e:	ff 93       	push	r31
    9a40:	cf 93       	push	r28
    9a42:	df 93       	push	r29
    9a44:	cd b7       	in	r28, 0x3d	; 61
    9a46:	de b7       	in	r29, 0x3e	; 62
    9a48:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZL17led_timeout_count>
    9a4c:	90 91 c3 47 	lds	r25, 0x47C3	; 0x8047c3 <_ZL17led_timeout_count+0x1>
    9a50:	a0 91 c4 47 	lds	r26, 0x47C4	; 0x8047c4 <_ZL17led_timeout_count+0x2>
    9a54:	b0 91 c5 47 	lds	r27, 0x47C5	; 0x8047c5 <_ZL17led_timeout_count+0x3>
    9a58:	21 e0       	ldi	r18, 0x01	; 1
    9a5a:	89 2b       	or	r24, r25
    9a5c:	8a 2b       	or	r24, r26
    9a5e:	8b 2b       	or	r24, r27
    9a60:	09 f4       	brne	.+2      	; 0x9a64 <__vector_41+0x4e>
    9a62:	20 e0       	ldi	r18, 0x00	; 0
    9a64:	22 23       	and	r18, r18
    9a66:	09 f4       	brne	.+2      	; 0x9a6a <__vector_41+0x54>
    9a68:	1b c1       	rjmp	.+566    	; 0x9ca0 <__vector_41+0x28a>
    9a6a:	80 91 c2 47 	lds	r24, 0x47C2	; 0x8047c2 <_ZL17led_timeout_count>
    9a6e:	90 91 c3 47 	lds	r25, 0x47C3	; 0x8047c3 <_ZL17led_timeout_count+0x1>
    9a72:	a0 91 c4 47 	lds	r26, 0x47C4	; 0x8047c4 <_ZL17led_timeout_count+0x2>
    9a76:	b0 91 c5 47 	lds	r27, 0x47C5	; 0x8047c5 <_ZL17led_timeout_count+0x3>
    9a7a:	01 97       	sbiw	r24, 0x01	; 1
    9a7c:	a1 09       	sbc	r26, r1
    9a7e:	b1 09       	sbc	r27, r1
    9a80:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZL17led_timeout_count>
    9a84:	90 93 c3 47 	sts	0x47C3, r25	; 0x8047c3 <_ZL17led_timeout_count+0x1>
    9a88:	a0 93 c4 47 	sts	0x47C4, r26	; 0x8047c4 <_ZL17led_timeout_count+0x2>
    9a8c:	b0 93 c5 47 	sts	0x47C5, r27	; 0x8047c5 <_ZL17led_timeout_count+0x3>
    9a90:	80 e3       	ldi	r24, 0x30	; 48
    9a92:	9b e0       	ldi	r25, 0x0B	; 11
    9a94:	fc 01       	movw	r30, r24
    9a96:	86 81       	ldd	r24, Z+6	; 0x06
    9a98:	88 2f       	mov	r24, r24
    9a9a:	90 e0       	ldi	r25, 0x00	; 0
    9a9c:	81 70       	andi	r24, 0x01	; 1
    9a9e:	99 27       	eor	r25, r25
    9aa0:	21 e0       	ldi	r18, 0x01	; 1
    9aa2:	89 2b       	or	r24, r25
    9aa4:	09 f4       	brne	.+2      	; 0x9aa8 <__vector_41+0x92>
    9aa6:	20 e0       	ldi	r18, 0x00	; 0
    9aa8:	22 23       	and	r18, r18
    9aaa:	09 f4       	brne	.+2      	; 0x9aae <__vector_41+0x98>
    9aac:	0c c1       	rjmp	.+536    	; 0x9cc6 <__vector_41+0x2b0>
    9aae:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9ab2:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9ab6:	21 e0       	ldi	r18, 0x01	; 1
    9ab8:	89 2b       	or	r24, r25
    9aba:	09 f4       	brne	.+2      	; 0x9abe <__vector_41+0xa8>
    9abc:	20 e0       	ldi	r18, 0x00	; 0
    9abe:	22 23       	and	r18, r18
    9ac0:	09 f4       	brne	.+2      	; 0x9ac4 <__vector_41+0xae>
    9ac2:	6a c0       	rjmp	.+212    	; 0x9b98 <__vector_41+0x182>
    9ac4:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9ac8:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9acc:	21 e0       	ldi	r18, 0x01	; 1
    9ace:	02 97       	sbiw	r24, 0x02	; 2
    9ad0:	0c f4       	brge	.+2      	; 0x9ad4 <__vector_41+0xbe>
    9ad2:	20 e0       	ldi	r18, 0x00	; 0
    9ad4:	22 23       	and	r18, r18
    9ad6:	69 f0       	breq	.+26     	; 0x9af2 <__vector_41+0xdc>
    9ad8:	81 e0       	ldi	r24, 0x01	; 1
    9ada:	0e 94 d3 4c 	call	0x99a6	; 0x99a6 <_ZL17LED_set_RED_levelb>
    9ade:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9ae2:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9ae6:	01 97       	sbiw	r24, 0x01	; 1
    9ae8:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9aec:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
    9af0:	17 c0       	rjmp	.+46     	; 0x9b20 <__vector_41+0x10a>
    9af2:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9af6:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9afa:	21 e0       	ldi	r18, 0x01	; 1
    9afc:	8f 3f       	cpi	r24, 0xFF	; 255
    9afe:	9f 4f       	sbci	r25, 0xFF	; 255
    9b00:	0c f0       	brlt	.+2      	; 0x9b04 <__vector_41+0xee>
    9b02:	20 e0       	ldi	r18, 0x00	; 0
    9b04:	22 23       	and	r18, r18
    9b06:	61 f0       	breq	.+24     	; 0x9b20 <__vector_41+0x10a>
    9b08:	80 e0       	ldi	r24, 0x00	; 0
    9b0a:	0e 94 d3 4c 	call	0x99a6	; 0x99a6 <_ZL17LED_set_RED_levelb>
    9b0e:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9b12:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b16:	01 96       	adiw	r24, 0x01	; 1
    9b18:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9b1c:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b20:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9b24:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b28:	21 e0       	ldi	r18, 0x01	; 1
    9b2a:	01 97       	sbiw	r24, 0x01	; 1
    9b2c:	09 f0       	breq	.+2      	; 0x9b30 <__vector_41+0x11a>
    9b2e:	20 e0       	ldi	r18, 0x00	; 0
    9b30:	22 23       	and	r18, r18
    9b32:	f9 f0       	breq	.+62     	; 0x9b72 <__vector_41+0x15c>
    9b34:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZL20red_blink_off_period>
    9b38:	90 91 c9 47 	lds	r25, 0x47C9	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
    9b3c:	21 e0       	ldi	r18, 0x01	; 1
    9b3e:	89 2b       	or	r24, r25
    9b40:	09 f4       	brne	.+2      	; 0x9b44 <__vector_41+0x12e>
    9b42:	20 e0       	ldi	r18, 0x00	; 0
    9b44:	22 23       	and	r18, r18
    9b46:	61 f0       	breq	.+24     	; 0x9b60 <__vector_41+0x14a>
    9b48:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZL20red_blink_off_period>
    9b4c:	90 91 c9 47 	lds	r25, 0x47C9	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
    9b50:	91 95       	neg	r25
    9b52:	81 95       	neg	r24
    9b54:	91 09       	sbc	r25, r1
    9b56:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9b5a:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b5e:	23 c0       	rjmp	.+70     	; 0x9ba6 <__vector_41+0x190>
    9b60:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9b64:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9b68:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9b6c:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b70:	1a c0       	rjmp	.+52     	; 0x9ba6 <__vector_41+0x190>
    9b72:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_ZL15red_blink_count>
    9b76:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b7a:	21 e0       	ldi	r18, 0x01	; 1
    9b7c:	01 96       	adiw	r24, 0x01	; 1
    9b7e:	09 f0       	breq	.+2      	; 0x9b82 <__vector_41+0x16c>
    9b80:	20 e0       	ldi	r18, 0x00	; 0
    9b82:	22 23       	and	r18, r18
    9b84:	81 f0       	breq	.+32     	; 0x9ba6 <__vector_41+0x190>
    9b86:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9b8a:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9b8e:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9b92:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
    9b96:	07 c0       	rjmp	.+14     	; 0x9ba6 <__vector_41+0x190>
    9b98:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <_ZL18red_led_configured>
    9b9c:	88 23       	and	r24, r24
    9b9e:	19 f0       	breq	.+6      	; 0x9ba6 <__vector_41+0x190>
    9ba0:	80 e0       	ldi	r24, 0x00	; 0
    9ba2:	0e 94 d3 4c 	call	0x99a6	; 0x99a6 <_ZL17LED_set_RED_levelb>
    9ba6:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9baa:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9bae:	21 e0       	ldi	r18, 0x01	; 1
    9bb0:	89 2b       	or	r24, r25
    9bb2:	09 f4       	brne	.+2      	; 0x9bb6 <__vector_41+0x1a0>
    9bb4:	20 e0       	ldi	r18, 0x00	; 0
    9bb6:	22 23       	and	r18, r18
    9bb8:	09 f4       	brne	.+2      	; 0x9bbc <__vector_41+0x1a6>
    9bba:	6a c0       	rjmp	.+212    	; 0x9c90 <__vector_41+0x27a>
    9bbc:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9bc0:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9bc4:	21 e0       	ldi	r18, 0x01	; 1
    9bc6:	02 97       	sbiw	r24, 0x02	; 2
    9bc8:	0c f4       	brge	.+2      	; 0x9bcc <__vector_41+0x1b6>
    9bca:	20 e0       	ldi	r18, 0x00	; 0
    9bcc:	22 23       	and	r18, r18
    9bce:	69 f0       	breq	.+26     	; 0x9bea <__vector_41+0x1d4>
    9bd0:	81 e0       	ldi	r24, 0x01	; 1
    9bd2:	0e 94 e2 4c 	call	0x99c4	; 0x99c4 <_ZL19LED_set_GREEN_levelb>
    9bd6:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9bda:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9bde:	01 97       	sbiw	r24, 0x01	; 1
    9be0:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9be4:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9be8:	17 c0       	rjmp	.+46     	; 0x9c18 <__vector_41+0x202>
    9bea:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9bee:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9bf2:	21 e0       	ldi	r18, 0x01	; 1
    9bf4:	8f 3f       	cpi	r24, 0xFF	; 255
    9bf6:	9f 4f       	sbci	r25, 0xFF	; 255
    9bf8:	0c f0       	brlt	.+2      	; 0x9bfc <__vector_41+0x1e6>
    9bfa:	20 e0       	ldi	r18, 0x00	; 0
    9bfc:	22 23       	and	r18, r18
    9bfe:	61 f0       	breq	.+24     	; 0x9c18 <__vector_41+0x202>
    9c00:	80 e0       	ldi	r24, 0x00	; 0
    9c02:	0e 94 e2 4c 	call	0x99c4	; 0x99c4 <_ZL19LED_set_GREEN_levelb>
    9c06:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9c0a:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c0e:	01 96       	adiw	r24, 0x01	; 1
    9c10:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9c14:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c18:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9c1c:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c20:	21 e0       	ldi	r18, 0x01	; 1
    9c22:	01 97       	sbiw	r24, 0x01	; 1
    9c24:	09 f0       	breq	.+2      	; 0x9c28 <__vector_41+0x212>
    9c26:	20 e0       	ldi	r18, 0x00	; 0
    9c28:	22 23       	and	r18, r18
    9c2a:	f9 f0       	breq	.+62     	; 0x9c6a <__vector_41+0x254>
    9c2c:	80 91 cc 47 	lds	r24, 0x47CC	; 0x8047cc <_ZL22green_blink_off_period>
    9c30:	90 91 cd 47 	lds	r25, 0x47CD	; 0x8047cd <_ZL22green_blink_off_period+0x1>
    9c34:	21 e0       	ldi	r18, 0x01	; 1
    9c36:	89 2b       	or	r24, r25
    9c38:	09 f4       	brne	.+2      	; 0x9c3c <__vector_41+0x226>
    9c3a:	20 e0       	ldi	r18, 0x00	; 0
    9c3c:	22 23       	and	r18, r18
    9c3e:	61 f0       	breq	.+24     	; 0x9c58 <__vector_41+0x242>
    9c40:	80 91 cc 47 	lds	r24, 0x47CC	; 0x8047cc <_ZL22green_blink_off_period>
    9c44:	90 91 cd 47 	lds	r25, 0x47CD	; 0x8047cd <_ZL22green_blink_off_period+0x1>
    9c48:	91 95       	neg	r25
    9c4a:	81 95       	neg	r24
    9c4c:	91 09       	sbc	r25, r1
    9c4e:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9c52:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c56:	37 c0       	rjmp	.+110    	; 0x9cc6 <__vector_41+0x2b0>
    9c58:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9c5c:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9c60:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9c64:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c68:	2e c0       	rjmp	.+92     	; 0x9cc6 <__vector_41+0x2b0>
    9c6a:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_ZL17green_blink_count>
    9c6e:	90 91 d1 47 	lds	r25, 0x47D1	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c72:	21 e0       	ldi	r18, 0x01	; 1
    9c74:	01 96       	adiw	r24, 0x01	; 1
    9c76:	09 f0       	breq	.+2      	; 0x9c7a <__vector_41+0x264>
    9c78:	20 e0       	ldi	r18, 0x00	; 0
    9c7a:	22 23       	and	r18, r18
    9c7c:	21 f1       	breq	.+72     	; 0x9cc6 <__vector_41+0x2b0>
    9c7e:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9c82:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9c86:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9c8a:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
    9c8e:	1b c0       	rjmp	.+54     	; 0x9cc6 <__vector_41+0x2b0>
    9c90:	80 91 d3 47 	lds	r24, 0x47D3	; 0x8047d3 <_ZL20green_led_configured>
    9c94:	88 23       	and	r24, r24
    9c96:	b9 f0       	breq	.+46     	; 0x9cc6 <__vector_41+0x2b0>
    9c98:	80 e0       	ldi	r24, 0x00	; 0
    9c9a:	0e 94 e2 4c 	call	0x99c4	; 0x99c4 <_ZL19LED_set_GREEN_levelb>
    9c9e:	13 c0       	rjmp	.+38     	; 0x9cc6 <__vector_41+0x2b0>
    9ca0:	80 e3       	ldi	r24, 0x30	; 48
    9ca2:	9b e0       	ldi	r25, 0x0B	; 11
    9ca4:	20 e3       	ldi	r18, 0x30	; 48
    9ca6:	3b e0       	ldi	r19, 0x0B	; 11
    9ca8:	f9 01       	movw	r30, r18
    9caa:	25 81       	ldd	r18, Z+5	; 0x05
    9cac:	2e 7f       	andi	r18, 0xFE	; 254
    9cae:	fc 01       	movw	r30, r24
    9cb0:	25 83       	std	Z+5, r18	; 0x05
    9cb2:	80 e0       	ldi	r24, 0x00	; 0
    9cb4:	0e 94 d3 4c 	call	0x99a6	; 0x99a6 <_ZL17LED_set_RED_levelb>
    9cb8:	80 e0       	ldi	r24, 0x00	; 0
    9cba:	0e 94 e2 4c 	call	0x99c4	; 0x99c4 <_ZL19LED_set_GREEN_levelb>
    9cbe:	10 92 d2 47 	sts	0x47D2, r1	; 0x8047d2 <_ZL18red_led_configured>
    9cc2:	10 92 d3 47 	sts	0x47D3, r1	; 0x8047d3 <_ZL20green_led_configured>
    9cc6:	80 e3       	ldi	r24, 0x30	; 48
    9cc8:	9b e0       	ldi	r25, 0x0B	; 11
    9cca:	20 e3       	ldi	r18, 0x30	; 48
    9ccc:	3b e0       	ldi	r19, 0x0B	; 11
    9cce:	f9 01       	movw	r30, r18
    9cd0:	26 81       	ldd	r18, Z+6	; 0x06
    9cd2:	21 60       	ori	r18, 0x01	; 1
    9cd4:	fc 01       	movw	r30, r24
    9cd6:	26 83       	std	Z+6, r18	; 0x06
    9cd8:	00 00       	nop
    9cda:	df 91       	pop	r29
    9cdc:	cf 91       	pop	r28
    9cde:	ff 91       	pop	r31
    9ce0:	ef 91       	pop	r30
    9ce2:	bf 91       	pop	r27
    9ce4:	af 91       	pop	r26
    9ce6:	9f 91       	pop	r25
    9ce8:	8f 91       	pop	r24
    9cea:	7f 91       	pop	r23
    9cec:	6f 91       	pop	r22
    9cee:	5f 91       	pop	r21
    9cf0:	4f 91       	pop	r20
    9cf2:	3f 91       	pop	r19
    9cf4:	2f 91       	pop	r18
    9cf6:	0f 90       	pop	r0
    9cf8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    9cfc:	0f 90       	pop	r0
    9cfe:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9d02:	0f 90       	pop	r0
    9d04:	1f 90       	pop	r1
    9d06:	18 95       	reti

00009d08 <_ZN4leds5blinkE7Blink_t>:


void leds::blink(Blink_t blinkMode)
{
    9d08:	cf 93       	push	r28
    9d0a:	df 93       	push	r29
    9d0c:	00 d0       	rcall	.+0      	; 0x9d0e <_ZN4leds5blinkE7Blink_t+0x6>
    9d0e:	1f 92       	push	r1
    9d10:	cd b7       	in	r28, 0x3d	; 61
    9d12:	de b7       	in	r29, 0x3e	; 62
    9d14:	89 83       	std	Y+1, r24	; 0x01
    9d16:	9a 83       	std	Y+2, r25	; 0x02
    9d18:	6b 83       	std	Y+3, r22	; 0x03
	led_timeout_count = LED_TIMEOUT;
    9d1a:	80 e6       	ldi	r24, 0x60	; 96
    9d1c:	9a ee       	ldi	r25, 0xEA	; 234
    9d1e:	a0 e0       	ldi	r26, 0x00	; 0
    9d20:	b0 e0       	ldi	r27, 0x00	; 0
    9d22:	80 93 c2 47 	sts	0x47C2, r24	; 0x8047c2 <_ZL17led_timeout_count>
    9d26:	90 93 c3 47 	sts	0x47C3, r25	; 0x8047c3 <_ZL17led_timeout_count+0x1>
    9d2a:	a0 93 c4 47 	sts	0x47C4, r26	; 0x8047c4 <_ZL17led_timeout_count+0x2>
    9d2e:	b0 93 c5 47 	sts	0x47C5, r27	; 0x8047c5 <_ZL17led_timeout_count+0x3>
	
	if(blinkMode != lastBlinkSetting)
    9d32:	90 91 c1 47 	lds	r25, 0x47C1	; 0x8047c1 <_ZL16lastBlinkSetting>
    9d36:	81 e0       	ldi	r24, 0x01	; 1
    9d38:	2b 81       	ldd	r18, Y+3	; 0x03
    9d3a:	29 17       	cp	r18, r25
    9d3c:	09 f4       	brne	.+2      	; 0x9d40 <_ZN4leds5blinkE7Blink_t+0x38>
    9d3e:	80 e0       	ldi	r24, 0x00	; 0
    9d40:	88 23       	and	r24, r24
    9d42:	09 f4       	brne	.+2      	; 0x9d46 <_ZN4leds5blinkE7Blink_t+0x3e>
    9d44:	ab c1       	rjmp	.+854    	; 0xa09c <_ZN4leds5blinkE7Blink_t+0x394>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    9d46:	80 e3       	ldi	r24, 0x30	; 48
    9d48:	9b e0       	ldi	r25, 0x0B	; 11
    9d4a:	20 e3       	ldi	r18, 0x30	; 48
    9d4c:	3b e0       	ldi	r19, 0x0B	; 11
    9d4e:	f9 01       	movw	r30, r18
    9d50:	25 81       	ldd	r18, Z+5	; 0x05
    9d52:	2e 7f       	andi	r18, 0xFE	; 254
    9d54:	fc 01       	movw	r30, r24
    9d56:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    9d58:	8b 81       	ldd	r24, Y+3	; 0x03
    9d5a:	88 2f       	mov	r24, r24
    9d5c:	90 e0       	ldi	r25, 0x00	; 0
    9d5e:	09 2e       	mov	r0, r25
    9d60:	00 0c       	add	r0, r0
    9d62:	aa 0b       	sbc	r26, r26
    9d64:	bb 0b       	sbc	r27, r27
    9d66:	40 e0       	ldi	r20, 0x00	; 0
    9d68:	50 e0       	ldi	r21, 0x00	; 0
    9d6a:	2c e0       	ldi	r18, 0x0C	; 12
    9d6c:	30 e0       	ldi	r19, 0x00	; 0
    9d6e:	84 1b       	sub	r24, r20
    9d70:	95 0b       	sbc	r25, r21
    9d72:	28 17       	cp	r18, r24
    9d74:	39 07       	cpc	r19, r25
    9d76:	08 f4       	brcc	.+2      	; 0x9d7a <_ZN4leds5blinkE7Blink_t+0x72>
    9d78:	7a c1       	rjmp	.+756    	; 0xa06e <_ZN4leds5blinkE7Blink_t+0x366>
    9d7a:	87 54       	subi	r24, 0x47	; 71
    9d7c:	9f 4f       	sbci	r25, 0xFF	; 255
    9d7e:	fc 01       	movw	r30, r24
    9d80:	0c 94 ef 74 	jmp	0xe9de	; 0xe9de <__tablejump2__>
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    9d84:	10 92 ce 47 	sts	0x47CE, r1	; 0x8047ce <_ZL15red_blink_count>
    9d88:	10 92 cf 47 	sts	0x47CF, r1	; 0x8047cf <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    9d8c:	10 92 d0 47 	sts	0x47D0, r1	; 0x8047d0 <_ZL17green_blink_count>
    9d90:	10 92 d1 47 	sts	0x47D1, r1	; 0x8047d1 <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    9d94:	80 e0       	ldi	r24, 0x00	; 0
    9d96:	0e 94 d3 4c 	call	0x99a6	; 0x99a6 <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    9d9a:	80 e0       	ldi	r24, 0x00	; 0
    9d9c:	0e 94 e2 4c 	call	0x99c4	; 0x99c4 <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    9da0:	10 92 d2 47 	sts	0x47D2, r1	; 0x8047d2 <_ZL18red_led_configured>
				green_led_configured = false;
    9da4:	10 92 d3 47 	sts	0x47D3, r1	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9da8:	63 c1       	rjmp	.+710    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
    9daa:	80 e0       	ldi	r24, 0x00	; 0
    9dac:	0e 94 d3 4c 	call	0x99a6	; 0x99a6 <_ZL17LED_set_RED_levelb>
				red_blink_count = 0;
    9db0:	10 92 ce 47 	sts	0x47CE, r1	; 0x8047ce <_ZL15red_blink_count>
    9db4:	10 92 cf 47 	sts	0x47CF, r1	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    9db8:	10 92 d2 47 	sts	0x47D2, r1	; 0x8047d2 <_ZL18red_led_configured>
			}
			break;
    9dbc:	59 c1       	rjmp	.+690    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
    9dbe:	80 e0       	ldi	r24, 0x00	; 0
    9dc0:	0e 94 e2 4c 	call	0x99c4	; 0x99c4 <_ZL19LED_set_GREEN_levelb>
				green_blink_count = 0;
    9dc4:	10 92 d0 47 	sts	0x47D0, r1	; 0x8047d0 <_ZL17green_blink_count>
    9dc8:	10 92 d1 47 	sts	0x47D1, r1	; 0x8047d1 <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    9dcc:	10 92 d3 47 	sts	0x47D3, r1	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9dd0:	4f c1       	rjmp	.+670    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    9dd2:	89 e1       	ldi	r24, 0x19	; 25
    9dd4:	90 e0       	ldi	r25, 0x00	; 0
    9dd6:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    9dda:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    9dde:	86 e9       	ldi	r24, 0x96	; 150
    9de0:	90 e0       	ldi	r25, 0x00	; 0
    9de2:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL20red_blink_off_period>
    9de6:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    9dea:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9dee:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9df2:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9df6:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    9dfa:	81 e0       	ldi	r24, 0x01	; 1
    9dfc:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
			}
			break;
    9e00:	37 c1       	rjmp	.+622    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    9e02:	89 e1       	ldi	r24, 0x19	; 25
    9e04:	90 e0       	ldi	r25, 0x00	; 0
    9e06:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    9e0a:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    9e0e:	86 e9       	ldi	r24, 0x96	; 150
    9e10:	90 e0       	ldi	r25, 0x00	; 0
    9e12:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_ZL22green_blink_off_period>
    9e16:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    9e1a:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9e1e:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9e22:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9e26:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    9e2a:	81 e0       	ldi	r24, 0x01	; 1
    9e2c:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9e30:	1f c1       	rjmp	.+574    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    9e32:	84 ef       	ldi	r24, 0xF4	; 244
    9e34:	91 e0       	ldi	r25, 0x01	; 1
    9e36:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    9e3a:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    9e3e:	84 ef       	ldi	r24, 0xF4	; 244
    9e40:	91 e0       	ldi	r25, 0x01	; 1
    9e42:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL20red_blink_off_period>
    9e46:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    9e4a:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9e4e:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9e52:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9e56:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    9e5a:	81 e0       	ldi	r24, 0x01	; 1
    9e5c:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
			}
			break;
    9e60:	07 c1       	rjmp	.+526    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    9e62:	84 ef       	ldi	r24, 0xF4	; 244
    9e64:	91 e0       	ldi	r25, 0x01	; 1
    9e66:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    9e6a:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    9e6e:	84 ef       	ldi	r24, 0xF4	; 244
    9e70:	91 e0       	ldi	r25, 0x01	; 1
    9e72:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_ZL22green_blink_off_period>
    9e76:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    9e7a:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9e7e:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9e82:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9e86:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    9e8a:	81 e0       	ldi	r24, 0x01	; 1
    9e8c:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9e90:	ef c0       	rjmp	.+478    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    9e92:	84 ef       	ldi	r24, 0xF4	; 244
    9e94:	91 e0       	ldi	r25, 0x01	; 1
    9e96:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    9e9a:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    9e9e:	84 ef       	ldi	r24, 0xF4	; 244
    9ea0:	91 e0       	ldi	r25, 0x01	; 1
    9ea2:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_ZL22green_blink_off_period>
    9ea6:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    9eaa:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9eae:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9eb2:	91 95       	neg	r25
    9eb4:	81 95       	neg	r24
    9eb6:	91 09       	sbc	r25, r1
    9eb8:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9ebc:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    9ec0:	84 ef       	ldi	r24, 0xF4	; 244
    9ec2:	91 e0       	ldi	r25, 0x01	; 1
    9ec4:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    9ec8:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    9ecc:	84 ef       	ldi	r24, 0xF4	; 244
    9ece:	91 e0       	ldi	r25, 0x01	; 1
    9ed0:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL20red_blink_off_period>
    9ed4:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    9ed8:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9edc:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9ee0:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9ee4:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    9ee8:	81 e0       	ldi	r24, 0x01	; 1
    9eea:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
				green_led_configured = true;			
    9eee:	81 e0       	ldi	r24, 0x01	; 1
    9ef0:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9ef4:	bd c0       	rjmp	.+378    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    9ef6:	89 e1       	ldi	r24, 0x19	; 25
    9ef8:	90 e0       	ldi	r25, 0x00	; 0
    9efa:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    9efe:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    9f02:	89 e1       	ldi	r24, 0x19	; 25
    9f04:	90 e0       	ldi	r25, 0x00	; 0
    9f06:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_ZL22green_blink_off_period>
    9f0a:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    9f0e:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9f12:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9f16:	91 95       	neg	r25
    9f18:	81 95       	neg	r24
    9f1a:	91 09       	sbc	r25, r1
    9f1c:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9f20:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    9f24:	89 e1       	ldi	r24, 0x19	; 25
    9f26:	90 e0       	ldi	r25, 0x00	; 0
    9f28:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    9f2c:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    9f30:	89 e1       	ldi	r24, 0x19	; 25
    9f32:	90 e0       	ldi	r25, 0x00	; 0
    9f34:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL20red_blink_off_period>
    9f38:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    9f3c:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9f40:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9f44:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9f48:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    9f4c:	81 e0       	ldi	r24, 0x01	; 1
    9f4e:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
				green_led_configured = true;			
    9f52:	81 e0       	ldi	r24, 0x01	; 1
    9f54:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9f58:	8b c0       	rjmp	.+278    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    9f5a:	84 ef       	ldi	r24, 0xF4	; 244
    9f5c:	91 e0       	ldi	r25, 0x01	; 1
    9f5e:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    9f62:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    9f66:	84 ef       	ldi	r24, 0xF4	; 244
    9f68:	91 e0       	ldi	r25, 0x01	; 1
    9f6a:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_ZL22green_blink_off_period>
    9f6e:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    9f72:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9f76:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9f7a:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9f7e:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    9f82:	84 ef       	ldi	r24, 0xF4	; 244
    9f84:	91 e0       	ldi	r25, 0x01	; 1
    9f86:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    9f8a:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    9f8e:	84 ef       	ldi	r24, 0xF4	; 244
    9f90:	91 e0       	ldi	r25, 0x01	; 1
    9f92:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL20red_blink_off_period>
    9f96:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    9f9a:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9f9e:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    9fa2:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    9fa6:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    9faa:	81 e0       	ldi	r24, 0x01	; 1
    9fac:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
				green_led_configured = true;			
    9fb0:	81 e0       	ldi	r24, 0x01	; 1
    9fb2:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    9fb6:	5c c0       	rjmp	.+184    	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    9fb8:	89 e1       	ldi	r24, 0x19	; 25
    9fba:	90 e0       	ldi	r25, 0x00	; 0
    9fbc:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    9fc0:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    9fc4:	89 e1       	ldi	r24, 0x19	; 25
    9fc6:	90 e0       	ldi	r25, 0x00	; 0
    9fc8:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_ZL22green_blink_off_period>
    9fcc:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    9fd0:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    9fd4:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    9fd8:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    9fdc:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    9fe0:	89 e1       	ldi	r24, 0x19	; 25
    9fe2:	90 e0       	ldi	r25, 0x00	; 0
    9fe4:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    9fe8:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    9fec:	89 e1       	ldi	r24, 0x19	; 25
    9fee:	90 e0       	ldi	r25, 0x00	; 0
    9ff0:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZL20red_blink_off_period>
    9ff4:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    9ff8:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    9ffc:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    a000:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    a004:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a008:	81 e0       	ldi	r24, 0x01	; 1
    a00a:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
				green_led_configured = true;			
    a00e:	81 e0       	ldi	r24, 0x01	; 1
    a010:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    a014:	2d c0       	rjmp	.+90     	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    a016:	84 ef       	ldi	r24, 0xF4	; 244
    a018:	91 e0       	ldi	r25, 0x01	; 1
    a01a:	80 93 c6 47 	sts	0x47C6, r24	; 0x8047c6 <_ZL19red_blink_on_period>
    a01e:	90 93 c7 47 	sts	0x47C7, r25	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    a022:	10 92 c8 47 	sts	0x47C8, r1	; 0x8047c8 <_ZL20red_blink_off_period>
    a026:	10 92 c9 47 	sts	0x47C9, r1	; 0x8047c9 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    a02a:	80 91 c6 47 	lds	r24, 0x47C6	; 0x8047c6 <_ZL19red_blink_on_period>
    a02e:	90 91 c7 47 	lds	r25, 0x47C7	; 0x8047c7 <_ZL19red_blink_on_period+0x1>
    a032:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_ZL15red_blink_count>
    a036:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a03a:	81 e0       	ldi	r24, 0x01	; 1
    a03c:	80 93 d2 47 	sts	0x47D2, r24	; 0x8047d2 <_ZL18red_led_configured>
			}
			break;
    a040:	17 c0       	rjmp	.+46     	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    a042:	84 ef       	ldi	r24, 0xF4	; 244
    a044:	91 e0       	ldi	r25, 0x01	; 1
    a046:	80 93 ca 47 	sts	0x47CA, r24	; 0x8047ca <_ZL21green_blink_on_period>
    a04a:	90 93 cb 47 	sts	0x47CB, r25	; 0x8047cb <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    a04e:	10 92 cc 47 	sts	0x47CC, r1	; 0x8047cc <_ZL22green_blink_off_period>
    a052:	10 92 cd 47 	sts	0x47CD, r1	; 0x8047cd <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    a056:	80 91 ca 47 	lds	r24, 0x47CA	; 0x8047ca <_ZL21green_blink_on_period>
    a05a:	90 91 cb 47 	lds	r25, 0x47CB	; 0x8047cb <_ZL21green_blink_on_period+0x1>
    a05e:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_ZL17green_blink_count>
    a062:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a066:	81 e0       	ldi	r24, 0x01	; 1
    a068:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL20green_led_configured>
			}
			break;
    a06c:	01 c0       	rjmp	.+2      	; 0xa070 <_ZN4leds5blinkE7Blink_t+0x368>
			
			default:
			{
				
			}
			break;
    a06e:	00 00       	nop
		}
		
		if(red_led_configured || green_led_configured) 
    a070:	80 91 d2 47 	lds	r24, 0x47D2	; 0x8047d2 <_ZL18red_led_configured>
    a074:	88 23       	and	r24, r24
    a076:	21 f4       	brne	.+8      	; 0xa080 <_ZN4leds5blinkE7Blink_t+0x378>
    a078:	80 91 d3 47 	lds	r24, 0x47D3	; 0x8047d3 <_ZL20green_led_configured>
    a07c:	88 23       	and	r24, r24
    a07e:	11 f0       	breq	.+4      	; 0xa084 <_ZN4leds5blinkE7Blink_t+0x37c>
    a080:	81 e0       	ldi	r24, 0x01	; 1
    a082:	01 c0       	rjmp	.+2      	; 0xa086 <_ZN4leds5blinkE7Blink_t+0x37e>
    a084:	80 e0       	ldi	r24, 0x00	; 0
    a086:	88 23       	and	r24, r24
    a088:	49 f0       	breq	.+18     	; 0xa09c <_ZN4leds5blinkE7Blink_t+0x394>
		{
			TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    a08a:	80 e3       	ldi	r24, 0x30	; 48
    a08c:	9b e0       	ldi	r25, 0x0B	; 11
    a08e:	20 e3       	ldi	r18, 0x30	; 48
    a090:	3b e0       	ldi	r19, 0x0B	; 11
    a092:	f9 01       	movw	r30, r18
    a094:	25 81       	ldd	r18, Z+5	; 0x05
    a096:	21 60       	ori	r18, 0x01	; 1
    a098:	fc 01       	movw	r30, r24
    a09a:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	lastBlinkSetting = blinkMode;
    a09c:	8b 81       	ldd	r24, Y+3	; 0x03
    a09e:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZL16lastBlinkSetting>
}
    a0a2:	00 00       	nop
    a0a4:	23 96       	adiw	r28, 0x03	; 3
    a0a6:	cd bf       	out	0x3d, r28	; 61
    a0a8:	de bf       	out	0x3e, r29	; 62
    a0aa:	df 91       	pop	r29
    a0ac:	cf 91       	pop	r28
    a0ae:	08 95       	ret

0000a0b0 <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    a0b0:	cf 93       	push	r28
    a0b2:	df 93       	push	r29
    a0b4:	00 d0       	rcall	.+0      	; 0xa0b6 <PORTC_set_pin_pull_mode+0x6>
    a0b6:	00 d0       	rcall	.+0      	; 0xa0b8 <PORTC_set_pin_pull_mode+0x8>
    a0b8:	cd b7       	in	r28, 0x3d	; 61
    a0ba:	de b7       	in	r29, 0x3e	; 62
    a0bc:	8b 83       	std	Y+3, r24	; 0x03
    a0be:	6c 83       	std	Y+4, r22	; 0x04
    a0c0:	8b 81       	ldd	r24, Y+3	; 0x03
    a0c2:	88 2f       	mov	r24, r24
    a0c4:	90 e0       	ldi	r25, 0x00	; 0
    a0c6:	80 5b       	subi	r24, 0xB0	; 176
    a0c8:	9b 4f       	sbci	r25, 0xFB	; 251
    a0ca:	89 83       	std	Y+1, r24	; 0x01
    a0cc:	9a 83       	std	Y+2, r25	; 0x02
    a0ce:	8c 81       	ldd	r24, Y+4	; 0x04
    a0d0:	81 30       	cpi	r24, 0x01	; 1
    a0d2:	59 f4       	brne	.+22     	; 0xa0ea <PORTC_set_pin_pull_mode+0x3a>
    a0d4:	89 81       	ldd	r24, Y+1	; 0x01
    a0d6:	9a 81       	ldd	r25, Y+2	; 0x02
    a0d8:	fc 01       	movw	r30, r24
    a0da:	80 81       	ld	r24, Z
    a0dc:	28 2f       	mov	r18, r24
    a0de:	28 60       	ori	r18, 0x08	; 8
    a0e0:	89 81       	ldd	r24, Y+1	; 0x01
    a0e2:	9a 81       	ldd	r25, Y+2	; 0x02
    a0e4:	fc 01       	movw	r30, r24
    a0e6:	20 83       	st	Z, r18
    a0e8:	0d c0       	rjmp	.+26     	; 0xa104 <PORTC_set_pin_pull_mode+0x54>
    a0ea:	8c 81       	ldd	r24, Y+4	; 0x04
    a0ec:	88 23       	and	r24, r24
    a0ee:	51 f4       	brne	.+20     	; 0xa104 <PORTC_set_pin_pull_mode+0x54>
    a0f0:	89 81       	ldd	r24, Y+1	; 0x01
    a0f2:	9a 81       	ldd	r25, Y+2	; 0x02
    a0f4:	fc 01       	movw	r30, r24
    a0f6:	80 81       	ld	r24, Z
    a0f8:	28 2f       	mov	r18, r24
    a0fa:	27 7f       	andi	r18, 0xF7	; 247
    a0fc:	89 81       	ldd	r24, Y+1	; 0x01
    a0fe:	9a 81       	ldd	r25, Y+2	; 0x02
    a100:	fc 01       	movw	r30, r24
    a102:	20 83       	st	Z, r18
    a104:	00 00       	nop
    a106:	24 96       	adiw	r28, 0x04	; 4
    a108:	cd bf       	out	0x3d, r28	; 61
    a10a:	de bf       	out	0x3e, r29	; 62
    a10c:	df 91       	pop	r29
    a10e:	cf 91       	pop	r28
    a110:	08 95       	ret

0000a112 <PORTC_set_pin_dir>:
    a112:	cf 93       	push	r28
    a114:	df 93       	push	r29
    a116:	00 d0       	rcall	.+0      	; 0xa118 <PORTC_set_pin_dir+0x6>
    a118:	cd b7       	in	r28, 0x3d	; 61
    a11a:	de b7       	in	r29, 0x3e	; 62
    a11c:	89 83       	std	Y+1, r24	; 0x01
    a11e:	6a 83       	std	Y+2, r22	; 0x02
    a120:	8a 81       	ldd	r24, Y+2	; 0x02
    a122:	88 2f       	mov	r24, r24
    a124:	90 e0       	ldi	r25, 0x00	; 0
    a126:	81 30       	cpi	r24, 0x01	; 1
    a128:	91 05       	cpc	r25, r1
    a12a:	e1 f0       	breq	.+56     	; 0xa164 <PORTC_set_pin_dir+0x52>
    a12c:	82 30       	cpi	r24, 0x02	; 2
    a12e:	91 05       	cpc	r25, r1
    a130:	71 f1       	breq	.+92     	; 0xa18e <PORTC_set_pin_dir+0x7c>
    a132:	89 2b       	or	r24, r25
    a134:	09 f0       	breq	.+2      	; 0xa138 <PORTC_set_pin_dir+0x26>
    a136:	3b c0       	rjmp	.+118    	; 0xa1ae <PORTC_set_pin_dir+0x9c>
    a138:	88 e0       	ldi	r24, 0x08	; 8
    a13a:	90 e0       	ldi	r25, 0x00	; 0
    a13c:	28 e0       	ldi	r18, 0x08	; 8
    a13e:	30 e0       	ldi	r19, 0x00	; 0
    a140:	f9 01       	movw	r30, r18
    a142:	20 81       	ld	r18, Z
    a144:	62 2f       	mov	r22, r18
    a146:	29 81       	ldd	r18, Y+1	; 0x01
    a148:	42 2f       	mov	r20, r18
    a14a:	50 e0       	ldi	r21, 0x00	; 0
    a14c:	21 e0       	ldi	r18, 0x01	; 1
    a14e:	30 e0       	ldi	r19, 0x00	; 0
    a150:	02 c0       	rjmp	.+4      	; 0xa156 <PORTC_set_pin_dir+0x44>
    a152:	22 0f       	add	r18, r18
    a154:	33 1f       	adc	r19, r19
    a156:	4a 95       	dec	r20
    a158:	e2 f7       	brpl	.-8      	; 0xa152 <PORTC_set_pin_dir+0x40>
    a15a:	20 95       	com	r18
    a15c:	26 23       	and	r18, r22
    a15e:	fc 01       	movw	r30, r24
    a160:	20 83       	st	Z, r18
    a162:	25 c0       	rjmp	.+74     	; 0xa1ae <PORTC_set_pin_dir+0x9c>
    a164:	88 e0       	ldi	r24, 0x08	; 8
    a166:	90 e0       	ldi	r25, 0x00	; 0
    a168:	28 e0       	ldi	r18, 0x08	; 8
    a16a:	30 e0       	ldi	r19, 0x00	; 0
    a16c:	f9 01       	movw	r30, r18
    a16e:	20 81       	ld	r18, Z
    a170:	62 2f       	mov	r22, r18
    a172:	29 81       	ldd	r18, Y+1	; 0x01
    a174:	42 2f       	mov	r20, r18
    a176:	50 e0       	ldi	r21, 0x00	; 0
    a178:	21 e0       	ldi	r18, 0x01	; 1
    a17a:	30 e0       	ldi	r19, 0x00	; 0
    a17c:	02 c0       	rjmp	.+4      	; 0xa182 <PORTC_set_pin_dir+0x70>
    a17e:	22 0f       	add	r18, r18
    a180:	33 1f       	adc	r19, r19
    a182:	4a 95       	dec	r20
    a184:	e2 f7       	brpl	.-8      	; 0xa17e <PORTC_set_pin_dir+0x6c>
    a186:	26 2b       	or	r18, r22
    a188:	fc 01       	movw	r30, r24
    a18a:	20 83       	st	Z, r18
    a18c:	10 c0       	rjmp	.+32     	; 0xa1ae <PORTC_set_pin_dir+0x9c>
    a18e:	89 81       	ldd	r24, Y+1	; 0x01
    a190:	88 2f       	mov	r24, r24
    a192:	90 e0       	ldi	r25, 0x00	; 0
    a194:	80 5b       	subi	r24, 0xB0	; 176
    a196:	9b 4f       	sbci	r25, 0xFB	; 251
    a198:	29 81       	ldd	r18, Y+1	; 0x01
    a19a:	22 2f       	mov	r18, r18
    a19c:	30 e0       	ldi	r19, 0x00	; 0
    a19e:	20 5b       	subi	r18, 0xB0	; 176
    a1a0:	3b 4f       	sbci	r19, 0xFB	; 251
    a1a2:	f9 01       	movw	r30, r18
    a1a4:	20 81       	ld	r18, Z
    a1a6:	28 60       	ori	r18, 0x08	; 8
    a1a8:	fc 01       	movw	r30, r24
    a1aa:	20 83       	st	Z, r18
    a1ac:	00 00       	nop
    a1ae:	00 00       	nop
    a1b0:	0f 90       	pop	r0
    a1b2:	0f 90       	pop	r0
    a1b4:	df 91       	pop	r29
    a1b6:	cf 91       	pop	r28
    a1b8:	08 95       	ret

0000a1ba <PORTC_set_pin_level>:
    a1ba:	cf 93       	push	r28
    a1bc:	df 93       	push	r29
    a1be:	00 d0       	rcall	.+0      	; 0xa1c0 <PORTC_set_pin_level+0x6>
    a1c0:	cd b7       	in	r28, 0x3d	; 61
    a1c2:	de b7       	in	r29, 0x3e	; 62
    a1c4:	89 83       	std	Y+1, r24	; 0x01
    a1c6:	6a 83       	std	Y+2, r22	; 0x02
    a1c8:	8a 81       	ldd	r24, Y+2	; 0x02
    a1ca:	88 23       	and	r24, r24
    a1cc:	a9 f0       	breq	.+42     	; 0xa1f8 <PORTC_set_pin_level+0x3e>
    a1ce:	88 e0       	ldi	r24, 0x08	; 8
    a1d0:	90 e0       	ldi	r25, 0x00	; 0
    a1d2:	28 e0       	ldi	r18, 0x08	; 8
    a1d4:	30 e0       	ldi	r19, 0x00	; 0
    a1d6:	f9 01       	movw	r30, r18
    a1d8:	21 81       	ldd	r18, Z+1	; 0x01
    a1da:	62 2f       	mov	r22, r18
    a1dc:	29 81       	ldd	r18, Y+1	; 0x01
    a1de:	42 2f       	mov	r20, r18
    a1e0:	50 e0       	ldi	r21, 0x00	; 0
    a1e2:	21 e0       	ldi	r18, 0x01	; 1
    a1e4:	30 e0       	ldi	r19, 0x00	; 0
    a1e6:	02 c0       	rjmp	.+4      	; 0xa1ec <PORTC_set_pin_level+0x32>
    a1e8:	22 0f       	add	r18, r18
    a1ea:	33 1f       	adc	r19, r19
    a1ec:	4a 95       	dec	r20
    a1ee:	e2 f7       	brpl	.-8      	; 0xa1e8 <PORTC_set_pin_level+0x2e>
    a1f0:	26 2b       	or	r18, r22
    a1f2:	fc 01       	movw	r30, r24
    a1f4:	21 83       	std	Z+1, r18	; 0x01
    a1f6:	15 c0       	rjmp	.+42     	; 0xa222 <PORTC_set_pin_level+0x68>
    a1f8:	88 e0       	ldi	r24, 0x08	; 8
    a1fa:	90 e0       	ldi	r25, 0x00	; 0
    a1fc:	28 e0       	ldi	r18, 0x08	; 8
    a1fe:	30 e0       	ldi	r19, 0x00	; 0
    a200:	f9 01       	movw	r30, r18
    a202:	21 81       	ldd	r18, Z+1	; 0x01
    a204:	62 2f       	mov	r22, r18
    a206:	29 81       	ldd	r18, Y+1	; 0x01
    a208:	42 2f       	mov	r20, r18
    a20a:	50 e0       	ldi	r21, 0x00	; 0
    a20c:	21 e0       	ldi	r18, 0x01	; 1
    a20e:	30 e0       	ldi	r19, 0x00	; 0
    a210:	02 c0       	rjmp	.+4      	; 0xa216 <PORTC_set_pin_level+0x5c>
    a212:	22 0f       	add	r18, r18
    a214:	33 1f       	adc	r19, r19
    a216:	4a 95       	dec	r20
    a218:	e2 f7       	brpl	.-8      	; 0xa212 <PORTC_set_pin_level+0x58>
    a21a:	20 95       	com	r18
    a21c:	26 23       	and	r18, r22
    a21e:	fc 01       	movw	r30, r24
    a220:	21 83       	std	Z+1, r18	; 0x01
    a222:	00 00       	nop
    a224:	0f 90       	pop	r0
    a226:	0f 90       	pop	r0
    a228:	df 91       	pop	r29
    a22a:	cf 91       	pop	r28
    a22c:	08 95       	ret

0000a22e <PORTE_set_pin_pull_mode>:
    a22e:	cf 93       	push	r28
    a230:	df 93       	push	r29
    a232:	00 d0       	rcall	.+0      	; 0xa234 <PORTE_set_pin_pull_mode+0x6>
    a234:	00 d0       	rcall	.+0      	; 0xa236 <PORTE_set_pin_pull_mode+0x8>
    a236:	cd b7       	in	r28, 0x3d	; 61
    a238:	de b7       	in	r29, 0x3e	; 62
    a23a:	8b 83       	std	Y+3, r24	; 0x03
    a23c:	6c 83       	std	Y+4, r22	; 0x04
    a23e:	8b 81       	ldd	r24, Y+3	; 0x03
    a240:	88 2f       	mov	r24, r24
    a242:	90 e0       	ldi	r25, 0x00	; 0
    a244:	80 57       	subi	r24, 0x70	; 112
    a246:	9b 4f       	sbci	r25, 0xFB	; 251
    a248:	89 83       	std	Y+1, r24	; 0x01
    a24a:	9a 83       	std	Y+2, r25	; 0x02
    a24c:	8c 81       	ldd	r24, Y+4	; 0x04
    a24e:	81 30       	cpi	r24, 0x01	; 1
    a250:	59 f4       	brne	.+22     	; 0xa268 <PORTE_set_pin_pull_mode+0x3a>
    a252:	89 81       	ldd	r24, Y+1	; 0x01
    a254:	9a 81       	ldd	r25, Y+2	; 0x02
    a256:	fc 01       	movw	r30, r24
    a258:	80 81       	ld	r24, Z
    a25a:	28 2f       	mov	r18, r24
    a25c:	28 60       	ori	r18, 0x08	; 8
    a25e:	89 81       	ldd	r24, Y+1	; 0x01
    a260:	9a 81       	ldd	r25, Y+2	; 0x02
    a262:	fc 01       	movw	r30, r24
    a264:	20 83       	st	Z, r18
    a266:	0d c0       	rjmp	.+26     	; 0xa282 <PORTE_set_pin_pull_mode+0x54>
    a268:	8c 81       	ldd	r24, Y+4	; 0x04
    a26a:	88 23       	and	r24, r24
    a26c:	51 f4       	brne	.+20     	; 0xa282 <PORTE_set_pin_pull_mode+0x54>
    a26e:	89 81       	ldd	r24, Y+1	; 0x01
    a270:	9a 81       	ldd	r25, Y+2	; 0x02
    a272:	fc 01       	movw	r30, r24
    a274:	80 81       	ld	r24, Z
    a276:	28 2f       	mov	r18, r24
    a278:	27 7f       	andi	r18, 0xF7	; 247
    a27a:	89 81       	ldd	r24, Y+1	; 0x01
    a27c:	9a 81       	ldd	r25, Y+2	; 0x02
    a27e:	fc 01       	movw	r30, r24
    a280:	20 83       	st	Z, r18
    a282:	00 00       	nop
    a284:	24 96       	adiw	r28, 0x04	; 4
    a286:	cd bf       	out	0x3d, r28	; 61
    a288:	de bf       	out	0x3e, r29	; 62
    a28a:	df 91       	pop	r29
    a28c:	cf 91       	pop	r28
    a28e:	08 95       	ret

0000a290 <PORTE_set_pin_dir>:
    a290:	cf 93       	push	r28
    a292:	df 93       	push	r29
    a294:	00 d0       	rcall	.+0      	; 0xa296 <PORTE_set_pin_dir+0x6>
    a296:	cd b7       	in	r28, 0x3d	; 61
    a298:	de b7       	in	r29, 0x3e	; 62
    a29a:	89 83       	std	Y+1, r24	; 0x01
    a29c:	6a 83       	std	Y+2, r22	; 0x02
    a29e:	8a 81       	ldd	r24, Y+2	; 0x02
    a2a0:	88 2f       	mov	r24, r24
    a2a2:	90 e0       	ldi	r25, 0x00	; 0
    a2a4:	81 30       	cpi	r24, 0x01	; 1
    a2a6:	91 05       	cpc	r25, r1
    a2a8:	e1 f0       	breq	.+56     	; 0xa2e2 <PORTE_set_pin_dir+0x52>
    a2aa:	82 30       	cpi	r24, 0x02	; 2
    a2ac:	91 05       	cpc	r25, r1
    a2ae:	71 f1       	breq	.+92     	; 0xa30c <PORTE_set_pin_dir+0x7c>
    a2b0:	89 2b       	or	r24, r25
    a2b2:	09 f0       	breq	.+2      	; 0xa2b6 <PORTE_set_pin_dir+0x26>
    a2b4:	3b c0       	rjmp	.+118    	; 0xa32c <PORTE_set_pin_dir+0x9c>
    a2b6:	80 e1       	ldi	r24, 0x10	; 16
    a2b8:	90 e0       	ldi	r25, 0x00	; 0
    a2ba:	20 e1       	ldi	r18, 0x10	; 16
    a2bc:	30 e0       	ldi	r19, 0x00	; 0
    a2be:	f9 01       	movw	r30, r18
    a2c0:	20 81       	ld	r18, Z
    a2c2:	62 2f       	mov	r22, r18
    a2c4:	29 81       	ldd	r18, Y+1	; 0x01
    a2c6:	42 2f       	mov	r20, r18
    a2c8:	50 e0       	ldi	r21, 0x00	; 0
    a2ca:	21 e0       	ldi	r18, 0x01	; 1
    a2cc:	30 e0       	ldi	r19, 0x00	; 0
    a2ce:	02 c0       	rjmp	.+4      	; 0xa2d4 <PORTE_set_pin_dir+0x44>
    a2d0:	22 0f       	add	r18, r18
    a2d2:	33 1f       	adc	r19, r19
    a2d4:	4a 95       	dec	r20
    a2d6:	e2 f7       	brpl	.-8      	; 0xa2d0 <PORTE_set_pin_dir+0x40>
    a2d8:	20 95       	com	r18
    a2da:	26 23       	and	r18, r22
    a2dc:	fc 01       	movw	r30, r24
    a2de:	20 83       	st	Z, r18
    a2e0:	25 c0       	rjmp	.+74     	; 0xa32c <PORTE_set_pin_dir+0x9c>
    a2e2:	80 e1       	ldi	r24, 0x10	; 16
    a2e4:	90 e0       	ldi	r25, 0x00	; 0
    a2e6:	20 e1       	ldi	r18, 0x10	; 16
    a2e8:	30 e0       	ldi	r19, 0x00	; 0
    a2ea:	f9 01       	movw	r30, r18
    a2ec:	20 81       	ld	r18, Z
    a2ee:	62 2f       	mov	r22, r18
    a2f0:	29 81       	ldd	r18, Y+1	; 0x01
    a2f2:	42 2f       	mov	r20, r18
    a2f4:	50 e0       	ldi	r21, 0x00	; 0
    a2f6:	21 e0       	ldi	r18, 0x01	; 1
    a2f8:	30 e0       	ldi	r19, 0x00	; 0
    a2fa:	02 c0       	rjmp	.+4      	; 0xa300 <PORTE_set_pin_dir+0x70>
    a2fc:	22 0f       	add	r18, r18
    a2fe:	33 1f       	adc	r19, r19
    a300:	4a 95       	dec	r20
    a302:	e2 f7       	brpl	.-8      	; 0xa2fc <PORTE_set_pin_dir+0x6c>
    a304:	26 2b       	or	r18, r22
    a306:	fc 01       	movw	r30, r24
    a308:	20 83       	st	Z, r18
    a30a:	10 c0       	rjmp	.+32     	; 0xa32c <PORTE_set_pin_dir+0x9c>
    a30c:	89 81       	ldd	r24, Y+1	; 0x01
    a30e:	88 2f       	mov	r24, r24
    a310:	90 e0       	ldi	r25, 0x00	; 0
    a312:	80 57       	subi	r24, 0x70	; 112
    a314:	9b 4f       	sbci	r25, 0xFB	; 251
    a316:	29 81       	ldd	r18, Y+1	; 0x01
    a318:	22 2f       	mov	r18, r18
    a31a:	30 e0       	ldi	r19, 0x00	; 0
    a31c:	20 57       	subi	r18, 0x70	; 112
    a31e:	3b 4f       	sbci	r19, 0xFB	; 251
    a320:	f9 01       	movw	r30, r18
    a322:	20 81       	ld	r18, Z
    a324:	28 60       	ori	r18, 0x08	; 8
    a326:	fc 01       	movw	r30, r24
    a328:	20 83       	st	Z, r18
    a32a:	00 00       	nop
    a32c:	00 00       	nop
    a32e:	0f 90       	pop	r0
    a330:	0f 90       	pop	r0
    a332:	df 91       	pop	r29
    a334:	cf 91       	pop	r28
    a336:	08 95       	ret

0000a338 <PORTE_set_pin_level>:
    a338:	cf 93       	push	r28
    a33a:	df 93       	push	r29
    a33c:	00 d0       	rcall	.+0      	; 0xa33e <PORTE_set_pin_level+0x6>
    a33e:	cd b7       	in	r28, 0x3d	; 61
    a340:	de b7       	in	r29, 0x3e	; 62
    a342:	89 83       	std	Y+1, r24	; 0x01
    a344:	6a 83       	std	Y+2, r22	; 0x02
    a346:	8a 81       	ldd	r24, Y+2	; 0x02
    a348:	88 23       	and	r24, r24
    a34a:	a9 f0       	breq	.+42     	; 0xa376 <PORTE_set_pin_level+0x3e>
    a34c:	80 e1       	ldi	r24, 0x10	; 16
    a34e:	90 e0       	ldi	r25, 0x00	; 0
    a350:	20 e1       	ldi	r18, 0x10	; 16
    a352:	30 e0       	ldi	r19, 0x00	; 0
    a354:	f9 01       	movw	r30, r18
    a356:	21 81       	ldd	r18, Z+1	; 0x01
    a358:	62 2f       	mov	r22, r18
    a35a:	29 81       	ldd	r18, Y+1	; 0x01
    a35c:	42 2f       	mov	r20, r18
    a35e:	50 e0       	ldi	r21, 0x00	; 0
    a360:	21 e0       	ldi	r18, 0x01	; 1
    a362:	30 e0       	ldi	r19, 0x00	; 0
    a364:	02 c0       	rjmp	.+4      	; 0xa36a <PORTE_set_pin_level+0x32>
    a366:	22 0f       	add	r18, r18
    a368:	33 1f       	adc	r19, r19
    a36a:	4a 95       	dec	r20
    a36c:	e2 f7       	brpl	.-8      	; 0xa366 <PORTE_set_pin_level+0x2e>
    a36e:	26 2b       	or	r18, r22
    a370:	fc 01       	movw	r30, r24
    a372:	21 83       	std	Z+1, r18	; 0x01
    a374:	15 c0       	rjmp	.+42     	; 0xa3a0 <PORTE_set_pin_level+0x68>
    a376:	80 e1       	ldi	r24, 0x10	; 16
    a378:	90 e0       	ldi	r25, 0x00	; 0
    a37a:	20 e1       	ldi	r18, 0x10	; 16
    a37c:	30 e0       	ldi	r19, 0x00	; 0
    a37e:	f9 01       	movw	r30, r18
    a380:	21 81       	ldd	r18, Z+1	; 0x01
    a382:	62 2f       	mov	r22, r18
    a384:	29 81       	ldd	r18, Y+1	; 0x01
    a386:	42 2f       	mov	r20, r18
    a388:	50 e0       	ldi	r21, 0x00	; 0
    a38a:	21 e0       	ldi	r18, 0x01	; 1
    a38c:	30 e0       	ldi	r19, 0x00	; 0
    a38e:	02 c0       	rjmp	.+4      	; 0xa394 <PORTE_set_pin_level+0x5c>
    a390:	22 0f       	add	r18, r18
    a392:	33 1f       	adc	r19, r19
    a394:	4a 95       	dec	r20
    a396:	e2 f7       	brpl	.-8      	; 0xa390 <PORTE_set_pin_level+0x58>
    a398:	20 95       	com	r18
    a39a:	26 23       	and	r18, r22
    a39c:	fc 01       	movw	r30, r24
    a39e:	21 83       	std	Z+1, r18	; 0x01
    a3a0:	00 00       	nop
    a3a2:	0f 90       	pop	r0
    a3a4:	0f 90       	pop	r0
    a3a6:	df 91       	pop	r29
    a3a8:	cf 91       	pop	r28
    a3aa:	08 95       	ret

0000a3ac <PC0_set_dir>:
    a3ac:	cf 93       	push	r28
    a3ae:	df 93       	push	r29
    a3b0:	1f 92       	push	r1
    a3b2:	cd b7       	in	r28, 0x3d	; 61
    a3b4:	de b7       	in	r29, 0x3e	; 62
    a3b6:	89 83       	std	Y+1, r24	; 0x01
    a3b8:	69 81       	ldd	r22, Y+1	; 0x01
    a3ba:	80 e0       	ldi	r24, 0x00	; 0
    a3bc:	0e 94 89 50 	call	0xa112	; 0xa112 <PORTC_set_pin_dir>
    a3c0:	00 00       	nop
    a3c2:	0f 90       	pop	r0
    a3c4:	df 91       	pop	r29
    a3c6:	cf 91       	pop	r28
    a3c8:	08 95       	ret

0000a3ca <PC0_set_level>:
    a3ca:	cf 93       	push	r28
    a3cc:	df 93       	push	r29
    a3ce:	1f 92       	push	r1
    a3d0:	cd b7       	in	r28, 0x3d	; 61
    a3d2:	de b7       	in	r29, 0x3e	; 62
    a3d4:	89 83       	std	Y+1, r24	; 0x01
    a3d6:	69 81       	ldd	r22, Y+1	; 0x01
    a3d8:	80 e0       	ldi	r24, 0x00	; 0
    a3da:	0e 94 dd 50 	call	0xa1ba	; 0xa1ba <PORTC_set_pin_level>
    a3de:	00 00       	nop
    a3e0:	0f 90       	pop	r0
    a3e2:	df 91       	pop	r29
    a3e4:	cf 91       	pop	r28
    a3e6:	08 95       	ret

0000a3e8 <PC1_set_pull_mode>:
    a3e8:	cf 93       	push	r28
    a3ea:	df 93       	push	r29
    a3ec:	1f 92       	push	r1
    a3ee:	cd b7       	in	r28, 0x3d	; 61
    a3f0:	de b7       	in	r29, 0x3e	; 62
    a3f2:	89 83       	std	Y+1, r24	; 0x01
    a3f4:	69 81       	ldd	r22, Y+1	; 0x01
    a3f6:	81 e0       	ldi	r24, 0x01	; 1
    a3f8:	0e 94 58 50 	call	0xa0b0	; 0xa0b0 <PORTC_set_pin_pull_mode>
    a3fc:	00 00       	nop
    a3fe:	0f 90       	pop	r0
    a400:	df 91       	pop	r29
    a402:	cf 91       	pop	r28
    a404:	08 95       	ret

0000a406 <PC1_set_dir>:
    a406:	cf 93       	push	r28
    a408:	df 93       	push	r29
    a40a:	1f 92       	push	r1
    a40c:	cd b7       	in	r28, 0x3d	; 61
    a40e:	de b7       	in	r29, 0x3e	; 62
    a410:	89 83       	std	Y+1, r24	; 0x01
    a412:	69 81       	ldd	r22, Y+1	; 0x01
    a414:	81 e0       	ldi	r24, 0x01	; 1
    a416:	0e 94 89 50 	call	0xa112	; 0xa112 <PORTC_set_pin_dir>
    a41a:	00 00       	nop
    a41c:	0f 90       	pop	r0
    a41e:	df 91       	pop	r29
    a420:	cf 91       	pop	r28
    a422:	08 95       	ret

0000a424 <PE0_set_dir>:
    a424:	cf 93       	push	r28
    a426:	df 93       	push	r29
    a428:	1f 92       	push	r1
    a42a:	cd b7       	in	r28, 0x3d	; 61
    a42c:	de b7       	in	r29, 0x3e	; 62
    a42e:	89 83       	std	Y+1, r24	; 0x01
    a430:	69 81       	ldd	r22, Y+1	; 0x01
    a432:	80 e0       	ldi	r24, 0x00	; 0
    a434:	0e 94 48 51 	call	0xa290	; 0xa290 <PORTE_set_pin_dir>
    a438:	00 00       	nop
    a43a:	0f 90       	pop	r0
    a43c:	df 91       	pop	r29
    a43e:	cf 91       	pop	r28
    a440:	08 95       	ret

0000a442 <PE0_set_level>:
    a442:	cf 93       	push	r28
    a444:	df 93       	push	r29
    a446:	1f 92       	push	r1
    a448:	cd b7       	in	r28, 0x3d	; 61
    a44a:	de b7       	in	r29, 0x3e	; 62
    a44c:	89 83       	std	Y+1, r24	; 0x01
    a44e:	69 81       	ldd	r22, Y+1	; 0x01
    a450:	80 e0       	ldi	r24, 0x00	; 0
    a452:	0e 94 9c 51 	call	0xa338	; 0xa338 <PORTE_set_pin_level>
    a456:	00 00       	nop
    a458:	0f 90       	pop	r0
    a45a:	df 91       	pop	r29
    a45c:	cf 91       	pop	r28
    a45e:	08 95       	ret

0000a460 <PE1_set_pull_mode>:
    a460:	cf 93       	push	r28
    a462:	df 93       	push	r29
    a464:	1f 92       	push	r1
    a466:	cd b7       	in	r28, 0x3d	; 61
    a468:	de b7       	in	r29, 0x3e	; 62
    a46a:	89 83       	std	Y+1, r24	; 0x01
    a46c:	69 81       	ldd	r22, Y+1	; 0x01
    a46e:	81 e0       	ldi	r24, 0x01	; 1
    a470:	0e 94 17 51 	call	0xa22e	; 0xa22e <PORTE_set_pin_pull_mode>
    a474:	00 00       	nop
    a476:	0f 90       	pop	r0
    a478:	df 91       	pop	r29
    a47a:	cf 91       	pop	r28
    a47c:	08 95       	ret

0000a47e <PE1_set_dir>:
    a47e:	cf 93       	push	r28
    a480:	df 93       	push	r29
    a482:	1f 92       	push	r1
    a484:	cd b7       	in	r28, 0x3d	; 61
    a486:	de b7       	in	r29, 0x3e	; 62
    a488:	89 83       	std	Y+1, r24	; 0x01
    a48a:	69 81       	ldd	r22, Y+1	; 0x01
    a48c:	81 e0       	ldi	r24, 0x01	; 1
    a48e:	0e 94 48 51 	call	0xa290	; 0xa290 <PORTE_set_pin_dir>
    a492:	00 00       	nop
    a494:	0f 90       	pop	r0
    a496:	df 91       	pop	r29
    a498:	cf 91       	pop	r28
    a49a:	08 95       	ret

0000a49c <_Z18nextFullLBTxBufferv>:
    a49c:	cf 93       	push	r28
    a49e:	df 93       	push	r29
    a4a0:	00 d0       	rcall	.+0      	; 0xa4a2 <_Z18nextFullLBTxBufferv+0x6>
    a4a2:	cd b7       	in	r28, 0x3d	; 61
    a4a4:	de b7       	in	r29, 0x3e	; 62
    a4a6:	81 e0       	ldi	r24, 0x01	; 1
    a4a8:	89 83       	std	Y+1, r24	; 0x01
    a4aa:	1a 82       	std	Y+2, r1	; 0x02
    a4ac:	80 91 53 49 	lds	r24, 0x4953	; 0x804953 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a4b0:	28 2f       	mov	r18, r24
    a4b2:	30 e0       	ldi	r19, 0x00	; 0
    a4b4:	42 e3       	ldi	r20, 0x32	; 50
    a4b6:	42 9f       	mul	r20, r18
    a4b8:	c0 01       	movw	r24, r0
    a4ba:	43 9f       	mul	r20, r19
    a4bc:	90 0d       	add	r25, r0
    a4be:	11 24       	eor	r1, r1
    a4c0:	89 5f       	subi	r24, 0xF9	; 249
    a4c2:	97 4b       	sbci	r25, 0xB7	; 183
    a4c4:	fc 01       	movw	r30, r24
    a4c6:	80 81       	ld	r24, Z
    a4c8:	88 23       	and	r24, r24
    a4ca:	c1 f4       	brne	.+48     	; 0xa4fc <_Z18nextFullLBTxBufferv+0x60>
    a4cc:	8a 81       	ldd	r24, Y+2	; 0x02
    a4ce:	8f 5f       	subi	r24, 0xFF	; 255
    a4d0:	8a 83       	std	Y+2, r24	; 0x02
    a4d2:	81 e0       	ldi	r24, 0x01	; 1
    a4d4:	9a 81       	ldd	r25, Y+2	; 0x02
    a4d6:	94 30       	cpi	r25, 0x04	; 4
    a4d8:	08 f4       	brcc	.+2      	; 0xa4dc <_Z18nextFullLBTxBufferv+0x40>
    a4da:	80 e0       	ldi	r24, 0x00	; 0
    a4dc:	88 23       	and	r24, r24
    a4de:	11 f0       	breq	.+4      	; 0xa4e4 <_Z18nextFullLBTxBufferv+0x48>
    a4e0:	19 82       	std	Y+1, r1	; 0x01
    a4e2:	0c c0       	rjmp	.+24     	; 0xa4fc <_Z18nextFullLBTxBufferv+0x60>
    a4e4:	80 91 53 49 	lds	r24, 0x4953	; 0x804953 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a4e8:	8f 5f       	subi	r24, 0xFF	; 255
    a4ea:	80 93 53 49 	sts	0x4953, r24	; 0x804953 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a4ee:	80 91 53 49 	lds	r24, 0x4953	; 0x804953 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a4f2:	84 30       	cpi	r24, 0x04	; 4
    a4f4:	d8 f2       	brcs	.-74     	; 0xa4ac <_Z18nextFullLBTxBufferv+0x10>
    a4f6:	10 92 53 49 	sts	0x4953, r1	; 0x804953 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a4fa:	d8 cf       	rjmp	.-80     	; 0xa4ac <_Z18nextFullLBTxBufferv+0x10>
    a4fc:	89 81       	ldd	r24, Y+1	; 0x01
    a4fe:	88 23       	and	r24, r24
    a500:	69 f0       	breq	.+26     	; 0xa51c <_Z18nextFullLBTxBufferv+0x80>
    a502:	80 91 53 49 	lds	r24, 0x4953	; 0x804953 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a506:	28 2f       	mov	r18, r24
    a508:	30 e0       	ldi	r19, 0x00	; 0
    a50a:	42 e3       	ldi	r20, 0x32	; 50
    a50c:	42 9f       	mul	r20, r18
    a50e:	c0 01       	movw	r24, r0
    a510:	43 9f       	mul	r20, r19
    a512:	90 0d       	add	r25, r0
    a514:	11 24       	eor	r1, r1
    a516:	89 5f       	subi	r24, 0xF9	; 249
    a518:	97 4b       	sbci	r25, 0xB7	; 183
    a51a:	02 c0       	rjmp	.+4      	; 0xa520 <_Z18nextFullLBTxBufferv+0x84>
    a51c:	80 e0       	ldi	r24, 0x00	; 0
    a51e:	90 e0       	ldi	r25, 0x00	; 0
    a520:	0f 90       	pop	r0
    a522:	0f 90       	pop	r0
    a524:	df 91       	pop	r29
    a526:	cf 91       	pop	r28
    a528:	08 95       	ret

0000a52a <_Z19nextEmptyLBTxBufferv>:
    a52a:	cf 93       	push	r28
    a52c:	df 93       	push	r29
    a52e:	00 d0       	rcall	.+0      	; 0xa530 <_Z19nextEmptyLBTxBufferv+0x6>
    a530:	cd b7       	in	r28, 0x3d	; 61
    a532:	de b7       	in	r29, 0x3e	; 62
    a534:	81 e0       	ldi	r24, 0x01	; 1
    a536:	89 83       	std	Y+1, r24	; 0x01
    a538:	1a 82       	std	Y+2, r1	; 0x02
    a53a:	80 91 54 49 	lds	r24, 0x4954	; 0x804954 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a53e:	28 2f       	mov	r18, r24
    a540:	30 e0       	ldi	r19, 0x00	; 0
    a542:	42 e3       	ldi	r20, 0x32	; 50
    a544:	42 9f       	mul	r20, r18
    a546:	c0 01       	movw	r24, r0
    a548:	43 9f       	mul	r20, r19
    a54a:	90 0d       	add	r25, r0
    a54c:	11 24       	eor	r1, r1
    a54e:	89 5f       	subi	r24, 0xF9	; 249
    a550:	97 4b       	sbci	r25, 0xB7	; 183
    a552:	fc 01       	movw	r30, r24
    a554:	80 81       	ld	r24, Z
    a556:	88 23       	and	r24, r24
    a558:	c1 f0       	breq	.+48     	; 0xa58a <_Z19nextEmptyLBTxBufferv+0x60>
    a55a:	8a 81       	ldd	r24, Y+2	; 0x02
    a55c:	8f 5f       	subi	r24, 0xFF	; 255
    a55e:	8a 83       	std	Y+2, r24	; 0x02
    a560:	81 e0       	ldi	r24, 0x01	; 1
    a562:	9a 81       	ldd	r25, Y+2	; 0x02
    a564:	94 30       	cpi	r25, 0x04	; 4
    a566:	08 f4       	brcc	.+2      	; 0xa56a <_Z19nextEmptyLBTxBufferv+0x40>
    a568:	80 e0       	ldi	r24, 0x00	; 0
    a56a:	88 23       	and	r24, r24
    a56c:	11 f0       	breq	.+4      	; 0xa572 <_Z19nextEmptyLBTxBufferv+0x48>
    a56e:	19 82       	std	Y+1, r1	; 0x01
    a570:	0c c0       	rjmp	.+24     	; 0xa58a <_Z19nextEmptyLBTxBufferv+0x60>
    a572:	80 91 54 49 	lds	r24, 0x4954	; 0x804954 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a576:	8f 5f       	subi	r24, 0xFF	; 255
    a578:	80 93 54 49 	sts	0x4954, r24	; 0x804954 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a57c:	80 91 54 49 	lds	r24, 0x4954	; 0x804954 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a580:	84 30       	cpi	r24, 0x04	; 4
    a582:	d8 f2       	brcs	.-74     	; 0xa53a <_Z19nextEmptyLBTxBufferv+0x10>
    a584:	10 92 54 49 	sts	0x4954, r1	; 0x804954 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a588:	d8 cf       	rjmp	.-80     	; 0xa53a <_Z19nextEmptyLBTxBufferv+0x10>
    a58a:	89 81       	ldd	r24, Y+1	; 0x01
    a58c:	88 23       	and	r24, r24
    a58e:	69 f0       	breq	.+26     	; 0xa5aa <_Z19nextEmptyLBTxBufferv+0x80>
    a590:	80 91 54 49 	lds	r24, 0x4954	; 0x804954 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a594:	28 2f       	mov	r18, r24
    a596:	30 e0       	ldi	r19, 0x00	; 0
    a598:	42 e3       	ldi	r20, 0x32	; 50
    a59a:	42 9f       	mul	r20, r18
    a59c:	c0 01       	movw	r24, r0
    a59e:	43 9f       	mul	r20, r19
    a5a0:	90 0d       	add	r25, r0
    a5a2:	11 24       	eor	r1, r1
    a5a4:	89 5f       	subi	r24, 0xF9	; 249
    a5a6:	97 4b       	sbci	r25, 0xB7	; 183
    a5a8:	02 c0       	rjmp	.+4      	; 0xa5ae <_Z19nextEmptyLBTxBufferv+0x84>
    a5aa:	80 e0       	ldi	r24, 0x00	; 0
    a5ac:	90 e0       	ldi	r25, 0x00	; 0
    a5ae:	0f 90       	pop	r0
    a5b0:	0f 90       	pop	r0
    a5b2:	df 91       	pop	r29
    a5b4:	cf 91       	pop	r28
    a5b6:	08 95       	ret

0000a5b8 <_Z19nextEmptyLBRxBufferv>:
    a5b8:	cf 93       	push	r28
    a5ba:	df 93       	push	r29
    a5bc:	00 d0       	rcall	.+0      	; 0xa5be <_Z19nextEmptyLBRxBufferv+0x6>
    a5be:	cd b7       	in	r28, 0x3d	; 61
    a5c0:	de b7       	in	r29, 0x3e	; 62
    a5c2:	81 e0       	ldi	r24, 0x01	; 1
    a5c4:	89 83       	std	Y+1, r24	; 0x01
    a5c6:	1a 82       	std	Y+2, r1	; 0x02
    a5c8:	80 91 55 49 	lds	r24, 0x4955	; 0x804955 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a5cc:	28 2f       	mov	r18, r24
    a5ce:	30 e0       	ldi	r19, 0x00	; 0
    a5d0:	42 e4       	ldi	r20, 0x42	; 66
    a5d2:	42 9f       	mul	r20, r18
    a5d4:	c0 01       	movw	r24, r0
    a5d6:	43 9f       	mul	r20, r19
    a5d8:	90 0d       	add	r25, r0
    a5da:	11 24       	eor	r1, r1
    a5dc:	80 53       	subi	r24, 0x30	; 48
    a5de:	97 4b       	sbci	r25, 0xB7	; 183
    a5e0:	fc 01       	movw	r30, r24
    a5e2:	80 81       	ld	r24, Z
    a5e4:	91 81       	ldd	r25, Z+1	; 0x01
    a5e6:	89 2b       	or	r24, r25
    a5e8:	c1 f0       	breq	.+48     	; 0xa61a <_Z19nextEmptyLBRxBufferv+0x62>
    a5ea:	8a 81       	ldd	r24, Y+2	; 0x02
    a5ec:	8f 5f       	subi	r24, 0xFF	; 255
    a5ee:	8a 83       	std	Y+2, r24	; 0x02
    a5f0:	81 e0       	ldi	r24, 0x01	; 1
    a5f2:	9a 81       	ldd	r25, Y+2	; 0x02
    a5f4:	92 30       	cpi	r25, 0x02	; 2
    a5f6:	08 f4       	brcc	.+2      	; 0xa5fa <_Z19nextEmptyLBRxBufferv+0x42>
    a5f8:	80 e0       	ldi	r24, 0x00	; 0
    a5fa:	88 23       	and	r24, r24
    a5fc:	11 f0       	breq	.+4      	; 0xa602 <_Z19nextEmptyLBRxBufferv+0x4a>
    a5fe:	19 82       	std	Y+1, r1	; 0x01
    a600:	0c c0       	rjmp	.+24     	; 0xa61a <_Z19nextEmptyLBRxBufferv+0x62>
    a602:	80 91 55 49 	lds	r24, 0x4955	; 0x804955 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a606:	8f 5f       	subi	r24, 0xFF	; 255
    a608:	80 93 55 49 	sts	0x4955, r24	; 0x804955 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a60c:	80 91 55 49 	lds	r24, 0x4955	; 0x804955 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a610:	82 30       	cpi	r24, 0x02	; 2
    a612:	d0 f2       	brcs	.-76     	; 0xa5c8 <_Z19nextEmptyLBRxBufferv+0x10>
    a614:	10 92 55 49 	sts	0x4955, r1	; 0x804955 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a618:	d7 cf       	rjmp	.-82     	; 0xa5c8 <_Z19nextEmptyLBRxBufferv+0x10>
    a61a:	89 81       	ldd	r24, Y+1	; 0x01
    a61c:	88 23       	and	r24, r24
    a61e:	69 f0       	breq	.+26     	; 0xa63a <_Z19nextEmptyLBRxBufferv+0x82>
    a620:	80 91 55 49 	lds	r24, 0x4955	; 0x804955 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a624:	28 2f       	mov	r18, r24
    a626:	30 e0       	ldi	r19, 0x00	; 0
    a628:	42 e4       	ldi	r20, 0x42	; 66
    a62a:	42 9f       	mul	r20, r18
    a62c:	c0 01       	movw	r24, r0
    a62e:	43 9f       	mul	r20, r19
    a630:	90 0d       	add	r25, r0
    a632:	11 24       	eor	r1, r1
    a634:	81 53       	subi	r24, 0x31	; 49
    a636:	97 4b       	sbci	r25, 0xB7	; 183
    a638:	02 c0       	rjmp	.+4      	; 0xa63e <_Z19nextEmptyLBRxBufferv+0x86>
    a63a:	80 e0       	ldi	r24, 0x00	; 0
    a63c:	90 e0       	ldi	r25, 0x00	; 0
    a63e:	0f 90       	pop	r0
    a640:	0f 90       	pop	r0
    a642:	df 91       	pop	r29
    a644:	cf 91       	pop	r28
    a646:	08 95       	ret

0000a648 <_Z18nextFullLBRxBufferv>:
    a648:	cf 93       	push	r28
    a64a:	df 93       	push	r29
    a64c:	00 d0       	rcall	.+0      	; 0xa64e <_Z18nextFullLBRxBufferv+0x6>
    a64e:	cd b7       	in	r28, 0x3d	; 61
    a650:	de b7       	in	r29, 0x3e	; 62
    a652:	81 e0       	ldi	r24, 0x01	; 1
    a654:	89 83       	std	Y+1, r24	; 0x01
    a656:	1a 82       	std	Y+2, r1	; 0x02
    a658:	80 91 56 49 	lds	r24, 0x4956	; 0x804956 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a65c:	28 2f       	mov	r18, r24
    a65e:	30 e0       	ldi	r19, 0x00	; 0
    a660:	42 e4       	ldi	r20, 0x42	; 66
    a662:	42 9f       	mul	r20, r18
    a664:	c0 01       	movw	r24, r0
    a666:	43 9f       	mul	r20, r19
    a668:	90 0d       	add	r25, r0
    a66a:	11 24       	eor	r1, r1
    a66c:	80 53       	subi	r24, 0x30	; 48
    a66e:	97 4b       	sbci	r25, 0xB7	; 183
    a670:	fc 01       	movw	r30, r24
    a672:	80 81       	ld	r24, Z
    a674:	91 81       	ldd	r25, Z+1	; 0x01
    a676:	89 2b       	or	r24, r25
    a678:	c1 f4       	brne	.+48     	; 0xa6aa <_Z18nextFullLBRxBufferv+0x62>
    a67a:	8a 81       	ldd	r24, Y+2	; 0x02
    a67c:	8f 5f       	subi	r24, 0xFF	; 255
    a67e:	8a 83       	std	Y+2, r24	; 0x02
    a680:	81 e0       	ldi	r24, 0x01	; 1
    a682:	9a 81       	ldd	r25, Y+2	; 0x02
    a684:	92 30       	cpi	r25, 0x02	; 2
    a686:	08 f4       	brcc	.+2      	; 0xa68a <_Z18nextFullLBRxBufferv+0x42>
    a688:	80 e0       	ldi	r24, 0x00	; 0
    a68a:	88 23       	and	r24, r24
    a68c:	11 f0       	breq	.+4      	; 0xa692 <_Z18nextFullLBRxBufferv+0x4a>
    a68e:	19 82       	std	Y+1, r1	; 0x01
    a690:	0c c0       	rjmp	.+24     	; 0xa6aa <_Z18nextFullLBRxBufferv+0x62>
    a692:	80 91 56 49 	lds	r24, 0x4956	; 0x804956 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a696:	8f 5f       	subi	r24, 0xFF	; 255
    a698:	80 93 56 49 	sts	0x4956, r24	; 0x804956 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a69c:	80 91 56 49 	lds	r24, 0x4956	; 0x804956 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a6a0:	82 30       	cpi	r24, 0x02	; 2
    a6a2:	d0 f2       	brcs	.-76     	; 0xa658 <_Z18nextFullLBRxBufferv+0x10>
    a6a4:	10 92 56 49 	sts	0x4956, r1	; 0x804956 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a6a8:	d7 cf       	rjmp	.-82     	; 0xa658 <_Z18nextFullLBRxBufferv+0x10>
    a6aa:	89 81       	ldd	r24, Y+1	; 0x01
    a6ac:	88 23       	and	r24, r24
    a6ae:	69 f0       	breq	.+26     	; 0xa6ca <_Z18nextFullLBRxBufferv+0x82>
    a6b0:	80 91 56 49 	lds	r24, 0x4956	; 0x804956 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a6b4:	28 2f       	mov	r18, r24
    a6b6:	30 e0       	ldi	r19, 0x00	; 0
    a6b8:	42 e4       	ldi	r20, 0x42	; 66
    a6ba:	42 9f       	mul	r20, r18
    a6bc:	c0 01       	movw	r24, r0
    a6be:	43 9f       	mul	r20, r19
    a6c0:	90 0d       	add	r25, r0
    a6c2:	11 24       	eor	r1, r1
    a6c4:	81 53       	subi	r24, 0x31	; 49
    a6c6:	97 4b       	sbci	r25, 0xB7	; 183
    a6c8:	02 c0       	rjmp	.+4      	; 0xa6ce <_Z18nextFullLBRxBufferv+0x86>
    a6ca:	80 e0       	ldi	r24, 0x00	; 0
    a6cc:	90 e0       	ldi	r25, 0x00	; 0
    a6ce:	0f 90       	pop	r0
    a6d0:	0f 90       	pop	r0
    a6d2:	df 91       	pop	r29
    a6d4:	cf 91       	pop	r28
    a6d6:	08 95       	ret

0000a6d8 <_Z19linkbusTxInProgressv>:
    a6d8:	cf 93       	push	r28
    a6da:	df 93       	push	r29
    a6dc:	cd b7       	in	r28, 0x3d	; 61
    a6de:	de b7       	in	r29, 0x3e	; 62
    a6e0:	80 91 06 48 	lds	r24, 0x4806	; 0x804806 <_ZL17linkbus_tx_active>
    a6e4:	df 91       	pop	r29
    a6e6:	cf 91       	pop	r28
    a6e8:	08 95       	ret

0000a6ea <_ZL16linkbus_start_txv>:
    a6ea:	cf 93       	push	r28
    a6ec:	df 93       	push	r29
    a6ee:	1f 92       	push	r1
    a6f0:	cd b7       	in	r28, 0x3d	; 61
    a6f2:	de b7       	in	r29, 0x3e	; 62
    a6f4:	90 91 06 48 	lds	r25, 0x4806	; 0x804806 <_ZL17linkbus_tx_active>
    a6f8:	81 e0       	ldi	r24, 0x01	; 1
    a6fa:	89 27       	eor	r24, r25
    a6fc:	89 83       	std	Y+1, r24	; 0x01
    a6fe:	89 81       	ldd	r24, Y+1	; 0x01
    a700:	88 23       	and	r24, r24
    a702:	61 f0       	breq	.+24     	; 0xa71c <_ZL16linkbus_start_txv+0x32>
    a704:	81 e0       	ldi	r24, 0x01	; 1
    a706:	80 93 06 48 	sts	0x4806, r24	; 0x804806 <_ZL17linkbus_tx_active>
    a70a:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a70e:	84 30       	cpi	r24, 0x04	; 4
    a710:	19 f4       	brne	.+6      	; 0xa718 <_ZL16linkbus_start_txv+0x2e>
    a712:	0e 94 f9 6d 	call	0xdbf2	; 0xdbf2 <USART4_enable_tx>
    a716:	02 c0       	rjmp	.+4      	; 0xa71c <_ZL16linkbus_start_txv+0x32>
    a718:	0e 94 73 6d 	call	0xdae6	; 0xdae6 <USART1_enable_tx>
    a71c:	89 81       	ldd	r24, Y+1	; 0x01
    a71e:	0f 90       	pop	r0
    a720:	df 91       	pop	r29
    a722:	cf 91       	pop	r28
    a724:	08 95       	ret

0000a726 <_Z14linkbus_end_txv>:
    a726:	cf 93       	push	r28
    a728:	df 93       	push	r29
    a72a:	cd b7       	in	r28, 0x3d	; 61
    a72c:	de b7       	in	r29, 0x3e	; 62
    a72e:	80 91 06 48 	lds	r24, 0x4806	; 0x804806 <_ZL17linkbus_tx_active>
    a732:	88 23       	and	r24, r24
    a734:	c9 f0       	breq	.+50     	; 0xa768 <_Z14linkbus_end_txv+0x42>
    a736:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a73a:	88 23       	and	r24, r24
    a73c:	51 f4       	brne	.+20     	; 0xa752 <_Z14linkbus_end_txv+0x2c>
    a73e:	80 e8       	ldi	r24, 0x80	; 128
    a740:	98 e0       	ldi	r25, 0x08	; 8
    a742:	20 e8       	ldi	r18, 0x80	; 128
    a744:	38 e0       	ldi	r19, 0x08	; 8
    a746:	f9 01       	movw	r30, r18
    a748:	25 81       	ldd	r18, Z+5	; 0x05
    a74a:	2f 7d       	andi	r18, 0xDF	; 223
    a74c:	fc 01       	movw	r30, r24
    a74e:	25 83       	std	Z+5, r18	; 0x05
    a750:	09 c0       	rjmp	.+18     	; 0xa764 <_Z14linkbus_end_txv+0x3e>
    a752:	80 e2       	ldi	r24, 0x20	; 32
    a754:	98 e0       	ldi	r25, 0x08	; 8
    a756:	20 e2       	ldi	r18, 0x20	; 32
    a758:	38 e0       	ldi	r19, 0x08	; 8
    a75a:	f9 01       	movw	r30, r18
    a75c:	25 81       	ldd	r18, Z+5	; 0x05
    a75e:	2f 7d       	andi	r18, 0xDF	; 223
    a760:	fc 01       	movw	r30, r24
    a762:	25 83       	std	Z+5, r18	; 0x05
    a764:	10 92 06 48 	sts	0x4806, r1	; 0x804806 <_ZL17linkbus_tx_active>
    a768:	00 00       	nop
    a76a:	df 91       	pop	r29
    a76c:	cf 91       	pop	r28
    a76e:	08 95       	ret

0000a770 <_ZL21USART1_initializationm>:
    a770:	cf 93       	push	r28
    a772:	df 93       	push	r29
    a774:	00 d0       	rcall	.+0      	; 0xa776 <_ZL21USART1_initializationm+0x6>
    a776:	00 d0       	rcall	.+0      	; 0xa778 <_ZL21USART1_initializationm+0x8>
    a778:	cd b7       	in	r28, 0x3d	; 61
    a77a:	de b7       	in	r29, 0x3e	; 62
    a77c:	69 83       	std	Y+1, r22	; 0x01
    a77e:	7a 83       	std	Y+2, r23	; 0x02
    a780:	8b 83       	std	Y+3, r24	; 0x03
    a782:	9c 83       	std	Y+4, r25	; 0x04
    a784:	80 e0       	ldi	r24, 0x00	; 0
    a786:	0e 94 03 52 	call	0xa406	; 0xa406 <PC1_set_dir>
    a78a:	80 e0       	ldi	r24, 0x00	; 0
    a78c:	0e 94 f4 51 	call	0xa3e8	; 0xa3e8 <PC1_set_pull_mode>
    a790:	81 e0       	ldi	r24, 0x01	; 1
    a792:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <PC0_set_dir>
    a796:	81 e0       	ldi	r24, 0x01	; 1
    a798:	0e 94 e5 51 	call	0xa3ca	; 0xa3ca <PC0_set_level>
    a79c:	89 81       	ldd	r24, Y+1	; 0x01
    a79e:	9a 81       	ldd	r25, Y+2	; 0x02
    a7a0:	ab 81       	ldd	r26, Y+3	; 0x03
    a7a2:	bc 81       	ldd	r27, Y+4	; 0x04
    a7a4:	bc 01       	movw	r22, r24
    a7a6:	cd 01       	movw	r24, r26
    a7a8:	0e 94 1c 6d 	call	0xda38	; 0xda38 <USART1_init>
    a7ac:	00 00       	nop
    a7ae:	24 96       	adiw	r28, 0x04	; 4
    a7b0:	cd bf       	out	0x3d, r28	; 61
    a7b2:	de bf       	out	0x3e, r29	; 62
    a7b4:	df 91       	pop	r29
    a7b6:	cf 91       	pop	r28
    a7b8:	08 95       	ret

0000a7ba <_ZL21USART4_initializationm>:
    a7ba:	cf 93       	push	r28
    a7bc:	df 93       	push	r29
    a7be:	00 d0       	rcall	.+0      	; 0xa7c0 <_ZL21USART4_initializationm+0x6>
    a7c0:	00 d0       	rcall	.+0      	; 0xa7c2 <_ZL21USART4_initializationm+0x8>
    a7c2:	cd b7       	in	r28, 0x3d	; 61
    a7c4:	de b7       	in	r29, 0x3e	; 62
    a7c6:	69 83       	std	Y+1, r22	; 0x01
    a7c8:	7a 83       	std	Y+2, r23	; 0x02
    a7ca:	8b 83       	std	Y+3, r24	; 0x03
    a7cc:	9c 83       	std	Y+4, r25	; 0x04
    a7ce:	80 e0       	ldi	r24, 0x00	; 0
    a7d0:	0e 94 3f 52 	call	0xa47e	; 0xa47e <PE1_set_dir>
    a7d4:	80 e0       	ldi	r24, 0x00	; 0
    a7d6:	0e 94 30 52 	call	0xa460	; 0xa460 <PE1_set_pull_mode>
    a7da:	81 e0       	ldi	r24, 0x01	; 1
    a7dc:	0e 94 12 52 	call	0xa424	; 0xa424 <PE0_set_dir>
    a7e0:	81 e0       	ldi	r24, 0x01	; 1
    a7e2:	0e 94 21 52 	call	0xa442	; 0xa442 <PE0_set_level>
    a7e6:	89 81       	ldd	r24, Y+1	; 0x01
    a7e8:	9a 81       	ldd	r25, Y+2	; 0x02
    a7ea:	ab 81       	ldd	r26, Y+3	; 0x03
    a7ec:	bc 81       	ldd	r27, Y+4	; 0x04
    a7ee:	bc 01       	movw	r22, r24
    a7f0:	cd 01       	movw	r24, r26
    a7f2:	0e 94 a9 6d 	call	0xdb52	; 0xdb52 <USART4_init>
    a7f6:	00 00       	nop
    a7f8:	24 96       	adiw	r28, 0x04	; 4
    a7fa:	cd bf       	out	0x3d, r28	; 61
    a7fc:	de bf       	out	0x3e, r29	; 62
    a7fe:	df 91       	pop	r29
    a800:	cf 91       	pop	r28
    a802:	08 95       	ret

0000a804 <_Z12linkbus_initm14USART_Number_t>:
    a804:	cf 93       	push	r28
    a806:	df 93       	push	r29
    a808:	cd b7       	in	r28, 0x3d	; 61
    a80a:	de b7       	in	r29, 0x3e	; 62
    a80c:	27 97       	sbiw	r28, 0x07	; 7
    a80e:	cd bf       	out	0x3d, r28	; 61
    a810:	de bf       	out	0x3e, r29	; 62
    a812:	6b 83       	std	Y+3, r22	; 0x03
    a814:	7c 83       	std	Y+4, r23	; 0x04
    a816:	8d 83       	std	Y+5, r24	; 0x05
    a818:	9e 83       	std	Y+6, r25	; 0x06
    a81a:	4f 83       	std	Y+7, r20	; 0x07
    a81c:	44 e8       	ldi	r20, 0x84	; 132
    a81e:	50 e0       	ldi	r21, 0x00	; 0
    a820:	60 e0       	ldi	r22, 0x00	; 0
    a822:	70 e0       	ldi	r23, 0x00	; 0
    a824:	8f ec       	ldi	r24, 0xCF	; 207
    a826:	98 e4       	ldi	r25, 0x48	; 72
    a828:	0e 94 84 76 	call	0xed08	; 0xed08 <memset>
    a82c:	19 82       	std	Y+1, r1	; 0x01
    a82e:	1a 82       	std	Y+2, r1	; 0x02
    a830:	89 81       	ldd	r24, Y+1	; 0x01
    a832:	9a 81       	ldd	r25, Y+2	; 0x02
    a834:	04 97       	sbiw	r24, 0x04	; 4
    a836:	94 f4       	brge	.+36     	; 0xa85c <_Z12linkbus_initm14USART_Number_t+0x58>
    a838:	29 81       	ldd	r18, Y+1	; 0x01
    a83a:	3a 81       	ldd	r19, Y+2	; 0x02
    a83c:	42 e3       	ldi	r20, 0x32	; 50
    a83e:	42 9f       	mul	r20, r18
    a840:	c0 01       	movw	r24, r0
    a842:	43 9f       	mul	r20, r19
    a844:	90 0d       	add	r25, r0
    a846:	11 24       	eor	r1, r1
    a848:	89 5f       	subi	r24, 0xF9	; 249
    a84a:	97 4b       	sbci	r25, 0xB7	; 183
    a84c:	fc 01       	movw	r30, r24
    a84e:	10 82       	st	Z, r1
    a850:	89 81       	ldd	r24, Y+1	; 0x01
    a852:	9a 81       	ldd	r25, Y+2	; 0x02
    a854:	01 96       	adiw	r24, 0x01	; 1
    a856:	89 83       	std	Y+1, r24	; 0x01
    a858:	9a 83       	std	Y+2, r25	; 0x02
    a85a:	ea cf       	rjmp	.-44     	; 0xa830 <_Z12linkbus_initm14USART_Number_t+0x2c>
    a85c:	8f 81       	ldd	r24, Y+7	; 0x07
    a85e:	86 30       	cpi	r24, 0x06	; 6
    a860:	21 f4       	brne	.+8      	; 0xa86a <_Z12linkbus_initm14USART_Number_t+0x66>
    a862:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a866:	87 30       	cpi	r24, 0x07	; 7
    a868:	b9 f4       	brne	.+46     	; 0xa898 <_Z12linkbus_initm14USART_Number_t+0x94>
    a86a:	8f 81       	ldd	r24, Y+7	; 0x07
    a86c:	84 30       	cpi	r24, 0x04	; 4
    a86e:	49 f4       	brne	.+18     	; 0xa882 <_Z12linkbus_initm14USART_Number_t+0x7e>
    a870:	8b 81       	ldd	r24, Y+3	; 0x03
    a872:	9c 81       	ldd	r25, Y+4	; 0x04
    a874:	ad 81       	ldd	r26, Y+5	; 0x05
    a876:	be 81       	ldd	r27, Y+6	; 0x06
    a878:	bc 01       	movw	r22, r24
    a87a:	cd 01       	movw	r24, r26
    a87c:	0e 94 dd 53 	call	0xa7ba	; 0xa7ba <_ZL21USART4_initializationm>
    a880:	08 c0       	rjmp	.+16     	; 0xa892 <_Z12linkbus_initm14USART_Number_t+0x8e>
    a882:	8b 81       	ldd	r24, Y+3	; 0x03
    a884:	9c 81       	ldd	r25, Y+4	; 0x04
    a886:	ad 81       	ldd	r26, Y+5	; 0x05
    a888:	be 81       	ldd	r27, Y+6	; 0x06
    a88a:	bc 01       	movw	r22, r24
    a88c:	cd 01       	movw	r24, r26
    a88e:	0e 94 b8 53 	call	0xa770	; 0xa770 <_ZL21USART1_initializationm>
    a892:	8f 81       	ldd	r24, Y+7	; 0x07
    a894:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_linkbus_usart_number>
    a898:	10 92 21 40 	sts	0x4021, r1	; 0x804021 <_ZL14g_bus_disabled>
    a89c:	00 00       	nop
    a89e:	27 96       	adiw	r28, 0x07	; 7
    a8a0:	cd bf       	out	0x3d, r28	; 61
    a8a2:	de bf       	out	0x3e, r29	; 62
    a8a4:	df 91       	pop	r29
    a8a6:	cf 91       	pop	r28
    a8a8:	08 95       	ret

0000a8aa <_Z15linkbus_disablev>:
    a8aa:	cf 93       	push	r28
    a8ac:	df 93       	push	r29
    a8ae:	1f 92       	push	r1
    a8b0:	cd b7       	in	r28, 0x3d	; 61
    a8b2:	de b7       	in	r29, 0x3e	; 62
    a8b4:	81 e0       	ldi	r24, 0x01	; 1
    a8b6:	80 93 21 40 	sts	0x4021, r24	; 0x804021 <_ZL14g_bus_disabled>
    a8ba:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_linkbus_usart_number>
    a8be:	84 30       	cpi	r24, 0x04	; 4
    a8c0:	19 f4       	brne	.+6      	; 0xa8c8 <_Z15linkbus_disablev+0x1e>
    a8c2:	0e 94 13 6e 	call	0xdc26	; 0xdc26 <USART4_disable>
    a8c6:	02 c0       	rjmp	.+4      	; 0xa8cc <_Z15linkbus_disablev+0x22>
    a8c8:	0e 94 8d 6d 	call	0xdb1a	; 0xdb1a <USART1_disable>
    a8cc:	0e 94 93 53 	call	0xa726	; 0xa726 <_Z14linkbus_end_txv>
    a8d0:	44 e8       	ldi	r20, 0x84	; 132
    a8d2:	50 e0       	ldi	r21, 0x00	; 0
    a8d4:	60 e0       	ldi	r22, 0x00	; 0
    a8d6:	70 e0       	ldi	r23, 0x00	; 0
    a8d8:	8f ec       	ldi	r24, 0xCF	; 207
    a8da:	98 e4       	ldi	r25, 0x48	; 72
    a8dc:	0e 94 84 76 	call	0xed08	; 0xed08 <memset>
    a8e0:	19 82       	std	Y+1, r1	; 0x01
    a8e2:	89 81       	ldd	r24, Y+1	; 0x01
    a8e4:	84 30       	cpi	r24, 0x04	; 4
    a8e6:	88 f4       	brcc	.+34     	; 0xa90a <_Z15linkbus_disablev+0x60>
    a8e8:	89 81       	ldd	r24, Y+1	; 0x01
    a8ea:	28 2f       	mov	r18, r24
    a8ec:	30 e0       	ldi	r19, 0x00	; 0
    a8ee:	42 e3       	ldi	r20, 0x32	; 50
    a8f0:	42 9f       	mul	r20, r18
    a8f2:	c0 01       	movw	r24, r0
    a8f4:	43 9f       	mul	r20, r19
    a8f6:	90 0d       	add	r25, r0
    a8f8:	11 24       	eor	r1, r1
    a8fa:	89 5f       	subi	r24, 0xF9	; 249
    a8fc:	97 4b       	sbci	r25, 0xB7	; 183
    a8fe:	fc 01       	movw	r30, r24
    a900:	10 82       	st	Z, r1
    a902:	89 81       	ldd	r24, Y+1	; 0x01
    a904:	8f 5f       	subi	r24, 0xFF	; 255
    a906:	89 83       	std	Y+1, r24	; 0x01
    a908:	ec cf       	rjmp	.-40     	; 0xa8e2 <_Z15linkbus_disablev+0x38>
    a90a:	00 00       	nop
    a90c:	0f 90       	pop	r0
    a90e:	df 91       	pop	r29
    a910:	cf 91       	pop	r28
    a912:	08 95       	ret

0000a914 <_Z12lb_send_textPc>:
    a914:	cf 93       	push	r28
    a916:	df 93       	push	r29
    a918:	cd b7       	in	r28, 0x3d	; 61
    a91a:	de b7       	in	r29, 0x3e	; 62
    a91c:	27 97       	sbiw	r28, 0x07	; 7
    a91e:	cd bf       	out	0x3d, r28	; 61
    a920:	de bf       	out	0x3e, r29	; 62
    a922:	8e 83       	std	Y+6, r24	; 0x06
    a924:	9f 83       	std	Y+7, r25	; 0x07
    a926:	81 e0       	ldi	r24, 0x01	; 1
    a928:	89 83       	std	Y+1, r24	; 0x01
    a92a:	88 ec       	ldi	r24, 0xC8	; 200
    a92c:	90 e0       	ldi	r25, 0x00	; 0
    a92e:	8a 83       	std	Y+2, r24	; 0x02
    a930:	9b 83       	std	Y+3, r25	; 0x03
    a932:	80 91 21 40 	lds	r24, 0x4021	; 0x804021 <_ZL14g_bus_disabled>
    a936:	88 23       	and	r24, r24
    a938:	11 f0       	breq	.+4      	; 0xa93e <_Z12lb_send_textPc+0x2a>
    a93a:	89 81       	ldd	r24, Y+1	; 0x01
    a93c:	42 c0       	rjmp	.+132    	; 0xa9c2 <_Z12lb_send_textPc+0xae>
    a93e:	8e 81       	ldd	r24, Y+6	; 0x06
    a940:	9f 81       	ldd	r25, Y+7	; 0x07
    a942:	89 2b       	or	r24, r25
    a944:	e9 f1       	breq	.+122    	; 0xa9c0 <_Z12lb_send_textPc+0xac>
    a946:	0e 94 95 52 	call	0xa52a	; 0xa52a <_Z19nextEmptyLBTxBufferv>
    a94a:	8c 83       	std	Y+4, r24	; 0x04
    a94c:	9d 83       	std	Y+5, r25	; 0x05
    a94e:	8c 81       	ldd	r24, Y+4	; 0x04
    a950:	9d 81       	ldd	r25, Y+5	; 0x05
    a952:	89 2b       	or	r24, r25
    a954:	01 f5       	brne	.+64     	; 0xa996 <_Z12lb_send_textPc+0x82>
    a956:	8a 81       	ldd	r24, Y+2	; 0x02
    a958:	9b 81       	ldd	r25, Y+3	; 0x03
    a95a:	89 2b       	or	r24, r25
    a95c:	e1 f0       	breq	.+56     	; 0xa996 <_Z12lb_send_textPc+0x82>
    a95e:	0e 94 6c 53 	call	0xa6d8	; 0xa6d8 <_Z19linkbusTxInProgressv>
    a962:	88 23       	and	r24, r24
    a964:	31 f0       	breq	.+12     	; 0xa972 <_Z12lb_send_textPc+0x5e>
    a966:	8a 81       	ldd	r24, Y+2	; 0x02
    a968:	9b 81       	ldd	r25, Y+3	; 0x03
    a96a:	89 2b       	or	r24, r25
    a96c:	11 f0       	breq	.+4      	; 0xa972 <_Z12lb_send_textPc+0x5e>
    a96e:	81 e0       	ldi	r24, 0x01	; 1
    a970:	01 c0       	rjmp	.+2      	; 0xa974 <_Z12lb_send_textPc+0x60>
    a972:	80 e0       	ldi	r24, 0x00	; 0
    a974:	88 23       	and	r24, r24
    a976:	51 f0       	breq	.+20     	; 0xa98c <_Z12lb_send_textPc+0x78>
    a978:	8a 81       	ldd	r24, Y+2	; 0x02
    a97a:	9b 81       	ldd	r25, Y+3	; 0x03
    a97c:	89 2b       	or	r24, r25
    a97e:	79 f3       	breq	.-34     	; 0xa95e <_Z12lb_send_textPc+0x4a>
    a980:	8a 81       	ldd	r24, Y+2	; 0x02
    a982:	9b 81       	ldd	r25, Y+3	; 0x03
    a984:	01 97       	sbiw	r24, 0x01	; 1
    a986:	8a 83       	std	Y+2, r24	; 0x02
    a988:	9b 83       	std	Y+3, r25	; 0x03
    a98a:	e9 cf       	rjmp	.-46     	; 0xa95e <_Z12lb_send_textPc+0x4a>
    a98c:	0e 94 95 52 	call	0xa52a	; 0xa52a <_Z19nextEmptyLBTxBufferv>
    a990:	8c 83       	std	Y+4, r24	; 0x04
    a992:	9d 83       	std	Y+5, r25	; 0x05
    a994:	dc cf       	rjmp	.-72     	; 0xa94e <_Z12lb_send_textPc+0x3a>
    a996:	8c 81       	ldd	r24, Y+4	; 0x04
    a998:	9d 81       	ldd	r25, Y+5	; 0x05
    a99a:	89 2b       	or	r24, r25
    a99c:	89 f0       	breq	.+34     	; 0xa9c0 <_Z12lb_send_textPc+0xac>
    a99e:	8f 81       	ldd	r24, Y+7	; 0x07
    a9a0:	8f 93       	push	r24
    a9a2:	8e 81       	ldd	r24, Y+6	; 0x06
    a9a4:	8f 93       	push	r24
    a9a6:	8d 81       	ldd	r24, Y+5	; 0x05
    a9a8:	8f 93       	push	r24
    a9aa:	8c 81       	ldd	r24, Y+4	; 0x04
    a9ac:	8f 93       	push	r24
    a9ae:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    a9b2:	0f 90       	pop	r0
    a9b4:	0f 90       	pop	r0
    a9b6:	0f 90       	pop	r0
    a9b8:	0f 90       	pop	r0
    a9ba:	0e 94 75 53 	call	0xa6ea	; 0xa6ea <_ZL16linkbus_start_txv>
    a9be:	19 82       	std	Y+1, r1	; 0x01
    a9c0:	89 81       	ldd	r24, Y+1	; 0x01
    a9c2:	27 96       	adiw	r28, 0x07	; 7
    a9c4:	cd bf       	out	0x3d, r28	; 61
    a9c6:	de bf       	out	0x3e, r29	; 62
    a9c8:	df 91       	pop	r29
    a9ca:	cf 91       	pop	r28
    a9cc:	08 95       	ret

0000a9ce <_Z11lb_send_msg13LBMessageTypePKcPc>:
    a9ce:	cf 93       	push	r28
    a9d0:	df 93       	push	r29
    a9d2:	cd b7       	in	r28, 0x3d	; 61
    a9d4:	de b7       	in	r29, 0x3e	; 62
    a9d6:	27 97       	sbiw	r28, 0x07	; 7
    a9d8:	cd bf       	out	0x3d, r28	; 61
    a9da:	de bf       	out	0x3e, r29	; 62
    a9dc:	8b 83       	std	Y+3, r24	; 0x03
    a9de:	6c 83       	std	Y+4, r22	; 0x04
    a9e0:	7d 83       	std	Y+5, r23	; 0x05
    a9e2:	4e 83       	std	Y+6, r20	; 0x06
    a9e4:	5f 83       	std	Y+7, r21	; 0x07
    a9e6:	84 e2       	ldi	r24, 0x24	; 36
    a9e8:	89 83       	std	Y+1, r24	; 0x01
    a9ea:	8b e3       	ldi	r24, 0x3B	; 59
    a9ec:	8a 83       	std	Y+2, r24	; 0x02
    a9ee:	8b 81       	ldd	r24, Y+3	; 0x03
    a9f0:	83 30       	cpi	r24, 0x03	; 3
    a9f2:	19 f4       	brne	.+6      	; 0xa9fa <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    a9f4:	81 e2       	ldi	r24, 0x21	; 33
    a9f6:	89 83       	std	Y+1, r24	; 0x01
    a9f8:	05 c0       	rjmp	.+10     	; 0xaa04 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    a9fa:	8b 81       	ldd	r24, Y+3	; 0x03
    a9fc:	82 30       	cpi	r24, 0x02	; 2
    a9fe:	11 f4       	brne	.+4      	; 0xaa04 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    aa00:	8f e3       	ldi	r24, 0x3F	; 63
    aa02:	8a 83       	std	Y+2, r24	; 0x02
    aa04:	8a 81       	ldd	r24, Y+2	; 0x02
    aa06:	28 2f       	mov	r18, r24
    aa08:	30 e0       	ldi	r19, 0x00	; 0
    aa0a:	89 81       	ldd	r24, Y+1	; 0x01
    aa0c:	88 2f       	mov	r24, r24
    aa0e:	90 e0       	ldi	r25, 0x00	; 0
    aa10:	43 2f       	mov	r20, r19
    aa12:	4f 93       	push	r20
    aa14:	2f 93       	push	r18
    aa16:	2f 81       	ldd	r18, Y+7	; 0x07
    aa18:	2f 93       	push	r18
    aa1a:	2e 81       	ldd	r18, Y+6	; 0x06
    aa1c:	2f 93       	push	r18
    aa1e:	2d 81       	ldd	r18, Y+5	; 0x05
    aa20:	2f 93       	push	r18
    aa22:	2c 81       	ldd	r18, Y+4	; 0x04
    aa24:	2f 93       	push	r18
    aa26:	29 2f       	mov	r18, r25
    aa28:	2f 93       	push	r18
    aa2a:	8f 93       	push	r24
    aa2c:	84 ea       	ldi	r24, 0xA4	; 164
    aa2e:	94 e4       	ldi	r25, 0x44	; 68
    aa30:	89 2f       	mov	r24, r25
    aa32:	8f 93       	push	r24
    aa34:	84 ea       	ldi	r24, 0xA4	; 164
    aa36:	94 e4       	ldi	r25, 0x44	; 68
    aa38:	8f 93       	push	r24
    aa3a:	84 ed       	ldi	r24, 0xD4	; 212
    aa3c:	97 e4       	ldi	r25, 0x47	; 71
    aa3e:	89 2f       	mov	r24, r25
    aa40:	8f 93       	push	r24
    aa42:	84 ed       	ldi	r24, 0xD4	; 212
    aa44:	97 e4       	ldi	r25, 0x47	; 71
    aa46:	8f 93       	push	r24
    aa48:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    aa4c:	8d b7       	in	r24, 0x3d	; 61
    aa4e:	9e b7       	in	r25, 0x3e	; 62
    aa50:	0c 96       	adiw	r24, 0x0c	; 12
    aa52:	cd bf       	out	0x3d, r28	; 61
    aa54:	de bf       	out	0x3e, r29	; 62
    aa56:	84 ed       	ldi	r24, 0xD4	; 212
    aa58:	97 e4       	ldi	r25, 0x47	; 71
    aa5a:	0e 94 8a 54 	call	0xa914	; 0xa914 <_Z12lb_send_textPc>
    aa5e:	00 00       	nop
    aa60:	27 96       	adiw	r28, 0x07	; 7
    aa62:	cd bf       	out	0x3d, r28	; 61
    aa64:	de bf       	out	0x3e, r29	; 62
    aa66:	df 91       	pop	r29
    aa68:	cf 91       	pop	r28
    aa6a:	08 95       	ret

0000aa6c <_Z16lb_broadcast_numjPKc>:


void lb_broadcast_num(uint16_t data, const char* str)
{
    aa6c:	cf 93       	push	r28
    aa6e:	df 93       	push	r29
    aa70:	cd b7       	in	r28, 0x3d	; 61
    aa72:	de b7       	in	r29, 0x3e	; 62
    aa74:	2a 97       	sbiw	r28, 0x0a	; 10
    aa76:	cd bf       	out	0x3d, r28	; 61
    aa78:	de bf       	out	0x3e, r29	; 62
    aa7a:	8f 83       	std	Y+7, r24	; 0x07
    aa7c:	98 87       	std	Y+8, r25	; 0x08
    aa7e:	69 87       	std	Y+9, r22	; 0x09
    aa80:	7a 87       	std	Y+10, r23	; 0x0a
	char t[6] = "\0";
    aa82:	80 91 be 44 	lds	r24, 0x44BE	; 0x8044be <g_80m_power_table+0x488>
    aa86:	90 91 bf 44 	lds	r25, 0x44BF	; 0x8044bf <g_80m_power_table+0x489>
    aa8a:	89 83       	std	Y+1, r24	; 0x01
    aa8c:	9a 83       	std	Y+2, r25	; 0x02
    aa8e:	24 e0       	ldi	r18, 0x04	; 4
    aa90:	ce 01       	movw	r24, r28
    aa92:	03 96       	adiw	r24, 0x03	; 3
    aa94:	fc 01       	movw	r30, r24
    aa96:	32 2f       	mov	r19, r18
    aa98:	11 92       	st	Z+, r1
    aa9a:	3a 95       	dec	r19
    aa9c:	e9 f7       	brne	.-6      	; 0xaa98 <_Z16lb_broadcast_numjPKc+0x2c>

	sprintf(t, "%u", data);
    aa9e:	88 85       	ldd	r24, Y+8	; 0x08
    aaa0:	8f 93       	push	r24
    aaa2:	8f 81       	ldd	r24, Y+7	; 0x07
    aaa4:	8f 93       	push	r24
    aaa6:	84 eb       	ldi	r24, 0xB4	; 180
    aaa8:	94 e4       	ldi	r25, 0x44	; 68
    aaaa:	89 2f       	mov	r24, r25
    aaac:	8f 93       	push	r24
    aaae:	84 eb       	ldi	r24, 0xB4	; 180
    aab0:	94 e4       	ldi	r25, 0x44	; 68
    aab2:	8f 93       	push	r24
    aab4:	ce 01       	movw	r24, r28
    aab6:	01 96       	adiw	r24, 0x01	; 1
    aab8:	9f 93       	push	r25
    aaba:	8f 93       	push	r24
    aabc:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    aac0:	0f 90       	pop	r0
    aac2:	0f 90       	pop	r0
    aac4:	0f 90       	pop	r0
    aac6:	0f 90       	pop	r0
    aac8:	0f 90       	pop	r0
    aaca:	0f 90       	pop	r0
	g_tempMsgBuff[0] = '\0';
    aacc:	10 92 d4 47 	sts	0x47D4, r1	; 0x8047d4 <_ZL13g_tempMsgBuff>

	if(str)
    aad0:	89 85       	ldd	r24, Y+9	; 0x09
    aad2:	9a 85       	ldd	r25, Y+10	; 0x0a
    aad4:	89 2b       	or	r24, r25
    aad6:	e9 f0       	breq	.+58     	; 0xab12 <_Z16lb_broadcast_numjPKc+0xa6>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    aad8:	ce 01       	movw	r24, r28
    aada:	01 96       	adiw	r24, 0x01	; 1
    aadc:	9f 93       	push	r25
    aade:	8f 93       	push	r24
    aae0:	8a 85       	ldd	r24, Y+10	; 0x0a
    aae2:	8f 93       	push	r24
    aae4:	89 85       	ldd	r24, Y+9	; 0x09
    aae6:	8f 93       	push	r24
    aae8:	87 eb       	ldi	r24, 0xB7	; 183
    aaea:	94 e4       	ldi	r25, 0x44	; 68
    aaec:	89 2f       	mov	r24, r25
    aaee:	8f 93       	push	r24
    aaf0:	87 eb       	ldi	r24, 0xB7	; 183
    aaf2:	94 e4       	ldi	r25, 0x44	; 68
    aaf4:	8f 93       	push	r24
    aaf6:	84 ed       	ldi	r24, 0xD4	; 212
    aaf8:	97 e4       	ldi	r25, 0x47	; 71
    aafa:	89 2f       	mov	r24, r25
    aafc:	8f 93       	push	r24
    aafe:	84 ed       	ldi	r24, 0xD4	; 212
    ab00:	97 e4       	ldi	r25, 0x47	; 71
    ab02:	8f 93       	push	r24
    ab04:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    ab08:	8d b7       	in	r24, 0x3d	; 61
    ab0a:	9e b7       	in	r25, 0x3e	; 62
    ab0c:	08 96       	adiw	r24, 0x08	; 8
    ab0e:	cd bf       	out	0x3d, r28	; 61
    ab10:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    ab12:	80 91 d4 47 	lds	r24, 0x47D4	; 0x8047d4 <_ZL13g_tempMsgBuff>
    ab16:	88 23       	and	r24, r24
    ab18:	21 f0       	breq	.+8      	; 0xab22 <_Z16lb_broadcast_numjPKc+0xb6>
    ab1a:	84 ed       	ldi	r24, 0xD4	; 212
    ab1c:	97 e4       	ldi	r25, 0x47	; 71
    ab1e:	0e 94 8a 54 	call	0xa914	; 0xa914 <_Z12lb_send_textPc>
}
    ab22:	00 00       	nop
    ab24:	2a 96       	adiw	r28, 0x0a	; 10
    ab26:	cd bf       	out	0x3d, r28	; 61
    ab28:	de bf       	out	0x3e, r29	; 62
    ab2a:	df 91       	pop	r29
    ab2c:	cf 91       	pop	r28
    ab2e:	08 95       	ret

0000ab30 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    ab30:	cf 93       	push	r28
    ab32:	df 93       	push	r29
    ab34:	cd b7       	in	r28, 0x3d	; 61
    ab36:	de b7       	in	r29, 0x3e	; 62
    ab38:	28 97       	sbiw	r28, 0x08	; 8
    ab3a:	cd bf       	out	0x3d, r28	; 61
    ab3c:	de bf       	out	0x3e, r29	; 62
    ab3e:	8b 83       	std	Y+3, r24	; 0x03
    ab40:	9c 83       	std	Y+4, r25	; 0x04
    ab42:	6d 83       	std	Y+5, r22	; 0x05
    ab44:	7e 83       	std	Y+6, r23	; 0x06
    ab46:	4f 83       	std	Y+7, r20	; 0x07
    ab48:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = false;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    ab4a:	8b 81       	ldd	r24, Y+3	; 0x03
    ab4c:	9c 81       	ldd	r25, Y+4	; 0x04
    ab4e:	89 2b       	or	r24, r25
    ab50:	09 f4       	brne	.+2      	; 0xab54 <_Z9makeMorsePcPbS0_+0x24>
    ab52:	4a c0       	rjmp	.+148    	; 0xabe8 <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    ab54:	10 92 57 49 	sts	0x4957, r1	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    ab58:	8d 81       	ldd	r24, Y+5	; 0x05
    ab5a:	9e 81       	ldd	r25, Y+6	; 0x06
    ab5c:	89 2b       	or	r24, r25
    ab5e:	31 f0       	breq	.+12     	; 0xab6c <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    ab60:	8d 81       	ldd	r24, Y+5	; 0x05
    ab62:	9e 81       	ldd	r25, Y+6	; 0x06
    ab64:	fc 01       	movw	r30, r24
    ab66:	80 81       	ld	r24, Z
    ab68:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    ab6c:	8b 81       	ldd	r24, Y+3	; 0x03
    ab6e:	9c 81       	ldd	r25, Y+4	; 0x04
    ab70:	fc 01       	movw	r30, r24
    ab72:	80 81       	ld	r24, Z
    ab74:	88 23       	and	r24, r24
    ab76:	21 f1       	breq	.+72     	; 0xabc0 <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    ab78:	8b 81       	ldd	r24, Y+3	; 0x03
    ab7a:	9c 81       	ldd	r25, Y+4	; 0x04
    ab7c:	80 93 58 49 	sts	0x4958, r24	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    ab80:	90 93 59 49 	sts	0x4959, r25	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    ab84:	80 e2       	ldi	r24, 0x20	; 32
    ab86:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    ab8a:	80 91 58 49 	lds	r24, 0x4958	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    ab8e:	90 91 59 49 	lds	r25, 0x4959	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    ab92:	fc 01       	movw	r30, r24
    ab94:	80 81       	ld	r24, Z
    ab96:	0e 94 40 57 	call	0xae80	; 0xae80 <_Z12getMorseCharc>
    ab9a:	a8 2f       	mov	r26, r24
    ab9c:	cb 01       	movw	r24, r22
    ab9e:	80 93 5a 49 	sts	0x495A, r24	; 0x80495a <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    aba2:	90 93 5b 49 	sts	0x495B, r25	; 0x80495b <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    aba6:	a0 93 5c 49 	sts	0x495C, r26	; 0x80495c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    abaa:	10 92 5d 49 	sts	0x495D, r1	; 0x80495d <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    abae:	10 92 5e 49 	sts	0x495E, r1	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    abb2:	10 92 5f 49 	sts	0x495F, r1	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    abb6:	10 92 60 49 	sts	0x4960, r1	; 0x804960 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    abba:	10 92 61 49 	sts	0x4961, r1	; 0x804961 <_ZZ9makeMorsePcPbS0_E15completedString>
    abbe:	10 c0       	rjmp	.+32     	; 0xabe0 <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    abc0:	10 92 58 49 	sts	0x4958, r1	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    abc4:	10 92 59 49 	sts	0x4959, r1	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    abc8:	81 e0       	ldi	r24, 0x01	; 1
    abca:	80 93 61 49 	sts	0x4961, r24	; 0x804961 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    abce:	8f 81       	ldd	r24, Y+7	; 0x07
    abd0:	98 85       	ldd	r25, Y+8	; 0x08
    abd2:	89 2b       	or	r24, r25
    abd4:	29 f0       	breq	.+10     	; 0xabe0 <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    abd6:	8f 81       	ldd	r24, Y+7	; 0x07
    abd8:	98 85       	ldd	r25, Y+8	; 0x08
    abda:	21 e0       	ldi	r18, 0x01	; 1
    abdc:	fc 01       	movw	r30, r24
    abde:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    abe0:	10 92 62 49 	sts	0x4962, r1	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    abe4:	80 e0       	ldi	r24, 0x00	; 0
    abe6:	f6 c0       	rjmp	.+492    	; 0xadd4 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    abe8:	80 91 58 49 	lds	r24, 0x4958	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    abec:	90 91 59 49 	lds	r25, 0x4959	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    abf0:	89 2b       	or	r24, r25
    abf2:	09 f4       	brne	.+2      	; 0xabf6 <_Z9makeMorsePcPbS0_+0xc6>
    abf4:	dd c0       	rjmp	.+442    	; 0xadb0 <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    abf6:	8d 81       	ldd	r24, Y+5	; 0x05
    abf8:	9e 81       	ldd	r25, Y+6	; 0x06
    abfa:	89 2b       	or	r24, r25
    abfc:	31 f0       	breq	.+12     	; 0xac0a <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    abfe:	20 91 23 40 	lds	r18, 0x4023	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
    ac02:	8d 81       	ldd	r24, Y+5	; 0x05
    ac04:	9e 81       	ldd	r25, Y+6	; 0x06
    ac06:	fc 01       	movw	r30, r24
    ac08:	20 83       	st	Z, r18
		}

		if(completedString)
    ac0a:	80 91 61 49 	lds	r24, 0x4961	; 0x804961 <_ZZ9makeMorsePcPbS0_E15completedString>
    ac0e:	88 23       	and	r24, r24
    ac10:	69 f0       	breq	.+26     	; 0xac2c <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    ac12:	8f 81       	ldd	r24, Y+7	; 0x07
    ac14:	98 85       	ldd	r25, Y+8	; 0x08
    ac16:	89 2b       	or	r24, r25
    ac18:	39 f0       	breq	.+14     	; 0xac28 <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    ac1a:	8f 81       	ldd	r24, Y+7	; 0x07
    ac1c:	98 85       	ldd	r25, Y+8	; 0x08
    ac1e:	21 e0       	ldi	r18, 0x01	; 1
    ac20:	fc 01       	movw	r30, r24
    ac22:	20 83       	st	Z, r18
				holdKeyDown = false;
    ac24:	10 92 57 49 	sts	0x4957, r1	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    ac28:	80 e0       	ldi	r24, 0x00	; 0
    ac2a:	d4 c0       	rjmp	.+424    	; 0xadd4 <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    ac2c:	80 91 5f 49 	lds	r24, 0x495F	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ac30:	88 23       	and	r24, r24
    ac32:	31 f0       	breq	.+12     	; 0xac40 <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    ac34:	80 91 5f 49 	lds	r24, 0x495F	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ac38:	81 50       	subi	r24, 0x01	; 1
    ac3a:	80 93 5f 49 	sts	0x495F, r24	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ac3e:	ae c0       	rjmp	.+348    	; 0xad9c <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    ac40:	80 91 62 49 	lds	r24, 0x4962	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    ac44:	88 23       	and	r24, r24
    ac46:	a1 f0       	breq	.+40     	; 0xac70 <_Z9makeMorsePcPbS0_+0x140>
    ac48:	90 91 57 49 	lds	r25, 0x4957	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    ac4c:	81 e0       	ldi	r24, 0x01	; 1
    ac4e:	89 27       	eor	r24, r25
    ac50:	88 23       	and	r24, r24
    ac52:	71 f0       	breq	.+28     	; 0xac70 <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    ac54:	10 92 62 49 	sts	0x4962, r1	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    ac58:	80 91 60 49 	lds	r24, 0x4960	; 0x804960 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    ac5c:	88 23       	and	r24, r24
    ac5e:	09 f4       	brne	.+2      	; 0xac62 <_Z9makeMorsePcPbS0_+0x132>
    ac60:	9d c0       	rjmp	.+314    	; 0xad9c <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    ac62:	80 91 60 49 	lds	r24, 0x4960	; 0x804960 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    ac66:	80 93 5f 49 	sts	0x495F, r24	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    ac6a:	10 92 60 49 	sts	0x4960, r1	; 0x804960 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    ac6e:	96 c0       	rjmp	.+300    	; 0xad9c <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    ac70:	90 91 5b 49 	lds	r25, 0x495B	; 0x80495b <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ac74:	80 91 5e 49 	lds	r24, 0x495E	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ac78:	89 17       	cp	r24, r25
    ac7a:	08 f4       	brcc	.+2      	; 0xac7e <_Z9makeMorsePcPbS0_+0x14e>
    ac7c:	4a c0       	rjmp	.+148    	; 0xad12 <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    ac7e:	20 91 58 49 	lds	r18, 0x4958	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    ac82:	30 91 59 49 	lds	r19, 0x4959	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    ac86:	80 91 5d 49 	lds	r24, 0x495D	; 0x80495d <_ZZ9makeMorsePcPbS0_E9charIndex>
    ac8a:	8f 5f       	subi	r24, 0xFF	; 255
    ac8c:	80 93 5d 49 	sts	0x495D, r24	; 0x80495d <_ZZ9makeMorsePcPbS0_E9charIndex>
    ac90:	80 91 5d 49 	lds	r24, 0x495D	; 0x80495d <_ZZ9makeMorsePcPbS0_E9charIndex>
    ac94:	88 2f       	mov	r24, r24
    ac96:	90 e0       	ldi	r25, 0x00	; 0
    ac98:	82 0f       	add	r24, r18
    ac9a:	93 1f       	adc	r25, r19
    ac9c:	fc 01       	movw	r30, r24
    ac9e:	80 81       	ld	r24, Z
    aca0:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    aca4:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    aca8:	88 23       	and	r24, r24
    acaa:	29 f5       	brne	.+74     	; 0xacf6 <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    acac:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ9makeMorsePcPbS0_E6repeat>
    acb0:	88 23       	and	r24, r24
    acb2:	59 f0       	breq	.+22     	; 0xacca <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    acb4:	80 91 58 49 	lds	r24, 0x4958	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    acb8:	90 91 59 49 	lds	r25, 0x4959	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    acbc:	fc 01       	movw	r30, r24
    acbe:	80 81       	ld	r24, Z
    acc0:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    acc4:	10 92 5d 49 	sts	0x495D, r1	; 0x80495d <_ZZ9makeMorsePcPbS0_E9charIndex>
    acc8:	16 c0       	rjmp	.+44     	; 0xacf6 <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    acca:	10 92 58 49 	sts	0x4958, r1	; 0x804958 <_ZZ9makeMorsePcPbS0_E3str>
    acce:	10 92 59 49 	sts	0x4959, r1	; 0x804959 <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    acd2:	10 92 62 49 	sts	0x4962, r1	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    acd6:	81 e0       	ldi	r24, 0x01	; 1
    acd8:	80 93 61 49 	sts	0x4961, r24	; 0x804961 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    acdc:	8f 81       	ldd	r24, Y+7	; 0x07
    acde:	98 85       	ldd	r25, Y+8	; 0x08
    ace0:	89 2b       	or	r24, r25
    ace2:	29 f0       	breq	.+10     	; 0xacee <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    ace4:	8f 81       	ldd	r24, Y+7	; 0x07
    ace6:	98 85       	ldd	r25, Y+8	; 0x08
    ace8:	21 e0       	ldi	r18, 0x01	; 1
    acea:	fc 01       	movw	r30, r24
    acec:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    acee:	10 92 57 49 	sts	0x4957, r1	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    acf2:	80 e0       	ldi	r24, 0x00	; 0
    acf4:	6f c0       	rjmp	.+222    	; 0xadd4 <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    acf6:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    acfa:	0e 94 40 57 	call	0xae80	; 0xae80 <_Z12getMorseCharc>
    acfe:	a8 2f       	mov	r26, r24
    ad00:	cb 01       	movw	r24, r22
    ad02:	80 93 5a 49 	sts	0x495A, r24	; 0x80495a <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    ad06:	90 93 5b 49 	sts	0x495B, r25	; 0x80495b <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ad0a:	a0 93 5c 49 	sts	0x495C, r26	; 0x80495c <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    ad0e:	10 92 5e 49 	sts	0x495E, r1	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    ad12:	80 91 5a 49 	lds	r24, 0x495A	; 0x80495a <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    ad16:	8d 3f       	cpi	r24, 0xFD	; 253
    ad18:	70 f5       	brcc	.+92     	; 0xad76 <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    ad1a:	80 91 5a 49 	lds	r24, 0x495A	; 0x80495a <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    ad1e:	88 2f       	mov	r24, r24
    ad20:	90 e0       	ldi	r25, 0x00	; 0
    ad22:	20 91 5e 49 	lds	r18, 0x495E	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ad26:	31 e0       	ldi	r19, 0x01	; 1
    ad28:	32 0f       	add	r19, r18
    ad2a:	30 93 5e 49 	sts	0x495E, r19	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ad2e:	22 2f       	mov	r18, r18
    ad30:	30 e0       	ldi	r19, 0x00	; 0
    ad32:	02 c0       	rjmp	.+4      	; 0xad38 <_Z9makeMorsePcPbS0_+0x208>
    ad34:	95 95       	asr	r25
    ad36:	87 95       	ror	r24
    ad38:	2a 95       	dec	r18
    ad3a:	e2 f7       	brpl	.-8      	; 0xad34 <_Z9makeMorsePcPbS0_+0x204>
    ad3c:	81 70       	andi	r24, 0x01	; 1
    ad3e:	99 27       	eor	r25, r25
    ad40:	21 e0       	ldi	r18, 0x01	; 1
    ad42:	89 2b       	or	r24, r25
    ad44:	09 f4       	brne	.+2      	; 0xad48 <_Z9makeMorsePcPbS0_+0x218>
    ad46:	20 e0       	ldi	r18, 0x00	; 0
    ad48:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    ad4a:	89 81       	ldd	r24, Y+1	; 0x01
    ad4c:	88 23       	and	r24, r24
    ad4e:	21 f0       	breq	.+8      	; 0xad58 <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    ad50:	82 e0       	ldi	r24, 0x02	; 2
    ad52:	80 93 5f 49 	sts	0x495F, r24	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ad56:	02 c0       	rjmp	.+4      	; 0xad5c <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    ad58:	10 92 5f 49 	sts	0x495F, r1	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    ad5c:	81 e0       	ldi	r24, 0x01	; 1
    ad5e:	80 93 62 49 	sts	0x4962, r24	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    ad62:	90 91 5b 49 	lds	r25, 0x495B	; 0x80495b <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ad66:	80 91 5e 49 	lds	r24, 0x495E	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ad6a:	89 17       	cp	r24, r25
    ad6c:	b8 f0       	brcs	.+46     	; 0xad9c <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    ad6e:	82 e0       	ldi	r24, 0x02	; 2
    ad70:	80 93 60 49 	sts	0x4960, r24	; 0x804960 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    ad74:	13 c0       	rjmp	.+38     	; 0xad9c <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    ad76:	80 91 5b 49 	lds	r24, 0x495B	; 0x80495b <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ad7a:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    ad7c:	8f ef       	ldi	r24, 0xFF	; 255
    ad7e:	80 93 5e 49 	sts	0x495E, r24	; 0x80495e <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    ad82:	10 92 62 49 	sts	0x4962, r1	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    ad86:	8a 81       	ldd	r24, Y+2	; 0x02
    ad88:	84 30       	cpi	r24, 0x04	; 4
    ad8a:	30 f0       	brcs	.+12     	; 0xad98 <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    ad8c:	80 91 5b 49 	lds	r24, 0x495B	; 0x80495b <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ad90:	84 50       	subi	r24, 0x04	; 4
    ad92:	80 93 5f 49 	sts	0x495F, r24	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ad96:	02 c0       	rjmp	.+4      	; 0xad9c <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    ad98:	10 92 5f 49 	sts	0x495F, r1	; 0x80495f <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    ad9c:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ9makeMorsePcPbS0_E1c>
    ada0:	8c 33       	cpi	r24, 0x3C	; 60
    ada2:	21 f4       	brne	.+8      	; 0xadac <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    ada4:	81 e0       	ldi	r24, 0x01	; 1
    ada6:	80 93 57 49 	sts	0x4957, r24	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    adaa:	02 c0       	rjmp	.+4      	; 0xadb0 <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    adac:	10 92 57 49 	sts	0x4957, r1	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    adb0:	8f 81       	ldd	r24, Y+7	; 0x07
    adb2:	98 85       	ldd	r25, Y+8	; 0x08
    adb4:	89 2b       	or	r24, r25
    adb6:	31 f0       	breq	.+12     	; 0xadc4 <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    adb8:	20 91 61 49 	lds	r18, 0x4961	; 0x804961 <_ZZ9makeMorsePcPbS0_E15completedString>
    adbc:	8f 81       	ldd	r24, Y+7	; 0x07
    adbe:	98 85       	ldd	r25, Y+8	; 0x08
    adc0:	fc 01       	movw	r30, r24
    adc2:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    adc4:	80 91 57 49 	lds	r24, 0x4957	; 0x804957 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    adc8:	88 23       	and	r24, r24
    adca:	11 f0       	breq	.+4      	; 0xadd0 <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    adcc:	81 e0       	ldi	r24, 0x01	; 1
    adce:	02 c0       	rjmp	.+4      	; 0xadd4 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    add0:	80 91 62 49 	lds	r24, 0x4962	; 0x804962 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    add4:	28 96       	adiw	r28, 0x08	; 8
    add6:	cd bf       	out	0x3d, r28	; 61
    add8:	de bf       	out	0x3e, r29	; 62
    adda:	df 91       	pop	r29
    addc:	cf 91       	pop	r28
    adde:	08 95       	ret

0000ade0 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    ade0:	cf 93       	push	r28
    ade2:	df 93       	push	r29
    ade4:	cd b7       	in	r28, 0x3d	; 61
    ade6:	de b7       	in	r29, 0x3e	; 62
    ade8:	2b 97       	sbiw	r28, 0x0b	; 11
    adea:	cd bf       	out	0x3d, r28	; 61
    adec:	de bf       	out	0x3e, r29	; 62
    adee:	88 87       	std	Y+8, r24	; 0x08
    adf0:	99 87       	std	Y+9, r25	; 0x09
    adf2:	6a 87       	std	Y+10, r22	; 0x0a
    adf4:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    adf6:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    adf8:	1a 82       	std	Y+2, r1	; 0x02
    adfa:	1b 82       	std	Y+3, r1	; 0x03
    adfc:	8a 81       	ldd	r24, Y+2	; 0x02
    adfe:	9b 81       	ldd	r25, Y+3	; 0x03
    ae00:	44 97       	sbiw	r24, 0x14	; 20
    ae02:	2c f5       	brge	.+74     	; 0xae4e <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    ae04:	8a 81       	ldd	r24, Y+2	; 0x02
    ae06:	9b 81       	ldd	r25, Y+3	; 0x03
    ae08:	28 85       	ldd	r18, Y+8	; 0x08
    ae0a:	39 85       	ldd	r19, Y+9	; 0x09
    ae0c:	82 0f       	add	r24, r18
    ae0e:	93 1f       	adc	r25, r19
    ae10:	fc 01       	movw	r30, r24
    ae12:	80 81       	ld	r24, Z
    ae14:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    ae16:	8c 81       	ldd	r24, Y+4	; 0x04
    ae18:	88 23       	and	r24, r24
    ae1a:	c1 f0       	breq	.+48     	; 0xae4c <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    ae1c:	8c 81       	ldd	r24, Y+4	; 0x04
    ae1e:	0e 94 40 57 	call	0xae80	; 0xae80 <_Z12getMorseCharc>
    ae22:	a8 2f       	mov	r26, r24
    ae24:	cb 01       	movw	r24, r22
    ae26:	8d 83       	std	Y+5, r24	; 0x05
    ae28:	9e 83       	std	Y+6, r25	; 0x06
    ae2a:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    ae2c:	8d 81       	ldd	r24, Y+5	; 0x05
    ae2e:	8d 3f       	cpi	r24, 0xFD	; 253
    ae30:	18 f4       	brcc	.+6      	; 0xae38 <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    ae32:	89 81       	ldd	r24, Y+1	; 0x01
    ae34:	8d 5f       	subi	r24, 0xFD	; 253
    ae36:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    ae38:	8f 81       	ldd	r24, Y+7	; 0x07
    ae3a:	99 81       	ldd	r25, Y+1	; 0x01
    ae3c:	89 0f       	add	r24, r25
    ae3e:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    ae40:	8a 81       	ldd	r24, Y+2	; 0x02
    ae42:	9b 81       	ldd	r25, Y+3	; 0x03
    ae44:	01 96       	adiw	r24, 0x01	; 1
    ae46:	8a 83       	std	Y+2, r24	; 0x02
    ae48:	9b 83       	std	Y+3, r25	; 0x03
    ae4a:	d8 cf       	rjmp	.-80     	; 0xadfc <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    ae4c:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    ae4e:	89 81       	ldd	r24, Y+1	; 0x01
    ae50:	28 2f       	mov	r18, r24
    ae52:	30 e0       	ldi	r19, 0x00	; 0
    ae54:	80 eb       	ldi	r24, 0xB0	; 176
    ae56:	94 e0       	ldi	r25, 0x04	; 4
    ae58:	4a 85       	ldd	r20, Y+10	; 0x0a
    ae5a:	5b 85       	ldd	r21, Y+11	; 0x0b
    ae5c:	ba 01       	movw	r22, r20
    ae5e:	0e 94 86 74 	call	0xe90c	; 0xe90c <__udivmodhi4>
    ae62:	cb 01       	movw	r24, r22
    ae64:	ac 01       	movw	r20, r24
    ae66:	24 9f       	mul	r18, r20
    ae68:	c0 01       	movw	r24, r0
    ae6a:	25 9f       	mul	r18, r21
    ae6c:	90 0d       	add	r25, r0
    ae6e:	34 9f       	mul	r19, r20
    ae70:	90 0d       	add	r25, r0
    ae72:	11 24       	eor	r1, r1
}
    ae74:	2b 96       	adiw	r28, 0x0b	; 11
    ae76:	cd bf       	out	0x3d, r28	; 61
    ae78:	de bf       	out	0x3e, r29	; 62
    ae7a:	df 91       	pop	r29
    ae7c:	cf 91       	pop	r28
    ae7e:	08 95       	ret

0000ae80 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    ae80:	cf 93       	push	r28
    ae82:	df 93       	push	r29
    ae84:	00 d0       	rcall	.+0      	; 0xae86 <_Z12getMorseCharc+0x6>
    ae86:	00 d0       	rcall	.+0      	; 0xae88 <_Z12getMorseCharc+0x8>
    ae88:	cd b7       	in	r28, 0x3d	; 61
    ae8a:	de b7       	in	r29, 0x3e	; 62
    ae8c:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    ae8e:	8c 81       	ldd	r24, Y+4	; 0x04
    ae90:	88 2f       	mov	r24, r24
    ae92:	90 e0       	ldi	r25, 0x00	; 0
    ae94:	09 2e       	mov	r0, r25
    ae96:	00 0c       	add	r0, r0
    ae98:	aa 0b       	sbc	r26, r26
    ae9a:	bb 0b       	sbc	r27, r27
    ae9c:	40 e2       	ldi	r20, 0x20	; 32
    ae9e:	50 e0       	ldi	r21, 0x00	; 0
    aea0:	2c e5       	ldi	r18, 0x5C	; 92
    aea2:	30 e0       	ldi	r19, 0x00	; 0
    aea4:	84 1b       	sub	r24, r20
    aea6:	95 0b       	sbc	r25, r21
    aea8:	28 17       	cp	r18, r24
    aeaa:	39 07       	cpc	r19, r25
    aeac:	08 f4       	brcc	.+2      	; 0xaeb0 <_Z12getMorseCharc+0x30>
    aeae:	8f c1       	rjmp	.+798    	; 0xb1ce <_Z12getMorseCharc+0x34e>
    aeb0:	8a 53       	subi	r24, 0x3A	; 58
    aeb2:	9f 4f       	sbci	r25, 0xFF	; 255
    aeb4:	fc 01       	movw	r30, r24
    aeb6:	0c 94 ef 74 	jmp	0xe9de	; 0xe9de <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    aeba:	82 e0       	ldi	r24, 0x02	; 2
    aebc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    aebe:	82 e0       	ldi	r24, 0x02	; 2
    aec0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    aec2:	85 e0       	ldi	r24, 0x05	; 5
    aec4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aec6:	87 c1       	rjmp	.+782    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    aec8:	81 e0       	ldi	r24, 0x01	; 1
    aeca:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aecc:	84 e0       	ldi	r24, 0x04	; 4
    aece:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    aed0:	89 e0       	ldi	r24, 0x09	; 9
    aed2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aed4:	80 c1       	rjmp	.+768    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    aed6:	85 e0       	ldi	r24, 0x05	; 5
    aed8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aeda:	84 e0       	ldi	r24, 0x04	; 4
    aedc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    aede:	8b e0       	ldi	r24, 0x0B	; 11
    aee0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aee2:	79 c1       	rjmp	.+754    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    aee4:	81 e0       	ldi	r24, 0x01	; 1
    aee6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    aee8:	83 e0       	ldi	r24, 0x03	; 3
    aeea:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    aeec:	87 e0       	ldi	r24, 0x07	; 7
    aeee:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aef0:	72 c1       	rjmp	.+740    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    aef2:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    aef4:	81 e0       	ldi	r24, 0x01	; 1
    aef6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    aef8:	81 e0       	ldi	r24, 0x01	; 1
    aefa:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aefc:	6c c1       	rjmp	.+728    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    aefe:	84 e0       	ldi	r24, 0x04	; 4
    af00:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    af02:	84 e0       	ldi	r24, 0x04	; 4
    af04:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    af06:	89 e0       	ldi	r24, 0x09	; 9
    af08:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af0a:	65 c1       	rjmp	.+714    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    af0c:	83 e0       	ldi	r24, 0x03	; 3
    af0e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    af10:	83 e0       	ldi	r24, 0x03	; 3
    af12:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    af14:	89 e0       	ldi	r24, 0x09	; 9
    af16:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af18:	5e c1       	rjmp	.+700    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    af1a:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    af1c:	84 e0       	ldi	r24, 0x04	; 4
    af1e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    af20:	87 e0       	ldi	r24, 0x07	; 7
    af22:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af24:	58 c1       	rjmp	.+688    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    af26:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    af28:	82 e0       	ldi	r24, 0x02	; 2
    af2a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    af2c:	83 e0       	ldi	r24, 0x03	; 3
    af2e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af30:	52 c1       	rjmp	.+676    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    af32:	8e e0       	ldi	r24, 0x0E	; 14
    af34:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    af36:	84 e0       	ldi	r24, 0x04	; 4
    af38:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    af3a:	8d e0       	ldi	r24, 0x0D	; 13
    af3c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af3e:	4b c1       	rjmp	.+662    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    af40:	85 e0       	ldi	r24, 0x05	; 5
    af42:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    af44:	83 e0       	ldi	r24, 0x03	; 3
    af46:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    af48:	89 e0       	ldi	r24, 0x09	; 9
    af4a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af4c:	44 c1       	rjmp	.+648    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    af4e:	82 e0       	ldi	r24, 0x02	; 2
    af50:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    af52:	84 e0       	ldi	r24, 0x04	; 4
    af54:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    af56:	89 e0       	ldi	r24, 0x09	; 9
    af58:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af5a:	3d c1       	rjmp	.+634    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    af5c:	83 e0       	ldi	r24, 0x03	; 3
    af5e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    af60:	82 e0       	ldi	r24, 0x02	; 2
    af62:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    af64:	87 e0       	ldi	r24, 0x07	; 7
    af66:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af68:	36 c1       	rjmp	.+620    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    af6a:	81 e0       	ldi	r24, 0x01	; 1
    af6c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    af6e:	82 e0       	ldi	r24, 0x02	; 2
    af70:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    af72:	85 e0       	ldi	r24, 0x05	; 5
    af74:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af76:	2f c1       	rjmp	.+606    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    af78:	87 e0       	ldi	r24, 0x07	; 7
    af7a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    af7c:	83 e0       	ldi	r24, 0x03	; 3
    af7e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    af80:	8b e0       	ldi	r24, 0x0B	; 11
    af82:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af84:	28 c1       	rjmp	.+592    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    af86:	86 e0       	ldi	r24, 0x06	; 6
    af88:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    af8a:	84 e0       	ldi	r24, 0x04	; 4
    af8c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    af8e:	8b e0       	ldi	r24, 0x0B	; 11
    af90:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    af92:	21 c1       	rjmp	.+578    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    af94:	8b e0       	ldi	r24, 0x0B	; 11
    af96:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    af98:	84 e0       	ldi	r24, 0x04	; 4
    af9a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    af9c:	8d e0       	ldi	r24, 0x0D	; 13
    af9e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    afa0:	1a c1       	rjmp	.+564    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    afa2:	82 e0       	ldi	r24, 0x02	; 2
    afa4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    afa6:	83 e0       	ldi	r24, 0x03	; 3
    afa8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    afaa:	87 e0       	ldi	r24, 0x07	; 7
    afac:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    afae:	13 c1       	rjmp	.+550    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    afb0:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    afb2:	83 e0       	ldi	r24, 0x03	; 3
    afb4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    afb6:	85 e0       	ldi	r24, 0x05	; 5
    afb8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    afba:	0d c1       	rjmp	.+538    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    afbc:	81 e0       	ldi	r24, 0x01	; 1
    afbe:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    afc0:	81 e0       	ldi	r24, 0x01	; 1
    afc2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    afc4:	83 e0       	ldi	r24, 0x03	; 3
    afc6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    afc8:	06 c1       	rjmp	.+524    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    afca:	84 e0       	ldi	r24, 0x04	; 4
    afcc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    afce:	83 e0       	ldi	r24, 0x03	; 3
    afd0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    afd2:	87 e0       	ldi	r24, 0x07	; 7
    afd4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    afd6:	ff c0       	rjmp	.+510    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    afd8:	88 e0       	ldi	r24, 0x08	; 8
    afda:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    afdc:	84 e0       	ldi	r24, 0x04	; 4
    afde:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    afe0:	89 e0       	ldi	r24, 0x09	; 9
    afe2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    afe4:	f8 c0       	rjmp	.+496    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    afe6:	86 e0       	ldi	r24, 0x06	; 6
    afe8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    afea:	83 e0       	ldi	r24, 0x03	; 3
    afec:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    afee:	89 e0       	ldi	r24, 0x09	; 9
    aff0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    aff2:	f1 c0       	rjmp	.+482    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    aff4:	89 e0       	ldi	r24, 0x09	; 9
    aff6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    aff8:	84 e0       	ldi	r24, 0x04	; 4
    affa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    affc:	8b e0       	ldi	r24, 0x0B	; 11
    affe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b000:	ea c0       	rjmp	.+468    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    b002:	8d e0       	ldi	r24, 0x0D	; 13
    b004:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b006:	84 e0       	ldi	r24, 0x04	; 4
    b008:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b00a:	8d e0       	ldi	r24, 0x0D	; 13
    b00c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b00e:	e3 c0       	rjmp	.+454    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b010:	83 e0       	ldi	r24, 0x03	; 3
    b012:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b014:	84 e0       	ldi	r24, 0x04	; 4
    b016:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b018:	8b e0       	ldi	r24, 0x0B	; 11
    b01a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b01c:	dc c0       	rjmp	.+440    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    b01e:	8f e1       	ldi	r24, 0x1F	; 31
    b020:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b022:	85 e0       	ldi	r24, 0x05	; 5
    b024:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b026:	83 e1       	ldi	r24, 0x13	; 19
    b028:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b02a:	d5 c0       	rjmp	.+426    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    b02c:	8e e1       	ldi	r24, 0x1E	; 30
    b02e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b030:	85 e0       	ldi	r24, 0x05	; 5
    b032:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b034:	81 e1       	ldi	r24, 0x11	; 17
    b036:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b038:	ce c0       	rjmp	.+412    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    b03a:	8c e1       	ldi	r24, 0x1C	; 28
    b03c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b03e:	85 e0       	ldi	r24, 0x05	; 5
    b040:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b042:	8f e0       	ldi	r24, 0x0F	; 15
    b044:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b046:	c7 c0       	rjmp	.+398    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    b048:	88 e1       	ldi	r24, 0x18	; 24
    b04a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b04c:	85 e0       	ldi	r24, 0x05	; 5
    b04e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b050:	8d e0       	ldi	r24, 0x0D	; 13
    b052:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b054:	c0 c0       	rjmp	.+384    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    b056:	80 e1       	ldi	r24, 0x10	; 16
    b058:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b05a:	85 e0       	ldi	r24, 0x05	; 5
    b05c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b05e:	8b e0       	ldi	r24, 0x0B	; 11
    b060:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b062:	b9 c0       	rjmp	.+370    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b064:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    b066:	85 e0       	ldi	r24, 0x05	; 5
    b068:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b06a:	89 e0       	ldi	r24, 0x09	; 9
    b06c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b06e:	b3 c0       	rjmp	.+358    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b070:	81 e0       	ldi	r24, 0x01	; 1
    b072:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b074:	85 e0       	ldi	r24, 0x05	; 5
    b076:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b078:	8b e0       	ldi	r24, 0x0B	; 11
    b07a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b07c:	ac c0       	rjmp	.+344    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b07e:	83 e0       	ldi	r24, 0x03	; 3
    b080:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b082:	85 e0       	ldi	r24, 0x05	; 5
    b084:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b086:	8d e0       	ldi	r24, 0x0D	; 13
    b088:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b08a:	a5 c0       	rjmp	.+330    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b08c:	87 e0       	ldi	r24, 0x07	; 7
    b08e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b090:	85 e0       	ldi	r24, 0x05	; 5
    b092:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b094:	8f e0       	ldi	r24, 0x0F	; 15
    b096:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b098:	9e c0       	rjmp	.+316    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    b09a:	8f e0       	ldi	r24, 0x0F	; 15
    b09c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b09e:	85 e0       	ldi	r24, 0x05	; 5
    b0a0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b0a2:	81 e1       	ldi	r24, 0x11	; 17
    b0a4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0a6:	97 c0       	rjmp	.+302    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    b0a8:	8a e2       	ldi	r24, 0x2A	; 42
    b0aa:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b0ac:	86 e0       	ldi	r24, 0x06	; 6
    b0ae:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b0b0:	81 e1       	ldi	r24, 0x11	; 17
    b0b2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0b4:	90 c0       	rjmp	.+288    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    b0b6:	83 e3       	ldi	r24, 0x33	; 51
    b0b8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b0ba:	86 e0       	ldi	r24, 0x06	; 6
    b0bc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b0be:	83 e1       	ldi	r24, 0x13	; 19
    b0c0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0c2:	89 c0       	rjmp	.+274    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    b0c4:	8c e0       	ldi	r24, 0x0C	; 12
    b0c6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b0c8:	86 e0       	ldi	r24, 0x06	; 6
    b0ca:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b0cc:	8f e0       	ldi	r24, 0x0F	; 15
    b0ce:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0d0:	82 c0       	rjmp	.+260    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    b0d2:	8e e1       	ldi	r24, 0x1E	; 30
    b0d4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b0d6:	86 e0       	ldi	r24, 0x06	; 6
    b0d8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b0da:	83 e1       	ldi	r24, 0x13	; 19
    b0dc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0de:	7b c0       	rjmp	.+246    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    b0e0:	85 e3       	ldi	r24, 0x35	; 53
    b0e2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b0e4:	86 e0       	ldi	r24, 0x06	; 6
    b0e6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b0e8:	83 e1       	ldi	r24, 0x13	; 19
    b0ea:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0ec:	74 c0       	rjmp	.+232    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    b0ee:	89 e0       	ldi	r24, 0x09	; 9
    b0f0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b0f2:	85 e0       	ldi	r24, 0x05	; 5
    b0f4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b0f6:	8d e0       	ldi	r24, 0x0D	; 13
    b0f8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0fa:	6d c0       	rjmp	.+218    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    b0fc:	8d e0       	ldi	r24, 0x0D	; 13
    b0fe:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b100:	85 e0       	ldi	r24, 0x05	; 5
    b102:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b104:	8f e0       	ldi	r24, 0x0F	; 15
    b106:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b108:	66 c0       	rjmp	.+204    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    b10a:	8d e2       	ldi	r24, 0x2D	; 45
    b10c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b10e:	86 e0       	ldi	r24, 0x06	; 6
    b110:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b112:	83 e1       	ldi	r24, 0x13	; 19
    b114:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b116:	5f c0       	rjmp	.+190    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b118:	82 e0       	ldi	r24, 0x02	; 2
    b11a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b11c:	85 e0       	ldi	r24, 0x05	; 5
    b11e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b120:	8b e0       	ldi	r24, 0x0B	; 11
    b122:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b124:	58 c0       	rjmp	.+176    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b126:	87 e0       	ldi	r24, 0x07	; 7
    b128:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b12a:	86 e0       	ldi	r24, 0x06	; 6
    b12c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b12e:	81 e1       	ldi	r24, 0x11	; 17
    b130:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b132:	51 c0       	rjmp	.+162    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    b134:	85 e1       	ldi	r24, 0x15	; 21
    b136:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b138:	86 e0       	ldi	r24, 0x06	; 6
    b13a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    b13c:	8c e0       	ldi	r24, 0x0C	; 12
    b13e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b140:	4a c0       	rjmp	.+148    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    b142:	81 e1       	ldi	r24, 0x11	; 17
    b144:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b146:	85 e0       	ldi	r24, 0x05	; 5
    b148:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b14a:	8d e0       	ldi	r24, 0x0D	; 13
    b14c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b14e:	43 c0       	rjmp	.+134    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    b150:	8a e0       	ldi	r24, 0x0A	; 10
    b152:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b154:	85 e0       	ldi	r24, 0x05	; 5
    b156:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b158:	8d e0       	ldi	r24, 0x0D	; 13
    b15a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b15c:	3c c0       	rjmp	.+120    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    b15e:	81 e2       	ldi	r24, 0x21	; 33
    b160:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b162:	86 e0       	ldi	r24, 0x06	; 6
    b164:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b166:	8f e0       	ldi	r24, 0x0F	; 15
    b168:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b16a:	35 c0       	rjmp	.+106    	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    b16c:	8c e2       	ldi	r24, 0x2C	; 44
    b16e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b170:	86 e0       	ldi	r24, 0x06	; 6
    b172:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b174:	81 e1       	ldi	r24, 0x11	; 17
    b176:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b178:	2e c0       	rjmp	.+92     	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    b17a:	82 e1       	ldi	r24, 0x12	; 18
    b17c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b17e:	86 e0       	ldi	r24, 0x06	; 6
    b180:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b182:	8f e0       	ldi	r24, 0x0F	; 15
    b184:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b186:	27 c0       	rjmp	.+78     	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    b188:	88 e4       	ldi	r24, 0x48	; 72
    b18a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    b18c:	87 e0       	ldi	r24, 0x07	; 7
    b18e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b190:	81 e1       	ldi	r24, 0x11	; 17
    b192:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b194:	20 c0       	rjmp	.+64     	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    b196:	86 e1       	ldi	r24, 0x16	; 22
    b198:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b19a:	86 e0       	ldi	r24, 0x06	; 6
    b19c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b19e:	81 e1       	ldi	r24, 0x11	; 17
    b1a0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1a2:	19 c0       	rjmp	.+50     	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    b1a4:	8f ef       	ldi	r24, 0xFF	; 255
    b1a6:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    b1a8:	87 e0       	ldi	r24, 0x07	; 7
    b1aa:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    b1ac:	84 e0       	ldi	r24, 0x04	; 4
    b1ae:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1b0:	12 c0       	rjmp	.+36     	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    b1b2:	8e ef       	ldi	r24, 0xFE	; 254
    b1b4:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    b1b6:	87 e0       	ldi	r24, 0x07	; 7
    b1b8:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    b1ba:	87 e0       	ldi	r24, 0x07	; 7
    b1bc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1be:	0b c0       	rjmp	.+22     	; 0xb1d6 <_Z12getMorseCharc+0x356>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    b1c0:	8f e1       	ldi	r24, 0x1F	; 31
    b1c2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b1c4:	85 e0       	ldi	r24, 0x05	; 5
    b1c6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b1c8:	83 e1       	ldi	r24, 0x13	; 19
    b1ca:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1cc:	04 c0       	rjmp	.+8      	; 0xb1d6 <_Z12getMorseCharc+0x356>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    b1ce:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    b1d0:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    b1d2:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    b1d4:	00 00       	nop
	}

	return( morse);
    b1d6:	89 81       	ldd	r24, Y+1	; 0x01
    b1d8:	9a 81       	ldd	r25, Y+2	; 0x02
    b1da:	ab 81       	ldd	r26, Y+3	; 0x03
}
    b1dc:	bc 01       	movw	r22, r24
    b1de:	8a 2f       	mov	r24, r26
    b1e0:	24 96       	adiw	r28, 0x04	; 4
    b1e2:	cd bf       	out	0x3d, r28	; 61
    b1e4:	de bf       	out	0x3e, r29	; 62
    b1e6:	df 91       	pop	r29
    b1e8:	cf 91       	pop	r28
    b1ea:	08 95       	ret

0000b1ec <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    b1ec:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    b1ee:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    b1f0:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    b1f2:	40 83       	st	Z, r20
	ret                             // Return to caller
    b1f4:	08 95       	ret

0000b1f6 <PORTC_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    b1f6:	cf 93       	push	r28
    b1f8:	df 93       	push	r29
    b1fa:	00 d0       	rcall	.+0      	; 0xb1fc <PORTC_set_pin_pull_mode+0x6>
    b1fc:	00 d0       	rcall	.+0      	; 0xb1fe <PORTC_set_pin_pull_mode+0x8>
    b1fe:	cd b7       	in	r28, 0x3d	; 61
    b200:	de b7       	in	r29, 0x3e	; 62
    b202:	8b 83       	std	Y+3, r24	; 0x03
    b204:	6c 83       	std	Y+4, r22	; 0x04
    b206:	8b 81       	ldd	r24, Y+3	; 0x03
    b208:	88 2f       	mov	r24, r24
    b20a:	90 e0       	ldi	r25, 0x00	; 0
    b20c:	80 5b       	subi	r24, 0xB0	; 176
    b20e:	9b 4f       	sbci	r25, 0xFB	; 251
    b210:	89 83       	std	Y+1, r24	; 0x01
    b212:	9a 83       	std	Y+2, r25	; 0x02
    b214:	8c 81       	ldd	r24, Y+4	; 0x04
    b216:	81 30       	cpi	r24, 0x01	; 1
    b218:	59 f4       	brne	.+22     	; 0xb230 <PORTC_set_pin_pull_mode+0x3a>
    b21a:	89 81       	ldd	r24, Y+1	; 0x01
    b21c:	9a 81       	ldd	r25, Y+2	; 0x02
    b21e:	fc 01       	movw	r30, r24
    b220:	80 81       	ld	r24, Z
    b222:	28 2f       	mov	r18, r24
    b224:	28 60       	ori	r18, 0x08	; 8
    b226:	89 81       	ldd	r24, Y+1	; 0x01
    b228:	9a 81       	ldd	r25, Y+2	; 0x02
    b22a:	fc 01       	movw	r30, r24
    b22c:	20 83       	st	Z, r18
    b22e:	0d c0       	rjmp	.+26     	; 0xb24a <PORTC_set_pin_pull_mode+0x54>
    b230:	8c 81       	ldd	r24, Y+4	; 0x04
    b232:	88 23       	and	r24, r24
    b234:	51 f4       	brne	.+20     	; 0xb24a <PORTC_set_pin_pull_mode+0x54>
    b236:	89 81       	ldd	r24, Y+1	; 0x01
    b238:	9a 81       	ldd	r25, Y+2	; 0x02
    b23a:	fc 01       	movw	r30, r24
    b23c:	80 81       	ld	r24, Z
    b23e:	28 2f       	mov	r18, r24
    b240:	27 7f       	andi	r18, 0xF7	; 247
    b242:	89 81       	ldd	r24, Y+1	; 0x01
    b244:	9a 81       	ldd	r25, Y+2	; 0x02
    b246:	fc 01       	movw	r30, r24
    b248:	20 83       	st	Z, r18
    b24a:	00 00       	nop
    b24c:	24 96       	adiw	r28, 0x04	; 4
    b24e:	cd bf       	out	0x3d, r28	; 61
    b250:	de bf       	out	0x3e, r29	; 62
    b252:	df 91       	pop	r29
    b254:	cf 91       	pop	r28
    b256:	08 95       	ret

0000b258 <PORTC_set_pin_dir>:
    b258:	cf 93       	push	r28
    b25a:	df 93       	push	r29
    b25c:	00 d0       	rcall	.+0      	; 0xb25e <PORTC_set_pin_dir+0x6>
    b25e:	cd b7       	in	r28, 0x3d	; 61
    b260:	de b7       	in	r29, 0x3e	; 62
    b262:	89 83       	std	Y+1, r24	; 0x01
    b264:	6a 83       	std	Y+2, r22	; 0x02
    b266:	8a 81       	ldd	r24, Y+2	; 0x02
    b268:	88 2f       	mov	r24, r24
    b26a:	90 e0       	ldi	r25, 0x00	; 0
    b26c:	81 30       	cpi	r24, 0x01	; 1
    b26e:	91 05       	cpc	r25, r1
    b270:	e1 f0       	breq	.+56     	; 0xb2aa <PORTC_set_pin_dir+0x52>
    b272:	82 30       	cpi	r24, 0x02	; 2
    b274:	91 05       	cpc	r25, r1
    b276:	71 f1       	breq	.+92     	; 0xb2d4 <PORTC_set_pin_dir+0x7c>
    b278:	89 2b       	or	r24, r25
    b27a:	09 f0       	breq	.+2      	; 0xb27e <PORTC_set_pin_dir+0x26>
    b27c:	3b c0       	rjmp	.+118    	; 0xb2f4 <PORTC_set_pin_dir+0x9c>
    b27e:	88 e0       	ldi	r24, 0x08	; 8
    b280:	90 e0       	ldi	r25, 0x00	; 0
    b282:	28 e0       	ldi	r18, 0x08	; 8
    b284:	30 e0       	ldi	r19, 0x00	; 0
    b286:	f9 01       	movw	r30, r18
    b288:	20 81       	ld	r18, Z
    b28a:	62 2f       	mov	r22, r18
    b28c:	29 81       	ldd	r18, Y+1	; 0x01
    b28e:	42 2f       	mov	r20, r18
    b290:	50 e0       	ldi	r21, 0x00	; 0
    b292:	21 e0       	ldi	r18, 0x01	; 1
    b294:	30 e0       	ldi	r19, 0x00	; 0
    b296:	02 c0       	rjmp	.+4      	; 0xb29c <PORTC_set_pin_dir+0x44>
    b298:	22 0f       	add	r18, r18
    b29a:	33 1f       	adc	r19, r19
    b29c:	4a 95       	dec	r20
    b29e:	e2 f7       	brpl	.-8      	; 0xb298 <PORTC_set_pin_dir+0x40>
    b2a0:	20 95       	com	r18
    b2a2:	26 23       	and	r18, r22
    b2a4:	fc 01       	movw	r30, r24
    b2a6:	20 83       	st	Z, r18
    b2a8:	25 c0       	rjmp	.+74     	; 0xb2f4 <PORTC_set_pin_dir+0x9c>
    b2aa:	88 e0       	ldi	r24, 0x08	; 8
    b2ac:	90 e0       	ldi	r25, 0x00	; 0
    b2ae:	28 e0       	ldi	r18, 0x08	; 8
    b2b0:	30 e0       	ldi	r19, 0x00	; 0
    b2b2:	f9 01       	movw	r30, r18
    b2b4:	20 81       	ld	r18, Z
    b2b6:	62 2f       	mov	r22, r18
    b2b8:	29 81       	ldd	r18, Y+1	; 0x01
    b2ba:	42 2f       	mov	r20, r18
    b2bc:	50 e0       	ldi	r21, 0x00	; 0
    b2be:	21 e0       	ldi	r18, 0x01	; 1
    b2c0:	30 e0       	ldi	r19, 0x00	; 0
    b2c2:	02 c0       	rjmp	.+4      	; 0xb2c8 <PORTC_set_pin_dir+0x70>
    b2c4:	22 0f       	add	r18, r18
    b2c6:	33 1f       	adc	r19, r19
    b2c8:	4a 95       	dec	r20
    b2ca:	e2 f7       	brpl	.-8      	; 0xb2c4 <PORTC_set_pin_dir+0x6c>
    b2cc:	26 2b       	or	r18, r22
    b2ce:	fc 01       	movw	r30, r24
    b2d0:	20 83       	st	Z, r18
    b2d2:	10 c0       	rjmp	.+32     	; 0xb2f4 <PORTC_set_pin_dir+0x9c>
    b2d4:	89 81       	ldd	r24, Y+1	; 0x01
    b2d6:	88 2f       	mov	r24, r24
    b2d8:	90 e0       	ldi	r25, 0x00	; 0
    b2da:	80 5b       	subi	r24, 0xB0	; 176
    b2dc:	9b 4f       	sbci	r25, 0xFB	; 251
    b2de:	29 81       	ldd	r18, Y+1	; 0x01
    b2e0:	22 2f       	mov	r18, r18
    b2e2:	30 e0       	ldi	r19, 0x00	; 0
    b2e4:	20 5b       	subi	r18, 0xB0	; 176
    b2e6:	3b 4f       	sbci	r19, 0xFB	; 251
    b2e8:	f9 01       	movw	r30, r18
    b2ea:	20 81       	ld	r18, Z
    b2ec:	28 60       	ori	r18, 0x08	; 8
    b2ee:	fc 01       	movw	r30, r24
    b2f0:	20 83       	st	Z, r18
    b2f2:	00 00       	nop
    b2f4:	00 00       	nop
    b2f6:	0f 90       	pop	r0
    b2f8:	0f 90       	pop	r0
    b2fa:	df 91       	pop	r29
    b2fc:	cf 91       	pop	r28
    b2fe:	08 95       	ret

0000b300 <PORTC_set_pin_level>:
    b300:	cf 93       	push	r28
    b302:	df 93       	push	r29
    b304:	00 d0       	rcall	.+0      	; 0xb306 <PORTC_set_pin_level+0x6>
    b306:	cd b7       	in	r28, 0x3d	; 61
    b308:	de b7       	in	r29, 0x3e	; 62
    b30a:	89 83       	std	Y+1, r24	; 0x01
    b30c:	6a 83       	std	Y+2, r22	; 0x02
    b30e:	8a 81       	ldd	r24, Y+2	; 0x02
    b310:	88 23       	and	r24, r24
    b312:	a9 f0       	breq	.+42     	; 0xb33e <PORTC_set_pin_level+0x3e>
    b314:	88 e0       	ldi	r24, 0x08	; 8
    b316:	90 e0       	ldi	r25, 0x00	; 0
    b318:	28 e0       	ldi	r18, 0x08	; 8
    b31a:	30 e0       	ldi	r19, 0x00	; 0
    b31c:	f9 01       	movw	r30, r18
    b31e:	21 81       	ldd	r18, Z+1	; 0x01
    b320:	62 2f       	mov	r22, r18
    b322:	29 81       	ldd	r18, Y+1	; 0x01
    b324:	42 2f       	mov	r20, r18
    b326:	50 e0       	ldi	r21, 0x00	; 0
    b328:	21 e0       	ldi	r18, 0x01	; 1
    b32a:	30 e0       	ldi	r19, 0x00	; 0
    b32c:	02 c0       	rjmp	.+4      	; 0xb332 <PORTC_set_pin_level+0x32>
    b32e:	22 0f       	add	r18, r18
    b330:	33 1f       	adc	r19, r19
    b332:	4a 95       	dec	r20
    b334:	e2 f7       	brpl	.-8      	; 0xb32e <PORTC_set_pin_level+0x2e>
    b336:	26 2b       	or	r18, r22
    b338:	fc 01       	movw	r30, r24
    b33a:	21 83       	std	Z+1, r18	; 0x01
    b33c:	15 c0       	rjmp	.+42     	; 0xb368 <PORTC_set_pin_level+0x68>
    b33e:	88 e0       	ldi	r24, 0x08	; 8
    b340:	90 e0       	ldi	r25, 0x00	; 0
    b342:	28 e0       	ldi	r18, 0x08	; 8
    b344:	30 e0       	ldi	r19, 0x00	; 0
    b346:	f9 01       	movw	r30, r18
    b348:	21 81       	ldd	r18, Z+1	; 0x01
    b34a:	62 2f       	mov	r22, r18
    b34c:	29 81       	ldd	r18, Y+1	; 0x01
    b34e:	42 2f       	mov	r20, r18
    b350:	50 e0       	ldi	r21, 0x00	; 0
    b352:	21 e0       	ldi	r18, 0x01	; 1
    b354:	30 e0       	ldi	r19, 0x00	; 0
    b356:	02 c0       	rjmp	.+4      	; 0xb35c <PORTC_set_pin_level+0x5c>
    b358:	22 0f       	add	r18, r18
    b35a:	33 1f       	adc	r19, r19
    b35c:	4a 95       	dec	r20
    b35e:	e2 f7       	brpl	.-8      	; 0xb358 <PORTC_set_pin_level+0x58>
    b360:	20 95       	com	r18
    b362:	26 23       	and	r18, r22
    b364:	fc 01       	movw	r30, r24
    b366:	21 83       	std	Z+1, r18	; 0x01
    b368:	00 00       	nop
    b36a:	0f 90       	pop	r0
    b36c:	0f 90       	pop	r0
    b36e:	df 91       	pop	r29
    b370:	cf 91       	pop	r28
    b372:	08 95       	ret

0000b374 <PORTE_set_pin_pull_mode>:
    b374:	cf 93       	push	r28
    b376:	df 93       	push	r29
    b378:	00 d0       	rcall	.+0      	; 0xb37a <PORTE_set_pin_pull_mode+0x6>
    b37a:	00 d0       	rcall	.+0      	; 0xb37c <PORTE_set_pin_pull_mode+0x8>
    b37c:	cd b7       	in	r28, 0x3d	; 61
    b37e:	de b7       	in	r29, 0x3e	; 62
    b380:	8b 83       	std	Y+3, r24	; 0x03
    b382:	6c 83       	std	Y+4, r22	; 0x04
    b384:	8b 81       	ldd	r24, Y+3	; 0x03
    b386:	88 2f       	mov	r24, r24
    b388:	90 e0       	ldi	r25, 0x00	; 0
    b38a:	80 57       	subi	r24, 0x70	; 112
    b38c:	9b 4f       	sbci	r25, 0xFB	; 251
    b38e:	89 83       	std	Y+1, r24	; 0x01
    b390:	9a 83       	std	Y+2, r25	; 0x02
    b392:	8c 81       	ldd	r24, Y+4	; 0x04
    b394:	81 30       	cpi	r24, 0x01	; 1
    b396:	59 f4       	brne	.+22     	; 0xb3ae <PORTE_set_pin_pull_mode+0x3a>
    b398:	89 81       	ldd	r24, Y+1	; 0x01
    b39a:	9a 81       	ldd	r25, Y+2	; 0x02
    b39c:	fc 01       	movw	r30, r24
    b39e:	80 81       	ld	r24, Z
    b3a0:	28 2f       	mov	r18, r24
    b3a2:	28 60       	ori	r18, 0x08	; 8
    b3a4:	89 81       	ldd	r24, Y+1	; 0x01
    b3a6:	9a 81       	ldd	r25, Y+2	; 0x02
    b3a8:	fc 01       	movw	r30, r24
    b3aa:	20 83       	st	Z, r18
    b3ac:	0d c0       	rjmp	.+26     	; 0xb3c8 <PORTE_set_pin_pull_mode+0x54>
    b3ae:	8c 81       	ldd	r24, Y+4	; 0x04
    b3b0:	88 23       	and	r24, r24
    b3b2:	51 f4       	brne	.+20     	; 0xb3c8 <PORTE_set_pin_pull_mode+0x54>
    b3b4:	89 81       	ldd	r24, Y+1	; 0x01
    b3b6:	9a 81       	ldd	r25, Y+2	; 0x02
    b3b8:	fc 01       	movw	r30, r24
    b3ba:	80 81       	ld	r24, Z
    b3bc:	28 2f       	mov	r18, r24
    b3be:	27 7f       	andi	r18, 0xF7	; 247
    b3c0:	89 81       	ldd	r24, Y+1	; 0x01
    b3c2:	9a 81       	ldd	r25, Y+2	; 0x02
    b3c4:	fc 01       	movw	r30, r24
    b3c6:	20 83       	st	Z, r18
    b3c8:	00 00       	nop
    b3ca:	24 96       	adiw	r28, 0x04	; 4
    b3cc:	cd bf       	out	0x3d, r28	; 61
    b3ce:	de bf       	out	0x3e, r29	; 62
    b3d0:	df 91       	pop	r29
    b3d2:	cf 91       	pop	r28
    b3d4:	08 95       	ret

0000b3d6 <PORTE_set_pin_dir>:
    b3d6:	cf 93       	push	r28
    b3d8:	df 93       	push	r29
    b3da:	00 d0       	rcall	.+0      	; 0xb3dc <PORTE_set_pin_dir+0x6>
    b3dc:	cd b7       	in	r28, 0x3d	; 61
    b3de:	de b7       	in	r29, 0x3e	; 62
    b3e0:	89 83       	std	Y+1, r24	; 0x01
    b3e2:	6a 83       	std	Y+2, r22	; 0x02
    b3e4:	8a 81       	ldd	r24, Y+2	; 0x02
    b3e6:	88 2f       	mov	r24, r24
    b3e8:	90 e0       	ldi	r25, 0x00	; 0
    b3ea:	81 30       	cpi	r24, 0x01	; 1
    b3ec:	91 05       	cpc	r25, r1
    b3ee:	e1 f0       	breq	.+56     	; 0xb428 <PORTE_set_pin_dir+0x52>
    b3f0:	82 30       	cpi	r24, 0x02	; 2
    b3f2:	91 05       	cpc	r25, r1
    b3f4:	71 f1       	breq	.+92     	; 0xb452 <PORTE_set_pin_dir+0x7c>
    b3f6:	89 2b       	or	r24, r25
    b3f8:	09 f0       	breq	.+2      	; 0xb3fc <PORTE_set_pin_dir+0x26>
    b3fa:	3b c0       	rjmp	.+118    	; 0xb472 <PORTE_set_pin_dir+0x9c>
    b3fc:	80 e1       	ldi	r24, 0x10	; 16
    b3fe:	90 e0       	ldi	r25, 0x00	; 0
    b400:	20 e1       	ldi	r18, 0x10	; 16
    b402:	30 e0       	ldi	r19, 0x00	; 0
    b404:	f9 01       	movw	r30, r18
    b406:	20 81       	ld	r18, Z
    b408:	62 2f       	mov	r22, r18
    b40a:	29 81       	ldd	r18, Y+1	; 0x01
    b40c:	42 2f       	mov	r20, r18
    b40e:	50 e0       	ldi	r21, 0x00	; 0
    b410:	21 e0       	ldi	r18, 0x01	; 1
    b412:	30 e0       	ldi	r19, 0x00	; 0
    b414:	02 c0       	rjmp	.+4      	; 0xb41a <PORTE_set_pin_dir+0x44>
    b416:	22 0f       	add	r18, r18
    b418:	33 1f       	adc	r19, r19
    b41a:	4a 95       	dec	r20
    b41c:	e2 f7       	brpl	.-8      	; 0xb416 <PORTE_set_pin_dir+0x40>
    b41e:	20 95       	com	r18
    b420:	26 23       	and	r18, r22
    b422:	fc 01       	movw	r30, r24
    b424:	20 83       	st	Z, r18
    b426:	25 c0       	rjmp	.+74     	; 0xb472 <PORTE_set_pin_dir+0x9c>
    b428:	80 e1       	ldi	r24, 0x10	; 16
    b42a:	90 e0       	ldi	r25, 0x00	; 0
    b42c:	20 e1       	ldi	r18, 0x10	; 16
    b42e:	30 e0       	ldi	r19, 0x00	; 0
    b430:	f9 01       	movw	r30, r18
    b432:	20 81       	ld	r18, Z
    b434:	62 2f       	mov	r22, r18
    b436:	29 81       	ldd	r18, Y+1	; 0x01
    b438:	42 2f       	mov	r20, r18
    b43a:	50 e0       	ldi	r21, 0x00	; 0
    b43c:	21 e0       	ldi	r18, 0x01	; 1
    b43e:	30 e0       	ldi	r19, 0x00	; 0
    b440:	02 c0       	rjmp	.+4      	; 0xb446 <PORTE_set_pin_dir+0x70>
    b442:	22 0f       	add	r18, r18
    b444:	33 1f       	adc	r19, r19
    b446:	4a 95       	dec	r20
    b448:	e2 f7       	brpl	.-8      	; 0xb442 <PORTE_set_pin_dir+0x6c>
    b44a:	26 2b       	or	r18, r22
    b44c:	fc 01       	movw	r30, r24
    b44e:	20 83       	st	Z, r18
    b450:	10 c0       	rjmp	.+32     	; 0xb472 <PORTE_set_pin_dir+0x9c>
    b452:	89 81       	ldd	r24, Y+1	; 0x01
    b454:	88 2f       	mov	r24, r24
    b456:	90 e0       	ldi	r25, 0x00	; 0
    b458:	80 57       	subi	r24, 0x70	; 112
    b45a:	9b 4f       	sbci	r25, 0xFB	; 251
    b45c:	29 81       	ldd	r18, Y+1	; 0x01
    b45e:	22 2f       	mov	r18, r18
    b460:	30 e0       	ldi	r19, 0x00	; 0
    b462:	20 57       	subi	r18, 0x70	; 112
    b464:	3b 4f       	sbci	r19, 0xFB	; 251
    b466:	f9 01       	movw	r30, r18
    b468:	20 81       	ld	r18, Z
    b46a:	28 60       	ori	r18, 0x08	; 8
    b46c:	fc 01       	movw	r30, r24
    b46e:	20 83       	st	Z, r18
    b470:	00 00       	nop
    b472:	00 00       	nop
    b474:	0f 90       	pop	r0
    b476:	0f 90       	pop	r0
    b478:	df 91       	pop	r29
    b47a:	cf 91       	pop	r28
    b47c:	08 95       	ret

0000b47e <PORTE_set_pin_level>:
    b47e:	cf 93       	push	r28
    b480:	df 93       	push	r29
    b482:	00 d0       	rcall	.+0      	; 0xb484 <PORTE_set_pin_level+0x6>
    b484:	cd b7       	in	r28, 0x3d	; 61
    b486:	de b7       	in	r29, 0x3e	; 62
    b488:	89 83       	std	Y+1, r24	; 0x01
    b48a:	6a 83       	std	Y+2, r22	; 0x02
    b48c:	8a 81       	ldd	r24, Y+2	; 0x02
    b48e:	88 23       	and	r24, r24
    b490:	a9 f0       	breq	.+42     	; 0xb4bc <PORTE_set_pin_level+0x3e>
    b492:	80 e1       	ldi	r24, 0x10	; 16
    b494:	90 e0       	ldi	r25, 0x00	; 0
    b496:	20 e1       	ldi	r18, 0x10	; 16
    b498:	30 e0       	ldi	r19, 0x00	; 0
    b49a:	f9 01       	movw	r30, r18
    b49c:	21 81       	ldd	r18, Z+1	; 0x01
    b49e:	62 2f       	mov	r22, r18
    b4a0:	29 81       	ldd	r18, Y+1	; 0x01
    b4a2:	42 2f       	mov	r20, r18
    b4a4:	50 e0       	ldi	r21, 0x00	; 0
    b4a6:	21 e0       	ldi	r18, 0x01	; 1
    b4a8:	30 e0       	ldi	r19, 0x00	; 0
    b4aa:	02 c0       	rjmp	.+4      	; 0xb4b0 <PORTE_set_pin_level+0x32>
    b4ac:	22 0f       	add	r18, r18
    b4ae:	33 1f       	adc	r19, r19
    b4b0:	4a 95       	dec	r20
    b4b2:	e2 f7       	brpl	.-8      	; 0xb4ac <PORTE_set_pin_level+0x2e>
    b4b4:	26 2b       	or	r18, r22
    b4b6:	fc 01       	movw	r30, r24
    b4b8:	21 83       	std	Z+1, r18	; 0x01
    b4ba:	15 c0       	rjmp	.+42     	; 0xb4e6 <PORTE_set_pin_level+0x68>
    b4bc:	80 e1       	ldi	r24, 0x10	; 16
    b4be:	90 e0       	ldi	r25, 0x00	; 0
    b4c0:	20 e1       	ldi	r18, 0x10	; 16
    b4c2:	30 e0       	ldi	r19, 0x00	; 0
    b4c4:	f9 01       	movw	r30, r18
    b4c6:	21 81       	ldd	r18, Z+1	; 0x01
    b4c8:	62 2f       	mov	r22, r18
    b4ca:	29 81       	ldd	r18, Y+1	; 0x01
    b4cc:	42 2f       	mov	r20, r18
    b4ce:	50 e0       	ldi	r21, 0x00	; 0
    b4d0:	21 e0       	ldi	r18, 0x01	; 1
    b4d2:	30 e0       	ldi	r19, 0x00	; 0
    b4d4:	02 c0       	rjmp	.+4      	; 0xb4da <PORTE_set_pin_level+0x5c>
    b4d6:	22 0f       	add	r18, r18
    b4d8:	33 1f       	adc	r19, r19
    b4da:	4a 95       	dec	r20
    b4dc:	e2 f7       	brpl	.-8      	; 0xb4d6 <PORTE_set_pin_level+0x58>
    b4de:	20 95       	com	r18
    b4e0:	26 23       	and	r18, r22
    b4e2:	fc 01       	movw	r30, r24
    b4e4:	21 83       	std	Z+1, r18	; 0x01
    b4e6:	00 00       	nop
    b4e8:	0f 90       	pop	r0
    b4ea:	0f 90       	pop	r0
    b4ec:	df 91       	pop	r29
    b4ee:	cf 91       	pop	r28
    b4f0:	08 95       	ret

0000b4f2 <PC0_set_dir>:
    b4f2:	cf 93       	push	r28
    b4f4:	df 93       	push	r29
    b4f6:	1f 92       	push	r1
    b4f8:	cd b7       	in	r28, 0x3d	; 61
    b4fa:	de b7       	in	r29, 0x3e	; 62
    b4fc:	89 83       	std	Y+1, r24	; 0x01
    b4fe:	69 81       	ldd	r22, Y+1	; 0x01
    b500:	80 e0       	ldi	r24, 0x00	; 0
    b502:	0e 94 2c 59 	call	0xb258	; 0xb258 <PORTC_set_pin_dir>
    b506:	00 00       	nop
    b508:	0f 90       	pop	r0
    b50a:	df 91       	pop	r29
    b50c:	cf 91       	pop	r28
    b50e:	08 95       	ret

0000b510 <PC0_set_level>:
    b510:	cf 93       	push	r28
    b512:	df 93       	push	r29
    b514:	1f 92       	push	r1
    b516:	cd b7       	in	r28, 0x3d	; 61
    b518:	de b7       	in	r29, 0x3e	; 62
    b51a:	89 83       	std	Y+1, r24	; 0x01
    b51c:	69 81       	ldd	r22, Y+1	; 0x01
    b51e:	80 e0       	ldi	r24, 0x00	; 0
    b520:	0e 94 80 59 	call	0xb300	; 0xb300 <PORTC_set_pin_level>
    b524:	00 00       	nop
    b526:	0f 90       	pop	r0
    b528:	df 91       	pop	r29
    b52a:	cf 91       	pop	r28
    b52c:	08 95       	ret

0000b52e <PC1_set_pull_mode>:
    b52e:	cf 93       	push	r28
    b530:	df 93       	push	r29
    b532:	1f 92       	push	r1
    b534:	cd b7       	in	r28, 0x3d	; 61
    b536:	de b7       	in	r29, 0x3e	; 62
    b538:	89 83       	std	Y+1, r24	; 0x01
    b53a:	69 81       	ldd	r22, Y+1	; 0x01
    b53c:	81 e0       	ldi	r24, 0x01	; 1
    b53e:	0e 94 fb 58 	call	0xb1f6	; 0xb1f6 <PORTC_set_pin_pull_mode>
    b542:	00 00       	nop
    b544:	0f 90       	pop	r0
    b546:	df 91       	pop	r29
    b548:	cf 91       	pop	r28
    b54a:	08 95       	ret

0000b54c <PC1_set_dir>:
    b54c:	cf 93       	push	r28
    b54e:	df 93       	push	r29
    b550:	1f 92       	push	r1
    b552:	cd b7       	in	r28, 0x3d	; 61
    b554:	de b7       	in	r29, 0x3e	; 62
    b556:	89 83       	std	Y+1, r24	; 0x01
    b558:	69 81       	ldd	r22, Y+1	; 0x01
    b55a:	81 e0       	ldi	r24, 0x01	; 1
    b55c:	0e 94 2c 59 	call	0xb258	; 0xb258 <PORTC_set_pin_dir>
    b560:	00 00       	nop
    b562:	0f 90       	pop	r0
    b564:	df 91       	pop	r29
    b566:	cf 91       	pop	r28
    b568:	08 95       	ret

0000b56a <PE0_set_dir>:
    b56a:	cf 93       	push	r28
    b56c:	df 93       	push	r29
    b56e:	1f 92       	push	r1
    b570:	cd b7       	in	r28, 0x3d	; 61
    b572:	de b7       	in	r29, 0x3e	; 62
    b574:	89 83       	std	Y+1, r24	; 0x01
    b576:	69 81       	ldd	r22, Y+1	; 0x01
    b578:	80 e0       	ldi	r24, 0x00	; 0
    b57a:	0e 94 eb 59 	call	0xb3d6	; 0xb3d6 <PORTE_set_pin_dir>
    b57e:	00 00       	nop
    b580:	0f 90       	pop	r0
    b582:	df 91       	pop	r29
    b584:	cf 91       	pop	r28
    b586:	08 95       	ret

0000b588 <PE0_set_level>:
    b588:	cf 93       	push	r28
    b58a:	df 93       	push	r29
    b58c:	1f 92       	push	r1
    b58e:	cd b7       	in	r28, 0x3d	; 61
    b590:	de b7       	in	r29, 0x3e	; 62
    b592:	89 83       	std	Y+1, r24	; 0x01
    b594:	69 81       	ldd	r22, Y+1	; 0x01
    b596:	80 e0       	ldi	r24, 0x00	; 0
    b598:	0e 94 3f 5a 	call	0xb47e	; 0xb47e <PORTE_set_pin_level>
    b59c:	00 00       	nop
    b59e:	0f 90       	pop	r0
    b5a0:	df 91       	pop	r29
    b5a2:	cf 91       	pop	r28
    b5a4:	08 95       	ret

0000b5a6 <PE1_set_pull_mode>:
    b5a6:	cf 93       	push	r28
    b5a8:	df 93       	push	r29
    b5aa:	1f 92       	push	r1
    b5ac:	cd b7       	in	r28, 0x3d	; 61
    b5ae:	de b7       	in	r29, 0x3e	; 62
    b5b0:	89 83       	std	Y+1, r24	; 0x01
    b5b2:	69 81       	ldd	r22, Y+1	; 0x01
    b5b4:	81 e0       	ldi	r24, 0x01	; 1
    b5b6:	0e 94 ba 59 	call	0xb374	; 0xb374 <PORTE_set_pin_pull_mode>
    b5ba:	00 00       	nop
    b5bc:	0f 90       	pop	r0
    b5be:	df 91       	pop	r29
    b5c0:	cf 91       	pop	r28
    b5c2:	08 95       	ret

0000b5c4 <PE1_set_dir>:
    b5c4:	cf 93       	push	r28
    b5c6:	df 93       	push	r29
    b5c8:	1f 92       	push	r1
    b5ca:	cd b7       	in	r28, 0x3d	; 61
    b5cc:	de b7       	in	r29, 0x3e	; 62
    b5ce:	89 83       	std	Y+1, r24	; 0x01
    b5d0:	69 81       	ldd	r22, Y+1	; 0x01
    b5d2:	81 e0       	ldi	r24, 0x01	; 1
    b5d4:	0e 94 eb 59 	call	0xb3d6	; 0xb3d6 <PORTE_set_pin_dir>
    b5d8:	00 00       	nop
    b5da:	0f 90       	pop	r0
    b5dc:	df 91       	pop	r29
    b5de:	cf 91       	pop	r28
    b5e0:	08 95       	ret

0000b5e2 <nextFullSBTxBuffer>:
    b5e2:	cf 93       	push	r28
    b5e4:	df 93       	push	r29
    b5e6:	00 d0       	rcall	.+0      	; 0xb5e8 <nextFullSBTxBuffer+0x6>
    b5e8:	cd b7       	in	r28, 0x3d	; 61
    b5ea:	de b7       	in	r29, 0x3e	; 62
    b5ec:	81 e0       	ldi	r24, 0x01	; 1
    b5ee:	89 83       	std	Y+1, r24	; 0x01
    b5f0:	1a 82       	std	Y+2, r1	; 0x02
    b5f2:	80 91 8f 4a 	lds	r24, 0x4A8F	; 0x804a8f <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b5f6:	28 2f       	mov	r18, r24
    b5f8:	30 e0       	ldi	r19, 0x00	; 0
    b5fa:	49 e2       	ldi	r20, 0x29	; 41
    b5fc:	42 9f       	mul	r20, r18
    b5fe:	c0 01       	movw	r24, r0
    b600:	43 9f       	mul	r20, r19
    b602:	90 0d       	add	r25, r0
    b604:	11 24       	eor	r1, r1
    b606:	8a 56       	subi	r24, 0x6A	; 106
    b608:	96 4b       	sbci	r25, 0xB6	; 182
    b60a:	fc 01       	movw	r30, r24
    b60c:	90 81       	ld	r25, Z
    b60e:	81 e0       	ldi	r24, 0x01	; 1
    b610:	99 23       	and	r25, r25
    b612:	09 f0       	breq	.+2      	; 0xb616 <nextFullSBTxBuffer+0x34>
    b614:	80 e0       	ldi	r24, 0x00	; 0
    b616:	88 23       	and	r24, r24
    b618:	c1 f0       	breq	.+48     	; 0xb64a <nextFullSBTxBuffer+0x68>
    b61a:	8a 81       	ldd	r24, Y+2	; 0x02
    b61c:	8f 5f       	subi	r24, 0xFF	; 255
    b61e:	8a 83       	std	Y+2, r24	; 0x02
    b620:	81 e0       	ldi	r24, 0x01	; 1
    b622:	9a 81       	ldd	r25, Y+2	; 0x02
    b624:	93 30       	cpi	r25, 0x03	; 3
    b626:	08 f4       	brcc	.+2      	; 0xb62a <nextFullSBTxBuffer+0x48>
    b628:	80 e0       	ldi	r24, 0x00	; 0
    b62a:	88 23       	and	r24, r24
    b62c:	11 f0       	breq	.+4      	; 0xb632 <nextFullSBTxBuffer+0x50>
    b62e:	19 82       	std	Y+1, r1	; 0x01
    b630:	0c c0       	rjmp	.+24     	; 0xb64a <nextFullSBTxBuffer+0x68>
    b632:	80 91 8f 4a 	lds	r24, 0x4A8F	; 0x804a8f <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b636:	8f 5f       	subi	r24, 0xFF	; 255
    b638:	80 93 8f 4a 	sts	0x4A8F, r24	; 0x804a8f <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b63c:	80 91 8f 4a 	lds	r24, 0x4A8F	; 0x804a8f <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b640:	83 30       	cpi	r24, 0x03	; 3
    b642:	b8 f2       	brcs	.-82     	; 0xb5f2 <nextFullSBTxBuffer+0x10>
    b644:	10 92 8f 4a 	sts	0x4A8F, r1	; 0x804a8f <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b648:	d4 cf       	rjmp	.-88     	; 0xb5f2 <nextFullSBTxBuffer+0x10>
    b64a:	89 81       	ldd	r24, Y+1	; 0x01
    b64c:	88 23       	and	r24, r24
    b64e:	69 f0       	breq	.+26     	; 0xb66a <nextFullSBTxBuffer+0x88>
    b650:	80 91 8f 4a 	lds	r24, 0x4A8F	; 0x804a8f <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b654:	28 2f       	mov	r18, r24
    b656:	30 e0       	ldi	r19, 0x00	; 0
    b658:	49 e2       	ldi	r20, 0x29	; 41
    b65a:	42 9f       	mul	r20, r18
    b65c:	c0 01       	movw	r24, r0
    b65e:	43 9f       	mul	r20, r19
    b660:	90 0d       	add	r25, r0
    b662:	11 24       	eor	r1, r1
    b664:	8a 56       	subi	r24, 0x6A	; 106
    b666:	96 4b       	sbci	r25, 0xB6	; 182
    b668:	02 c0       	rjmp	.+4      	; 0xb66e <nextFullSBTxBuffer+0x8c>
    b66a:	80 e0       	ldi	r24, 0x00	; 0
    b66c:	90 e0       	ldi	r25, 0x00	; 0
    b66e:	0f 90       	pop	r0
    b670:	0f 90       	pop	r0
    b672:	df 91       	pop	r29
    b674:	cf 91       	pop	r28
    b676:	08 95       	ret

0000b678 <nextEmptySBTxBuffer>:
    b678:	cf 93       	push	r28
    b67a:	df 93       	push	r29
    b67c:	00 d0       	rcall	.+0      	; 0xb67e <nextEmptySBTxBuffer+0x6>
    b67e:	cd b7       	in	r28, 0x3d	; 61
    b680:	de b7       	in	r29, 0x3e	; 62
    b682:	81 e0       	ldi	r24, 0x01	; 1
    b684:	89 83       	std	Y+1, r24	; 0x01
    b686:	1a 82       	std	Y+2, r1	; 0x02
    b688:	80 91 90 4a 	lds	r24, 0x4A90	; 0x804a90 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b68c:	28 2f       	mov	r18, r24
    b68e:	30 e0       	ldi	r19, 0x00	; 0
    b690:	49 e2       	ldi	r20, 0x29	; 41
    b692:	42 9f       	mul	r20, r18
    b694:	c0 01       	movw	r24, r0
    b696:	43 9f       	mul	r20, r19
    b698:	90 0d       	add	r25, r0
    b69a:	11 24       	eor	r1, r1
    b69c:	8a 56       	subi	r24, 0x6A	; 106
    b69e:	96 4b       	sbci	r25, 0xB6	; 182
    b6a0:	fc 01       	movw	r30, r24
    b6a2:	90 81       	ld	r25, Z
    b6a4:	81 e0       	ldi	r24, 0x01	; 1
    b6a6:	99 23       	and	r25, r25
    b6a8:	09 f4       	brne	.+2      	; 0xb6ac <nextEmptySBTxBuffer+0x34>
    b6aa:	80 e0       	ldi	r24, 0x00	; 0
    b6ac:	88 23       	and	r24, r24
    b6ae:	c1 f0       	breq	.+48     	; 0xb6e0 <nextEmptySBTxBuffer+0x68>
    b6b0:	8a 81       	ldd	r24, Y+2	; 0x02
    b6b2:	8f 5f       	subi	r24, 0xFF	; 255
    b6b4:	8a 83       	std	Y+2, r24	; 0x02
    b6b6:	81 e0       	ldi	r24, 0x01	; 1
    b6b8:	9a 81       	ldd	r25, Y+2	; 0x02
    b6ba:	93 30       	cpi	r25, 0x03	; 3
    b6bc:	08 f4       	brcc	.+2      	; 0xb6c0 <nextEmptySBTxBuffer+0x48>
    b6be:	80 e0       	ldi	r24, 0x00	; 0
    b6c0:	88 23       	and	r24, r24
    b6c2:	11 f0       	breq	.+4      	; 0xb6c8 <nextEmptySBTxBuffer+0x50>
    b6c4:	19 82       	std	Y+1, r1	; 0x01
    b6c6:	0c c0       	rjmp	.+24     	; 0xb6e0 <nextEmptySBTxBuffer+0x68>
    b6c8:	80 91 90 4a 	lds	r24, 0x4A90	; 0x804a90 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b6cc:	8f 5f       	subi	r24, 0xFF	; 255
    b6ce:	80 93 90 4a 	sts	0x4A90, r24	; 0x804a90 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b6d2:	80 91 90 4a 	lds	r24, 0x4A90	; 0x804a90 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b6d6:	83 30       	cpi	r24, 0x03	; 3
    b6d8:	b8 f2       	brcs	.-82     	; 0xb688 <nextEmptySBTxBuffer+0x10>
    b6da:	10 92 90 4a 	sts	0x4A90, r1	; 0x804a90 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b6de:	d4 cf       	rjmp	.-88     	; 0xb688 <nextEmptySBTxBuffer+0x10>
    b6e0:	89 81       	ldd	r24, Y+1	; 0x01
    b6e2:	88 23       	and	r24, r24
    b6e4:	69 f0       	breq	.+26     	; 0xb700 <nextEmptySBTxBuffer+0x88>
    b6e6:	80 91 90 4a 	lds	r24, 0x4A90	; 0x804a90 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b6ea:	28 2f       	mov	r18, r24
    b6ec:	30 e0       	ldi	r19, 0x00	; 0
    b6ee:	49 e2       	ldi	r20, 0x29	; 41
    b6f0:	42 9f       	mul	r20, r18
    b6f2:	c0 01       	movw	r24, r0
    b6f4:	43 9f       	mul	r20, r19
    b6f6:	90 0d       	add	r25, r0
    b6f8:	11 24       	eor	r1, r1
    b6fa:	8a 56       	subi	r24, 0x6A	; 106
    b6fc:	96 4b       	sbci	r25, 0xB6	; 182
    b6fe:	02 c0       	rjmp	.+4      	; 0xb704 <nextEmptySBTxBuffer+0x8c>
    b700:	80 e0       	ldi	r24, 0x00	; 0
    b702:	90 e0       	ldi	r25, 0x00	; 0
    b704:	0f 90       	pop	r0
    b706:	0f 90       	pop	r0
    b708:	df 91       	pop	r29
    b70a:	cf 91       	pop	r28
    b70c:	08 95       	ret

0000b70e <nextEmptySBRxBuffer>:
    b70e:	cf 93       	push	r28
    b710:	df 93       	push	r29
    b712:	00 d0       	rcall	.+0      	; 0xb714 <nextEmptySBRxBuffer+0x6>
    b714:	cd b7       	in	r28, 0x3d	; 61
    b716:	de b7       	in	r29, 0x3e	; 62
    b718:	81 e0       	ldi	r24, 0x01	; 1
    b71a:	89 83       	std	Y+1, r24	; 0x01
    b71c:	1a 82       	std	Y+2, r1	; 0x02
    b71e:	80 91 91 4a 	lds	r24, 0x4A91	; 0x804a91 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b722:	28 2f       	mov	r18, r24
    b724:	30 e0       	ldi	r19, 0x00	; 0
    b726:	4f e3       	ldi	r20, 0x3F	; 63
    b728:	42 9f       	mul	r20, r18
    b72a:	c0 01       	movw	r24, r0
    b72c:	43 9f       	mul	r20, r19
    b72e:	90 0d       	add	r25, r0
    b730:	11 24       	eor	r1, r1
    b732:	8e 5e       	subi	r24, 0xEE	; 238
    b734:	95 4b       	sbci	r25, 0xB5	; 181
    b736:	fc 01       	movw	r30, r24
    b738:	80 81       	ld	r24, Z
    b73a:	91 81       	ldd	r25, Z+1	; 0x01
    b73c:	21 e0       	ldi	r18, 0x01	; 1
    b73e:	89 2b       	or	r24, r25
    b740:	09 f4       	brne	.+2      	; 0xb744 <nextEmptySBRxBuffer+0x36>
    b742:	20 e0       	ldi	r18, 0x00	; 0
    b744:	22 23       	and	r18, r18
    b746:	c1 f0       	breq	.+48     	; 0xb778 <nextEmptySBRxBuffer+0x6a>
    b748:	8a 81       	ldd	r24, Y+2	; 0x02
    b74a:	8f 5f       	subi	r24, 0xFF	; 255
    b74c:	8a 83       	std	Y+2, r24	; 0x02
    b74e:	81 e0       	ldi	r24, 0x01	; 1
    b750:	9a 81       	ldd	r25, Y+2	; 0x02
    b752:	92 30       	cpi	r25, 0x02	; 2
    b754:	08 f4       	brcc	.+2      	; 0xb758 <nextEmptySBRxBuffer+0x4a>
    b756:	80 e0       	ldi	r24, 0x00	; 0
    b758:	88 23       	and	r24, r24
    b75a:	11 f0       	breq	.+4      	; 0xb760 <nextEmptySBRxBuffer+0x52>
    b75c:	19 82       	std	Y+1, r1	; 0x01
    b75e:	0c c0       	rjmp	.+24     	; 0xb778 <nextEmptySBRxBuffer+0x6a>
    b760:	80 91 91 4a 	lds	r24, 0x4A91	; 0x804a91 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b764:	8f 5f       	subi	r24, 0xFF	; 255
    b766:	80 93 91 4a 	sts	0x4A91, r24	; 0x804a91 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b76a:	80 91 91 4a 	lds	r24, 0x4A91	; 0x804a91 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b76e:	82 30       	cpi	r24, 0x02	; 2
    b770:	b0 f2       	brcs	.-84     	; 0xb71e <nextEmptySBRxBuffer+0x10>
    b772:	10 92 91 4a 	sts	0x4A91, r1	; 0x804a91 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b776:	d3 cf       	rjmp	.-90     	; 0xb71e <nextEmptySBRxBuffer+0x10>
    b778:	89 81       	ldd	r24, Y+1	; 0x01
    b77a:	88 23       	and	r24, r24
    b77c:	69 f0       	breq	.+26     	; 0xb798 <nextEmptySBRxBuffer+0x8a>
    b77e:	80 91 91 4a 	lds	r24, 0x4A91	; 0x804a91 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b782:	28 2f       	mov	r18, r24
    b784:	30 e0       	ldi	r19, 0x00	; 0
    b786:	4f e3       	ldi	r20, 0x3F	; 63
    b788:	42 9f       	mul	r20, r18
    b78a:	c0 01       	movw	r24, r0
    b78c:	43 9f       	mul	r20, r19
    b78e:	90 0d       	add	r25, r0
    b790:	11 24       	eor	r1, r1
    b792:	8f 5e       	subi	r24, 0xEF	; 239
    b794:	95 4b       	sbci	r25, 0xB5	; 181
    b796:	02 c0       	rjmp	.+4      	; 0xb79c <nextEmptySBRxBuffer+0x8e>
    b798:	80 e0       	ldi	r24, 0x00	; 0
    b79a:	90 e0       	ldi	r25, 0x00	; 0
    b79c:	0f 90       	pop	r0
    b79e:	0f 90       	pop	r0
    b7a0:	df 91       	pop	r29
    b7a2:	cf 91       	pop	r28
    b7a4:	08 95       	ret

0000b7a6 <nextFullSBRxBuffer>:
    b7a6:	cf 93       	push	r28
    b7a8:	df 93       	push	r29
    b7aa:	00 d0       	rcall	.+0      	; 0xb7ac <nextFullSBRxBuffer+0x6>
    b7ac:	cd b7       	in	r28, 0x3d	; 61
    b7ae:	de b7       	in	r29, 0x3e	; 62
    b7b0:	81 e0       	ldi	r24, 0x01	; 1
    b7b2:	89 83       	std	Y+1, r24	; 0x01
    b7b4:	1a 82       	std	Y+2, r1	; 0x02
    b7b6:	80 91 92 4a 	lds	r24, 0x4A92	; 0x804a92 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b7ba:	28 2f       	mov	r18, r24
    b7bc:	30 e0       	ldi	r19, 0x00	; 0
    b7be:	4f e3       	ldi	r20, 0x3F	; 63
    b7c0:	42 9f       	mul	r20, r18
    b7c2:	c0 01       	movw	r24, r0
    b7c4:	43 9f       	mul	r20, r19
    b7c6:	90 0d       	add	r25, r0
    b7c8:	11 24       	eor	r1, r1
    b7ca:	8e 5e       	subi	r24, 0xEE	; 238
    b7cc:	95 4b       	sbci	r25, 0xB5	; 181
    b7ce:	fc 01       	movw	r30, r24
    b7d0:	80 81       	ld	r24, Z
    b7d2:	91 81       	ldd	r25, Z+1	; 0x01
    b7d4:	21 e0       	ldi	r18, 0x01	; 1
    b7d6:	89 2b       	or	r24, r25
    b7d8:	09 f0       	breq	.+2      	; 0xb7dc <nextFullSBRxBuffer+0x36>
    b7da:	20 e0       	ldi	r18, 0x00	; 0
    b7dc:	22 23       	and	r18, r18
    b7de:	c1 f0       	breq	.+48     	; 0xb810 <nextFullSBRxBuffer+0x6a>
    b7e0:	8a 81       	ldd	r24, Y+2	; 0x02
    b7e2:	8f 5f       	subi	r24, 0xFF	; 255
    b7e4:	8a 83       	std	Y+2, r24	; 0x02
    b7e6:	81 e0       	ldi	r24, 0x01	; 1
    b7e8:	9a 81       	ldd	r25, Y+2	; 0x02
    b7ea:	92 30       	cpi	r25, 0x02	; 2
    b7ec:	08 f4       	brcc	.+2      	; 0xb7f0 <nextFullSBRxBuffer+0x4a>
    b7ee:	80 e0       	ldi	r24, 0x00	; 0
    b7f0:	88 23       	and	r24, r24
    b7f2:	11 f0       	breq	.+4      	; 0xb7f8 <nextFullSBRxBuffer+0x52>
    b7f4:	19 82       	std	Y+1, r1	; 0x01
    b7f6:	0c c0       	rjmp	.+24     	; 0xb810 <nextFullSBRxBuffer+0x6a>
    b7f8:	80 91 92 4a 	lds	r24, 0x4A92	; 0x804a92 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b7fc:	8f 5f       	subi	r24, 0xFF	; 255
    b7fe:	80 93 92 4a 	sts	0x4A92, r24	; 0x804a92 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b802:	80 91 92 4a 	lds	r24, 0x4A92	; 0x804a92 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b806:	82 30       	cpi	r24, 0x02	; 2
    b808:	b0 f2       	brcs	.-84     	; 0xb7b6 <nextFullSBRxBuffer+0x10>
    b80a:	10 92 92 4a 	sts	0x4A92, r1	; 0x804a92 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b80e:	d3 cf       	rjmp	.-90     	; 0xb7b6 <nextFullSBRxBuffer+0x10>
    b810:	89 81       	ldd	r24, Y+1	; 0x01
    b812:	88 23       	and	r24, r24
    b814:	69 f0       	breq	.+26     	; 0xb830 <nextFullSBRxBuffer+0x8a>
    b816:	80 91 92 4a 	lds	r24, 0x4A92	; 0x804a92 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b81a:	28 2f       	mov	r18, r24
    b81c:	30 e0       	ldi	r19, 0x00	; 0
    b81e:	4f e3       	ldi	r20, 0x3F	; 63
    b820:	42 9f       	mul	r20, r18
    b822:	c0 01       	movw	r24, r0
    b824:	43 9f       	mul	r20, r19
    b826:	90 0d       	add	r25, r0
    b828:	11 24       	eor	r1, r1
    b82a:	8f 5e       	subi	r24, 0xEF	; 239
    b82c:	95 4b       	sbci	r25, 0xB5	; 181
    b82e:	02 c0       	rjmp	.+4      	; 0xb834 <nextFullSBRxBuffer+0x8e>
    b830:	80 e0       	ldi	r24, 0x00	; 0
    b832:	90 e0       	ldi	r25, 0x00	; 0
    b834:	0f 90       	pop	r0
    b836:	0f 90       	pop	r0
    b838:	df 91       	pop	r29
    b83a:	cf 91       	pop	r28
    b83c:	08 95       	ret

0000b83e <serialbusTxInProgress>:
    b83e:	cf 93       	push	r28
    b840:	df 93       	push	r29
    b842:	cd b7       	in	r28, 0x3d	; 61
    b844:	de b7       	in	r29, 0x3e	; 62
    b846:	80 91 95 49 	lds	r24, 0x4995	; 0x804995 <_ZL19serialbus_tx_active>
    b84a:	df 91       	pop	r29
    b84c:	cf 91       	pop	r28
    b84e:	08 95       	ret

0000b850 <_Z18serialbus_start_txv>:
    b850:	cf 93       	push	r28
    b852:	df 93       	push	r29
    b854:	1f 92       	push	r1
    b856:	cd b7       	in	r28, 0x3d	; 61
    b858:	de b7       	in	r29, 0x3e	; 62
    b85a:	90 91 95 49 	lds	r25, 0x4995	; 0x804995 <_ZL19serialbus_tx_active>
    b85e:	81 e0       	ldi	r24, 0x01	; 1
    b860:	89 27       	eor	r24, r25
    b862:	89 83       	std	Y+1, r24	; 0x01
    b864:	89 81       	ldd	r24, Y+1	; 0x01
    b866:	88 23       	and	r24, r24
    b868:	61 f0       	breq	.+24     	; 0xb882 <_Z18serialbus_start_txv+0x32>
    b86a:	81 e0       	ldi	r24, 0x01	; 1
    b86c:	80 93 95 49 	sts	0x4995, r24	; 0x804995 <_ZL19serialbus_tx_active>
    b870:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    b874:	88 23       	and	r24, r24
    b876:	19 f4       	brne	.+6      	; 0xb87e <_Z18serialbus_start_txv+0x2e>
    b878:	0e 94 f9 6d 	call	0xdbf2	; 0xdbf2 <USART4_enable_tx>
    b87c:	02 c0       	rjmp	.+4      	; 0xb882 <_Z18serialbus_start_txv+0x32>
    b87e:	0e 94 73 6d 	call	0xdae6	; 0xdae6 <USART1_enable_tx>
    b882:	89 81       	ldd	r24, Y+1	; 0x01
    b884:	0f 90       	pop	r0
    b886:	df 91       	pop	r29
    b888:	cf 91       	pop	r28
    b88a:	08 95       	ret

0000b88c <serialbus_end_tx>:
    b88c:	cf 93       	push	r28
    b88e:	df 93       	push	r29
    b890:	cd b7       	in	r28, 0x3d	; 61
    b892:	de b7       	in	r29, 0x3e	; 62
    b894:	80 91 95 49 	lds	r24, 0x4995	; 0x804995 <_ZL19serialbus_tx_active>
    b898:	88 23       	and	r24, r24
    b89a:	c9 f0       	breq	.+50     	; 0xb8ce <serialbus_end_tx+0x42>
    b89c:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    b8a0:	84 30       	cpi	r24, 0x04	; 4
    b8a2:	51 f4       	brne	.+20     	; 0xb8b8 <serialbus_end_tx+0x2c>
    b8a4:	80 e8       	ldi	r24, 0x80	; 128
    b8a6:	98 e0       	ldi	r25, 0x08	; 8
    b8a8:	20 e8       	ldi	r18, 0x80	; 128
    b8aa:	38 e0       	ldi	r19, 0x08	; 8
    b8ac:	f9 01       	movw	r30, r18
    b8ae:	25 81       	ldd	r18, Z+5	; 0x05
    b8b0:	2f 7d       	andi	r18, 0xDF	; 223
    b8b2:	fc 01       	movw	r30, r24
    b8b4:	25 83       	std	Z+5, r18	; 0x05
    b8b6:	09 c0       	rjmp	.+18     	; 0xb8ca <serialbus_end_tx+0x3e>
    b8b8:	80 e2       	ldi	r24, 0x20	; 32
    b8ba:	98 e0       	ldi	r25, 0x08	; 8
    b8bc:	20 e2       	ldi	r18, 0x20	; 32
    b8be:	38 e0       	ldi	r19, 0x08	; 8
    b8c0:	f9 01       	movw	r30, r18
    b8c2:	25 81       	ldd	r18, Z+5	; 0x05
    b8c4:	2f 7d       	andi	r18, 0xDF	; 223
    b8c6:	fc 01       	movw	r30, r24
    b8c8:	25 83       	std	Z+5, r18	; 0x05
    b8ca:	10 92 95 49 	sts	0x4995, r1	; 0x804995 <_ZL19serialbus_tx_active>
    b8ce:	00 00       	nop
    b8d0:	df 91       	pop	r29
    b8d2:	cf 91       	pop	r28
    b8d4:	08 95       	ret

0000b8d6 <_ZL21USART1_initializationm>:
    b8d6:	cf 93       	push	r28
    b8d8:	df 93       	push	r29
    b8da:	00 d0       	rcall	.+0      	; 0xb8dc <_ZL21USART1_initializationm+0x6>
    b8dc:	00 d0       	rcall	.+0      	; 0xb8de <_ZL21USART1_initializationm+0x8>
    b8de:	cd b7       	in	r28, 0x3d	; 61
    b8e0:	de b7       	in	r29, 0x3e	; 62
    b8e2:	69 83       	std	Y+1, r22	; 0x01
    b8e4:	7a 83       	std	Y+2, r23	; 0x02
    b8e6:	8b 83       	std	Y+3, r24	; 0x03
    b8e8:	9c 83       	std	Y+4, r25	; 0x04
    b8ea:	80 e0       	ldi	r24, 0x00	; 0
    b8ec:	0e 94 a6 5a 	call	0xb54c	; 0xb54c <PC1_set_dir>
    b8f0:	80 e0       	ldi	r24, 0x00	; 0
    b8f2:	0e 94 97 5a 	call	0xb52e	; 0xb52e <PC1_set_pull_mode>
    b8f6:	81 e0       	ldi	r24, 0x01	; 1
    b8f8:	0e 94 79 5a 	call	0xb4f2	; 0xb4f2 <PC0_set_dir>
    b8fc:	81 e0       	ldi	r24, 0x01	; 1
    b8fe:	0e 94 88 5a 	call	0xb510	; 0xb510 <PC0_set_level>
    b902:	89 81       	ldd	r24, Y+1	; 0x01
    b904:	9a 81       	ldd	r25, Y+2	; 0x02
    b906:	ab 81       	ldd	r26, Y+3	; 0x03
    b908:	bc 81       	ldd	r27, Y+4	; 0x04
    b90a:	bc 01       	movw	r22, r24
    b90c:	cd 01       	movw	r24, r26
    b90e:	0e 94 1c 6d 	call	0xda38	; 0xda38 <USART1_init>
    b912:	00 00       	nop
    b914:	24 96       	adiw	r28, 0x04	; 4
    b916:	cd bf       	out	0x3d, r28	; 61
    b918:	de bf       	out	0x3e, r29	; 62
    b91a:	df 91       	pop	r29
    b91c:	cf 91       	pop	r28
    b91e:	08 95       	ret

0000b920 <_ZL21USART4_initializationm>:
    b920:	cf 93       	push	r28
    b922:	df 93       	push	r29
    b924:	00 d0       	rcall	.+0      	; 0xb926 <_ZL21USART4_initializationm+0x6>
    b926:	00 d0       	rcall	.+0      	; 0xb928 <_ZL21USART4_initializationm+0x8>
    b928:	cd b7       	in	r28, 0x3d	; 61
    b92a:	de b7       	in	r29, 0x3e	; 62
    b92c:	69 83       	std	Y+1, r22	; 0x01
    b92e:	7a 83       	std	Y+2, r23	; 0x02
    b930:	8b 83       	std	Y+3, r24	; 0x03
    b932:	9c 83       	std	Y+4, r25	; 0x04
    b934:	80 e0       	ldi	r24, 0x00	; 0
    b936:	0e 94 e2 5a 	call	0xb5c4	; 0xb5c4 <PE1_set_dir>
    b93a:	80 e0       	ldi	r24, 0x00	; 0
    b93c:	0e 94 d3 5a 	call	0xb5a6	; 0xb5a6 <PE1_set_pull_mode>
    b940:	81 e0       	ldi	r24, 0x01	; 1
    b942:	0e 94 b5 5a 	call	0xb56a	; 0xb56a <PE0_set_dir>
    b946:	81 e0       	ldi	r24, 0x01	; 1
    b948:	0e 94 c4 5a 	call	0xb588	; 0xb588 <PE0_set_level>
    b94c:	89 81       	ldd	r24, Y+1	; 0x01
    b94e:	9a 81       	ldd	r25, Y+2	; 0x02
    b950:	ab 81       	ldd	r26, Y+3	; 0x03
    b952:	bc 81       	ldd	r27, Y+4	; 0x04
    b954:	bc 01       	movw	r22, r24
    b956:	cd 01       	movw	r24, r26
    b958:	0e 94 a9 6d 	call	0xdb52	; 0xdb52 <USART4_init>
    b95c:	00 00       	nop
    b95e:	24 96       	adiw	r28, 0x04	; 4
    b960:	cd bf       	out	0x3d, r28	; 61
    b962:	de bf       	out	0x3e, r29	; 62
    b964:	df 91       	pop	r29
    b966:	cf 91       	pop	r28
    b968:	08 95       	ret

0000b96a <serialbus_init>:
    b96a:	cf 93       	push	r28
    b96c:	df 93       	push	r29
    b96e:	cd b7       	in	r28, 0x3d	; 61
    b970:	de b7       	in	r29, 0x3e	; 62
    b972:	27 97       	sbiw	r28, 0x07	; 7
    b974:	cd bf       	out	0x3d, r28	; 61
    b976:	de bf       	out	0x3e, r29	; 62
    b978:	6b 83       	std	Y+3, r22	; 0x03
    b97a:	7c 83       	std	Y+4, r23	; 0x04
    b97c:	8d 83       	std	Y+5, r24	; 0x05
    b97e:	9e 83       	std	Y+6, r25	; 0x06
    b980:	4f 83       	std	Y+7, r20	; 0x07
    b982:	4f e3       	ldi	r20, 0x3F	; 63
    b984:	50 e0       	ldi	r21, 0x00	; 0
    b986:	60 e0       	ldi	r22, 0x00	; 0
    b988:	70 e0       	ldi	r23, 0x00	; 0
    b98a:	81 e1       	ldi	r24, 0x11	; 17
    b98c:	9a e4       	ldi	r25, 0x4A	; 74
    b98e:	0e 94 84 76 	call	0xed08	; 0xed08 <memset>
    b992:	19 82       	std	Y+1, r1	; 0x01
    b994:	1a 82       	std	Y+2, r1	; 0x02
    b996:	89 81       	ldd	r24, Y+1	; 0x01
    b998:	9a 81       	ldd	r25, Y+2	; 0x02
    b99a:	03 97       	sbiw	r24, 0x03	; 3
    b99c:	94 f4       	brge	.+36     	; 0xb9c2 <serialbus_init+0x58>
    b99e:	29 81       	ldd	r18, Y+1	; 0x01
    b9a0:	3a 81       	ldd	r19, Y+2	; 0x02
    b9a2:	49 e2       	ldi	r20, 0x29	; 41
    b9a4:	42 9f       	mul	r20, r18
    b9a6:	c0 01       	movw	r24, r0
    b9a8:	43 9f       	mul	r20, r19
    b9aa:	90 0d       	add	r25, r0
    b9ac:	11 24       	eor	r1, r1
    b9ae:	8a 56       	subi	r24, 0x6A	; 106
    b9b0:	96 4b       	sbci	r25, 0xB6	; 182
    b9b2:	fc 01       	movw	r30, r24
    b9b4:	10 82       	st	Z, r1
    b9b6:	89 81       	ldd	r24, Y+1	; 0x01
    b9b8:	9a 81       	ldd	r25, Y+2	; 0x02
    b9ba:	01 96       	adiw	r24, 0x01	; 1
    b9bc:	89 83       	std	Y+1, r24	; 0x01
    b9be:	9a 83       	std	Y+2, r25	; 0x02
    b9c0:	ea cf       	rjmp	.-44     	; 0xb996 <serialbus_init+0x2c>
    b9c2:	8f 81       	ldd	r24, Y+7	; 0x07
    b9c4:	86 30       	cpi	r24, 0x06	; 6
    b9c6:	21 f4       	brne	.+8      	; 0xb9d0 <serialbus_init+0x66>
    b9c8:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <g_serialbus_usart_number>
    b9cc:	87 30       	cpi	r24, 0x07	; 7
    b9ce:	b9 f4       	brne	.+46     	; 0xb9fe <serialbus_init+0x94>
    b9d0:	8f 81       	ldd	r24, Y+7	; 0x07
    b9d2:	84 30       	cpi	r24, 0x04	; 4
    b9d4:	49 f4       	brne	.+18     	; 0xb9e8 <serialbus_init+0x7e>
    b9d6:	8b 81       	ldd	r24, Y+3	; 0x03
    b9d8:	9c 81       	ldd	r25, Y+4	; 0x04
    b9da:	ad 81       	ldd	r26, Y+5	; 0x05
    b9dc:	be 81       	ldd	r27, Y+6	; 0x06
    b9de:	bc 01       	movw	r22, r24
    b9e0:	cd 01       	movw	r24, r26
    b9e2:	0e 94 90 5c 	call	0xb920	; 0xb920 <_ZL21USART4_initializationm>
    b9e6:	08 c0       	rjmp	.+16     	; 0xb9f8 <serialbus_init+0x8e>
    b9e8:	8b 81       	ldd	r24, Y+3	; 0x03
    b9ea:	9c 81       	ldd	r25, Y+4	; 0x04
    b9ec:	ad 81       	ldd	r26, Y+5	; 0x05
    b9ee:	be 81       	ldd	r27, Y+6	; 0x06
    b9f0:	bc 01       	movw	r22, r24
    b9f2:	cd 01       	movw	r24, r26
    b9f4:	0e 94 6b 5c 	call	0xb8d6	; 0xb8d6 <_ZL21USART1_initializationm>
    b9f8:	8f 81       	ldd	r24, Y+7	; 0x07
    b9fa:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <g_serialbus_usart_number>
    b9fe:	10 92 26 40 	sts	0x4026, r1	; 0x804026 <_ZL14g_bus_disabled>
    ba02:	00 00       	nop
    ba04:	27 96       	adiw	r28, 0x07	; 7
    ba06:	cd bf       	out	0x3d, r28	; 61
    ba08:	de bf       	out	0x3e, r29	; 62
    ba0a:	df 91       	pop	r29
    ba0c:	cf 91       	pop	r28
    ba0e:	08 95       	ret

0000ba10 <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    ba10:	cf 93       	push	r28
    ba12:	df 93       	push	r29
    ba14:	cd b7       	in	r28, 0x3d	; 61
    ba16:	de b7       	in	r29, 0x3e	; 62
    ba18:	27 97       	sbiw	r28, 0x07	; 7
    ba1a:	cd bf       	out	0x3d, r28	; 61
    ba1c:	de bf       	out	0x3e, r29	; 62
    ba1e:	8e 83       	std	Y+6, r24	; 0x06
    ba20:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    ba22:	81 e0       	ldi	r24, 0x01	; 1
    ba24:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    ba26:	88 ec       	ldi	r24, 0xC8	; 200
    ba28:	90 e0       	ldi	r25, 0x00	; 0
    ba2a:	8a 83       	std	Y+2, r24	; 0x02
    ba2c:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    ba2e:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    ba32:	88 23       	and	r24, r24
    ba34:	11 f0       	breq	.+4      	; 0xba3a <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    ba36:	89 81       	ldd	r24, Y+1	; 0x01
    ba38:	42 c0       	rjmp	.+132    	; 0xbabe <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    ba3a:	8e 81       	ldd	r24, Y+6	; 0x06
    ba3c:	9f 81       	ldd	r25, Y+7	; 0x07
    ba3e:	89 2b       	or	r24, r25
    ba40:	e9 f1       	breq	.+122    	; 0xbabc <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    ba42:	0e 94 3c 5b 	call	0xb678	; 0xb678 <nextEmptySBTxBuffer>
    ba46:	8c 83       	std	Y+4, r24	; 0x04
    ba48:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    ba4a:	8c 81       	ldd	r24, Y+4	; 0x04
    ba4c:	9d 81       	ldd	r25, Y+5	; 0x05
    ba4e:	89 2b       	or	r24, r25
    ba50:	01 f5       	brne	.+64     	; 0xba92 <_Z19serialbus_send_textPc+0x82>
    ba52:	8a 81       	ldd	r24, Y+2	; 0x02
    ba54:	9b 81       	ldd	r25, Y+3	; 0x03
    ba56:	89 2b       	or	r24, r25
    ba58:	e1 f0       	breq	.+56     	; 0xba92 <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    ba5a:	0e 94 1f 5c 	call	0xb83e	; 0xb83e <serialbusTxInProgress>
    ba5e:	88 23       	and	r24, r24
    ba60:	31 f0       	breq	.+12     	; 0xba6e <_Z19serialbus_send_textPc+0x5e>
    ba62:	8a 81       	ldd	r24, Y+2	; 0x02
    ba64:	9b 81       	ldd	r25, Y+3	; 0x03
    ba66:	89 2b       	or	r24, r25
    ba68:	11 f0       	breq	.+4      	; 0xba6e <_Z19serialbus_send_textPc+0x5e>
    ba6a:	81 e0       	ldi	r24, 0x01	; 1
    ba6c:	01 c0       	rjmp	.+2      	; 0xba70 <_Z19serialbus_send_textPc+0x60>
    ba6e:	80 e0       	ldi	r24, 0x00	; 0
    ba70:	88 23       	and	r24, r24
    ba72:	51 f0       	breq	.+20     	; 0xba88 <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    ba74:	8a 81       	ldd	r24, Y+2	; 0x02
    ba76:	9b 81       	ldd	r25, Y+3	; 0x03
    ba78:	89 2b       	or	r24, r25
    ba7a:	79 f3       	breq	.-34     	; 0xba5a <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    ba7c:	8a 81       	ldd	r24, Y+2	; 0x02
    ba7e:	9b 81       	ldd	r25, Y+3	; 0x03
    ba80:	01 97       	sbiw	r24, 0x01	; 1
    ba82:	8a 83       	std	Y+2, r24	; 0x02
    ba84:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    ba86:	e9 cf       	rjmp	.-46     	; 0xba5a <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    ba88:	0e 94 3c 5b 	call	0xb678	; 0xb678 <nextEmptySBTxBuffer>
    ba8c:	8c 83       	std	Y+4, r24	; 0x04
    ba8e:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    ba90:	dc cf       	rjmp	.-72     	; 0xba4a <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    ba92:	8c 81       	ldd	r24, Y+4	; 0x04
    ba94:	9d 81       	ldd	r25, Y+5	; 0x05
    ba96:	89 2b       	or	r24, r25
    ba98:	89 f0       	breq	.+34     	; 0xbabc <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    ba9a:	8f 81       	ldd	r24, Y+7	; 0x07
    ba9c:	8f 93       	push	r24
    ba9e:	8e 81       	ldd	r24, Y+6	; 0x06
    baa0:	8f 93       	push	r24
    baa2:	8d 81       	ldd	r24, Y+5	; 0x05
    baa4:	8f 93       	push	r24
    baa6:	8c 81       	ldd	r24, Y+4	; 0x04
    baa8:	8f 93       	push	r24
    baaa:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    baae:	0f 90       	pop	r0
    bab0:	0f 90       	pop	r0
    bab2:	0f 90       	pop	r0
    bab4:	0f 90       	pop	r0

			serialbus_start_tx();
    bab6:	0e 94 28 5c 	call	0xb850	; 0xb850 <_Z18serialbus_start_txv>
			err = false;
    baba:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    babc:	89 81       	ldd	r24, Y+1	; 0x01
}
    babe:	27 96       	adiw	r28, 0x07	; 7
    bac0:	cd bf       	out	0x3d, r28	; 61
    bac2:	de bf       	out	0x3e, r29	; 62
    bac4:	df 91       	pop	r29
    bac6:	cf 91       	pop	r28
    bac8:	08 95       	ret

0000baca <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    baca:	cf 93       	push	r28
    bacc:	df 93       	push	r29
    bace:	cd b7       	in	r28, 0x3d	; 61
    bad0:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    bad2:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    bad6:	88 23       	and	r24, r24
    bad8:	39 f4       	brne	.+14     	; 0xbae8 <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    bada:	8a e3       	ldi	r24, 0x3A	; 58
    badc:	96 e4       	ldi	r25, 0x46	; 70
    bade:	0e 94 08 5d 	call	0xba10	; 0xba10 <_Z19serialbus_send_textPc>
    bae2:	88 23       	and	r24, r24
    bae4:	11 f0       	breq	.+4      	; 0xbaea <sb_send_NewPrompt+0x20>
    bae6:	f9 cf       	rjmp	.-14     	; 0xbada <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    bae8:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    baea:	df 91       	pop	r29
    baec:	cf 91       	pop	r28
    baee:	08 95       	ret

0000baf0 <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    baf0:	cf 93       	push	r28
    baf2:	df 93       	push	r29
    baf4:	cd b7       	in	r28, 0x3d	; 61
    baf6:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    baf8:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    bafc:	88 23       	and	r24, r24
    bafe:	29 f4       	brne	.+10     	; 0xbb0a <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    bb00:	88 e3       	ldi	r24, 0x38	; 56
    bb02:	96 e4       	ldi	r25, 0x46	; 70
    bb04:	0e 94 08 5d 	call	0xba10	; 0xba10 <_Z19serialbus_send_textPc>
    bb08:	01 c0       	rjmp	.+2      	; 0xbb0c <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    bb0a:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    bb0c:	df 91       	pop	r29
    bb0e:	cf 91       	pop	r28
    bb10:	08 95       	ret

0000bb12 <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    bb12:	cf 93       	push	r28
    bb14:	df 93       	push	r29
    bb16:	1f 92       	push	r1
    bb18:	cd b7       	in	r28, 0x3d	; 61
    bb1a:	de b7       	in	r29, 0x3e	; 62
    bb1c:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    bb1e:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    bb22:	88 23       	and	r24, r24
    bb24:	51 f4       	brne	.+20     	; 0xbb3a <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    bb26:	89 81       	ldd	r24, Y+1	; 0x01
    bb28:	80 93 63 49 	sts	0x4963, r24	; 0x804963 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    bb2c:	10 92 64 49 	sts	0x4964, r1	; 0x804964 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    bb30:	83 e6       	ldi	r24, 0x63	; 99
    bb32:	99 e4       	ldi	r25, 0x49	; 73
    bb34:	0e 94 08 5d 	call	0xba10	; 0xba10 <_Z19serialbus_send_textPc>
    bb38:	01 c0       	rjmp	.+2      	; 0xbb3c <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    bb3a:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    bb3c:	0f 90       	pop	r0
    bb3e:	df 91       	pop	r29
    bb40:	cf 91       	pop	r28
    bb42:	08 95       	ret

0000bb44 <sb_send_string>:

bool sb_send_string(char* str)
{
    bb44:	cf 93       	push	r28
    bb46:	df 93       	push	r29
    bb48:	cd b7       	in	r28, 0x3d	; 61
    bb4a:	de b7       	in	r29, 0x3e	; 62
    bb4c:	e8 97       	sbiw	r28, 0x38	; 56
    bb4e:	cd bf       	out	0x3d, r28	; 61
    bb50:	de bf       	out	0x3e, r29	; 62
    bb52:	8f ab       	std	Y+55, r24	; 0x37
    bb54:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    bb56:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    bb58:	19 82       	std	Y+1, r1	; 0x01
    bb5a:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    bb5c:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    bb5e:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <_ZL14g_bus_disabled>
    bb62:	88 23       	and	r24, r24
    bb64:	11 f0       	breq	.+4      	; 0xbb6a <sb_send_string+0x26>
	{
		return( true);
    bb66:	81 e0       	ldi	r24, 0x01	; 1
    bb68:	70 c0       	rjmp	.+224    	; 0xbc4a <sb_send_string+0x106>
	}

	if(str == NULL)
    bb6a:	8f a9       	ldd	r24, Y+55	; 0x37
    bb6c:	98 ad       	ldd	r25, Y+56	; 0x38
    bb6e:	89 2b       	or	r24, r25
    bb70:	11 f4       	brne	.+4      	; 0xbb76 <sb_send_string+0x32>
	{
		return( true);
    bb72:	81 e0       	ldi	r24, 0x01	; 1
    bb74:	6a c0       	rjmp	.+212    	; 0xbc4a <sb_send_string+0x106>
	}

	if(!*str)
    bb76:	8f a9       	ldd	r24, Y+55	; 0x37
    bb78:	98 ad       	ldd	r25, Y+56	; 0x38
    bb7a:	fc 01       	movw	r30, r24
    bb7c:	80 81       	ld	r24, Z
    bb7e:	88 23       	and	r24, r24
    bb80:	11 f4       	brne	.+4      	; 0xbb86 <sb_send_string+0x42>
	{
		return(true);
    bb82:	81 e0       	ldi	r24, 0x01	; 1
    bb84:	62 c0       	rjmp	.+196    	; 0xbc4a <sb_send_string+0x106>
	}

	length = strlen(str);
    bb86:	8f a9       	ldd	r24, Y+55	; 0x37
    bb88:	98 ad       	ldd	r25, Y+56	; 0x38
    bb8a:	0e 94 a8 76 	call	0xed50	; 0xed50 <strlen>
    bb8e:	8d 83       	std	Y+5, r24	; 0x05
    bb90:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    bb92:	2d 81       	ldd	r18, Y+5	; 0x05
    bb94:	3e 81       	ldd	r19, Y+6	; 0x06
    bb96:	89 81       	ldd	r24, Y+1	; 0x01
    bb98:	9a 81       	ldd	r25, Y+2	; 0x02
    bb9a:	a9 01       	movw	r20, r18
    bb9c:	48 1b       	sub	r20, r24
    bb9e:	59 0b       	sbc	r21, r25
    bba0:	ca 01       	movw	r24, r20
    bba2:	8f 83       	std	Y+7, r24	; 0x07
    bba4:	98 87       	std	Y+8, r25	; 0x08
    bba6:	89 e2       	ldi	r24, 0x29	; 41
    bba8:	90 e0       	ldi	r25, 0x00	; 0
    bbaa:	89 87       	std	Y+9, r24	; 0x09
    bbac:	9a 87       	std	Y+10, r25	; 0x0a
    bbae:	2f 81       	ldd	r18, Y+7	; 0x07
    bbb0:	38 85       	ldd	r19, Y+8	; 0x08
    bbb2:	89 85       	ldd	r24, Y+9	; 0x09
    bbb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    bbb6:	28 17       	cp	r18, r24
    bbb8:	39 07       	cpc	r19, r25
    bbba:	18 f4       	brcc	.+6      	; 0xbbc2 <sb_send_string+0x7e>
    bbbc:	8f 81       	ldd	r24, Y+7	; 0x07
    bbbe:	98 85       	ldd	r25, Y+8	; 0x08
    bbc0:	02 c0       	rjmp	.+4      	; 0xbbc6 <sb_send_string+0x82>
    bbc2:	89 85       	ldd	r24, Y+9	; 0x09
    bbc4:	9a 85       	ldd	r25, Y+10	; 0x0a
    bbc6:	8b 87       	std	Y+11, r24	; 0x0b
    bbc8:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    bbca:	2f a9       	ldd	r18, Y+55	; 0x37
    bbcc:	38 ad       	ldd	r19, Y+56	; 0x38
    bbce:	89 81       	ldd	r24, Y+1	; 0x01
    bbd0:	9a 81       	ldd	r25, Y+2	; 0x02
    bbd2:	28 0f       	add	r18, r24
    bbd4:	39 1f       	adc	r19, r25
    bbd6:	4b 85       	ldd	r20, Y+11	; 0x0b
    bbd8:	5c 85       	ldd	r21, Y+12	; 0x0c
    bbda:	ce 01       	movw	r24, r28
    bbdc:	0d 96       	adiw	r24, 0x0d	; 13
    bbde:	b9 01       	movw	r22, r18
    bbe0:	0e 94 b1 76 	call	0xed62	; 0xed62 <strncpy>

		buf[lengthToSend] = '\0';
    bbe4:	9e 01       	movw	r18, r28
    bbe6:	23 5f       	subi	r18, 0xF3	; 243
    bbe8:	3f 4f       	sbci	r19, 0xFF	; 255
    bbea:	8b 85       	ldd	r24, Y+11	; 0x0b
    bbec:	9c 85       	ldd	r25, Y+12	; 0x0c
    bbee:	82 0f       	add	r24, r18
    bbf0:	93 1f       	adc	r25, r19
    bbf2:	fc 01       	movw	r30, r24
    bbf4:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    bbf6:	ce 01       	movw	r24, r28
    bbf8:	0d 96       	adiw	r24, 0x0d	; 13
    bbfa:	0e 94 08 5d 	call	0xba10	; 0xba10 <_Z19serialbus_send_textPc>
    bbfe:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    bc00:	9b 81       	ldd	r25, Y+3	; 0x03
    bc02:	81 e0       	ldi	r24, 0x01	; 1
    bc04:	89 27       	eor	r24, r25
    bc06:	88 23       	and	r24, r24
    bc08:	29 f0       	breq	.+10     	; 0xbc14 <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    bc0a:	0e 94 1f 5c 	call	0xb83e	; 0xb83e <serialbusTxInProgress>
    bc0e:	88 23       	and	r24, r24
    bc10:	09 f0       	breq	.+2      	; 0xbc14 <sb_send_string+0xd0>
    bc12:	fb cf       	rjmp	.-10     	; 0xbc0a <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    bc14:	29 81       	ldd	r18, Y+1	; 0x01
    bc16:	3a 81       	ldd	r19, Y+2	; 0x02
    bc18:	8b 85       	ldd	r24, Y+11	; 0x0b
    bc1a:	9c 85       	ldd	r25, Y+12	; 0x0c
    bc1c:	82 0f       	add	r24, r18
    bc1e:	93 1f       	adc	r25, r19
    bc20:	89 83       	std	Y+1, r24	; 0x01
    bc22:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    bc24:	8b 81       	ldd	r24, Y+3	; 0x03
    bc26:	88 23       	and	r24, r24
    bc28:	39 f4       	brne	.+14     	; 0xbc38 <sb_send_string+0xf4>
    bc2a:	29 81       	ldd	r18, Y+1	; 0x01
    bc2c:	3a 81       	ldd	r19, Y+2	; 0x02
    bc2e:	8d 81       	ldd	r24, Y+5	; 0x05
    bc30:	9e 81       	ldd	r25, Y+6	; 0x06
    bc32:	28 17       	cp	r18, r24
    bc34:	39 07       	cpc	r19, r25
    bc36:	10 f0       	brcs	.+4      	; 0xbc3c <sb_send_string+0xf8>
    bc38:	81 e0       	ldi	r24, 0x01	; 1
    bc3a:	01 c0       	rjmp	.+2      	; 0xbc3e <sb_send_string+0xfa>
    bc3c:	80 e0       	ldi	r24, 0x00	; 0
    bc3e:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    bc40:	8c 81       	ldd	r24, Y+4	; 0x04
    bc42:	88 23       	and	r24, r24
    bc44:	09 f4       	brne	.+2      	; 0xbc48 <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    bc46:	a5 cf       	rjmp	.-182    	; 0xbb92 <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    bc48:	8b 81       	ldd	r24, Y+3	; 0x03
}
    bc4a:	e8 96       	adiw	r28, 0x38	; 56
    bc4c:	cd bf       	out	0x3d, r28	; 61
    bc4e:	de bf       	out	0x3e, r29	; 62
    bc50:	df 91       	pop	r29
    bc52:	cf 91       	pop	r28
    bc54:	08 95       	ret

0000bc56 <si5351_init>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    bc56:	cf 93       	push	r28
    bc58:	df 93       	push	r29
    bc5a:	cd b7       	in	r28, 0x3d	; 61
    bc5c:	de b7       	in	r29, 0x3e	; 62
    bc5e:	28 97       	sbiw	r28, 0x08	; 8
    bc60:	cd bf       	out	0x3d, r28	; 61
    bc62:	de bf       	out	0x3e, r29	; 62
    bc64:	8c 83       	std	Y+4, r24	; 0x04
    bc66:	4d 83       	std	Y+5, r20	; 0x05
    bc68:	5e 83       	std	Y+6, r21	; 0x06
    bc6a:	6f 83       	std	Y+7, r22	; 0x07
    bc6c:	78 87       	std	Y+8, r23	; 0x08
    bc6e:	0e 94 e8 4a 	call	0x95d0	; 0x95d0 <I2C_1_Init>
    bc72:	10 92 93 4a 	sts	0x4A93, r1	; 0x804a93 <_ZL8freqVCOB>
    bc76:	10 92 94 4a 	sts	0x4A94, r1	; 0x804a94 <_ZL8freqVCOB+0x1>
    bc7a:	10 92 95 4a 	sts	0x4A95, r1	; 0x804a95 <_ZL8freqVCOB+0x2>
    bc7e:	10 92 96 4a 	sts	0x4A96, r1	; 0x804a96 <_ZL8freqVCOB+0x3>
    bc82:	80 e4       	ldi	r24, 0x40	; 64
    bc84:	98 e7       	ldi	r25, 0x78	; 120
    bc86:	ad e7       	ldi	r26, 0x7D	; 125
    bc88:	b1 e0       	ldi	r27, 0x01	; 1
    bc8a:	80 93 27 40 	sts	0x4027, r24	; 0x804027 <_ZL9xtal_freq>
    bc8e:	90 93 28 40 	sts	0x4028, r25	; 0x804028 <_ZL9xtal_freq+0x1>
    bc92:	a0 93 29 40 	sts	0x4029, r26	; 0x804029 <_ZL9xtal_freq+0x2>
    bc96:	b0 93 2a 40 	sts	0x402A, r27	; 0x80402a <_ZL9xtal_freq+0x3>
    bc9a:	10 92 97 4a 	sts	0x4A97, r1	; 0x804a97 <_ZL17enabledClocksMask>
    bc9e:	8f ef       	ldi	r24, 0xFF	; 255
    bca0:	8a 83       	std	Y+2, r24	; 0x02
    bca2:	ce 01       	movw	r24, r28
    bca4:	02 96       	adiw	r24, 0x02	; 2
    bca6:	41 e0       	ldi	r20, 0x01	; 1
    bca8:	bc 01       	movw	r22, r24
    bcaa:	83 e0       	ldi	r24, 0x03	; 3
    bcac:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bcb0:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ11si5351_initE3err>
    bcb4:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bcb8:	88 23       	and	r24, r24
    bcba:	19 f0       	breq	.+6      	; 0xbcc2 <si5351_init+0x6c>
    bcbc:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bcc0:	92 c0       	rjmp	.+292    	; 0xbde6 <si5351_init+0x190>
    bcc2:	8c ec       	ldi	r24, 0xCC	; 204
    bcc4:	8a 83       	std	Y+2, r24	; 0x02
    bcc6:	ce 01       	movw	r24, r28
    bcc8:	02 96       	adiw	r24, 0x02	; 2
    bcca:	41 e0       	ldi	r20, 0x01	; 1
    bccc:	bc 01       	movw	r22, r24
    bcce:	80 e1       	ldi	r24, 0x10	; 16
    bcd0:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bcd4:	98 2f       	mov	r25, r24
    bcd6:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bcda:	89 2b       	or	r24, r25
    bcdc:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ11si5351_initE3err>
    bce0:	ce 01       	movw	r24, r28
    bce2:	02 96       	adiw	r24, 0x02	; 2
    bce4:	41 e0       	ldi	r20, 0x01	; 1
    bce6:	bc 01       	movw	r22, r24
    bce8:	81 e1       	ldi	r24, 0x11	; 17
    bcea:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bcee:	98 2f       	mov	r25, r24
    bcf0:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bcf4:	89 2b       	or	r24, r25
    bcf6:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ11si5351_initE3err>
    bcfa:	ce 01       	movw	r24, r28
    bcfc:	02 96       	adiw	r24, 0x02	; 2
    bcfe:	41 e0       	ldi	r20, 0x01	; 1
    bd00:	bc 01       	movw	r22, r24
    bd02:	82 e1       	ldi	r24, 0x12	; 18
    bd04:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bd08:	98 2f       	mov	r25, r24
    bd0a:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bd0e:	89 2b       	or	r24, r25
    bd10:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ11si5351_initE3err>
    bd14:	82 e1       	ldi	r24, 0x12	; 18
    bd16:	89 83       	std	Y+1, r24	; 0x01
    bd18:	99 81       	ldd	r25, Y+1	; 0x01
    bd1a:	8c 81       	ldd	r24, Y+4	; 0x04
    bd1c:	89 2b       	or	r24, r25
    bd1e:	89 83       	std	Y+1, r24	; 0x01
    bd20:	89 81       	ldd	r24, Y+1	; 0x01
    bd22:	8a 83       	std	Y+2, r24	; 0x02
    bd24:	ce 01       	movw	r24, r28
    bd26:	02 96       	adiw	r24, 0x02	; 2
    bd28:	41 e0       	ldi	r20, 0x01	; 1
    bd2a:	bc 01       	movw	r22, r24
    bd2c:	87 eb       	ldi	r24, 0xB7	; 183
    bd2e:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bd32:	98 2f       	mov	r25, r24
    bd34:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bd38:	89 2b       	or	r24, r25
    bd3a:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ11si5351_initE3err>
    bd3e:	8d 81       	ldd	r24, Y+5	; 0x05
    bd40:	9e 81       	ldd	r25, Y+6	; 0x06
    bd42:	af 81       	ldd	r26, Y+7	; 0x07
    bd44:	b8 85       	ldd	r27, Y+8	; 0x08
    bd46:	89 2b       	or	r24, r25
    bd48:	8a 2b       	or	r24, r26
    bd4a:	8b 2b       	or	r24, r27
    bd4c:	41 f4       	brne	.+16     	; 0xbd5e <si5351_init+0x108>
    bd4e:	80 e4       	ldi	r24, 0x40	; 64
    bd50:	98 e7       	ldi	r25, 0x78	; 120
    bd52:	ad e7       	ldi	r26, 0x7D	; 125
    bd54:	b1 e0       	ldi	r27, 0x01	; 1
    bd56:	8d 83       	std	Y+5, r24	; 0x05
    bd58:	9e 83       	std	Y+6, r25	; 0x06
    bd5a:	af 83       	std	Y+7, r26	; 0x07
    bd5c:	b8 87       	std	Y+8, r27	; 0x08
    bd5e:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL9xtal_freq>
    bd62:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <_ZL9xtal_freq+0x1>
    bd66:	a0 91 29 40 	lds	r26, 0x4029	; 0x804029 <_ZL9xtal_freq+0x2>
    bd6a:	b0 91 2a 40 	lds	r27, 0x402A	; 0x80402a <_ZL9xtal_freq+0x3>
    bd6e:	2d 81       	ldd	r18, Y+5	; 0x05
    bd70:	3e 81       	ldd	r19, Y+6	; 0x06
    bd72:	4f 81       	ldd	r20, Y+7	; 0x07
    bd74:	58 85       	ldd	r21, Y+8	; 0x08
    bd76:	28 17       	cp	r18, r24
    bd78:	39 07       	cpc	r19, r25
    bd7a:	4a 07       	cpc	r20, r26
    bd7c:	5b 07       	cpc	r21, r27
    bd7e:	59 f1       	breq	.+86     	; 0xbdd6 <si5351_init+0x180>
    bd80:	ce 01       	movw	r24, r28
    bd82:	02 96       	adiw	r24, 0x02	; 2
    bd84:	41 e0       	ldi	r20, 0x01	; 1
    bd86:	bc 01       	movw	r22, r24
    bd88:	8f e0       	ldi	r24, 0x0F	; 15
    bd8a:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    bd8e:	88 23       	and	r24, r24
    bd90:	11 f0       	breq	.+4      	; 0xbd96 <si5351_init+0x140>
    bd92:	81 e0       	ldi	r24, 0x01	; 1
    bd94:	28 c0       	rjmp	.+80     	; 0xbde6 <si5351_init+0x190>
    bd96:	8a 81       	ldd	r24, Y+2	; 0x02
    bd98:	89 83       	std	Y+1, r24	; 0x01
    bd9a:	89 81       	ldd	r24, Y+1	; 0x01
    bd9c:	8f 73       	andi	r24, 0x3F	; 63
    bd9e:	89 83       	std	Y+1, r24	; 0x01
    bda0:	8d 81       	ldd	r24, Y+5	; 0x05
    bda2:	9e 81       	ldd	r25, Y+6	; 0x06
    bda4:	af 81       	ldd	r26, Y+7	; 0x07
    bda6:	b8 85       	ldd	r27, Y+8	; 0x08
    bda8:	80 93 27 40 	sts	0x4027, r24	; 0x804027 <_ZL9xtal_freq>
    bdac:	90 93 28 40 	sts	0x4028, r25	; 0x804028 <_ZL9xtal_freq+0x1>
    bdb0:	a0 93 29 40 	sts	0x4029, r26	; 0x804029 <_ZL9xtal_freq+0x2>
    bdb4:	b0 93 2a 40 	sts	0x402A, r27	; 0x80402a <_ZL9xtal_freq+0x3>
    bdb8:	89 81       	ldd	r24, Y+1	; 0x01
    bdba:	8a 83       	std	Y+2, r24	; 0x02
    bdbc:	ce 01       	movw	r24, r28
    bdbe:	02 96       	adiw	r24, 0x02	; 2
    bdc0:	41 e0       	ldi	r20, 0x01	; 1
    bdc2:	bc 01       	movw	r22, r24
    bdc4:	8f e0       	ldi	r24, 0x0F	; 15
    bdc6:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bdca:	98 2f       	mov	r25, r24
    bdcc:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bdd0:	89 2b       	or	r24, r25
    bdd2:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZZ11si5351_initE3err>
    bdd6:	90 91 a5 4a 	lds	r25, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bdda:	81 e0       	ldi	r24, 0x01	; 1
    bddc:	89 27       	eor	r24, r25
    bdde:	80 93 a4 4a 	sts	0x4AA4, r24	; 0x804aa4 <g_si5351_initialized>
    bde2:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZZ11si5351_initE3err>
    bde6:	28 96       	adiw	r28, 0x08	; 8
    bde8:	cd bf       	out	0x3d, r28	; 61
    bdea:	de bf       	out	0x3e, r29	; 62
    bdec:	df 91       	pop	r29
    bdee:	cf 91       	pop	r28
    bdf0:	08 95       	ret

0000bdf2 <si5351_set_freq>:
    bdf2:	8f 92       	push	r8
    bdf4:	af 92       	push	r10
    bdf6:	cf 92       	push	r12
    bdf8:	df 92       	push	r13
    bdfa:	ef 92       	push	r14
    bdfc:	ff 92       	push	r15
    bdfe:	0f 93       	push	r16
    be00:	1f 93       	push	r17
    be02:	cf 93       	push	r28
    be04:	df 93       	push	r29
    be06:	cd b7       	in	r28, 0x3d	; 61
    be08:	de b7       	in	r29, 0x3e	; 62
    be0a:	6d 97       	sbiw	r28, 0x1d	; 29
    be0c:	cd bf       	out	0x3d, r28	; 61
    be0e:	de bf       	out	0x3e, r29	; 62
    be10:	68 8f       	std	Y+24, r22	; 0x18
    be12:	79 8f       	std	Y+25, r23	; 0x19
    be14:	8a 8f       	std	Y+26, r24	; 0x1a
    be16:	9b 8f       	std	Y+27, r25	; 0x1b
    be18:	4c 8f       	std	Y+28, r20	; 0x1c
    be1a:	2d 8f       	std	Y+29, r18	; 0x1d
    be1c:	19 82       	std	Y+1, r1	; 0x01
    be1e:	1a 82       	std	Y+2, r1	; 0x02
    be20:	1b 82       	std	Y+3, r1	; 0x03
    be22:	1c 82       	std	Y+4, r1	; 0x04
    be24:	1f 82       	std	Y+7, r1	; 0x07
    be26:	1c 8a       	std	Y+20, r1	; 0x14
    be28:	1d 8a       	std	Y+21, r1	; 0x15
    be2a:	90 91 a4 4a 	lds	r25, 0x4AA4	; 0x804aa4 <g_si5351_initialized>
    be2e:	81 e0       	ldi	r24, 0x01	; 1
    be30:	89 27       	eor	r24, r25
    be32:	88 23       	and	r24, r24
    be34:	11 f0       	breq	.+4      	; 0xbe3a <si5351_set_freq+0x48>
    be36:	81 e0       	ldi	r24, 0x01	; 1
    be38:	6f c1       	rjmp	.+734    	; 0xc118 <si5351_set_freq+0x326>
    be3a:	88 8d       	ldd	r24, Y+24	; 0x18
    be3c:	99 8d       	ldd	r25, Y+25	; 0x19
    be3e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    be40:	bb 8d       	ldd	r27, Y+27	; 0x1b
    be42:	80 34       	cpi	r24, 0x40	; 64
    be44:	92 44       	sbci	r25, 0x42	; 66
    be46:	af 40       	sbci	r26, 0x0F	; 15
    be48:	b1 05       	cpc	r27, r1
    be4a:	08 f1       	brcs	.+66     	; 0xbe8e <si5351_set_freq+0x9c>
    be4c:	88 8d       	ldd	r24, Y+24	; 0x18
    be4e:	99 8d       	ldd	r25, Y+25	; 0x19
    be50:	aa 8d       	ldd	r26, Y+26	; 0x1a
    be52:	bb 8d       	ldd	r27, Y+27	; 0x1b
    be54:	24 e6       	ldi	r18, 0x64	; 100
    be56:	30 e0       	ldi	r19, 0x00	; 0
    be58:	40 e0       	ldi	r20, 0x00	; 0
    be5a:	50 e0       	ldi	r21, 0x00	; 0
    be5c:	bc 01       	movw	r22, r24
    be5e:	cd 01       	movw	r24, r26
    be60:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    be64:	da 01       	movw	r26, r20
    be66:	c9 01       	movw	r24, r18
    be68:	88 8f       	std	Y+24, r24	; 0x18
    be6a:	99 8f       	std	Y+25, r25	; 0x19
    be6c:	aa 8f       	std	Y+26, r26	; 0x1a
    be6e:	bb 8f       	std	Y+27, r27	; 0x1b
    be70:	28 8d       	ldd	r18, Y+24	; 0x18
    be72:	39 8d       	ldd	r19, Y+25	; 0x19
    be74:	4a 8d       	ldd	r20, Y+26	; 0x1a
    be76:	5b 8d       	ldd	r21, Y+27	; 0x1b
    be78:	84 e6       	ldi	r24, 0x64	; 100
    be7a:	90 e0       	ldi	r25, 0x00	; 0
    be7c:	dc 01       	movw	r26, r24
    be7e:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    be82:	dc 01       	movw	r26, r24
    be84:	cb 01       	movw	r24, r22
    be86:	88 8f       	std	Y+24, r24	; 0x18
    be88:	99 8f       	std	Y+25, r25	; 0x19
    be8a:	aa 8f       	std	Y+26, r26	; 0x1a
    be8c:	bb 8f       	std	Y+27, r27	; 0x1b
    be8e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    be90:	88 2f       	mov	r24, r24
    be92:	90 e0       	ldi	r25, 0x00	; 0
    be94:	81 30       	cpi	r24, 0x01	; 1
    be96:	91 05       	cpc	r25, r1
    be98:	e9 f0       	breq	.+58     	; 0xbed4 <si5351_set_freq+0xe2>
    be9a:	82 30       	cpi	r24, 0x02	; 2
    be9c:	91 05       	cpc	r25, r1
    be9e:	09 f4       	brne	.+2      	; 0xbea2 <si5351_set_freq+0xb0>
    bea0:	3f c0       	rjmp	.+126    	; 0xbf20 <si5351_set_freq+0x12e>
    bea2:	89 2b       	or	r24, r25
    bea4:	09 f0       	breq	.+2      	; 0xbea8 <si5351_set_freq+0xb6>
    bea6:	62 c0       	rjmp	.+196    	; 0xbf6c <si5351_set_freq+0x17a>
    bea8:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    beac:	81 60       	ori	r24, 0x01	; 1
    beae:	80 93 97 4a 	sts	0x4A97, r24	; 0x804a97 <_ZL17enabledClocksMask>
    beb2:	80 e1       	ldi	r24, 0x10	; 16
    beb4:	8e 83       	std	Y+6, r24	; 0x06
    beb6:	81 e0       	ldi	r24, 0x01	; 1
    beb8:	8d 83       	std	Y+5, r24	; 0x05
    beba:	88 8d       	ldd	r24, Y+24	; 0x18
    bebc:	99 8d       	ldd	r25, Y+25	; 0x19
    bebe:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bec0:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bec2:	80 93 98 4a 	sts	0x4A98, r24	; 0x804a98 <_ZL9clock_out>
    bec6:	90 93 99 4a 	sts	0x4A99, r25	; 0x804a99 <_ZL9clock_out+0x1>
    beca:	a0 93 9a 4a 	sts	0x4A9A, r26	; 0x804a9a <_ZL9clock_out+0x2>
    bece:	b0 93 9b 4a 	sts	0x4A9B, r27	; 0x804a9b <_ZL9clock_out+0x3>
    bed2:	4e c0       	rjmp	.+156    	; 0xbf70 <si5351_set_freq+0x17e>
    bed4:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    bed8:	82 60       	ori	r24, 0x02	; 2
    beda:	80 93 97 4a 	sts	0x4A97, r24	; 0x804a97 <_ZL17enabledClocksMask>
    bede:	81 e1       	ldi	r24, 0x11	; 17
    bee0:	8e 83       	std	Y+6, r24	; 0x06
    bee2:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    bee6:	80 95       	com	r24
    bee8:	8a 6f       	ori	r24, 0xFA	; 250
    beea:	8e 8b       	std	Y+22, r24	; 0x16
    beec:	ce 01       	movw	r24, r28
    beee:	46 96       	adiw	r24, 0x16	; 22
    bef0:	41 e0       	ldi	r20, 0x01	; 1
    bef2:	bc 01       	movw	r22, r24
    bef4:	83 e0       	ldi	r24, 0x03	; 3
    bef6:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    befa:	88 23       	and	r24, r24
    befc:	11 f0       	breq	.+4      	; 0xbf02 <si5351_set_freq+0x110>
    befe:	81 e0       	ldi	r24, 0x01	; 1
    bf00:	0b c1       	rjmp	.+534    	; 0xc118 <si5351_set_freq+0x326>
    bf02:	82 e0       	ldi	r24, 0x02	; 2
    bf04:	8d 83       	std	Y+5, r24	; 0x05
    bf06:	88 8d       	ldd	r24, Y+24	; 0x18
    bf08:	99 8d       	ldd	r25, Y+25	; 0x19
    bf0a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bf0c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bf0e:	80 93 9c 4a 	sts	0x4A9C, r24	; 0x804a9c <_ZL9clock_out+0x4>
    bf12:	90 93 9d 4a 	sts	0x4A9D, r25	; 0x804a9d <_ZL9clock_out+0x5>
    bf16:	a0 93 9e 4a 	sts	0x4A9E, r26	; 0x804a9e <_ZL9clock_out+0x6>
    bf1a:	b0 93 9f 4a 	sts	0x4A9F, r27	; 0x804a9f <_ZL9clock_out+0x7>
    bf1e:	28 c0       	rjmp	.+80     	; 0xbf70 <si5351_set_freq+0x17e>
    bf20:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    bf24:	84 60       	ori	r24, 0x04	; 4
    bf26:	80 93 97 4a 	sts	0x4A97, r24	; 0x804a97 <_ZL17enabledClocksMask>
    bf2a:	82 e1       	ldi	r24, 0x12	; 18
    bf2c:	8e 83       	std	Y+6, r24	; 0x06
    bf2e:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    bf32:	80 95       	com	r24
    bf34:	8c 6f       	ori	r24, 0xFC	; 252
    bf36:	8e 8b       	std	Y+22, r24	; 0x16
    bf38:	ce 01       	movw	r24, r28
    bf3a:	46 96       	adiw	r24, 0x16	; 22
    bf3c:	41 e0       	ldi	r20, 0x01	; 1
    bf3e:	bc 01       	movw	r22, r24
    bf40:	83 e0       	ldi	r24, 0x03	; 3
    bf42:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    bf46:	88 23       	and	r24, r24
    bf48:	11 f0       	breq	.+4      	; 0xbf4e <si5351_set_freq+0x15c>
    bf4a:	81 e0       	ldi	r24, 0x01	; 1
    bf4c:	e5 c0       	rjmp	.+458    	; 0xc118 <si5351_set_freq+0x326>
    bf4e:	82 e0       	ldi	r24, 0x02	; 2
    bf50:	8d 83       	std	Y+5, r24	; 0x05
    bf52:	88 8d       	ldd	r24, Y+24	; 0x18
    bf54:	99 8d       	ldd	r25, Y+25	; 0x19
    bf56:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bf58:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bf5a:	80 93 a0 4a 	sts	0x4AA0, r24	; 0x804aa0 <_ZL9clock_out+0x8>
    bf5e:	90 93 a1 4a 	sts	0x4AA1, r25	; 0x804aa1 <_ZL9clock_out+0x9>
    bf62:	a0 93 a2 4a 	sts	0x4AA2, r26	; 0x804aa2 <_ZL9clock_out+0xa>
    bf66:	b0 93 a3 4a 	sts	0x4AA3, r27	; 0x804aa3 <_ZL9clock_out+0xb>
    bf6a:	02 c0       	rjmp	.+4      	; 0xbf70 <si5351_set_freq+0x17e>
    bf6c:	81 e0       	ldi	r24, 0x01	; 1
    bf6e:	d4 c0       	rjmp	.+424    	; 0xc118 <si5351_set_freq+0x326>
    bf70:	8d 81       	ldd	r24, Y+5	; 0x05
    bf72:	81 30       	cpi	r24, 0x01	; 1
    bf74:	61 f0       	breq	.+24     	; 0xbf8e <si5351_set_freq+0x19c>
    bf76:	80 91 93 4a 	lds	r24, 0x4A93	; 0x804a93 <_ZL8freqVCOB>
    bf7a:	90 91 94 4a 	lds	r25, 0x4A94	; 0x804a94 <_ZL8freqVCOB+0x1>
    bf7e:	a0 91 95 4a 	lds	r26, 0x4A95	; 0x804a95 <_ZL8freqVCOB+0x2>
    bf82:	b0 91 96 4a 	lds	r27, 0x4A96	; 0x804a96 <_ZL8freqVCOB+0x3>
    bf86:	89 2b       	or	r24, r25
    bf88:	8a 2b       	or	r24, r26
    bf8a:	8b 2b       	or	r24, r27
    bf8c:	c9 f4       	brne	.+50     	; 0xbfc0 <si5351_set_freq+0x1ce>
    bf8e:	be 01       	movw	r22, r28
    bf90:	6b 5e       	subi	r22, 0xEB	; 235
    bf92:	7f 4f       	sbci	r23, 0xFF	; 255
    bf94:	9e 01       	movw	r18, r28
    bf96:	2c 5e       	subi	r18, 0xEC	; 236
    bf98:	3f 4f       	sbci	r19, 0xFF	; 255
    bf9a:	ae 01       	movw	r20, r28
    bf9c:	48 5f       	subi	r20, 0xF8	; 248
    bf9e:	5f 4f       	sbci	r21, 0xFF	; 255
    bfa0:	88 8d       	ldd	r24, Y+24	; 0x18
    bfa2:	99 8d       	ldd	r25, Y+25	; 0x19
    bfa4:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bfa6:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bfa8:	8b 01       	movw	r16, r22
    bfaa:	bc 01       	movw	r22, r24
    bfac:	cd 01       	movw	r24, r26
    bfae:	0e 94 a4 63 	call	0xc748	; 0xc748 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    bfb2:	dc 01       	movw	r26, r24
    bfb4:	cb 01       	movw	r24, r22
    bfb6:	89 83       	std	Y+1, r24	; 0x01
    bfb8:	9a 83       	std	Y+2, r25	; 0x02
    bfba:	ab 83       	std	Y+3, r26	; 0x03
    bfbc:	bc 83       	std	Y+4, r27	; 0x04
    bfbe:	18 c0       	rjmp	.+48     	; 0xbff0 <si5351_set_freq+0x1fe>
    bfc0:	be 01       	movw	r22, r28
    bfc2:	6b 5e       	subi	r22, 0xEB	; 235
    bfc4:	7f 4f       	sbci	r23, 0xFF	; 255
    bfc6:	9e 01       	movw	r18, r28
    bfc8:	2c 5e       	subi	r18, 0xEC	; 236
    bfca:	3f 4f       	sbci	r19, 0xFF	; 255
    bfcc:	ae 01       	movw	r20, r28
    bfce:	48 5f       	subi	r20, 0xF8	; 248
    bfd0:	5f 4f       	sbci	r21, 0xFF	; 255
    bfd2:	88 8d       	ldd	r24, Y+24	; 0x18
    bfd4:	99 8d       	ldd	r25, Y+25	; 0x19
    bfd6:	aa 8d       	ldd	r26, Y+26	; 0x1a
    bfd8:	bb 8d       	ldd	r27, Y+27	; 0x1b
    bfda:	8b 01       	movw	r16, r22
    bfdc:	bc 01       	movw	r22, r24
    bfde:	cd 01       	movw	r24, r26
    bfe0:	0e 94 ae 64 	call	0xc95c	; 0xc95c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    bfe4:	dc 01       	movw	r26, r24
    bfe6:	cb 01       	movw	r24, r22
    bfe8:	88 8f       	std	Y+24, r24	; 0x18
    bfea:	99 8f       	std	Y+25, r25	; 0x19
    bfec:	aa 8f       	std	Y+26, r26	; 0x1a
    bfee:	bb 8f       	std	Y+27, r27	; 0x1b
    bff0:	6d 81       	ldd	r22, Y+5	; 0x05
    bff2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    bff4:	0e 94 93 66 	call	0xcd26	; 0xcd26 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    bff8:	88 23       	and	r24, r24
    bffa:	11 f0       	breq	.+4      	; 0xc000 <si5351_set_freq+0x20e>
    bffc:	81 e0       	ldi	r24, 0x01	; 1
    bffe:	8c c0       	rjmp	.+280    	; 0xc118 <si5351_set_freq+0x326>
    c000:	8d 89       	ldd	r24, Y+21	; 0x15
    c002:	9c 89       	ldd	r25, Y+20	; 0x14
    c004:	8f 93       	push	r24
    c006:	8f 80       	ldd	r8, Y+7	; 0x07
    c008:	a9 2e       	mov	r10, r25
    c00a:	c8 84       	ldd	r12, Y+8	; 0x08
    c00c:	d9 84       	ldd	r13, Y+9	; 0x09
    c00e:	ea 84       	ldd	r14, Y+10	; 0x0a
    c010:	fb 84       	ldd	r15, Y+11	; 0x0b
    c012:	0c 85       	ldd	r16, Y+12	; 0x0c
    c014:	1d 85       	ldd	r17, Y+13	; 0x0d
    c016:	2e 85       	ldd	r18, Y+14	; 0x0e
    c018:	3f 85       	ldd	r19, Y+15	; 0x0f
    c01a:	48 89       	ldd	r20, Y+16	; 0x10
    c01c:	59 89       	ldd	r21, Y+17	; 0x11
    c01e:	6a 89       	ldd	r22, Y+18	; 0x12
    c020:	7b 89       	ldd	r23, Y+19	; 0x13
    c022:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c024:	0e 94 d0 66 	call	0xcda0	; 0xcda0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    c028:	0f 90       	pop	r0
    c02a:	88 23       	and	r24, r24
    c02c:	11 f0       	breq	.+4      	; 0xc032 <si5351_set_freq+0x240>
    c02e:	81 e0       	ldi	r24, 0x01	; 1
    c030:	73 c0       	rjmp	.+230    	; 0xc118 <si5351_set_freq+0x326>
    c032:	89 81       	ldd	r24, Y+1	; 0x01
    c034:	9a 81       	ldd	r25, Y+2	; 0x02
    c036:	ab 81       	ldd	r26, Y+3	; 0x03
    c038:	bc 81       	ldd	r27, Y+4	; 0x04
    c03a:	89 2b       	or	r24, r25
    c03c:	8a 2b       	or	r24, r26
    c03e:	8b 2b       	or	r24, r27
    c040:	49 f0       	breq	.+18     	; 0xc054 <si5351_set_freq+0x262>
    c042:	89 81       	ldd	r24, Y+1	; 0x01
    c044:	9a 81       	ldd	r25, Y+2	; 0x02
    c046:	ab 81       	ldd	r26, Y+3	; 0x03
    c048:	bc 81       	ldd	r27, Y+4	; 0x04
    c04a:	4d 81       	ldd	r20, Y+5	; 0x05
    c04c:	bc 01       	movw	r22, r24
    c04e:	cd 01       	movw	r24, r26
    c050:	0e 94 42 61 	call	0xc284	; 0xc284 <_Z7set_pllm10si5351_pll>
    c054:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c056:	88 23       	and	r24, r24
    c058:	71 f0       	breq	.+28     	; 0xc076 <si5351_set_freq+0x284>
    c05a:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    c05e:	8e 8b       	std	Y+22, r24	; 0x16
    c060:	ce 01       	movw	r24, r28
    c062:	46 96       	adiw	r24, 0x16	; 22
    c064:	41 e0       	ldi	r20, 0x01	; 1
    c066:	bc 01       	movw	r22, r24
    c068:	83 e0       	ldi	r24, 0x03	; 3
    c06a:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c06e:	88 23       	and	r24, r24
    c070:	89 f0       	breq	.+34     	; 0xc094 <si5351_set_freq+0x2a2>
    c072:	81 e0       	ldi	r24, 0x01	; 1
    c074:	51 c0       	rjmp	.+162    	; 0xc118 <si5351_set_freq+0x326>
    c076:	80 91 97 4a 	lds	r24, 0x4A97	; 0x804a97 <_ZL17enabledClocksMask>
    c07a:	80 95       	com	r24
    c07c:	8e 8b       	std	Y+22, r24	; 0x16
    c07e:	ce 01       	movw	r24, r28
    c080:	46 96       	adiw	r24, 0x16	; 22
    c082:	41 e0       	ldi	r20, 0x01	; 1
    c084:	bc 01       	movw	r22, r24
    c086:	83 e0       	ldi	r24, 0x03	; 3
    c088:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c08c:	88 23       	and	r24, r24
    c08e:	11 f0       	breq	.+4      	; 0xc094 <si5351_set_freq+0x2a2>
    c090:	81 e0       	ldi	r24, 0x01	; 1
    c092:	42 c0       	rjmp	.+132    	; 0xc118 <si5351_set_freq+0x326>
    c094:	8d 81       	ldd	r24, Y+5	; 0x05
    c096:	81 30       	cpi	r24, 0x01	; 1
    c098:	69 f4       	brne	.+26     	; 0xc0b4 <si5351_set_freq+0x2c2>
    c09a:	8c e4       	ldi	r24, 0x4C	; 76
    c09c:	8e 8b       	std	Y+22, r24	; 0x16
    c09e:	ce 01       	movw	r24, r28
    c0a0:	46 96       	adiw	r24, 0x16	; 22
    c0a2:	41 e0       	ldi	r20, 0x01	; 1
    c0a4:	bc 01       	movw	r22, r24
    c0a6:	8e 81       	ldd	r24, Y+6	; 0x06
    c0a8:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c0ac:	88 23       	and	r24, r24
    c0ae:	99 f1       	breq	.+102    	; 0xc116 <si5351_set_freq+0x324>
    c0b0:	81 e0       	ldi	r24, 0x01	; 1
    c0b2:	32 c0       	rjmp	.+100    	; 0xc118 <si5351_set_freq+0x326>
    c0b4:	8c 89       	ldd	r24, Y+20	; 0x14
    c0b6:	88 23       	and	r24, r24
    c0b8:	69 f0       	breq	.+26     	; 0xc0d4 <si5351_set_freq+0x2e2>
    c0ba:	8c e6       	ldi	r24, 0x6C	; 108
    c0bc:	8e 8b       	std	Y+22, r24	; 0x16
    c0be:	ce 01       	movw	r24, r28
    c0c0:	46 96       	adiw	r24, 0x16	; 22
    c0c2:	41 e0       	ldi	r20, 0x01	; 1
    c0c4:	bc 01       	movw	r22, r24
    c0c6:	8e 81       	ldd	r24, Y+6	; 0x06
    c0c8:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c0cc:	88 23       	and	r24, r24
    c0ce:	79 f0       	breq	.+30     	; 0xc0ee <si5351_set_freq+0x2fc>
    c0d0:	81 e0       	ldi	r24, 0x01	; 1
    c0d2:	22 c0       	rjmp	.+68     	; 0xc118 <si5351_set_freq+0x326>
    c0d4:	8c e2       	ldi	r24, 0x2C	; 44
    c0d6:	8e 8b       	std	Y+22, r24	; 0x16
    c0d8:	ce 01       	movw	r24, r28
    c0da:	46 96       	adiw	r24, 0x16	; 22
    c0dc:	41 e0       	ldi	r20, 0x01	; 1
    c0de:	bc 01       	movw	r22, r24
    c0e0:	8e 81       	ldd	r24, Y+6	; 0x06
    c0e2:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c0e6:	88 23       	and	r24, r24
    c0e8:	11 f0       	breq	.+4      	; 0xc0ee <si5351_set_freq+0x2fc>
    c0ea:	81 e0       	ldi	r24, 0x01	; 1
    c0ec:	15 c0       	rjmp	.+42     	; 0xc118 <si5351_set_freq+0x326>
    c0ee:	89 81       	ldd	r24, Y+1	; 0x01
    c0f0:	9a 81       	ldd	r25, Y+2	; 0x02
    c0f2:	ab 81       	ldd	r26, Y+3	; 0x03
    c0f4:	bc 81       	ldd	r27, Y+4	; 0x04
    c0f6:	89 2b       	or	r24, r25
    c0f8:	8a 2b       	or	r24, r26
    c0fa:	8b 2b       	or	r24, r27
    c0fc:	61 f0       	breq	.+24     	; 0xc116 <si5351_set_freq+0x324>
    c0fe:	89 81       	ldd	r24, Y+1	; 0x01
    c100:	9a 81       	ldd	r25, Y+2	; 0x02
    c102:	ab 81       	ldd	r26, Y+3	; 0x03
    c104:	bc 81       	ldd	r27, Y+4	; 0x04
    c106:	80 93 93 4a 	sts	0x4A93, r24	; 0x804a93 <_ZL8freqVCOB>
    c10a:	90 93 94 4a 	sts	0x4A94, r25	; 0x804a94 <_ZL8freqVCOB+0x1>
    c10e:	a0 93 95 4a 	sts	0x4A95, r26	; 0x804a95 <_ZL8freqVCOB+0x2>
    c112:	b0 93 96 4a 	sts	0x4A96, r27	; 0x804a96 <_ZL8freqVCOB+0x3>
    c116:	80 e0       	ldi	r24, 0x00	; 0
    c118:	6d 96       	adiw	r28, 0x1d	; 29
    c11a:	cd bf       	out	0x3d, r28	; 61
    c11c:	de bf       	out	0x3e, r29	; 62
    c11e:	df 91       	pop	r29
    c120:	cf 91       	pop	r28
    c122:	1f 91       	pop	r17
    c124:	0f 91       	pop	r16
    c126:	ff 90       	pop	r15
    c128:	ef 90       	pop	r14
    c12a:	df 90       	pop	r13
    c12c:	cf 90       	pop	r12
    c12e:	af 90       	pop	r10
    c130:	8f 90       	pop	r8
    c132:	08 95       	ret

0000c134 <si5351_clock_enable>:
    c134:	cf 93       	push	r28
    c136:	df 93       	push	r29
    c138:	cd b7       	in	r28, 0x3d	; 61
    c13a:	de b7       	in	r29, 0x3e	; 62
    c13c:	25 97       	sbiw	r28, 0x05	; 5
    c13e:	cd bf       	out	0x3d, r28	; 61
    c140:	de bf       	out	0x3e, r29	; 62
    c142:	8c 83       	std	Y+4, r24	; 0x04
    c144:	6d 83       	std	Y+5, r22	; 0x05
    c146:	ce 01       	movw	r24, r28
    c148:	02 96       	adiw	r24, 0x02	; 2
    c14a:	41 e0       	ldi	r20, 0x01	; 1
    c14c:	bc 01       	movw	r22, r24
    c14e:	83 e0       	ldi	r24, 0x03	; 3
    c150:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    c154:	88 23       	and	r24, r24
    c156:	11 f0       	breq	.+4      	; 0xc15c <si5351_clock_enable+0x28>
    c158:	8c ef       	ldi	r24, 0xFC	; 252
    c15a:	31 c0       	rjmp	.+98     	; 0xc1be <si5351_clock_enable+0x8a>
    c15c:	8a 81       	ldd	r24, Y+2	; 0x02
    c15e:	89 83       	std	Y+1, r24	; 0x01
    c160:	8d 81       	ldd	r24, Y+5	; 0x05
    c162:	88 23       	and	r24, r24
    c164:	81 f0       	breq	.+32     	; 0xc186 <si5351_clock_enable+0x52>
    c166:	8c 81       	ldd	r24, Y+4	; 0x04
    c168:	28 2f       	mov	r18, r24
    c16a:	30 e0       	ldi	r19, 0x00	; 0
    c16c:	81 e0       	ldi	r24, 0x01	; 1
    c16e:	90 e0       	ldi	r25, 0x00	; 0
    c170:	02 c0       	rjmp	.+4      	; 0xc176 <si5351_clock_enable+0x42>
    c172:	88 0f       	add	r24, r24
    c174:	99 1f       	adc	r25, r25
    c176:	2a 95       	dec	r18
    c178:	e2 f7       	brpl	.-8      	; 0xc172 <si5351_clock_enable+0x3e>
    c17a:	98 2f       	mov	r25, r24
    c17c:	90 95       	com	r25
    c17e:	89 81       	ldd	r24, Y+1	; 0x01
    c180:	89 23       	and	r24, r25
    c182:	89 83       	std	Y+1, r24	; 0x01
    c184:	0e c0       	rjmp	.+28     	; 0xc1a2 <si5351_clock_enable+0x6e>
    c186:	8c 81       	ldd	r24, Y+4	; 0x04
    c188:	28 2f       	mov	r18, r24
    c18a:	30 e0       	ldi	r19, 0x00	; 0
    c18c:	81 e0       	ldi	r24, 0x01	; 1
    c18e:	90 e0       	ldi	r25, 0x00	; 0
    c190:	02 c0       	rjmp	.+4      	; 0xc196 <si5351_clock_enable+0x62>
    c192:	88 0f       	add	r24, r24
    c194:	99 1f       	adc	r25, r25
    c196:	2a 95       	dec	r18
    c198:	e2 f7       	brpl	.-8      	; 0xc192 <si5351_clock_enable+0x5e>
    c19a:	98 2f       	mov	r25, r24
    c19c:	89 81       	ldd	r24, Y+1	; 0x01
    c19e:	89 2b       	or	r24, r25
    c1a0:	89 83       	std	Y+1, r24	; 0x01
    c1a2:	89 81       	ldd	r24, Y+1	; 0x01
    c1a4:	8a 83       	std	Y+2, r24	; 0x02
    c1a6:	ce 01       	movw	r24, r28
    c1a8:	02 96       	adiw	r24, 0x02	; 2
    c1aa:	41 e0       	ldi	r20, 0x01	; 1
    c1ac:	bc 01       	movw	r22, r24
    c1ae:	83 e0       	ldi	r24, 0x03	; 3
    c1b0:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c1b4:	88 23       	and	r24, r24
    c1b6:	11 f0       	breq	.+4      	; 0xc1bc <si5351_clock_enable+0x88>
    c1b8:	8c ef       	ldi	r24, 0xFC	; 252
    c1ba:	01 c0       	rjmp	.+2      	; 0xc1be <si5351_clock_enable+0x8a>
    c1bc:	80 e0       	ldi	r24, 0x00	; 0
    c1be:	25 96       	adiw	r28, 0x05	; 5
    c1c0:	cd bf       	out	0x3d, r28	; 61
    c1c2:	de bf       	out	0x3e, r29	; 62
    c1c4:	df 91       	pop	r29
    c1c6:	cf 91       	pop	r28
    c1c8:	08 95       	ret

0000c1ca <si5351_drive_strength>:
    c1ca:	cf 93       	push	r28
    c1cc:	df 93       	push	r29
    c1ce:	cd b7       	in	r28, 0x3d	; 61
    c1d0:	de b7       	in	r29, 0x3e	; 62
    c1d2:	26 97       	sbiw	r28, 0x06	; 6
    c1d4:	cd bf       	out	0x3d, r28	; 61
    c1d6:	de bf       	out	0x3e, r29	; 62
    c1d8:	8d 83       	std	Y+5, r24	; 0x05
    c1da:	6e 83       	std	Y+6, r22	; 0x06
    c1dc:	83 e0       	ldi	r24, 0x03	; 3
    c1de:	8a 83       	std	Y+2, r24	; 0x02
    c1e0:	8d 81       	ldd	r24, Y+5	; 0x05
    c1e2:	20 e1       	ldi	r18, 0x10	; 16
    c1e4:	28 0f       	add	r18, r24
    c1e6:	ce 01       	movw	r24, r28
    c1e8:	03 96       	adiw	r24, 0x03	; 3
    c1ea:	41 e0       	ldi	r20, 0x01	; 1
    c1ec:	bc 01       	movw	r22, r24
    c1ee:	82 2f       	mov	r24, r18
    c1f0:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    c1f4:	88 23       	and	r24, r24
    c1f6:	11 f0       	breq	.+4      	; 0xc1fc <si5351_drive_strength+0x32>
    c1f8:	8b ef       	ldi	r24, 0xFB	; 251
    c1fa:	3e c0       	rjmp	.+124    	; 0xc278 <si5351_drive_strength+0xae>
    c1fc:	8b 81       	ldd	r24, Y+3	; 0x03
    c1fe:	89 83       	std	Y+1, r24	; 0x01
    c200:	8e 81       	ldd	r24, Y+6	; 0x06
    c202:	88 2f       	mov	r24, r24
    c204:	90 e0       	ldi	r25, 0x00	; 0
    c206:	81 30       	cpi	r24, 0x01	; 1
    c208:	91 05       	cpc	r25, r1
    c20a:	81 f0       	breq	.+32     	; 0xc22c <si5351_drive_strength+0x62>
    c20c:	82 30       	cpi	r24, 0x02	; 2
    c20e:	91 05       	cpc	r25, r1
    c210:	1c f4       	brge	.+6      	; 0xc218 <si5351_drive_strength+0x4e>
    c212:	89 2b       	or	r24, r25
    c214:	39 f0       	breq	.+14     	; 0xc224 <si5351_drive_strength+0x5a>
    c216:	1f c0       	rjmp	.+62     	; 0xc256 <si5351_drive_strength+0x8c>
    c218:	82 30       	cpi	r24, 0x02	; 2
    c21a:	91 05       	cpc	r25, r1
    c21c:	71 f0       	breq	.+28     	; 0xc23a <si5351_drive_strength+0x70>
    c21e:	03 97       	sbiw	r24, 0x03	; 3
    c220:	99 f0       	breq	.+38     	; 0xc248 <si5351_drive_strength+0x7e>
    c222:	19 c0       	rjmp	.+50     	; 0xc256 <si5351_drive_strength+0x8c>
    c224:	89 81       	ldd	r24, Y+1	; 0x01
    c226:	8c 7f       	andi	r24, 0xFC	; 252
    c228:	89 83       	std	Y+1, r24	; 0x01
    c22a:	15 c0       	rjmp	.+42     	; 0xc256 <si5351_drive_strength+0x8c>
    c22c:	89 81       	ldd	r24, Y+1	; 0x01
    c22e:	8c 7f       	andi	r24, 0xFC	; 252
    c230:	89 83       	std	Y+1, r24	; 0x01
    c232:	89 81       	ldd	r24, Y+1	; 0x01
    c234:	81 60       	ori	r24, 0x01	; 1
    c236:	89 83       	std	Y+1, r24	; 0x01
    c238:	0e c0       	rjmp	.+28     	; 0xc256 <si5351_drive_strength+0x8c>
    c23a:	89 81       	ldd	r24, Y+1	; 0x01
    c23c:	8c 7f       	andi	r24, 0xFC	; 252
    c23e:	89 83       	std	Y+1, r24	; 0x01
    c240:	89 81       	ldd	r24, Y+1	; 0x01
    c242:	82 60       	ori	r24, 0x02	; 2
    c244:	89 83       	std	Y+1, r24	; 0x01
    c246:	07 c0       	rjmp	.+14     	; 0xc256 <si5351_drive_strength+0x8c>
    c248:	89 81       	ldd	r24, Y+1	; 0x01
    c24a:	8c 7f       	andi	r24, 0xFC	; 252
    c24c:	89 83       	std	Y+1, r24	; 0x01
    c24e:	89 81       	ldd	r24, Y+1	; 0x01
    c250:	83 60       	ori	r24, 0x03	; 3
    c252:	89 83       	std	Y+1, r24	; 0x01
    c254:	00 00       	nop
    c256:	89 81       	ldd	r24, Y+1	; 0x01
    c258:	8b 83       	std	Y+3, r24	; 0x03
    c25a:	8d 81       	ldd	r24, Y+5	; 0x05
    c25c:	20 e1       	ldi	r18, 0x10	; 16
    c25e:	28 0f       	add	r18, r24
    c260:	ce 01       	movw	r24, r28
    c262:	03 96       	adiw	r24, 0x03	; 3
    c264:	41 e0       	ldi	r20, 0x01	; 1
    c266:	bc 01       	movw	r22, r24
    c268:	82 2f       	mov	r24, r18
    c26a:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c26e:	88 23       	and	r24, r24
    c270:	11 f0       	breq	.+4      	; 0xc276 <si5351_drive_strength+0xac>
    c272:	8b ef       	ldi	r24, 0xFB	; 251
    c274:	01 c0       	rjmp	.+2      	; 0xc278 <si5351_drive_strength+0xae>
    c276:	80 e0       	ldi	r24, 0x00	; 0
    c278:	26 96       	adiw	r28, 0x06	; 6
    c27a:	cd bf       	out	0x3d, r28	; 61
    c27c:	de bf       	out	0x3e, r29	; 62
    c27e:	df 91       	pop	r29
    c280:	cf 91       	pop	r28
    c282:	08 95       	ret

0000c284 <_Z7set_pllm10si5351_pll>:
    c284:	cf 93       	push	r28
    c286:	df 93       	push	r29
    c288:	cd b7       	in	r28, 0x3d	; 61
    c28a:	de b7       	in	r29, 0x3e	; 62
    c28c:	6c 97       	sbiw	r28, 0x1c	; 28
    c28e:	cd bf       	out	0x3d, r28	; 61
    c290:	de bf       	out	0x3e, r29	; 62
    c292:	68 8f       	std	Y+24, r22	; 0x18
    c294:	79 8f       	std	Y+25, r23	; 0x19
    c296:	8a 8f       	std	Y+26, r24	; 0x1a
    c298:	9b 8f       	std	Y+27, r25	; 0x1b
    c29a:	4c 8f       	std	Y+28, r20	; 0x1c
    c29c:	9e 01       	movw	r18, r28
    c29e:	2e 5f       	subi	r18, 0xFE	; 254
    c2a0:	3f 4f       	sbci	r19, 0xFF	; 255
    c2a2:	88 8d       	ldd	r24, Y+24	; 0x18
    c2a4:	99 8d       	ldd	r25, Y+25	; 0x19
    c2a6:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c2a8:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c2aa:	a9 01       	movw	r20, r18
    c2ac:	bc 01       	movw	r22, r24
    c2ae:	cd 01       	movw	r24, r26
    c2b0:	0e 94 0b 62 	call	0xc416	; 0xc416 <_Z8pll_calcmP13u_si5351_regs>
    c2b4:	88 23       	and	r24, r24
    c2b6:	11 f0       	breq	.+4      	; 0xc2bc <_Z7set_pllm10si5351_pll+0x38>
    c2b8:	81 e0       	ldi	r24, 0x01	; 1
    c2ba:	a7 c0       	rjmp	.+334    	; 0xc40a <_Z7set_pllm10si5351_pll+0x186>
    c2bc:	19 82       	std	Y+1, r1	; 0x01
    c2be:	89 81       	ldd	r24, Y+1	; 0x01
    c2c0:	91 e0       	ldi	r25, 0x01	; 1
    c2c2:	98 0f       	add	r25, r24
    c2c4:	99 83       	std	Y+1, r25	; 0x01
    c2c6:	88 2f       	mov	r24, r24
    c2c8:	90 e0       	ldi	r25, 0x00	; 0
    c2ca:	4b 85       	ldd	r20, Y+11	; 0x0b
    c2cc:	9e 01       	movw	r18, r28
    c2ce:	22 5f       	subi	r18, 0xF2	; 242
    c2d0:	3f 4f       	sbci	r19, 0xFF	; 255
    c2d2:	82 0f       	add	r24, r18
    c2d4:	93 1f       	adc	r25, r19
    c2d6:	fc 01       	movw	r30, r24
    c2d8:	40 83       	st	Z, r20
    c2da:	89 81       	ldd	r24, Y+1	; 0x01
    c2dc:	91 e0       	ldi	r25, 0x01	; 1
    c2de:	98 0f       	add	r25, r24
    c2e0:	99 83       	std	Y+1, r25	; 0x01
    c2e2:	88 2f       	mov	r24, r24
    c2e4:	90 e0       	ldi	r25, 0x00	; 0
    c2e6:	4a 85       	ldd	r20, Y+10	; 0x0a
    c2e8:	9e 01       	movw	r18, r28
    c2ea:	22 5f       	subi	r18, 0xF2	; 242
    c2ec:	3f 4f       	sbci	r19, 0xFF	; 255
    c2ee:	82 0f       	add	r24, r18
    c2f0:	93 1f       	adc	r25, r19
    c2f2:	fc 01       	movw	r30, r24
    c2f4:	40 83       	st	Z, r20
    c2f6:	89 81       	ldd	r24, Y+1	; 0x01
    c2f8:	91 e0       	ldi	r25, 0x01	; 1
    c2fa:	98 0f       	add	r25, r24
    c2fc:	99 83       	std	Y+1, r25	; 0x01
    c2fe:	88 2f       	mov	r24, r24
    c300:	90 e0       	ldi	r25, 0x00	; 0
    c302:	2c 81       	ldd	r18, Y+4	; 0x04
    c304:	42 2f       	mov	r20, r18
    c306:	43 70       	andi	r20, 0x03	; 3
    c308:	9e 01       	movw	r18, r28
    c30a:	22 5f       	subi	r18, 0xF2	; 242
    c30c:	3f 4f       	sbci	r19, 0xFF	; 255
    c30e:	82 0f       	add	r24, r18
    c310:	93 1f       	adc	r25, r19
    c312:	fc 01       	movw	r30, r24
    c314:	40 83       	st	Z, r20
    c316:	89 81       	ldd	r24, Y+1	; 0x01
    c318:	91 e0       	ldi	r25, 0x01	; 1
    c31a:	98 0f       	add	r25, r24
    c31c:	99 83       	std	Y+1, r25	; 0x01
    c31e:	88 2f       	mov	r24, r24
    c320:	90 e0       	ldi	r25, 0x00	; 0
    c322:	4b 81       	ldd	r20, Y+3	; 0x03
    c324:	9e 01       	movw	r18, r28
    c326:	22 5f       	subi	r18, 0xF2	; 242
    c328:	3f 4f       	sbci	r19, 0xFF	; 255
    c32a:	82 0f       	add	r24, r18
    c32c:	93 1f       	adc	r25, r19
    c32e:	fc 01       	movw	r30, r24
    c330:	40 83       	st	Z, r20
    c332:	89 81       	ldd	r24, Y+1	; 0x01
    c334:	91 e0       	ldi	r25, 0x01	; 1
    c336:	98 0f       	add	r25, r24
    c338:	99 83       	std	Y+1, r25	; 0x01
    c33a:	88 2f       	mov	r24, r24
    c33c:	90 e0       	ldi	r25, 0x00	; 0
    c33e:	4a 81       	ldd	r20, Y+2	; 0x02
    c340:	9e 01       	movw	r18, r28
    c342:	22 5f       	subi	r18, 0xF2	; 242
    c344:	3f 4f       	sbci	r19, 0xFF	; 255
    c346:	82 0f       	add	r24, r18
    c348:	93 1f       	adc	r25, r19
    c34a:	fc 01       	movw	r30, r24
    c34c:	40 83       	st	Z, r20
    c34e:	89 81       	ldd	r24, Y+1	; 0x01
    c350:	88 2f       	mov	r24, r24
    c352:	90 e0       	ldi	r25, 0x00	; 0
    c354:	2c 85       	ldd	r18, Y+12	; 0x0c
    c356:	42 2f       	mov	r20, r18
    c358:	42 95       	swap	r20
    c35a:	40 7f       	andi	r20, 0xF0	; 240
    c35c:	9e 01       	movw	r18, r28
    c35e:	22 5f       	subi	r18, 0xF2	; 242
    c360:	3f 4f       	sbci	r19, 0xFF	; 255
    c362:	82 0f       	add	r24, r18
    c364:	93 1f       	adc	r25, r19
    c366:	fc 01       	movw	r30, r24
    c368:	40 83       	st	Z, r20
    c36a:	29 81       	ldd	r18, Y+1	; 0x01
    c36c:	81 e0       	ldi	r24, 0x01	; 1
    c36e:	82 0f       	add	r24, r18
    c370:	89 83       	std	Y+1, r24	; 0x01
    c372:	82 2f       	mov	r24, r18
    c374:	90 e0       	ldi	r25, 0x00	; 0
    c376:	22 2f       	mov	r18, r18
    c378:	30 e0       	ldi	r19, 0x00	; 0
    c37a:	ae 01       	movw	r20, r28
    c37c:	42 5f       	subi	r20, 0xF2	; 242
    c37e:	5f 4f       	sbci	r21, 0xFF	; 255
    c380:	24 0f       	add	r18, r20
    c382:	35 1f       	adc	r19, r21
    c384:	f9 01       	movw	r30, r18
    c386:	30 81       	ld	r19, Z
    c388:	28 85       	ldd	r18, Y+8	; 0x08
    c38a:	2f 70       	andi	r18, 0x0F	; 15
    c38c:	43 2f       	mov	r20, r19
    c38e:	42 0f       	add	r20, r18
    c390:	9e 01       	movw	r18, r28
    c392:	22 5f       	subi	r18, 0xF2	; 242
    c394:	3f 4f       	sbci	r19, 0xFF	; 255
    c396:	82 0f       	add	r24, r18
    c398:	93 1f       	adc	r25, r19
    c39a:	fc 01       	movw	r30, r24
    c39c:	40 83       	st	Z, r20
    c39e:	89 81       	ldd	r24, Y+1	; 0x01
    c3a0:	91 e0       	ldi	r25, 0x01	; 1
    c3a2:	98 0f       	add	r25, r24
    c3a4:	99 83       	std	Y+1, r25	; 0x01
    c3a6:	88 2f       	mov	r24, r24
    c3a8:	90 e0       	ldi	r25, 0x00	; 0
    c3aa:	4f 81       	ldd	r20, Y+7	; 0x07
    c3ac:	9e 01       	movw	r18, r28
    c3ae:	22 5f       	subi	r18, 0xF2	; 242
    c3b0:	3f 4f       	sbci	r19, 0xFF	; 255
    c3b2:	82 0f       	add	r24, r18
    c3b4:	93 1f       	adc	r25, r19
    c3b6:	fc 01       	movw	r30, r24
    c3b8:	40 83       	st	Z, r20
    c3ba:	89 81       	ldd	r24, Y+1	; 0x01
    c3bc:	91 e0       	ldi	r25, 0x01	; 1
    c3be:	98 0f       	add	r25, r24
    c3c0:	99 83       	std	Y+1, r25	; 0x01
    c3c2:	88 2f       	mov	r24, r24
    c3c4:	90 e0       	ldi	r25, 0x00	; 0
    c3c6:	4e 81       	ldd	r20, Y+6	; 0x06
    c3c8:	9e 01       	movw	r18, r28
    c3ca:	22 5f       	subi	r18, 0xF2	; 242
    c3cc:	3f 4f       	sbci	r19, 0xFF	; 255
    c3ce:	82 0f       	add	r24, r18
    c3d0:	93 1f       	adc	r25, r19
    c3d2:	fc 01       	movw	r30, r24
    c3d4:	40 83       	st	Z, r20
    c3d6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c3d8:	81 30       	cpi	r24, 0x01	; 1
    c3da:	59 f4       	brne	.+22     	; 0xc3f2 <_Z7set_pllm10si5351_pll+0x16e>
    c3dc:	ce 01       	movw	r24, r28
    c3de:	0e 96       	adiw	r24, 0x0e	; 14
    c3e0:	49 81       	ldd	r20, Y+1	; 0x01
    c3e2:	bc 01       	movw	r22, r24
    c3e4:	8a e1       	ldi	r24, 0x1A	; 26
    c3e6:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c3ea:	88 23       	and	r24, r24
    c3ec:	69 f0       	breq	.+26     	; 0xc408 <_Z7set_pllm10si5351_pll+0x184>
    c3ee:	81 e0       	ldi	r24, 0x01	; 1
    c3f0:	0c c0       	rjmp	.+24     	; 0xc40a <_Z7set_pllm10si5351_pll+0x186>
    c3f2:	ce 01       	movw	r24, r28
    c3f4:	0e 96       	adiw	r24, 0x0e	; 14
    c3f6:	49 81       	ldd	r20, Y+1	; 0x01
    c3f8:	bc 01       	movw	r22, r24
    c3fa:	82 e2       	ldi	r24, 0x22	; 34
    c3fc:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    c400:	88 23       	and	r24, r24
    c402:	11 f0       	breq	.+4      	; 0xc408 <_Z7set_pllm10si5351_pll+0x184>
    c404:	81 e0       	ldi	r24, 0x01	; 1
    c406:	01 c0       	rjmp	.+2      	; 0xc40a <_Z7set_pllm10si5351_pll+0x186>
    c408:	80 e0       	ldi	r24, 0x00	; 0
    c40a:	6c 96       	adiw	r28, 0x1c	; 28
    c40c:	cd bf       	out	0x3d, r28	; 61
    c40e:	de bf       	out	0x3e, r29	; 62
    c410:	df 91       	pop	r29
    c412:	cf 91       	pop	r28
    c414:	08 95       	ret

0000c416 <_Z8pll_calcmP13u_si5351_regs>:
    c416:	cf 93       	push	r28
    c418:	df 93       	push	r29
    c41a:	cd b7       	in	r28, 0x3d	; 61
    c41c:	de b7       	in	r29, 0x3e	; 62
    c41e:	6e 97       	sbiw	r28, 0x1e	; 30
    c420:	cd bf       	out	0x3d, r28	; 61
    c422:	de bf       	out	0x3e, r29	; 62
    c424:	69 8f       	std	Y+25, r22	; 0x19
    c426:	7a 8f       	std	Y+26, r23	; 0x1a
    c428:	8b 8f       	std	Y+27, r24	; 0x1b
    c42a:	9c 8f       	std	Y+28, r25	; 0x1c
    c42c:	4d 8f       	std	Y+29, r20	; 0x1d
    c42e:	5e 8f       	std	Y+30, r21	; 0x1e
    c430:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <_ZL9xtal_freq>
    c434:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <_ZL9xtal_freq+0x1>
    c438:	a0 91 29 40 	lds	r26, 0x4029	; 0x804029 <_ZL9xtal_freq+0x2>
    c43c:	b0 91 2a 40 	lds	r27, 0x402A	; 0x80402a <_ZL9xtal_freq+0x3>
    c440:	89 83       	std	Y+1, r24	; 0x01
    c442:	9a 83       	std	Y+2, r25	; 0x02
    c444:	ab 83       	std	Y+3, r26	; 0x03
    c446:	bc 83       	std	Y+4, r27	; 0x04
    c448:	89 8d       	ldd	r24, Y+25	; 0x19
    c44a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c44c:	ab 8d       	ldd	r26, Y+27	; 0x1b
    c44e:	bc 8d       	ldd	r27, Y+28	; 0x1c
    c450:	29 81       	ldd	r18, Y+1	; 0x01
    c452:	3a 81       	ldd	r19, Y+2	; 0x02
    c454:	4b 81       	ldd	r20, Y+3	; 0x03
    c456:	5c 81       	ldd	r21, Y+4	; 0x04
    c458:	bc 01       	movw	r22, r24
    c45a:	cd 01       	movw	r24, r26
    c45c:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c460:	da 01       	movw	r26, r20
    c462:	c9 01       	movw	r24, r18
    c464:	8d 83       	std	Y+5, r24	; 0x05
    c466:	9e 83       	std	Y+6, r25	; 0x06
    c468:	af 83       	std	Y+7, r26	; 0x07
    c46a:	b8 87       	std	Y+8, r27	; 0x08
    c46c:	89 8d       	ldd	r24, Y+25	; 0x19
    c46e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c470:	ab 8d       	ldd	r26, Y+27	; 0x1b
    c472:	bc 8d       	ldd	r27, Y+28	; 0x1c
    c474:	29 81       	ldd	r18, Y+1	; 0x01
    c476:	3a 81       	ldd	r19, Y+2	; 0x02
    c478:	4b 81       	ldd	r20, Y+3	; 0x03
    c47a:	5c 81       	ldd	r21, Y+4	; 0x04
    c47c:	bc 01       	movw	r22, r24
    c47e:	cd 01       	movw	r24, r26
    c480:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c484:	dc 01       	movw	r26, r24
    c486:	cb 01       	movw	r24, r22
    c488:	89 8b       	std	Y+17, r24	; 0x11
    c48a:	9a 8b       	std	Y+18, r25	; 0x12
    c48c:	ab 8b       	std	Y+19, r26	; 0x13
    c48e:	bc 8b       	std	Y+20, r27	; 0x14
    c490:	89 81       	ldd	r24, Y+1	; 0x01
    c492:	9a 81       	ldd	r25, Y+2	; 0x02
    c494:	ab 81       	ldd	r26, Y+3	; 0x03
    c496:	bc 81       	ldd	r27, Y+4	; 0x04
    c498:	8d 8b       	std	Y+21, r24	; 0x15
    c49a:	9e 8b       	std	Y+22, r25	; 0x16
    c49c:	af 8b       	std	Y+23, r26	; 0x17
    c49e:	b8 8f       	std	Y+24, r27	; 0x18
    c4a0:	9e 01       	movw	r18, r28
    c4a2:	2b 5e       	subi	r18, 0xEB	; 235
    c4a4:	3f 4f       	sbci	r19, 0xFF	; 255
    c4a6:	ce 01       	movw	r24, r28
    c4a8:	41 96       	adiw	r24, 0x11	; 17
    c4aa:	b9 01       	movw	r22, r18
    c4ac:	0e 94 f1 62 	call	0xc5e2	; 0xc5e2 <_Z13reduce_by_gcdPmS_>
    c4b0:	89 89       	ldd	r24, Y+17	; 0x11
    c4b2:	9a 89       	ldd	r25, Y+18	; 0x12
    c4b4:	ab 89       	ldd	r26, Y+19	; 0x13
    c4b6:	bc 89       	ldd	r27, Y+20	; 0x14
    c4b8:	88 0f       	add	r24, r24
    c4ba:	99 1f       	adc	r25, r25
    c4bc:	aa 1f       	adc	r26, r26
    c4be:	bb 1f       	adc	r27, r27
    c4c0:	88 0f       	add	r24, r24
    c4c2:	99 1f       	adc	r25, r25
    c4c4:	aa 1f       	adc	r26, r26
    c4c6:	bb 1f       	adc	r27, r27
    c4c8:	88 0f       	add	r24, r24
    c4ca:	99 1f       	adc	r25, r25
    c4cc:	aa 1f       	adc	r26, r26
    c4ce:	bb 1f       	adc	r27, r27
    c4d0:	88 0f       	add	r24, r24
    c4d2:	99 1f       	adc	r25, r25
    c4d4:	aa 1f       	adc	r26, r26
    c4d6:	bb 1f       	adc	r27, r27
    c4d8:	88 0f       	add	r24, r24
    c4da:	99 1f       	adc	r25, r25
    c4dc:	aa 1f       	adc	r26, r26
    c4de:	bb 1f       	adc	r27, r27
    c4e0:	88 0f       	add	r24, r24
    c4e2:	99 1f       	adc	r25, r25
    c4e4:	aa 1f       	adc	r26, r26
    c4e6:	bb 1f       	adc	r27, r27
    c4e8:	88 0f       	add	r24, r24
    c4ea:	99 1f       	adc	r25, r25
    c4ec:	aa 1f       	adc	r26, r26
    c4ee:	bb 1f       	adc	r27, r27
    c4f0:	89 87       	std	Y+9, r24	; 0x09
    c4f2:	9a 87       	std	Y+10, r25	; 0x0a
    c4f4:	ab 87       	std	Y+11, r26	; 0x0b
    c4f6:	bc 87       	std	Y+12, r27	; 0x0c
    c4f8:	2d 89       	ldd	r18, Y+21	; 0x15
    c4fa:	3e 89       	ldd	r19, Y+22	; 0x16
    c4fc:	4f 89       	ldd	r20, Y+23	; 0x17
    c4fe:	58 8d       	ldd	r21, Y+24	; 0x18
    c500:	89 85       	ldd	r24, Y+9	; 0x09
    c502:	9a 85       	ldd	r25, Y+10	; 0x0a
    c504:	ab 85       	ldd	r26, Y+11	; 0x0b
    c506:	bc 85       	ldd	r27, Y+12	; 0x0c
    c508:	bc 01       	movw	r22, r24
    c50a:	cd 01       	movw	r24, r26
    c50c:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c510:	da 01       	movw	r26, r20
    c512:	c9 01       	movw	r24, r18
    c514:	8d 87       	std	Y+13, r24	; 0x0d
    c516:	9e 87       	std	Y+14, r25	; 0x0e
    c518:	af 87       	std	Y+15, r26	; 0x0f
    c51a:	b8 8b       	std	Y+16, r27	; 0x10
    c51c:	8d 81       	ldd	r24, Y+5	; 0x05
    c51e:	9e 81       	ldd	r25, Y+6	; 0x06
    c520:	af 81       	ldd	r26, Y+7	; 0x07
    c522:	b8 85       	ldd	r27, Y+8	; 0x08
    c524:	88 0f       	add	r24, r24
    c526:	99 1f       	adc	r25, r25
    c528:	aa 1f       	adc	r26, r26
    c52a:	bb 1f       	adc	r27, r27
    c52c:	88 0f       	add	r24, r24
    c52e:	99 1f       	adc	r25, r25
    c530:	aa 1f       	adc	r26, r26
    c532:	bb 1f       	adc	r27, r27
    c534:	88 0f       	add	r24, r24
    c536:	99 1f       	adc	r25, r25
    c538:	aa 1f       	adc	r26, r26
    c53a:	bb 1f       	adc	r27, r27
    c53c:	88 0f       	add	r24, r24
    c53e:	99 1f       	adc	r25, r25
    c540:	aa 1f       	adc	r26, r26
    c542:	bb 1f       	adc	r27, r27
    c544:	88 0f       	add	r24, r24
    c546:	99 1f       	adc	r25, r25
    c548:	aa 1f       	adc	r26, r26
    c54a:	bb 1f       	adc	r27, r27
    c54c:	88 0f       	add	r24, r24
    c54e:	99 1f       	adc	r25, r25
    c550:	aa 1f       	adc	r26, r26
    c552:	bb 1f       	adc	r27, r27
    c554:	88 0f       	add	r24, r24
    c556:	99 1f       	adc	r25, r25
    c558:	aa 1f       	adc	r26, r26
    c55a:	bb 1f       	adc	r27, r27
    c55c:	9c 01       	movw	r18, r24
    c55e:	ad 01       	movw	r20, r26
    c560:	8d 85       	ldd	r24, Y+13	; 0x0d
    c562:	9e 85       	ldd	r25, Y+14	; 0x0e
    c564:	af 85       	ldd	r26, Y+15	; 0x0f
    c566:	b8 89       	ldd	r27, Y+16	; 0x10
    c568:	82 0f       	add	r24, r18
    c56a:	93 1f       	adc	r25, r19
    c56c:	a4 1f       	adc	r26, r20
    c56e:	b5 1f       	adc	r27, r21
    c570:	92 50       	subi	r25, 0x02	; 2
    c572:	a1 09       	sbc	r26, r1
    c574:	b1 09       	sbc	r27, r1
    c576:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c578:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c57a:	f9 01       	movw	r30, r18
    c57c:	80 83       	st	Z, r24
    c57e:	91 83       	std	Z+1, r25	; 0x01
    c580:	a2 83       	std	Z+2, r26	; 0x02
    c582:	b3 83       	std	Z+3, r27	; 0x03
    c584:	2d 89       	ldd	r18, Y+21	; 0x15
    c586:	3e 89       	ldd	r19, Y+22	; 0x16
    c588:	4f 89       	ldd	r20, Y+23	; 0x17
    c58a:	58 8d       	ldd	r21, Y+24	; 0x18
    c58c:	8d 85       	ldd	r24, Y+13	; 0x0d
    c58e:	9e 85       	ldd	r25, Y+14	; 0x0e
    c590:	af 85       	ldd	r26, Y+15	; 0x0f
    c592:	b8 89       	ldd	r27, Y+16	; 0x10
    c594:	bc 01       	movw	r22, r24
    c596:	cd 01       	movw	r24, r26
    c598:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    c59c:	9b 01       	movw	r18, r22
    c59e:	ac 01       	movw	r20, r24
    c5a0:	89 85       	ldd	r24, Y+9	; 0x09
    c5a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    c5a4:	ab 85       	ldd	r26, Y+11	; 0x0b
    c5a6:	bc 85       	ldd	r27, Y+12	; 0x0c
    c5a8:	82 1b       	sub	r24, r18
    c5aa:	93 0b       	sbc	r25, r19
    c5ac:	a4 0b       	sbc	r26, r20
    c5ae:	b5 0b       	sbc	r27, r21
    c5b0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c5b2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c5b4:	f9 01       	movw	r30, r18
    c5b6:	84 83       	std	Z+4, r24	; 0x04
    c5b8:	95 83       	std	Z+5, r25	; 0x05
    c5ba:	a6 83       	std	Z+6, r26	; 0x06
    c5bc:	b7 83       	std	Z+7, r27	; 0x07
    c5be:	8d 89       	ldd	r24, Y+21	; 0x15
    c5c0:	9e 89       	ldd	r25, Y+22	; 0x16
    c5c2:	af 89       	ldd	r26, Y+23	; 0x17
    c5c4:	b8 8d       	ldd	r27, Y+24	; 0x18
    c5c6:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c5c8:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c5ca:	f9 01       	movw	r30, r18
    c5cc:	80 87       	std	Z+8, r24	; 0x08
    c5ce:	91 87       	std	Z+9, r25	; 0x09
    c5d0:	a2 87       	std	Z+10, r26	; 0x0a
    c5d2:	b3 87       	std	Z+11, r27	; 0x0b
    c5d4:	80 e0       	ldi	r24, 0x00	; 0
    c5d6:	6e 96       	adiw	r28, 0x1e	; 30
    c5d8:	cd bf       	out	0x3d, r28	; 61
    c5da:	de bf       	out	0x3e, r29	; 62
    c5dc:	df 91       	pop	r29
    c5de:	cf 91       	pop	r28
    c5e0:	08 95       	ret

0000c5e2 <_Z13reduce_by_gcdPmS_>:
    c5e2:	cf 93       	push	r28
    c5e4:	df 93       	push	r29
    c5e6:	cd b7       	in	r28, 0x3d	; 61
    c5e8:	de b7       	in	r29, 0x3e	; 62
    c5ea:	60 97       	sbiw	r28, 0x10	; 16
    c5ec:	cd bf       	out	0x3d, r28	; 61
    c5ee:	de bf       	out	0x3e, r29	; 62
    c5f0:	8d 87       	std	Y+13, r24	; 0x0d
    c5f2:	9e 87       	std	Y+14, r25	; 0x0e
    c5f4:	6f 87       	std	Y+15, r22	; 0x0f
    c5f6:	78 8b       	std	Y+16, r23	; 0x10
    c5f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    c5fa:	9e 85       	ldd	r25, Y+14	; 0x0e
    c5fc:	fc 01       	movw	r30, r24
    c5fe:	80 81       	ld	r24, Z
    c600:	91 81       	ldd	r25, Z+1	; 0x01
    c602:	a2 81       	ldd	r26, Z+2	; 0x02
    c604:	b3 81       	ldd	r27, Z+3	; 0x03
    c606:	89 87       	std	Y+9, r24	; 0x09
    c608:	9a 87       	std	Y+10, r25	; 0x0a
    c60a:	ab 87       	std	Y+11, r26	; 0x0b
    c60c:	bc 87       	std	Y+12, r27	; 0x0c
    c60e:	8f 85       	ldd	r24, Y+15	; 0x0f
    c610:	98 89       	ldd	r25, Y+16	; 0x10
    c612:	fc 01       	movw	r30, r24
    c614:	80 81       	ld	r24, Z
    c616:	91 81       	ldd	r25, Z+1	; 0x01
    c618:	a2 81       	ldd	r26, Z+2	; 0x02
    c61a:	b3 81       	ldd	r27, Z+3	; 0x03
    c61c:	8d 83       	std	Y+5, r24	; 0x05
    c61e:	9e 83       	std	Y+6, r25	; 0x06
    c620:	af 83       	std	Y+7, r26	; 0x07
    c622:	b8 87       	std	Y+8, r27	; 0x08
    c624:	89 85       	ldd	r24, Y+9	; 0x09
    c626:	9a 85       	ldd	r25, Y+10	; 0x0a
    c628:	ab 85       	ldd	r26, Y+11	; 0x0b
    c62a:	bc 85       	ldd	r27, Y+12	; 0x0c
    c62c:	89 2b       	or	r24, r25
    c62e:	8a 2b       	or	r24, r26
    c630:	8b 2b       	or	r24, r27
    c632:	09 f4       	brne	.+2      	; 0xc636 <_Z13reduce_by_gcdPmS_+0x54>
    c634:	80 c0       	rjmp	.+256    	; 0xc736 <_Z13reduce_by_gcdPmS_+0x154>
    c636:	8d 81       	ldd	r24, Y+5	; 0x05
    c638:	9e 81       	ldd	r25, Y+6	; 0x06
    c63a:	af 81       	ldd	r26, Y+7	; 0x07
    c63c:	b8 85       	ldd	r27, Y+8	; 0x08
    c63e:	89 2b       	or	r24, r25
    c640:	8a 2b       	or	r24, r26
    c642:	8b 2b       	or	r24, r27
    c644:	09 f4       	brne	.+2      	; 0xc648 <_Z13reduce_by_gcdPmS_+0x66>
    c646:	77 c0       	rjmp	.+238    	; 0xc736 <_Z13reduce_by_gcdPmS_+0x154>
    c648:	89 85       	ldd	r24, Y+9	; 0x09
    c64a:	9a 85       	ldd	r25, Y+10	; 0x0a
    c64c:	ab 85       	ldd	r26, Y+11	; 0x0b
    c64e:	bc 85       	ldd	r27, Y+12	; 0x0c
    c650:	2d 81       	ldd	r18, Y+5	; 0x05
    c652:	3e 81       	ldd	r19, Y+6	; 0x06
    c654:	4f 81       	ldd	r20, Y+7	; 0x07
    c656:	58 85       	ldd	r21, Y+8	; 0x08
    c658:	bc 01       	movw	r22, r24
    c65a:	cd 01       	movw	r24, r26
    c65c:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c660:	dc 01       	movw	r26, r24
    c662:	cb 01       	movw	r24, r22
    c664:	89 83       	std	Y+1, r24	; 0x01
    c666:	9a 83       	std	Y+2, r25	; 0x02
    c668:	ab 83       	std	Y+3, r26	; 0x03
    c66a:	bc 83       	std	Y+4, r27	; 0x04
    c66c:	89 81       	ldd	r24, Y+1	; 0x01
    c66e:	9a 81       	ldd	r25, Y+2	; 0x02
    c670:	ab 81       	ldd	r26, Y+3	; 0x03
    c672:	bc 81       	ldd	r27, Y+4	; 0x04
    c674:	89 2b       	or	r24, r25
    c676:	8a 2b       	or	r24, r26
    c678:	8b 2b       	or	r24, r27
    c67a:	19 f1       	breq	.+70     	; 0xc6c2 <_Z13reduce_by_gcdPmS_+0xe0>
    c67c:	8d 81       	ldd	r24, Y+5	; 0x05
    c67e:	9e 81       	ldd	r25, Y+6	; 0x06
    c680:	af 81       	ldd	r26, Y+7	; 0x07
    c682:	b8 85       	ldd	r27, Y+8	; 0x08
    c684:	89 87       	std	Y+9, r24	; 0x09
    c686:	9a 87       	std	Y+10, r25	; 0x0a
    c688:	ab 87       	std	Y+11, r26	; 0x0b
    c68a:	bc 87       	std	Y+12, r27	; 0x0c
    c68c:	89 81       	ldd	r24, Y+1	; 0x01
    c68e:	9a 81       	ldd	r25, Y+2	; 0x02
    c690:	ab 81       	ldd	r26, Y+3	; 0x03
    c692:	bc 81       	ldd	r27, Y+4	; 0x04
    c694:	8d 83       	std	Y+5, r24	; 0x05
    c696:	9e 83       	std	Y+6, r25	; 0x06
    c698:	af 83       	std	Y+7, r26	; 0x07
    c69a:	b8 87       	std	Y+8, r27	; 0x08
    c69c:	89 85       	ldd	r24, Y+9	; 0x09
    c69e:	9a 85       	ldd	r25, Y+10	; 0x0a
    c6a0:	ab 85       	ldd	r26, Y+11	; 0x0b
    c6a2:	bc 85       	ldd	r27, Y+12	; 0x0c
    c6a4:	2d 81       	ldd	r18, Y+5	; 0x05
    c6a6:	3e 81       	ldd	r19, Y+6	; 0x06
    c6a8:	4f 81       	ldd	r20, Y+7	; 0x07
    c6aa:	58 85       	ldd	r21, Y+8	; 0x08
    c6ac:	bc 01       	movw	r22, r24
    c6ae:	cd 01       	movw	r24, r26
    c6b0:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c6b4:	dc 01       	movw	r26, r24
    c6b6:	cb 01       	movw	r24, r22
    c6b8:	89 83       	std	Y+1, r24	; 0x01
    c6ba:	9a 83       	std	Y+2, r25	; 0x02
    c6bc:	ab 83       	std	Y+3, r26	; 0x03
    c6be:	bc 83       	std	Y+4, r27	; 0x04
    c6c0:	d5 cf       	rjmp	.-86     	; 0xc66c <_Z13reduce_by_gcdPmS_+0x8a>
    c6c2:	8d 81       	ldd	r24, Y+5	; 0x05
    c6c4:	9e 81       	ldd	r25, Y+6	; 0x06
    c6c6:	af 81       	ldd	r26, Y+7	; 0x07
    c6c8:	b8 85       	ldd	r27, Y+8	; 0x08
    c6ca:	02 97       	sbiw	r24, 0x02	; 2
    c6cc:	a1 05       	cpc	r26, r1
    c6ce:	b1 05       	cpc	r27, r1
    c6d0:	a0 f1       	brcs	.+104    	; 0xc73a <_Z13reduce_by_gcdPmS_+0x158>
    c6d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    c6d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    c6d6:	fc 01       	movw	r30, r24
    c6d8:	80 81       	ld	r24, Z
    c6da:	91 81       	ldd	r25, Z+1	; 0x01
    c6dc:	a2 81       	ldd	r26, Z+2	; 0x02
    c6de:	b3 81       	ldd	r27, Z+3	; 0x03
    c6e0:	2d 81       	ldd	r18, Y+5	; 0x05
    c6e2:	3e 81       	ldd	r19, Y+6	; 0x06
    c6e4:	4f 81       	ldd	r20, Y+7	; 0x07
    c6e6:	58 85       	ldd	r21, Y+8	; 0x08
    c6e8:	bc 01       	movw	r22, r24
    c6ea:	cd 01       	movw	r24, r26
    c6ec:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c6f0:	da 01       	movw	r26, r20
    c6f2:	c9 01       	movw	r24, r18
    c6f4:	2d 85       	ldd	r18, Y+13	; 0x0d
    c6f6:	3e 85       	ldd	r19, Y+14	; 0x0e
    c6f8:	f9 01       	movw	r30, r18
    c6fa:	80 83       	st	Z, r24
    c6fc:	91 83       	std	Z+1, r25	; 0x01
    c6fe:	a2 83       	std	Z+2, r26	; 0x02
    c700:	b3 83       	std	Z+3, r27	; 0x03
    c702:	8f 85       	ldd	r24, Y+15	; 0x0f
    c704:	98 89       	ldd	r25, Y+16	; 0x10
    c706:	fc 01       	movw	r30, r24
    c708:	80 81       	ld	r24, Z
    c70a:	91 81       	ldd	r25, Z+1	; 0x01
    c70c:	a2 81       	ldd	r26, Z+2	; 0x02
    c70e:	b3 81       	ldd	r27, Z+3	; 0x03
    c710:	2d 81       	ldd	r18, Y+5	; 0x05
    c712:	3e 81       	ldd	r19, Y+6	; 0x06
    c714:	4f 81       	ldd	r20, Y+7	; 0x07
    c716:	58 85       	ldd	r21, Y+8	; 0x08
    c718:	bc 01       	movw	r22, r24
    c71a:	cd 01       	movw	r24, r26
    c71c:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c720:	da 01       	movw	r26, r20
    c722:	c9 01       	movw	r24, r18
    c724:	2f 85       	ldd	r18, Y+15	; 0x0f
    c726:	38 89       	ldd	r19, Y+16	; 0x10
    c728:	f9 01       	movw	r30, r18
    c72a:	80 83       	st	Z, r24
    c72c:	91 83       	std	Z+1, r25	; 0x01
    c72e:	a2 83       	std	Z+2, r26	; 0x02
    c730:	b3 83       	std	Z+3, r27	; 0x03
    c732:	00 00       	nop
    c734:	02 c0       	rjmp	.+4      	; 0xc73a <_Z13reduce_by_gcdPmS_+0x158>
    c736:	00 00       	nop
    c738:	01 c0       	rjmp	.+2      	; 0xc73c <_Z13reduce_by_gcdPmS_+0x15a>
    c73a:	00 00       	nop
    c73c:	60 96       	adiw	r28, 0x10	; 16
    c73e:	cd bf       	out	0x3d, r28	; 61
    c740:	de bf       	out	0x3e, r29	; 62
    c742:	df 91       	pop	r29
    c744:	cf 91       	pop	r28
    c746:	08 95       	ret

0000c748 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    c748:	0f 93       	push	r16
    c74a:	1f 93       	push	r17
    c74c:	cf 93       	push	r28
    c74e:	df 93       	push	r29
    c750:	cd b7       	in	r28, 0x3d	; 61
    c752:	de b7       	in	r29, 0x3e	; 62
    c754:	69 97       	sbiw	r28, 0x19	; 25
    c756:	cd bf       	out	0x3d, r28	; 61
    c758:	de bf       	out	0x3e, r29	; 62
    c75a:	68 8b       	std	Y+16, r22	; 0x10
    c75c:	79 8b       	std	Y+17, r23	; 0x11
    c75e:	8a 8b       	std	Y+18, r24	; 0x12
    c760:	9b 8b       	std	Y+19, r25	; 0x13
    c762:	4c 8b       	std	Y+20, r20	; 0x14
    c764:	5d 8b       	std	Y+21, r21	; 0x15
    c766:	2e 8b       	std	Y+22, r18	; 0x16
    c768:	3f 8b       	std	Y+23, r19	; 0x17
    c76a:	08 8f       	std	Y+24, r16	; 0x18
    c76c:	19 8f       	std	Y+25, r17	; 0x19
    c76e:	19 82       	std	Y+1, r1	; 0x01
    c770:	1a 82       	std	Y+2, r1	; 0x02
    c772:	1b 82       	std	Y+3, r1	; 0x03
    c774:	1c 82       	std	Y+4, r1	; 0x04
    c776:	1d 82       	std	Y+5, r1	; 0x05
    c778:	1e 82       	std	Y+6, r1	; 0x06
    c77a:	1f 82       	std	Y+7, r1	; 0x07
    c77c:	18 86       	std	Y+8, r1	; 0x08
    c77e:	8e 89       	ldd	r24, Y+22	; 0x16
    c780:	9f 89       	ldd	r25, Y+23	; 0x17
    c782:	21 e0       	ldi	r18, 0x01	; 1
    c784:	fc 01       	movw	r30, r24
    c786:	20 83       	st	Z, r18
    c788:	88 89       	ldd	r24, Y+16	; 0x10
    c78a:	99 89       	ldd	r25, Y+17	; 0x11
    c78c:	aa 89       	ldd	r26, Y+18	; 0x12
    c78e:	bb 89       	ldd	r27, Y+19	; 0x13
    c790:	80 38       	cpi	r24, 0x80	; 128
    c792:	91 4d       	sbci	r25, 0xD1	; 209
    c794:	a0 4f       	sbci	r26, 0xF0	; 240
    c796:	b8 40       	sbci	r27, 0x08	; 8
    c798:	d8 f0       	brcs	.+54     	; 0xc7d0 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    c79a:	84 e0       	ldi	r24, 0x04	; 4
    c79c:	90 e0       	ldi	r25, 0x00	; 0
    c79e:	a0 e0       	ldi	r26, 0x00	; 0
    c7a0:	b0 e0       	ldi	r27, 0x00	; 0
    c7a2:	89 83       	std	Y+1, r24	; 0x01
    c7a4:	9a 83       	std	Y+2, r25	; 0x02
    c7a6:	ab 83       	std	Y+3, r26	; 0x03
    c7a8:	bc 83       	std	Y+4, r27	; 0x04
    c7aa:	29 81       	ldd	r18, Y+1	; 0x01
    c7ac:	3a 81       	ldd	r19, Y+2	; 0x02
    c7ae:	4b 81       	ldd	r20, Y+3	; 0x03
    c7b0:	5c 81       	ldd	r21, Y+4	; 0x04
    c7b2:	88 89       	ldd	r24, Y+16	; 0x10
    c7b4:	99 89       	ldd	r25, Y+17	; 0x11
    c7b6:	aa 89       	ldd	r26, Y+18	; 0x12
    c7b8:	bb 89       	ldd	r27, Y+19	; 0x13
    c7ba:	bc 01       	movw	r22, r24
    c7bc:	cd 01       	movw	r24, r26
    c7be:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    c7c2:	dc 01       	movw	r26, r24
    c7c4:	cb 01       	movw	r24, r22
    c7c6:	8d 83       	std	Y+5, r24	; 0x05
    c7c8:	9e 83       	std	Y+6, r25	; 0x06
    c7ca:	af 83       	std	Y+7, r26	; 0x07
    c7cc:	b8 87       	std	Y+8, r27	; 0x08
    c7ce:	6e c0       	rjmp	.+220    	; 0xc8ac <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c7d0:	19 86       	std	Y+9, r1	; 0x09
    c7d2:	1a 86       	std	Y+10, r1	; 0x0a
    c7d4:	1b 86       	std	Y+11, r1	; 0x0b
    c7d6:	89 85       	ldd	r24, Y+9	; 0x09
    c7d8:	88 23       	and	r24, r24
    c7da:	09 f0       	breq	.+2      	; 0xc7de <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    c7dc:	52 c0       	rjmp	.+164    	; 0xc882 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    c7de:	8b 85       	ldd	r24, Y+11	; 0x0b
    c7e0:	28 2f       	mov	r18, r24
    c7e2:	30 e0       	ldi	r19, 0x00	; 0
    c7e4:	40 e0       	ldi	r20, 0x00	; 0
    c7e6:	50 e0       	ldi	r21, 0x00	; 0
    c7e8:	88 89       	ldd	r24, Y+16	; 0x10
    c7ea:	99 89       	ldd	r25, Y+17	; 0x11
    c7ec:	aa 89       	ldd	r26, Y+18	; 0x12
    c7ee:	bb 89       	ldd	r27, Y+19	; 0x13
    c7f0:	bc 01       	movw	r22, r24
    c7f2:	cd 01       	movw	r24, r26
    c7f4:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    c7f8:	9b 01       	movw	r18, r22
    c7fa:	ac 01       	movw	r20, r24
    c7fc:	80 e0       	ldi	r24, 0x00	; 0
    c7fe:	99 ee       	ldi	r25, 0xE9	; 233
    c800:	a4 ea       	ldi	r26, 0xA4	; 164
    c802:	b5 e3       	ldi	r27, 0x35	; 53
    c804:	82 1b       	sub	r24, r18
    c806:	93 0b       	sbc	r25, r19
    c808:	a4 0b       	sbc	r26, r20
    c80a:	b5 0b       	sbc	r27, r21
    c80c:	8c 87       	std	Y+12, r24	; 0x0c
    c80e:	9d 87       	std	Y+13, r25	; 0x0d
    c810:	ae 87       	std	Y+14, r26	; 0x0e
    c812:	bf 87       	std	Y+15, r27	; 0x0f
    c814:	8b 85       	ldd	r24, Y+11	; 0x0b
    c816:	8e 5f       	subi	r24, 0xFE	; 254
    c818:	8b 87       	std	Y+11, r24	; 0x0b
    c81a:	8c 85       	ldd	r24, Y+12	; 0x0c
    c81c:	9d 85       	ldd	r25, Y+13	; 0x0d
    c81e:	ae 85       	ldd	r26, Y+14	; 0x0e
    c820:	bf 85       	ldd	r27, Y+15	; 0x0f
    c822:	81 15       	cp	r24, r1
    c824:	96 44       	sbci	r25, 0x46	; 70
    c826:	a3 4c       	sbci	r26, 0xC3	; 195
    c828:	b3 42       	sbci	r27, 0x23	; 35
    c82a:	40 f1       	brcs	.+80     	; 0xc87c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    c82c:	8c 85       	ldd	r24, Y+12	; 0x0c
    c82e:	9d 85       	ldd	r25, Y+13	; 0x0d
    c830:	ae 85       	ldd	r26, Y+14	; 0x0e
    c832:	bf 85       	ldd	r27, Y+15	; 0x0f
    c834:	28 89       	ldd	r18, Y+16	; 0x10
    c836:	39 89       	ldd	r19, Y+17	; 0x11
    c838:	4a 89       	ldd	r20, Y+18	; 0x12
    c83a:	5b 89       	ldd	r21, Y+19	; 0x13
    c83c:	bc 01       	movw	r22, r24
    c83e:	cd 01       	movw	r24, r26
    c840:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c844:	da 01       	movw	r26, r20
    c846:	c9 01       	movw	r24, r18
    c848:	8c 87       	std	Y+12, r24	; 0x0c
    c84a:	9d 87       	std	Y+13, r25	; 0x0d
    c84c:	ae 87       	std	Y+14, r26	; 0x0e
    c84e:	bf 87       	std	Y+15, r27	; 0x0f
    c850:	8c 85       	ldd	r24, Y+12	; 0x0c
    c852:	9d 85       	ldd	r25, Y+13	; 0x0d
    c854:	ae 85       	ldd	r26, Y+14	; 0x0e
    c856:	bf 85       	ldd	r27, Y+15	; 0x0f
    c858:	04 97       	sbiw	r24, 0x04	; 4
    c85a:	a1 05       	cpc	r26, r1
    c85c:	b1 05       	cpc	r27, r1
    c85e:	08 f4       	brcc	.+2      	; 0xc862 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    c860:	ba cf       	rjmp	.-140    	; 0xc7d6 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c862:	81 e0       	ldi	r24, 0x01	; 1
    c864:	89 87       	std	Y+9, r24	; 0x09
    c866:	81 e0       	ldi	r24, 0x01	; 1
    c868:	8a 87       	std	Y+10, r24	; 0x0a
    c86a:	8c 85       	ldd	r24, Y+12	; 0x0c
    c86c:	9d 85       	ldd	r25, Y+13	; 0x0d
    c86e:	ae 85       	ldd	r26, Y+14	; 0x0e
    c870:	bf 85       	ldd	r27, Y+15	; 0x0f
    c872:	89 83       	std	Y+1, r24	; 0x01
    c874:	9a 83       	std	Y+2, r25	; 0x02
    c876:	ab 83       	std	Y+3, r26	; 0x03
    c878:	bc 83       	std	Y+4, r27	; 0x04
    c87a:	ad cf       	rjmp	.-166    	; 0xc7d6 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c87c:	81 e0       	ldi	r24, 0x01	; 1
    c87e:	89 87       	std	Y+9, r24	; 0x09
    c880:	aa cf       	rjmp	.-172    	; 0xc7d6 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    c882:	8a 85       	ldd	r24, Y+10	; 0x0a
    c884:	88 23       	and	r24, r24
    c886:	91 f0       	breq	.+36     	; 0xc8ac <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c888:	29 81       	ldd	r18, Y+1	; 0x01
    c88a:	3a 81       	ldd	r19, Y+2	; 0x02
    c88c:	4b 81       	ldd	r20, Y+3	; 0x03
    c88e:	5c 81       	ldd	r21, Y+4	; 0x04
    c890:	88 89       	ldd	r24, Y+16	; 0x10
    c892:	99 89       	ldd	r25, Y+17	; 0x11
    c894:	aa 89       	ldd	r26, Y+18	; 0x12
    c896:	bb 89       	ldd	r27, Y+19	; 0x13
    c898:	bc 01       	movw	r22, r24
    c89a:	cd 01       	movw	r24, r26
    c89c:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    c8a0:	dc 01       	movw	r26, r24
    c8a2:	cb 01       	movw	r24, r22
    c8a4:	8d 83       	std	Y+5, r24	; 0x05
    c8a6:	9e 83       	std	Y+6, r25	; 0x06
    c8a8:	af 83       	std	Y+7, r26	; 0x07
    c8aa:	b8 87       	std	Y+8, r27	; 0x08
    c8ac:	21 e0       	ldi	r18, 0x01	; 1
    c8ae:	89 81       	ldd	r24, Y+1	; 0x01
    c8b0:	9a 81       	ldd	r25, Y+2	; 0x02
    c8b2:	ab 81       	ldd	r26, Y+3	; 0x03
    c8b4:	bc 81       	ldd	r27, Y+4	; 0x04
    c8b6:	04 97       	sbiw	r24, 0x04	; 4
    c8b8:	a1 05       	cpc	r26, r1
    c8ba:	b1 05       	cpc	r27, r1
    c8bc:	09 f0       	breq	.+2      	; 0xc8c0 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    c8be:	20 e0       	ldi	r18, 0x00	; 0
    c8c0:	88 8d       	ldd	r24, Y+24	; 0x18
    c8c2:	99 8d       	ldd	r25, Y+25	; 0x19
    c8c4:	fc 01       	movw	r30, r24
    c8c6:	20 83       	st	Z, r18
    c8c8:	89 81       	ldd	r24, Y+1	; 0x01
    c8ca:	9a 81       	ldd	r25, Y+2	; 0x02
    c8cc:	ab 81       	ldd	r26, Y+3	; 0x03
    c8ce:	bc 81       	ldd	r27, Y+4	; 0x04
    c8d0:	88 0f       	add	r24, r24
    c8d2:	99 1f       	adc	r25, r25
    c8d4:	aa 1f       	adc	r26, r26
    c8d6:	bb 1f       	adc	r27, r27
    c8d8:	88 0f       	add	r24, r24
    c8da:	99 1f       	adc	r25, r25
    c8dc:	aa 1f       	adc	r26, r26
    c8de:	bb 1f       	adc	r27, r27
    c8e0:	88 0f       	add	r24, r24
    c8e2:	99 1f       	adc	r25, r25
    c8e4:	aa 1f       	adc	r26, r26
    c8e6:	bb 1f       	adc	r27, r27
    c8e8:	88 0f       	add	r24, r24
    c8ea:	99 1f       	adc	r25, r25
    c8ec:	aa 1f       	adc	r26, r26
    c8ee:	bb 1f       	adc	r27, r27
    c8f0:	88 0f       	add	r24, r24
    c8f2:	99 1f       	adc	r25, r25
    c8f4:	aa 1f       	adc	r26, r26
    c8f6:	bb 1f       	adc	r27, r27
    c8f8:	88 0f       	add	r24, r24
    c8fa:	99 1f       	adc	r25, r25
    c8fc:	aa 1f       	adc	r26, r26
    c8fe:	bb 1f       	adc	r27, r27
    c900:	88 0f       	add	r24, r24
    c902:	99 1f       	adc	r25, r25
    c904:	aa 1f       	adc	r26, r26
    c906:	bb 1f       	adc	r27, r27
    c908:	92 50       	subi	r25, 0x02	; 2
    c90a:	a1 09       	sbc	r26, r1
    c90c:	b1 09       	sbc	r27, r1
    c90e:	2c 89       	ldd	r18, Y+20	; 0x14
    c910:	3d 89       	ldd	r19, Y+21	; 0x15
    c912:	f9 01       	movw	r30, r18
    c914:	80 83       	st	Z, r24
    c916:	91 83       	std	Z+1, r25	; 0x01
    c918:	a2 83       	std	Z+2, r26	; 0x02
    c91a:	b3 83       	std	Z+3, r27	; 0x03
    c91c:	8c 89       	ldd	r24, Y+20	; 0x14
    c91e:	9d 89       	ldd	r25, Y+21	; 0x15
    c920:	fc 01       	movw	r30, r24
    c922:	14 82       	std	Z+4, r1	; 0x04
    c924:	15 82       	std	Z+5, r1	; 0x05
    c926:	16 82       	std	Z+6, r1	; 0x06
    c928:	17 82       	std	Z+7, r1	; 0x07
    c92a:	2c 89       	ldd	r18, Y+20	; 0x14
    c92c:	3d 89       	ldd	r19, Y+21	; 0x15
    c92e:	81 e0       	ldi	r24, 0x01	; 1
    c930:	90 e0       	ldi	r25, 0x00	; 0
    c932:	a0 e0       	ldi	r26, 0x00	; 0
    c934:	b0 e0       	ldi	r27, 0x00	; 0
    c936:	f9 01       	movw	r30, r18
    c938:	80 87       	std	Z+8, r24	; 0x08
    c93a:	91 87       	std	Z+9, r25	; 0x09
    c93c:	a2 87       	std	Z+10, r26	; 0x0a
    c93e:	b3 87       	std	Z+11, r27	; 0x0b
    c940:	8d 81       	ldd	r24, Y+5	; 0x05
    c942:	9e 81       	ldd	r25, Y+6	; 0x06
    c944:	af 81       	ldd	r26, Y+7	; 0x07
    c946:	b8 85       	ldd	r27, Y+8	; 0x08
    c948:	bc 01       	movw	r22, r24
    c94a:	cd 01       	movw	r24, r26
    c94c:	69 96       	adiw	r28, 0x19	; 25
    c94e:	cd bf       	out	0x3d, r28	; 61
    c950:	de bf       	out	0x3e, r29	; 62
    c952:	df 91       	pop	r29
    c954:	cf 91       	pop	r28
    c956:	1f 91       	pop	r17
    c958:	0f 91       	pop	r16
    c95a:	08 95       	ret

0000c95c <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    c95c:	0f 93       	push	r16
    c95e:	1f 93       	push	r17
    c960:	cf 93       	push	r28
    c962:	df 93       	push	r29
    c964:	cd b7       	in	r28, 0x3d	; 61
    c966:	de b7       	in	r29, 0x3e	; 62
    c968:	6e 97       	sbiw	r28, 0x1e	; 30
    c96a:	cd bf       	out	0x3d, r28	; 61
    c96c:	de bf       	out	0x3e, r29	; 62
    c96e:	6d 8b       	std	Y+21, r22	; 0x15
    c970:	7e 8b       	std	Y+22, r23	; 0x16
    c972:	8f 8b       	std	Y+23, r24	; 0x17
    c974:	98 8f       	std	Y+24, r25	; 0x18
    c976:	49 8f       	std	Y+25, r20	; 0x19
    c978:	5a 8f       	std	Y+26, r21	; 0x1a
    c97a:	2b 8f       	std	Y+27, r18	; 0x1b
    c97c:	3c 8f       	std	Y+28, r19	; 0x1c
    c97e:	0d 8f       	std	Y+29, r16	; 0x1d
    c980:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    c982:	80 91 93 4a 	lds	r24, 0x4A93	; 0x804a93 <_ZL8freqVCOB>
    c986:	90 91 94 4a 	lds	r25, 0x4A94	; 0x804a94 <_ZL8freqVCOB+0x1>
    c98a:	a0 91 95 4a 	lds	r26, 0x4A95	; 0x804a95 <_ZL8freqVCOB+0x2>
    c98e:	b0 91 96 4a 	lds	r27, 0x4A96	; 0x804a96 <_ZL8freqVCOB+0x3>
    c992:	2d 89       	ldd	r18, Y+21	; 0x15
    c994:	3e 89       	ldd	r19, Y+22	; 0x16
    c996:	4f 89       	ldd	r20, Y+23	; 0x17
    c998:	58 8d       	ldd	r21, Y+24	; 0x18
    c99a:	bc 01       	movw	r22, r24
    c99c:	cd 01       	movw	r24, r26
    c99e:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c9a2:	da 01       	movw	r26, r20
    c9a4:	c9 01       	movw	r24, r18
    c9a6:	89 83       	std	Y+1, r24	; 0x01
    c9a8:	9a 83       	std	Y+2, r25	; 0x02
    c9aa:	ab 83       	std	Y+3, r26	; 0x03
    c9ac:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    c9ae:	80 91 93 4a 	lds	r24, 0x4A93	; 0x804a93 <_ZL8freqVCOB>
    c9b2:	90 91 94 4a 	lds	r25, 0x4A94	; 0x804a94 <_ZL8freqVCOB+0x1>
    c9b6:	a0 91 95 4a 	lds	r26, 0x4A95	; 0x804a95 <_ZL8freqVCOB+0x2>
    c9ba:	b0 91 96 4a 	lds	r27, 0x4A96	; 0x804a96 <_ZL8freqVCOB+0x3>
    c9be:	2d 89       	ldd	r18, Y+21	; 0x15
    c9c0:	3e 89       	ldd	r19, Y+22	; 0x16
    c9c2:	4f 89       	ldd	r20, Y+23	; 0x17
    c9c4:	58 8d       	ldd	r21, Y+24	; 0x18
    c9c6:	bc 01       	movw	r22, r24
    c9c8:	cd 01       	movw	r24, r26
    c9ca:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    c9ce:	dc 01       	movw	r26, r24
    c9d0:	cb 01       	movw	r24, r22
    c9d2:	8d 87       	std	Y+13, r24	; 0x0d
    c9d4:	9e 87       	std	Y+14, r25	; 0x0e
    c9d6:	af 87       	std	Y+15, r26	; 0x0f
    c9d8:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    c9da:	8d 89       	ldd	r24, Y+21	; 0x15
    c9dc:	9e 89       	ldd	r25, Y+22	; 0x16
    c9de:	af 89       	ldd	r26, Y+23	; 0x17
    c9e0:	b8 8d       	ldd	r27, Y+24	; 0x18
    c9e2:	89 8b       	std	Y+17, r24	; 0x11
    c9e4:	9a 8b       	std	Y+18, r25	; 0x12
    c9e6:	ab 8b       	std	Y+19, r26	; 0x13
    c9e8:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    c9ea:	9e 01       	movw	r18, r28
    c9ec:	2f 5e       	subi	r18, 0xEF	; 239
    c9ee:	3f 4f       	sbci	r19, 0xFF	; 255
    c9f0:	ce 01       	movw	r24, r28
    c9f2:	0d 96       	adiw	r24, 0x0d	; 13
    c9f4:	b9 01       	movw	r22, r18
    c9f6:	0e 94 f1 62 	call	0xc5e2	; 0xc5e2 <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    c9fa:	80 91 93 4a 	lds	r24, 0x4A93	; 0x804a93 <_ZL8freqVCOB>
    c9fe:	90 91 94 4a 	lds	r25, 0x4A94	; 0x804a94 <_ZL8freqVCOB+0x1>
    ca02:	a0 91 95 4a 	lds	r26, 0x4A95	; 0x804a95 <_ZL8freqVCOB+0x2>
    ca06:	b0 91 96 4a 	lds	r27, 0x4A96	; 0x804a96 <_ZL8freqVCOB+0x3>
    ca0a:	8d 8b       	std	Y+21, r24	; 0x15
    ca0c:	9e 8b       	std	Y+22, r25	; 0x16
    ca0e:	af 8b       	std	Y+23, r26	; 0x17
    ca10:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    ca12:	29 89       	ldd	r18, Y+17	; 0x11
    ca14:	3a 89       	ldd	r19, Y+18	; 0x12
    ca16:	4b 89       	ldd	r20, Y+19	; 0x13
    ca18:	5c 89       	ldd	r21, Y+20	; 0x14
    ca1a:	89 81       	ldd	r24, Y+1	; 0x01
    ca1c:	9a 81       	ldd	r25, Y+2	; 0x02
    ca1e:	ab 81       	ldd	r26, Y+3	; 0x03
    ca20:	bc 81       	ldd	r27, Y+4	; 0x04
    ca22:	bc 01       	movw	r22, r24
    ca24:	cd 01       	movw	r24, r26
    ca26:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    ca2a:	9b 01       	movw	r18, r22
    ca2c:	ac 01       	movw	r20, r24
    ca2e:	8d 85       	ldd	r24, Y+13	; 0x0d
    ca30:	9e 85       	ldd	r25, Y+14	; 0x0e
    ca32:	af 85       	ldd	r26, Y+15	; 0x0f
    ca34:	b8 89       	ldd	r27, Y+16	; 0x10
    ca36:	28 0f       	add	r18, r24
    ca38:	39 1f       	adc	r19, r25
    ca3a:	4a 1f       	adc	r20, r26
    ca3c:	5b 1f       	adc	r21, r27
    ca3e:	8d 89       	ldd	r24, Y+21	; 0x15
    ca40:	9e 89       	ldd	r25, Y+22	; 0x16
    ca42:	af 89       	ldd	r26, Y+23	; 0x17
    ca44:	b8 8d       	ldd	r27, Y+24	; 0x18
    ca46:	bc 01       	movw	r22, r24
    ca48:	cd 01       	movw	r24, r26
    ca4a:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    ca4e:	da 01       	movw	r26, r20
    ca50:	c9 01       	movw	r24, r18
    ca52:	8d 8b       	std	Y+21, r24	; 0x15
    ca54:	9e 8b       	std	Y+22, r25	; 0x16
    ca56:	af 8b       	std	Y+23, r26	; 0x17
    ca58:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    ca5a:	89 89       	ldd	r24, Y+17	; 0x11
    ca5c:	9a 89       	ldd	r25, Y+18	; 0x12
    ca5e:	ab 89       	ldd	r26, Y+19	; 0x13
    ca60:	bc 89       	ldd	r27, Y+20	; 0x14
    ca62:	2d 89       	ldd	r18, Y+21	; 0x15
    ca64:	3e 89       	ldd	r19, Y+22	; 0x16
    ca66:	4f 89       	ldd	r20, Y+23	; 0x17
    ca68:	58 8d       	ldd	r21, Y+24	; 0x18
    ca6a:	bc 01       	movw	r22, r24
    ca6c:	cd 01       	movw	r24, r26
    ca6e:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    ca72:	dc 01       	movw	r26, r24
    ca74:	cb 01       	movw	r24, r22
    ca76:	8d 8b       	std	Y+21, r24	; 0x15
    ca78:	9e 8b       	std	Y+22, r25	; 0x16
    ca7a:	af 8b       	std	Y+23, r26	; 0x17
    ca7c:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    ca7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    ca80:	9e 85       	ldd	r25, Y+14	; 0x0e
    ca82:	af 85       	ldd	r26, Y+15	; 0x0f
    ca84:	b8 89       	ldd	r27, Y+16	; 0x10
    ca86:	89 2b       	or	r24, r25
    ca88:	8a 2b       	or	r24, r26
    ca8a:	8b 2b       	or	r24, r27
    ca8c:	71 f4       	brne	.+28     	; 0xcaaa <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    ca8e:	89 81       	ldd	r24, Y+1	; 0x01
    ca90:	9a 81       	ldd	r25, Y+2	; 0x02
    ca92:	ab 81       	ldd	r26, Y+3	; 0x03
    ca94:	bc 81       	ldd	r27, Y+4	; 0x04
    ca96:	81 70       	andi	r24, 0x01	; 1
    ca98:	99 27       	eor	r25, r25
    ca9a:	aa 27       	eor	r26, r26
    ca9c:	bb 27       	eor	r27, r27
    ca9e:	89 2b       	or	r24, r25
    caa0:	8a 2b       	or	r24, r26
    caa2:	8b 2b       	or	r24, r27
    caa4:	11 f4       	brne	.+4      	; 0xcaaa <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    caa6:	21 e0       	ldi	r18, 0x01	; 1
    caa8:	01 c0       	rjmp	.+2      	; 0xcaac <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    caaa:	20 e0       	ldi	r18, 0x00	; 0
    caac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    caae:	9c 8d       	ldd	r25, Y+28	; 0x1c
    cab0:	fc 01       	movw	r30, r24
    cab2:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    cab4:	89 81       	ldd	r24, Y+1	; 0x01
    cab6:	9a 81       	ldd	r25, Y+2	; 0x02
    cab8:	ab 81       	ldd	r26, Y+3	; 0x03
    caba:	bc 81       	ldd	r27, Y+4	; 0x04
    cabc:	04 97       	sbiw	r24, 0x04	; 4
    cabe:	a1 05       	cpc	r26, r1
    cac0:	b1 05       	cpc	r27, r1
    cac2:	41 f4       	brne	.+16     	; 0xcad4 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    cac4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    cac6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    cac8:	fc 01       	movw	r30, r24
    caca:	80 81       	ld	r24, Z
    cacc:	88 23       	and	r24, r24
    cace:	11 f0       	breq	.+4      	; 0xcad4 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    cad0:	21 e0       	ldi	r18, 0x01	; 1
    cad2:	01 c0       	rjmp	.+2      	; 0xcad6 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    cad4:	20 e0       	ldi	r18, 0x00	; 0
    cad6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cad8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    cada:	fc 01       	movw	r30, r24
    cadc:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    cade:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cae0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    cae2:	fc 01       	movw	r30, r24
    cae4:	80 81       	ld	r24, Z
    cae6:	88 23       	and	r24, r24
    cae8:	d1 f0       	breq	.+52     	; 0xcb1e <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    caea:	89 8d       	ldd	r24, Y+25	; 0x19
    caec:	9a 8d       	ldd	r25, Y+26	; 0x1a
    caee:	fc 01       	movw	r30, r24
    caf0:	10 82       	st	Z, r1
    caf2:	11 82       	std	Z+1, r1	; 0x01
    caf4:	12 82       	std	Z+2, r1	; 0x02
    caf6:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    caf8:	89 8d       	ldd	r24, Y+25	; 0x19
    cafa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cafc:	fc 01       	movw	r30, r24
    cafe:	14 82       	std	Z+4, r1	; 0x04
    cb00:	15 82       	std	Z+5, r1	; 0x05
    cb02:	16 82       	std	Z+6, r1	; 0x06
    cb04:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    cb06:	29 8d       	ldd	r18, Y+25	; 0x19
    cb08:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cb0a:	81 e0       	ldi	r24, 0x01	; 1
    cb0c:	90 e0       	ldi	r25, 0x00	; 0
    cb0e:	a0 e0       	ldi	r26, 0x00	; 0
    cb10:	b0 e0       	ldi	r27, 0x00	; 0
    cb12:	f9 01       	movw	r30, r18
    cb14:	80 87       	std	Z+8, r24	; 0x08
    cb16:	91 87       	std	Z+9, r25	; 0x09
    cb18:	a2 87       	std	Z+10, r26	; 0x0a
    cb1a:	b3 87       	std	Z+11, r27	; 0x0b
    cb1c:	92 c0       	rjmp	.+292    	; 0xcc42 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    cb1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    cb20:	9e 85       	ldd	r25, Y+14	; 0x0e
    cb22:	af 85       	ldd	r26, Y+15	; 0x0f
    cb24:	b8 89       	ldd	r27, Y+16	; 0x10
    cb26:	88 0f       	add	r24, r24
    cb28:	99 1f       	adc	r25, r25
    cb2a:	aa 1f       	adc	r26, r26
    cb2c:	bb 1f       	adc	r27, r27
    cb2e:	88 0f       	add	r24, r24
    cb30:	99 1f       	adc	r25, r25
    cb32:	aa 1f       	adc	r26, r26
    cb34:	bb 1f       	adc	r27, r27
    cb36:	88 0f       	add	r24, r24
    cb38:	99 1f       	adc	r25, r25
    cb3a:	aa 1f       	adc	r26, r26
    cb3c:	bb 1f       	adc	r27, r27
    cb3e:	88 0f       	add	r24, r24
    cb40:	99 1f       	adc	r25, r25
    cb42:	aa 1f       	adc	r26, r26
    cb44:	bb 1f       	adc	r27, r27
    cb46:	88 0f       	add	r24, r24
    cb48:	99 1f       	adc	r25, r25
    cb4a:	aa 1f       	adc	r26, r26
    cb4c:	bb 1f       	adc	r27, r27
    cb4e:	88 0f       	add	r24, r24
    cb50:	99 1f       	adc	r25, r25
    cb52:	aa 1f       	adc	r26, r26
    cb54:	bb 1f       	adc	r27, r27
    cb56:	88 0f       	add	r24, r24
    cb58:	99 1f       	adc	r25, r25
    cb5a:	aa 1f       	adc	r26, r26
    cb5c:	bb 1f       	adc	r27, r27
    cb5e:	8d 83       	std	Y+5, r24	; 0x05
    cb60:	9e 83       	std	Y+6, r25	; 0x06
    cb62:	af 83       	std	Y+7, r26	; 0x07
    cb64:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    cb66:	29 89       	ldd	r18, Y+17	; 0x11
    cb68:	3a 89       	ldd	r19, Y+18	; 0x12
    cb6a:	4b 89       	ldd	r20, Y+19	; 0x13
    cb6c:	5c 89       	ldd	r21, Y+20	; 0x14
    cb6e:	8d 81       	ldd	r24, Y+5	; 0x05
    cb70:	9e 81       	ldd	r25, Y+6	; 0x06
    cb72:	af 81       	ldd	r26, Y+7	; 0x07
    cb74:	b8 85       	ldd	r27, Y+8	; 0x08
    cb76:	bc 01       	movw	r22, r24
    cb78:	cd 01       	movw	r24, r26
    cb7a:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    cb7e:	da 01       	movw	r26, r20
    cb80:	c9 01       	movw	r24, r18
    cb82:	89 87       	std	Y+9, r24	; 0x09
    cb84:	9a 87       	std	Y+10, r25	; 0x0a
    cb86:	ab 87       	std	Y+11, r26	; 0x0b
    cb88:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    cb8a:	89 81       	ldd	r24, Y+1	; 0x01
    cb8c:	9a 81       	ldd	r25, Y+2	; 0x02
    cb8e:	ab 81       	ldd	r26, Y+3	; 0x03
    cb90:	bc 81       	ldd	r27, Y+4	; 0x04
    cb92:	88 0f       	add	r24, r24
    cb94:	99 1f       	adc	r25, r25
    cb96:	aa 1f       	adc	r26, r26
    cb98:	bb 1f       	adc	r27, r27
    cb9a:	88 0f       	add	r24, r24
    cb9c:	99 1f       	adc	r25, r25
    cb9e:	aa 1f       	adc	r26, r26
    cba0:	bb 1f       	adc	r27, r27
    cba2:	88 0f       	add	r24, r24
    cba4:	99 1f       	adc	r25, r25
    cba6:	aa 1f       	adc	r26, r26
    cba8:	bb 1f       	adc	r27, r27
    cbaa:	88 0f       	add	r24, r24
    cbac:	99 1f       	adc	r25, r25
    cbae:	aa 1f       	adc	r26, r26
    cbb0:	bb 1f       	adc	r27, r27
    cbb2:	88 0f       	add	r24, r24
    cbb4:	99 1f       	adc	r25, r25
    cbb6:	aa 1f       	adc	r26, r26
    cbb8:	bb 1f       	adc	r27, r27
    cbba:	88 0f       	add	r24, r24
    cbbc:	99 1f       	adc	r25, r25
    cbbe:	aa 1f       	adc	r26, r26
    cbc0:	bb 1f       	adc	r27, r27
    cbc2:	88 0f       	add	r24, r24
    cbc4:	99 1f       	adc	r25, r25
    cbc6:	aa 1f       	adc	r26, r26
    cbc8:	bb 1f       	adc	r27, r27
    cbca:	9c 01       	movw	r18, r24
    cbcc:	ad 01       	movw	r20, r26
    cbce:	89 85       	ldd	r24, Y+9	; 0x09
    cbd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    cbd2:	ab 85       	ldd	r26, Y+11	; 0x0b
    cbd4:	bc 85       	ldd	r27, Y+12	; 0x0c
    cbd6:	82 0f       	add	r24, r18
    cbd8:	93 1f       	adc	r25, r19
    cbda:	a4 1f       	adc	r26, r20
    cbdc:	b5 1f       	adc	r27, r21
    cbde:	92 50       	subi	r25, 0x02	; 2
    cbe0:	a1 09       	sbc	r26, r1
    cbe2:	b1 09       	sbc	r27, r1
    cbe4:	29 8d       	ldd	r18, Y+25	; 0x19
    cbe6:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cbe8:	f9 01       	movw	r30, r18
    cbea:	80 83       	st	Z, r24
    cbec:	91 83       	std	Z+1, r25	; 0x01
    cbee:	a2 83       	std	Z+2, r26	; 0x02
    cbf0:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    cbf2:	29 89       	ldd	r18, Y+17	; 0x11
    cbf4:	3a 89       	ldd	r19, Y+18	; 0x12
    cbf6:	4b 89       	ldd	r20, Y+19	; 0x13
    cbf8:	5c 89       	ldd	r21, Y+20	; 0x14
    cbfa:	89 85       	ldd	r24, Y+9	; 0x09
    cbfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    cbfe:	ab 85       	ldd	r26, Y+11	; 0x0b
    cc00:	bc 85       	ldd	r27, Y+12	; 0x0c
    cc02:	bc 01       	movw	r22, r24
    cc04:	cd 01       	movw	r24, r26
    cc06:	0e 94 76 74 	call	0xe8ec	; 0xe8ec <__mulsi3>
    cc0a:	9b 01       	movw	r18, r22
    cc0c:	ac 01       	movw	r20, r24
    cc0e:	8d 81       	ldd	r24, Y+5	; 0x05
    cc10:	9e 81       	ldd	r25, Y+6	; 0x06
    cc12:	af 81       	ldd	r26, Y+7	; 0x07
    cc14:	b8 85       	ldd	r27, Y+8	; 0x08
    cc16:	82 1b       	sub	r24, r18
    cc18:	93 0b       	sbc	r25, r19
    cc1a:	a4 0b       	sbc	r26, r20
    cc1c:	b5 0b       	sbc	r27, r21
    cc1e:	29 8d       	ldd	r18, Y+25	; 0x19
    cc20:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cc22:	f9 01       	movw	r30, r18
    cc24:	84 83       	std	Z+4, r24	; 0x04
    cc26:	95 83       	std	Z+5, r25	; 0x05
    cc28:	a6 83       	std	Z+6, r26	; 0x06
    cc2a:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    cc2c:	89 89       	ldd	r24, Y+17	; 0x11
    cc2e:	9a 89       	ldd	r25, Y+18	; 0x12
    cc30:	ab 89       	ldd	r26, Y+19	; 0x13
    cc32:	bc 89       	ldd	r27, Y+20	; 0x14
    cc34:	29 8d       	ldd	r18, Y+25	; 0x19
    cc36:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cc38:	f9 01       	movw	r30, r18
    cc3a:	80 87       	std	Z+8, r24	; 0x08
    cc3c:	91 87       	std	Z+9, r25	; 0x09
    cc3e:	a2 87       	std	Z+10, r26	; 0x0a
    cc40:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    cc42:	8d 89       	ldd	r24, Y+21	; 0x15
    cc44:	9e 89       	ldd	r25, Y+22	; 0x16
    cc46:	af 89       	ldd	r26, Y+23	; 0x17
    cc48:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    cc4a:	bc 01       	movw	r22, r24
    cc4c:	cd 01       	movw	r24, r26
    cc4e:	6e 96       	adiw	r28, 0x1e	; 30
    cc50:	cd bf       	out	0x3d, r28	; 61
    cc52:	de bf       	out	0x3e, r29	; 62
    cc54:	df 91       	pop	r29
    cc56:	cf 91       	pop	r28
    cc58:	1f 91       	pop	r17
    cc5a:	0f 91       	pop	r16
    cc5c:	08 95       	ret

0000cc5e <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    cc5e:	cf 93       	push	r28
    cc60:	df 93       	push	r29
    cc62:	cd b7       	in	r28, 0x3d	; 61
    cc64:	de b7       	in	r29, 0x3e	; 62
    cc66:	26 97       	sbiw	r28, 0x06	; 6
    cc68:	cd bf       	out	0x3d, r28	; 61
    cc6a:	de bf       	out	0x3e, r29	; 62
    cc6c:	8b 83       	std	Y+3, r24	; 0x03
    cc6e:	6c 83       	std	Y+4, r22	; 0x04
    cc70:	7d 83       	std	Y+5, r23	; 0x05
    cc72:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    cc74:	8a e0       	ldi	r24, 0x0A	; 10
    cc76:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    cc78:	89 81       	ldd	r24, Y+1	; 0x01
    cc7a:	9f ef       	ldi	r25, 0xFF	; 255
    cc7c:	98 0f       	add	r25, r24
    cc7e:	99 83       	std	Y+1, r25	; 0x01
    cc80:	88 23       	and	r24, r24
    cc82:	a1 f0       	breq	.+40     	; 0xccac <_Z17si5351_write_bulkhPhh+0x4e>
    cc84:	8c 81       	ldd	r24, Y+4	; 0x04
    cc86:	9d 81       	ldd	r25, Y+5	; 0x05
    cc88:	2e 81       	ldd	r18, Y+6	; 0x06
    cc8a:	ac 01       	movw	r20, r24
    cc8c:	6b 81       	ldd	r22, Y+3	; 0x03
    cc8e:	80 ec       	ldi	r24, 0xC0	; 192
    cc90:	0e 94 a5 4b 	call	0x974a	; 0x974a <I2C_1_SendData>
    cc94:	28 2f       	mov	r18, r24
    cc96:	81 e0       	ldi	r24, 0x01	; 1
    cc98:	9e 81       	ldd	r25, Y+6	; 0x06
    cc9a:	29 17       	cp	r18, r25
    cc9c:	09 f4       	brne	.+2      	; 0xcca0 <_Z17si5351_write_bulkhPhh+0x42>
    cc9e:	80 e0       	ldi	r24, 0x00	; 0
    cca0:	8a 83       	std	Y+2, r24	; 0x02
    cca2:	8a 81       	ldd	r24, Y+2	; 0x02
    cca4:	88 23       	and	r24, r24
    cca6:	11 f0       	breq	.+4      	; 0xccac <_Z17si5351_write_bulkhPhh+0x4e>
    cca8:	81 e0       	ldi	r24, 0x01	; 1
    ccaa:	01 c0       	rjmp	.+2      	; 0xccae <_Z17si5351_write_bulkhPhh+0x50>
    ccac:	80 e0       	ldi	r24, 0x00	; 0
    ccae:	88 23       	and	r24, r24
    ccb0:	09 f0       	breq	.+2      	; 0xccb4 <_Z17si5351_write_bulkhPhh+0x56>
    ccb2:	e2 cf       	rjmp	.-60     	; 0xcc78 <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    ccb4:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    ccb6:	26 96       	adiw	r28, 0x06	; 6
    ccb8:	cd bf       	out	0x3d, r28	; 61
    ccba:	de bf       	out	0x3e, r29	; 62
    ccbc:	df 91       	pop	r29
    ccbe:	cf 91       	pop	r28
    ccc0:	08 95       	ret

0000ccc2 <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    ccc2:	cf 93       	push	r28
    ccc4:	df 93       	push	r29
    ccc6:	cd b7       	in	r28, 0x3d	; 61
    ccc8:	de b7       	in	r29, 0x3e	; 62
    ccca:	26 97       	sbiw	r28, 0x06	; 6
    cccc:	cd bf       	out	0x3d, r28	; 61
    ccce:	de bf       	out	0x3e, r29	; 62
    ccd0:	8b 83       	std	Y+3, r24	; 0x03
    ccd2:	6c 83       	std	Y+4, r22	; 0x04
    ccd4:	7d 83       	std	Y+5, r23	; 0x05
    ccd6:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    ccd8:	8a e0       	ldi	r24, 0x0A	; 10
    ccda:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    ccdc:	89 81       	ldd	r24, Y+1	; 0x01
    ccde:	9f ef       	ldi	r25, 0xFF	; 255
    cce0:	98 0f       	add	r25, r24
    cce2:	99 83       	std	Y+1, r25	; 0x01
    cce4:	88 23       	and	r24, r24
    cce6:	a1 f0       	breq	.+40     	; 0xcd10 <_Z16si5351_read_bulkhPhh+0x4e>
    cce8:	8c 81       	ldd	r24, Y+4	; 0x04
    ccea:	9d 81       	ldd	r25, Y+5	; 0x05
    ccec:	2e 81       	ldd	r18, Y+6	; 0x06
    ccee:	ac 01       	movw	r20, r24
    ccf0:	6b 81       	ldd	r22, Y+3	; 0x03
    ccf2:	80 ec       	ldi	r24, 0xC0	; 192
    ccf4:	0e 94 0e 4c 	call	0x981c	; 0x981c <I2C_1_GetData>
    ccf8:	28 2f       	mov	r18, r24
    ccfa:	81 e0       	ldi	r24, 0x01	; 1
    ccfc:	9e 81       	ldd	r25, Y+6	; 0x06
    ccfe:	29 17       	cp	r18, r25
    cd00:	09 f4       	brne	.+2      	; 0xcd04 <_Z16si5351_read_bulkhPhh+0x42>
    cd02:	80 e0       	ldi	r24, 0x00	; 0
    cd04:	8a 83       	std	Y+2, r24	; 0x02
    cd06:	8a 81       	ldd	r24, Y+2	; 0x02
    cd08:	88 23       	and	r24, r24
    cd0a:	11 f0       	breq	.+4      	; 0xcd10 <_Z16si5351_read_bulkhPhh+0x4e>
    cd0c:	81 e0       	ldi	r24, 0x01	; 1
    cd0e:	01 c0       	rjmp	.+2      	; 0xcd12 <_Z16si5351_read_bulkhPhh+0x50>
    cd10:	80 e0       	ldi	r24, 0x00	; 0
    cd12:	88 23       	and	r24, r24
    cd14:	09 f0       	breq	.+2      	; 0xcd18 <_Z16si5351_read_bulkhPhh+0x56>
    cd16:	e2 cf       	rjmp	.-60     	; 0xccdc <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    cd18:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    cd1a:	26 96       	adiw	r28, 0x06	; 6
    cd1c:	cd bf       	out	0x3d, r28	; 61
    cd1e:	de bf       	out	0x3e, r29	; 62
    cd20:	df 91       	pop	r29
    cd22:	cf 91       	pop	r28
    cd24:	08 95       	ret

0000cd26 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    cd26:	cf 93       	push	r28
    cd28:	df 93       	push	r29
    cd2a:	cd b7       	in	r28, 0x3d	; 61
    cd2c:	de b7       	in	r29, 0x3e	; 62
    cd2e:	25 97       	sbiw	r28, 0x05	; 5
    cd30:	cd bf       	out	0x3d, r28	; 61
    cd32:	de bf       	out	0x3e, r29	; 62
    cd34:	8c 83       	std	Y+4, r24	; 0x04
    cd36:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    cd38:	8c 81       	ldd	r24, Y+4	; 0x04
    cd3a:	20 e1       	ldi	r18, 0x10	; 16
    cd3c:	28 0f       	add	r18, r24
    cd3e:	ce 01       	movw	r24, r28
    cd40:	02 96       	adiw	r24, 0x02	; 2
    cd42:	41 e0       	ldi	r20, 0x01	; 1
    cd44:	bc 01       	movw	r22, r24
    cd46:	82 2f       	mov	r24, r18
    cd48:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    cd4c:	88 23       	and	r24, r24
    cd4e:	11 f0       	breq	.+4      	; 0xcd54 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    cd50:	81 e0       	ldi	r24, 0x01	; 1
    cd52:	20 c0       	rjmp	.+64     	; 0xcd94 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    cd54:	8a 81       	ldd	r24, Y+2	; 0x02
    cd56:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    cd58:	8d 81       	ldd	r24, Y+5	; 0x05
    cd5a:	81 30       	cpi	r24, 0x01	; 1
    cd5c:	21 f4       	brne	.+8      	; 0xcd66 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    cd5e:	89 81       	ldd	r24, Y+1	; 0x01
    cd60:	8f 7d       	andi	r24, 0xDF	; 223
    cd62:	89 83       	std	Y+1, r24	; 0x01
    cd64:	06 c0       	rjmp	.+12     	; 0xcd72 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    cd66:	8d 81       	ldd	r24, Y+5	; 0x05
    cd68:	82 30       	cpi	r24, 0x02	; 2
    cd6a:	19 f4       	brne	.+6      	; 0xcd72 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    cd6c:	89 81       	ldd	r24, Y+1	; 0x01
    cd6e:	80 62       	ori	r24, 0x20	; 32
    cd70:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    cd72:	89 81       	ldd	r24, Y+1	; 0x01
    cd74:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    cd76:	8c 81       	ldd	r24, Y+4	; 0x04
    cd78:	20 e1       	ldi	r18, 0x10	; 16
    cd7a:	28 0f       	add	r18, r24
    cd7c:	ce 01       	movw	r24, r28
    cd7e:	02 96       	adiw	r24, 0x02	; 2
    cd80:	41 e0       	ldi	r20, 0x01	; 1
    cd82:	bc 01       	movw	r22, r24
    cd84:	82 2f       	mov	r24, r18
    cd86:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    cd8a:	88 23       	and	r24, r24
    cd8c:	11 f0       	breq	.+4      	; 0xcd92 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    cd8e:	81 e0       	ldi	r24, 0x01	; 1
    cd90:	01 c0       	rjmp	.+2      	; 0xcd94 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    cd92:	80 e0       	ldi	r24, 0x00	; 0
	}
    cd94:	25 96       	adiw	r28, 0x05	; 5
    cd96:	cd bf       	out	0x3d, r28	; 61
    cd98:	de bf       	out	0x3e, r29	; 62
    cd9a:	df 91       	pop	r29
    cd9c:	cf 91       	pop	r28
    cd9e:	08 95       	ret

0000cda0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    cda0:	8f 92       	push	r8
    cda2:	af 92       	push	r10
    cda4:	cf 92       	push	r12
    cda6:	df 92       	push	r13
    cda8:	ef 92       	push	r14
    cdaa:	ff 92       	push	r15
    cdac:	0f 93       	push	r16
    cdae:	1f 93       	push	r17
    cdb0:	cf 93       	push	r28
    cdb2:	df 93       	push	r29
    cdb4:	cd b7       	in	r28, 0x3d	; 61
    cdb6:	de b7       	in	r29, 0x3e	; 62
    cdb8:	6e 97       	sbiw	r28, 0x1e	; 30
    cdba:	cd bf       	out	0x3d, r28	; 61
    cdbc:	de bf       	out	0x3e, r29	; 62
    cdbe:	88 8b       	std	Y+16, r24	; 0x10
    cdc0:	c9 8a       	std	Y+17, r12	; 0x11
    cdc2:	da 8a       	std	Y+18, r13	; 0x12
    cdc4:	eb 8a       	std	Y+19, r14	; 0x13
    cdc6:	fc 8a       	std	Y+20, r15	; 0x14
    cdc8:	0d 8b       	std	Y+21, r16	; 0x15
    cdca:	1e 8b       	std	Y+22, r17	; 0x16
    cdcc:	2f 8b       	std	Y+23, r18	; 0x17
    cdce:	38 8f       	std	Y+24, r19	; 0x18
    cdd0:	49 8f       	std	Y+25, r20	; 0x19
    cdd2:	5a 8f       	std	Y+26, r21	; 0x1a
    cdd4:	6b 8f       	std	Y+27, r22	; 0x1b
    cdd6:	7c 8f       	std	Y+28, r23	; 0x1c
    cdd8:	ad 8e       	std	Y+29, r10	; 0x1d
    cdda:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    cddc:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    cdde:	89 81       	ldd	r24, Y+1	; 0x01
    cde0:	91 e0       	ldi	r25, 0x01	; 1
    cde2:	98 0f       	add	r25, r24
    cde4:	99 83       	std	Y+1, r25	; 0x01
    cde6:	88 2f       	mov	r24, r24
    cde8:	90 e0       	ldi	r25, 0x00	; 0
    cdea:	4a 8d       	ldd	r20, Y+26	; 0x1a
    cdec:	9e 01       	movw	r18, r28
    cdee:	2d 5f       	subi	r18, 0xFD	; 253
    cdf0:	3f 4f       	sbci	r19, 0xFF	; 255
    cdf2:	82 0f       	add	r24, r18
    cdf4:	93 1f       	adc	r25, r19
    cdf6:	fc 01       	movw	r30, r24
    cdf8:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    cdfa:	89 81       	ldd	r24, Y+1	; 0x01
    cdfc:	91 e0       	ldi	r25, 0x01	; 1
    cdfe:	98 0f       	add	r25, r24
    ce00:	99 83       	std	Y+1, r25	; 0x01
    ce02:	88 2f       	mov	r24, r24
    ce04:	90 e0       	ldi	r25, 0x00	; 0
    ce06:	49 8d       	ldd	r20, Y+25	; 0x19
    ce08:	9e 01       	movw	r18, r28
    ce0a:	2d 5f       	subi	r18, 0xFD	; 253
    ce0c:	3f 4f       	sbci	r19, 0xFF	; 255
    ce0e:	82 0f       	add	r24, r18
    ce10:	93 1f       	adc	r25, r19
    ce12:	fc 01       	movw	r30, r24
    ce14:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    ce16:	88 89       	ldd	r24, Y+16	; 0x10
    ce18:	88 0f       	add	r24, r24
    ce1a:	88 0f       	add	r24, r24
    ce1c:	88 0f       	add	r24, r24
    ce1e:	2c e2       	ldi	r18, 0x2C	; 44
    ce20:	28 0f       	add	r18, r24
    ce22:	ce 01       	movw	r24, r28
    ce24:	0e 96       	adiw	r24, 0x0e	; 14
    ce26:	41 e0       	ldi	r20, 0x01	; 1
    ce28:	bc 01       	movw	r22, r24
    ce2a:	82 2f       	mov	r24, r18
    ce2c:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    ce30:	88 23       	and	r24, r24
    ce32:	11 f0       	breq	.+4      	; 0xce38 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    ce34:	81 e0       	ldi	r24, 0x01	; 1
    ce36:	bc c0       	rjmp	.+376    	; 0xcfb0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    ce38:	8e 85       	ldd	r24, Y+14	; 0x0e
    ce3a:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    ce3c:	8a 81       	ldd	r24, Y+2	; 0x02
    ce3e:	8c 7f       	andi	r24, 0xFC	; 252
    ce40:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    ce42:	89 81       	ldd	r24, Y+1	; 0x01
    ce44:	91 e0       	ldi	r25, 0x01	; 1
    ce46:	98 0f       	add	r25, r24
    ce48:	99 83       	std	Y+1, r25	; 0x01
    ce4a:	88 2f       	mov	r24, r24
    ce4c:	90 e0       	ldi	r25, 0x00	; 0
    ce4e:	2b 89       	ldd	r18, Y+19	; 0x13
    ce50:	32 2f       	mov	r19, r18
    ce52:	33 70       	andi	r19, 0x03	; 3
    ce54:	2a 81       	ldd	r18, Y+2	; 0x02
    ce56:	23 2b       	or	r18, r19
    ce58:	42 2f       	mov	r20, r18
    ce5a:	9e 01       	movw	r18, r28
    ce5c:	2d 5f       	subi	r18, 0xFD	; 253
    ce5e:	3f 4f       	sbci	r19, 0xFF	; 255
    ce60:	82 0f       	add	r24, r18
    ce62:	93 1f       	adc	r25, r19
    ce64:	fc 01       	movw	r30, r24
    ce66:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    ce68:	89 81       	ldd	r24, Y+1	; 0x01
    ce6a:	91 e0       	ldi	r25, 0x01	; 1
    ce6c:	98 0f       	add	r25, r24
    ce6e:	99 83       	std	Y+1, r25	; 0x01
    ce70:	88 2f       	mov	r24, r24
    ce72:	90 e0       	ldi	r25, 0x00	; 0
    ce74:	4a 89       	ldd	r20, Y+18	; 0x12
    ce76:	9e 01       	movw	r18, r28
    ce78:	2d 5f       	subi	r18, 0xFD	; 253
    ce7a:	3f 4f       	sbci	r19, 0xFF	; 255
    ce7c:	82 0f       	add	r24, r18
    ce7e:	93 1f       	adc	r25, r19
    ce80:	fc 01       	movw	r30, r24
    ce82:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    ce84:	89 81       	ldd	r24, Y+1	; 0x01
    ce86:	91 e0       	ldi	r25, 0x01	; 1
    ce88:	98 0f       	add	r25, r24
    ce8a:	99 83       	std	Y+1, r25	; 0x01
    ce8c:	88 2f       	mov	r24, r24
    ce8e:	90 e0       	ldi	r25, 0x00	; 0
    ce90:	49 89       	ldd	r20, Y+17	; 0x11
    ce92:	9e 01       	movw	r18, r28
    ce94:	2d 5f       	subi	r18, 0xFD	; 253
    ce96:	3f 4f       	sbci	r19, 0xFF	; 255
    ce98:	82 0f       	add	r24, r18
    ce9a:	93 1f       	adc	r25, r19
    ce9c:	fc 01       	movw	r30, r24
    ce9e:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    cea0:	89 81       	ldd	r24, Y+1	; 0x01
    cea2:	88 2f       	mov	r24, r24
    cea4:	90 e0       	ldi	r25, 0x00	; 0
    cea6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    cea8:	42 2f       	mov	r20, r18
    ceaa:	42 95       	swap	r20
    ceac:	40 7f       	andi	r20, 0xF0	; 240
    ceae:	9e 01       	movw	r18, r28
    ceb0:	2d 5f       	subi	r18, 0xFD	; 253
    ceb2:	3f 4f       	sbci	r19, 0xFF	; 255
    ceb4:	82 0f       	add	r24, r18
    ceb6:	93 1f       	adc	r25, r19
    ceb8:	fc 01       	movw	r30, r24
    ceba:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    cebc:	29 81       	ldd	r18, Y+1	; 0x01
    cebe:	81 e0       	ldi	r24, 0x01	; 1
    cec0:	82 0f       	add	r24, r18
    cec2:	89 83       	std	Y+1, r24	; 0x01
    cec4:	82 2f       	mov	r24, r18
    cec6:	90 e0       	ldi	r25, 0x00	; 0
    cec8:	22 2f       	mov	r18, r18
    ceca:	30 e0       	ldi	r19, 0x00	; 0
    cecc:	ae 01       	movw	r20, r28
    cece:	4d 5f       	subi	r20, 0xFD	; 253
    ced0:	5f 4f       	sbci	r21, 0xFF	; 255
    ced2:	24 0f       	add	r18, r20
    ced4:	35 1f       	adc	r19, r21
    ced6:	f9 01       	movw	r30, r18
    ced8:	30 81       	ld	r19, Z
    ceda:	2f 89       	ldd	r18, Y+23	; 0x17
    cedc:	2f 70       	andi	r18, 0x0F	; 15
    cede:	43 2f       	mov	r20, r19
    cee0:	42 0f       	add	r20, r18
    cee2:	9e 01       	movw	r18, r28
    cee4:	2d 5f       	subi	r18, 0xFD	; 253
    cee6:	3f 4f       	sbci	r19, 0xFF	; 255
    cee8:	82 0f       	add	r24, r18
    ceea:	93 1f       	adc	r25, r19
    ceec:	fc 01       	movw	r30, r24
    ceee:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    cef0:	89 81       	ldd	r24, Y+1	; 0x01
    cef2:	91 e0       	ldi	r25, 0x01	; 1
    cef4:	98 0f       	add	r25, r24
    cef6:	99 83       	std	Y+1, r25	; 0x01
    cef8:	88 2f       	mov	r24, r24
    cefa:	90 e0       	ldi	r25, 0x00	; 0
    cefc:	4e 89       	ldd	r20, Y+22	; 0x16
    cefe:	9e 01       	movw	r18, r28
    cf00:	2d 5f       	subi	r18, 0xFD	; 253
    cf02:	3f 4f       	sbci	r19, 0xFF	; 255
    cf04:	82 0f       	add	r24, r18
    cf06:	93 1f       	adc	r25, r19
    cf08:	fc 01       	movw	r30, r24
    cf0a:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    cf0c:	89 81       	ldd	r24, Y+1	; 0x01
    cf0e:	91 e0       	ldi	r25, 0x01	; 1
    cf10:	98 0f       	add	r25, r24
    cf12:	99 83       	std	Y+1, r25	; 0x01
    cf14:	88 2f       	mov	r24, r24
    cf16:	90 e0       	ldi	r25, 0x00	; 0
    cf18:	4d 89       	ldd	r20, Y+21	; 0x15
    cf1a:	9e 01       	movw	r18, r28
    cf1c:	2d 5f       	subi	r18, 0xFD	; 253
    cf1e:	3f 4f       	sbci	r19, 0xFF	; 255
    cf20:	82 0f       	add	r24, r18
    cf22:	93 1f       	adc	r25, r19
    cf24:	fc 01       	movw	r30, r24
    cf26:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    cf28:	88 89       	ldd	r24, Y+16	; 0x10
    cf2a:	88 2f       	mov	r24, r24
    cf2c:	90 e0       	ldi	r25, 0x00	; 0
    cf2e:	81 30       	cpi	r24, 0x01	; 1
    cf30:	91 05       	cpc	r25, r1
    cf32:	89 f0       	breq	.+34     	; 0xcf56 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    cf34:	82 30       	cpi	r24, 0x02	; 2
    cf36:	91 05       	cpc	r25, r1
    cf38:	c9 f0       	breq	.+50     	; 0xcf6c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    cf3a:	89 2b       	or	r24, r25
    cf3c:	09 f0       	breq	.+2      	; 0xcf40 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    cf3e:	26 c0       	rjmp	.+76     	; 0xcf8c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    cf40:	ce 01       	movw	r24, r28
    cf42:	03 96       	adiw	r24, 0x03	; 3
    cf44:	49 81       	ldd	r20, Y+1	; 0x01
    cf46:	bc 01       	movw	r22, r24
    cf48:	8a e2       	ldi	r24, 0x2A	; 42
    cf4a:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    cf4e:	88 23       	and	r24, r24
    cf50:	c1 f0       	breq	.+48     	; 0xcf82 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    cf52:	81 e0       	ldi	r24, 0x01	; 1
    cf54:	2d c0       	rjmp	.+90     	; 0xcfb0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    cf56:	ce 01       	movw	r24, r28
    cf58:	03 96       	adiw	r24, 0x03	; 3
    cf5a:	49 81       	ldd	r20, Y+1	; 0x01
    cf5c:	bc 01       	movw	r22, r24
    cf5e:	82 e3       	ldi	r24, 0x32	; 50
    cf60:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    cf64:	88 23       	and	r24, r24
    cf66:	79 f0       	breq	.+30     	; 0xcf86 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    cf68:	81 e0       	ldi	r24, 0x01	; 1
    cf6a:	22 c0       	rjmp	.+68     	; 0xcfb0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    cf6c:	ce 01       	movw	r24, r28
    cf6e:	03 96       	adiw	r24, 0x03	; 3
    cf70:	49 81       	ldd	r20, Y+1	; 0x01
    cf72:	bc 01       	movw	r22, r24
    cf74:	8a e3       	ldi	r24, 0x3A	; 58
    cf76:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
    cf7a:	88 23       	and	r24, r24
    cf7c:	31 f0       	breq	.+12     	; 0xcf8a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    cf7e:	81 e0       	ldi	r24, 0x01	; 1
    cf80:	17 c0       	rjmp	.+46     	; 0xcfb0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    cf82:	00 00       	nop
    cf84:	03 c0       	rjmp	.+6      	; 0xcf8c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    cf86:	00 00       	nop
    cf88:	01 c0       	rjmp	.+2      	; 0xcf8c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    cf8a:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    cf8c:	6d 8d       	ldd	r22, Y+29	; 0x1d
    cf8e:	88 89       	ldd	r24, Y+16	; 0x10
    cf90:	0e 94 e6 67 	call	0xcfcc	; 0xcfcc <_Z16set_integer_mode12si5351_clockb>
    cf94:	88 23       	and	r24, r24
    cf96:	11 f0       	breq	.+4      	; 0xcf9c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    cf98:	81 e0       	ldi	r24, 0x01	; 1
    cf9a:	0a c0       	rjmp	.+20     	; 0xcfb0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    cf9c:	4b a5       	ldd	r20, Y+43	; 0x2b
    cf9e:	6e 8d       	ldd	r22, Y+30	; 0x1e
    cfa0:	88 89       	ldd	r24, Y+16	; 0x10
    cfa2:	0e 94 1b 68 	call	0xd036	; 0xd036 <_Z6ms_div12si5351_clockhb>
    cfa6:	88 23       	and	r24, r24
    cfa8:	11 f0       	breq	.+4      	; 0xcfae <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    cfaa:	81 e0       	ldi	r24, 0x01	; 1
    cfac:	01 c0       	rjmp	.+2      	; 0xcfb0 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    cfae:	80 e0       	ldi	r24, 0x00	; 0
	}
    cfb0:	6e 96       	adiw	r28, 0x1e	; 30
    cfb2:	cd bf       	out	0x3d, r28	; 61
    cfb4:	de bf       	out	0x3e, r29	; 62
    cfb6:	df 91       	pop	r29
    cfb8:	cf 91       	pop	r28
    cfba:	1f 91       	pop	r17
    cfbc:	0f 91       	pop	r16
    cfbe:	ff 90       	pop	r15
    cfc0:	ef 90       	pop	r14
    cfc2:	df 90       	pop	r13
    cfc4:	cf 90       	pop	r12
    cfc6:	af 90       	pop	r10
    cfc8:	8f 90       	pop	r8
    cfca:	08 95       	ret

0000cfcc <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    cfcc:	cf 93       	push	r28
    cfce:	df 93       	push	r29
    cfd0:	cd b7       	in	r28, 0x3d	; 61
    cfd2:	de b7       	in	r29, 0x3e	; 62
    cfd4:	25 97       	sbiw	r28, 0x05	; 5
    cfd6:	cd bf       	out	0x3d, r28	; 61
    cfd8:	de bf       	out	0x3e, r29	; 62
    cfda:	8c 83       	std	Y+4, r24	; 0x04
    cfdc:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    cfde:	8c 81       	ldd	r24, Y+4	; 0x04
    cfe0:	20 e1       	ldi	r18, 0x10	; 16
    cfe2:	28 0f       	add	r18, r24
    cfe4:	ce 01       	movw	r24, r28
    cfe6:	02 96       	adiw	r24, 0x02	; 2
    cfe8:	41 e0       	ldi	r20, 0x01	; 1
    cfea:	bc 01       	movw	r22, r24
    cfec:	82 2f       	mov	r24, r18
    cfee:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    cff2:	88 23       	and	r24, r24
    cff4:	11 f0       	breq	.+4      	; 0xcffa <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    cff6:	81 e0       	ldi	r24, 0x01	; 1
    cff8:	18 c0       	rjmp	.+48     	; 0xd02a <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    cffa:	8a 81       	ldd	r24, Y+2	; 0x02
    cffc:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    cffe:	8d 81       	ldd	r24, Y+5	; 0x05
    d000:	88 23       	and	r24, r24
    d002:	21 f0       	breq	.+8      	; 0xd00c <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    d004:	89 81       	ldd	r24, Y+1	; 0x01
    d006:	80 64       	ori	r24, 0x40	; 64
    d008:	89 83       	std	Y+1, r24	; 0x01
    d00a:	03 c0       	rjmp	.+6      	; 0xd012 <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    d00c:	89 81       	ldd	r24, Y+1	; 0x01
    d00e:	8f 7b       	andi	r24, 0xBF	; 191
    d010:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d012:	89 81       	ldd	r24, Y+1	; 0x01
    d014:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    d016:	8c 81       	ldd	r24, Y+4	; 0x04
    d018:	20 e1       	ldi	r18, 0x10	; 16
    d01a:	28 0f       	add	r18, r24
    d01c:	ce 01       	movw	r24, r28
    d01e:	02 96       	adiw	r24, 0x02	; 2
    d020:	41 e0       	ldi	r20, 0x01	; 1
    d022:	bc 01       	movw	r22, r24
    d024:	82 2f       	mov	r24, r18
    d026:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
	}
    d02a:	25 96       	adiw	r28, 0x05	; 5
    d02c:	cd bf       	out	0x3d, r28	; 61
    d02e:	de bf       	out	0x3e, r29	; 62
    d030:	df 91       	pop	r29
    d032:	cf 91       	pop	r28
    d034:	08 95       	ret

0000d036 <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    d036:	cf 93       	push	r28
    d038:	df 93       	push	r29
    d03a:	cd b7       	in	r28, 0x3d	; 61
    d03c:	de b7       	in	r29, 0x3e	; 62
    d03e:	27 97       	sbiw	r28, 0x07	; 7
    d040:	cd bf       	out	0x3d, r28	; 61
    d042:	de bf       	out	0x3e, r29	; 62
    d044:	8d 83       	std	Y+5, r24	; 0x05
    d046:	6e 83       	std	Y+6, r22	; 0x06
    d048:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    d04a:	8d 81       	ldd	r24, Y+5	; 0x05
    d04c:	88 2f       	mov	r24, r24
    d04e:	90 e0       	ldi	r25, 0x00	; 0
    d050:	81 30       	cpi	r24, 0x01	; 1
    d052:	91 05       	cpc	r25, r1
    d054:	41 f0       	breq	.+16     	; 0xd066 <_Z6ms_div12si5351_clockhb+0x30>
    d056:	82 30       	cpi	r24, 0x02	; 2
    d058:	91 05       	cpc	r25, r1
    d05a:	41 f0       	breq	.+16     	; 0xd06c <_Z6ms_div12si5351_clockhb+0x36>
    d05c:	89 2b       	or	r24, r25
    d05e:	49 f4       	brne	.+18     	; 0xd072 <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    d060:	8c e2       	ldi	r24, 0x2C	; 44
    d062:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d064:	08 c0       	rjmp	.+16     	; 0xd076 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    d066:	84 e3       	ldi	r24, 0x34	; 52
    d068:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d06a:	05 c0       	rjmp	.+10     	; 0xd076 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    d06c:	8c e3       	ldi	r24, 0x3C	; 60
    d06e:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d070:	02 c0       	rjmp	.+4      	; 0xd076 <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    d072:	81 e0       	ldi	r24, 0x01	; 1
    d074:	30 c0       	rjmp	.+96     	; 0xd0d6 <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    d076:	ce 01       	movw	r24, r28
    d078:	03 96       	adiw	r24, 0x03	; 3
    d07a:	41 e0       	ldi	r20, 0x01	; 1
    d07c:	bc 01       	movw	r22, r24
    d07e:	8a 81       	ldd	r24, Y+2	; 0x02
    d080:	0e 94 61 66 	call	0xccc2	; 0xccc2 <_Z16si5351_read_bulkhPhh>
    d084:	88 23       	and	r24, r24
    d086:	11 f0       	breq	.+4      	; 0xd08c <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    d088:	81 e0       	ldi	r24, 0x01	; 1
    d08a:	25 c0       	rjmp	.+74     	; 0xd0d6 <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    d08c:	8b 81       	ldd	r24, Y+3	; 0x03
    d08e:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    d090:	89 81       	ldd	r24, Y+1	; 0x01
    d092:	83 78       	andi	r24, 0x83	; 131
    d094:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    d096:	8f 81       	ldd	r24, Y+7	; 0x07
    d098:	88 23       	and	r24, r24
    d09a:	21 f0       	breq	.+8      	; 0xd0a4 <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    d09c:	89 81       	ldd	r24, Y+1	; 0x01
    d09e:	8c 60       	ori	r24, 0x0C	; 12
    d0a0:	89 83       	std	Y+1, r24	; 0x01
    d0a2:	03 c0       	rjmp	.+6      	; 0xd0aa <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    d0a4:	89 81       	ldd	r24, Y+1	; 0x01
    d0a6:	83 7f       	andi	r24, 0xF3	; 243
    d0a8:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    d0aa:	8e 81       	ldd	r24, Y+6	; 0x06
    d0ac:	88 2f       	mov	r24, r24
    d0ae:	90 e0       	ldi	r25, 0x00	; 0
    d0b0:	82 95       	swap	r24
    d0b2:	92 95       	swap	r25
    d0b4:	90 7f       	andi	r25, 0xF0	; 240
    d0b6:	98 27       	eor	r25, r24
    d0b8:	80 7f       	andi	r24, 0xF0	; 240
    d0ba:	98 27       	eor	r25, r24
    d0bc:	98 2f       	mov	r25, r24
    d0be:	89 81       	ldd	r24, Y+1	; 0x01
    d0c0:	89 2b       	or	r24, r25
    d0c2:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    d0c4:	89 81       	ldd	r24, Y+1	; 0x01
    d0c6:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    d0c8:	ce 01       	movw	r24, r28
    d0ca:	03 96       	adiw	r24, 0x03	; 3
    d0cc:	41 e0       	ldi	r20, 0x01	; 1
    d0ce:	bc 01       	movw	r22, r24
    d0d0:	8a 81       	ldd	r24, Y+2	; 0x02
    d0d2:	0e 94 2f 66 	call	0xcc5e	; 0xcc5e <_Z17si5351_write_bulkhPhh>
	}
    d0d6:	27 96       	adiw	r28, 0x07	; 7
    d0d8:	cd bf       	out	0x3d, r28	; 61
    d0da:	de bf       	out	0x3e, r29	; 62
    d0dc:	df 91       	pop	r29
    d0de:	cf 91       	pop	r28
    d0e0:	08 95       	ret

0000d0e2 <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    d0e2:	cf 93       	push	r28
    d0e4:	df 93       	push	r29
    d0e6:	cd b7       	in	r28, 0x3d	; 61
    d0e8:	de b7       	in	r29, 0x3e	; 62

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
    d0ea:	80 e0       	ldi	r24, 0x00	; 0
}
    d0ec:	df 91       	pop	r29
    d0ee:	cf 91       	pop	r28
    d0f0:	08 95       	ret

0000d0f2 <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    d0f2:	cf 93       	push	r28
    d0f4:	df 93       	push	r29
    d0f6:	cd b7       	in	r28, 0x3d	; 61
    d0f8:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d0fa:	80 e0       	ldi	r24, 0x00	; 0
    d0fc:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d0fe:	21 e0       	ldi	r18, 0x01	; 1
    d100:	fc 01       	movw	r30, r24
    d102:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    d104:	80 e0       	ldi	r24, 0x00	; 0
    d106:	9b e0       	ldi	r25, 0x0B	; 11
    d108:	20 e4       	ldi	r18, 0x40	; 64
    d10a:	3c e9       	ldi	r19, 0x9C	; 156
    d10c:	fc 01       	movw	r30, r24
    d10e:	24 87       	std	Z+12, r18	; 0x0c
    d110:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d112:	80 e0       	ldi	r24, 0x00	; 0
    d114:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d116:	23 e0       	ldi	r18, 0x03	; 3
    d118:	fc 01       	movw	r30, r24
    d11a:	20 83       	st	Z, r18

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d11c:	80 e0       	ldi	r24, 0x00	; 0
    d11e:	9b e0       	ldi	r25, 0x0B	; 11
    d120:	21 e0       	ldi	r18, 0x01	; 1
    d122:	fc 01       	movw	r30, r24
    d124:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d126:	80 e1       	ldi	r24, 0x10	; 16
    d128:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d12a:	21 e0       	ldi	r18, 0x01	; 1
    d12c:	fc 01       	movw	r30, r24
    d12e:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    d130:	80 e1       	ldi	r24, 0x10	; 16
    d132:	9b e0       	ldi	r25, 0x0B	; 11
    d134:	20 ec       	ldi	r18, 0xC0	; 192
    d136:	3d e5       	ldi	r19, 0x5D	; 93
    d138:	fc 01       	movw	r30, r24
    d13a:	24 87       	std	Z+12, r18	; 0x0c
    d13c:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    d13e:	80 e1       	ldi	r24, 0x10	; 16
    d140:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d142:	21 e0       	ldi	r18, 0x01	; 1
    d144:	fc 01       	movw	r30, r24
    d146:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d148:	80 e1       	ldi	r24, 0x10	; 16
    d14a:	9b e0       	ldi	r25, 0x0B	; 11
    d14c:	21 e0       	ldi	r18, 0x01	; 1
    d14e:	fc 01       	movw	r30, r24
    d150:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d152:	80 e3       	ldi	r24, 0x30	; 48
    d154:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d156:	21 e0       	ldi	r18, 0x01	; 1
    d158:	fc 01       	movw	r30, r24
    d15a:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    d15c:	80 e3       	ldi	r24, 0x30	; 48
    d15e:	9b e0       	ldi	r25, 0x0B	; 11
    d160:	20 e4       	ldi	r18, 0x40	; 64
    d162:	3c e9       	ldi	r19, 0x9C	; 156
    d164:	fc 01       	movw	r30, r24
    d166:	24 87       	std	Z+12, r18	; 0x0c
    d168:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d16a:	80 e3       	ldi	r24, 0x30	; 48
    d16c:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d16e:	23 e0       	ldi	r18, 0x03	; 3
    d170:	fc 01       	movw	r30, r24
    d172:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d174:	80 e3       	ldi	r24, 0x30	; 48
    d176:	9b e0       	ldi	r25, 0x0B	; 11
    d178:	21 e0       	ldi	r18, 0x01	; 1
    d17a:	fc 01       	movw	r30, r24
    d17c:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    d17e:	80 e0       	ldi	r24, 0x00	; 0
}
    d180:	df 91       	pop	r29
    d182:	cf 91       	pop	r28
    d184:	08 95       	ret

0000d186 <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    d186:	cf 93       	push	r28
    d188:	df 93       	push	r29
    d18a:	00 d0       	rcall	.+0      	; 0xd18c <util_delay_ms+0x6>
    d18c:	00 d0       	rcall	.+0      	; 0xd18e <util_delay_ms+0x8>
    d18e:	cd b7       	in	r28, 0x3d	; 61
    d190:	de b7       	in	r29, 0x3e	; 62
    d192:	69 83       	std	Y+1, r22	; 0x01
    d194:	7a 83       	std	Y+2, r23	; 0x02
    d196:	8b 83       	std	Y+3, r24	; 0x03
    d198:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    d19a:	89 81       	ldd	r24, Y+1	; 0x01
    d19c:	9a 81       	ldd	r25, Y+2	; 0x02
    d19e:	ab 81       	ldd	r26, Y+3	; 0x03
    d1a0:	bc 81       	ldd	r27, Y+4	; 0x04
    d1a2:	89 2b       	or	r24, r25
    d1a4:	8a 2b       	or	r24, r26
    d1a6:	8b 2b       	or	r24, r27
    d1a8:	09 f4       	brne	.+2      	; 0xd1ac <util_delay_ms+0x26>
    d1aa:	84 c0       	rjmp	.+264    	; 0xd2b4 <util_delay_ms+0x12e>
	{
		if(counting)
    d1ac:	80 91 aa 4a 	lds	r24, 0x4AAA	; 0x804aaa <_ZZ13util_delay_msE8counting>
    d1b0:	88 23       	and	r24, r24
    d1b2:	09 f4       	brne	.+2      	; 0xd1b6 <util_delay_ms+0x30>
    d1b4:	4d c0       	rjmp	.+154    	; 0xd250 <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    d1b6:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZL12g_ms_counter>
    d1ba:	90 91 a7 4a 	lds	r25, 0x4AA7	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d1be:	a0 91 a8 4a 	lds	r26, 0x4AA8	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d1c2:	b0 91 a9 4a 	lds	r27, 0x4AA9	; 0x804aa9 <_ZL12g_ms_counter+0x3>
    d1c6:	89 2b       	or	r24, r25
    d1c8:	8a 2b       	or	r24, r26
    d1ca:	8b 2b       	or	r24, r27
    d1cc:	81 f4       	brne	.+32     	; 0xd1ee <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d1ce:	80 e1       	ldi	r24, 0x10	; 16
    d1d0:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d1d2:	fc 01       	movw	r30, r24
    d1d4:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    d1d6:	10 92 aa 4a 	sts	0x4AAA, r1	; 0x804aaa <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    d1da:	10 92 ab 4a 	sts	0x4AAB, r1	; 0x804aab <_ZZ13util_delay_msE14countdownValue>
    d1de:	10 92 ac 4a 	sts	0x4AAC, r1	; 0x804aac <_ZZ13util_delay_msE14countdownValue+0x1>
    d1e2:	10 92 ad 4a 	sts	0x4AAD, r1	; 0x804aad <_ZZ13util_delay_msE14countdownValue+0x2>
    d1e6:	10 92 ae 4a 	sts	0x4AAE, r1	; 0x804aae <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    d1ea:	80 e0       	ldi	r24, 0x00	; 0
    d1ec:	81 c0       	rjmp	.+258    	; 0xd2f0 <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    d1ee:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZZ13util_delay_msE14countdownValue>
    d1f2:	90 91 ac 4a 	lds	r25, 0x4AAC	; 0x804aac <_ZZ13util_delay_msE14countdownValue+0x1>
    d1f6:	a0 91 ad 4a 	lds	r26, 0x4AAD	; 0x804aad <_ZZ13util_delay_msE14countdownValue+0x2>
    d1fa:	b0 91 ae 4a 	lds	r27, 0x4AAE	; 0x804aae <_ZZ13util_delay_msE14countdownValue+0x3>
    d1fe:	29 81       	ldd	r18, Y+1	; 0x01
    d200:	3a 81       	ldd	r19, Y+2	; 0x02
    d202:	4b 81       	ldd	r20, Y+3	; 0x03
    d204:	5c 81       	ldd	r21, Y+4	; 0x04
    d206:	28 17       	cp	r18, r24
    d208:	39 07       	cpc	r19, r25
    d20a:	4a 07       	cpc	r20, r26
    d20c:	5b 07       	cpc	r21, r27
    d20e:	09 f4       	brne	.+2      	; 0xd212 <util_delay_ms+0x8c>
    d210:	69 c0       	rjmp	.+210    	; 0xd2e4 <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    d212:	80 e1       	ldi	r24, 0x10	; 16
    d214:	9b e0       	ldi	r25, 0x0B	; 11
    d216:	fc 01       	movw	r30, r24
    d218:	12 86       	std	Z+10, r1	; 0x0a
    d21a:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    d21c:	89 81       	ldd	r24, Y+1	; 0x01
    d21e:	9a 81       	ldd	r25, Y+2	; 0x02
    d220:	ab 81       	ldd	r26, Y+3	; 0x03
    d222:	bc 81       	ldd	r27, Y+4	; 0x04
    d224:	80 93 ab 4a 	sts	0x4AAB, r24	; 0x804aab <_ZZ13util_delay_msE14countdownValue>
    d228:	90 93 ac 4a 	sts	0x4AAC, r25	; 0x804aac <_ZZ13util_delay_msE14countdownValue+0x1>
    d22c:	a0 93 ad 4a 	sts	0x4AAD, r26	; 0x804aad <_ZZ13util_delay_msE14countdownValue+0x2>
    d230:	b0 93 ae 4a 	sts	0x4AAE, r27	; 0x804aae <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    d234:	89 81       	ldd	r24, Y+1	; 0x01
    d236:	9a 81       	ldd	r25, Y+2	; 0x02
    d238:	ab 81       	ldd	r26, Y+3	; 0x03
    d23a:	bc 81       	ldd	r27, Y+4	; 0x04
    d23c:	80 93 a6 4a 	sts	0x4AA6, r24	; 0x804aa6 <_ZL12g_ms_counter>
    d240:	90 93 a7 4a 	sts	0x4AA7, r25	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d244:	a0 93 a8 4a 	sts	0x4AA8, r26	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d248:	b0 93 a9 4a 	sts	0x4AA9, r27	; 0x804aa9 <_ZL12g_ms_counter+0x3>
				return(false);
    d24c:	80 e0       	ldi	r24, 0x00	; 0
    d24e:	50 c0       	rjmp	.+160    	; 0xd2f0 <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    d250:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZZ13util_delay_msE14countdownValue>
    d254:	90 91 ac 4a 	lds	r25, 0x4AAC	; 0x804aac <_ZZ13util_delay_msE14countdownValue+0x1>
    d258:	a0 91 ad 4a 	lds	r26, 0x4AAD	; 0x804aad <_ZZ13util_delay_msE14countdownValue+0x2>
    d25c:	b0 91 ae 4a 	lds	r27, 0x4AAE	; 0x804aae <_ZZ13util_delay_msE14countdownValue+0x3>
    d260:	29 81       	ldd	r18, Y+1	; 0x01
    d262:	3a 81       	ldd	r19, Y+2	; 0x02
    d264:	4b 81       	ldd	r20, Y+3	; 0x03
    d266:	5c 81       	ldd	r21, Y+4	; 0x04
    d268:	28 17       	cp	r18, r24
    d26a:	39 07       	cpc	r19, r25
    d26c:	4a 07       	cpc	r20, r26
    d26e:	5b 07       	cpc	r21, r27
    d270:	c9 f1       	breq	.+114    	; 0xd2e4 <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    d272:	80 e1       	ldi	r24, 0x10	; 16
    d274:	9b e0       	ldi	r25, 0x0B	; 11
    d276:	fc 01       	movw	r30, r24
    d278:	12 86       	std	Z+10, r1	; 0x0a
    d27a:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    d27c:	89 81       	ldd	r24, Y+1	; 0x01
    d27e:	9a 81       	ldd	r25, Y+2	; 0x02
    d280:	ab 81       	ldd	r26, Y+3	; 0x03
    d282:	bc 81       	ldd	r27, Y+4	; 0x04
    d284:	80 93 ab 4a 	sts	0x4AAB, r24	; 0x804aab <_ZZ13util_delay_msE14countdownValue>
    d288:	90 93 ac 4a 	sts	0x4AAC, r25	; 0x804aac <_ZZ13util_delay_msE14countdownValue+0x1>
    d28c:	a0 93 ad 4a 	sts	0x4AAD, r26	; 0x804aad <_ZZ13util_delay_msE14countdownValue+0x2>
    d290:	b0 93 ae 4a 	sts	0x4AAE, r27	; 0x804aae <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    d294:	89 81       	ldd	r24, Y+1	; 0x01
    d296:	9a 81       	ldd	r25, Y+2	; 0x02
    d298:	ab 81       	ldd	r26, Y+3	; 0x03
    d29a:	bc 81       	ldd	r27, Y+4	; 0x04
    d29c:	80 93 a6 4a 	sts	0x4AA6, r24	; 0x804aa6 <_ZL12g_ms_counter>
    d2a0:	90 93 a7 4a 	sts	0x4AA7, r25	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d2a4:	a0 93 a8 4a 	sts	0x4AA8, r26	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d2a8:	b0 93 a9 4a 	sts	0x4AA9, r27	; 0x804aa9 <_ZL12g_ms_counter+0x3>
			counting = true;
    d2ac:	81 e0       	ldi	r24, 0x01	; 1
    d2ae:	80 93 aa 4a 	sts	0x4AAA, r24	; 0x804aaa <_ZZ13util_delay_msE8counting>
    d2b2:	18 c0       	rjmp	.+48     	; 0xd2e4 <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d2b4:	80 e1       	ldi	r24, 0x10	; 16
    d2b6:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d2b8:	fc 01       	movw	r30, r24
    d2ba:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    d2bc:	10 92 aa 4a 	sts	0x4AAA, r1	; 0x804aaa <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    d2c0:	10 92 ab 4a 	sts	0x4AAB, r1	; 0x804aab <_ZZ13util_delay_msE14countdownValue>
    d2c4:	10 92 ac 4a 	sts	0x4AAC, r1	; 0x804aac <_ZZ13util_delay_msE14countdownValue+0x1>
    d2c8:	10 92 ad 4a 	sts	0x4AAD, r1	; 0x804aad <_ZZ13util_delay_msE14countdownValue+0x2>
    d2cc:	10 92 ae 4a 	sts	0x4AAE, r1	; 0x804aae <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    d2d0:	10 92 a6 4a 	sts	0x4AA6, r1	; 0x804aa6 <_ZL12g_ms_counter>
    d2d4:	10 92 a7 4a 	sts	0x4AA7, r1	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d2d8:	10 92 a8 4a 	sts	0x4AA8, r1	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d2dc:	10 92 a9 4a 	sts	0x4AA9, r1	; 0x804aa9 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    d2e0:	80 e0       	ldi	r24, 0x00	; 0
    d2e2:	06 c0       	rjmp	.+12     	; 0xd2f0 <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d2e4:	80 e1       	ldi	r24, 0x10	; 16
    d2e6:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d2e8:	21 e0       	ldi	r18, 0x01	; 1
    d2ea:	fc 01       	movw	r30, r24
    d2ec:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    d2ee:	81 e0       	ldi	r24, 0x01	; 1
}
    d2f0:	24 96       	adiw	r28, 0x04	; 4
    d2f2:	cd bf       	out	0x3d, r28	; 61
    d2f4:	de bf       	out	0x3e, r29	; 62
    d2f6:	df 91       	pop	r29
    d2f8:	cf 91       	pop	r28
    d2fa:	08 95       	ret

0000d2fc <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    d2fc:	1f 92       	push	r1
    d2fe:	0f 92       	push	r0
    d300:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d304:	0f 92       	push	r0
    d306:	11 24       	eor	r1, r1
    d308:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d30c:	0f 92       	push	r0
    d30e:	2f 93       	push	r18
    d310:	8f 93       	push	r24
    d312:	9f 93       	push	r25
    d314:	af 93       	push	r26
    d316:	bf 93       	push	r27
    d318:	ef 93       	push	r30
    d31a:	ff 93       	push	r31
    d31c:	cf 93       	push	r28
    d31e:	df 93       	push	r29
    d320:	cd b7       	in	r28, 0x3d	; 61
    d322:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    d324:	80 e1       	ldi	r24, 0x10	; 16
    d326:	9b e0       	ldi	r25, 0x0B	; 11
    d328:	fc 01       	movw	r30, r24
    d32a:	86 81       	ldd	r24, Z+6	; 0x06
    d32c:	88 2f       	mov	r24, r24
    d32e:	90 e0       	ldi	r25, 0x00	; 0
    d330:	81 70       	andi	r24, 0x01	; 1
    d332:	99 27       	eor	r25, r25
    d334:	21 e0       	ldi	r18, 0x01	; 1
    d336:	89 2b       	or	r24, r25
    d338:	09 f4       	brne	.+2      	; 0xd33c <__vector_13+0x40>
    d33a:	20 e0       	ldi	r18, 0x00	; 0
    d33c:	22 23       	and	r18, r18
    d33e:	49 f1       	breq	.+82     	; 0xd392 <__vector_13+0x96>
    {
		if(g_ms_counter) /* check for 1-second interval */
    d340:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZL12g_ms_counter>
    d344:	90 91 a7 4a 	lds	r25, 0x4AA7	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d348:	a0 91 a8 4a 	lds	r26, 0x4AA8	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d34c:	b0 91 a9 4a 	lds	r27, 0x4AA9	; 0x804aa9 <_ZL12g_ms_counter+0x3>
    d350:	89 2b       	or	r24, r25
    d352:	8a 2b       	or	r24, r26
    d354:	8b 2b       	or	r24, r27
    d356:	a1 f0       	breq	.+40     	; 0xd380 <__vector_13+0x84>
		{
			g_ms_counter--;	
    d358:	80 91 a6 4a 	lds	r24, 0x4AA6	; 0x804aa6 <_ZL12g_ms_counter>
    d35c:	90 91 a7 4a 	lds	r25, 0x4AA7	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d360:	a0 91 a8 4a 	lds	r26, 0x4AA8	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d364:	b0 91 a9 4a 	lds	r27, 0x4AA9	; 0x804aa9 <_ZL12g_ms_counter+0x3>
    d368:	01 97       	sbiw	r24, 0x01	; 1
    d36a:	a1 09       	sbc	r26, r1
    d36c:	b1 09       	sbc	r27, r1
    d36e:	80 93 a6 4a 	sts	0x4AA6, r24	; 0x804aa6 <_ZL12g_ms_counter>
    d372:	90 93 a7 4a 	sts	0x4AA7, r25	; 0x804aa7 <_ZL12g_ms_counter+0x1>
    d376:	a0 93 a8 4a 	sts	0x4AA8, r26	; 0x804aa8 <_ZL12g_ms_counter+0x2>
    d37a:	b0 93 a9 4a 	sts	0x4AA9, r27	; 0x804aa9 <_ZL12g_ms_counter+0x3>
    d37e:	04 c0       	rjmp	.+8      	; 0xd388 <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d380:	80 e1       	ldi	r24, 0x10	; 16
    d382:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d384:	fc 01       	movw	r30, r24
    d386:	15 82       	std	Z+5, r1	; 0x05
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    d388:	80 e1       	ldi	r24, 0x10	; 16
    d38a:	9b e0       	ldi	r25, 0x0B	; 11
    d38c:	21 e0       	ldi	r18, 0x01	; 1
    d38e:	fc 01       	movw	r30, r24
    d390:	26 83       	std	Z+6, r18	; 0x06
    }
}
    d392:	00 00       	nop
    d394:	df 91       	pop	r29
    d396:	cf 91       	pop	r28
    d398:	ff 91       	pop	r31
    d39a:	ef 91       	pop	r30
    d39c:	bf 91       	pop	r27
    d39e:	af 91       	pop	r26
    d3a0:	9f 91       	pop	r25
    d3a2:	8f 91       	pop	r24
    d3a4:	2f 91       	pop	r18
    d3a6:	0f 90       	pop	r0
    d3a8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d3ac:	0f 90       	pop	r0
    d3ae:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d3b2:	0f 90       	pop	r0
    d3b4:	1f 90       	pop	r1
    d3b6:	18 95       	reti

0000d3b8 <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    d3b8:	cf 93       	push	r28
    d3ba:	df 93       	push	r29
    d3bc:	00 d0       	rcall	.+0      	; 0xd3be <_Z14txSetFrequencyPmb+0x6>
    d3be:	00 d0       	rcall	.+0      	; 0xd3c0 <_Z14txSetFrequencyPmb+0x8>
    d3c0:	cd b7       	in	r28, 0x3d	; 61
    d3c2:	de b7       	in	r29, 0x3e	; 62
    d3c4:	8a 83       	std	Y+2, r24	; 0x02
    d3c6:	9b 83       	std	Y+3, r25	; 0x03
    d3c8:	6c 83       	std	Y+4, r22	; 0x04
		bool err = false;
    d3ca:	19 82       	std	Y+1, r1	; 0x01

		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    d3cc:	8a 81       	ldd	r24, Y+2	; 0x02
    d3ce:	9b 81       	ldd	r25, Y+3	; 0x03
    d3d0:	fc 01       	movw	r30, r24
    d3d2:	80 81       	ld	r24, Z
    d3d4:	91 81       	ldd	r25, Z+1	; 0x01
    d3d6:	a2 81       	ldd	r26, Z+2	; 0x02
    d3d8:	b3 81       	ldd	r27, Z+3	; 0x03
    d3da:	81 15       	cp	r24, r1
    d3dc:	99 40       	sbci	r25, 0x09	; 9
    d3de:	ad 43       	sbci	r26, 0x3D	; 61
    d3e0:	b1 05       	cpc	r27, r1
    d3e2:	68 f5       	brcc	.+90     	; 0xd43e <_Z14txSetFrequencyPmb+0x86>
    d3e4:	8a 81       	ldd	r24, Y+2	; 0x02
    d3e6:	9b 81       	ldd	r25, Y+3	; 0x03
    d3e8:	fc 01       	movw	r30, r24
    d3ea:	80 81       	ld	r24, Z
    d3ec:	91 81       	ldd	r25, Z+1	; 0x01
    d3ee:	a2 81       	ldd	r26, Z+2	; 0x02
    d3f0:	b3 81       	ldd	r27, Z+3	; 0x03
    d3f2:	81 3e       	cpi	r24, 0xE1	; 225
    d3f4:	97 46       	sbci	r25, 0x67	; 103
    d3f6:	a5 43       	sbci	r26, 0x35	; 53
    d3f8:	b1 05       	cpc	r27, r1
    d3fa:	08 f1       	brcs	.+66     	; 0xd43e <_Z14txSetFrequencyPmb+0x86>
		{
			if(si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    d3fc:	8a 81       	ldd	r24, Y+2	; 0x02
    d3fe:	9b 81       	ldd	r25, Y+3	; 0x03
    d400:	fc 01       	movw	r30, r24
    d402:	80 81       	ld	r24, Z
    d404:	91 81       	ldd	r25, Z+1	; 0x01
    d406:	a2 81       	ldd	r26, Z+2	; 0x02
    d408:	b3 81       	ldd	r27, Z+3	; 0x03
    d40a:	2c 81       	ldd	r18, Y+4	; 0x04
    d40c:	41 e0       	ldi	r20, 0x01	; 1
    d40e:	bc 01       	movw	r22, r24
    d410:	cd 01       	movw	r24, r26
    d412:	0e 94 f9 5e 	call	0xbdf2	; 0xbdf2 <si5351_set_freq>
    d416:	88 23       	and	r24, r24
    d418:	19 f0       	breq	.+6      	; 0xd420 <_Z14txSetFrequencyPmb+0x68>
			{
				err = true; 
    d41a:	81 e0       	ldi	r24, 0x01	; 1
    d41c:	89 83       	std	Y+1, r24	; 0x01
    d41e:	0f c0       	rjmp	.+30     	; 0xd43e <_Z14txSetFrequencyPmb+0x86>
			}
			else
			{
				g_80m_frequency = *freq;
    d420:	8a 81       	ldd	r24, Y+2	; 0x02
    d422:	9b 81       	ldd	r25, Y+3	; 0x03
    d424:	fc 01       	movw	r30, r24
    d426:	80 81       	ld	r24, Z
    d428:	91 81       	ldd	r25, Z+1	; 0x01
    d42a:	a2 81       	ldd	r26, Z+2	; 0x02
    d42c:	b3 81       	ldd	r27, Z+3	; 0x03
    d42e:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <g_80m_frequency>
    d432:	90 93 2c 40 	sts	0x402C, r25	; 0x80402c <g_80m_frequency+0x1>
    d436:	a0 93 2d 40 	sts	0x402D, r26	; 0x80402d <g_80m_frequency+0x2>
    d43a:	b0 93 2e 40 	sts	0x402E, r27	; 0x80402e <g_80m_frequency+0x3>
			}
		}

		return(err);
    d43e:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d440:	24 96       	adiw	r28, 0x04	; 4
    d442:	cd bf       	out	0x3d, r28	; 61
    d444:	de bf       	out	0x3e, r29	; 62
    d446:	df 91       	pop	r29
    d448:	cf 91       	pop	r28
    d44a:	08 95       	ret

0000d44c <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    d44c:	cf 93       	push	r28
    d44e:	df 93       	push	r29
    d450:	cd b7       	in	r28, 0x3d	; 61
    d452:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    d454:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <g_80m_frequency>
    d458:	90 91 2c 40 	lds	r25, 0x402C	; 0x80402c <g_80m_frequency+0x1>
    d45c:	a0 91 2d 40 	lds	r26, 0x402D	; 0x80402d <g_80m_frequency+0x2>
    d460:	b0 91 2e 40 	lds	r27, 0x402E	; 0x80402e <g_80m_frequency+0x3>
	}
    d464:	bc 01       	movw	r22, r24
    d466:	cd 01       	movw	r24, r26
    d468:	df 91       	pop	r29
    d46a:	cf 91       	pop	r28
    d46c:	08 95       	ret

0000d46e <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool on)
	{
    d46e:	cf 93       	push	r28
    d470:	df 93       	push	r29
    d472:	1f 92       	push	r1
    d474:	cd b7       	in	r28, 0x3d	; 61
    d476:	de b7       	in	r29, 0x3e	; 62
    d478:	89 83       	std	Y+1, r24	; 0x01
		fet_driver(on);
    d47a:	89 81       	ldd	r24, Y+1	; 0x01
    d47c:	0e 94 7c 37 	call	0x6ef8	; 0x6ef8 <_Z10fet_driverb>

		return(ERROR_CODE_NO_ERROR);
    d480:	80 e0       	ldi	r24, 0x00	; 0
	}
    d482:	0f 90       	pop	r0
    d484:	df 91       	pop	r29
    d486:	cf 91       	pop	r28
    d488:	08 95       	ret

0000d48a <_Z14keyTransmitterb>:

	void keyTransmitter(bool on)
	{
    d48a:	cf 93       	push	r28
    d48c:	df 93       	push	r29
    d48e:	1f 92       	push	r1
    d490:	cd b7       	in	r28, 0x3d	; 61
    d492:	de b7       	in	r29, 0x3e	; 62
    d494:	89 83       	std	Y+1, r24	; 0x01
		if(g_tx_initialized)
    d496:	80 91 af 4a 	lds	r24, 0x4AAF	; 0x804aaf <_ZL16g_tx_initialized>
    d49a:	88 23       	and	r24, r24
    d49c:	29 f1       	breq	.+74     	; 0xd4e8 <_Z14keyTransmitterb+0x5e>
		{			
			if(on)
    d49e:	89 81       	ldd	r24, Y+1	; 0x01
    d4a0:	88 23       	and	r24, r24
    d4a2:	a9 f0       	breq	.+42     	; 0xd4ce <_Z14keyTransmitterb+0x44>
			{
				if(!g_transmitter_keyed)
    d4a4:	90 91 b0 4a 	lds	r25, 0x4AB0	; 0x804ab0 <_ZL19g_transmitter_keyed>
    d4a8:	81 e0       	ldi	r24, 0x01	; 1
    d4aa:	89 27       	eor	r24, r25
    d4ac:	88 23       	and	r24, r24
    d4ae:	e1 f0       	breq	.+56     	; 0xd4e8 <_Z14keyTransmitterb+0x5e>
				{
					if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) == ERROR_CODE_NO_ERROR)
    d4b0:	61 e0       	ldi	r22, 0x01	; 1
    d4b2:	81 e0       	ldi	r24, 0x01	; 1
    d4b4:	0e 94 9a 60 	call	0xc134	; 0xc134 <si5351_clock_enable>
    d4b8:	98 2f       	mov	r25, r24
    d4ba:	81 e0       	ldi	r24, 0x01	; 1
    d4bc:	99 23       	and	r25, r25
    d4be:	09 f0       	breq	.+2      	; 0xd4c2 <_Z14keyTransmitterb+0x38>
    d4c0:	80 e0       	ldi	r24, 0x00	; 0
    d4c2:	88 23       	and	r24, r24
    d4c4:	89 f0       	breq	.+34     	; 0xd4e8 <_Z14keyTransmitterb+0x5e>
					{
						g_transmitter_keyed = true;
    d4c6:	81 e0       	ldi	r24, 0x01	; 1
    d4c8:	80 93 b0 4a 	sts	0x4AB0, r24	; 0x804ab0 <_ZL19g_transmitter_keyed>
				{
					g_transmitter_keyed = false;
				}
			}
		}
	}
    d4cc:	0d c0       	rjmp	.+26     	; 0xd4e8 <_Z14keyTransmitterb+0x5e>
					}
				}
			}
			else
			{
				if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) == ERROR_CODE_NO_ERROR)
    d4ce:	60 e0       	ldi	r22, 0x00	; 0
    d4d0:	81 e0       	ldi	r24, 0x01	; 1
    d4d2:	0e 94 9a 60 	call	0xc134	; 0xc134 <si5351_clock_enable>
    d4d6:	98 2f       	mov	r25, r24
    d4d8:	81 e0       	ldi	r24, 0x01	; 1
    d4da:	99 23       	and	r25, r25
    d4dc:	09 f0       	breq	.+2      	; 0xd4e0 <_Z14keyTransmitterb+0x56>
    d4de:	80 e0       	ldi	r24, 0x00	; 0
    d4e0:	88 23       	and	r24, r24
    d4e2:	11 f0       	breq	.+4      	; 0xd4e8 <_Z14keyTransmitterb+0x5e>
				{
					g_transmitter_keyed = false;
    d4e4:	10 92 b0 4a 	sts	0x4AB0, r1	; 0x804ab0 <_ZL19g_transmitter_keyed>
				}
			}
		}
	}
    d4e8:	00 00       	nop
    d4ea:	0f 90       	pop	r0
    d4ec:	df 91       	pop	r29
    d4ee:	cf 91       	pop	r28
    d4f0:	08 95       	ret

0000d4f2 <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    d4f2:	cf 93       	push	r28
    d4f4:	df 93       	push	r29
    d4f6:	cd b7       	in	r28, 0x3d	; 61
    d4f8:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    d4fa:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    d4fe:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
	}
    d502:	df 91       	pop	r29
    d504:	cf 91       	pop	r28
    d506:	08 95       	ret

0000d508 <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* enableDriverPwr)
/*	EC txSetParameters(uint16_t* power_mW, bool* enableDriverPwr) */
	{
    d508:	cf 93       	push	r28
    d50a:	df 93       	push	r29
    d50c:	cd b7       	in	r28, 0x3d	; 61
    d50e:	de b7       	in	r29, 0x3e	; 62
    d510:	2b 97       	sbiw	r28, 0x0b	; 11
    d512:	cd bf       	out	0x3d, r28	; 61
    d514:	de bf       	out	0x3e, r29	; 62
    d516:	88 87       	std	Y+8, r24	; 0x08
    d518:	99 87       	std	Y+9, r25	; 0x09
    d51a:	6a 87       	std	Y+10, r22	; 0x0a
    d51c:	7b 87       	std	Y+11, r23	; 0x0b
		bool err = false;
    d51e:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    d520:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    d522:	1b 82       	std	Y+3, r1	; 0x03
    d524:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    d526:	88 85       	ldd	r24, Y+8	; 0x08
    d528:	99 85       	ldd	r25, Y+9	; 0x09
    d52a:	89 2b       	or	r24, r25
    d52c:	09 f4       	brne	.+2      	; 0xd530 <_Z15txSetParametersPjPb+0x28>
    d52e:	68 c0       	rjmp	.+208    	; 0xd600 <_Z15txSetParametersPjPb+0xf8>
		{
			power = *power_mW;
    d530:	88 85       	ldd	r24, Y+8	; 0x08
    d532:	99 85       	ldd	r25, Y+9	; 0x09
    d534:	fc 01       	movw	r30, r24
    d536:	80 81       	ld	r24, Z
    d538:	91 81       	ldd	r25, Z+1	; 0x01
    d53a:	8b 83       	std	Y+3, r24	; 0x03
    d53c:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    d53e:	8b 81       	ldd	r24, Y+3	; 0x03
    d540:	9c 81       	ldd	r25, Y+4	; 0x04
    d542:	89 38       	cpi	r24, 0x89	; 137
    d544:	93 41       	sbci	r25, 0x13	; 19
    d546:	08 f0       	brcs	.+2      	; 0xd54a <_Z15txSetParametersPjPb+0x42>
    d548:	57 c0       	rjmp	.+174    	; 0xd5f8 <_Z15txSetParametersPjPb+0xf0>
			{
				uint8_t drainVoltageDAC, modLevelHigh, modLevelLow;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC, &modLevelHigh, &modLevelLow);
    d54a:	9e 01       	movw	r18, r28
    d54c:	29 5f       	subi	r18, 0xF9	; 249
    d54e:	3f 4f       	sbci	r19, 0xFF	; 255
    d550:	ae 01       	movw	r20, r28
    d552:	4a 5f       	subi	r20, 0xFA	; 250
    d554:	5f 4f       	sbci	r21, 0xFF	; 255
    d556:	be 01       	movw	r22, r28
    d558:	6b 5f       	subi	r22, 0xFB	; 251
    d55a:	7f 4f       	sbci	r23, 0xFF	; 255
    d55c:	ce 01       	movw	r24, r28
    d55e:	03 96       	adiw	r24, 0x03	; 3
    d560:	0e 94 7e 6b 	call	0xd6fc	; 0xd6fc <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    d564:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    d566:	81 e0       	ldi	r24, 0x01	; 1
    d568:	9a 81       	ldd	r25, Y+2	; 0x02
    d56a:	9f 3c       	cpi	r25, 0xCF	; 207
    d56c:	09 f0       	breq	.+2      	; 0xd570 <_Z15txSetParametersPjPb+0x68>
    d56e:	80 e0       	ldi	r24, 0x00	; 0
    d570:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    d572:	8b 81       	ldd	r24, Y+3	; 0x03
    d574:	9c 81       	ldd	r25, Y+4	; 0x04
    d576:	21 e0       	ldi	r18, 0x01	; 1
    d578:	89 2b       	or	r24, r25
    d57a:	09 f0       	breq	.+2      	; 0xd57e <_Z15txSetParametersPjPb+0x76>
    d57c:	20 e0       	ldi	r18, 0x00	; 0
    d57e:	20 93 35 40 	sts	0x4035, r18	; 0x804035 <g_tx_power_is_zero>

				if(!err)
    d582:	99 81       	ldd	r25, Y+1	; 0x01
    d584:	81 e0       	ldi	r24, 0x01	; 1
    d586:	89 27       	eor	r24, r25
    d588:	88 23       	and	r24, r24
    d58a:	71 f1       	breq	.+92     	; 0xd5e8 <_Z15txSetParametersPjPb+0xe0>
				{
					g_80m_power_level_mW = power;
    d58c:	8b 81       	ldd	r24, Y+3	; 0x03
    d58e:	9c 81       	ldd	r25, Y+4	; 0x04
    d590:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <g_80m_power_level_mW>
    d594:	90 93 30 40 	sts	0x4030, r25	; 0x804030 <g_80m_power_level_mW+0x1>

					if(g_antenna_connect_state == ANT_CONNECTED)
    d598:	90 91 37 47 	lds	r25, 0x4737	; 0x804737 <g_antenna_connect_state>
    d59c:	81 e0       	ldi	r24, 0x01	; 1
    d59e:	92 30       	cpi	r25, 0x02	; 2
    d5a0:	09 f0       	breq	.+2      	; 0xd5a4 <_Z15txSetParametersPjPb+0x9c>
    d5a2:	80 e0       	ldi	r24, 0x00	; 0
    d5a4:	88 23       	and	r24, r24
    d5a6:	31 f0       	breq	.+12     	; 0xd5b4 <_Z15txSetParametersPjPb+0xac>
					{
						DAC0_setVal(drainVoltageDAC);
    d5a8:	8d 81       	ldd	r24, Y+5	; 0x05
    d5aa:	88 2f       	mov	r24, r24
    d5ac:	90 e0       	ldi	r25, 0x00	; 0
    d5ae:	0e 94 09 39 	call	0x7212	; 0x7212 <_Z11DAC0_setValj>
    d5b2:	07 c0       	rjmp	.+14     	; 0xd5c2 <_Z15txSetParametersPjPb+0xba>
					}
					else
					{
						g_tx_power_is_zero = true;
    d5b4:	81 e0       	ldi	r24, 0x01	; 1
    d5b6:	80 93 35 40 	sts	0x4035, r24	; 0x804035 <g_tx_power_is_zero>
						err = true;
    d5ba:	81 e0       	ldi	r24, 0x01	; 1
    d5bc:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    d5be:	86 ef       	ldi	r24, 0xF6	; 246
    d5c0:	8a 83       	std	Y+2, r24	; 0x02
					}

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    d5c2:	80 91 35 40 	lds	r24, 0x4035	; 0x804035 <g_tx_power_is_zero>
    d5c6:	88 23       	and	r24, r24
    d5c8:	19 f4       	brne	.+6      	; 0xd5d0 <_Z15txSetParametersPjPb+0xc8>
    d5ca:	8d 81       	ldd	r24, Y+5	; 0x05
    d5cc:	88 23       	and	r24, r24
    d5ce:	11 f4       	brne	.+4      	; 0xd5d4 <_Z15txSetParametersPjPb+0xcc>
    d5d0:	81 e0       	ldi	r24, 0x01	; 1
    d5d2:	01 c0       	rjmp	.+2      	; 0xd5d6 <_Z15txSetParametersPjPb+0xce>
    d5d4:	80 e0       	ldi	r24, 0x00	; 0
    d5d6:	88 23       	and	r24, r24
    d5d8:	21 f0       	breq	.+8      	; 0xd5e2 <_Z15txSetParametersPjPb+0xda>
					{
						powerToTransmitter(OFF); /* Turn off FET driver */
    d5da:	80 e0       	ldi	r24, 0x00	; 0
    d5dc:	0e 94 37 6a 	call	0xd46e	; 0xd46e <_Z18powerToTransmitterb>
    d5e0:	03 c0       	rjmp	.+6      	; 0xd5e8 <_Z15txSetParametersPjPb+0xe0>
					}
					else
					{
						powerToTransmitter(ON); /* Turn on FET driver */
    d5e2:	81 e0       	ldi	r24, 0x01	; 1
    d5e4:	0e 94 37 6a 	call	0xd46e	; 0xd46e <_Z18powerToTransmitterb>
					}
				}

				*power_mW = power;
    d5e8:	2b 81       	ldd	r18, Y+3	; 0x03
    d5ea:	3c 81       	ldd	r19, Y+4	; 0x04
    d5ec:	88 85       	ldd	r24, Y+8	; 0x08
    d5ee:	99 85       	ldd	r25, Y+9	; 0x09
    d5f0:	fc 01       	movw	r30, r24
    d5f2:	20 83       	st	Z, r18
    d5f4:	31 83       	std	Z+1, r19	; 0x01
    d5f6:	04 c0       	rjmp	.+8      	; 0xd600 <_Z15txSetParametersPjPb+0xf8>
			}
			else
			{
				err = true;
    d5f8:	81 e0       	ldi	r24, 0x01	; 1
    d5fa:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d5fc:	85 ef       	ldi	r24, 0xF5	; 245
    d5fe:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    d600:	99 81       	ldd	r25, Y+1	; 0x01
    d602:	81 e0       	ldi	r24, 0x01	; 1
    d604:	89 27       	eor	r24, r25
    d606:	88 23       	and	r24, r24
    d608:	51 f0       	breq	.+20     	; 0xd61e <_Z15txSetParametersPjPb+0x116>
		{
			if(enableDriverPwr != NULL)
    d60a:	8a 85       	ldd	r24, Y+10	; 0x0a
    d60c:	9b 85       	ldd	r25, Y+11	; 0x0b
    d60e:	89 2b       	or	r24, r25
    d610:	31 f0       	breq	.+12     	; 0xd61e <_Z15txSetParametersPjPb+0x116>
			{
				powerToTransmitter(*enableDriverPwr);
    d612:	8a 85       	ldd	r24, Y+10	; 0x0a
    d614:	9b 85       	ldd	r25, Y+11	; 0x0b
    d616:	fc 01       	movw	r30, r24
    d618:	80 81       	ld	r24, Z
    d61a:	0e 94 37 6a 	call	0xd46e	; 0xd46e <_Z18powerToTransmitterb>
			}
		}

		return(code);
    d61e:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d620:	2b 96       	adiw	r28, 0x0b	; 11
    d622:	cd bf       	out	0x3d, r28	; 61
    d624:	de bf       	out	0x3e, r29	; 62
    d626:	df 91       	pop	r29
    d628:	cf 91       	pop	r28
    d62a:	08 95       	ret

0000d62c <_Z16init_transmitterv>:


	EC init_transmitter(void)
	{
    d62c:	cf 93       	push	r28
    d62e:	df 93       	push	r29
    d630:	00 d0       	rcall	.+0      	; 0xd632 <_Z16init_transmitterv+0x6>
    d632:	00 d0       	rcall	.+0      	; 0xd634 <_Z16init_transmitterv+0x8>
    d634:	cd b7       	in	r28, 0x3d	; 61
    d636:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		DAC0_init();
    d638:	0e 94 db 38 	call	0x71b6	; 0x71b6 <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    d63c:	40 e0       	ldi	r20, 0x00	; 0
    d63e:	50 e0       	ldi	r21, 0x00	; 0
    d640:	ba 01       	movw	r22, r20
    d642:	80 e4       	ldi	r24, 0x40	; 64
    d644:	0e 94 2b 5e 	call	0xbc56	; 0xbc56 <si5351_init>
    d648:	8a 83       	std	Y+2, r24	; 0x02
    d64a:	8a 81       	ldd	r24, Y+2	; 0x02
    d64c:	88 23       	and	r24, r24
    d64e:	11 f0       	breq	.+4      	; 0xd654 <_Z16init_transmitterv+0x28>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    d650:	82 ed       	ldi	r24, 0xD2	; 210
    d652:	4e c0       	rjmp	.+156    	; 0xd6f0 <_Z16init_transmitterv+0xc4>
		}

		if((code = txSetParameters(NULL, NULL)))
    d654:	60 e0       	ldi	r22, 0x00	; 0
    d656:	70 e0       	ldi	r23, 0x00	; 0
    d658:	80 e0       	ldi	r24, 0x00	; 0
    d65a:	90 e0       	ldi	r25, 0x00	; 0
    d65c:	0e 94 84 6a 	call	0xd508	; 0xd508 <_Z15txSetParametersPjPb>
    d660:	89 83       	std	Y+1, r24	; 0x01
    d662:	81 e0       	ldi	r24, 0x01	; 1
    d664:	99 81       	ldd	r25, Y+1	; 0x01
    d666:	99 23       	and	r25, r25
    d668:	09 f4       	brne	.+2      	; 0xd66c <_Z16init_transmitterv+0x40>
    d66a:	80 e0       	ldi	r24, 0x00	; 0
    d66c:	88 23       	and	r24, r24
    d66e:	11 f0       	breq	.+4      	; 0xd674 <_Z16init_transmitterv+0x48>
		{
			return( code);
    d670:	89 81       	ldd	r24, Y+1	; 0x01
    d672:	3e c0       	rjmp	.+124    	; 0xd6f0 <_Z16init_transmitterv+0xc4>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    d674:	63 e0       	ldi	r22, 0x03	; 3
    d676:	81 e0       	ldi	r24, 0x01	; 1
    d678:	0e 94 e5 60 	call	0xc1ca	; 0xc1ca <si5351_drive_strength>
    d67c:	89 83       	std	Y+1, r24	; 0x01
    d67e:	81 e0       	ldi	r24, 0x01	; 1
    d680:	99 81       	ldd	r25, Y+1	; 0x01
    d682:	99 23       	and	r25, r25
    d684:	09 f4       	brne	.+2      	; 0xd688 <_Z16init_transmitterv+0x5c>
    d686:	80 e0       	ldi	r24, 0x00	; 0
    d688:	88 23       	and	r24, r24
    d68a:	11 f0       	breq	.+4      	; 0xd690 <_Z16init_transmitterv+0x64>
		{
			return( code);
    d68c:	89 81       	ldd	r24, Y+1	; 0x01
    d68e:	30 c0       	rjmp	.+96     	; 0xd6f0 <_Z16init_transmitterv+0xc4>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    d690:	60 e0       	ldi	r22, 0x00	; 0
    d692:	81 e0       	ldi	r24, 0x01	; 1
    d694:	0e 94 9a 60 	call	0xc134	; 0xc134 <si5351_clock_enable>
    d698:	89 83       	std	Y+1, r24	; 0x01
    d69a:	81 e0       	ldi	r24, 0x01	; 1
    d69c:	99 81       	ldd	r25, Y+1	; 0x01
    d69e:	99 23       	and	r25, r25
    d6a0:	09 f4       	brne	.+2      	; 0xd6a4 <_Z16init_transmitterv+0x78>
    d6a2:	80 e0       	ldi	r24, 0x00	; 0
    d6a4:	88 23       	and	r24, r24
    d6a6:	11 f0       	breq	.+4      	; 0xd6ac <_Z16init_transmitterv+0x80>
		{
			return( code);
    d6a8:	89 81       	ldd	r24, Y+1	; 0x01
    d6aa:	22 c0       	rjmp	.+68     	; 0xd6f0 <_Z16init_transmitterv+0xc4>
// 		if((code = si5351_clock_enable(TX_CLOCK_VHF_FM, SI5351_CLK_DISABLED)))
// 		{
// 			return( code);
// 		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    d6ac:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <g_80m_power_level_mW>
    d6b0:	90 91 30 40 	lds	r25, 0x4030	; 0x804030 <g_80m_power_level_mW+0x1>
    d6b4:	8b 83       	std	Y+3, r24	; 0x03
    d6b6:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    d6b8:	61 e0       	ldi	r22, 0x01	; 1
    d6ba:	8b e2       	ldi	r24, 0x2B	; 43
    d6bc:	90 e4       	ldi	r25, 0x40	; 64
    d6be:	0e 94 dc 69 	call	0xd3b8	; 0xd3b8 <_Z14txSetFrequencyPmb>
    d6c2:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    d6c4:	9a 81       	ldd	r25, Y+2	; 0x02
    d6c6:	81 e0       	ldi	r24, 0x01	; 1
    d6c8:	89 27       	eor	r24, r25
    d6ca:	88 23       	and	r24, r24
    d6cc:	81 f0       	breq	.+32     	; 0xd6ee <_Z16init_transmitterv+0xc2>
		{
			code = txSetParameters(&pwr_mW, NULL);
    d6ce:	ce 01       	movw	r24, r28
    d6d0:	03 96       	adiw	r24, 0x03	; 3
    d6d2:	60 e0       	ldi	r22, 0x00	; 0
    d6d4:	70 e0       	ldi	r23, 0x00	; 0
    d6d6:	0e 94 84 6a 	call	0xd508	; 0xd508 <_Z15txSetParametersPjPb>
    d6da:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    d6dc:	89 81       	ldd	r24, Y+1	; 0x01
    d6de:	88 23       	and	r24, r24
    d6e0:	19 f0       	breq	.+6      	; 0xd6e8 <_Z16init_transmitterv+0xbc>
    d6e2:	89 81       	ldd	r24, Y+1	; 0x01
    d6e4:	86 3f       	cpi	r24, 0xF6	; 246
    d6e6:	19 f4       	brne	.+6      	; 0xd6ee <_Z16init_transmitterv+0xc2>
			{
				g_tx_initialized = true;
    d6e8:	81 e0       	ldi	r24, 0x01	; 1
    d6ea:	80 93 af 4a 	sts	0x4AAF, r24	; 0x804aaf <_ZL16g_tx_initialized>
			}
		}

		return( code);
    d6ee:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d6f0:	24 96       	adiw	r28, 0x04	; 4
    d6f2:	cd bf       	out	0x3d, r28	; 61
    d6f4:	de bf       	out	0x3e, r29	; 62
    d6f6:	df 91       	pop	r29
    d6f8:	cf 91       	pop	r28
    d6fa:	08 95       	ret

0000d6fc <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    d6fc:	cf 93       	push	r28
    d6fe:	df 93       	push	r29
    d700:	cd b7       	in	r28, 0x3d	; 61
    d702:	de b7       	in	r29, 0x3e	; 62
    d704:	65 97       	sbiw	r28, 0x15	; 21
    d706:	cd bf       	out	0x3d, r28	; 61
    d708:	de bf       	out	0x3e, r29	; 62
    d70a:	8e 87       	std	Y+14, r24	; 0x0e
    d70c:	9f 87       	std	Y+15, r25	; 0x0f
    d70e:	68 8b       	std	Y+16, r22	; 0x10
    d710:	79 8b       	std	Y+17, r23	; 0x11
    d712:	4a 8b       	std	Y+18, r20	; 0x12
    d714:	5b 8b       	std	Y+19, r21	; 0x13
    d716:	2c 8b       	std	Y+20, r18	; 0x14
    d718:	3d 8b       	std	Y+21, r19	; 0x15
	EC ec = ERROR_CODE_NO_ERROR;
    d71a:	19 82       	std	Y+1, r1	; 0x01
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    d71c:	8e 85       	ldd	r24, Y+14	; 0x0e
    d71e:	9f 85       	ldd	r25, Y+15	; 0x0f
    d720:	89 2b       	or	r24, r25
    d722:	11 f4       	brne	.+4      	; 0xd728 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    d724:	8f ec       	ldi	r24, 0xCF	; 207
    d726:	77 c1       	rjmp	.+750    	; 0xda16 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x31a>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    d728:	88 e8       	ldi	r24, 0x88	; 136
    d72a:	93 e1       	ldi	r25, 0x13	; 19
    d72c:	8b 83       	std	Y+3, r24	; 0x03
    d72e:	9c 83       	std	Y+4, r25	; 0x04

	if((int16_t)*powerMW > maxPwr)
    d730:	8e 85       	ldd	r24, Y+14	; 0x0e
    d732:	9f 85       	ldd	r25, Y+15	; 0x0f
    d734:	fc 01       	movw	r30, r24
    d736:	80 81       	ld	r24, Z
    d738:	91 81       	ldd	r25, Z+1	; 0x01
    d73a:	9c 01       	movw	r18, r24
    d73c:	8b 81       	ldd	r24, Y+3	; 0x03
    d73e:	9c 81       	ldd	r25, Y+4	; 0x04
    d740:	82 17       	cp	r24, r18
    d742:	93 07       	cpc	r25, r19
    d744:	14 f4       	brge	.+4      	; 0xd74a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4e>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d746:	85 ef       	ldi	r24, 0xF5	; 245
    d748:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    d74a:	8e 85       	ldd	r24, Y+14	; 0x0e
    d74c:	9f 85       	ldd	r25, Y+15	; 0x0f
    d74e:	fc 01       	movw	r30, r24
    d750:	80 81       	ld	r24, Z
    d752:	91 81       	ldd	r25, Z+1	; 0x01
    d754:	8d 83       	std	Y+5, r24	; 0x05
    d756:	9e 83       	std	Y+6, r25	; 0x06
    d758:	1f 82       	std	Y+7, r1	; 0x07
    d75a:	18 86       	std	Y+8, r1	; 0x08
    d75c:	8b 81       	ldd	r24, Y+3	; 0x03
    d75e:	9c 81       	ldd	r25, Y+4	; 0x04
    d760:	89 87       	std	Y+9, r24	; 0x09
    d762:	9a 87       	std	Y+10, r25	; 0x0a
    d764:	2d 81       	ldd	r18, Y+5	; 0x05
    d766:	3e 81       	ldd	r19, Y+6	; 0x06
    d768:	89 85       	ldd	r24, Y+9	; 0x09
    d76a:	9a 85       	ldd	r25, Y+10	; 0x0a
    d76c:	82 17       	cp	r24, r18
    d76e:	93 07       	cpc	r25, r19
    d770:	6c f0       	brlt	.+26     	; 0xd78c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x90>
    d772:	2d 81       	ldd	r18, Y+5	; 0x05
    d774:	3e 81       	ldd	r19, Y+6	; 0x06
    d776:	8f 81       	ldd	r24, Y+7	; 0x07
    d778:	98 85       	ldd	r25, Y+8	; 0x08
    d77a:	28 17       	cp	r18, r24
    d77c:	39 07       	cpc	r19, r25
    d77e:	1c f4       	brge	.+6      	; 0xd786 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x8a>
    d780:	8f 81       	ldd	r24, Y+7	; 0x07
    d782:	98 85       	ldd	r25, Y+8	; 0x08
    d784:	05 c0       	rjmp	.+10     	; 0xd790 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    d786:	8d 81       	ldd	r24, Y+5	; 0x05
    d788:	9e 81       	ldd	r25, Y+6	; 0x06
    d78a:	02 c0       	rjmp	.+4      	; 0xd790 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    d78c:	89 85       	ldd	r24, Y+9	; 0x09
    d78e:	9a 85       	ldd	r25, Y+10	; 0x0a
    d790:	9c 01       	movw	r18, r24
    d792:	8e 85       	ldd	r24, Y+14	; 0x0e
    d794:	9f 85       	ldd	r25, Y+15	; 0x0f
    d796:	fc 01       	movw	r30, r24
    d798:	20 83       	st	Z, r18
    d79a:	31 83       	std	Z+1, r19	; 0x01

	if(*powerMW < 5)
    d79c:	8e 85       	ldd	r24, Y+14	; 0x0e
    d79e:	9f 85       	ldd	r25, Y+15	; 0x0f
    d7a0:	fc 01       	movw	r30, r24
    d7a2:	80 81       	ld	r24, Z
    d7a4:	91 81       	ldd	r25, Z+1	; 0x01
    d7a6:	05 97       	sbiw	r24, 0x05	; 5
    d7a8:	38 f4       	brcc	.+14     	; 0xd7b8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xbc>
	{
		index = 0;
    d7aa:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    d7ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    d7ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    d7b0:	fc 01       	movw	r30, r24
    d7b2:	10 82       	st	Z, r1
    d7b4:	11 82       	std	Z+1, r1	; 0x01
    d7b6:	04 c1       	rjmp	.+520    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 50)
    d7b8:	8e 85       	ldd	r24, Y+14	; 0x0e
    d7ba:	9f 85       	ldd	r25, Y+15	; 0x0f
    d7bc:	fc 01       	movw	r30, r24
    d7be:	80 81       	ld	r24, Z
    d7c0:	91 81       	ldd	r25, Z+1	; 0x01
    d7c2:	c2 97       	sbiw	r24, 0x32	; 50
    d7c4:	50 f4       	brcc	.+20     	; 0xd7da <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xde>
	{
		index = 1;
    d7c6:	81 e0       	ldi	r24, 0x01	; 1
    d7c8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    d7ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    d7cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    d7ce:	2a e0       	ldi	r18, 0x0A	; 10
    d7d0:	30 e0       	ldi	r19, 0x00	; 0
    d7d2:	fc 01       	movw	r30, r24
    d7d4:	20 83       	st	Z, r18
    d7d6:	31 83       	std	Z+1, r19	; 0x01
    d7d8:	f3 c0       	rjmp	.+486    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 150)
    d7da:	8e 85       	ldd	r24, Y+14	; 0x0e
    d7dc:	9f 85       	ldd	r25, Y+15	; 0x0f
    d7de:	fc 01       	movw	r30, r24
    d7e0:	80 81       	ld	r24, Z
    d7e2:	91 81       	ldd	r25, Z+1	; 0x01
    d7e4:	86 39       	cpi	r24, 0x96	; 150
    d7e6:	91 05       	cpc	r25, r1
    d7e8:	50 f4       	brcc	.+20     	; 0xd7fe <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x102>
	{
		index = 2;
    d7ea:	82 e0       	ldi	r24, 0x02	; 2
    d7ec:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    d7ee:	8e 85       	ldd	r24, Y+14	; 0x0e
    d7f0:	9f 85       	ldd	r25, Y+15	; 0x0f
    d7f2:	24 e6       	ldi	r18, 0x64	; 100
    d7f4:	30 e0       	ldi	r19, 0x00	; 0
    d7f6:	fc 01       	movw	r30, r24
    d7f8:	20 83       	st	Z, r18
    d7fa:	31 83       	std	Z+1, r19	; 0x01
    d7fc:	e1 c0       	rjmp	.+450    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 250)
    d7fe:	8e 85       	ldd	r24, Y+14	; 0x0e
    d800:	9f 85       	ldd	r25, Y+15	; 0x0f
    d802:	fc 01       	movw	r30, r24
    d804:	80 81       	ld	r24, Z
    d806:	91 81       	ldd	r25, Z+1	; 0x01
    d808:	8a 3f       	cpi	r24, 0xFA	; 250
    d80a:	91 05       	cpc	r25, r1
    d80c:	50 f4       	brcc	.+20     	; 0xd822 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x126>
	{
		index = 3;
    d80e:	83 e0       	ldi	r24, 0x03	; 3
    d810:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    d812:	8e 85       	ldd	r24, Y+14	; 0x0e
    d814:	9f 85       	ldd	r25, Y+15	; 0x0f
    d816:	28 ec       	ldi	r18, 0xC8	; 200
    d818:	30 e0       	ldi	r19, 0x00	; 0
    d81a:	fc 01       	movw	r30, r24
    d81c:	20 83       	st	Z, r18
    d81e:	31 83       	std	Z+1, r19	; 0x01
    d820:	cf c0       	rjmp	.+414    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 350)
    d822:	8e 85       	ldd	r24, Y+14	; 0x0e
    d824:	9f 85       	ldd	r25, Y+15	; 0x0f
    d826:	fc 01       	movw	r30, r24
    d828:	80 81       	ld	r24, Z
    d82a:	91 81       	ldd	r25, Z+1	; 0x01
    d82c:	8e 35       	cpi	r24, 0x5E	; 94
    d82e:	91 40       	sbci	r25, 0x01	; 1
    d830:	50 f4       	brcc	.+20     	; 0xd846 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14a>
	{
		index = 4;
    d832:	84 e0       	ldi	r24, 0x04	; 4
    d834:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    d836:	8e 85       	ldd	r24, Y+14	; 0x0e
    d838:	9f 85       	ldd	r25, Y+15	; 0x0f
    d83a:	2c e2       	ldi	r18, 0x2C	; 44
    d83c:	31 e0       	ldi	r19, 0x01	; 1
    d83e:	fc 01       	movw	r30, r24
    d840:	20 83       	st	Z, r18
    d842:	31 83       	std	Z+1, r19	; 0x01
    d844:	bd c0       	rjmp	.+378    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 450)
    d846:	8e 85       	ldd	r24, Y+14	; 0x0e
    d848:	9f 85       	ldd	r25, Y+15	; 0x0f
    d84a:	fc 01       	movw	r30, r24
    d84c:	80 81       	ld	r24, Z
    d84e:	91 81       	ldd	r25, Z+1	; 0x01
    d850:	82 3c       	cpi	r24, 0xC2	; 194
    d852:	91 40       	sbci	r25, 0x01	; 1
    d854:	50 f4       	brcc	.+20     	; 0xd86a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16e>
	{
		index = 5;
    d856:	85 e0       	ldi	r24, 0x05	; 5
    d858:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    d85a:	8e 85       	ldd	r24, Y+14	; 0x0e
    d85c:	9f 85       	ldd	r25, Y+15	; 0x0f
    d85e:	20 e9       	ldi	r18, 0x90	; 144
    d860:	31 e0       	ldi	r19, 0x01	; 1
    d862:	fc 01       	movw	r30, r24
    d864:	20 83       	st	Z, r18
    d866:	31 83       	std	Z+1, r19	; 0x01
    d868:	ab c0       	rjmp	.+342    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 550)
    d86a:	8e 85       	ldd	r24, Y+14	; 0x0e
    d86c:	9f 85       	ldd	r25, Y+15	; 0x0f
    d86e:	fc 01       	movw	r30, r24
    d870:	80 81       	ld	r24, Z
    d872:	91 81       	ldd	r25, Z+1	; 0x01
    d874:	86 32       	cpi	r24, 0x26	; 38
    d876:	92 40       	sbci	r25, 0x02	; 2
    d878:	50 f4       	brcc	.+20     	; 0xd88e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x192>
	{
		index = 6;
    d87a:	86 e0       	ldi	r24, 0x06	; 6
    d87c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    d87e:	8e 85       	ldd	r24, Y+14	; 0x0e
    d880:	9f 85       	ldd	r25, Y+15	; 0x0f
    d882:	24 ef       	ldi	r18, 0xF4	; 244
    d884:	31 e0       	ldi	r19, 0x01	; 1
    d886:	fc 01       	movw	r30, r24
    d888:	20 83       	st	Z, r18
    d88a:	31 83       	std	Z+1, r19	; 0x01
    d88c:	99 c0       	rjmp	.+306    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 650)
    d88e:	8e 85       	ldd	r24, Y+14	; 0x0e
    d890:	9f 85       	ldd	r25, Y+15	; 0x0f
    d892:	fc 01       	movw	r30, r24
    d894:	80 81       	ld	r24, Z
    d896:	91 81       	ldd	r25, Z+1	; 0x01
    d898:	8a 38       	cpi	r24, 0x8A	; 138
    d89a:	92 40       	sbci	r25, 0x02	; 2
    d89c:	50 f4       	brcc	.+20     	; 0xd8b2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1b6>
	{
		index = 7;
    d89e:	87 e0       	ldi	r24, 0x07	; 7
    d8a0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    d8a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    d8a6:	28 e5       	ldi	r18, 0x58	; 88
    d8a8:	32 e0       	ldi	r19, 0x02	; 2
    d8aa:	fc 01       	movw	r30, r24
    d8ac:	20 83       	st	Z, r18
    d8ae:	31 83       	std	Z+1, r19	; 0x01
    d8b0:	87 c0       	rjmp	.+270    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 900)
    d8b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8b4:	9f 85       	ldd	r25, Y+15	; 0x0f
    d8b6:	fc 01       	movw	r30, r24
    d8b8:	80 81       	ld	r24, Z
    d8ba:	91 81       	ldd	r25, Z+1	; 0x01
    d8bc:	84 38       	cpi	r24, 0x84	; 132
    d8be:	93 40       	sbci	r25, 0x03	; 3
    d8c0:	50 f4       	brcc	.+20     	; 0xd8d6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1da>
	{
		index = 8;
    d8c2:	88 e0       	ldi	r24, 0x08	; 8
    d8c4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    d8c6:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8c8:	9f 85       	ldd	r25, Y+15	; 0x0f
    d8ca:	20 e2       	ldi	r18, 0x20	; 32
    d8cc:	33 e0       	ldi	r19, 0x03	; 3
    d8ce:	fc 01       	movw	r30, r24
    d8d0:	20 83       	st	Z, r18
    d8d2:	31 83       	std	Z+1, r19	; 0x01
    d8d4:	75 c0       	rjmp	.+234    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1250)
    d8d6:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8d8:	9f 85       	ldd	r25, Y+15	; 0x0f
    d8da:	fc 01       	movw	r30, r24
    d8dc:	80 81       	ld	r24, Z
    d8de:	91 81       	ldd	r25, Z+1	; 0x01
    d8e0:	82 3e       	cpi	r24, 0xE2	; 226
    d8e2:	94 40       	sbci	r25, 0x04	; 4
    d8e4:	50 f4       	brcc	.+20     	; 0xd8fa <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1fe>
	{
		index = 9;
    d8e6:	89 e0       	ldi	r24, 0x09	; 9
    d8e8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    d8ea:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8ec:	9f 85       	ldd	r25, Y+15	; 0x0f
    d8ee:	28 ee       	ldi	r18, 0xE8	; 232
    d8f0:	33 e0       	ldi	r19, 0x03	; 3
    d8f2:	fc 01       	movw	r30, r24
    d8f4:	20 83       	st	Z, r18
    d8f6:	31 83       	std	Z+1, r19	; 0x01
    d8f8:	63 c0       	rjmp	.+198    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1750)
    d8fa:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8fc:	9f 85       	ldd	r25, Y+15	; 0x0f
    d8fe:	fc 01       	movw	r30, r24
    d900:	80 81       	ld	r24, Z
    d902:	91 81       	ldd	r25, Z+1	; 0x01
    d904:	86 3d       	cpi	r24, 0xD6	; 214
    d906:	96 40       	sbci	r25, 0x06	; 6
    d908:	50 f4       	brcc	.+20     	; 0xd91e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x222>
	{
		index = 10;
    d90a:	8a e0       	ldi	r24, 0x0A	; 10
    d90c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    d90e:	8e 85       	ldd	r24, Y+14	; 0x0e
    d910:	9f 85       	ldd	r25, Y+15	; 0x0f
    d912:	2c ed       	ldi	r18, 0xDC	; 220
    d914:	35 e0       	ldi	r19, 0x05	; 5
    d916:	fc 01       	movw	r30, r24
    d918:	20 83       	st	Z, r18
    d91a:	31 83       	std	Z+1, r19	; 0x01
    d91c:	51 c0       	rjmp	.+162    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2250)
    d91e:	8e 85       	ldd	r24, Y+14	; 0x0e
    d920:	9f 85       	ldd	r25, Y+15	; 0x0f
    d922:	fc 01       	movw	r30, r24
    d924:	80 81       	ld	r24, Z
    d926:	91 81       	ldd	r25, Z+1	; 0x01
    d928:	8a 3c       	cpi	r24, 0xCA	; 202
    d92a:	98 40       	sbci	r25, 0x08	; 8
    d92c:	50 f4       	brcc	.+20     	; 0xd942 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x246>
	{
		index = 11;
    d92e:	8b e0       	ldi	r24, 0x0B	; 11
    d930:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    d932:	8e 85       	ldd	r24, Y+14	; 0x0e
    d934:	9f 85       	ldd	r25, Y+15	; 0x0f
    d936:	20 ed       	ldi	r18, 0xD0	; 208
    d938:	37 e0       	ldi	r19, 0x07	; 7
    d93a:	fc 01       	movw	r30, r24
    d93c:	20 83       	st	Z, r18
    d93e:	31 83       	std	Z+1, r19	; 0x01
    d940:	3f c0       	rjmp	.+126    	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2750)
    d942:	8e 85       	ldd	r24, Y+14	; 0x0e
    d944:	9f 85       	ldd	r25, Y+15	; 0x0f
    d946:	fc 01       	movw	r30, r24
    d948:	80 81       	ld	r24, Z
    d94a:	91 81       	ldd	r25, Z+1	; 0x01
    d94c:	8e 3b       	cpi	r24, 0xBE	; 190
    d94e:	9a 40       	sbci	r25, 0x0A	; 10
    d950:	50 f4       	brcc	.+20     	; 0xd966 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x26a>
	{
		index = 12;
    d952:	8c e0       	ldi	r24, 0x0C	; 12
    d954:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    d956:	8e 85       	ldd	r24, Y+14	; 0x0e
    d958:	9f 85       	ldd	r25, Y+15	; 0x0f
    d95a:	24 ec       	ldi	r18, 0xC4	; 196
    d95c:	39 e0       	ldi	r19, 0x09	; 9
    d95e:	fc 01       	movw	r30, r24
    d960:	20 83       	st	Z, r18
    d962:	31 83       	std	Z+1, r19	; 0x01
    d964:	2d c0       	rjmp	.+90     	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 3500)
    d966:	8e 85       	ldd	r24, Y+14	; 0x0e
    d968:	9f 85       	ldd	r25, Y+15	; 0x0f
    d96a:	fc 01       	movw	r30, r24
    d96c:	80 81       	ld	r24, Z
    d96e:	91 81       	ldd	r25, Z+1	; 0x01
    d970:	8c 3a       	cpi	r24, 0xAC	; 172
    d972:	9d 40       	sbci	r25, 0x0D	; 13
    d974:	50 f4       	brcc	.+20     	; 0xd98a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28e>
	{
		index = 13;
    d976:	8d e0       	ldi	r24, 0x0D	; 13
    d978:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    d97a:	8e 85       	ldd	r24, Y+14	; 0x0e
    d97c:	9f 85       	ldd	r25, Y+15	; 0x0f
    d97e:	28 eb       	ldi	r18, 0xB8	; 184
    d980:	3b e0       	ldi	r19, 0x0B	; 11
    d982:	fc 01       	movw	r30, r24
    d984:	20 83       	st	Z, r18
    d986:	31 83       	std	Z+1, r19	; 0x01
    d988:	1b c0       	rjmp	.+54     	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 4500)
    d98a:	8e 85       	ldd	r24, Y+14	; 0x0e
    d98c:	9f 85       	ldd	r25, Y+15	; 0x0f
    d98e:	fc 01       	movw	r30, r24
    d990:	80 81       	ld	r24, Z
    d992:	91 81       	ldd	r25, Z+1	; 0x01
    d994:	84 39       	cpi	r24, 0x94	; 148
    d996:	91 41       	sbci	r25, 0x11	; 17
    d998:	50 f4       	brcc	.+20     	; 0xd9ae <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2b2>
	{
		index = 14;
    d99a:	8e e0       	ldi	r24, 0x0E	; 14
    d99c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    d99e:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9a0:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9a2:	20 ea       	ldi	r18, 0xA0	; 160
    d9a4:	3f e0       	ldi	r19, 0x0F	; 15
    d9a6:	fc 01       	movw	r30, r24
    d9a8:	20 83       	st	Z, r18
    d9aa:	31 83       	std	Z+1, r19	; 0x01
    d9ac:	09 c0       	rjmp	.+18     	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else
	{
		index = 15;
    d9ae:	8f e0       	ldi	r24, 0x0F	; 15
    d9b0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    d9b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9b4:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9b6:	28 e8       	ldi	r18, 0x88	; 136
    d9b8:	33 e1       	ldi	r19, 0x13	; 19
    d9ba:	fc 01       	movw	r30, r24
    d9bc:	20 83       	st	Z, r18
    d9be:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    d9c0:	8a 81       	ldd	r24, Y+2	; 0x02
    d9c2:	88 2f       	mov	r24, r24
    d9c4:	90 e0       	ldi	r25, 0x00	; 0
    d9c6:	8a 5c       	subi	r24, 0xCA	; 202
    d9c8:	9f 4b       	sbci	r25, 0xBF	; 191
    d9ca:	fc 01       	movw	r30, r24
    d9cc:	20 81       	ld	r18, Z
    d9ce:	88 89       	ldd	r24, Y+16	; 0x10
    d9d0:	99 89       	ldd	r25, Y+17	; 0x11
    d9d2:	fc 01       	movw	r30, r24
    d9d4:	20 83       	st	Z, r18
	*modLevelHigh = 0;
    d9d6:	8a 89       	ldd	r24, Y+18	; 0x12
    d9d8:	9b 89       	ldd	r25, Y+19	; 0x13
    d9da:	fc 01       	movw	r30, r24
    d9dc:	10 82       	st	Z, r1
	*modLevelLow = 0;
    d9de:	8c 89       	ldd	r24, Y+20	; 0x14
    d9e0:	9d 89       	ldd	r25, Y+21	; 0x15
    d9e2:	fc 01       	movw	r30, r24
    d9e4:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    d9e6:	88 89       	ldd	r24, Y+16	; 0x10
    d9e8:	99 89       	ldd	r25, Y+17	; 0x11
    d9ea:	fc 01       	movw	r30, r24
    d9ec:	80 81       	ld	r24, Z
    d9ee:	8b 87       	std	Y+11, r24	; 0x0b
    d9f0:	8f ef       	ldi	r24, 0xFF	; 255
    d9f2:	90 e0       	ldi	r25, 0x00	; 0
    d9f4:	8c 87       	std	Y+12, r24	; 0x0c
    d9f6:	9d 87       	std	Y+13, r25	; 0x0d
    d9f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    d9fa:	88 2f       	mov	r24, r24
    d9fc:	90 e0       	ldi	r25, 0x00	; 0
    d9fe:	2c 85       	ldd	r18, Y+12	; 0x0c
    da00:	3d 85       	ldd	r19, Y+13	; 0x0d
    da02:	28 17       	cp	r18, r24
    da04:	39 07       	cpc	r19, r25
    da06:	0c f4       	brge	.+2      	; 0xda0a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x30e>
    da08:	c9 01       	movw	r24, r18
    da0a:	28 2f       	mov	r18, r24
    da0c:	88 89       	ldd	r24, Y+16	; 0x10
    da0e:	99 89       	ldd	r25, Y+17	; 0x11
    da10:	fc 01       	movw	r30, r24
    da12:	20 83       	st	Z, r18

	return(ec);
    da14:	89 81       	ldd	r24, Y+1	; 0x01
    da16:	65 96       	adiw	r28, 0x15	; 21
    da18:	cd bf       	out	0x3d, r28	; 61
    da1a:	de bf       	out	0x3e, r29	; 62
    da1c:	df 91       	pop	r29
    da1e:	cf 91       	pop	r28
    da20:	08 95       	ret

0000da22 <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    da22:	cf 93       	push	r28
    da24:	df 93       	push	r29
    da26:	cd b7       	in	r28, 0x3d	; 61
    da28:	de b7       	in	r29, 0x3e	; 62
    da2a:	80 e0       	ldi	r24, 0x00	; 0
    da2c:	98 e0       	ldi	r25, 0x08	; 8
    da2e:	fc 01       	movw	r30, r24
    da30:	80 81       	ld	r24, Z
    da32:	df 91       	pop	r29
    da34:	cf 91       	pop	r28
    da36:	08 95       	ret

0000da38 <USART1_init>:
    da38:	0f 93       	push	r16
    da3a:	1f 93       	push	r17
    da3c:	cf 93       	push	r28
    da3e:	df 93       	push	r29
    da40:	00 d0       	rcall	.+0      	; 0xda42 <USART1_init+0xa>
    da42:	00 d0       	rcall	.+0      	; 0xda44 <USART1_init+0xc>
    da44:	cd b7       	in	r28, 0x3d	; 61
    da46:	de b7       	in	r29, 0x3e	; 62
    da48:	69 83       	std	Y+1, r22	; 0x01
    da4a:	7a 83       	std	Y+2, r23	; 0x02
    da4c:	8b 83       	std	Y+3, r24	; 0x03
    da4e:	9c 83       	std	Y+4, r25	; 0x04
    da50:	f8 94       	cli
    da52:	00 e2       	ldi	r16, 0x20	; 32
    da54:	18 e0       	ldi	r17, 0x08	; 8
    da56:	69 81       	ldd	r22, Y+1	; 0x01
    da58:	7a 81       	ldd	r23, Y+2	; 0x02
    da5a:	8b 81       	ldd	r24, Y+3	; 0x03
    da5c:	9c 81       	ldd	r25, Y+4	; 0x04
    da5e:	0e 94 11 73 	call	0xe622	; 0xe622 <__floatunsisf>
    da62:	dc 01       	movw	r26, r24
    da64:	cb 01       	movw	r24, r22
    da66:	20 e0       	ldi	r18, 0x00	; 0
    da68:	30 e0       	ldi	r19, 0x00	; 0
    da6a:	40 e8       	ldi	r20, 0x80	; 128
    da6c:	51 e4       	ldi	r21, 0x41	; 65
    da6e:	bc 01       	movw	r22, r24
    da70:	cd 01       	movw	r24, r26
    da72:	0e 94 09 74 	call	0xe812	; 0xe812 <__mulsf3>
    da76:	dc 01       	movw	r26, r24
    da78:	cb 01       	movw	r24, r22
    da7a:	9c 01       	movw	r18, r24
    da7c:	ad 01       	movw	r20, r26
    da7e:	60 e0       	ldi	r22, 0x00	; 0
    da80:	7b e1       	ldi	r23, 0x1B	; 27
    da82:	87 eb       	ldi	r24, 0xB7	; 183
    da84:	9e e4       	ldi	r25, 0x4E	; 78
    da86:	0e 94 69 72 	call	0xe4d2	; 0xe4d2 <__divsf3>
    da8a:	dc 01       	movw	r26, r24
    da8c:	cb 01       	movw	r24, r22
    da8e:	20 e0       	ldi	r18, 0x00	; 0
    da90:	30 e0       	ldi	r19, 0x00	; 0
    da92:	40 e0       	ldi	r20, 0x00	; 0
    da94:	5f e3       	ldi	r21, 0x3F	; 63
    da96:	bc 01       	movw	r22, r24
    da98:	cd 01       	movw	r24, r26
    da9a:	0e 94 e1 71 	call	0xe3c2	; 0xe3c2 <__addsf3>
    da9e:	dc 01       	movw	r26, r24
    daa0:	cb 01       	movw	r24, r22
    daa2:	bc 01       	movw	r22, r24
    daa4:	cd 01       	movw	r24, r26
    daa6:	0e 94 e2 72 	call	0xe5c4	; 0xe5c4 <__fixunssfsi>
    daaa:	dc 01       	movw	r26, r24
    daac:	cb 01       	movw	r24, r22
    daae:	f8 01       	movw	r30, r16
    dab0:	80 87       	std	Z+8, r24	; 0x08
    dab2:	91 87       	std	Z+9, r25	; 0x09
    dab4:	80 e2       	ldi	r24, 0x20	; 32
    dab6:	98 e0       	ldi	r25, 0x08	; 8
    dab8:	20 e8       	ldi	r18, 0x80	; 128
    daba:	fc 01       	movw	r30, r24
    dabc:	25 83       	std	Z+5, r18	; 0x05
    dabe:	80 e2       	ldi	r24, 0x20	; 32
    dac0:	98 e0       	ldi	r25, 0x08	; 8
    dac2:	23 e0       	ldi	r18, 0x03	; 3
    dac4:	fc 01       	movw	r30, r24
    dac6:	27 83       	std	Z+7, r18	; 0x07
    dac8:	80 e2       	ldi	r24, 0x20	; 32
    daca:	98 e0       	ldi	r25, 0x08	; 8
    dacc:	20 ec       	ldi	r18, 0xC0	; 192
    dace:	fc 01       	movw	r30, r24
    dad0:	26 83       	std	Z+6, r18	; 0x06
    dad2:	78 94       	sei
    dad4:	80 e0       	ldi	r24, 0x00	; 0
    dad6:	24 96       	adiw	r28, 0x04	; 4
    dad8:	cd bf       	out	0x3d, r28	; 61
    dada:	de bf       	out	0x3e, r29	; 62
    dadc:	df 91       	pop	r29
    dade:	cf 91       	pop	r28
    dae0:	1f 91       	pop	r17
    dae2:	0f 91       	pop	r16
    dae4:	08 95       	ret

0000dae6 <USART1_enable_tx>:
    dae6:	cf 93       	push	r28
    dae8:	df 93       	push	r29
    daea:	cd b7       	in	r28, 0x3d	; 61
    daec:	de b7       	in	r29, 0x3e	; 62
    daee:	80 e2       	ldi	r24, 0x20	; 32
    daf0:	98 e0       	ldi	r25, 0x08	; 8
    daf2:	20 e2       	ldi	r18, 0x20	; 32
    daf4:	38 e0       	ldi	r19, 0x08	; 8
    daf6:	f9 01       	movw	r30, r18
    daf8:	26 81       	ldd	r18, Z+6	; 0x06
    dafa:	20 64       	ori	r18, 0x40	; 64
    dafc:	fc 01       	movw	r30, r24
    dafe:	26 83       	std	Z+6, r18	; 0x06
    db00:	80 e2       	ldi	r24, 0x20	; 32
    db02:	98 e0       	ldi	r25, 0x08	; 8
    db04:	20 e2       	ldi	r18, 0x20	; 32
    db06:	38 e0       	ldi	r19, 0x08	; 8
    db08:	f9 01       	movw	r30, r18
    db0a:	25 81       	ldd	r18, Z+5	; 0x05
    db0c:	20 62       	ori	r18, 0x20	; 32
    db0e:	fc 01       	movw	r30, r24
    db10:	25 83       	std	Z+5, r18	; 0x05
    db12:	00 00       	nop
    db14:	df 91       	pop	r29
    db16:	cf 91       	pop	r28
    db18:	08 95       	ret

0000db1a <USART1_disable>:
    db1a:	cf 93       	push	r28
    db1c:	df 93       	push	r29
    db1e:	cd b7       	in	r28, 0x3d	; 61
    db20:	de b7       	in	r29, 0x3e	; 62
    db22:	80 e2       	ldi	r24, 0x20	; 32
    db24:	98 e0       	ldi	r25, 0x08	; 8
    db26:	20 e2       	ldi	r18, 0x20	; 32
    db28:	38 e0       	ldi	r19, 0x08	; 8
    db2a:	f9 01       	movw	r30, r18
    db2c:	26 81       	ldd	r18, Z+6	; 0x06
    db2e:	2f 73       	andi	r18, 0x3F	; 63
    db30:	fc 01       	movw	r30, r24
    db32:	26 83       	std	Z+6, r18	; 0x06
    db34:	00 00       	nop
    db36:	df 91       	pop	r29
    db38:	cf 91       	pop	r28
    db3a:	08 95       	ret

0000db3c <USART1_get_data>:
    db3c:	cf 93       	push	r28
    db3e:	df 93       	push	r29
    db40:	cd b7       	in	r28, 0x3d	; 61
    db42:	de b7       	in	r29, 0x3e	; 62
    db44:	80 e2       	ldi	r24, 0x20	; 32
    db46:	98 e0       	ldi	r25, 0x08	; 8
    db48:	fc 01       	movw	r30, r24
    db4a:	80 81       	ld	r24, Z
    db4c:	df 91       	pop	r29
    db4e:	cf 91       	pop	r28
    db50:	08 95       	ret

0000db52 <USART4_init>:
    db52:	0f 93       	push	r16
    db54:	1f 93       	push	r17
    db56:	cf 93       	push	r28
    db58:	df 93       	push	r29
    db5a:	00 d0       	rcall	.+0      	; 0xdb5c <USART4_init+0xa>
    db5c:	00 d0       	rcall	.+0      	; 0xdb5e <USART4_init+0xc>
    db5e:	cd b7       	in	r28, 0x3d	; 61
    db60:	de b7       	in	r29, 0x3e	; 62
    db62:	69 83       	std	Y+1, r22	; 0x01
    db64:	7a 83       	std	Y+2, r23	; 0x02
    db66:	8b 83       	std	Y+3, r24	; 0x03
    db68:	9c 83       	std	Y+4, r25	; 0x04
    db6a:	00 e8       	ldi	r16, 0x80	; 128
    db6c:	18 e0       	ldi	r17, 0x08	; 8
    db6e:	69 81       	ldd	r22, Y+1	; 0x01
    db70:	7a 81       	ldd	r23, Y+2	; 0x02
    db72:	8b 81       	ldd	r24, Y+3	; 0x03
    db74:	9c 81       	ldd	r25, Y+4	; 0x04
    db76:	0e 94 11 73 	call	0xe622	; 0xe622 <__floatunsisf>
    db7a:	dc 01       	movw	r26, r24
    db7c:	cb 01       	movw	r24, r22
    db7e:	20 e0       	ldi	r18, 0x00	; 0
    db80:	30 e0       	ldi	r19, 0x00	; 0
    db82:	40 e8       	ldi	r20, 0x80	; 128
    db84:	51 e4       	ldi	r21, 0x41	; 65
    db86:	bc 01       	movw	r22, r24
    db88:	cd 01       	movw	r24, r26
    db8a:	0e 94 09 74 	call	0xe812	; 0xe812 <__mulsf3>
    db8e:	dc 01       	movw	r26, r24
    db90:	cb 01       	movw	r24, r22
    db92:	9c 01       	movw	r18, r24
    db94:	ad 01       	movw	r20, r26
    db96:	60 e0       	ldi	r22, 0x00	; 0
    db98:	7b e1       	ldi	r23, 0x1B	; 27
    db9a:	87 eb       	ldi	r24, 0xB7	; 183
    db9c:	9e e4       	ldi	r25, 0x4E	; 78
    db9e:	0e 94 69 72 	call	0xe4d2	; 0xe4d2 <__divsf3>
    dba2:	dc 01       	movw	r26, r24
    dba4:	cb 01       	movw	r24, r22
    dba6:	20 e0       	ldi	r18, 0x00	; 0
    dba8:	30 e0       	ldi	r19, 0x00	; 0
    dbaa:	40 e0       	ldi	r20, 0x00	; 0
    dbac:	5f e3       	ldi	r21, 0x3F	; 63
    dbae:	bc 01       	movw	r22, r24
    dbb0:	cd 01       	movw	r24, r26
    dbb2:	0e 94 e1 71 	call	0xe3c2	; 0xe3c2 <__addsf3>
    dbb6:	dc 01       	movw	r26, r24
    dbb8:	cb 01       	movw	r24, r22
    dbba:	bc 01       	movw	r22, r24
    dbbc:	cd 01       	movw	r24, r26
    dbbe:	0e 94 e2 72 	call	0xe5c4	; 0xe5c4 <__fixunssfsi>
    dbc2:	dc 01       	movw	r26, r24
    dbc4:	cb 01       	movw	r24, r22
    dbc6:	f8 01       	movw	r30, r16
    dbc8:	80 87       	std	Z+8, r24	; 0x08
    dbca:	91 87       	std	Z+9, r25	; 0x09
    dbcc:	80 e8       	ldi	r24, 0x80	; 128
    dbce:	98 e0       	ldi	r25, 0x08	; 8
    dbd0:	20 e8       	ldi	r18, 0x80	; 128
    dbd2:	fc 01       	movw	r30, r24
    dbd4:	25 83       	std	Z+5, r18	; 0x05
    dbd6:	80 e8       	ldi	r24, 0x80	; 128
    dbd8:	98 e0       	ldi	r25, 0x08	; 8
    dbda:	20 ec       	ldi	r18, 0xC0	; 192
    dbdc:	fc 01       	movw	r30, r24
    dbde:	26 83       	std	Z+6, r18	; 0x06
    dbe0:	80 e0       	ldi	r24, 0x00	; 0
    dbe2:	24 96       	adiw	r28, 0x04	; 4
    dbe4:	cd bf       	out	0x3d, r28	; 61
    dbe6:	de bf       	out	0x3e, r29	; 62
    dbe8:	df 91       	pop	r29
    dbea:	cf 91       	pop	r28
    dbec:	1f 91       	pop	r17
    dbee:	0f 91       	pop	r16
    dbf0:	08 95       	ret

0000dbf2 <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    dbf2:	cf 93       	push	r28
    dbf4:	df 93       	push	r29
    dbf6:	cd b7       	in	r28, 0x3d	; 61
    dbf8:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    dbfa:	80 e8       	ldi	r24, 0x80	; 128
    dbfc:	98 e0       	ldi	r25, 0x08	; 8
    dbfe:	20 e8       	ldi	r18, 0x80	; 128
    dc00:	38 e0       	ldi	r19, 0x08	; 8
    dc02:	f9 01       	movw	r30, r18
    dc04:	26 81       	ldd	r18, Z+6	; 0x06
    dc06:	20 64       	ori	r18, 0x40	; 64
    dc08:	fc 01       	movw	r30, r24
    dc0a:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    dc0c:	80 e8       	ldi	r24, 0x80	; 128
    dc0e:	98 e0       	ldi	r25, 0x08	; 8
    dc10:	20 e8       	ldi	r18, 0x80	; 128
    dc12:	38 e0       	ldi	r19, 0x08	; 8
    dc14:	f9 01       	movw	r30, r18
    dc16:	25 81       	ldd	r18, Z+5	; 0x05
    dc18:	20 62       	ori	r18, 0x20	; 32
    dc1a:	fc 01       	movw	r30, r24
    dc1c:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    dc1e:	00 00       	nop
    dc20:	df 91       	pop	r29
    dc22:	cf 91       	pop	r28
    dc24:	08 95       	ret

0000dc26 <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    dc26:	cf 93       	push	r28
    dc28:	df 93       	push	r29
    dc2a:	cd b7       	in	r28, 0x3d	; 61
    dc2c:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    dc2e:	80 e8       	ldi	r24, 0x80	; 128
    dc30:	98 e0       	ldi	r25, 0x08	; 8
    dc32:	20 e8       	ldi	r18, 0x80	; 128
    dc34:	38 e0       	ldi	r19, 0x08	; 8
    dc36:	f9 01       	movw	r30, r18
    dc38:	26 81       	ldd	r18, Z+6	; 0x06
    dc3a:	2f 73       	andi	r18, 0x3F	; 63
    dc3c:	fc 01       	movw	r30, r24
    dc3e:	26 83       	std	Z+6, r18	; 0x06
}
    dc40:	00 00       	nop
    dc42:	df 91       	pop	r29
    dc44:	cf 91       	pop	r28
    dc46:	08 95       	ret

0000dc48 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    dc48:	cf 93       	push	r28
    dc4a:	df 93       	push	r29
    dc4c:	cd b7       	in	r28, 0x3d	; 61
    dc4e:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    dc50:	80 e8       	ldi	r24, 0x80	; 128
    dc52:	98 e0       	ldi	r25, 0x08	; 8
    dc54:	fc 01       	movw	r30, r24
    dc56:	80 81       	ld	r24, Z
}
    dc58:	df 91       	pop	r29
    dc5a:	cf 91       	pop	r28
    dc5c:	08 95       	ret

0000dc5e <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    dc5e:	ef 92       	push	r14
    dc60:	ff 92       	push	r15
    dc62:	0f 93       	push	r16
    dc64:	1f 93       	push	r17
    dc66:	cf 93       	push	r28
    dc68:	df 93       	push	r29
    dc6a:	cd b7       	in	r28, 0x3d	; 61
    dc6c:	de b7       	in	r29, 0x3e	; 62
    dc6e:	2c 97       	sbiw	r28, 0x0c	; 12
    dc70:	cd bf       	out	0x3d, r28	; 61
    dc72:	de bf       	out	0x3e, r29	; 62
    dc74:	6d 83       	std	Y+5, r22	; 0x05
    dc76:	7e 83       	std	Y+6, r23	; 0x06
    dc78:	8f 83       	std	Y+7, r24	; 0x07
    dc7a:	98 87       	std	Y+8, r25	; 0x08
    dc7c:	29 87       	std	Y+9, r18	; 0x09
    dc7e:	3a 87       	std	Y+10, r19	; 0x0a
    dc80:	4b 87       	std	Y+11, r20	; 0x0b
    dc82:	5c 87       	std	Y+12, r21	; 0x0c
    dc84:	2d 81       	ldd	r18, Y+5	; 0x05
    dc86:	3e 81       	ldd	r19, Y+6	; 0x06
    dc88:	4f 81       	ldd	r20, Y+7	; 0x07
    dc8a:	58 85       	ldd	r21, Y+8	; 0x08
    dc8c:	89 85       	ldd	r24, Y+9	; 0x09
    dc8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    dc90:	ab 85       	ldd	r26, Y+11	; 0x0b
    dc92:	bc 85       	ldd	r27, Y+12	; 0x0c
    dc94:	82 17       	cp	r24, r18
    dc96:	93 07       	cpc	r25, r19
    dc98:	a4 07       	cpc	r26, r20
    dc9a:	b5 07       	cpc	r27, r21
    dc9c:	a8 f4       	brcc	.+42     	; 0xdcc8 <_Z7timeDifmm+0x6a>
    dc9e:	2d 81       	ldd	r18, Y+5	; 0x05
    dca0:	3e 81       	ldd	r19, Y+6	; 0x06
    dca2:	4f 81       	ldd	r20, Y+7	; 0x07
    dca4:	58 85       	ldd	r21, Y+8	; 0x08
    dca6:	89 85       	ldd	r24, Y+9	; 0x09
    dca8:	9a 85       	ldd	r25, Y+10	; 0x0a
    dcaa:	ab 85       	ldd	r26, Y+11	; 0x0b
    dcac:	bc 85       	ldd	r27, Y+12	; 0x0c
    dcae:	79 01       	movw	r14, r18
    dcb0:	8a 01       	movw	r16, r20
    dcb2:	e8 1a       	sub	r14, r24
    dcb4:	f9 0a       	sbc	r15, r25
    dcb6:	0a 0b       	sbc	r16, r26
    dcb8:	1b 0b       	sbc	r17, r27
    dcba:	d8 01       	movw	r26, r16
    dcbc:	c7 01       	movw	r24, r14
    dcbe:	89 83       	std	Y+1, r24	; 0x01
    dcc0:	9a 83       	std	Y+2, r25	; 0x02
    dcc2:	ab 83       	std	Y+3, r26	; 0x03
    dcc4:	bc 83       	std	Y+4, r27	; 0x04
    dcc6:	14 c0       	rjmp	.+40     	; 0xdcf0 <_Z7timeDifmm+0x92>
    dcc8:	2d 81       	ldd	r18, Y+5	; 0x05
    dcca:	3e 81       	ldd	r19, Y+6	; 0x06
    dccc:	4f 81       	ldd	r20, Y+7	; 0x07
    dcce:	58 85       	ldd	r21, Y+8	; 0x08
    dcd0:	89 85       	ldd	r24, Y+9	; 0x09
    dcd2:	9a 85       	ldd	r25, Y+10	; 0x0a
    dcd4:	ab 85       	ldd	r26, Y+11	; 0x0b
    dcd6:	bc 85       	ldd	r27, Y+12	; 0x0c
    dcd8:	79 01       	movw	r14, r18
    dcda:	8a 01       	movw	r16, r20
    dcdc:	e8 1a       	sub	r14, r24
    dcde:	f9 0a       	sbc	r15, r25
    dce0:	0a 0b       	sbc	r16, r26
    dce2:	1b 0b       	sbc	r17, r27
    dce4:	d8 01       	movw	r26, r16
    dce6:	c7 01       	movw	r24, r14
    dce8:	89 83       	std	Y+1, r24	; 0x01
    dcea:	9a 83       	std	Y+2, r25	; 0x02
    dcec:	ab 83       	std	Y+3, r26	; 0x03
    dcee:	bc 83       	std	Y+4, r27	; 0x04
    dcf0:	89 81       	ldd	r24, Y+1	; 0x01
    dcf2:	9a 81       	ldd	r25, Y+2	; 0x02
    dcf4:	ab 81       	ldd	r26, Y+3	; 0x03
    dcf6:	bc 81       	ldd	r27, Y+4	; 0x04
    dcf8:	bc 01       	movw	r22, r24
    dcfa:	cd 01       	movw	r24, r26
    dcfc:	2c 96       	adiw	r28, 0x0c	; 12
    dcfe:	cd bf       	out	0x3d, r28	; 61
    dd00:	de bf       	out	0x3e, r29	; 62
    dd02:	df 91       	pop	r29
    dd04:	cf 91       	pop	r28
    dd06:	1f 91       	pop	r17
    dd08:	0f 91       	pop	r16
    dd0a:	ff 90       	pop	r15
    dd0c:	ef 90       	pop	r14
    dd0e:	08 95       	ret

0000dd10 <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    dd10:	cf 93       	push	r28
    dd12:	df 93       	push	r29
    dd14:	00 d0       	rcall	.+0      	; 0xdd16 <_Z11only_digitsPc+0x6>
    dd16:	cd b7       	in	r28, 0x3d	; 61
    dd18:	de b7       	in	r29, 0x3e	; 62
    dd1a:	89 83       	std	Y+1, r24	; 0x01
    dd1c:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    dd1e:	89 81       	ldd	r24, Y+1	; 0x01
    dd20:	9a 81       	ldd	r25, Y+2	; 0x02
    dd22:	fc 01       	movw	r30, r24
    dd24:	80 81       	ld	r24, Z
    dd26:	88 23       	and	r24, r24
    dd28:	a1 f0       	breq	.+40     	; 0xdd52 <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    dd2a:	89 81       	ldd	r24, Y+1	; 0x01
    dd2c:	9a 81       	ldd	r25, Y+2	; 0x02
    dd2e:	9c 01       	movw	r18, r24
    dd30:	2f 5f       	subi	r18, 0xFF	; 255
    dd32:	3f 4f       	sbci	r19, 0xFF	; 255
    dd34:	29 83       	std	Y+1, r18	; 0x01
    dd36:	3a 83       	std	Y+2, r19	; 0x02
    dd38:	fc 01       	movw	r30, r24
    dd3a:	80 81       	ld	r24, Z
    dd3c:	88 2f       	mov	r24, r24
    dd3e:	90 e0       	ldi	r25, 0x00	; 0
    dd40:	c0 97       	sbiw	r24, 0x30	; 48
    dd42:	21 e0       	ldi	r18, 0x01	; 1
    dd44:	0a 97       	sbiw	r24, 0x0a	; 10
    dd46:	08 f4       	brcc	.+2      	; 0xdd4a <_Z11only_digitsPc+0x3a>
    dd48:	20 e0       	ldi	r18, 0x00	; 0
    dd4a:	22 23       	and	r18, r18
    dd4c:	41 f3       	breq	.-48     	; 0xdd1e <_Z11only_digitsPc+0xe>
		{
			return( false);
    dd4e:	80 e0       	ldi	r24, 0x00	; 0
    dd50:	01 c0       	rjmp	.+2      	; 0xdd54 <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    dd52:	81 e0       	ldi	r24, 0x01	; 1
}
    dd54:	0f 90       	pop	r0
    dd56:	0f 90       	pop	r0
    dd58:	df 91       	pop	r29
    dd5a:	cf 91       	pop	r28
    dd5c:	08 95       	ret

0000dd5e <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    dd5e:	cf 93       	push	r28
    dd60:	df 93       	push	r29
    dd62:	cd b7       	in	r28, 0x3d	; 61
    dd64:	de b7       	in	r29, 0x3e	; 62
    dd66:	2b 97       	sbiw	r28, 0x0b	; 11
    dd68:	cd bf       	out	0x3d, r28	; 61
    dd6a:	de bf       	out	0x3e, r29	; 62
    dd6c:	8e 83       	std	Y+6, r24	; 0x06
    dd6e:	9f 83       	std	Y+7, r25	; 0x07
    dd70:	48 87       	std	Y+8, r20	; 0x08
    dd72:	59 87       	std	Y+9, r21	; 0x09
    dd74:	6a 87       	std	Y+10, r22	; 0x0a
    dd76:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    dd78:	81 e0       	ldi	r24, 0x01	; 1
    dd7a:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    dd7c:	8e 81       	ldd	r24, Y+6	; 0x06
    dd7e:	9f 81       	ldd	r25, Y+7	; 0x07
    dd80:	89 2b       	or	r24, r25
    dd82:	11 f4       	brne	.+4      	; 0xdd88 <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    dd84:	89 81       	ldd	r24, Y+1	; 0x01
    dd86:	61 c0       	rjmp	.+194    	; 0xde4a <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    dd88:	88 85       	ldd	r24, Y+8	; 0x08
    dd8a:	99 85       	ldd	r25, Y+9	; 0x09
    dd8c:	aa 85       	ldd	r26, Y+10	; 0x0a
    dd8e:	bb 85       	ldd	r27, Y+11	; 0x0b
    dd90:	81 3e       	cpi	r24, 0xE1	; 225
    dd92:	97 46       	sbci	r25, 0x67	; 103
    dd94:	a5 43       	sbci	r26, 0x35	; 53
    dd96:	b1 05       	cpc	r27, r1
    dd98:	08 f4       	brcc	.+2      	; 0xdd9c <_Z15frequencyStringPcm+0x3e>
    dd9a:	56 c0       	rjmp	.+172    	; 0xde48 <_Z15frequencyStringPcm+0xea>
    dd9c:	88 85       	ldd	r24, Y+8	; 0x08
    dd9e:	99 85       	ldd	r25, Y+9	; 0x09
    dda0:	aa 85       	ldd	r26, Y+10	; 0x0a
    dda2:	bb 85       	ldd	r27, Y+11	; 0x0b
    dda4:	81 15       	cp	r24, r1
    dda6:	99 40       	sbci	r25, 0x09	; 9
    dda8:	ad 43       	sbci	r26, 0x3D	; 61
    ddaa:	b1 05       	cpc	r27, r1
    ddac:	08 f0       	brcs	.+2      	; 0xddb0 <_Z15frequencyStringPcm+0x52>
    ddae:	4c c0       	rjmp	.+152    	; 0xde48 <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    ddb0:	88 85       	ldd	r24, Y+8	; 0x08
    ddb2:	99 85       	ldd	r25, Y+9	; 0x09
    ddb4:	aa 85       	ldd	r26, Y+10	; 0x0a
    ddb6:	bb 85       	ldd	r27, Y+11	; 0x0b
    ddb8:	28 ee       	ldi	r18, 0xE8	; 232
    ddba:	33 e0       	ldi	r19, 0x03	; 3
    ddbc:	40 e0       	ldi	r20, 0x00	; 0
    ddbe:	50 e0       	ldi	r21, 0x00	; 0
    ddc0:	bc 01       	movw	r22, r24
    ddc2:	cd 01       	movw	r24, r26
    ddc4:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    ddc8:	dc 01       	movw	r26, r24
    ddca:	cb 01       	movw	r24, r22
    ddcc:	24 e6       	ldi	r18, 0x64	; 100
    ddce:	30 e0       	ldi	r19, 0x00	; 0
    ddd0:	40 e0       	ldi	r20, 0x00	; 0
    ddd2:	50 e0       	ldi	r21, 0x00	; 0
    ddd4:	bc 01       	movw	r22, r24
    ddd6:	cd 01       	movw	r24, r26
    ddd8:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    dddc:	da 01       	movw	r26, r20
    ddde:	c9 01       	movw	r24, r18
    dde0:	8a 83       	std	Y+2, r24	; 0x02
    dde2:	9b 83       	std	Y+3, r25	; 0x03
    dde4:	ac 83       	std	Y+4, r26	; 0x04
    dde6:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    dde8:	88 85       	ldd	r24, Y+8	; 0x08
    ddea:	99 85       	ldd	r25, Y+9	; 0x09
    ddec:	aa 85       	ldd	r26, Y+10	; 0x0a
    ddee:	bb 85       	ldd	r27, Y+11	; 0x0b
    ddf0:	28 ee       	ldi	r18, 0xE8	; 232
    ddf2:	33 e0       	ldi	r19, 0x03	; 3
    ddf4:	40 e0       	ldi	r20, 0x00	; 0
    ddf6:	50 e0       	ldi	r21, 0x00	; 0
    ddf8:	bc 01       	movw	r22, r24
    ddfa:	cd 01       	movw	r24, r26
    ddfc:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    de00:	da 01       	movw	r26, r20
    de02:	c9 01       	movw	r24, r18
    de04:	2d 81       	ldd	r18, Y+5	; 0x05
    de06:	2f 93       	push	r18
    de08:	2c 81       	ldd	r18, Y+4	; 0x04
    de0a:	2f 93       	push	r18
    de0c:	2b 81       	ldd	r18, Y+3	; 0x03
    de0e:	2f 93       	push	r18
    de10:	2a 81       	ldd	r18, Y+2	; 0x02
    de12:	2f 93       	push	r18
    de14:	2b 2f       	mov	r18, r27
    de16:	2f 93       	push	r18
    de18:	2a 2f       	mov	r18, r26
    de1a:	2f 93       	push	r18
    de1c:	29 2f       	mov	r18, r25
    de1e:	2f 93       	push	r18
    de20:	8f 93       	push	r24
    de22:	8c ed       	ldi	r24, 0xDC	; 220
    de24:	94 e4       	ldi	r25, 0x44	; 68
    de26:	89 2f       	mov	r24, r25
    de28:	8f 93       	push	r24
    de2a:	8c ed       	ldi	r24, 0xDC	; 220
    de2c:	94 e4       	ldi	r25, 0x44	; 68
    de2e:	8f 93       	push	r24
    de30:	8f 81       	ldd	r24, Y+7	; 0x07
    de32:	8f 93       	push	r24
    de34:	8e 81       	ldd	r24, Y+6	; 0x06
    de36:	8f 93       	push	r24
    de38:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    de3c:	8d b7       	in	r24, 0x3d	; 61
    de3e:	9e b7       	in	r25, 0x3e	; 62
    de40:	0c 96       	adiw	r24, 0x0c	; 12
    de42:	cd bf       	out	0x3d, r28	; 61
    de44:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    de46:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    de48:	89 81       	ldd	r24, Y+1	; 0x01
}
    de4a:	2b 96       	adiw	r28, 0x0b	; 11
    de4c:	cd bf       	out	0x3d, r28	; 61
    de4e:	de bf       	out	0x3e, r29	; 62
    de50:	df 91       	pop	r29
    de52:	cf 91       	pop	r28
    de54:	08 95       	ret

0000de56 <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    de56:	ef 92       	push	r14
    de58:	ff 92       	push	r15
    de5a:	0f 93       	push	r16
    de5c:	1f 93       	push	r17
    de5e:	cf 93       	push	r28
    de60:	df 93       	push	r29
    de62:	cd b7       	in	r28, 0x3d	; 61
    de64:	de b7       	in	r29, 0x3e	; 62
    de66:	65 97       	sbiw	r28, 0x15	; 21
    de68:	cd bf       	out	0x3d, r28	; 61
    de6a:	de bf       	out	0x3e, r29	; 62
    de6c:	8a 8b       	std	Y+18, r24	; 0x12
    de6e:	9b 8b       	std	Y+19, r25	; 0x13
    de70:	6c 8b       	std	Y+20, r22	; 0x14
    de72:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    de74:	81 e0       	ldi	r24, 0x01	; 1
    de76:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    de78:	8a 89       	ldd	r24, Y+18	; 0x12
    de7a:	9b 89       	ldd	r25, Y+19	; 0x13
    de7c:	89 2b       	or	r24, r25
    de7e:	11 f4       	brne	.+4      	; 0xde84 <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    de80:	89 81       	ldd	r24, Y+1	; 0x01
    de82:	a4 c1       	rjmp	.+840    	; 0xe1cc <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    de84:	8e e2       	ldi	r24, 0x2E	; 46
    de86:	90 e0       	ldi	r25, 0x00	; 0
    de88:	8a 87       	std	Y+10, r24	; 0x0a
    de8a:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    de8c:	2a 85       	ldd	r18, Y+10	; 0x0a
    de8e:	3b 85       	ldd	r19, Y+11	; 0x0b
    de90:	8a 89       	ldd	r24, Y+18	; 0x12
    de92:	9b 89       	ldd	r25, Y+19	; 0x13
    de94:	b9 01       	movw	r22, r18
    de96:	0e 94 96 76 	call	0xed2c	; 0xed2c <strchr>
    de9a:	8c 87       	std	Y+12, r24	; 0x0c
    de9c:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    de9e:	8c 85       	ldd	r24, Y+12	; 0x0c
    dea0:	9d 85       	ldd	r25, Y+13	; 0x0d
    dea2:	89 2b       	or	r24, r25
    dea4:	09 f4       	brne	.+2      	; 0xdea8 <_Z12frequencyValPcPm+0x52>
    dea6:	d7 c0       	rjmp	.+430    	; 0xe056 <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    dea8:	8a 89       	ldd	r24, Y+18	; 0x12
    deaa:	9b 89       	ldd	r25, Y+19	; 0x13
    deac:	0e 94 33 76 	call	0xec66	; 0xec66 <atof>
    deb0:	dc 01       	movw	r26, r24
    deb2:	cb 01       	movw	r24, r22
    deb4:	8a 83       	std	Y+2, r24	; 0x02
    deb6:	9b 83       	std	Y+3, r25	; 0x03
    deb8:	ac 83       	std	Y+4, r26	; 0x04
    deba:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    debc:	20 e0       	ldi	r18, 0x00	; 0
    debe:	30 e0       	ldi	r19, 0x00	; 0
    dec0:	40 e6       	ldi	r20, 0x60	; 96
    dec2:	50 e4       	ldi	r21, 0x40	; 64
    dec4:	6a 81       	ldd	r22, Y+2	; 0x02
    dec6:	7b 81       	ldd	r23, Y+3	; 0x03
    dec8:	8c 81       	ldd	r24, Y+4	; 0x04
    deca:	9d 81       	ldd	r25, Y+5	; 0x05
    decc:	0e 94 04 74 	call	0xe808	; 0xe808 <__gesf2>
    ded0:	18 16       	cp	r1, r24
    ded2:	f4 f4       	brge	.+60     	; 0xdf10 <_Z12frequencyValPcPm+0xba>
    ded4:	20 e0       	ldi	r18, 0x00	; 0
    ded6:	30 e0       	ldi	r19, 0x00	; 0
    ded8:	40 e8       	ldi	r20, 0x80	; 128
    deda:	50 e4       	ldi	r21, 0x40	; 64
    dedc:	6a 81       	ldd	r22, Y+2	; 0x02
    dede:	7b 81       	ldd	r23, Y+3	; 0x03
    dee0:	8c 81       	ldd	r24, Y+4	; 0x04
    dee2:	9d 81       	ldd	r25, Y+5	; 0x05
    dee4:	0e 94 64 72 	call	0xe4c8	; 0xe4c8 <__cmpsf2>
    dee8:	88 23       	and	r24, r24
    deea:	94 f4       	brge	.+36     	; 0xdf10 <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    deec:	20 e0       	ldi	r18, 0x00	; 0
    deee:	34 e2       	ldi	r19, 0x24	; 36
    def0:	44 e7       	ldi	r20, 0x74	; 116
    def2:	59 e4       	ldi	r21, 0x49	; 73
    def4:	6a 81       	ldd	r22, Y+2	; 0x02
    def6:	7b 81       	ldd	r23, Y+3	; 0x03
    def8:	8c 81       	ldd	r24, Y+4	; 0x04
    defa:	9d 81       	ldd	r25, Y+5	; 0x05
    defc:	0e 94 09 74 	call	0xe812	; 0xe812 <__mulsf3>
    df00:	dc 01       	movw	r26, r24
    df02:	cb 01       	movw	r24, r22
    df04:	8a 83       	std	Y+2, r24	; 0x02
    df06:	9b 83       	std	Y+3, r25	; 0x03
    df08:	ac 83       	std	Y+4, r26	; 0x04
    df0a:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    df0c:	19 82       	std	Y+1, r1	; 0x01
    df0e:	43 c0       	rjmp	.+134    	; 0xdf96 <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    df10:	20 e0       	ldi	r18, 0x00	; 0
    df12:	30 ec       	ldi	r19, 0xC0	; 192
    df14:	4a e5       	ldi	r20, 0x5A	; 90
    df16:	55 e4       	ldi	r21, 0x45	; 69
    df18:	6a 81       	ldd	r22, Y+2	; 0x02
    df1a:	7b 81       	ldd	r23, Y+3	; 0x03
    df1c:	8c 81       	ldd	r24, Y+4	; 0x04
    df1e:	9d 81       	ldd	r25, Y+5	; 0x05
    df20:	0e 94 04 74 	call	0xe808	; 0xe808 <__gesf2>
    df24:	18 16       	cp	r1, r24
    df26:	f4 f4       	brge	.+60     	; 0xdf64 <_Z12frequencyValPcPm+0x10e>
    df28:	20 e0       	ldi	r18, 0x00	; 0
    df2a:	30 e0       	ldi	r19, 0x00	; 0
    df2c:	4a e7       	ldi	r20, 0x7A	; 122
    df2e:	55 e4       	ldi	r21, 0x45	; 69
    df30:	6a 81       	ldd	r22, Y+2	; 0x02
    df32:	7b 81       	ldd	r23, Y+3	; 0x03
    df34:	8c 81       	ldd	r24, Y+4	; 0x04
    df36:	9d 81       	ldd	r25, Y+5	; 0x05
    df38:	0e 94 64 72 	call	0xe4c8	; 0xe4c8 <__cmpsf2>
    df3c:	88 23       	and	r24, r24
    df3e:	94 f4       	brge	.+36     	; 0xdf64 <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    df40:	20 e0       	ldi	r18, 0x00	; 0
    df42:	30 e0       	ldi	r19, 0x00	; 0
    df44:	4a e7       	ldi	r20, 0x7A	; 122
    df46:	54 e4       	ldi	r21, 0x44	; 68
    df48:	6a 81       	ldd	r22, Y+2	; 0x02
    df4a:	7b 81       	ldd	r23, Y+3	; 0x03
    df4c:	8c 81       	ldd	r24, Y+4	; 0x04
    df4e:	9d 81       	ldd	r25, Y+5	; 0x05
    df50:	0e 94 09 74 	call	0xe812	; 0xe812 <__mulsf3>
    df54:	dc 01       	movw	r26, r24
    df56:	cb 01       	movw	r24, r22
    df58:	8a 83       	std	Y+2, r24	; 0x02
    df5a:	9b 83       	std	Y+3, r25	; 0x03
    df5c:	ac 83       	std	Y+4, r26	; 0x04
    df5e:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    df60:	19 82       	std	Y+1, r1	; 0x01
    df62:	19 c0       	rjmp	.+50     	; 0xdf96 <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    df64:	20 e8       	ldi	r18, 0x80	; 128
    df66:	3f e9       	ldi	r19, 0x9F	; 159
    df68:	45 e5       	ldi	r20, 0x55	; 85
    df6a:	5a e4       	ldi	r21, 0x4A	; 74
    df6c:	6a 81       	ldd	r22, Y+2	; 0x02
    df6e:	7b 81       	ldd	r23, Y+3	; 0x03
    df70:	8c 81       	ldd	r24, Y+4	; 0x04
    df72:	9d 81       	ldd	r25, Y+5	; 0x05
    df74:	0e 94 04 74 	call	0xe808	; 0xe808 <__gesf2>
    df78:	18 16       	cp	r1, r24
    df7a:	6c f4       	brge	.+26     	; 0xdf96 <_Z12frequencyValPcPm+0x140>
    df7c:	20 e0       	ldi	r18, 0x00	; 0
    df7e:	34 e2       	ldi	r19, 0x24	; 36
    df80:	44 e7       	ldi	r20, 0x74	; 116
    df82:	5a e4       	ldi	r21, 0x4A	; 74
    df84:	6a 81       	ldd	r22, Y+2	; 0x02
    df86:	7b 81       	ldd	r23, Y+3	; 0x03
    df88:	8c 81       	ldd	r24, Y+4	; 0x04
    df8a:	9d 81       	ldd	r25, Y+5	; 0x05
    df8c:	0e 94 64 72 	call	0xe4c8	; 0xe4c8 <__cmpsf2>
    df90:	88 23       	and	r24, r24
    df92:	0c f4       	brge	.+2      	; 0xdf96 <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    df94:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    df96:	99 81       	ldd	r25, Y+1	; 0x01
    df98:	81 e0       	ldi	r24, 0x01	; 1
    df9a:	89 27       	eor	r24, r25
    df9c:	88 23       	and	r24, r24
    df9e:	09 f4       	brne	.+2      	; 0xdfa2 <_Z12frequencyValPcPm+0x14c>
    dfa0:	14 c1       	rjmp	.+552    	; 0xe1ca <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    dfa2:	8a 81       	ldd	r24, Y+2	; 0x02
    dfa4:	9b 81       	ldd	r25, Y+3	; 0x03
    dfa6:	ac 81       	ldd	r26, Y+4	; 0x04
    dfa8:	bd 81       	ldd	r27, Y+5	; 0x05
    dfaa:	bc 01       	movw	r22, r24
    dfac:	cd 01       	movw	r24, r26
    dfae:	0e 94 4d 72 	call	0xe49a	; 0xe49a <ceil>
    dfb2:	dc 01       	movw	r26, r24
    dfb4:	cb 01       	movw	r24, r22
    dfb6:	bc 01       	movw	r22, r24
    dfb8:	cd 01       	movw	r24, r26
    dfba:	0e 94 e2 72 	call	0xe5c4	; 0xe5c4 <__fixunssfsi>
    dfbe:	dc 01       	movw	r26, r24
    dfc0:	cb 01       	movw	r24, r22
    dfc2:	8e 87       	std	Y+14, r24	; 0x0e
    dfc4:	9f 87       	std	Y+15, r25	; 0x0f
    dfc6:	a8 8b       	std	Y+16, r26	; 0x10
    dfc8:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    dfca:	8e 85       	ldd	r24, Y+14	; 0x0e
    dfcc:	9f 85       	ldd	r25, Y+15	; 0x0f
    dfce:	a8 89       	ldd	r26, Y+16	; 0x10
    dfd0:	b9 89       	ldd	r27, Y+17	; 0x11
    dfd2:	24 e6       	ldi	r18, 0x64	; 100
    dfd4:	30 e0       	ldi	r19, 0x00	; 0
    dfd6:	40 e0       	ldi	r20, 0x00	; 0
    dfd8:	50 e0       	ldi	r21, 0x00	; 0
    dfda:	bc 01       	movw	r22, r24
    dfdc:	cd 01       	movw	r24, r26
    dfde:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    dfe2:	dc 01       	movw	r26, r24
    dfe4:	cb 01       	movw	r24, r22
    dfe6:	9c 01       	movw	r18, r24
    dfe8:	ad 01       	movw	r20, r26
    dfea:	8e 85       	ldd	r24, Y+14	; 0x0e
    dfec:	9f 85       	ldd	r25, Y+15	; 0x0f
    dfee:	a8 89       	ldd	r26, Y+16	; 0x10
    dff0:	b9 89       	ldd	r27, Y+17	; 0x11
    dff2:	82 1b       	sub	r24, r18
    dff4:	93 0b       	sbc	r25, r19
    dff6:	a4 0b       	sbc	r26, r20
    dff8:	b5 0b       	sbc	r27, r21
    dffa:	8e 87       	std	Y+14, r24	; 0x0e
    dffc:	9f 87       	std	Y+15, r25	; 0x0f
    dffe:	a8 8b       	std	Y+16, r26	; 0x10
    e000:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    e002:	8c 89       	ldd	r24, Y+20	; 0x14
    e004:	9d 89       	ldd	r25, Y+21	; 0x15
    e006:	89 2b       	or	r24, r25
    e008:	59 f0       	breq	.+22     	; 0xe020 <_Z12frequencyValPcPm+0x1ca>
    e00a:	2c 89       	ldd	r18, Y+20	; 0x14
    e00c:	3d 89       	ldd	r19, Y+21	; 0x15
    e00e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e010:	9f 85       	ldd	r25, Y+15	; 0x0f
    e012:	a8 89       	ldd	r26, Y+16	; 0x10
    e014:	b9 89       	ldd	r27, Y+17	; 0x11
    e016:	f9 01       	movw	r30, r18
    e018:	80 83       	st	Z, r24
    e01a:	91 83       	std	Z+1, r25	; 0x01
    e01c:	a2 83       	std	Z+2, r26	; 0x02
    e01e:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    e020:	8d 81       	ldd	r24, Y+5	; 0x05
    e022:	8f 93       	push	r24
    e024:	8c 81       	ldd	r24, Y+4	; 0x04
    e026:	8f 93       	push	r24
    e028:	8b 81       	ldd	r24, Y+3	; 0x03
    e02a:	8f 93       	push	r24
    e02c:	8a 81       	ldd	r24, Y+2	; 0x02
    e02e:	8f 93       	push	r24
    e030:	89 ee       	ldi	r24, 0xE9	; 233
    e032:	94 e4       	ldi	r25, 0x44	; 68
    e034:	89 2f       	mov	r24, r25
    e036:	8f 93       	push	r24
    e038:	89 ee       	ldi	r24, 0xE9	; 233
    e03a:	94 e4       	ldi	r25, 0x44	; 68
    e03c:	8f 93       	push	r24
    e03e:	8b 89       	ldd	r24, Y+19	; 0x13
    e040:	8f 93       	push	r24
    e042:	8a 89       	ldd	r24, Y+18	; 0x12
    e044:	8f 93       	push	r24
    e046:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    e04a:	8d b7       	in	r24, 0x3d	; 61
    e04c:	9e b7       	in	r25, 0x3e	; 62
    e04e:	08 96       	adiw	r24, 0x08	; 8
    e050:	cd bf       	out	0x3d, r28	; 61
    e052:	de bf       	out	0x3e, r29	; 62
    e054:	ba c0       	rjmp	.+372    	; 0xe1ca <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    e056:	8a 89       	ldd	r24, Y+18	; 0x12
    e058:	9b 89       	ldd	r25, Y+19	; 0x13
    e05a:	0e 94 55 76 	call	0xecaa	; 0xecaa <atol>
    e05e:	dc 01       	movw	r26, r24
    e060:	cb 01       	movw	r24, r22
    e062:	8e 83       	std	Y+6, r24	; 0x06
    e064:	9f 83       	std	Y+7, r25	; 0x07
    e066:	a8 87       	std	Y+8, r26	; 0x08
    e068:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    e06a:	8e 81       	ldd	r24, Y+6	; 0x06
    e06c:	9f 81       	ldd	r25, Y+7	; 0x07
    e06e:	a8 85       	ldd	r26, Y+8	; 0x08
    e070:	b9 85       	ldd	r27, Y+9	; 0x09
    e072:	8d 3a       	cpi	r24, 0xAD	; 173
    e074:	9d 40       	sbci	r25, 0x0D	; 13
    e076:	a1 05       	cpc	r26, r1
    e078:	b1 05       	cpc	r27, r1
    e07a:	d0 f0       	brcs	.+52     	; 0xe0b0 <_Z12frequencyValPcPm+0x25a>
    e07c:	8e 81       	ldd	r24, Y+6	; 0x06
    e07e:	9f 81       	ldd	r25, Y+7	; 0x07
    e080:	a8 85       	ldd	r26, Y+8	; 0x08
    e082:	b9 85       	ldd	r27, Y+9	; 0x09
    e084:	80 3a       	cpi	r24, 0xA0	; 160
    e086:	9f 40       	sbci	r25, 0x0F	; 15
    e088:	a1 05       	cpc	r26, r1
    e08a:	b1 05       	cpc	r27, r1
    e08c:	88 f4       	brcc	.+34     	; 0xe0b0 <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    e08e:	2e 81       	ldd	r18, Y+6	; 0x06
    e090:	3f 81       	ldd	r19, Y+7	; 0x07
    e092:	48 85       	ldd	r20, Y+8	; 0x08
    e094:	59 85       	ldd	r21, Y+9	; 0x09
    e096:	88 ee       	ldi	r24, 0xE8	; 232
    e098:	93 e0       	ldi	r25, 0x03	; 3
    e09a:	dc 01       	movw	r26, r24
    e09c:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    e0a0:	dc 01       	movw	r26, r24
    e0a2:	cb 01       	movw	r24, r22
    e0a4:	8e 83       	std	Y+6, r24	; 0x06
    e0a6:	9f 83       	std	Y+7, r25	; 0x07
    e0a8:	a8 87       	std	Y+8, r26	; 0x08
    e0aa:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    e0ac:	19 82       	std	Y+1, r1	; 0x01
    e0ae:	2f c0       	rjmp	.+94     	; 0xe10e <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    e0b0:	8e 81       	ldd	r24, Y+6	; 0x06
    e0b2:	9f 81       	ldd	r25, Y+7	; 0x07
    e0b4:	a8 85       	ldd	r26, Y+8	; 0x08
    e0b6:	b9 85       	ldd	r27, Y+9	; 0x09
    e0b8:	81 3e       	cpi	r24, 0xE1	; 225
    e0ba:	97 46       	sbci	r25, 0x67	; 103
    e0bc:	a5 43       	sbci	r26, 0x35	; 53
    e0be:	b1 05       	cpc	r27, r1
    e0c0:	30 f1       	brcs	.+76     	; 0xe10e <_Z12frequencyValPcPm+0x2b8>
    e0c2:	8e 81       	ldd	r24, Y+6	; 0x06
    e0c4:	9f 81       	ldd	r25, Y+7	; 0x07
    e0c6:	a8 85       	ldd	r26, Y+8	; 0x08
    e0c8:	b9 85       	ldd	r27, Y+9	; 0x09
    e0ca:	81 15       	cp	r24, r1
    e0cc:	99 40       	sbci	r25, 0x09	; 9
    e0ce:	ad 43       	sbci	r26, 0x3D	; 61
    e0d0:	b1 05       	cpc	r27, r1
    e0d2:	e8 f4       	brcc	.+58     	; 0xe10e <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    e0d4:	8e 81       	ldd	r24, Y+6	; 0x06
    e0d6:	9f 81       	ldd	r25, Y+7	; 0x07
    e0d8:	a8 85       	ldd	r26, Y+8	; 0x08
    e0da:	b9 85       	ldd	r27, Y+9	; 0x09
    e0dc:	24 e6       	ldi	r18, 0x64	; 100
    e0de:	30 e0       	ldi	r19, 0x00	; 0
    e0e0:	40 e0       	ldi	r20, 0x00	; 0
    e0e2:	50 e0       	ldi	r21, 0x00	; 0
    e0e4:	bc 01       	movw	r22, r24
    e0e6:	cd 01       	movw	r24, r26
    e0e8:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    e0ec:	dc 01       	movw	r26, r24
    e0ee:	cb 01       	movw	r24, r22
    e0f0:	9c 01       	movw	r18, r24
    e0f2:	ad 01       	movw	r20, r26
    e0f4:	8e 81       	ldd	r24, Y+6	; 0x06
    e0f6:	9f 81       	ldd	r25, Y+7	; 0x07
    e0f8:	a8 85       	ldd	r26, Y+8	; 0x08
    e0fa:	b9 85       	ldd	r27, Y+9	; 0x09
    e0fc:	82 1b       	sub	r24, r18
    e0fe:	93 0b       	sbc	r25, r19
    e100:	a4 0b       	sbc	r26, r20
    e102:	b5 0b       	sbc	r27, r21
    e104:	8e 83       	std	Y+6, r24	; 0x06
    e106:	9f 83       	std	Y+7, r25	; 0x07
    e108:	a8 87       	std	Y+8, r26	; 0x08
    e10a:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    e10c:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    e10e:	99 81       	ldd	r25, Y+1	; 0x01
    e110:	81 e0       	ldi	r24, 0x01	; 1
    e112:	89 27       	eor	r24, r25
    e114:	88 23       	and	r24, r24
    e116:	09 f4       	brne	.+2      	; 0xe11a <_Z12frequencyValPcPm+0x2c4>
    e118:	58 c0       	rjmp	.+176    	; 0xe1ca <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    e11a:	8c 89       	ldd	r24, Y+20	; 0x14
    e11c:	9d 89       	ldd	r25, Y+21	; 0x15
    e11e:	89 2b       	or	r24, r25
    e120:	59 f0       	breq	.+22     	; 0xe138 <_Z12frequencyValPcPm+0x2e2>
    e122:	2c 89       	ldd	r18, Y+20	; 0x14
    e124:	3d 89       	ldd	r19, Y+21	; 0x15
    e126:	8e 81       	ldd	r24, Y+6	; 0x06
    e128:	9f 81       	ldd	r25, Y+7	; 0x07
    e12a:	a8 85       	ldd	r26, Y+8	; 0x08
    e12c:	b9 85       	ldd	r27, Y+9	; 0x09
    e12e:	f9 01       	movw	r30, r18
    e130:	80 83       	st	Z, r24
    e132:	91 83       	std	Z+1, r25	; 0x01
    e134:	a2 83       	std	Z+2, r26	; 0x02
    e136:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    e138:	8e 81       	ldd	r24, Y+6	; 0x06
    e13a:	9f 81       	ldd	r25, Y+7	; 0x07
    e13c:	a8 85       	ldd	r26, Y+8	; 0x08
    e13e:	b9 85       	ldd	r27, Y+9	; 0x09
    e140:	28 ee       	ldi	r18, 0xE8	; 232
    e142:	33 e0       	ldi	r19, 0x03	; 3
    e144:	40 e0       	ldi	r20, 0x00	; 0
    e146:	50 e0       	ldi	r21, 0x00	; 0
    e148:	bc 01       	movw	r22, r24
    e14a:	cd 01       	movw	r24, r26
    e14c:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    e150:	dc 01       	movw	r26, r24
    e152:	cb 01       	movw	r24, r22
    e154:	24 e6       	ldi	r18, 0x64	; 100
    e156:	30 e0       	ldi	r19, 0x00	; 0
    e158:	40 e0       	ldi	r20, 0x00	; 0
    e15a:	50 e0       	ldi	r21, 0x00	; 0
    e15c:	bc 01       	movw	r22, r24
    e15e:	cd 01       	movw	r24, r26
    e160:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    e164:	da 01       	movw	r26, r20
    e166:	c9 01       	movw	r24, r18
    e168:	7c 01       	movw	r14, r24
    e16a:	8d 01       	movw	r16, r26
    e16c:	8e 81       	ldd	r24, Y+6	; 0x06
    e16e:	9f 81       	ldd	r25, Y+7	; 0x07
    e170:	a8 85       	ldd	r26, Y+8	; 0x08
    e172:	b9 85       	ldd	r27, Y+9	; 0x09
    e174:	28 ee       	ldi	r18, 0xE8	; 232
    e176:	33 e0       	ldi	r19, 0x03	; 3
    e178:	40 e0       	ldi	r20, 0x00	; 0
    e17a:	50 e0       	ldi	r21, 0x00	; 0
    e17c:	bc 01       	movw	r22, r24
    e17e:	cd 01       	movw	r24, r26
    e180:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    e184:	da 01       	movw	r26, r20
    e186:	c9 01       	movw	r24, r18
    e188:	21 2f       	mov	r18, r17
    e18a:	2f 93       	push	r18
    e18c:	20 2f       	mov	r18, r16
    e18e:	2f 93       	push	r18
    e190:	2f 2d       	mov	r18, r15
    e192:	2f 93       	push	r18
    e194:	2e 2d       	mov	r18, r14
    e196:	2f 93       	push	r18
    e198:	2b 2f       	mov	r18, r27
    e19a:	2f 93       	push	r18
    e19c:	2a 2f       	mov	r18, r26
    e19e:	2f 93       	push	r18
    e1a0:	29 2f       	mov	r18, r25
    e1a2:	2f 93       	push	r18
    e1a4:	8f 93       	push	r24
    e1a6:	8c ed       	ldi	r24, 0xDC	; 220
    e1a8:	94 e4       	ldi	r25, 0x44	; 68
    e1aa:	89 2f       	mov	r24, r25
    e1ac:	8f 93       	push	r24
    e1ae:	8c ed       	ldi	r24, 0xDC	; 220
    e1b0:	94 e4       	ldi	r25, 0x44	; 68
    e1b2:	8f 93       	push	r24
    e1b4:	8b 89       	ldd	r24, Y+19	; 0x13
    e1b6:	8f 93       	push	r24
    e1b8:	8a 89       	ldd	r24, Y+18	; 0x12
    e1ba:	8f 93       	push	r24
    e1bc:	0e 94 dd 76 	call	0xedba	; 0xedba <sprintf>
    e1c0:	8d b7       	in	r24, 0x3d	; 61
    e1c2:	9e b7       	in	r25, 0x3e	; 62
    e1c4:	0c 96       	adiw	r24, 0x0c	; 12
    e1c6:	cd bf       	out	0x3d, r28	; 61
    e1c8:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    e1ca:	89 81       	ldd	r24, Y+1	; 0x01
}
    e1cc:	65 96       	adiw	r28, 0x15	; 21
    e1ce:	cd bf       	out	0x3d, r28	; 61
    e1d0:	de bf       	out	0x3e, r29	; 62
    e1d2:	df 91       	pop	r29
    e1d4:	cf 91       	pop	r28
    e1d6:	1f 91       	pop	r17
    e1d8:	0f 91       	pop	r16
    e1da:	ff 90       	pop	r15
    e1dc:	ef 90       	pop	r14
    e1de:	08 95       	ret

0000e1e0 <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    e1e0:	cf 93       	push	r28
    e1e2:	df 93       	push	r29
    e1e4:	00 d0       	rcall	.+0      	; 0xe1e6 <_Z8fox2TextPc5Fox_t+0x6>
    e1e6:	00 d0       	rcall	.+0      	; 0xe1e8 <_Z8fox2TextPc5Fox_t+0x8>
    e1e8:	cd b7       	in	r28, 0x3d	; 61
    e1ea:	de b7       	in	r29, 0x3e	; 62
    e1ec:	8a 83       	std	Y+2, r24	; 0x02
    e1ee:	9b 83       	std	Y+3, r25	; 0x03
    e1f0:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    e1f2:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    e1f4:	8c 81       	ldd	r24, Y+4	; 0x04
    e1f6:	88 2f       	mov	r24, r24
    e1f8:	90 e0       	ldi	r25, 0x00	; 0
    e1fa:	09 2e       	mov	r0, r25
    e1fc:	00 0c       	add	r0, r0
    e1fe:	aa 0b       	sbc	r26, r26
    e200:	bb 0b       	sbc	r27, r27
    e202:	40 e0       	ldi	r20, 0x00	; 0
    e204:	50 e0       	ldi	r21, 0x00	; 0
    e206:	21 e1       	ldi	r18, 0x11	; 17
    e208:	30 e0       	ldi	r19, 0x00	; 0
    e20a:	84 1b       	sub	r24, r20
    e20c:	95 0b       	sbc	r25, r21
    e20e:	28 17       	cp	r18, r24
    e210:	39 07       	cpc	r19, r25
    e212:	08 f4       	brcc	.+2      	; 0xe216 <_Z8fox2TextPc5Fox_t+0x36>
    e214:	cb c0       	rjmp	.+406    	; 0xe3ac <_Z8fox2TextPc5Fox_t+0x1cc>
    e216:	8d 5d       	subi	r24, 0xDD	; 221
    e218:	9e 4f       	sbci	r25, 0xFE	; 254
    e21a:	fc 01       	movw	r30, r24
    e21c:	0c 94 ef 74 	jmp	0xe9de	; 0xe9de <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    e220:	8a 81       	ldd	r24, Y+2	; 0x02
    e222:	9b 81       	ldd	r25, Y+3	; 0x03
    e224:	2c e0       	ldi	r18, 0x0C	; 12
    e226:	e3 ef       	ldi	r30, 0xF3	; 243
    e228:	f4 e4       	ldi	r31, 0x44	; 68
    e22a:	dc 01       	movw	r26, r24
    e22c:	01 90       	ld	r0, Z+
    e22e:	0d 92       	st	X+, r0
    e230:	2a 95       	dec	r18
    e232:	e1 f7       	brne	.-8      	; 0xe22c <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    e234:	be c0       	rjmp	.+380    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    e236:	8a 81       	ldd	r24, Y+2	; 0x02
    e238:	9b 81       	ldd	r25, Y+3	; 0x03
    e23a:	24 e1       	ldi	r18, 0x14	; 20
    e23c:	ef ef       	ldi	r30, 0xFF	; 255
    e23e:	f4 e4       	ldi	r31, 0x44	; 68
    e240:	dc 01       	movw	r26, r24
    e242:	01 90       	ld	r0, Z+
    e244:	0d 92       	st	X+, r0
    e246:	2a 95       	dec	r18
    e248:	e1 f7       	brne	.-8      	; 0xe242 <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    e24a:	b3 c0       	rjmp	.+358    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    e24c:	8a 81       	ldd	r24, Y+2	; 0x02
    e24e:	9b 81       	ldd	r25, Y+3	; 0x03
    e250:	24 e1       	ldi	r18, 0x14	; 20
    e252:	e3 e1       	ldi	r30, 0x13	; 19
    e254:	f5 e4       	ldi	r31, 0x45	; 69
    e256:	dc 01       	movw	r26, r24
    e258:	01 90       	ld	r0, Z+
    e25a:	0d 92       	st	X+, r0
    e25c:	2a 95       	dec	r18
    e25e:	e1 f7       	brne	.-8      	; 0xe258 <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    e260:	a8 c0       	rjmp	.+336    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    e262:	8a 81       	ldd	r24, Y+2	; 0x02
    e264:	9b 81       	ldd	r25, Y+3	; 0x03
    e266:	24 e1       	ldi	r18, 0x14	; 20
    e268:	e7 e2       	ldi	r30, 0x27	; 39
    e26a:	f5 e4       	ldi	r31, 0x45	; 69
    e26c:	dc 01       	movw	r26, r24
    e26e:	01 90       	ld	r0, Z+
    e270:	0d 92       	st	X+, r0
    e272:	2a 95       	dec	r18
    e274:	e1 f7       	brne	.-8      	; 0xe26e <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    e276:	9d c0       	rjmp	.+314    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    e278:	8a 81       	ldd	r24, Y+2	; 0x02
    e27a:	9b 81       	ldd	r25, Y+3	; 0x03
    e27c:	24 e1       	ldi	r18, 0x14	; 20
    e27e:	eb e3       	ldi	r30, 0x3B	; 59
    e280:	f5 e4       	ldi	r31, 0x45	; 69
    e282:	dc 01       	movw	r26, r24
    e284:	01 90       	ld	r0, Z+
    e286:	0d 92       	st	X+, r0
    e288:	2a 95       	dec	r18
    e28a:	e1 f7       	brne	.-8      	; 0xe284 <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    e28c:	92 c0       	rjmp	.+292    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    e28e:	8a 81       	ldd	r24, Y+2	; 0x02
    e290:	9b 81       	ldd	r25, Y+3	; 0x03
    e292:	24 e1       	ldi	r18, 0x14	; 20
    e294:	ef e4       	ldi	r30, 0x4F	; 79
    e296:	f5 e4       	ldi	r31, 0x45	; 69
    e298:	dc 01       	movw	r26, r24
    e29a:	01 90       	ld	r0, Z+
    e29c:	0d 92       	st	X+, r0
    e29e:	2a 95       	dec	r18
    e2a0:	e1 f7       	brne	.-8      	; 0xe29a <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    e2a2:	87 c0       	rjmp	.+270    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    e2a4:	8a 81       	ldd	r24, Y+2	; 0x02
    e2a6:	9b 81       	ldd	r25, Y+3	; 0x03
    e2a8:	29 e0       	ldi	r18, 0x09	; 9
    e2aa:	e3 e6       	ldi	r30, 0x63	; 99
    e2ac:	f5 e4       	ldi	r31, 0x45	; 69
    e2ae:	dc 01       	movw	r26, r24
    e2b0:	01 90       	ld	r0, Z+
    e2b2:	0d 92       	st	X+, r0
    e2b4:	2a 95       	dec	r18
    e2b6:	e1 f7       	brne	.-8      	; 0xe2b0 <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    e2b8:	7c c0       	rjmp	.+248    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    e2ba:	8a 81       	ldd	r24, Y+2	; 0x02
    e2bc:	9b 81       	ldd	r25, Y+3	; 0x03
    e2be:	2e e0       	ldi	r18, 0x0E	; 14
    e2c0:	ec e6       	ldi	r30, 0x6C	; 108
    e2c2:	f5 e4       	ldi	r31, 0x45	; 69
    e2c4:	dc 01       	movw	r26, r24
    e2c6:	01 90       	ld	r0, Z+
    e2c8:	0d 92       	st	X+, r0
    e2ca:	2a 95       	dec	r18
    e2cc:	e1 f7       	brne	.-8      	; 0xe2c6 <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    e2ce:	71 c0       	rjmp	.+226    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    e2d0:	8a 81       	ldd	r24, Y+2	; 0x02
    e2d2:	9b 81       	ldd	r25, Y+3	; 0x03
    e2d4:	23 e1       	ldi	r18, 0x13	; 19
    e2d6:	ea e7       	ldi	r30, 0x7A	; 122
    e2d8:	f5 e4       	ldi	r31, 0x45	; 69
    e2da:	dc 01       	movw	r26, r24
    e2dc:	01 90       	ld	r0, Z+
    e2de:	0d 92       	st	X+, r0
    e2e0:	2a 95       	dec	r18
    e2e2:	e1 f7       	brne	.-8      	; 0xe2dc <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    e2e4:	66 c0       	rjmp	.+204    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    e2e6:	8a 81       	ldd	r24, Y+2	; 0x02
    e2e8:	9b 81       	ldd	r25, Y+3	; 0x03
    e2ea:	23 e1       	ldi	r18, 0x13	; 19
    e2ec:	ed e8       	ldi	r30, 0x8D	; 141
    e2ee:	f5 e4       	ldi	r31, 0x45	; 69
    e2f0:	dc 01       	movw	r26, r24
    e2f2:	01 90       	ld	r0, Z+
    e2f4:	0d 92       	st	X+, r0
    e2f6:	2a 95       	dec	r18
    e2f8:	e1 f7       	brne	.-8      	; 0xe2f2 <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    e2fa:	5b c0       	rjmp	.+182    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    e2fc:	8a 81       	ldd	r24, Y+2	; 0x02
    e2fe:	9b 81       	ldd	r25, Y+3	; 0x03
    e300:	23 e1       	ldi	r18, 0x13	; 19
    e302:	e0 ea       	ldi	r30, 0xA0	; 160
    e304:	f5 e4       	ldi	r31, 0x45	; 69
    e306:	dc 01       	movw	r26, r24
    e308:	01 90       	ld	r0, Z+
    e30a:	0d 92       	st	X+, r0
    e30c:	2a 95       	dec	r18
    e30e:	e1 f7       	brne	.-8      	; 0xe308 <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    e310:	50 c0       	rjmp	.+160    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    e312:	8a 81       	ldd	r24, Y+2	; 0x02
    e314:	9b 81       	ldd	r25, Y+3	; 0x03
    e316:	23 e1       	ldi	r18, 0x13	; 19
    e318:	e3 eb       	ldi	r30, 0xB3	; 179
    e31a:	f5 e4       	ldi	r31, 0x45	; 69
    e31c:	dc 01       	movw	r26, r24
    e31e:	01 90       	ld	r0, Z+
    e320:	0d 92       	st	X+, r0
    e322:	2a 95       	dec	r18
    e324:	e1 f7       	brne	.-8      	; 0xe31e <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    e326:	45 c0       	rjmp	.+138    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    e328:	8a 81       	ldd	r24, Y+2	; 0x02
    e32a:	9b 81       	ldd	r25, Y+3	; 0x03
    e32c:	23 e1       	ldi	r18, 0x13	; 19
    e32e:	e6 ec       	ldi	r30, 0xC6	; 198
    e330:	f5 e4       	ldi	r31, 0x45	; 69
    e332:	dc 01       	movw	r26, r24
    e334:	01 90       	ld	r0, Z+
    e336:	0d 92       	st	X+, r0
    e338:	2a 95       	dec	r18
    e33a:	e1 f7       	brne	.-8      	; 0xe334 <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    e33c:	3a c0       	rjmp	.+116    	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    e33e:	8a 81       	ldd	r24, Y+2	; 0x02
    e340:	9b 81       	ldd	r25, Y+3	; 0x03
    e342:	23 e1       	ldi	r18, 0x13	; 19
    e344:	e9 ed       	ldi	r30, 0xD9	; 217
    e346:	f5 e4       	ldi	r31, 0x45	; 69
    e348:	dc 01       	movw	r26, r24
    e34a:	01 90       	ld	r0, Z+
    e34c:	0d 92       	st	X+, r0
    e34e:	2a 95       	dec	r18
    e350:	e1 f7       	brne	.-8      	; 0xe34a <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    e352:	2f c0       	rjmp	.+94     	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    e354:	8a 81       	ldd	r24, Y+2	; 0x02
    e356:	9b 81       	ldd	r25, Y+3	; 0x03
    e358:	23 e1       	ldi	r18, 0x13	; 19
    e35a:	ec ee       	ldi	r30, 0xEC	; 236
    e35c:	f5 e4       	ldi	r31, 0x45	; 69
    e35e:	dc 01       	movw	r26, r24
    e360:	01 90       	ld	r0, Z+
    e362:	0d 92       	st	X+, r0
    e364:	2a 95       	dec	r18
    e366:	e1 f7       	brne	.-8      	; 0xe360 <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    e368:	24 c0       	rjmp	.+72     	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    e36a:	8a 81       	ldd	r24, Y+2	; 0x02
    e36c:	9b 81       	ldd	r25, Y+3	; 0x03
    e36e:	23 e1       	ldi	r18, 0x13	; 19
    e370:	ef ef       	ldi	r30, 0xFF	; 255
    e372:	f5 e4       	ldi	r31, 0x45	; 69
    e374:	dc 01       	movw	r26, r24
    e376:	01 90       	ld	r0, Z+
    e378:	0d 92       	st	X+, r0
    e37a:	2a 95       	dec	r18
    e37c:	e1 f7       	brne	.-8      	; 0xe376 <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    e37e:	19 c0       	rjmp	.+50     	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    e380:	8a 81       	ldd	r24, Y+2	; 0x02
    e382:	9b 81       	ldd	r25, Y+3	; 0x03
    e384:	23 e1       	ldi	r18, 0x13	; 19
    e386:	e2 e1       	ldi	r30, 0x12	; 18
    e388:	f6 e4       	ldi	r31, 0x46	; 70
    e38a:	dc 01       	movw	r26, r24
    e38c:	01 90       	ld	r0, Z+
    e38e:	0d 92       	st	X+, r0
    e390:	2a 95       	dec	r18
    e392:	e1 f7       	brne	.-8      	; 0xe38c <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    e394:	0e c0       	rjmp	.+28     	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    e396:	8a 81       	ldd	r24, Y+2	; 0x02
    e398:	9b 81       	ldd	r25, Y+3	; 0x03
    e39a:	23 e1       	ldi	r18, 0x13	; 19
    e39c:	e5 e2       	ldi	r30, 0x25	; 37
    e39e:	f6 e4       	ldi	r31, 0x46	; 70
    e3a0:	dc 01       	movw	r26, r24
    e3a2:	01 90       	ld	r0, Z+
    e3a4:	0d 92       	st	X+, r0
    e3a6:	2a 95       	dec	r18
    e3a8:	e1 f7       	brne	.-8      	; 0xe3a2 <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    e3aa:	03 c0       	rjmp	.+6      	; 0xe3b2 <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    e3ac:	81 e0       	ldi	r24, 0x01	; 1
    e3ae:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    e3b0:	00 00       	nop
	}
	
	return(failure);
    e3b2:	89 81       	ldd	r24, Y+1	; 0x01
    e3b4:	24 96       	adiw	r28, 0x04	; 4
    e3b6:	cd bf       	out	0x3d, r28	; 61
    e3b8:	de bf       	out	0x3e, r29	; 62
    e3ba:	df 91       	pop	r29
    e3bc:	cf 91       	pop	r28
    e3be:	08 95       	ret

0000e3c0 <__subsf3>:
    e3c0:	50 58       	subi	r21, 0x80	; 128

0000e3c2 <__addsf3>:
    e3c2:	bb 27       	eor	r27, r27
    e3c4:	aa 27       	eor	r26, r26
    e3c6:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <__addsf3x>
    e3ca:	0c 94 b2 73 	jmp	0xe764	; 0xe764 <__fp_round>
    e3ce:	0e 94 a4 73 	call	0xe748	; 0xe748 <__fp_pscA>
    e3d2:	38 f0       	brcs	.+14     	; 0xe3e2 <__addsf3+0x20>
    e3d4:	0e 94 ab 73 	call	0xe756	; 0xe756 <__fp_pscB>
    e3d8:	20 f0       	brcs	.+8      	; 0xe3e2 <__addsf3+0x20>
    e3da:	39 f4       	brne	.+14     	; 0xe3ea <__addsf3+0x28>
    e3dc:	9f 3f       	cpi	r25, 0xFF	; 255
    e3de:	19 f4       	brne	.+6      	; 0xe3e6 <__addsf3+0x24>
    e3e0:	26 f4       	brtc	.+8      	; 0xe3ea <__addsf3+0x28>
    e3e2:	0c 94 a1 73 	jmp	0xe742	; 0xe742 <__fp_nan>
    e3e6:	0e f4       	brtc	.+2      	; 0xe3ea <__addsf3+0x28>
    e3e8:	e0 95       	com	r30
    e3ea:	e7 fb       	bst	r30, 7
    e3ec:	0c 94 72 73 	jmp	0xe6e4	; 0xe6e4 <__fp_inf>

0000e3f0 <__addsf3x>:
    e3f0:	e9 2f       	mov	r30, r25
    e3f2:	0e 94 c3 73 	call	0xe786	; 0xe786 <__fp_split3>
    e3f6:	58 f3       	brcs	.-42     	; 0xe3ce <__addsf3+0xc>
    e3f8:	ba 17       	cp	r27, r26
    e3fa:	62 07       	cpc	r22, r18
    e3fc:	73 07       	cpc	r23, r19
    e3fe:	84 07       	cpc	r24, r20
    e400:	95 07       	cpc	r25, r21
    e402:	20 f0       	brcs	.+8      	; 0xe40c <__addsf3x+0x1c>
    e404:	79 f4       	brne	.+30     	; 0xe424 <__addsf3x+0x34>
    e406:	a6 f5       	brtc	.+104    	; 0xe470 <__addsf3x+0x80>
    e408:	0c 94 fd 73 	jmp	0xe7fa	; 0xe7fa <__fp_zero>
    e40c:	0e f4       	brtc	.+2      	; 0xe410 <__addsf3x+0x20>
    e40e:	e0 95       	com	r30
    e410:	0b 2e       	mov	r0, r27
    e412:	ba 2f       	mov	r27, r26
    e414:	a0 2d       	mov	r26, r0
    e416:	0b 01       	movw	r0, r22
    e418:	b9 01       	movw	r22, r18
    e41a:	90 01       	movw	r18, r0
    e41c:	0c 01       	movw	r0, r24
    e41e:	ca 01       	movw	r24, r20
    e420:	a0 01       	movw	r20, r0
    e422:	11 24       	eor	r1, r1
    e424:	ff 27       	eor	r31, r31
    e426:	59 1b       	sub	r21, r25
    e428:	99 f0       	breq	.+38     	; 0xe450 <__addsf3x+0x60>
    e42a:	59 3f       	cpi	r21, 0xF9	; 249
    e42c:	50 f4       	brcc	.+20     	; 0xe442 <__addsf3x+0x52>
    e42e:	50 3e       	cpi	r21, 0xE0	; 224
    e430:	68 f1       	brcs	.+90     	; 0xe48c <__addsf3x+0x9c>
    e432:	1a 16       	cp	r1, r26
    e434:	f0 40       	sbci	r31, 0x00	; 0
    e436:	a2 2f       	mov	r26, r18
    e438:	23 2f       	mov	r18, r19
    e43a:	34 2f       	mov	r19, r20
    e43c:	44 27       	eor	r20, r20
    e43e:	58 5f       	subi	r21, 0xF8	; 248
    e440:	f3 cf       	rjmp	.-26     	; 0xe428 <__addsf3x+0x38>
    e442:	46 95       	lsr	r20
    e444:	37 95       	ror	r19
    e446:	27 95       	ror	r18
    e448:	a7 95       	ror	r26
    e44a:	f0 40       	sbci	r31, 0x00	; 0
    e44c:	53 95       	inc	r21
    e44e:	c9 f7       	brne	.-14     	; 0xe442 <__addsf3x+0x52>
    e450:	7e f4       	brtc	.+30     	; 0xe470 <__addsf3x+0x80>
    e452:	1f 16       	cp	r1, r31
    e454:	ba 0b       	sbc	r27, r26
    e456:	62 0b       	sbc	r22, r18
    e458:	73 0b       	sbc	r23, r19
    e45a:	84 0b       	sbc	r24, r20
    e45c:	ba f0       	brmi	.+46     	; 0xe48c <__addsf3x+0x9c>
    e45e:	91 50       	subi	r25, 0x01	; 1
    e460:	a1 f0       	breq	.+40     	; 0xe48a <__addsf3x+0x9a>
    e462:	ff 0f       	add	r31, r31
    e464:	bb 1f       	adc	r27, r27
    e466:	66 1f       	adc	r22, r22
    e468:	77 1f       	adc	r23, r23
    e46a:	88 1f       	adc	r24, r24
    e46c:	c2 f7       	brpl	.-16     	; 0xe45e <__addsf3x+0x6e>
    e46e:	0e c0       	rjmp	.+28     	; 0xe48c <__addsf3x+0x9c>
    e470:	ba 0f       	add	r27, r26
    e472:	62 1f       	adc	r22, r18
    e474:	73 1f       	adc	r23, r19
    e476:	84 1f       	adc	r24, r20
    e478:	48 f4       	brcc	.+18     	; 0xe48c <__addsf3x+0x9c>
    e47a:	87 95       	ror	r24
    e47c:	77 95       	ror	r23
    e47e:	67 95       	ror	r22
    e480:	b7 95       	ror	r27
    e482:	f7 95       	ror	r31
    e484:	9e 3f       	cpi	r25, 0xFE	; 254
    e486:	08 f0       	brcs	.+2      	; 0xe48a <__addsf3x+0x9a>
    e488:	b0 cf       	rjmp	.-160    	; 0xe3ea <__addsf3+0x28>
    e48a:	93 95       	inc	r25
    e48c:	88 0f       	add	r24, r24
    e48e:	08 f0       	brcs	.+2      	; 0xe492 <__addsf3x+0xa2>
    e490:	99 27       	eor	r25, r25
    e492:	ee 0f       	add	r30, r30
    e494:	97 95       	ror	r25
    e496:	87 95       	ror	r24
    e498:	08 95       	ret

0000e49a <ceil>:
    e49a:	0e 94 e5 73 	call	0xe7ca	; 0xe7ca <__fp_trunc>
    e49e:	90 f0       	brcs	.+36     	; 0xe4c4 <ceil+0x2a>
    e4a0:	9f 37       	cpi	r25, 0x7F	; 127
    e4a2:	48 f4       	brcc	.+18     	; 0xe4b6 <ceil+0x1c>
    e4a4:	91 11       	cpse	r25, r1
    e4a6:	16 f4       	brtc	.+4      	; 0xe4ac <ceil+0x12>
    e4a8:	0c 94 fe 73 	jmp	0xe7fc	; 0xe7fc <__fp_szero>
    e4ac:	60 e0       	ldi	r22, 0x00	; 0
    e4ae:	70 e0       	ldi	r23, 0x00	; 0
    e4b0:	80 e8       	ldi	r24, 0x80	; 128
    e4b2:	9f e3       	ldi	r25, 0x3F	; 63
    e4b4:	08 95       	ret
    e4b6:	26 f0       	brts	.+8      	; 0xe4c0 <ceil+0x26>
    e4b8:	1b 16       	cp	r1, r27
    e4ba:	61 1d       	adc	r22, r1
    e4bc:	71 1d       	adc	r23, r1
    e4be:	81 1d       	adc	r24, r1
    e4c0:	0c 94 78 73 	jmp	0xe6f0	; 0xe6f0 <__fp_mintl>
    e4c4:	0c 94 93 73 	jmp	0xe726	; 0xe726 <__fp_mpack>

0000e4c8 <__cmpsf2>:
    e4c8:	0e 94 4e 73 	call	0xe69c	; 0xe69c <__fp_cmp>
    e4cc:	08 f4       	brcc	.+2      	; 0xe4d0 <__cmpsf2+0x8>
    e4ce:	81 e0       	ldi	r24, 0x01	; 1
    e4d0:	08 95       	ret

0000e4d2 <__divsf3>:
    e4d2:	0e 94 7d 72 	call	0xe4fa	; 0xe4fa <__divsf3x>
    e4d6:	0c 94 b2 73 	jmp	0xe764	; 0xe764 <__fp_round>
    e4da:	0e 94 ab 73 	call	0xe756	; 0xe756 <__fp_pscB>
    e4de:	58 f0       	brcs	.+22     	; 0xe4f6 <__divsf3+0x24>
    e4e0:	0e 94 a4 73 	call	0xe748	; 0xe748 <__fp_pscA>
    e4e4:	40 f0       	brcs	.+16     	; 0xe4f6 <__divsf3+0x24>
    e4e6:	29 f4       	brne	.+10     	; 0xe4f2 <__divsf3+0x20>
    e4e8:	5f 3f       	cpi	r21, 0xFF	; 255
    e4ea:	29 f0       	breq	.+10     	; 0xe4f6 <__divsf3+0x24>
    e4ec:	0c 94 72 73 	jmp	0xe6e4	; 0xe6e4 <__fp_inf>
    e4f0:	51 11       	cpse	r21, r1
    e4f2:	0c 94 fe 73 	jmp	0xe7fc	; 0xe7fc <__fp_szero>
    e4f6:	0c 94 a1 73 	jmp	0xe742	; 0xe742 <__fp_nan>

0000e4fa <__divsf3x>:
    e4fa:	0e 94 c3 73 	call	0xe786	; 0xe786 <__fp_split3>
    e4fe:	68 f3       	brcs	.-38     	; 0xe4da <__divsf3+0x8>

0000e500 <__divsf3_pse>:
    e500:	99 23       	and	r25, r25
    e502:	b1 f3       	breq	.-20     	; 0xe4f0 <__divsf3+0x1e>
    e504:	55 23       	and	r21, r21
    e506:	91 f3       	breq	.-28     	; 0xe4ec <__divsf3+0x1a>
    e508:	95 1b       	sub	r25, r21
    e50a:	55 0b       	sbc	r21, r21
    e50c:	bb 27       	eor	r27, r27
    e50e:	aa 27       	eor	r26, r26
    e510:	62 17       	cp	r22, r18
    e512:	73 07       	cpc	r23, r19
    e514:	84 07       	cpc	r24, r20
    e516:	38 f0       	brcs	.+14     	; 0xe526 <__divsf3_pse+0x26>
    e518:	9f 5f       	subi	r25, 0xFF	; 255
    e51a:	5f 4f       	sbci	r21, 0xFF	; 255
    e51c:	22 0f       	add	r18, r18
    e51e:	33 1f       	adc	r19, r19
    e520:	44 1f       	adc	r20, r20
    e522:	aa 1f       	adc	r26, r26
    e524:	a9 f3       	breq	.-22     	; 0xe510 <__divsf3_pse+0x10>
    e526:	35 d0       	rcall	.+106    	; 0xe592 <__divsf3_pse+0x92>
    e528:	0e 2e       	mov	r0, r30
    e52a:	3a f0       	brmi	.+14     	; 0xe53a <__divsf3_pse+0x3a>
    e52c:	e0 e8       	ldi	r30, 0x80	; 128
    e52e:	32 d0       	rcall	.+100    	; 0xe594 <__divsf3_pse+0x94>
    e530:	91 50       	subi	r25, 0x01	; 1
    e532:	50 40       	sbci	r21, 0x00	; 0
    e534:	e6 95       	lsr	r30
    e536:	00 1c       	adc	r0, r0
    e538:	ca f7       	brpl	.-14     	; 0xe52c <__divsf3_pse+0x2c>
    e53a:	2b d0       	rcall	.+86     	; 0xe592 <__divsf3_pse+0x92>
    e53c:	fe 2f       	mov	r31, r30
    e53e:	29 d0       	rcall	.+82     	; 0xe592 <__divsf3_pse+0x92>
    e540:	66 0f       	add	r22, r22
    e542:	77 1f       	adc	r23, r23
    e544:	88 1f       	adc	r24, r24
    e546:	bb 1f       	adc	r27, r27
    e548:	26 17       	cp	r18, r22
    e54a:	37 07       	cpc	r19, r23
    e54c:	48 07       	cpc	r20, r24
    e54e:	ab 07       	cpc	r26, r27
    e550:	b0 e8       	ldi	r27, 0x80	; 128
    e552:	09 f0       	breq	.+2      	; 0xe556 <__divsf3_pse+0x56>
    e554:	bb 0b       	sbc	r27, r27
    e556:	80 2d       	mov	r24, r0
    e558:	bf 01       	movw	r22, r30
    e55a:	ff 27       	eor	r31, r31
    e55c:	93 58       	subi	r25, 0x83	; 131
    e55e:	5f 4f       	sbci	r21, 0xFF	; 255
    e560:	3a f0       	brmi	.+14     	; 0xe570 <__divsf3_pse+0x70>
    e562:	9e 3f       	cpi	r25, 0xFE	; 254
    e564:	51 05       	cpc	r21, r1
    e566:	78 f0       	brcs	.+30     	; 0xe586 <__divsf3_pse+0x86>
    e568:	0c 94 72 73 	jmp	0xe6e4	; 0xe6e4 <__fp_inf>
    e56c:	0c 94 fe 73 	jmp	0xe7fc	; 0xe7fc <__fp_szero>
    e570:	5f 3f       	cpi	r21, 0xFF	; 255
    e572:	e4 f3       	brlt	.-8      	; 0xe56c <__divsf3_pse+0x6c>
    e574:	98 3e       	cpi	r25, 0xE8	; 232
    e576:	d4 f3       	brlt	.-12     	; 0xe56c <__divsf3_pse+0x6c>
    e578:	86 95       	lsr	r24
    e57a:	77 95       	ror	r23
    e57c:	67 95       	ror	r22
    e57e:	b7 95       	ror	r27
    e580:	f7 95       	ror	r31
    e582:	9f 5f       	subi	r25, 0xFF	; 255
    e584:	c9 f7       	brne	.-14     	; 0xe578 <__divsf3_pse+0x78>
    e586:	88 0f       	add	r24, r24
    e588:	91 1d       	adc	r25, r1
    e58a:	96 95       	lsr	r25
    e58c:	87 95       	ror	r24
    e58e:	97 f9       	bld	r25, 7
    e590:	08 95       	ret
    e592:	e1 e0       	ldi	r30, 0x01	; 1
    e594:	66 0f       	add	r22, r22
    e596:	77 1f       	adc	r23, r23
    e598:	88 1f       	adc	r24, r24
    e59a:	bb 1f       	adc	r27, r27
    e59c:	62 17       	cp	r22, r18
    e59e:	73 07       	cpc	r23, r19
    e5a0:	84 07       	cpc	r24, r20
    e5a2:	ba 07       	cpc	r27, r26
    e5a4:	20 f0       	brcs	.+8      	; 0xe5ae <__divsf3_pse+0xae>
    e5a6:	62 1b       	sub	r22, r18
    e5a8:	73 0b       	sbc	r23, r19
    e5aa:	84 0b       	sbc	r24, r20
    e5ac:	ba 0b       	sbc	r27, r26
    e5ae:	ee 1f       	adc	r30, r30
    e5b0:	88 f7       	brcc	.-30     	; 0xe594 <__divsf3_pse+0x94>
    e5b2:	e0 95       	com	r30
    e5b4:	08 95       	ret

0000e5b6 <__fixsfsi>:
    e5b6:	0e 94 e2 72 	call	0xe5c4	; 0xe5c4 <__fixunssfsi>
    e5ba:	68 94       	set
    e5bc:	b1 11       	cpse	r27, r1
    e5be:	0c 94 fe 73 	jmp	0xe7fc	; 0xe7fc <__fp_szero>
    e5c2:	08 95       	ret

0000e5c4 <__fixunssfsi>:
    e5c4:	0e 94 cb 73 	call	0xe796	; 0xe796 <__fp_splitA>
    e5c8:	88 f0       	brcs	.+34     	; 0xe5ec <__fixunssfsi+0x28>
    e5ca:	9f 57       	subi	r25, 0x7F	; 127
    e5cc:	98 f0       	brcs	.+38     	; 0xe5f4 <__fixunssfsi+0x30>
    e5ce:	b9 2f       	mov	r27, r25
    e5d0:	99 27       	eor	r25, r25
    e5d2:	b7 51       	subi	r27, 0x17	; 23
    e5d4:	b0 f0       	brcs	.+44     	; 0xe602 <__fixunssfsi+0x3e>
    e5d6:	e1 f0       	breq	.+56     	; 0xe610 <__fixunssfsi+0x4c>
    e5d8:	66 0f       	add	r22, r22
    e5da:	77 1f       	adc	r23, r23
    e5dc:	88 1f       	adc	r24, r24
    e5de:	99 1f       	adc	r25, r25
    e5e0:	1a f0       	brmi	.+6      	; 0xe5e8 <__fixunssfsi+0x24>
    e5e2:	ba 95       	dec	r27
    e5e4:	c9 f7       	brne	.-14     	; 0xe5d8 <__fixunssfsi+0x14>
    e5e6:	14 c0       	rjmp	.+40     	; 0xe610 <__fixunssfsi+0x4c>
    e5e8:	b1 30       	cpi	r27, 0x01	; 1
    e5ea:	91 f0       	breq	.+36     	; 0xe610 <__fixunssfsi+0x4c>
    e5ec:	0e 94 fd 73 	call	0xe7fa	; 0xe7fa <__fp_zero>
    e5f0:	b1 e0       	ldi	r27, 0x01	; 1
    e5f2:	08 95       	ret
    e5f4:	0c 94 fd 73 	jmp	0xe7fa	; 0xe7fa <__fp_zero>
    e5f8:	67 2f       	mov	r22, r23
    e5fa:	78 2f       	mov	r23, r24
    e5fc:	88 27       	eor	r24, r24
    e5fe:	b8 5f       	subi	r27, 0xF8	; 248
    e600:	39 f0       	breq	.+14     	; 0xe610 <__fixunssfsi+0x4c>
    e602:	b9 3f       	cpi	r27, 0xF9	; 249
    e604:	cc f3       	brlt	.-14     	; 0xe5f8 <__fixunssfsi+0x34>
    e606:	86 95       	lsr	r24
    e608:	77 95       	ror	r23
    e60a:	67 95       	ror	r22
    e60c:	b3 95       	inc	r27
    e60e:	d9 f7       	brne	.-10     	; 0xe606 <__fixunssfsi+0x42>
    e610:	3e f4       	brtc	.+14     	; 0xe620 <__fixunssfsi+0x5c>
    e612:	90 95       	com	r25
    e614:	80 95       	com	r24
    e616:	70 95       	com	r23
    e618:	61 95       	neg	r22
    e61a:	7f 4f       	sbci	r23, 0xFF	; 255
    e61c:	8f 4f       	sbci	r24, 0xFF	; 255
    e61e:	9f 4f       	sbci	r25, 0xFF	; 255
    e620:	08 95       	ret

0000e622 <__floatunsisf>:
    e622:	e8 94       	clt
    e624:	09 c0       	rjmp	.+18     	; 0xe638 <__floatsisf+0x12>

0000e626 <__floatsisf>:
    e626:	97 fb       	bst	r25, 7
    e628:	3e f4       	brtc	.+14     	; 0xe638 <__floatsisf+0x12>
    e62a:	90 95       	com	r25
    e62c:	80 95       	com	r24
    e62e:	70 95       	com	r23
    e630:	61 95       	neg	r22
    e632:	7f 4f       	sbci	r23, 0xFF	; 255
    e634:	8f 4f       	sbci	r24, 0xFF	; 255
    e636:	9f 4f       	sbci	r25, 0xFF	; 255
    e638:	99 23       	and	r25, r25
    e63a:	a9 f0       	breq	.+42     	; 0xe666 <__floatsisf+0x40>
    e63c:	f9 2f       	mov	r31, r25
    e63e:	96 e9       	ldi	r25, 0x96	; 150
    e640:	bb 27       	eor	r27, r27
    e642:	93 95       	inc	r25
    e644:	f6 95       	lsr	r31
    e646:	87 95       	ror	r24
    e648:	77 95       	ror	r23
    e64a:	67 95       	ror	r22
    e64c:	b7 95       	ror	r27
    e64e:	f1 11       	cpse	r31, r1
    e650:	f8 cf       	rjmp	.-16     	; 0xe642 <__floatsisf+0x1c>
    e652:	fa f4       	brpl	.+62     	; 0xe692 <__floatsisf+0x6c>
    e654:	bb 0f       	add	r27, r27
    e656:	11 f4       	brne	.+4      	; 0xe65c <__floatsisf+0x36>
    e658:	60 ff       	sbrs	r22, 0
    e65a:	1b c0       	rjmp	.+54     	; 0xe692 <__floatsisf+0x6c>
    e65c:	6f 5f       	subi	r22, 0xFF	; 255
    e65e:	7f 4f       	sbci	r23, 0xFF	; 255
    e660:	8f 4f       	sbci	r24, 0xFF	; 255
    e662:	9f 4f       	sbci	r25, 0xFF	; 255
    e664:	16 c0       	rjmp	.+44     	; 0xe692 <__floatsisf+0x6c>
    e666:	88 23       	and	r24, r24
    e668:	11 f0       	breq	.+4      	; 0xe66e <__floatsisf+0x48>
    e66a:	96 e9       	ldi	r25, 0x96	; 150
    e66c:	11 c0       	rjmp	.+34     	; 0xe690 <__floatsisf+0x6a>
    e66e:	77 23       	and	r23, r23
    e670:	21 f0       	breq	.+8      	; 0xe67a <__floatsisf+0x54>
    e672:	9e e8       	ldi	r25, 0x8E	; 142
    e674:	87 2f       	mov	r24, r23
    e676:	76 2f       	mov	r23, r22
    e678:	05 c0       	rjmp	.+10     	; 0xe684 <__floatsisf+0x5e>
    e67a:	66 23       	and	r22, r22
    e67c:	71 f0       	breq	.+28     	; 0xe69a <__floatsisf+0x74>
    e67e:	96 e8       	ldi	r25, 0x86	; 134
    e680:	86 2f       	mov	r24, r22
    e682:	70 e0       	ldi	r23, 0x00	; 0
    e684:	60 e0       	ldi	r22, 0x00	; 0
    e686:	2a f0       	brmi	.+10     	; 0xe692 <__floatsisf+0x6c>
    e688:	9a 95       	dec	r25
    e68a:	66 0f       	add	r22, r22
    e68c:	77 1f       	adc	r23, r23
    e68e:	88 1f       	adc	r24, r24
    e690:	da f7       	brpl	.-10     	; 0xe688 <__floatsisf+0x62>
    e692:	88 0f       	add	r24, r24
    e694:	96 95       	lsr	r25
    e696:	87 95       	ror	r24
    e698:	97 f9       	bld	r25, 7
    e69a:	08 95       	ret

0000e69c <__fp_cmp>:
    e69c:	99 0f       	add	r25, r25
    e69e:	00 08       	sbc	r0, r0
    e6a0:	55 0f       	add	r21, r21
    e6a2:	aa 0b       	sbc	r26, r26
    e6a4:	e0 e8       	ldi	r30, 0x80	; 128
    e6a6:	fe ef       	ldi	r31, 0xFE	; 254
    e6a8:	16 16       	cp	r1, r22
    e6aa:	17 06       	cpc	r1, r23
    e6ac:	e8 07       	cpc	r30, r24
    e6ae:	f9 07       	cpc	r31, r25
    e6b0:	c0 f0       	brcs	.+48     	; 0xe6e2 <__fp_cmp+0x46>
    e6b2:	12 16       	cp	r1, r18
    e6b4:	13 06       	cpc	r1, r19
    e6b6:	e4 07       	cpc	r30, r20
    e6b8:	f5 07       	cpc	r31, r21
    e6ba:	98 f0       	brcs	.+38     	; 0xe6e2 <__fp_cmp+0x46>
    e6bc:	62 1b       	sub	r22, r18
    e6be:	73 0b       	sbc	r23, r19
    e6c0:	84 0b       	sbc	r24, r20
    e6c2:	95 0b       	sbc	r25, r21
    e6c4:	39 f4       	brne	.+14     	; 0xe6d4 <__fp_cmp+0x38>
    e6c6:	0a 26       	eor	r0, r26
    e6c8:	61 f0       	breq	.+24     	; 0xe6e2 <__fp_cmp+0x46>
    e6ca:	23 2b       	or	r18, r19
    e6cc:	24 2b       	or	r18, r20
    e6ce:	25 2b       	or	r18, r21
    e6d0:	21 f4       	brne	.+8      	; 0xe6da <__fp_cmp+0x3e>
    e6d2:	08 95       	ret
    e6d4:	0a 26       	eor	r0, r26
    e6d6:	09 f4       	brne	.+2      	; 0xe6da <__fp_cmp+0x3e>
    e6d8:	a1 40       	sbci	r26, 0x01	; 1
    e6da:	a6 95       	lsr	r26
    e6dc:	8f ef       	ldi	r24, 0xFF	; 255
    e6de:	81 1d       	adc	r24, r1
    e6e0:	81 1d       	adc	r24, r1
    e6e2:	08 95       	ret

0000e6e4 <__fp_inf>:
    e6e4:	97 f9       	bld	r25, 7
    e6e6:	9f 67       	ori	r25, 0x7F	; 127
    e6e8:	80 e8       	ldi	r24, 0x80	; 128
    e6ea:	70 e0       	ldi	r23, 0x00	; 0
    e6ec:	60 e0       	ldi	r22, 0x00	; 0
    e6ee:	08 95       	ret

0000e6f0 <__fp_mintl>:
    e6f0:	88 23       	and	r24, r24
    e6f2:	71 f4       	brne	.+28     	; 0xe710 <__fp_mintl+0x20>
    e6f4:	77 23       	and	r23, r23
    e6f6:	21 f0       	breq	.+8      	; 0xe700 <__fp_mintl+0x10>
    e6f8:	98 50       	subi	r25, 0x08	; 8
    e6fa:	87 2b       	or	r24, r23
    e6fc:	76 2f       	mov	r23, r22
    e6fe:	07 c0       	rjmp	.+14     	; 0xe70e <__fp_mintl+0x1e>
    e700:	66 23       	and	r22, r22
    e702:	11 f4       	brne	.+4      	; 0xe708 <__fp_mintl+0x18>
    e704:	99 27       	eor	r25, r25
    e706:	0d c0       	rjmp	.+26     	; 0xe722 <__fp_mintl+0x32>
    e708:	90 51       	subi	r25, 0x10	; 16
    e70a:	86 2b       	or	r24, r22
    e70c:	70 e0       	ldi	r23, 0x00	; 0
    e70e:	60 e0       	ldi	r22, 0x00	; 0
    e710:	2a f0       	brmi	.+10     	; 0xe71c <__fp_mintl+0x2c>
    e712:	9a 95       	dec	r25
    e714:	66 0f       	add	r22, r22
    e716:	77 1f       	adc	r23, r23
    e718:	88 1f       	adc	r24, r24
    e71a:	da f7       	brpl	.-10     	; 0xe712 <__fp_mintl+0x22>
    e71c:	88 0f       	add	r24, r24
    e71e:	96 95       	lsr	r25
    e720:	87 95       	ror	r24
    e722:	97 f9       	bld	r25, 7
    e724:	08 95       	ret

0000e726 <__fp_mpack>:
    e726:	9f 3f       	cpi	r25, 0xFF	; 255
    e728:	31 f0       	breq	.+12     	; 0xe736 <__fp_mpack_finite+0xc>

0000e72a <__fp_mpack_finite>:
    e72a:	91 50       	subi	r25, 0x01	; 1
    e72c:	20 f4       	brcc	.+8      	; 0xe736 <__fp_mpack_finite+0xc>
    e72e:	87 95       	ror	r24
    e730:	77 95       	ror	r23
    e732:	67 95       	ror	r22
    e734:	b7 95       	ror	r27
    e736:	88 0f       	add	r24, r24
    e738:	91 1d       	adc	r25, r1
    e73a:	96 95       	lsr	r25
    e73c:	87 95       	ror	r24
    e73e:	97 f9       	bld	r25, 7
    e740:	08 95       	ret

0000e742 <__fp_nan>:
    e742:	9f ef       	ldi	r25, 0xFF	; 255
    e744:	80 ec       	ldi	r24, 0xC0	; 192
    e746:	08 95       	ret

0000e748 <__fp_pscA>:
    e748:	00 24       	eor	r0, r0
    e74a:	0a 94       	dec	r0
    e74c:	16 16       	cp	r1, r22
    e74e:	17 06       	cpc	r1, r23
    e750:	18 06       	cpc	r1, r24
    e752:	09 06       	cpc	r0, r25
    e754:	08 95       	ret

0000e756 <__fp_pscB>:
    e756:	00 24       	eor	r0, r0
    e758:	0a 94       	dec	r0
    e75a:	12 16       	cp	r1, r18
    e75c:	13 06       	cpc	r1, r19
    e75e:	14 06       	cpc	r1, r20
    e760:	05 06       	cpc	r0, r21
    e762:	08 95       	ret

0000e764 <__fp_round>:
    e764:	09 2e       	mov	r0, r25
    e766:	03 94       	inc	r0
    e768:	00 0c       	add	r0, r0
    e76a:	11 f4       	brne	.+4      	; 0xe770 <__fp_round+0xc>
    e76c:	88 23       	and	r24, r24
    e76e:	52 f0       	brmi	.+20     	; 0xe784 <__fp_round+0x20>
    e770:	bb 0f       	add	r27, r27
    e772:	40 f4       	brcc	.+16     	; 0xe784 <__fp_round+0x20>
    e774:	bf 2b       	or	r27, r31
    e776:	11 f4       	brne	.+4      	; 0xe77c <__fp_round+0x18>
    e778:	60 ff       	sbrs	r22, 0
    e77a:	04 c0       	rjmp	.+8      	; 0xe784 <__fp_round+0x20>
    e77c:	6f 5f       	subi	r22, 0xFF	; 255
    e77e:	7f 4f       	sbci	r23, 0xFF	; 255
    e780:	8f 4f       	sbci	r24, 0xFF	; 255
    e782:	9f 4f       	sbci	r25, 0xFF	; 255
    e784:	08 95       	ret

0000e786 <__fp_split3>:
    e786:	57 fd       	sbrc	r21, 7
    e788:	90 58       	subi	r25, 0x80	; 128
    e78a:	44 0f       	add	r20, r20
    e78c:	55 1f       	adc	r21, r21
    e78e:	59 f0       	breq	.+22     	; 0xe7a6 <__fp_splitA+0x10>
    e790:	5f 3f       	cpi	r21, 0xFF	; 255
    e792:	71 f0       	breq	.+28     	; 0xe7b0 <__fp_splitA+0x1a>
    e794:	47 95       	ror	r20

0000e796 <__fp_splitA>:
    e796:	88 0f       	add	r24, r24
    e798:	97 fb       	bst	r25, 7
    e79a:	99 1f       	adc	r25, r25
    e79c:	61 f0       	breq	.+24     	; 0xe7b6 <__fp_splitA+0x20>
    e79e:	9f 3f       	cpi	r25, 0xFF	; 255
    e7a0:	79 f0       	breq	.+30     	; 0xe7c0 <__fp_splitA+0x2a>
    e7a2:	87 95       	ror	r24
    e7a4:	08 95       	ret
    e7a6:	12 16       	cp	r1, r18
    e7a8:	13 06       	cpc	r1, r19
    e7aa:	14 06       	cpc	r1, r20
    e7ac:	55 1f       	adc	r21, r21
    e7ae:	f2 cf       	rjmp	.-28     	; 0xe794 <__fp_split3+0xe>
    e7b0:	46 95       	lsr	r20
    e7b2:	f1 df       	rcall	.-30     	; 0xe796 <__fp_splitA>
    e7b4:	08 c0       	rjmp	.+16     	; 0xe7c6 <__fp_splitA+0x30>
    e7b6:	16 16       	cp	r1, r22
    e7b8:	17 06       	cpc	r1, r23
    e7ba:	18 06       	cpc	r1, r24
    e7bc:	99 1f       	adc	r25, r25
    e7be:	f1 cf       	rjmp	.-30     	; 0xe7a2 <__fp_splitA+0xc>
    e7c0:	86 95       	lsr	r24
    e7c2:	71 05       	cpc	r23, r1
    e7c4:	61 05       	cpc	r22, r1
    e7c6:	08 94       	sec
    e7c8:	08 95       	ret

0000e7ca <__fp_trunc>:
    e7ca:	0e 94 cb 73 	call	0xe796	; 0xe796 <__fp_splitA>
    e7ce:	a0 f0       	brcs	.+40     	; 0xe7f8 <__fp_trunc+0x2e>
    e7d0:	be e7       	ldi	r27, 0x7E	; 126
    e7d2:	b9 17       	cp	r27, r25
    e7d4:	88 f4       	brcc	.+34     	; 0xe7f8 <__fp_trunc+0x2e>
    e7d6:	bb 27       	eor	r27, r27
    e7d8:	9f 38       	cpi	r25, 0x8F	; 143
    e7da:	60 f4       	brcc	.+24     	; 0xe7f4 <__fp_trunc+0x2a>
    e7dc:	16 16       	cp	r1, r22
    e7de:	b1 1d       	adc	r27, r1
    e7e0:	67 2f       	mov	r22, r23
    e7e2:	78 2f       	mov	r23, r24
    e7e4:	88 27       	eor	r24, r24
    e7e6:	98 5f       	subi	r25, 0xF8	; 248
    e7e8:	f7 cf       	rjmp	.-18     	; 0xe7d8 <__fp_trunc+0xe>
    e7ea:	86 95       	lsr	r24
    e7ec:	77 95       	ror	r23
    e7ee:	67 95       	ror	r22
    e7f0:	b1 1d       	adc	r27, r1
    e7f2:	93 95       	inc	r25
    e7f4:	96 39       	cpi	r25, 0x96	; 150
    e7f6:	c8 f3       	brcs	.-14     	; 0xe7ea <__fp_trunc+0x20>
    e7f8:	08 95       	ret

0000e7fa <__fp_zero>:
    e7fa:	e8 94       	clt

0000e7fc <__fp_szero>:
    e7fc:	bb 27       	eor	r27, r27
    e7fe:	66 27       	eor	r22, r22
    e800:	77 27       	eor	r23, r23
    e802:	cb 01       	movw	r24, r22
    e804:	97 f9       	bld	r25, 7
    e806:	08 95       	ret

0000e808 <__gesf2>:
    e808:	0e 94 4e 73 	call	0xe69c	; 0xe69c <__fp_cmp>
    e80c:	08 f4       	brcc	.+2      	; 0xe810 <__gesf2+0x8>
    e80e:	8f ef       	ldi	r24, 0xFF	; 255
    e810:	08 95       	ret

0000e812 <__mulsf3>:
    e812:	0e 94 1c 74 	call	0xe838	; 0xe838 <__mulsf3x>
    e816:	0c 94 b2 73 	jmp	0xe764	; 0xe764 <__fp_round>
    e81a:	0e 94 a4 73 	call	0xe748	; 0xe748 <__fp_pscA>
    e81e:	38 f0       	brcs	.+14     	; 0xe82e <__mulsf3+0x1c>
    e820:	0e 94 ab 73 	call	0xe756	; 0xe756 <__fp_pscB>
    e824:	20 f0       	brcs	.+8      	; 0xe82e <__mulsf3+0x1c>
    e826:	95 23       	and	r25, r21
    e828:	11 f0       	breq	.+4      	; 0xe82e <__mulsf3+0x1c>
    e82a:	0c 94 72 73 	jmp	0xe6e4	; 0xe6e4 <__fp_inf>
    e82e:	0c 94 a1 73 	jmp	0xe742	; 0xe742 <__fp_nan>
    e832:	11 24       	eor	r1, r1
    e834:	0c 94 fe 73 	jmp	0xe7fc	; 0xe7fc <__fp_szero>

0000e838 <__mulsf3x>:
    e838:	0e 94 c3 73 	call	0xe786	; 0xe786 <__fp_split3>
    e83c:	70 f3       	brcs	.-36     	; 0xe81a <__mulsf3+0x8>

0000e83e <__mulsf3_pse>:
    e83e:	95 9f       	mul	r25, r21
    e840:	c1 f3       	breq	.-16     	; 0xe832 <__mulsf3+0x20>
    e842:	95 0f       	add	r25, r21
    e844:	50 e0       	ldi	r21, 0x00	; 0
    e846:	55 1f       	adc	r21, r21
    e848:	62 9f       	mul	r22, r18
    e84a:	f0 01       	movw	r30, r0
    e84c:	72 9f       	mul	r23, r18
    e84e:	bb 27       	eor	r27, r27
    e850:	f0 0d       	add	r31, r0
    e852:	b1 1d       	adc	r27, r1
    e854:	63 9f       	mul	r22, r19
    e856:	aa 27       	eor	r26, r26
    e858:	f0 0d       	add	r31, r0
    e85a:	b1 1d       	adc	r27, r1
    e85c:	aa 1f       	adc	r26, r26
    e85e:	64 9f       	mul	r22, r20
    e860:	66 27       	eor	r22, r22
    e862:	b0 0d       	add	r27, r0
    e864:	a1 1d       	adc	r26, r1
    e866:	66 1f       	adc	r22, r22
    e868:	82 9f       	mul	r24, r18
    e86a:	22 27       	eor	r18, r18
    e86c:	b0 0d       	add	r27, r0
    e86e:	a1 1d       	adc	r26, r1
    e870:	62 1f       	adc	r22, r18
    e872:	73 9f       	mul	r23, r19
    e874:	b0 0d       	add	r27, r0
    e876:	a1 1d       	adc	r26, r1
    e878:	62 1f       	adc	r22, r18
    e87a:	83 9f       	mul	r24, r19
    e87c:	a0 0d       	add	r26, r0
    e87e:	61 1d       	adc	r22, r1
    e880:	22 1f       	adc	r18, r18
    e882:	74 9f       	mul	r23, r20
    e884:	33 27       	eor	r19, r19
    e886:	a0 0d       	add	r26, r0
    e888:	61 1d       	adc	r22, r1
    e88a:	23 1f       	adc	r18, r19
    e88c:	84 9f       	mul	r24, r20
    e88e:	60 0d       	add	r22, r0
    e890:	21 1d       	adc	r18, r1
    e892:	82 2f       	mov	r24, r18
    e894:	76 2f       	mov	r23, r22
    e896:	6a 2f       	mov	r22, r26
    e898:	11 24       	eor	r1, r1
    e89a:	9f 57       	subi	r25, 0x7F	; 127
    e89c:	50 40       	sbci	r21, 0x00	; 0
    e89e:	9a f0       	brmi	.+38     	; 0xe8c6 <__mulsf3_pse+0x88>
    e8a0:	f1 f0       	breq	.+60     	; 0xe8de <__mulsf3_pse+0xa0>
    e8a2:	88 23       	and	r24, r24
    e8a4:	4a f0       	brmi	.+18     	; 0xe8b8 <__mulsf3_pse+0x7a>
    e8a6:	ee 0f       	add	r30, r30
    e8a8:	ff 1f       	adc	r31, r31
    e8aa:	bb 1f       	adc	r27, r27
    e8ac:	66 1f       	adc	r22, r22
    e8ae:	77 1f       	adc	r23, r23
    e8b0:	88 1f       	adc	r24, r24
    e8b2:	91 50       	subi	r25, 0x01	; 1
    e8b4:	50 40       	sbci	r21, 0x00	; 0
    e8b6:	a9 f7       	brne	.-22     	; 0xe8a2 <__mulsf3_pse+0x64>
    e8b8:	9e 3f       	cpi	r25, 0xFE	; 254
    e8ba:	51 05       	cpc	r21, r1
    e8bc:	80 f0       	brcs	.+32     	; 0xe8de <__mulsf3_pse+0xa0>
    e8be:	0c 94 72 73 	jmp	0xe6e4	; 0xe6e4 <__fp_inf>
    e8c2:	0c 94 fe 73 	jmp	0xe7fc	; 0xe7fc <__fp_szero>
    e8c6:	5f 3f       	cpi	r21, 0xFF	; 255
    e8c8:	e4 f3       	brlt	.-8      	; 0xe8c2 <__mulsf3_pse+0x84>
    e8ca:	98 3e       	cpi	r25, 0xE8	; 232
    e8cc:	d4 f3       	brlt	.-12     	; 0xe8c2 <__mulsf3_pse+0x84>
    e8ce:	86 95       	lsr	r24
    e8d0:	77 95       	ror	r23
    e8d2:	67 95       	ror	r22
    e8d4:	b7 95       	ror	r27
    e8d6:	f7 95       	ror	r31
    e8d8:	e7 95       	ror	r30
    e8da:	9f 5f       	subi	r25, 0xFF	; 255
    e8dc:	c1 f7       	brne	.-16     	; 0xe8ce <__mulsf3_pse+0x90>
    e8de:	fe 2b       	or	r31, r30
    e8e0:	88 0f       	add	r24, r24
    e8e2:	91 1d       	adc	r25, r1
    e8e4:	96 95       	lsr	r25
    e8e6:	87 95       	ror	r24
    e8e8:	97 f9       	bld	r25, 7
    e8ea:	08 95       	ret

0000e8ec <__mulsi3>:
    e8ec:	db 01       	movw	r26, r22
    e8ee:	8f 93       	push	r24
    e8f0:	9f 93       	push	r25
    e8f2:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    e8f6:	bf 91       	pop	r27
    e8f8:	af 91       	pop	r26
    e8fa:	a2 9f       	mul	r26, r18
    e8fc:	80 0d       	add	r24, r0
    e8fe:	91 1d       	adc	r25, r1
    e900:	a3 9f       	mul	r26, r19
    e902:	90 0d       	add	r25, r0
    e904:	b2 9f       	mul	r27, r18
    e906:	90 0d       	add	r25, r0
    e908:	11 24       	eor	r1, r1
    e90a:	08 95       	ret

0000e90c <__udivmodhi4>:
    e90c:	aa 1b       	sub	r26, r26
    e90e:	bb 1b       	sub	r27, r27
    e910:	51 e1       	ldi	r21, 0x11	; 17
    e912:	07 c0       	rjmp	.+14     	; 0xe922 <__udivmodhi4_ep>

0000e914 <__udivmodhi4_loop>:
    e914:	aa 1f       	adc	r26, r26
    e916:	bb 1f       	adc	r27, r27
    e918:	a6 17       	cp	r26, r22
    e91a:	b7 07       	cpc	r27, r23
    e91c:	10 f0       	brcs	.+4      	; 0xe922 <__udivmodhi4_ep>
    e91e:	a6 1b       	sub	r26, r22
    e920:	b7 0b       	sbc	r27, r23

0000e922 <__udivmodhi4_ep>:
    e922:	88 1f       	adc	r24, r24
    e924:	99 1f       	adc	r25, r25
    e926:	5a 95       	dec	r21
    e928:	a9 f7       	brne	.-22     	; 0xe914 <__udivmodhi4_loop>
    e92a:	80 95       	com	r24
    e92c:	90 95       	com	r25
    e92e:	bc 01       	movw	r22, r24
    e930:	cd 01       	movw	r24, r26
    e932:	08 95       	ret

0000e934 <__divmodhi4>:
    e934:	97 fb       	bst	r25, 7
    e936:	07 2e       	mov	r0, r23
    e938:	16 f4       	brtc	.+4      	; 0xe93e <__divmodhi4+0xa>
    e93a:	00 94       	com	r0
    e93c:	07 d0       	rcall	.+14     	; 0xe94c <__divmodhi4_neg1>
    e93e:	77 fd       	sbrc	r23, 7
    e940:	09 d0       	rcall	.+18     	; 0xe954 <__divmodhi4_neg2>
    e942:	0e 94 86 74 	call	0xe90c	; 0xe90c <__udivmodhi4>
    e946:	07 fc       	sbrc	r0, 7
    e948:	05 d0       	rcall	.+10     	; 0xe954 <__divmodhi4_neg2>
    e94a:	3e f4       	brtc	.+14     	; 0xe95a <__divmodhi4_exit>

0000e94c <__divmodhi4_neg1>:
    e94c:	90 95       	com	r25
    e94e:	81 95       	neg	r24
    e950:	9f 4f       	sbci	r25, 0xFF	; 255
    e952:	08 95       	ret

0000e954 <__divmodhi4_neg2>:
    e954:	70 95       	com	r23
    e956:	61 95       	neg	r22
    e958:	7f 4f       	sbci	r23, 0xFF	; 255

0000e95a <__divmodhi4_exit>:
    e95a:	08 95       	ret

0000e95c <__udivmodsi4>:
    e95c:	a1 e2       	ldi	r26, 0x21	; 33
    e95e:	1a 2e       	mov	r1, r26
    e960:	aa 1b       	sub	r26, r26
    e962:	bb 1b       	sub	r27, r27
    e964:	fd 01       	movw	r30, r26
    e966:	0d c0       	rjmp	.+26     	; 0xe982 <__udivmodsi4_ep>

0000e968 <__udivmodsi4_loop>:
    e968:	aa 1f       	adc	r26, r26
    e96a:	bb 1f       	adc	r27, r27
    e96c:	ee 1f       	adc	r30, r30
    e96e:	ff 1f       	adc	r31, r31
    e970:	a2 17       	cp	r26, r18
    e972:	b3 07       	cpc	r27, r19
    e974:	e4 07       	cpc	r30, r20
    e976:	f5 07       	cpc	r31, r21
    e978:	20 f0       	brcs	.+8      	; 0xe982 <__udivmodsi4_ep>
    e97a:	a2 1b       	sub	r26, r18
    e97c:	b3 0b       	sbc	r27, r19
    e97e:	e4 0b       	sbc	r30, r20
    e980:	f5 0b       	sbc	r31, r21

0000e982 <__udivmodsi4_ep>:
    e982:	66 1f       	adc	r22, r22
    e984:	77 1f       	adc	r23, r23
    e986:	88 1f       	adc	r24, r24
    e988:	99 1f       	adc	r25, r25
    e98a:	1a 94       	dec	r1
    e98c:	69 f7       	brne	.-38     	; 0xe968 <__udivmodsi4_loop>
    e98e:	60 95       	com	r22
    e990:	70 95       	com	r23
    e992:	80 95       	com	r24
    e994:	90 95       	com	r25
    e996:	9b 01       	movw	r18, r22
    e998:	ac 01       	movw	r20, r24
    e99a:	bd 01       	movw	r22, r26
    e99c:	cf 01       	movw	r24, r30
    e99e:	08 95       	ret

0000e9a0 <__divmodsi4>:
    e9a0:	05 2e       	mov	r0, r21
    e9a2:	97 fb       	bst	r25, 7
    e9a4:	1e f4       	brtc	.+6      	; 0xe9ac <__divmodsi4+0xc>
    e9a6:	00 94       	com	r0
    e9a8:	0e 94 e7 74 	call	0xe9ce	; 0xe9ce <__negsi2>
    e9ac:	57 fd       	sbrc	r21, 7
    e9ae:	07 d0       	rcall	.+14     	; 0xe9be <__divmodsi4_neg2>
    e9b0:	0e 94 ae 74 	call	0xe95c	; 0xe95c <__udivmodsi4>
    e9b4:	07 fc       	sbrc	r0, 7
    e9b6:	03 d0       	rcall	.+6      	; 0xe9be <__divmodsi4_neg2>
    e9b8:	4e f4       	brtc	.+18     	; 0xe9cc <__divmodsi4_exit>
    e9ba:	0c 94 e7 74 	jmp	0xe9ce	; 0xe9ce <__negsi2>

0000e9be <__divmodsi4_neg2>:
    e9be:	50 95       	com	r21
    e9c0:	40 95       	com	r20
    e9c2:	30 95       	com	r19
    e9c4:	21 95       	neg	r18
    e9c6:	3f 4f       	sbci	r19, 0xFF	; 255
    e9c8:	4f 4f       	sbci	r20, 0xFF	; 255
    e9ca:	5f 4f       	sbci	r21, 0xFF	; 255

0000e9cc <__divmodsi4_exit>:
    e9cc:	08 95       	ret

0000e9ce <__negsi2>:
    e9ce:	90 95       	com	r25
    e9d0:	80 95       	com	r24
    e9d2:	70 95       	com	r23
    e9d4:	61 95       	neg	r22
    e9d6:	7f 4f       	sbci	r23, 0xFF	; 255
    e9d8:	8f 4f       	sbci	r24, 0xFF	; 255
    e9da:	9f 4f       	sbci	r25, 0xFF	; 255
    e9dc:	08 95       	ret

0000e9de <__tablejump2__>:
    e9de:	ee 0f       	add	r30, r30
    e9e0:	ff 1f       	adc	r31, r31
    e9e2:	00 24       	eor	r0, r0
    e9e4:	00 1c       	adc	r0, r0
    e9e6:	0b be       	out	0x3b, r0	; 59
    e9e8:	07 90       	elpm	r0, Z+
    e9ea:	f6 91       	elpm	r31, Z
    e9ec:	e0 2d       	mov	r30, r0
    e9ee:	09 94       	ijmp

0000e9f0 <__umulhisi3>:
    e9f0:	a2 9f       	mul	r26, r18
    e9f2:	b0 01       	movw	r22, r0
    e9f4:	b3 9f       	mul	r27, r19
    e9f6:	c0 01       	movw	r24, r0
    e9f8:	a3 9f       	mul	r26, r19
    e9fa:	70 0d       	add	r23, r0
    e9fc:	81 1d       	adc	r24, r1
    e9fe:	11 24       	eor	r1, r1
    ea00:	91 1d       	adc	r25, r1
    ea02:	b2 9f       	mul	r27, r18
    ea04:	70 0d       	add	r23, r0
    ea06:	81 1d       	adc	r24, r1
    ea08:	11 24       	eor	r1, r1
    ea0a:	91 1d       	adc	r25, r1
    ea0c:	08 95       	ret

0000ea0e <__muluhisi3>:
    ea0e:	0e 94 f8 74 	call	0xe9f0	; 0xe9f0 <__umulhisi3>
    ea12:	a5 9f       	mul	r26, r21
    ea14:	90 0d       	add	r25, r0
    ea16:	b4 9f       	mul	r27, r20
    ea18:	90 0d       	add	r25, r0
    ea1a:	a4 9f       	mul	r26, r20
    ea1c:	80 0d       	add	r24, r0
    ea1e:	91 1d       	adc	r25, r1
    ea20:	11 24       	eor	r1, r1
    ea22:	08 95       	ret

0000ea24 <malloc>:
    ea24:	0f 93       	push	r16
    ea26:	1f 93       	push	r17
    ea28:	cf 93       	push	r28
    ea2a:	df 93       	push	r29
    ea2c:	82 30       	cpi	r24, 0x02	; 2
    ea2e:	91 05       	cpc	r25, r1
    ea30:	10 f4       	brcc	.+4      	; 0xea36 <malloc+0x12>
    ea32:	82 e0       	ldi	r24, 0x02	; 2
    ea34:	90 e0       	ldi	r25, 0x00	; 0
    ea36:	e0 91 b3 4a 	lds	r30, 0x4AB3	; 0x804ab3 <__flp>
    ea3a:	f0 91 b4 4a 	lds	r31, 0x4AB4	; 0x804ab4 <__flp+0x1>
    ea3e:	20 e0       	ldi	r18, 0x00	; 0
    ea40:	30 e0       	ldi	r19, 0x00	; 0
    ea42:	a0 e0       	ldi	r26, 0x00	; 0
    ea44:	b0 e0       	ldi	r27, 0x00	; 0
    ea46:	30 97       	sbiw	r30, 0x00	; 0
    ea48:	19 f1       	breq	.+70     	; 0xea90 <malloc+0x6c>
    ea4a:	40 81       	ld	r20, Z
    ea4c:	51 81       	ldd	r21, Z+1	; 0x01
    ea4e:	02 81       	ldd	r16, Z+2	; 0x02
    ea50:	13 81       	ldd	r17, Z+3	; 0x03
    ea52:	48 17       	cp	r20, r24
    ea54:	59 07       	cpc	r21, r25
    ea56:	c8 f0       	brcs	.+50     	; 0xea8a <malloc+0x66>
    ea58:	84 17       	cp	r24, r20
    ea5a:	95 07       	cpc	r25, r21
    ea5c:	69 f4       	brne	.+26     	; 0xea78 <malloc+0x54>
    ea5e:	10 97       	sbiw	r26, 0x00	; 0
    ea60:	31 f0       	breq	.+12     	; 0xea6e <malloc+0x4a>
    ea62:	12 96       	adiw	r26, 0x02	; 2
    ea64:	0c 93       	st	X, r16
    ea66:	12 97       	sbiw	r26, 0x02	; 2
    ea68:	13 96       	adiw	r26, 0x03	; 3
    ea6a:	1c 93       	st	X, r17
    ea6c:	27 c0       	rjmp	.+78     	; 0xeabc <malloc+0x98>
    ea6e:	00 93 b3 4a 	sts	0x4AB3, r16	; 0x804ab3 <__flp>
    ea72:	10 93 b4 4a 	sts	0x4AB4, r17	; 0x804ab4 <__flp+0x1>
    ea76:	22 c0       	rjmp	.+68     	; 0xeabc <malloc+0x98>
    ea78:	21 15       	cp	r18, r1
    ea7a:	31 05       	cpc	r19, r1
    ea7c:	19 f0       	breq	.+6      	; 0xea84 <malloc+0x60>
    ea7e:	42 17       	cp	r20, r18
    ea80:	53 07       	cpc	r21, r19
    ea82:	18 f4       	brcc	.+6      	; 0xea8a <malloc+0x66>
    ea84:	9a 01       	movw	r18, r20
    ea86:	bd 01       	movw	r22, r26
    ea88:	ef 01       	movw	r28, r30
    ea8a:	df 01       	movw	r26, r30
    ea8c:	f8 01       	movw	r30, r16
    ea8e:	db cf       	rjmp	.-74     	; 0xea46 <malloc+0x22>
    ea90:	21 15       	cp	r18, r1
    ea92:	31 05       	cpc	r19, r1
    ea94:	f9 f0       	breq	.+62     	; 0xead4 <malloc+0xb0>
    ea96:	28 1b       	sub	r18, r24
    ea98:	39 0b       	sbc	r19, r25
    ea9a:	24 30       	cpi	r18, 0x04	; 4
    ea9c:	31 05       	cpc	r19, r1
    ea9e:	80 f4       	brcc	.+32     	; 0xeac0 <malloc+0x9c>
    eaa0:	8a 81       	ldd	r24, Y+2	; 0x02
    eaa2:	9b 81       	ldd	r25, Y+3	; 0x03
    eaa4:	61 15       	cp	r22, r1
    eaa6:	71 05       	cpc	r23, r1
    eaa8:	21 f0       	breq	.+8      	; 0xeab2 <malloc+0x8e>
    eaaa:	fb 01       	movw	r30, r22
    eaac:	82 83       	std	Z+2, r24	; 0x02
    eaae:	93 83       	std	Z+3, r25	; 0x03
    eab0:	04 c0       	rjmp	.+8      	; 0xeaba <malloc+0x96>
    eab2:	80 93 b3 4a 	sts	0x4AB3, r24	; 0x804ab3 <__flp>
    eab6:	90 93 b4 4a 	sts	0x4AB4, r25	; 0x804ab4 <__flp+0x1>
    eaba:	fe 01       	movw	r30, r28
    eabc:	32 96       	adiw	r30, 0x02	; 2
    eabe:	44 c0       	rjmp	.+136    	; 0xeb48 <malloc+0x124>
    eac0:	fe 01       	movw	r30, r28
    eac2:	e2 0f       	add	r30, r18
    eac4:	f3 1f       	adc	r31, r19
    eac6:	81 93       	st	Z+, r24
    eac8:	91 93       	st	Z+, r25
    eaca:	22 50       	subi	r18, 0x02	; 2
    eacc:	31 09       	sbc	r19, r1
    eace:	28 83       	st	Y, r18
    ead0:	39 83       	std	Y+1, r19	; 0x01
    ead2:	3a c0       	rjmp	.+116    	; 0xeb48 <malloc+0x124>
    ead4:	20 91 b1 4a 	lds	r18, 0x4AB1	; 0x804ab1 <__brkval>
    ead8:	30 91 b2 4a 	lds	r19, 0x4AB2	; 0x804ab2 <__brkval+0x1>
    eadc:	23 2b       	or	r18, r19
    eade:	41 f4       	brne	.+16     	; 0xeaf0 <malloc+0xcc>
    eae0:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    eae4:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    eae8:	20 93 b1 4a 	sts	0x4AB1, r18	; 0x804ab1 <__brkval>
    eaec:	30 93 b2 4a 	sts	0x4AB2, r19	; 0x804ab2 <__brkval+0x1>
    eaf0:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    eaf4:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    eaf8:	21 15       	cp	r18, r1
    eafa:	31 05       	cpc	r19, r1
    eafc:	41 f4       	brne	.+16     	; 0xeb0e <malloc+0xea>
    eafe:	2d b7       	in	r18, 0x3d	; 61
    eb00:	3e b7       	in	r19, 0x3e	; 62
    eb02:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    eb06:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    eb0a:	24 1b       	sub	r18, r20
    eb0c:	35 0b       	sbc	r19, r21
    eb0e:	e0 91 b1 4a 	lds	r30, 0x4AB1	; 0x804ab1 <__brkval>
    eb12:	f0 91 b2 4a 	lds	r31, 0x4AB2	; 0x804ab2 <__brkval+0x1>
    eb16:	e2 17       	cp	r30, r18
    eb18:	f3 07       	cpc	r31, r19
    eb1a:	a0 f4       	brcc	.+40     	; 0xeb44 <malloc+0x120>
    eb1c:	2e 1b       	sub	r18, r30
    eb1e:	3f 0b       	sbc	r19, r31
    eb20:	28 17       	cp	r18, r24
    eb22:	39 07       	cpc	r19, r25
    eb24:	78 f0       	brcs	.+30     	; 0xeb44 <malloc+0x120>
    eb26:	ac 01       	movw	r20, r24
    eb28:	4e 5f       	subi	r20, 0xFE	; 254
    eb2a:	5f 4f       	sbci	r21, 0xFF	; 255
    eb2c:	24 17       	cp	r18, r20
    eb2e:	35 07       	cpc	r19, r21
    eb30:	48 f0       	brcs	.+18     	; 0xeb44 <malloc+0x120>
    eb32:	4e 0f       	add	r20, r30
    eb34:	5f 1f       	adc	r21, r31
    eb36:	40 93 b1 4a 	sts	0x4AB1, r20	; 0x804ab1 <__brkval>
    eb3a:	50 93 b2 4a 	sts	0x4AB2, r21	; 0x804ab2 <__brkval+0x1>
    eb3e:	81 93       	st	Z+, r24
    eb40:	91 93       	st	Z+, r25
    eb42:	02 c0       	rjmp	.+4      	; 0xeb48 <malloc+0x124>
    eb44:	e0 e0       	ldi	r30, 0x00	; 0
    eb46:	f0 e0       	ldi	r31, 0x00	; 0
    eb48:	cf 01       	movw	r24, r30
    eb4a:	df 91       	pop	r29
    eb4c:	cf 91       	pop	r28
    eb4e:	1f 91       	pop	r17
    eb50:	0f 91       	pop	r16
    eb52:	08 95       	ret

0000eb54 <free>:
    eb54:	cf 93       	push	r28
    eb56:	df 93       	push	r29
    eb58:	00 97       	sbiw	r24, 0x00	; 0
    eb5a:	09 f4       	brne	.+2      	; 0xeb5e <free+0xa>
    eb5c:	81 c0       	rjmp	.+258    	; 0xec60 <free+0x10c>
    eb5e:	fc 01       	movw	r30, r24
    eb60:	32 97       	sbiw	r30, 0x02	; 2
    eb62:	12 82       	std	Z+2, r1	; 0x02
    eb64:	13 82       	std	Z+3, r1	; 0x03
    eb66:	a0 91 b3 4a 	lds	r26, 0x4AB3	; 0x804ab3 <__flp>
    eb6a:	b0 91 b4 4a 	lds	r27, 0x4AB4	; 0x804ab4 <__flp+0x1>
    eb6e:	10 97       	sbiw	r26, 0x00	; 0
    eb70:	81 f4       	brne	.+32     	; 0xeb92 <free+0x3e>
    eb72:	20 81       	ld	r18, Z
    eb74:	31 81       	ldd	r19, Z+1	; 0x01
    eb76:	82 0f       	add	r24, r18
    eb78:	93 1f       	adc	r25, r19
    eb7a:	20 91 b1 4a 	lds	r18, 0x4AB1	; 0x804ab1 <__brkval>
    eb7e:	30 91 b2 4a 	lds	r19, 0x4AB2	; 0x804ab2 <__brkval+0x1>
    eb82:	28 17       	cp	r18, r24
    eb84:	39 07       	cpc	r19, r25
    eb86:	51 f5       	brne	.+84     	; 0xebdc <free+0x88>
    eb88:	e0 93 b1 4a 	sts	0x4AB1, r30	; 0x804ab1 <__brkval>
    eb8c:	f0 93 b2 4a 	sts	0x4AB2, r31	; 0x804ab2 <__brkval+0x1>
    eb90:	67 c0       	rjmp	.+206    	; 0xec60 <free+0x10c>
    eb92:	ed 01       	movw	r28, r26
    eb94:	20 e0       	ldi	r18, 0x00	; 0
    eb96:	30 e0       	ldi	r19, 0x00	; 0
    eb98:	ce 17       	cp	r28, r30
    eb9a:	df 07       	cpc	r29, r31
    eb9c:	40 f4       	brcc	.+16     	; 0xebae <free+0x5a>
    eb9e:	4a 81       	ldd	r20, Y+2	; 0x02
    eba0:	5b 81       	ldd	r21, Y+3	; 0x03
    eba2:	9e 01       	movw	r18, r28
    eba4:	41 15       	cp	r20, r1
    eba6:	51 05       	cpc	r21, r1
    eba8:	f1 f0       	breq	.+60     	; 0xebe6 <free+0x92>
    ebaa:	ea 01       	movw	r28, r20
    ebac:	f5 cf       	rjmp	.-22     	; 0xeb98 <free+0x44>
    ebae:	c2 83       	std	Z+2, r28	; 0x02
    ebb0:	d3 83       	std	Z+3, r29	; 0x03
    ebb2:	40 81       	ld	r20, Z
    ebb4:	51 81       	ldd	r21, Z+1	; 0x01
    ebb6:	84 0f       	add	r24, r20
    ebb8:	95 1f       	adc	r25, r21
    ebba:	c8 17       	cp	r28, r24
    ebbc:	d9 07       	cpc	r29, r25
    ebbe:	59 f4       	brne	.+22     	; 0xebd6 <free+0x82>
    ebc0:	88 81       	ld	r24, Y
    ebc2:	99 81       	ldd	r25, Y+1	; 0x01
    ebc4:	84 0f       	add	r24, r20
    ebc6:	95 1f       	adc	r25, r21
    ebc8:	02 96       	adiw	r24, 0x02	; 2
    ebca:	80 83       	st	Z, r24
    ebcc:	91 83       	std	Z+1, r25	; 0x01
    ebce:	8a 81       	ldd	r24, Y+2	; 0x02
    ebd0:	9b 81       	ldd	r25, Y+3	; 0x03
    ebd2:	82 83       	std	Z+2, r24	; 0x02
    ebd4:	93 83       	std	Z+3, r25	; 0x03
    ebd6:	21 15       	cp	r18, r1
    ebd8:	31 05       	cpc	r19, r1
    ebda:	29 f4       	brne	.+10     	; 0xebe6 <free+0x92>
    ebdc:	e0 93 b3 4a 	sts	0x4AB3, r30	; 0x804ab3 <__flp>
    ebe0:	f0 93 b4 4a 	sts	0x4AB4, r31	; 0x804ab4 <__flp+0x1>
    ebe4:	3d c0       	rjmp	.+122    	; 0xec60 <free+0x10c>
    ebe6:	e9 01       	movw	r28, r18
    ebe8:	ea 83       	std	Y+2, r30	; 0x02
    ebea:	fb 83       	std	Y+3, r31	; 0x03
    ebec:	49 91       	ld	r20, Y+
    ebee:	59 91       	ld	r21, Y+
    ebf0:	c4 0f       	add	r28, r20
    ebf2:	d5 1f       	adc	r29, r21
    ebf4:	ec 17       	cp	r30, r28
    ebf6:	fd 07       	cpc	r31, r29
    ebf8:	61 f4       	brne	.+24     	; 0xec12 <free+0xbe>
    ebfa:	80 81       	ld	r24, Z
    ebfc:	91 81       	ldd	r25, Z+1	; 0x01
    ebfe:	84 0f       	add	r24, r20
    ec00:	95 1f       	adc	r25, r21
    ec02:	02 96       	adiw	r24, 0x02	; 2
    ec04:	e9 01       	movw	r28, r18
    ec06:	88 83       	st	Y, r24
    ec08:	99 83       	std	Y+1, r25	; 0x01
    ec0a:	82 81       	ldd	r24, Z+2	; 0x02
    ec0c:	93 81       	ldd	r25, Z+3	; 0x03
    ec0e:	8a 83       	std	Y+2, r24	; 0x02
    ec10:	9b 83       	std	Y+3, r25	; 0x03
    ec12:	e0 e0       	ldi	r30, 0x00	; 0
    ec14:	f0 e0       	ldi	r31, 0x00	; 0
    ec16:	12 96       	adiw	r26, 0x02	; 2
    ec18:	8d 91       	ld	r24, X+
    ec1a:	9c 91       	ld	r25, X
    ec1c:	13 97       	sbiw	r26, 0x03	; 3
    ec1e:	00 97       	sbiw	r24, 0x00	; 0
    ec20:	19 f0       	breq	.+6      	; 0xec28 <free+0xd4>
    ec22:	fd 01       	movw	r30, r26
    ec24:	dc 01       	movw	r26, r24
    ec26:	f7 cf       	rjmp	.-18     	; 0xec16 <free+0xc2>
    ec28:	8d 91       	ld	r24, X+
    ec2a:	9c 91       	ld	r25, X
    ec2c:	11 97       	sbiw	r26, 0x01	; 1
    ec2e:	9d 01       	movw	r18, r26
    ec30:	2e 5f       	subi	r18, 0xFE	; 254
    ec32:	3f 4f       	sbci	r19, 0xFF	; 255
    ec34:	82 0f       	add	r24, r18
    ec36:	93 1f       	adc	r25, r19
    ec38:	20 91 b1 4a 	lds	r18, 0x4AB1	; 0x804ab1 <__brkval>
    ec3c:	30 91 b2 4a 	lds	r19, 0x4AB2	; 0x804ab2 <__brkval+0x1>
    ec40:	28 17       	cp	r18, r24
    ec42:	39 07       	cpc	r19, r25
    ec44:	69 f4       	brne	.+26     	; 0xec60 <free+0x10c>
    ec46:	30 97       	sbiw	r30, 0x00	; 0
    ec48:	29 f4       	brne	.+10     	; 0xec54 <free+0x100>
    ec4a:	10 92 b3 4a 	sts	0x4AB3, r1	; 0x804ab3 <__flp>
    ec4e:	10 92 b4 4a 	sts	0x4AB4, r1	; 0x804ab4 <__flp+0x1>
    ec52:	02 c0       	rjmp	.+4      	; 0xec58 <free+0x104>
    ec54:	12 82       	std	Z+2, r1	; 0x02
    ec56:	13 82       	std	Z+3, r1	; 0x03
    ec58:	a0 93 b1 4a 	sts	0x4AB1, r26	; 0x804ab1 <__brkval>
    ec5c:	b0 93 b2 4a 	sts	0x4AB2, r27	; 0x804ab2 <__brkval+0x1>
    ec60:	df 91       	pop	r29
    ec62:	cf 91       	pop	r28
    ec64:	08 95       	ret

0000ec66 <atof>:
    ec66:	66 27       	eor	r22, r22
    ec68:	77 27       	eor	r23, r23
    ec6a:	0c 94 0a 79 	jmp	0xf214	; 0xf214 <strtod>

0000ec6e <atoi>:
    ec6e:	fc 01       	movw	r30, r24
    ec70:	88 27       	eor	r24, r24
    ec72:	99 27       	eor	r25, r25
    ec74:	e8 94       	clt
    ec76:	21 91       	ld	r18, Z+
    ec78:	20 32       	cpi	r18, 0x20	; 32
    ec7a:	e9 f3       	breq	.-6      	; 0xec76 <atoi+0x8>
    ec7c:	29 30       	cpi	r18, 0x09	; 9
    ec7e:	10 f0       	brcs	.+4      	; 0xec84 <atoi+0x16>
    ec80:	2e 30       	cpi	r18, 0x0E	; 14
    ec82:	c8 f3       	brcs	.-14     	; 0xec76 <atoi+0x8>
    ec84:	2b 32       	cpi	r18, 0x2B	; 43
    ec86:	41 f0       	breq	.+16     	; 0xec98 <atoi+0x2a>
    ec88:	2d 32       	cpi	r18, 0x2D	; 45
    ec8a:	39 f4       	brne	.+14     	; 0xec9a <atoi+0x2c>
    ec8c:	68 94       	set
    ec8e:	04 c0       	rjmp	.+8      	; 0xec98 <atoi+0x2a>
    ec90:	0e 94 d5 76 	call	0xedaa	; 0xedaa <__mulhi_const_10>
    ec94:	82 0f       	add	r24, r18
    ec96:	91 1d       	adc	r25, r1
    ec98:	21 91       	ld	r18, Z+
    ec9a:	20 53       	subi	r18, 0x30	; 48
    ec9c:	2a 30       	cpi	r18, 0x0A	; 10
    ec9e:	c0 f3       	brcs	.-16     	; 0xec90 <atoi+0x22>
    eca0:	1e f4       	brtc	.+6      	; 0xeca8 <atoi+0x3a>
    eca2:	90 95       	com	r25
    eca4:	81 95       	neg	r24
    eca6:	9f 4f       	sbci	r25, 0xFF	; 255
    eca8:	08 95       	ret

0000ecaa <atol>:
    ecaa:	1f 93       	push	r17
    ecac:	fc 01       	movw	r30, r24
    ecae:	99 27       	eor	r25, r25
    ecb0:	88 27       	eor	r24, r24
    ecb2:	bc 01       	movw	r22, r24
    ecb4:	e8 94       	clt
    ecb6:	11 91       	ld	r17, Z+
    ecb8:	10 32       	cpi	r17, 0x20	; 32
    ecba:	e9 f3       	breq	.-6      	; 0xecb6 <atol+0xc>
    ecbc:	19 30       	cpi	r17, 0x09	; 9
    ecbe:	10 f0       	brcs	.+4      	; 0xecc4 <atol+0x1a>
    ecc0:	1e 30       	cpi	r17, 0x0E	; 14
    ecc2:	c8 f3       	brcs	.-14     	; 0xecb6 <atol+0xc>
    ecc4:	1b 32       	cpi	r17, 0x2B	; 43
    ecc6:	51 f0       	breq	.+20     	; 0xecdc <atol+0x32>
    ecc8:	1d 32       	cpi	r17, 0x2D	; 45
    ecca:	49 f4       	brne	.+18     	; 0xecde <atol+0x34>
    eccc:	68 94       	set
    ecce:	06 c0       	rjmp	.+12     	; 0xecdc <atol+0x32>
    ecd0:	0e 94 c0 76 	call	0xed80	; 0xed80 <__mulsi_const_10>
    ecd4:	61 0f       	add	r22, r17
    ecd6:	71 1d       	adc	r23, r1
    ecd8:	81 1d       	adc	r24, r1
    ecda:	91 1d       	adc	r25, r1
    ecdc:	11 91       	ld	r17, Z+
    ecde:	10 53       	subi	r17, 0x30	; 48
    ece0:	1a 30       	cpi	r17, 0x0A	; 10
    ece2:	b0 f3       	brcs	.-20     	; 0xecd0 <atol+0x26>
    ece4:	3e f4       	brtc	.+14     	; 0xecf4 <atol+0x4a>
    ece6:	90 95       	com	r25
    ece8:	80 95       	com	r24
    ecea:	70 95       	com	r23
    ecec:	61 95       	neg	r22
    ecee:	7f 4f       	sbci	r23, 0xFF	; 255
    ecf0:	8f 4f       	sbci	r24, 0xFF	; 255
    ecf2:	9f 4f       	sbci	r25, 0xFF	; 255
    ecf4:	1f 91       	pop	r17
    ecf6:	08 95       	ret

0000ecf8 <toupper>:
    ecf8:	91 11       	cpse	r25, r1
    ecfa:	08 95       	ret
    ecfc:	81 56       	subi	r24, 0x61	; 97
    ecfe:	8a 51       	subi	r24, 0x1A	; 26
    ed00:	08 f4       	brcc	.+2      	; 0xed04 <toupper+0xc>
    ed02:	80 52       	subi	r24, 0x20	; 32
    ed04:	85 58       	subi	r24, 0x85	; 133
    ed06:	08 95       	ret

0000ed08 <memset>:
    ed08:	dc 01       	movw	r26, r24
    ed0a:	01 c0       	rjmp	.+2      	; 0xed0e <memset+0x6>
    ed0c:	6d 93       	st	X+, r22
    ed0e:	41 50       	subi	r20, 0x01	; 1
    ed10:	50 40       	sbci	r21, 0x00	; 0
    ed12:	e0 f7       	brcc	.-8      	; 0xed0c <memset+0x4>
    ed14:	08 95       	ret

0000ed16 <strcat>:
    ed16:	fb 01       	movw	r30, r22
    ed18:	dc 01       	movw	r26, r24
    ed1a:	0d 90       	ld	r0, X+
    ed1c:	00 20       	and	r0, r0
    ed1e:	e9 f7       	brne	.-6      	; 0xed1a <strcat+0x4>
    ed20:	11 97       	sbiw	r26, 0x01	; 1
    ed22:	01 90       	ld	r0, Z+
    ed24:	0d 92       	st	X+, r0
    ed26:	00 20       	and	r0, r0
    ed28:	e1 f7       	brne	.-8      	; 0xed22 <strcat+0xc>
    ed2a:	08 95       	ret

0000ed2c <strchr>:
    ed2c:	fc 01       	movw	r30, r24
    ed2e:	81 91       	ld	r24, Z+
    ed30:	86 17       	cp	r24, r22
    ed32:	21 f0       	breq	.+8      	; 0xed3c <strchr+0x10>
    ed34:	88 23       	and	r24, r24
    ed36:	d9 f7       	brne	.-10     	; 0xed2e <strchr+0x2>
    ed38:	99 27       	eor	r25, r25
    ed3a:	08 95       	ret
    ed3c:	31 97       	sbiw	r30, 0x01	; 1
    ed3e:	cf 01       	movw	r24, r30
    ed40:	08 95       	ret

0000ed42 <strcpy>:
    ed42:	fb 01       	movw	r30, r22
    ed44:	dc 01       	movw	r26, r24
    ed46:	01 90       	ld	r0, Z+
    ed48:	0d 92       	st	X+, r0
    ed4a:	00 20       	and	r0, r0
    ed4c:	e1 f7       	brne	.-8      	; 0xed46 <strcpy+0x4>
    ed4e:	08 95       	ret

0000ed50 <strlen>:
    ed50:	fc 01       	movw	r30, r24
    ed52:	01 90       	ld	r0, Z+
    ed54:	00 20       	and	r0, r0
    ed56:	e9 f7       	brne	.-6      	; 0xed52 <strlen+0x2>
    ed58:	80 95       	com	r24
    ed5a:	90 95       	com	r25
    ed5c:	8e 0f       	add	r24, r30
    ed5e:	9f 1f       	adc	r25, r31
    ed60:	08 95       	ret

0000ed62 <strncpy>:
    ed62:	fb 01       	movw	r30, r22
    ed64:	dc 01       	movw	r26, r24
    ed66:	41 50       	subi	r20, 0x01	; 1
    ed68:	50 40       	sbci	r21, 0x00	; 0
    ed6a:	48 f0       	brcs	.+18     	; 0xed7e <strncpy+0x1c>
    ed6c:	01 90       	ld	r0, Z+
    ed6e:	0d 92       	st	X+, r0
    ed70:	00 20       	and	r0, r0
    ed72:	c9 f7       	brne	.-14     	; 0xed66 <strncpy+0x4>
    ed74:	01 c0       	rjmp	.+2      	; 0xed78 <strncpy+0x16>
    ed76:	1d 92       	st	X+, r1
    ed78:	41 50       	subi	r20, 0x01	; 1
    ed7a:	50 40       	sbci	r21, 0x00	; 0
    ed7c:	e0 f7       	brcc	.-8      	; 0xed76 <strncpy+0x14>
    ed7e:	08 95       	ret

0000ed80 <__mulsi_const_10>:
    ed80:	59 2f       	mov	r21, r25
    ed82:	48 2f       	mov	r20, r24
    ed84:	37 2f       	mov	r19, r23
    ed86:	26 2f       	mov	r18, r22
    ed88:	66 0f       	add	r22, r22
    ed8a:	77 1f       	adc	r23, r23
    ed8c:	88 1f       	adc	r24, r24
    ed8e:	99 1f       	adc	r25, r25
    ed90:	66 0f       	add	r22, r22
    ed92:	77 1f       	adc	r23, r23
    ed94:	88 1f       	adc	r24, r24
    ed96:	99 1f       	adc	r25, r25
    ed98:	62 0f       	add	r22, r18
    ed9a:	73 1f       	adc	r23, r19
    ed9c:	84 1f       	adc	r24, r20
    ed9e:	95 1f       	adc	r25, r21
    eda0:	66 0f       	add	r22, r22
    eda2:	77 1f       	adc	r23, r23
    eda4:	88 1f       	adc	r24, r24
    eda6:	99 1f       	adc	r25, r25
    eda8:	08 95       	ret

0000edaa <__mulhi_const_10>:
    edaa:	7a e0       	ldi	r23, 0x0A	; 10
    edac:	97 9f       	mul	r25, r23
    edae:	90 2d       	mov	r25, r0
    edb0:	87 9f       	mul	r24, r23
    edb2:	80 2d       	mov	r24, r0
    edb4:	91 0d       	add	r25, r1
    edb6:	11 24       	eor	r1, r1
    edb8:	08 95       	ret

0000edba <sprintf>:
    edba:	0f 93       	push	r16
    edbc:	1f 93       	push	r17
    edbe:	cf 93       	push	r28
    edc0:	df 93       	push	r29
    edc2:	cd b7       	in	r28, 0x3d	; 61
    edc4:	de b7       	in	r29, 0x3e	; 62
    edc6:	2e 97       	sbiw	r28, 0x0e	; 14
    edc8:	cd bf       	out	0x3d, r28	; 61
    edca:	de bf       	out	0x3e, r29	; 62
    edcc:	0d 89       	ldd	r16, Y+21	; 0x15
    edce:	1e 89       	ldd	r17, Y+22	; 0x16
    edd0:	86 e0       	ldi	r24, 0x06	; 6
    edd2:	8c 83       	std	Y+4, r24	; 0x04
    edd4:	09 83       	std	Y+1, r16	; 0x01
    edd6:	1a 83       	std	Y+2, r17	; 0x02
    edd8:	8f ef       	ldi	r24, 0xFF	; 255
    edda:	9f e7       	ldi	r25, 0x7F	; 127
    eddc:	8d 83       	std	Y+5, r24	; 0x05
    edde:	9e 83       	std	Y+6, r25	; 0x06
    ede0:	ae 01       	movw	r20, r28
    ede2:	47 5e       	subi	r20, 0xE7	; 231
    ede4:	5f 4f       	sbci	r21, 0xFF	; 255
    ede6:	6f 89       	ldd	r22, Y+23	; 0x17
    ede8:	78 8d       	ldd	r23, Y+24	; 0x18
    edea:	ce 01       	movw	r24, r28
    edec:	01 96       	adiw	r24, 0x01	; 1
    edee:	0e 94 06 77 	call	0xee0c	; 0xee0c <vfprintf>
    edf2:	ef 81       	ldd	r30, Y+7	; 0x07
    edf4:	f8 85       	ldd	r31, Y+8	; 0x08
    edf6:	e0 0f       	add	r30, r16
    edf8:	f1 1f       	adc	r31, r17
    edfa:	10 82       	st	Z, r1
    edfc:	2e 96       	adiw	r28, 0x0e	; 14
    edfe:	cd bf       	out	0x3d, r28	; 61
    ee00:	de bf       	out	0x3e, r29	; 62
    ee02:	df 91       	pop	r29
    ee04:	cf 91       	pop	r28
    ee06:	1f 91       	pop	r17
    ee08:	0f 91       	pop	r16
    ee0a:	08 95       	ret

0000ee0c <vfprintf>:
    ee0c:	2f 92       	push	r2
    ee0e:	3f 92       	push	r3
    ee10:	4f 92       	push	r4
    ee12:	5f 92       	push	r5
    ee14:	6f 92       	push	r6
    ee16:	7f 92       	push	r7
    ee18:	8f 92       	push	r8
    ee1a:	9f 92       	push	r9
    ee1c:	af 92       	push	r10
    ee1e:	bf 92       	push	r11
    ee20:	cf 92       	push	r12
    ee22:	df 92       	push	r13
    ee24:	ef 92       	push	r14
    ee26:	ff 92       	push	r15
    ee28:	0f 93       	push	r16
    ee2a:	1f 93       	push	r17
    ee2c:	cf 93       	push	r28
    ee2e:	df 93       	push	r29
    ee30:	cd b7       	in	r28, 0x3d	; 61
    ee32:	de b7       	in	r29, 0x3e	; 62
    ee34:	2b 97       	sbiw	r28, 0x0b	; 11
    ee36:	cd bf       	out	0x3d, r28	; 61
    ee38:	de bf       	out	0x3e, r29	; 62
    ee3a:	6c 01       	movw	r12, r24
    ee3c:	7b 01       	movw	r14, r22
    ee3e:	8a 01       	movw	r16, r20
    ee40:	fc 01       	movw	r30, r24
    ee42:	16 82       	std	Z+6, r1	; 0x06
    ee44:	17 82       	std	Z+7, r1	; 0x07
    ee46:	83 81       	ldd	r24, Z+3	; 0x03
    ee48:	81 ff       	sbrs	r24, 1
    ee4a:	cc c1       	rjmp	.+920    	; 0xf1e4 <vfprintf+0x3d8>
    ee4c:	ce 01       	movw	r24, r28
    ee4e:	01 96       	adiw	r24, 0x01	; 1
    ee50:	3c 01       	movw	r6, r24
    ee52:	f6 01       	movw	r30, r12
    ee54:	93 81       	ldd	r25, Z+3	; 0x03
    ee56:	f7 01       	movw	r30, r14
    ee58:	93 fd       	sbrc	r25, 3
    ee5a:	85 91       	lpm	r24, Z+
    ee5c:	93 ff       	sbrs	r25, 3
    ee5e:	81 91       	ld	r24, Z+
    ee60:	7f 01       	movw	r14, r30
    ee62:	88 23       	and	r24, r24
    ee64:	09 f4       	brne	.+2      	; 0xee68 <vfprintf+0x5c>
    ee66:	ba c1       	rjmp	.+884    	; 0xf1dc <vfprintf+0x3d0>
    ee68:	85 32       	cpi	r24, 0x25	; 37
    ee6a:	39 f4       	brne	.+14     	; 0xee7a <vfprintf+0x6e>
    ee6c:	93 fd       	sbrc	r25, 3
    ee6e:	85 91       	lpm	r24, Z+
    ee70:	93 ff       	sbrs	r25, 3
    ee72:	81 91       	ld	r24, Z+
    ee74:	7f 01       	movw	r14, r30
    ee76:	85 32       	cpi	r24, 0x25	; 37
    ee78:	29 f4       	brne	.+10     	; 0xee84 <vfprintf+0x78>
    ee7a:	b6 01       	movw	r22, r12
    ee7c:	90 e0       	ldi	r25, 0x00	; 0
    ee7e:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    ee82:	e7 cf       	rjmp	.-50     	; 0xee52 <vfprintf+0x46>
    ee84:	91 2c       	mov	r9, r1
    ee86:	21 2c       	mov	r2, r1
    ee88:	31 2c       	mov	r3, r1
    ee8a:	ff e1       	ldi	r31, 0x1F	; 31
    ee8c:	f3 15       	cp	r31, r3
    ee8e:	d8 f0       	brcs	.+54     	; 0xeec6 <vfprintf+0xba>
    ee90:	8b 32       	cpi	r24, 0x2B	; 43
    ee92:	79 f0       	breq	.+30     	; 0xeeb2 <vfprintf+0xa6>
    ee94:	38 f4       	brcc	.+14     	; 0xeea4 <vfprintf+0x98>
    ee96:	80 32       	cpi	r24, 0x20	; 32
    ee98:	79 f0       	breq	.+30     	; 0xeeb8 <vfprintf+0xac>
    ee9a:	83 32       	cpi	r24, 0x23	; 35
    ee9c:	a1 f4       	brne	.+40     	; 0xeec6 <vfprintf+0xba>
    ee9e:	23 2d       	mov	r18, r3
    eea0:	20 61       	ori	r18, 0x10	; 16
    eea2:	1d c0       	rjmp	.+58     	; 0xeede <vfprintf+0xd2>
    eea4:	8d 32       	cpi	r24, 0x2D	; 45
    eea6:	61 f0       	breq	.+24     	; 0xeec0 <vfprintf+0xb4>
    eea8:	80 33       	cpi	r24, 0x30	; 48
    eeaa:	69 f4       	brne	.+26     	; 0xeec6 <vfprintf+0xba>
    eeac:	23 2d       	mov	r18, r3
    eeae:	21 60       	ori	r18, 0x01	; 1
    eeb0:	16 c0       	rjmp	.+44     	; 0xeede <vfprintf+0xd2>
    eeb2:	83 2d       	mov	r24, r3
    eeb4:	82 60       	ori	r24, 0x02	; 2
    eeb6:	38 2e       	mov	r3, r24
    eeb8:	e3 2d       	mov	r30, r3
    eeba:	e4 60       	ori	r30, 0x04	; 4
    eebc:	3e 2e       	mov	r3, r30
    eebe:	2a c0       	rjmp	.+84     	; 0xef14 <vfprintf+0x108>
    eec0:	f3 2d       	mov	r31, r3
    eec2:	f8 60       	ori	r31, 0x08	; 8
    eec4:	1d c0       	rjmp	.+58     	; 0xef00 <vfprintf+0xf4>
    eec6:	37 fc       	sbrc	r3, 7
    eec8:	2d c0       	rjmp	.+90     	; 0xef24 <vfprintf+0x118>
    eeca:	20 ed       	ldi	r18, 0xD0	; 208
    eecc:	28 0f       	add	r18, r24
    eece:	2a 30       	cpi	r18, 0x0A	; 10
    eed0:	40 f0       	brcs	.+16     	; 0xeee2 <vfprintf+0xd6>
    eed2:	8e 32       	cpi	r24, 0x2E	; 46
    eed4:	b9 f4       	brne	.+46     	; 0xef04 <vfprintf+0xf8>
    eed6:	36 fc       	sbrc	r3, 6
    eed8:	81 c1       	rjmp	.+770    	; 0xf1dc <vfprintf+0x3d0>
    eeda:	23 2d       	mov	r18, r3
    eedc:	20 64       	ori	r18, 0x40	; 64
    eede:	32 2e       	mov	r3, r18
    eee0:	19 c0       	rjmp	.+50     	; 0xef14 <vfprintf+0x108>
    eee2:	36 fe       	sbrs	r3, 6
    eee4:	06 c0       	rjmp	.+12     	; 0xeef2 <vfprintf+0xe6>
    eee6:	8a e0       	ldi	r24, 0x0A	; 10
    eee8:	98 9e       	mul	r9, r24
    eeea:	20 0d       	add	r18, r0
    eeec:	11 24       	eor	r1, r1
    eeee:	92 2e       	mov	r9, r18
    eef0:	11 c0       	rjmp	.+34     	; 0xef14 <vfprintf+0x108>
    eef2:	ea e0       	ldi	r30, 0x0A	; 10
    eef4:	2e 9e       	mul	r2, r30
    eef6:	20 0d       	add	r18, r0
    eef8:	11 24       	eor	r1, r1
    eefa:	22 2e       	mov	r2, r18
    eefc:	f3 2d       	mov	r31, r3
    eefe:	f0 62       	ori	r31, 0x20	; 32
    ef00:	3f 2e       	mov	r3, r31
    ef02:	08 c0       	rjmp	.+16     	; 0xef14 <vfprintf+0x108>
    ef04:	8c 36       	cpi	r24, 0x6C	; 108
    ef06:	21 f4       	brne	.+8      	; 0xef10 <vfprintf+0x104>
    ef08:	83 2d       	mov	r24, r3
    ef0a:	80 68       	ori	r24, 0x80	; 128
    ef0c:	38 2e       	mov	r3, r24
    ef0e:	02 c0       	rjmp	.+4      	; 0xef14 <vfprintf+0x108>
    ef10:	88 36       	cpi	r24, 0x68	; 104
    ef12:	41 f4       	brne	.+16     	; 0xef24 <vfprintf+0x118>
    ef14:	f7 01       	movw	r30, r14
    ef16:	93 fd       	sbrc	r25, 3
    ef18:	85 91       	lpm	r24, Z+
    ef1a:	93 ff       	sbrs	r25, 3
    ef1c:	81 91       	ld	r24, Z+
    ef1e:	7f 01       	movw	r14, r30
    ef20:	81 11       	cpse	r24, r1
    ef22:	b3 cf       	rjmp	.-154    	; 0xee8a <vfprintf+0x7e>
    ef24:	98 2f       	mov	r25, r24
    ef26:	9f 7d       	andi	r25, 0xDF	; 223
    ef28:	95 54       	subi	r25, 0x45	; 69
    ef2a:	93 30       	cpi	r25, 0x03	; 3
    ef2c:	28 f4       	brcc	.+10     	; 0xef38 <vfprintf+0x12c>
    ef2e:	0c 5f       	subi	r16, 0xFC	; 252
    ef30:	1f 4f       	sbci	r17, 0xFF	; 255
    ef32:	9f e3       	ldi	r25, 0x3F	; 63
    ef34:	99 83       	std	Y+1, r25	; 0x01
    ef36:	0d c0       	rjmp	.+26     	; 0xef52 <vfprintf+0x146>
    ef38:	83 36       	cpi	r24, 0x63	; 99
    ef3a:	31 f0       	breq	.+12     	; 0xef48 <vfprintf+0x13c>
    ef3c:	83 37       	cpi	r24, 0x73	; 115
    ef3e:	71 f0       	breq	.+28     	; 0xef5c <vfprintf+0x150>
    ef40:	83 35       	cpi	r24, 0x53	; 83
    ef42:	09 f0       	breq	.+2      	; 0xef46 <vfprintf+0x13a>
    ef44:	59 c0       	rjmp	.+178    	; 0xeff8 <vfprintf+0x1ec>
    ef46:	21 c0       	rjmp	.+66     	; 0xef8a <vfprintf+0x17e>
    ef48:	f8 01       	movw	r30, r16
    ef4a:	80 81       	ld	r24, Z
    ef4c:	89 83       	std	Y+1, r24	; 0x01
    ef4e:	0e 5f       	subi	r16, 0xFE	; 254
    ef50:	1f 4f       	sbci	r17, 0xFF	; 255
    ef52:	88 24       	eor	r8, r8
    ef54:	83 94       	inc	r8
    ef56:	91 2c       	mov	r9, r1
    ef58:	53 01       	movw	r10, r6
    ef5a:	13 c0       	rjmp	.+38     	; 0xef82 <vfprintf+0x176>
    ef5c:	28 01       	movw	r4, r16
    ef5e:	f2 e0       	ldi	r31, 0x02	; 2
    ef60:	4f 0e       	add	r4, r31
    ef62:	51 1c       	adc	r5, r1
    ef64:	f8 01       	movw	r30, r16
    ef66:	a0 80       	ld	r10, Z
    ef68:	b1 80       	ldd	r11, Z+1	; 0x01
    ef6a:	36 fe       	sbrs	r3, 6
    ef6c:	03 c0       	rjmp	.+6      	; 0xef74 <vfprintf+0x168>
    ef6e:	69 2d       	mov	r22, r9
    ef70:	70 e0       	ldi	r23, 0x00	; 0
    ef72:	02 c0       	rjmp	.+4      	; 0xef78 <vfprintf+0x16c>
    ef74:	6f ef       	ldi	r22, 0xFF	; 255
    ef76:	7f ef       	ldi	r23, 0xFF	; 255
    ef78:	c5 01       	movw	r24, r10
    ef7a:	0e 94 92 7a 	call	0xf524	; 0xf524 <strnlen>
    ef7e:	4c 01       	movw	r8, r24
    ef80:	82 01       	movw	r16, r4
    ef82:	f3 2d       	mov	r31, r3
    ef84:	ff 77       	andi	r31, 0x7F	; 127
    ef86:	3f 2e       	mov	r3, r31
    ef88:	16 c0       	rjmp	.+44     	; 0xefb6 <vfprintf+0x1aa>
    ef8a:	28 01       	movw	r4, r16
    ef8c:	22 e0       	ldi	r18, 0x02	; 2
    ef8e:	42 0e       	add	r4, r18
    ef90:	51 1c       	adc	r5, r1
    ef92:	f8 01       	movw	r30, r16
    ef94:	a0 80       	ld	r10, Z
    ef96:	b1 80       	ldd	r11, Z+1	; 0x01
    ef98:	36 fe       	sbrs	r3, 6
    ef9a:	03 c0       	rjmp	.+6      	; 0xefa2 <vfprintf+0x196>
    ef9c:	69 2d       	mov	r22, r9
    ef9e:	70 e0       	ldi	r23, 0x00	; 0
    efa0:	02 c0       	rjmp	.+4      	; 0xefa6 <vfprintf+0x19a>
    efa2:	6f ef       	ldi	r22, 0xFF	; 255
    efa4:	7f ef       	ldi	r23, 0xFF	; 255
    efa6:	c5 01       	movw	r24, r10
    efa8:	0e 94 87 7a 	call	0xf50e	; 0xf50e <strnlen_P>
    efac:	4c 01       	movw	r8, r24
    efae:	f3 2d       	mov	r31, r3
    efb0:	f0 68       	ori	r31, 0x80	; 128
    efb2:	3f 2e       	mov	r3, r31
    efb4:	82 01       	movw	r16, r4
    efb6:	33 fc       	sbrc	r3, 3
    efb8:	1b c0       	rjmp	.+54     	; 0xeff0 <vfprintf+0x1e4>
    efba:	82 2d       	mov	r24, r2
    efbc:	90 e0       	ldi	r25, 0x00	; 0
    efbe:	88 16       	cp	r8, r24
    efc0:	99 06       	cpc	r9, r25
    efc2:	b0 f4       	brcc	.+44     	; 0xeff0 <vfprintf+0x1e4>
    efc4:	b6 01       	movw	r22, r12
    efc6:	80 e2       	ldi	r24, 0x20	; 32
    efc8:	90 e0       	ldi	r25, 0x00	; 0
    efca:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    efce:	2a 94       	dec	r2
    efd0:	f4 cf       	rjmp	.-24     	; 0xefba <vfprintf+0x1ae>
    efd2:	f5 01       	movw	r30, r10
    efd4:	37 fc       	sbrc	r3, 7
    efd6:	85 91       	lpm	r24, Z+
    efd8:	37 fe       	sbrs	r3, 7
    efda:	81 91       	ld	r24, Z+
    efdc:	5f 01       	movw	r10, r30
    efde:	b6 01       	movw	r22, r12
    efe0:	90 e0       	ldi	r25, 0x00	; 0
    efe2:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    efe6:	21 10       	cpse	r2, r1
    efe8:	2a 94       	dec	r2
    efea:	21 e0       	ldi	r18, 0x01	; 1
    efec:	82 1a       	sub	r8, r18
    efee:	91 08       	sbc	r9, r1
    eff0:	81 14       	cp	r8, r1
    eff2:	91 04       	cpc	r9, r1
    eff4:	71 f7       	brne	.-36     	; 0xefd2 <vfprintf+0x1c6>
    eff6:	e8 c0       	rjmp	.+464    	; 0xf1c8 <vfprintf+0x3bc>
    eff8:	84 36       	cpi	r24, 0x64	; 100
    effa:	11 f0       	breq	.+4      	; 0xf000 <vfprintf+0x1f4>
    effc:	89 36       	cpi	r24, 0x69	; 105
    effe:	41 f5       	brne	.+80     	; 0xf050 <vfprintf+0x244>
    f000:	f8 01       	movw	r30, r16
    f002:	37 fe       	sbrs	r3, 7
    f004:	07 c0       	rjmp	.+14     	; 0xf014 <vfprintf+0x208>
    f006:	60 81       	ld	r22, Z
    f008:	71 81       	ldd	r23, Z+1	; 0x01
    f00a:	82 81       	ldd	r24, Z+2	; 0x02
    f00c:	93 81       	ldd	r25, Z+3	; 0x03
    f00e:	0c 5f       	subi	r16, 0xFC	; 252
    f010:	1f 4f       	sbci	r17, 0xFF	; 255
    f012:	08 c0       	rjmp	.+16     	; 0xf024 <vfprintf+0x218>
    f014:	60 81       	ld	r22, Z
    f016:	71 81       	ldd	r23, Z+1	; 0x01
    f018:	07 2e       	mov	r0, r23
    f01a:	00 0c       	add	r0, r0
    f01c:	88 0b       	sbc	r24, r24
    f01e:	99 0b       	sbc	r25, r25
    f020:	0e 5f       	subi	r16, 0xFE	; 254
    f022:	1f 4f       	sbci	r17, 0xFF	; 255
    f024:	f3 2d       	mov	r31, r3
    f026:	ff 76       	andi	r31, 0x6F	; 111
    f028:	3f 2e       	mov	r3, r31
    f02a:	97 ff       	sbrs	r25, 7
    f02c:	09 c0       	rjmp	.+18     	; 0xf040 <vfprintf+0x234>
    f02e:	90 95       	com	r25
    f030:	80 95       	com	r24
    f032:	70 95       	com	r23
    f034:	61 95       	neg	r22
    f036:	7f 4f       	sbci	r23, 0xFF	; 255
    f038:	8f 4f       	sbci	r24, 0xFF	; 255
    f03a:	9f 4f       	sbci	r25, 0xFF	; 255
    f03c:	f0 68       	ori	r31, 0x80	; 128
    f03e:	3f 2e       	mov	r3, r31
    f040:	2a e0       	ldi	r18, 0x0A	; 10
    f042:	30 e0       	ldi	r19, 0x00	; 0
    f044:	a3 01       	movw	r20, r6
    f046:	0e 94 d9 7a 	call	0xf5b2	; 0xf5b2 <__ultoa_invert>
    f04a:	88 2e       	mov	r8, r24
    f04c:	86 18       	sub	r8, r6
    f04e:	45 c0       	rjmp	.+138    	; 0xf0da <vfprintf+0x2ce>
    f050:	85 37       	cpi	r24, 0x75	; 117
    f052:	31 f4       	brne	.+12     	; 0xf060 <vfprintf+0x254>
    f054:	23 2d       	mov	r18, r3
    f056:	2f 7e       	andi	r18, 0xEF	; 239
    f058:	b2 2e       	mov	r11, r18
    f05a:	2a e0       	ldi	r18, 0x0A	; 10
    f05c:	30 e0       	ldi	r19, 0x00	; 0
    f05e:	25 c0       	rjmp	.+74     	; 0xf0aa <vfprintf+0x29e>
    f060:	93 2d       	mov	r25, r3
    f062:	99 7f       	andi	r25, 0xF9	; 249
    f064:	b9 2e       	mov	r11, r25
    f066:	8f 36       	cpi	r24, 0x6F	; 111
    f068:	c1 f0       	breq	.+48     	; 0xf09a <vfprintf+0x28e>
    f06a:	18 f4       	brcc	.+6      	; 0xf072 <vfprintf+0x266>
    f06c:	88 35       	cpi	r24, 0x58	; 88
    f06e:	79 f0       	breq	.+30     	; 0xf08e <vfprintf+0x282>
    f070:	b5 c0       	rjmp	.+362    	; 0xf1dc <vfprintf+0x3d0>
    f072:	80 37       	cpi	r24, 0x70	; 112
    f074:	19 f0       	breq	.+6      	; 0xf07c <vfprintf+0x270>
    f076:	88 37       	cpi	r24, 0x78	; 120
    f078:	21 f0       	breq	.+8      	; 0xf082 <vfprintf+0x276>
    f07a:	b0 c0       	rjmp	.+352    	; 0xf1dc <vfprintf+0x3d0>
    f07c:	e9 2f       	mov	r30, r25
    f07e:	e0 61       	ori	r30, 0x10	; 16
    f080:	be 2e       	mov	r11, r30
    f082:	b4 fe       	sbrs	r11, 4
    f084:	0d c0       	rjmp	.+26     	; 0xf0a0 <vfprintf+0x294>
    f086:	fb 2d       	mov	r31, r11
    f088:	f4 60       	ori	r31, 0x04	; 4
    f08a:	bf 2e       	mov	r11, r31
    f08c:	09 c0       	rjmp	.+18     	; 0xf0a0 <vfprintf+0x294>
    f08e:	34 fe       	sbrs	r3, 4
    f090:	0a c0       	rjmp	.+20     	; 0xf0a6 <vfprintf+0x29a>
    f092:	29 2f       	mov	r18, r25
    f094:	26 60       	ori	r18, 0x06	; 6
    f096:	b2 2e       	mov	r11, r18
    f098:	06 c0       	rjmp	.+12     	; 0xf0a6 <vfprintf+0x29a>
    f09a:	28 e0       	ldi	r18, 0x08	; 8
    f09c:	30 e0       	ldi	r19, 0x00	; 0
    f09e:	05 c0       	rjmp	.+10     	; 0xf0aa <vfprintf+0x29e>
    f0a0:	20 e1       	ldi	r18, 0x10	; 16
    f0a2:	30 e0       	ldi	r19, 0x00	; 0
    f0a4:	02 c0       	rjmp	.+4      	; 0xf0aa <vfprintf+0x29e>
    f0a6:	20 e1       	ldi	r18, 0x10	; 16
    f0a8:	32 e0       	ldi	r19, 0x02	; 2
    f0aa:	f8 01       	movw	r30, r16
    f0ac:	b7 fe       	sbrs	r11, 7
    f0ae:	07 c0       	rjmp	.+14     	; 0xf0be <vfprintf+0x2b2>
    f0b0:	60 81       	ld	r22, Z
    f0b2:	71 81       	ldd	r23, Z+1	; 0x01
    f0b4:	82 81       	ldd	r24, Z+2	; 0x02
    f0b6:	93 81       	ldd	r25, Z+3	; 0x03
    f0b8:	0c 5f       	subi	r16, 0xFC	; 252
    f0ba:	1f 4f       	sbci	r17, 0xFF	; 255
    f0bc:	06 c0       	rjmp	.+12     	; 0xf0ca <vfprintf+0x2be>
    f0be:	60 81       	ld	r22, Z
    f0c0:	71 81       	ldd	r23, Z+1	; 0x01
    f0c2:	80 e0       	ldi	r24, 0x00	; 0
    f0c4:	90 e0       	ldi	r25, 0x00	; 0
    f0c6:	0e 5f       	subi	r16, 0xFE	; 254
    f0c8:	1f 4f       	sbci	r17, 0xFF	; 255
    f0ca:	a3 01       	movw	r20, r6
    f0cc:	0e 94 d9 7a 	call	0xf5b2	; 0xf5b2 <__ultoa_invert>
    f0d0:	88 2e       	mov	r8, r24
    f0d2:	86 18       	sub	r8, r6
    f0d4:	fb 2d       	mov	r31, r11
    f0d6:	ff 77       	andi	r31, 0x7F	; 127
    f0d8:	3f 2e       	mov	r3, r31
    f0da:	36 fe       	sbrs	r3, 6
    f0dc:	0d c0       	rjmp	.+26     	; 0xf0f8 <vfprintf+0x2ec>
    f0de:	23 2d       	mov	r18, r3
    f0e0:	2e 7f       	andi	r18, 0xFE	; 254
    f0e2:	a2 2e       	mov	r10, r18
    f0e4:	89 14       	cp	r8, r9
    f0e6:	58 f4       	brcc	.+22     	; 0xf0fe <vfprintf+0x2f2>
    f0e8:	34 fe       	sbrs	r3, 4
    f0ea:	0b c0       	rjmp	.+22     	; 0xf102 <vfprintf+0x2f6>
    f0ec:	32 fc       	sbrc	r3, 2
    f0ee:	09 c0       	rjmp	.+18     	; 0xf102 <vfprintf+0x2f6>
    f0f0:	83 2d       	mov	r24, r3
    f0f2:	8e 7e       	andi	r24, 0xEE	; 238
    f0f4:	a8 2e       	mov	r10, r24
    f0f6:	05 c0       	rjmp	.+10     	; 0xf102 <vfprintf+0x2f6>
    f0f8:	b8 2c       	mov	r11, r8
    f0fa:	a3 2c       	mov	r10, r3
    f0fc:	03 c0       	rjmp	.+6      	; 0xf104 <vfprintf+0x2f8>
    f0fe:	b8 2c       	mov	r11, r8
    f100:	01 c0       	rjmp	.+2      	; 0xf104 <vfprintf+0x2f8>
    f102:	b9 2c       	mov	r11, r9
    f104:	a4 fe       	sbrs	r10, 4
    f106:	0f c0       	rjmp	.+30     	; 0xf126 <vfprintf+0x31a>
    f108:	fe 01       	movw	r30, r28
    f10a:	e8 0d       	add	r30, r8
    f10c:	f1 1d       	adc	r31, r1
    f10e:	80 81       	ld	r24, Z
    f110:	80 33       	cpi	r24, 0x30	; 48
    f112:	21 f4       	brne	.+8      	; 0xf11c <vfprintf+0x310>
    f114:	9a 2d       	mov	r25, r10
    f116:	99 7e       	andi	r25, 0xE9	; 233
    f118:	a9 2e       	mov	r10, r25
    f11a:	09 c0       	rjmp	.+18     	; 0xf12e <vfprintf+0x322>
    f11c:	a2 fe       	sbrs	r10, 2
    f11e:	06 c0       	rjmp	.+12     	; 0xf12c <vfprintf+0x320>
    f120:	b3 94       	inc	r11
    f122:	b3 94       	inc	r11
    f124:	04 c0       	rjmp	.+8      	; 0xf12e <vfprintf+0x322>
    f126:	8a 2d       	mov	r24, r10
    f128:	86 78       	andi	r24, 0x86	; 134
    f12a:	09 f0       	breq	.+2      	; 0xf12e <vfprintf+0x322>
    f12c:	b3 94       	inc	r11
    f12e:	a3 fc       	sbrc	r10, 3
    f130:	11 c0       	rjmp	.+34     	; 0xf154 <vfprintf+0x348>
    f132:	a0 fe       	sbrs	r10, 0
    f134:	06 c0       	rjmp	.+12     	; 0xf142 <vfprintf+0x336>
    f136:	b2 14       	cp	r11, r2
    f138:	88 f4       	brcc	.+34     	; 0xf15c <vfprintf+0x350>
    f13a:	28 0c       	add	r2, r8
    f13c:	92 2c       	mov	r9, r2
    f13e:	9b 18       	sub	r9, r11
    f140:	0e c0       	rjmp	.+28     	; 0xf15e <vfprintf+0x352>
    f142:	b2 14       	cp	r11, r2
    f144:	60 f4       	brcc	.+24     	; 0xf15e <vfprintf+0x352>
    f146:	b6 01       	movw	r22, r12
    f148:	80 e2       	ldi	r24, 0x20	; 32
    f14a:	90 e0       	ldi	r25, 0x00	; 0
    f14c:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    f150:	b3 94       	inc	r11
    f152:	f7 cf       	rjmp	.-18     	; 0xf142 <vfprintf+0x336>
    f154:	b2 14       	cp	r11, r2
    f156:	18 f4       	brcc	.+6      	; 0xf15e <vfprintf+0x352>
    f158:	2b 18       	sub	r2, r11
    f15a:	02 c0       	rjmp	.+4      	; 0xf160 <vfprintf+0x354>
    f15c:	98 2c       	mov	r9, r8
    f15e:	21 2c       	mov	r2, r1
    f160:	a4 fe       	sbrs	r10, 4
    f162:	10 c0       	rjmp	.+32     	; 0xf184 <vfprintf+0x378>
    f164:	b6 01       	movw	r22, r12
    f166:	80 e3       	ldi	r24, 0x30	; 48
    f168:	90 e0       	ldi	r25, 0x00	; 0
    f16a:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    f16e:	a2 fe       	sbrs	r10, 2
    f170:	17 c0       	rjmp	.+46     	; 0xf1a0 <vfprintf+0x394>
    f172:	a1 fc       	sbrc	r10, 1
    f174:	03 c0       	rjmp	.+6      	; 0xf17c <vfprintf+0x370>
    f176:	88 e7       	ldi	r24, 0x78	; 120
    f178:	90 e0       	ldi	r25, 0x00	; 0
    f17a:	02 c0       	rjmp	.+4      	; 0xf180 <vfprintf+0x374>
    f17c:	88 e5       	ldi	r24, 0x58	; 88
    f17e:	90 e0       	ldi	r25, 0x00	; 0
    f180:	b6 01       	movw	r22, r12
    f182:	0c c0       	rjmp	.+24     	; 0xf19c <vfprintf+0x390>
    f184:	8a 2d       	mov	r24, r10
    f186:	86 78       	andi	r24, 0x86	; 134
    f188:	59 f0       	breq	.+22     	; 0xf1a0 <vfprintf+0x394>
    f18a:	a1 fe       	sbrs	r10, 1
    f18c:	02 c0       	rjmp	.+4      	; 0xf192 <vfprintf+0x386>
    f18e:	8b e2       	ldi	r24, 0x2B	; 43
    f190:	01 c0       	rjmp	.+2      	; 0xf194 <vfprintf+0x388>
    f192:	80 e2       	ldi	r24, 0x20	; 32
    f194:	a7 fc       	sbrc	r10, 7
    f196:	8d e2       	ldi	r24, 0x2D	; 45
    f198:	b6 01       	movw	r22, r12
    f19a:	90 e0       	ldi	r25, 0x00	; 0
    f19c:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    f1a0:	89 14       	cp	r8, r9
    f1a2:	38 f4       	brcc	.+14     	; 0xf1b2 <vfprintf+0x3a6>
    f1a4:	b6 01       	movw	r22, r12
    f1a6:	80 e3       	ldi	r24, 0x30	; 48
    f1a8:	90 e0       	ldi	r25, 0x00	; 0
    f1aa:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    f1ae:	9a 94       	dec	r9
    f1b0:	f7 cf       	rjmp	.-18     	; 0xf1a0 <vfprintf+0x394>
    f1b2:	8a 94       	dec	r8
    f1b4:	f3 01       	movw	r30, r6
    f1b6:	e8 0d       	add	r30, r8
    f1b8:	f1 1d       	adc	r31, r1
    f1ba:	80 81       	ld	r24, Z
    f1bc:	b6 01       	movw	r22, r12
    f1be:	90 e0       	ldi	r25, 0x00	; 0
    f1c0:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    f1c4:	81 10       	cpse	r8, r1
    f1c6:	f5 cf       	rjmp	.-22     	; 0xf1b2 <vfprintf+0x3a6>
    f1c8:	22 20       	and	r2, r2
    f1ca:	09 f4       	brne	.+2      	; 0xf1ce <vfprintf+0x3c2>
    f1cc:	42 ce       	rjmp	.-892    	; 0xee52 <vfprintf+0x46>
    f1ce:	b6 01       	movw	r22, r12
    f1d0:	80 e2       	ldi	r24, 0x20	; 32
    f1d2:	90 e0       	ldi	r25, 0x00	; 0
    f1d4:	0e 94 9d 7a 	call	0xf53a	; 0xf53a <fputc>
    f1d8:	2a 94       	dec	r2
    f1da:	f6 cf       	rjmp	.-20     	; 0xf1c8 <vfprintf+0x3bc>
    f1dc:	f6 01       	movw	r30, r12
    f1de:	86 81       	ldd	r24, Z+6	; 0x06
    f1e0:	97 81       	ldd	r25, Z+7	; 0x07
    f1e2:	02 c0       	rjmp	.+4      	; 0xf1e8 <vfprintf+0x3dc>
    f1e4:	8f ef       	ldi	r24, 0xFF	; 255
    f1e6:	9f ef       	ldi	r25, 0xFF	; 255
    f1e8:	2b 96       	adiw	r28, 0x0b	; 11
    f1ea:	cd bf       	out	0x3d, r28	; 61
    f1ec:	de bf       	out	0x3e, r29	; 62
    f1ee:	df 91       	pop	r29
    f1f0:	cf 91       	pop	r28
    f1f2:	1f 91       	pop	r17
    f1f4:	0f 91       	pop	r16
    f1f6:	ff 90       	pop	r15
    f1f8:	ef 90       	pop	r14
    f1fa:	df 90       	pop	r13
    f1fc:	cf 90       	pop	r12
    f1fe:	bf 90       	pop	r11
    f200:	af 90       	pop	r10
    f202:	9f 90       	pop	r9
    f204:	8f 90       	pop	r8
    f206:	7f 90       	pop	r7
    f208:	6f 90       	pop	r6
    f20a:	5f 90       	pop	r5
    f20c:	4f 90       	pop	r4
    f20e:	3f 90       	pop	r3
    f210:	2f 90       	pop	r2
    f212:	08 95       	ret

0000f214 <strtod>:
    f214:	8f 92       	push	r8
    f216:	9f 92       	push	r9
    f218:	af 92       	push	r10
    f21a:	bf 92       	push	r11
    f21c:	cf 92       	push	r12
    f21e:	df 92       	push	r13
    f220:	ef 92       	push	r14
    f222:	ff 92       	push	r15
    f224:	0f 93       	push	r16
    f226:	1f 93       	push	r17
    f228:	cf 93       	push	r28
    f22a:	df 93       	push	r29
    f22c:	ec 01       	movw	r28, r24
    f22e:	6b 01       	movw	r12, r22
    f230:	61 15       	cp	r22, r1
    f232:	71 05       	cpc	r23, r1
    f234:	19 f0       	breq	.+6      	; 0xf23c <strtod+0x28>
    f236:	fb 01       	movw	r30, r22
    f238:	80 83       	st	Z, r24
    f23a:	91 83       	std	Z+1, r25	; 0x01
    f23c:	7e 01       	movw	r14, r28
    f23e:	ff ef       	ldi	r31, 0xFF	; 255
    f240:	ef 1a       	sub	r14, r31
    f242:	ff 0a       	sbc	r15, r31
    f244:	08 81       	ld	r16, Y
    f246:	80 2f       	mov	r24, r16
    f248:	90 e0       	ldi	r25, 0x00	; 0
    f24a:	0e 94 66 7a 	call	0xf4cc	; 0xf4cc <isspace>
    f24e:	89 2b       	or	r24, r25
    f250:	11 f0       	breq	.+4      	; 0xf256 <strtod+0x42>
    f252:	e7 01       	movw	r28, r14
    f254:	f3 cf       	rjmp	.-26     	; 0xf23c <strtod+0x28>
    f256:	0d 32       	cpi	r16, 0x2D	; 45
    f258:	39 f4       	brne	.+14     	; 0xf268 <strtod+0x54>
    f25a:	7e 01       	movw	r14, r28
    f25c:	82 e0       	ldi	r24, 0x02	; 2
    f25e:	e8 0e       	add	r14, r24
    f260:	f1 1c       	adc	r15, r1
    f262:	09 81       	ldd	r16, Y+1	; 0x01
    f264:	11 e0       	ldi	r17, 0x01	; 1
    f266:	08 c0       	rjmp	.+16     	; 0xf278 <strtod+0x64>
    f268:	0b 32       	cpi	r16, 0x2B	; 43
    f26a:	29 f4       	brne	.+10     	; 0xf276 <strtod+0x62>
    f26c:	7e 01       	movw	r14, r28
    f26e:	92 e0       	ldi	r25, 0x02	; 2
    f270:	e9 0e       	add	r14, r25
    f272:	f1 1c       	adc	r15, r1
    f274:	09 81       	ldd	r16, Y+1	; 0x01
    f276:	10 e0       	ldi	r17, 0x00	; 0
    f278:	e7 01       	movw	r28, r14
    f27a:	21 97       	sbiw	r28, 0x01	; 1
    f27c:	43 e0       	ldi	r20, 0x03	; 3
    f27e:	50 e0       	ldi	r21, 0x00	; 0
    f280:	62 e7       	ldi	r22, 0x72	; 114
    f282:	72 e0       	ldi	r23, 0x02	; 2
    f284:	ce 01       	movw	r24, r28
    f286:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <strncasecmp_P>
    f28a:	89 2b       	or	r24, r25
    f28c:	c1 f4       	brne	.+48     	; 0xf2be <strtod+0xaa>
    f28e:	23 96       	adiw	r28, 0x03	; 3
    f290:	45 e0       	ldi	r20, 0x05	; 5
    f292:	50 e0       	ldi	r21, 0x00	; 0
    f294:	6d e6       	ldi	r22, 0x6D	; 109
    f296:	72 e0       	ldi	r23, 0x02	; 2
    f298:	ce 01       	movw	r24, r28
    f29a:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <strncasecmp_P>
    f29e:	89 2b       	or	r24, r25
    f2a0:	09 f4       	brne	.+2      	; 0xf2a4 <strtod+0x90>
    f2a2:	25 96       	adiw	r28, 0x05	; 5
    f2a4:	c1 14       	cp	r12, r1
    f2a6:	d1 04       	cpc	r13, r1
    f2a8:	19 f0       	breq	.+6      	; 0xf2b0 <strtod+0x9c>
    f2aa:	f6 01       	movw	r30, r12
    f2ac:	c0 83       	st	Z, r28
    f2ae:	d1 83       	std	Z+1, r29	; 0x01
    f2b0:	11 11       	cpse	r17, r1
    f2b2:	f6 c0       	rjmp	.+492    	; 0xf4a0 <strtod+0x28c>
    f2b4:	60 e0       	ldi	r22, 0x00	; 0
    f2b6:	70 e0       	ldi	r23, 0x00	; 0
    f2b8:	80 e8       	ldi	r24, 0x80	; 128
    f2ba:	9f e7       	ldi	r25, 0x7F	; 127
    f2bc:	fa c0       	rjmp	.+500    	; 0xf4b2 <strtod+0x29e>
    f2be:	43 e0       	ldi	r20, 0x03	; 3
    f2c0:	50 e0       	ldi	r21, 0x00	; 0
    f2c2:	6a e6       	ldi	r22, 0x6A	; 106
    f2c4:	72 e0       	ldi	r23, 0x02	; 2
    f2c6:	ce 01       	movw	r24, r28
    f2c8:	0e 94 6f 7a 	call	0xf4de	; 0xf4de <strncasecmp_P>
    f2cc:	89 2b       	or	r24, r25
    f2ce:	59 f4       	brne	.+22     	; 0xf2e6 <strtod+0xd2>
    f2d0:	c1 14       	cp	r12, r1
    f2d2:	d1 04       	cpc	r13, r1
    f2d4:	09 f4       	brne	.+2      	; 0xf2d8 <strtod+0xc4>
    f2d6:	e9 c0       	rjmp	.+466    	; 0xf4aa <strtod+0x296>
    f2d8:	f2 e0       	ldi	r31, 0x02	; 2
    f2da:	ef 0e       	add	r14, r31
    f2dc:	f1 1c       	adc	r15, r1
    f2de:	f6 01       	movw	r30, r12
    f2e0:	e0 82       	st	Z, r14
    f2e2:	f1 82       	std	Z+1, r15	; 0x01
    f2e4:	e2 c0       	rjmp	.+452    	; 0xf4aa <strtod+0x296>
    f2e6:	20 e0       	ldi	r18, 0x00	; 0
    f2e8:	30 e0       	ldi	r19, 0x00	; 0
    f2ea:	a9 01       	movw	r20, r18
    f2ec:	c0 e0       	ldi	r28, 0x00	; 0
    f2ee:	d0 e0       	ldi	r29, 0x00	; 0
    f2f0:	f7 01       	movw	r30, r14
    f2f2:	60 ed       	ldi	r22, 0xD0	; 208
    f2f4:	a6 2e       	mov	r10, r22
    f2f6:	a0 0e       	add	r10, r16
    f2f8:	89 e0       	ldi	r24, 0x09	; 9
    f2fa:	8a 15       	cp	r24, r10
    f2fc:	30 f1       	brcs	.+76     	; 0xf34a <strtod+0x136>
    f2fe:	91 2f       	mov	r25, r17
    f300:	92 60       	ori	r25, 0x02	; 2
    f302:	b9 2e       	mov	r11, r25
    f304:	81 2f       	mov	r24, r17
    f306:	88 70       	andi	r24, 0x08	; 8
    f308:	12 ff       	sbrs	r17, 2
    f30a:	04 c0       	rjmp	.+8      	; 0xf314 <strtod+0x100>
    f30c:	81 11       	cpse	r24, r1
    f30e:	24 c0       	rjmp	.+72     	; 0xf358 <strtod+0x144>
    f310:	21 96       	adiw	r28, 0x01	; 1
    f312:	22 c0       	rjmp	.+68     	; 0xf358 <strtod+0x144>
    f314:	81 11       	cpse	r24, r1
    f316:	21 97       	sbiw	r28, 0x01	; 1
    f318:	a5 e0       	ldi	r26, 0x05	; 5
    f31a:	b0 e0       	ldi	r27, 0x00	; 0
    f31c:	0e 94 07 75 	call	0xea0e	; 0xea0e <__muluhisi3>
    f320:	dc 01       	movw	r26, r24
    f322:	cb 01       	movw	r24, r22
    f324:	88 0f       	add	r24, r24
    f326:	99 1f       	adc	r25, r25
    f328:	aa 1f       	adc	r26, r26
    f32a:	bb 1f       	adc	r27, r27
    f32c:	9c 01       	movw	r18, r24
    f32e:	ad 01       	movw	r20, r26
    f330:	2a 0d       	add	r18, r10
    f332:	31 1d       	adc	r19, r1
    f334:	41 1d       	adc	r20, r1
    f336:	51 1d       	adc	r21, r1
    f338:	28 39       	cpi	r18, 0x98	; 152
    f33a:	89 e9       	ldi	r24, 0x99	; 153
    f33c:	38 07       	cpc	r19, r24
    f33e:	48 07       	cpc	r20, r24
    f340:	89 e1       	ldi	r24, 0x19	; 25
    f342:	58 07       	cpc	r21, r24
    f344:	48 f0       	brcs	.+18     	; 0xf358 <strtod+0x144>
    f346:	16 60       	ori	r17, 0x06	; 6
    f348:	06 c0       	rjmp	.+12     	; 0xf356 <strtod+0x142>
    f34a:	9e ef       	ldi	r25, 0xFE	; 254
    f34c:	a9 12       	cpse	r10, r25
    f34e:	0a c0       	rjmp	.+20     	; 0xf364 <strtod+0x150>
    f350:	13 fd       	sbrc	r17, 3
    f352:	40 c0       	rjmp	.+128    	; 0xf3d4 <strtod+0x1c0>
    f354:	18 60       	ori	r17, 0x08	; 8
    f356:	b1 2e       	mov	r11, r17
    f358:	8f ef       	ldi	r24, 0xFF	; 255
    f35a:	e8 1a       	sub	r14, r24
    f35c:	f8 0a       	sbc	r15, r24
    f35e:	00 81       	ld	r16, Z
    f360:	1b 2d       	mov	r17, r11
    f362:	c6 cf       	rjmp	.-116    	; 0xf2f0 <strtod+0xdc>
    f364:	80 2f       	mov	r24, r16
    f366:	8f 7d       	andi	r24, 0xDF	; 223
    f368:	85 34       	cpi	r24, 0x45	; 69
    f36a:	a1 f5       	brne	.+104    	; 0xf3d4 <strtod+0x1c0>
    f36c:	80 81       	ld	r24, Z
    f36e:	8d 32       	cpi	r24, 0x2D	; 45
    f370:	11 f4       	brne	.+4      	; 0xf376 <strtod+0x162>
    f372:	10 61       	ori	r17, 0x10	; 16
    f374:	06 c0       	rjmp	.+12     	; 0xf382 <strtod+0x16e>
    f376:	8b 32       	cpi	r24, 0x2B	; 43
    f378:	21 f0       	breq	.+8      	; 0xf382 <strtod+0x16e>
    f37a:	31 96       	adiw	r30, 0x01	; 1
    f37c:	61 e0       	ldi	r22, 0x01	; 1
    f37e:	70 e0       	ldi	r23, 0x00	; 0
    f380:	04 c0       	rjmp	.+8      	; 0xf38a <strtod+0x176>
    f382:	81 81       	ldd	r24, Z+1	; 0x01
    f384:	32 96       	adiw	r30, 0x02	; 2
    f386:	62 e0       	ldi	r22, 0x02	; 2
    f388:	70 e0       	ldi	r23, 0x00	; 0
    f38a:	80 53       	subi	r24, 0x30	; 48
    f38c:	8a 30       	cpi	r24, 0x0A	; 10
    f38e:	18 f0       	brcs	.+6      	; 0xf396 <strtod+0x182>
    f390:	e6 1b       	sub	r30, r22
    f392:	f7 0b       	sbc	r31, r23
    f394:	1f c0       	rjmp	.+62     	; 0xf3d4 <strtod+0x1c0>
    f396:	60 e0       	ldi	r22, 0x00	; 0
    f398:	70 e0       	ldi	r23, 0x00	; 0
    f39a:	60 38       	cpi	r22, 0x80	; 128
    f39c:	9c e0       	ldi	r25, 0x0C	; 12
    f39e:	79 07       	cpc	r23, r25
    f3a0:	5c f4       	brge	.+22     	; 0xf3b8 <strtod+0x1a4>
    f3a2:	db 01       	movw	r26, r22
    f3a4:	aa 0f       	add	r26, r26
    f3a6:	bb 1f       	adc	r27, r27
    f3a8:	aa 0f       	add	r26, r26
    f3aa:	bb 1f       	adc	r27, r27
    f3ac:	6a 0f       	add	r22, r26
    f3ae:	7b 1f       	adc	r23, r27
    f3b0:	66 0f       	add	r22, r22
    f3b2:	77 1f       	adc	r23, r23
    f3b4:	68 0f       	add	r22, r24
    f3b6:	71 1d       	adc	r23, r1
    f3b8:	31 96       	adiw	r30, 0x01	; 1
    f3ba:	df 01       	movw	r26, r30
    f3bc:	11 97       	sbiw	r26, 0x01	; 1
    f3be:	8c 91       	ld	r24, X
    f3c0:	80 53       	subi	r24, 0x30	; 48
    f3c2:	8a 30       	cpi	r24, 0x0A	; 10
    f3c4:	50 f3       	brcs	.-44     	; 0xf39a <strtod+0x186>
    f3c6:	14 ff       	sbrs	r17, 4
    f3c8:	03 c0       	rjmp	.+6      	; 0xf3d0 <strtod+0x1bc>
    f3ca:	71 95       	neg	r23
    f3cc:	61 95       	neg	r22
    f3ce:	71 09       	sbc	r23, r1
    f3d0:	c6 0f       	add	r28, r22
    f3d2:	d7 1f       	adc	r29, r23
    f3d4:	11 ff       	sbrs	r17, 1
    f3d6:	08 c0       	rjmp	.+16     	; 0xf3e8 <strtod+0x1d4>
    f3d8:	c1 14       	cp	r12, r1
    f3da:	d1 04       	cpc	r13, r1
    f3dc:	29 f0       	breq	.+10     	; 0xf3e8 <strtod+0x1d4>
    f3de:	cf 01       	movw	r24, r30
    f3e0:	01 97       	sbiw	r24, 0x01	; 1
    f3e2:	f6 01       	movw	r30, r12
    f3e4:	80 83       	st	Z, r24
    f3e6:	91 83       	std	Z+1, r25	; 0x01
    f3e8:	ca 01       	movw	r24, r20
    f3ea:	b9 01       	movw	r22, r18
    f3ec:	0e 94 11 73 	call	0xe622	; 0xe622 <__floatunsisf>
    f3f0:	21 2f       	mov	r18, r17
    f3f2:	23 70       	andi	r18, 0x03	; 3
    f3f4:	23 30       	cpi	r18, 0x03	; 3
    f3f6:	19 f0       	breq	.+6      	; 0xf3fe <strtod+0x1ea>
    f3f8:	4b 01       	movw	r8, r22
    f3fa:	5c 01       	movw	r10, r24
    f3fc:	06 c0       	rjmp	.+12     	; 0xf40a <strtod+0x1f6>
    f3fe:	4b 01       	movw	r8, r22
    f400:	5c 01       	movw	r10, r24
    f402:	b7 fa       	bst	r11, 7
    f404:	b0 94       	com	r11
    f406:	b7 f8       	bld	r11, 7
    f408:	b0 94       	com	r11
    f40a:	20 e0       	ldi	r18, 0x00	; 0
    f40c:	30 e0       	ldi	r19, 0x00	; 0
    f40e:	a9 01       	movw	r20, r18
    f410:	c5 01       	movw	r24, r10
    f412:	b4 01       	movw	r22, r8
    f414:	0e 94 64 72 	call	0xe4c8	; 0xe4c8 <__cmpsf2>
    f418:	88 23       	and	r24, r24
    f41a:	09 f4       	brne	.+2      	; 0xf41e <strtod+0x20a>
    f41c:	3e c0       	rjmp	.+124    	; 0xf49a <strtod+0x286>
    f41e:	d7 ff       	sbrs	r29, 7
    f420:	06 c0       	rjmp	.+12     	; 0xf42e <strtod+0x21a>
    f422:	d1 95       	neg	r29
    f424:	c1 95       	neg	r28
    f426:	d1 09       	sbc	r29, r1
    f428:	09 e8       	ldi	r16, 0x89	; 137
    f42a:	12 e0       	ldi	r17, 0x02	; 2
    f42c:	02 c0       	rjmp	.+4      	; 0xf432 <strtod+0x21e>
    f42e:	01 ea       	ldi	r16, 0xA1	; 161
    f430:	12 e0       	ldi	r17, 0x02	; 2
    f432:	68 01       	movw	r12, r16
    f434:	f8 e1       	ldi	r31, 0x18	; 24
    f436:	cf 1a       	sub	r12, r31
    f438:	d1 08       	sbc	r13, r1
    f43a:	90 e2       	ldi	r25, 0x20	; 32
    f43c:	e9 2e       	mov	r14, r25
    f43e:	f1 2c       	mov	r15, r1
    f440:	ce 15       	cp	r28, r14
    f442:	df 05       	cpc	r29, r15
    f444:	74 f0       	brlt	.+28     	; 0xf462 <strtod+0x24e>
    f446:	f8 01       	movw	r30, r16
    f448:	25 91       	lpm	r18, Z+
    f44a:	35 91       	lpm	r19, Z+
    f44c:	45 91       	lpm	r20, Z+
    f44e:	54 91       	lpm	r21, Z
    f450:	c5 01       	movw	r24, r10
    f452:	b4 01       	movw	r22, r8
    f454:	0e 94 09 74 	call	0xe812	; 0xe812 <__mulsf3>
    f458:	4b 01       	movw	r8, r22
    f45a:	5c 01       	movw	r10, r24
    f45c:	ce 19       	sub	r28, r14
    f45e:	df 09       	sbc	r29, r15
    f460:	ef cf       	rjmp	.-34     	; 0xf440 <strtod+0x22c>
    f462:	04 50       	subi	r16, 0x04	; 4
    f464:	11 09       	sbc	r17, r1
    f466:	f5 94       	asr	r15
    f468:	e7 94       	ror	r14
    f46a:	0c 15       	cp	r16, r12
    f46c:	1d 05       	cpc	r17, r13
    f46e:	41 f7       	brne	.-48     	; 0xf440 <strtod+0x22c>
    f470:	8a 2d       	mov	r24, r10
    f472:	88 0f       	add	r24, r24
    f474:	8b 2d       	mov	r24, r11
    f476:	88 1f       	adc	r24, r24
    f478:	8f 3f       	cpi	r24, 0xFF	; 255
    f47a:	49 f0       	breq	.+18     	; 0xf48e <strtod+0x27a>
    f47c:	20 e0       	ldi	r18, 0x00	; 0
    f47e:	30 e0       	ldi	r19, 0x00	; 0
    f480:	a9 01       	movw	r20, r18
    f482:	c5 01       	movw	r24, r10
    f484:	b4 01       	movw	r22, r8
    f486:	0e 94 64 72 	call	0xe4c8	; 0xe4c8 <__cmpsf2>
    f48a:	81 11       	cpse	r24, r1
    f48c:	06 c0       	rjmp	.+12     	; 0xf49a <strtod+0x286>
    f48e:	82 e2       	ldi	r24, 0x22	; 34
    f490:	90 e0       	ldi	r25, 0x00	; 0
    f492:	80 93 cb 4a 	sts	0x4ACB, r24	; 0x804acb <errno>
    f496:	90 93 cc 4a 	sts	0x4ACC, r25	; 0x804acc <errno+0x1>
    f49a:	c5 01       	movw	r24, r10
    f49c:	b4 01       	movw	r22, r8
    f49e:	09 c0       	rjmp	.+18     	; 0xf4b2 <strtod+0x29e>
    f4a0:	60 e0       	ldi	r22, 0x00	; 0
    f4a2:	70 e0       	ldi	r23, 0x00	; 0
    f4a4:	80 e8       	ldi	r24, 0x80	; 128
    f4a6:	9f ef       	ldi	r25, 0xFF	; 255
    f4a8:	04 c0       	rjmp	.+8      	; 0xf4b2 <strtod+0x29e>
    f4aa:	60 e0       	ldi	r22, 0x00	; 0
    f4ac:	70 e0       	ldi	r23, 0x00	; 0
    f4ae:	80 ec       	ldi	r24, 0xC0	; 192
    f4b0:	9f e7       	ldi	r25, 0x7F	; 127
    f4b2:	df 91       	pop	r29
    f4b4:	cf 91       	pop	r28
    f4b6:	1f 91       	pop	r17
    f4b8:	0f 91       	pop	r16
    f4ba:	ff 90       	pop	r15
    f4bc:	ef 90       	pop	r14
    f4be:	df 90       	pop	r13
    f4c0:	cf 90       	pop	r12
    f4c2:	bf 90       	pop	r11
    f4c4:	af 90       	pop	r10
    f4c6:	9f 90       	pop	r9
    f4c8:	8f 90       	pop	r8
    f4ca:	08 95       	ret

0000f4cc <isspace>:
    f4cc:	91 11       	cpse	r25, r1
    f4ce:	0c 94 37 7b 	jmp	0xf66e	; 0xf66e <__ctype_isfalse>
    f4d2:	80 32       	cpi	r24, 0x20	; 32
    f4d4:	19 f0       	breq	.+6      	; 0xf4dc <isspace+0x10>
    f4d6:	89 50       	subi	r24, 0x09	; 9
    f4d8:	85 50       	subi	r24, 0x05	; 5
    f4da:	c8 f7       	brcc	.-14     	; 0xf4ce <isspace+0x2>
    f4dc:	08 95       	ret

0000f4de <strncasecmp_P>:
    f4de:	fb 01       	movw	r30, r22
    f4e0:	dc 01       	movw	r26, r24
    f4e2:	41 50       	subi	r20, 0x01	; 1
    f4e4:	50 40       	sbci	r21, 0x00	; 0
    f4e6:	88 f0       	brcs	.+34     	; 0xf50a <strncasecmp_P+0x2c>
    f4e8:	8d 91       	ld	r24, X+
    f4ea:	81 34       	cpi	r24, 0x41	; 65
    f4ec:	1c f0       	brlt	.+6      	; 0xf4f4 <strncasecmp_P+0x16>
    f4ee:	8b 35       	cpi	r24, 0x5B	; 91
    f4f0:	0c f4       	brge	.+2      	; 0xf4f4 <strncasecmp_P+0x16>
    f4f2:	80 5e       	subi	r24, 0xE0	; 224
    f4f4:	65 91       	lpm	r22, Z+
    f4f6:	61 34       	cpi	r22, 0x41	; 65
    f4f8:	1c f0       	brlt	.+6      	; 0xf500 <strncasecmp_P+0x22>
    f4fa:	6b 35       	cpi	r22, 0x5B	; 91
    f4fc:	0c f4       	brge	.+2      	; 0xf500 <strncasecmp_P+0x22>
    f4fe:	60 5e       	subi	r22, 0xE0	; 224
    f500:	86 1b       	sub	r24, r22
    f502:	61 11       	cpse	r22, r1
    f504:	71 f3       	breq	.-36     	; 0xf4e2 <strncasecmp_P+0x4>
    f506:	99 0b       	sbc	r25, r25
    f508:	08 95       	ret
    f50a:	88 1b       	sub	r24, r24
    f50c:	fc cf       	rjmp	.-8      	; 0xf506 <strncasecmp_P+0x28>

0000f50e <strnlen_P>:
    f50e:	fc 01       	movw	r30, r24
    f510:	05 90       	lpm	r0, Z+
    f512:	61 50       	subi	r22, 0x01	; 1
    f514:	70 40       	sbci	r23, 0x00	; 0
    f516:	01 10       	cpse	r0, r1
    f518:	d8 f7       	brcc	.-10     	; 0xf510 <strnlen_P+0x2>
    f51a:	80 95       	com	r24
    f51c:	90 95       	com	r25
    f51e:	8e 0f       	add	r24, r30
    f520:	9f 1f       	adc	r25, r31
    f522:	08 95       	ret

0000f524 <strnlen>:
    f524:	fc 01       	movw	r30, r24
    f526:	61 50       	subi	r22, 0x01	; 1
    f528:	70 40       	sbci	r23, 0x00	; 0
    f52a:	01 90       	ld	r0, Z+
    f52c:	01 10       	cpse	r0, r1
    f52e:	d8 f7       	brcc	.-10     	; 0xf526 <strnlen+0x2>
    f530:	80 95       	com	r24
    f532:	90 95       	com	r25
    f534:	8e 0f       	add	r24, r30
    f536:	9f 1f       	adc	r25, r31
    f538:	08 95       	ret

0000f53a <fputc>:
    f53a:	0f 93       	push	r16
    f53c:	1f 93       	push	r17
    f53e:	cf 93       	push	r28
    f540:	df 93       	push	r29
    f542:	fb 01       	movw	r30, r22
    f544:	23 81       	ldd	r18, Z+3	; 0x03
    f546:	21 fd       	sbrc	r18, 1
    f548:	03 c0       	rjmp	.+6      	; 0xf550 <fputc+0x16>
    f54a:	8f ef       	ldi	r24, 0xFF	; 255
    f54c:	9f ef       	ldi	r25, 0xFF	; 255
    f54e:	2c c0       	rjmp	.+88     	; 0xf5a8 <fputc+0x6e>
    f550:	22 ff       	sbrs	r18, 2
    f552:	16 c0       	rjmp	.+44     	; 0xf580 <fputc+0x46>
    f554:	46 81       	ldd	r20, Z+6	; 0x06
    f556:	57 81       	ldd	r21, Z+7	; 0x07
    f558:	24 81       	ldd	r18, Z+4	; 0x04
    f55a:	35 81       	ldd	r19, Z+5	; 0x05
    f55c:	42 17       	cp	r20, r18
    f55e:	53 07       	cpc	r21, r19
    f560:	44 f4       	brge	.+16     	; 0xf572 <fputc+0x38>
    f562:	a0 81       	ld	r26, Z
    f564:	b1 81       	ldd	r27, Z+1	; 0x01
    f566:	9d 01       	movw	r18, r26
    f568:	2f 5f       	subi	r18, 0xFF	; 255
    f56a:	3f 4f       	sbci	r19, 0xFF	; 255
    f56c:	20 83       	st	Z, r18
    f56e:	31 83       	std	Z+1, r19	; 0x01
    f570:	8c 93       	st	X, r24
    f572:	26 81       	ldd	r18, Z+6	; 0x06
    f574:	37 81       	ldd	r19, Z+7	; 0x07
    f576:	2f 5f       	subi	r18, 0xFF	; 255
    f578:	3f 4f       	sbci	r19, 0xFF	; 255
    f57a:	26 83       	std	Z+6, r18	; 0x06
    f57c:	37 83       	std	Z+7, r19	; 0x07
    f57e:	14 c0       	rjmp	.+40     	; 0xf5a8 <fputc+0x6e>
    f580:	8b 01       	movw	r16, r22
    f582:	ec 01       	movw	r28, r24
    f584:	fb 01       	movw	r30, r22
    f586:	00 84       	ldd	r0, Z+8	; 0x08
    f588:	f1 85       	ldd	r31, Z+9	; 0x09
    f58a:	e0 2d       	mov	r30, r0
    f58c:	09 95       	icall
    f58e:	89 2b       	or	r24, r25
    f590:	e1 f6       	brne	.-72     	; 0xf54a <fputc+0x10>
    f592:	d8 01       	movw	r26, r16
    f594:	16 96       	adiw	r26, 0x06	; 6
    f596:	8d 91       	ld	r24, X+
    f598:	9c 91       	ld	r25, X
    f59a:	17 97       	sbiw	r26, 0x07	; 7
    f59c:	01 96       	adiw	r24, 0x01	; 1
    f59e:	16 96       	adiw	r26, 0x06	; 6
    f5a0:	8d 93       	st	X+, r24
    f5a2:	9c 93       	st	X, r25
    f5a4:	17 97       	sbiw	r26, 0x07	; 7
    f5a6:	ce 01       	movw	r24, r28
    f5a8:	df 91       	pop	r29
    f5aa:	cf 91       	pop	r28
    f5ac:	1f 91       	pop	r17
    f5ae:	0f 91       	pop	r16
    f5b0:	08 95       	ret

0000f5b2 <__ultoa_invert>:
    f5b2:	fa 01       	movw	r30, r20
    f5b4:	aa 27       	eor	r26, r26
    f5b6:	28 30       	cpi	r18, 0x08	; 8
    f5b8:	51 f1       	breq	.+84     	; 0xf60e <__ultoa_invert+0x5c>
    f5ba:	20 31       	cpi	r18, 0x10	; 16
    f5bc:	81 f1       	breq	.+96     	; 0xf61e <__ultoa_invert+0x6c>
    f5be:	e8 94       	clt
    f5c0:	6f 93       	push	r22
    f5c2:	6e 7f       	andi	r22, 0xFE	; 254
    f5c4:	6e 5f       	subi	r22, 0xFE	; 254
    f5c6:	7f 4f       	sbci	r23, 0xFF	; 255
    f5c8:	8f 4f       	sbci	r24, 0xFF	; 255
    f5ca:	9f 4f       	sbci	r25, 0xFF	; 255
    f5cc:	af 4f       	sbci	r26, 0xFF	; 255
    f5ce:	b1 e0       	ldi	r27, 0x01	; 1
    f5d0:	3e d0       	rcall	.+124    	; 0xf64e <__ultoa_invert+0x9c>
    f5d2:	b4 e0       	ldi	r27, 0x04	; 4
    f5d4:	3c d0       	rcall	.+120    	; 0xf64e <__ultoa_invert+0x9c>
    f5d6:	67 0f       	add	r22, r23
    f5d8:	78 1f       	adc	r23, r24
    f5da:	89 1f       	adc	r24, r25
    f5dc:	9a 1f       	adc	r25, r26
    f5de:	a1 1d       	adc	r26, r1
    f5e0:	68 0f       	add	r22, r24
    f5e2:	79 1f       	adc	r23, r25
    f5e4:	8a 1f       	adc	r24, r26
    f5e6:	91 1d       	adc	r25, r1
    f5e8:	a1 1d       	adc	r26, r1
    f5ea:	6a 0f       	add	r22, r26
    f5ec:	71 1d       	adc	r23, r1
    f5ee:	81 1d       	adc	r24, r1
    f5f0:	91 1d       	adc	r25, r1
    f5f2:	a1 1d       	adc	r26, r1
    f5f4:	20 d0       	rcall	.+64     	; 0xf636 <__ultoa_invert+0x84>
    f5f6:	09 f4       	brne	.+2      	; 0xf5fa <__ultoa_invert+0x48>
    f5f8:	68 94       	set
    f5fa:	3f 91       	pop	r19
    f5fc:	2a e0       	ldi	r18, 0x0A	; 10
    f5fe:	26 9f       	mul	r18, r22
    f600:	11 24       	eor	r1, r1
    f602:	30 19       	sub	r19, r0
    f604:	30 5d       	subi	r19, 0xD0	; 208
    f606:	31 93       	st	Z+, r19
    f608:	de f6       	brtc	.-74     	; 0xf5c0 <__ultoa_invert+0xe>
    f60a:	cf 01       	movw	r24, r30
    f60c:	08 95       	ret
    f60e:	46 2f       	mov	r20, r22
    f610:	47 70       	andi	r20, 0x07	; 7
    f612:	40 5d       	subi	r20, 0xD0	; 208
    f614:	41 93       	st	Z+, r20
    f616:	b3 e0       	ldi	r27, 0x03	; 3
    f618:	0f d0       	rcall	.+30     	; 0xf638 <__ultoa_invert+0x86>
    f61a:	c9 f7       	brne	.-14     	; 0xf60e <__ultoa_invert+0x5c>
    f61c:	f6 cf       	rjmp	.-20     	; 0xf60a <__ultoa_invert+0x58>
    f61e:	46 2f       	mov	r20, r22
    f620:	4f 70       	andi	r20, 0x0F	; 15
    f622:	40 5d       	subi	r20, 0xD0	; 208
    f624:	4a 33       	cpi	r20, 0x3A	; 58
    f626:	18 f0       	brcs	.+6      	; 0xf62e <__ultoa_invert+0x7c>
    f628:	49 5d       	subi	r20, 0xD9	; 217
    f62a:	31 fd       	sbrc	r19, 1
    f62c:	40 52       	subi	r20, 0x20	; 32
    f62e:	41 93       	st	Z+, r20
    f630:	02 d0       	rcall	.+4      	; 0xf636 <__ultoa_invert+0x84>
    f632:	a9 f7       	brne	.-22     	; 0xf61e <__ultoa_invert+0x6c>
    f634:	ea cf       	rjmp	.-44     	; 0xf60a <__ultoa_invert+0x58>
    f636:	b4 e0       	ldi	r27, 0x04	; 4
    f638:	a6 95       	lsr	r26
    f63a:	97 95       	ror	r25
    f63c:	87 95       	ror	r24
    f63e:	77 95       	ror	r23
    f640:	67 95       	ror	r22
    f642:	ba 95       	dec	r27
    f644:	c9 f7       	brne	.-14     	; 0xf638 <__ultoa_invert+0x86>
    f646:	00 97       	sbiw	r24, 0x00	; 0
    f648:	61 05       	cpc	r22, r1
    f64a:	71 05       	cpc	r23, r1
    f64c:	08 95       	ret
    f64e:	9b 01       	movw	r18, r22
    f650:	ac 01       	movw	r20, r24
    f652:	0a 2e       	mov	r0, r26
    f654:	06 94       	lsr	r0
    f656:	57 95       	ror	r21
    f658:	47 95       	ror	r20
    f65a:	37 95       	ror	r19
    f65c:	27 95       	ror	r18
    f65e:	ba 95       	dec	r27
    f660:	c9 f7       	brne	.-14     	; 0xf654 <__ultoa_invert+0xa2>
    f662:	62 0f       	add	r22, r18
    f664:	73 1f       	adc	r23, r19
    f666:	84 1f       	adc	r24, r20
    f668:	95 1f       	adc	r25, r21
    f66a:	a0 1d       	adc	r26, r0
    f66c:	08 95       	ret

0000f66e <__ctype_isfalse>:
    f66e:	99 27       	eor	r25, r25
    f670:	88 27       	eor	r24, r24

0000f672 <__ctype_istrue>:
    f672:	08 95       	ret

0000f674 <eeprom_read_byte>:
    f674:	03 d0       	rcall	.+6      	; 0xf67c <eeprom_mapen>
    f676:	80 81       	ld	r24, Z
    f678:	99 27       	eor	r25, r25
    f67a:	08 95       	ret

0000f67c <eeprom_mapen>:
    f67c:	fc 01       	movw	r30, r24
    f67e:	e0 50       	subi	r30, 0x00	; 0
    f680:	fc 4e       	sbci	r31, 0xEC	; 236
    f682:	08 95       	ret

0000f684 <eeprom_read_dword>:
    f684:	0e 94 3e 7b 	call	0xf67c	; 0xf67c <eeprom_mapen>
    f688:	60 81       	ld	r22, Z
    f68a:	71 81       	ldd	r23, Z+1	; 0x01
    f68c:	82 81       	ldd	r24, Z+2	; 0x02
    f68e:	93 81       	ldd	r25, Z+3	; 0x03
    f690:	08 95       	ret

0000f692 <eeprom_read_word>:
    f692:	0e 94 3e 7b 	call	0xf67c	; 0xf67c <eeprom_mapen>
    f696:	80 81       	ld	r24, Z
    f698:	91 81       	ldd	r25, Z+1	; 0x01
    f69a:	08 95       	ret

0000f69c <__divmodqi4>:
    f69c:	87 fb       	bst	r24, 7
    f69e:	08 2e       	mov	r0, r24
    f6a0:	06 26       	eor	r0, r22
    f6a2:	87 fd       	sbrc	r24, 7
    f6a4:	81 95       	neg	r24
    f6a6:	67 fd       	sbrc	r22, 7
    f6a8:	61 95       	neg	r22
    f6aa:	0e 94 63 7b 	call	0xf6c6	; 0xf6c6 <__udivmodqi4>
    f6ae:	0e f4       	brtc	.+2      	; 0xf6b2 <__divmodqi4_1>
    f6b0:	91 95       	neg	r25

0000f6b2 <__divmodqi4_1>:
    f6b2:	07 fc       	sbrc	r0, 7
    f6b4:	81 95       	neg	r24

0000f6b6 <__divmodqi4_exit>:
    f6b6:	08 95       	ret

0000f6b8 <__xload_1>:
    f6b8:	57 fd       	sbrc	r21, 7
    f6ba:	03 c0       	rjmp	.+6      	; 0xf6c2 <__xload_1+0xa>
    f6bc:	5b bf       	out	0x3b, r21	; 59
    f6be:	67 91       	elpm	r22, Z+
    f6c0:	08 95       	ret
    f6c2:	60 81       	ld	r22, Z
    f6c4:	08 95       	ret

0000f6c6 <__udivmodqi4>:
    f6c6:	99 1b       	sub	r25, r25
    f6c8:	79 e0       	ldi	r23, 0x09	; 9
    f6ca:	04 c0       	rjmp	.+8      	; 0xf6d4 <__udivmodqi4_ep>

0000f6cc <__udivmodqi4_loop>:
    f6cc:	99 1f       	adc	r25, r25
    f6ce:	96 17       	cp	r25, r22
    f6d0:	08 f0       	brcs	.+2      	; 0xf6d4 <__udivmodqi4_ep>
    f6d2:	96 1b       	sub	r25, r22

0000f6d4 <__udivmodqi4_ep>:
    f6d4:	88 1f       	adc	r24, r24
    f6d6:	7a 95       	dec	r23
    f6d8:	c9 f7       	brne	.-14     	; 0xf6cc <__udivmodqi4_loop>
    f6da:	80 95       	com	r24
    f6dc:	08 95       	ret

0000f6de <__do_global_dtors>:
    f6de:	11 e0       	ldi	r17, 0x01	; 1
    f6e0:	cb eb       	ldi	r28, 0xBB	; 187
    f6e2:	d1 e0       	ldi	r29, 0x01	; 1
    f6e4:	04 c0       	rjmp	.+8      	; 0xf6ee <__do_global_dtors+0x10>
    f6e6:	fe 01       	movw	r30, r28
    f6e8:	0e 94 ef 74 	call	0xe9de	; 0xe9de <__tablejump2__>
    f6ec:	21 96       	adiw	r28, 0x01	; 1
    f6ee:	cd 3b       	cpi	r28, 0xBD	; 189
    f6f0:	d1 07       	cpc	r29, r17
    f6f2:	c9 f7       	brne	.-14     	; 0xf6e6 <__do_global_dtors+0x8>
    f6f4:	f8 94       	cli

0000f6f6 <__stop_program>:
    f6f6:	ff cf       	rjmp	.-2      	; 0xf6f6 <__stop_program>
