
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006c2  00804000  00010186  0001023a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00010186  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000425  008046c2  008046c2  000108fc  2**0
                  ALLOC
  3 .eeprom       00000053  00810000  00810000  000108fc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0001094f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000109ac  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000c10  00000000  00000000  000109f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000f21f  00000000  00000000  00011600  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005586  00000000  00000000  0002081f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000a252  00000000  00000000  00025da5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002cac  00000000  00000000  0002fff8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006402  00000000  00000000  00032ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005db9  00000000  00000000  000390a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b40  00000000  00000000  0003ee5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__dtors_end>
       4:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
       8:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
       c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      10:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      14:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      18:	0c 94 74 10 	jmp	0x20e8	; 0x20e8 <__vector_6>
      1c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      20:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      24:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      28:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      2c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      30:	0c 94 08 15 	jmp	0x2a10	; 0x2a10 <__vector_12>
      34:	0c 94 b4 6e 	jmp	0xdd68	; 0xdd68 <__vector_13>
      38:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      3c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      40:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      44:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      48:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      4c:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__vector_19>
      50:	0c 94 54 0b 	jmp	0x16a8	; 0x16a8 <__vector_20>
      54:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      58:	0c 94 ac 14 	jmp	0x2958	; 0x2958 <__vector_22>
      5c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      60:	0c 94 8c 36 	jmp	0x6d18	; 0x6d18 <__vector_24>
      64:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      68:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      6c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      70:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      74:	0c 94 27 17 	jmp	0x2e4e	; 0x2e4e <__vector_29>
      78:	0c 94 16 08 	jmp	0x102c	; 0x102c <__vector_30>
      7c:	0c 94 de 0c 	jmp	0x19bc	; 0x19bc <__vector_31>
      80:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__vector_32>
      84:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      88:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      8c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      90:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      94:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      98:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      9c:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      a0:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      a4:	0c 94 41 52 	jmp	0xa482	; 0xa482 <__vector_41>
      a8:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      ac:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      b0:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      b4:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      b8:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      bc:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      c0:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      c4:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      c8:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      cc:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      d0:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      d4:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      d8:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      dc:	0c 94 90 08 	jmp	0x1120	; 0x1120 <__vector_55>
      e0:	0c 94 19 0c 	jmp	0x1832	; 0x1832 <__vector_56>
      e4:	0c 94 05 02 	jmp	0x40a	; 0x40a <__bad_interrupt>
      e8:	77 2d       	mov	r23, r7
      ea:	8b 2d       	mov	r24, r11
      ec:	a1 2d       	mov	r26, r1
      ee:	b7 2d       	mov	r27, r7
      f0:	cd 2d       	mov	r28, r13
      f2:	13 2f       	mov	r17, r19
      f4:	08 2f       	mov	r16, r24
      f6:	08 2e       	mov	r0, r24
      f8:	18 2e       	mov	r1, r24
      fa:	2a 2e       	mov	r2, r26
      fc:	3c 2e       	mov	r3, r28
      fe:	4e 2e       	mov	r4, r30
     100:	88 2e       	mov	r8, r24
     102:	98 2e       	mov	r9, r24
     104:	aa 2e       	mov	r10, r26
     106:	bc 2e       	mov	r11, r28
     108:	ce 2e       	mov	r12, r30
     10a:	a6 47       	sbci	r26, 0x76	; 118
     10c:	b3 47       	sbci	r27, 0x73	; 115
     10e:	4a 47       	sbci	r20, 0x7A	; 122
     110:	b3 47       	sbci	r27, 0x73	; 115
     112:	b3 47       	sbci	r27, 0x73	; 115
     114:	b3 47       	sbci	r27, 0x73	; 115
     116:	58 47       	sbci	r21, 0x78	; 120
     118:	b3 47       	sbci	r27, 0x73	; 115
     11a:	b3 47       	sbci	r27, 0x73	; 115
     11c:	b3 47       	sbci	r27, 0x73	; 115
     11e:	a2 46       	sbci	r26, 0x62	; 98
     120:	b3 47       	sbci	r27, 0x73	; 115
     122:	b3 47       	sbci	r27, 0x73	; 115
     124:	b3 47       	sbci	r27, 0x73	; 115
     126:	b3 47       	sbci	r27, 0x73	; 115
     128:	b3 47       	sbci	r27, 0x73	; 115
     12a:	b3 47       	sbci	r27, 0x73	; 115
     12c:	b3 47       	sbci	r27, 0x73	; 115
     12e:	b3 47       	sbci	r27, 0x73	; 115
     130:	b3 47       	sbci	r27, 0x73	; 115
     132:	b3 47       	sbci	r27, 0x73	; 115
     134:	b3 47       	sbci	r27, 0x73	; 115
     136:	b3 47       	sbci	r27, 0x73	; 115
     138:	b3 47       	sbci	r27, 0x73	; 115
     13a:	b3 47       	sbci	r27, 0x73	; 115
     13c:	b3 47       	sbci	r27, 0x73	; 115
     13e:	b3 47       	sbci	r27, 0x73	; 115
     140:	b3 47       	sbci	r27, 0x73	; 115
     142:	b3 47       	sbci	r27, 0x73	; 115
     144:	b3 47       	sbci	r27, 0x73	; 115
     146:	b3 47       	sbci	r27, 0x73	; 115
     148:	d2 46       	sbci	r29, 0x62	; 98
     14a:	b3 47       	sbci	r27, 0x73	; 115
     14c:	b3 47       	sbci	r27, 0x73	; 115
     14e:	b3 47       	sbci	r27, 0x73	; 115
     150:	b3 47       	sbci	r27, 0x73	; 115
     152:	b3 47       	sbci	r27, 0x73	; 115
     154:	b3 47       	sbci	r27, 0x73	; 115
     156:	b3 47       	sbci	r27, 0x73	; 115
     158:	b3 47       	sbci	r27, 0x73	; 115
     15a:	b3 47       	sbci	r27, 0x73	; 115
     15c:	b3 47       	sbci	r27, 0x73	; 115
     15e:	b3 47       	sbci	r27, 0x73	; 115
     160:	b3 47       	sbci	r27, 0x73	; 115
     162:	b3 47       	sbci	r27, 0x73	; 115
     164:	b3 47       	sbci	r27, 0x73	; 115
     166:	b3 47       	sbci	r27, 0x73	; 115
     168:	b3 47       	sbci	r27, 0x73	; 115
     16a:	b3 47       	sbci	r27, 0x73	; 115
     16c:	b3 47       	sbci	r27, 0x73	; 115
     16e:	b3 47       	sbci	r27, 0x73	; 115
     170:	b3 47       	sbci	r27, 0x73	; 115
     172:	02 47       	sbci	r16, 0x72	; 114
     174:	b3 47       	sbci	r27, 0x73	; 115
     176:	b3 47       	sbci	r27, 0x73	; 115
     178:	b3 47       	sbci	r27, 0x73	; 115
     17a:	b3 47       	sbci	r27, 0x73	; 115
     17c:	b3 47       	sbci	r27, 0x73	; 115
     17e:	b3 47       	sbci	r27, 0x73	; 115
     180:	b3 47       	sbci	r27, 0x73	; 115
     182:	b3 47       	sbci	r27, 0x73	; 115
     184:	36 47       	sbci	r19, 0x76	; 118
     186:	40 47       	sbci	r20, 0x70	; 112
     188:	66 47       	sbci	r22, 0x76	; 118
     18a:	79 46       	sbci	r23, 0x69	; 105
     18c:	b3 47       	sbci	r27, 0x73	; 115
     18e:	b3 47       	sbci	r27, 0x73	; 115
     190:	b3 47       	sbci	r27, 0x73	; 115
     192:	87 46       	sbci	r24, 0x67	; 103
     194:	b3 47       	sbci	r27, 0x73	; 115
     196:	b3 47       	sbci	r27, 0x73	; 115
     198:	b3 47       	sbci	r27, 0x73	; 115
     19a:	95 46       	sbci	r25, 0x65	; 101
     19c:	b3 47       	sbci	r27, 0x73	; 115
     19e:	70 47       	sbci	r23, 0x70	; 112
     1a0:	7a 47       	sbci	r23, 0x7A	; 122
     1a2:	b3 47       	sbci	r27, 0x73	; 115
     1a4:	85 47       	sbci	r24, 0x75	; 117
     1a6:	b3 47       	sbci	r27, 0x73	; 115
     1a8:	90 47       	sbci	r25, 0x70	; 112
     1aa:	b3 47       	sbci	r27, 0x73	; 115
     1ac:	9b 47       	sbci	r25, 0x7B	; 123
     1ae:	f8 53       	subi	r31, 0x38	; 56
     1b0:	0b 54       	subi	r16, 0x4B	; 75
     1b2:	15 54       	subi	r17, 0x45	; 69
     1b4:	1f 54       	subi	r17, 0x4F	; 79
     1b6:	4f 54       	subi	r20, 0x4F	; 79
     1b8:	37 54       	subi	r19, 0x47	; 71
     1ba:	67 54       	subi	r22, 0x47	; 71
     1bc:	41 55       	subi	r20, 0x51	; 81
     1be:	57 55       	subi	r21, 0x57	; 87
     1c0:	12 55       	subi	r17, 0x52	; 82
     1c2:	e3 54       	subi	r30, 0x43	; 67
     1c4:	b1 54       	subi	r27, 0x41	; 65
     1c6:	7f 54       	subi	r23, 0x4F	; 79
     1c8:	0f 5e       	subi	r16, 0xEF	; 239
     1ca:	a6 5d       	subi	r26, 0xD6	; 214
     1cc:	f3 5d       	subi	r31, 0xD3	; 211
     1ce:	1d 5e       	subi	r17, 0xED	; 237
     1d0:	fa 5d       	subi	r31, 0xDA	; 218
     1d2:	1d 5e       	subi	r17, 0xED	; 237
     1d4:	c2 5d       	subi	r28, 0xD2	; 210
     1d6:	9f 5d       	subi	r25, 0xDF	; 223
     1d8:	b4 5d       	subi	r27, 0xD4	; 212
     1da:	bb 5d       	subi	r27, 0xDB	; 219
     1dc:	1d 5e       	subi	r17, 0xED	; 237
     1de:	de 5d       	subi	r29, 0xDE	; 222
     1e0:	91 5d       	subi	r25, 0xD1	; 209
     1e2:	e5 5d       	subi	r30, 0xD5	; 213
     1e4:	8a 5d       	subi	r24, 0xDA	; 218
     1e6:	ad 5d       	subi	r26, 0xDD	; 221
     1e8:	45 5d       	subi	r20, 0xD5	; 213
     1ea:	4c 5d       	subi	r20, 0xDC	; 220
     1ec:	53 5d       	subi	r21, 0xD3	; 211
     1ee:	5a 5d       	subi	r21, 0xDA	; 218
     1f0:	61 5d       	subi	r22, 0xD1	; 209
     1f2:	68 5d       	subi	r22, 0xD8	; 216
     1f4:	6e 5d       	subi	r22, 0xDE	; 222
     1f6:	75 5d       	subi	r23, 0xD5	; 213
     1f8:	7c 5d       	subi	r23, 0xDC	; 220
     1fa:	83 5d       	subi	r24, 0xD3	; 211
     1fc:	c9 5d       	subi	r28, 0xD9	; 217
     1fe:	d0 5d       	subi	r29, 0xD0	; 208
     200:	16 5e       	subi	r17, 0xE6	; 230
     202:	d7 5d       	subi	r29, 0xD7	; 215
     204:	1d 5e       	subi	r17, 0xED	; 237
     206:	98 5d       	subi	r25, 0xD8	; 216
     208:	01 5e       	subi	r16, 0xE1	; 225
     20a:	93 5c       	subi	r25, 0xC3	; 195
     20c:	9a 5c       	subi	r25, 0xCA	; 202
     20e:	a1 5c       	subi	r26, 0xC1	; 193
     210:	a8 5c       	subi	r26, 0xC8	; 200
     212:	af 5c       	subi	r26, 0xCF	; 207
     214:	b5 5c       	subi	r27, 0xC5	; 197
     216:	bc 5c       	subi	r27, 0xCC	; 204
     218:	c3 5c       	subi	r28, 0xC3	; 195
     21a:	c9 5c       	subi	r28, 0xC9	; 201
     21c:	cf 5c       	subi	r28, 0xCF	; 207
     21e:	d6 5c       	subi	r29, 0xC6	; 198
     220:	dd 5c       	subi	r29, 0xCD	; 205
     222:	e4 5c       	subi	r30, 0xC4	; 196
     224:	eb 5c       	subi	r30, 0xCB	; 203
     226:	f2 5c       	subi	r31, 0xC2	; 194
     228:	f9 5c       	subi	r31, 0xC9	; 201
     22a:	00 5d       	subi	r16, 0xD0	; 208
     22c:	07 5d       	subi	r16, 0xD7	; 215
     22e:	0e 5d       	subi	r16, 0xDE	; 222
     230:	14 5d       	subi	r17, 0xD4	; 212
     232:	1b 5d       	subi	r17, 0xDB	; 219
     234:	22 5d       	subi	r18, 0xD2	; 210
     236:	29 5d       	subi	r18, 0xD9	; 217
     238:	30 5d       	subi	r19, 0xD0	; 208
     23a:	37 5d       	subi	r19, 0xD7	; 215
     23c:	3e 5d       	subi	r19, 0xDE	; 222
     23e:	1d 5e       	subi	r17, 0xED	; 237
     240:	1d 5e       	subi	r17, 0xED	; 237
     242:	1d 5e       	subi	r17, 0xED	; 237
     244:	1d 5e       	subi	r17, 0xED	; 237
     246:	ec 5d       	subi	r30, 0xDC	; 220
     248:	1d 5e       	subi	r17, 0xED	; 237
     24a:	1d 5e       	subi	r17, 0xED	; 237
     24c:	1d 5e       	subi	r17, 0xED	; 237
     24e:	1d 5e       	subi	r17, 0xED	; 237
     250:	1d 5e       	subi	r17, 0xED	; 237
     252:	1d 5e       	subi	r17, 0xED	; 237
     254:	1d 5e       	subi	r17, 0xED	; 237
     256:	1d 5e       	subi	r17, 0xED	; 237
     258:	1d 5e       	subi	r17, 0xED	; 237
     25a:	1d 5e       	subi	r17, 0xED	; 237
     25c:	1d 5e       	subi	r17, 0xED	; 237
     25e:	1d 5e       	subi	r17, 0xED	; 237
     260:	1d 5e       	subi	r17, 0xED	; 237
     262:	1d 5e       	subi	r17, 0xED	; 237
     264:	1d 5e       	subi	r17, 0xED	; 237
     266:	1d 5e       	subi	r17, 0xED	; 237
     268:	1d 5e       	subi	r17, 0xED	; 237
     26a:	1d 5e       	subi	r17, 0xED	; 237
     26c:	1d 5e       	subi	r17, 0xED	; 237
     26e:	1d 5e       	subi	r17, 0xED	; 237
     270:	1d 5e       	subi	r17, 0xED	; 237
     272:	1d 5e       	subi	r17, 0xED	; 237
     274:	1d 5e       	subi	r17, 0xED	; 237
     276:	1d 5e       	subi	r17, 0xED	; 237
     278:	1d 5e       	subi	r17, 0xED	; 237
     27a:	1d 5e       	subi	r17, 0xED	; 237
     27c:	1d 5e       	subi	r17, 0xED	; 237
     27e:	1d 5e       	subi	r17, 0xED	; 237
     280:	08 5e       	subi	r16, 0xE8	; 232
     282:	4e 76       	andi	r20, 0x6E	; 110
     284:	59 76       	andi	r21, 0x69	; 105
     286:	64 76       	andi	r22, 0x64	; 100
     288:	6f 76       	andi	r22, 0x6F	; 111
     28a:	7a 76       	andi	r23, 0x6A	; 106
     28c:	85 76       	andi	r24, 0x65	; 101
     28e:	90 76       	andi	r25, 0x60	; 96
     290:	9b 76       	andi	r25, 0x6B	; 107
     292:	a6 76       	andi	r26, 0x66	; 102
     294:	b1 76       	andi	r27, 0x61	; 97
     296:	bc 76       	andi	r27, 0x6C	; 108
     298:	c7 76       	andi	r28, 0x67	; 103
     29a:	d2 76       	andi	r29, 0x62	; 98
     29c:	dd 76       	andi	r29, 0x6D	; 109
     29e:	e8 76       	andi	r30, 0x68	; 104
     2a0:	f3 76       	andi	r31, 0x63	; 99
     2a2:	fe 76       	andi	r31, 0x6E	; 110
     2a4:	09 77       	andi	r16, 0x79	; 121

000002a6 <__trampolines_end>:
     2a6:	4e 41       	sbci	r20, 0x1E	; 30
     2a8:	4e 49       	Address 0x000002a8 is out of bounds.
.word	0xffff	; ????

000002a9 <pstr_inity>:
     2a9:	49 4e 49 54 59                                      INITY

000002ae <pstr_inf>:
     2ae:	49 4e 46                                            INF

000002b1 <pwr_m10>:
     2b1:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     2c1:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000002c9 <pwr_p10>:
     2c9:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     2d9:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

000002e1 <strfmonths>:
     2e1:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     2f1:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     301:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     311:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     321:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     331:	65 6d 62 65 72 20 00                                ember .

00000338 <strfwkdays>:
     338:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     348:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     358:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     368:	53 61 74 75 72 64 61 79 20 00                       Saturday .

00000372 <ascdays>:
     372:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     382:	72 69 53 61 74 00                                   riSat.

00000388 <ascmonths>:
     388:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     398:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     3a8:	76 44 65 63 00 00                                   vDec..

000003ae <__ctors_start>:
     3ae:	4d 34       	cpi	r20, 0x4D	; 77
     3b0:	08 37       	cpi	r16, 0x78	; 120

000003b2 <__ctors_end>:
     3b2:	5a 34       	cpi	r21, 0x4A	; 74
     3b4:	15 37       	cpi	r17, 0x75	; 117

000003b6 <__dtors_end>:
     3b6:	11 24       	eor	r1, r1
     3b8:	1f be       	out	0x3f, r1	; 63
     3ba:	cf ef       	ldi	r28, 0xFF	; 255
     3bc:	cd bf       	out	0x3d, r28	; 61
     3be:	df e7       	ldi	r29, 0x7F	; 127
     3c0:	de bf       	out	0x3e, r29	; 62

000003c2 <__do_copy_data>:
     3c2:	16 e4       	ldi	r17, 0x46	; 70
     3c4:	a0 e0       	ldi	r26, 0x00	; 0
     3c6:	b0 e4       	ldi	r27, 0x40	; 64
     3c8:	e6 e8       	ldi	r30, 0x86	; 134
     3ca:	f1 e0       	ldi	r31, 0x01	; 1
     3cc:	01 e0       	ldi	r16, 0x01	; 1
     3ce:	0b bf       	out	0x3b, r16	; 59
     3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <__do_copy_data+0x14>
     3d2:	07 90       	elpm	r0, Z+
     3d4:	0d 92       	st	X+, r0
     3d6:	a2 3c       	cpi	r26, 0xC2	; 194
     3d8:	b1 07       	cpc	r27, r17
     3da:	d9 f7       	brne	.-10     	; 0x3d2 <__do_copy_data+0x10>

000003dc <__do_clear_bss>:
     3dc:	2a e4       	ldi	r18, 0x4A	; 74
     3de:	a2 ec       	ldi	r26, 0xC2	; 194
     3e0:	b6 e4       	ldi	r27, 0x46	; 70
     3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <.do_clear_bss_start>

000003e4 <.do_clear_bss_loop>:
     3e4:	1d 92       	st	X+, r1

000003e6 <.do_clear_bss_start>:
     3e6:	a7 3e       	cpi	r26, 0xE7	; 231
     3e8:	b2 07       	cpc	r27, r18
     3ea:	e1 f7       	brne	.-8      	; 0x3e4 <.do_clear_bss_loop>

000003ec <__do_global_ctors>:
     3ec:	11 e0       	ldi	r17, 0x01	; 1
     3ee:	c9 ed       	ldi	r28, 0xD9	; 217
     3f0:	d1 e0       	ldi	r29, 0x01	; 1
     3f2:	04 c0       	rjmp	.+8      	; 0x3fc <__do_global_ctors+0x10>
     3f4:	21 97       	sbiw	r28, 0x01	; 1
     3f6:	fe 01       	movw	r30, r28
     3f8:	0e 94 2d 7a 	call	0xf45a	; 0xf45a <__tablejump2__>
     3fc:	c7 3d       	cpi	r28, 0xD7	; 215
     3fe:	d1 07       	cpc	r29, r17
     400:	c9 f7       	brne	.-14     	; 0x3f4 <__do_global_ctors+0x8>
     402:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <main>
     406:	0c 94 b6 80 	jmp	0x1016c	; 0x1016c <__do_global_dtors>

0000040a <__bad_interrupt>:
     40a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000040e <is_leap_year>:
     40e:	9c 01       	movw	r18, r24
     410:	23 70       	andi	r18, 0x03	; 3
     412:	33 27       	eor	r19, r19
     414:	23 2b       	or	r18, r19
     416:	59 f4       	brne	.+22     	; 0x42e <is_leap_year+0x20>
     418:	64 e6       	ldi	r22, 0x64	; 100
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     420:	89 2b       	or	r24, r25
     422:	39 f4       	brne	.+14     	; 0x432 <is_leap_year+0x24>
     424:	63 70       	andi	r22, 0x03	; 3
     426:	77 27       	eor	r23, r23
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	67 2b       	or	r22, r23
     42c:	19 f0       	breq	.+6      	; 0x434 <is_leap_year+0x26>
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	08 95       	ret
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	08 95       	ret

00000436 <localtime>:
     436:	63 ed       	ldi	r22, 0xD3	; 211
     438:	7a e4       	ldi	r23, 0x4A	; 74
     43a:	0e 94 22 02 	call	0x444	; 0x444 <localtime_r>
     43e:	83 ed       	ldi	r24, 0xD3	; 211
     440:	9a e4       	ldi	r25, 0x4A	; 74
     442:	08 95       	ret

00000444 <localtime_r>:
     444:	cf 92       	push	r12
     446:	df 92       	push	r13
     448:	ef 92       	push	r14
     44a:	ff 92       	push	r15
     44c:	0f 93       	push	r16
     44e:	1f 93       	push	r17
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	00 d0       	rcall	.+0      	; 0x456 <localtime_r+0x12>
     456:	00 d0       	rcall	.+0      	; 0x458 <localtime_r+0x14>
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62
     45c:	6c 01       	movw	r12, r24
     45e:	7b 01       	movw	r14, r22
     460:	e0 91 e3 4a 	lds	r30, 0x4AE3	; 0x804ae3 <__dst_ptr>
     464:	f0 91 e4 4a 	lds	r31, 0x4AE4	; 0x804ae4 <__dst_ptr+0x1>
     468:	30 97       	sbiw	r30, 0x00	; 0
     46a:	29 f0       	breq	.+10     	; 0x476 <localtime_r+0x32>
     46c:	6f ed       	ldi	r22, 0xDF	; 223
     46e:	7a e4       	ldi	r23, 0x4A	; 74
     470:	09 95       	icall
     472:	8c 01       	movw	r16, r24
     474:	02 c0       	rjmp	.+4      	; 0x47a <localtime_r+0x36>
     476:	0f ef       	ldi	r16, 0xFF	; 255
     478:	1f ef       	ldi	r17, 0xFF	; 255
     47a:	f6 01       	movw	r30, r12
     47c:	40 81       	ld	r20, Z
     47e:	51 81       	ldd	r21, Z+1	; 0x01
     480:	62 81       	ldd	r22, Z+2	; 0x02
     482:	73 81       	ldd	r23, Z+3	; 0x03
     484:	80 91 df 4a 	lds	r24, 0x4ADF	; 0x804adf <__utc_offset>
     488:	90 91 e0 4a 	lds	r25, 0x4AE0	; 0x804ae0 <__utc_offset+0x1>
     48c:	a0 91 e1 4a 	lds	r26, 0x4AE1	; 0x804ae1 <__utc_offset+0x2>
     490:	b0 91 e2 4a 	lds	r27, 0x4AE2	; 0x804ae2 <__utc_offset+0x3>
     494:	84 0f       	add	r24, r20
     496:	95 1f       	adc	r25, r21
     498:	a6 1f       	adc	r26, r22
     49a:	b7 1f       	adc	r27, r23
     49c:	10 16       	cp	r1, r16
     49e:	11 06       	cpc	r1, r17
     4a0:	4c f4       	brge	.+18     	; 0x4b4 <localtime_r+0x70>
     4a2:	a8 01       	movw	r20, r16
     4a4:	01 2e       	mov	r0, r17
     4a6:	00 0c       	add	r0, r0
     4a8:	66 0b       	sbc	r22, r22
     4aa:	77 0b       	sbc	r23, r23
     4ac:	84 0f       	add	r24, r20
     4ae:	95 1f       	adc	r25, r21
     4b0:	a6 1f       	adc	r26, r22
     4b2:	b7 1f       	adc	r27, r23
     4b4:	89 83       	std	Y+1, r24	; 0x01
     4b6:	9a 83       	std	Y+2, r25	; 0x02
     4b8:	ab 83       	std	Y+3, r26	; 0x03
     4ba:	bc 83       	std	Y+4, r27	; 0x04
     4bc:	b7 01       	movw	r22, r14
     4be:	ce 01       	movw	r24, r28
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	0e 94 aa 06 	call	0xd54	; 0xd54 <gmtime_r>
     4c6:	f7 01       	movw	r30, r14
     4c8:	02 87       	std	Z+10, r16	; 0x0a
     4ca:	13 87       	std	Z+11, r17	; 0x0b
     4cc:	24 96       	adiw	r28, 0x04	; 4
     4ce:	cd bf       	out	0x3d, r28	; 61
     4d0:	de bf       	out	0x3e, r29	; 62
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	08 95       	ret

000004e4 <month_length>:
     4e4:	62 30       	cpi	r22, 0x02	; 2
     4e6:	21 f4       	brne	.+8      	; 0x4f0 <month_length+0xc>
     4e8:	0e 94 07 02 	call	0x40e	; 0x40e <is_leap_year>
     4ec:	84 5e       	subi	r24, 0xE4	; 228
     4ee:	08 95       	ret
     4f0:	68 30       	cpi	r22, 0x08	; 8
     4f2:	08 f0       	brcs	.+2      	; 0x4f6 <month_length+0x12>
     4f4:	6f 5f       	subi	r22, 0xFF	; 255
     4f6:	61 70       	andi	r22, 0x01	; 1
     4f8:	8e e1       	ldi	r24, 0x1E	; 30
     4fa:	86 0f       	add	r24, r22
     4fc:	08 95       	ret

000004fe <set_system_time>:
     4fe:	0f b6       	in	r0, 0x3f	; 63
     500:	f8 94       	cli
     502:	60 93 cf 4a 	sts	0x4ACF, r22	; 0x804acf <__system_time>
     506:	70 93 d0 4a 	sts	0x4AD0, r23	; 0x804ad0 <__system_time+0x1>
     50a:	80 93 d1 4a 	sts	0x4AD1, r24	; 0x804ad1 <__system_time+0x2>
     50e:	90 93 d2 4a 	sts	0x4AD2, r25	; 0x804ad2 <__system_time+0x3>
     512:	0f be       	out	0x3f, r0	; 63
     514:	08 95       	ret

00000516 <pgm_copystring>:
     516:	cf 92       	push	r12
     518:	df 92       	push	r13
     51a:	ef 92       	push	r14
     51c:	0f 93       	push	r16
     51e:	6b 01       	movw	r12, r22
     520:	e8 2e       	mov	r14, r24
     522:	7c 2d       	mov	r23, r12
     524:	6d 2d       	mov	r22, r13
     526:	5e 2d       	mov	r21, r14
     528:	ae 2d       	mov	r26, r14
     52a:	c6 01       	movw	r24, r12
     52c:	01 96       	adiw	r24, 0x01	; 1
     52e:	a1 1d       	adc	r26, r1
     530:	44 23       	and	r20, r20
     532:	51 f0       	breq	.+20     	; 0x548 <pgm_copystring+0x32>
     534:	6c 01       	movw	r12, r24
     536:	ea 2e       	mov	r14, r26
     538:	e7 2f       	mov	r30, r23
     53a:	f6 2f       	mov	r31, r22
     53c:	0e 94 a3 80 	call	0x10146	; 0x10146 <__xload_1>
     540:	60 32       	cpi	r22, 0x20	; 32
     542:	79 f7       	brne	.-34     	; 0x522 <pgm_copystring+0xc>
     544:	41 50       	subi	r20, 0x01	; 1
     546:	ed cf       	rjmp	.-38     	; 0x522 <pgm_copystring+0xc>
     548:	f6 01       	movw	r30, r12
     54a:	0e 94 a3 80 	call	0x10146	; 0x10146 <__xload_1>
     54e:	6c 01       	movw	r12, r24
     550:	ea 2e       	mov	r14, r26
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	60 32       	cpi	r22, 0x20	; 32
     556:	39 f4       	brne	.+14     	; 0x566 <pgm_copystring+0x50>
     558:	f9 01       	movw	r30, r18
     55a:	10 82       	st	Z, r1
     55c:	0f 91       	pop	r16
     55e:	ef 90       	pop	r14
     560:	df 90       	pop	r13
     562:	cf 90       	pop	r12
     564:	08 95       	ret
     566:	80 17       	cp	r24, r16
     568:	b9 f3       	breq	.-18     	; 0x558 <pgm_copystring+0x42>
     56a:	2f 5f       	subi	r18, 0xFF	; 255
     56c:	3f 4f       	sbci	r19, 0xFF	; 255
     56e:	f9 01       	movw	r30, r18
     570:	31 97       	sbiw	r30, 0x01	; 1
     572:	60 83       	st	Z, r22
     574:	8f 5f       	subi	r24, 0xFF	; 255
     576:	f6 01       	movw	r30, r12
     578:	5e 2d       	mov	r21, r14
     57a:	0e 94 a3 80 	call	0x10146	; 0x10146 <__xload_1>
     57e:	9f ef       	ldi	r25, 0xFF	; 255
     580:	c9 1a       	sub	r12, r25
     582:	d9 0a       	sbc	r13, r25
     584:	e9 0a       	sbc	r14, r25
     586:	e6 cf       	rjmp	.-52     	; 0x554 <pgm_copystring+0x3e>

00000588 <strftime>:
     588:	2f 92       	push	r2
     58a:	3f 92       	push	r3
     58c:	4f 92       	push	r4
     58e:	5f 92       	push	r5
     590:	6f 92       	push	r6
     592:	7f 92       	push	r7
     594:	8f 92       	push	r8
     596:	9f 92       	push	r9
     598:	af 92       	push	r10
     59a:	bf 92       	push	r11
     59c:	cf 92       	push	r12
     59e:	df 92       	push	r13
     5a0:	ef 92       	push	r14
     5a2:	ff 92       	push	r15
     5a4:	0f 93       	push	r16
     5a6:	1f 93       	push	r17
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
     5ac:	cd b7       	in	r28, 0x3d	; 61
     5ae:	de b7       	in	r29, 0x3e	; 62
     5b0:	a2 97       	sbiw	r28, 0x22	; 34
     5b2:	cd bf       	out	0x3d, r28	; 61
     5b4:	de bf       	out	0x3e, r29	; 62
     5b6:	2c 01       	movw	r4, r24
     5b8:	69 a3       	std	Y+33, r22	; 0x21
     5ba:	7a a3       	std	Y+34, r23	; 0x22
     5bc:	4a 01       	movw	r8, r20
     5be:	79 01       	movw	r14, r18
     5c0:	61 2c       	mov	r6, r1
     5c2:	71 2c       	mov	r7, r1
     5c4:	9e 01       	movw	r18, r28
     5c6:	2f 5f       	subi	r18, 0xFF	; 255
     5c8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ca:	69 01       	movw	r12, r18
     5cc:	84 e6       	ldi	r24, 0x64	; 100
     5ce:	28 2e       	mov	r2, r24
     5d0:	31 2c       	mov	r3, r1
     5d2:	91 e6       	ldi	r25, 0x61	; 97
     5d4:	a9 2e       	mov	r10, r25
     5d6:	96 e4       	ldi	r25, 0x46	; 70
     5d8:	b9 2e       	mov	r11, r25
     5da:	29 a1       	ldd	r18, Y+33	; 0x21
     5dc:	3a a1       	ldd	r19, Y+34	; 0x22
     5de:	62 16       	cp	r6, r18
     5e0:	73 06       	cpc	r7, r19
     5e2:	08 f0       	brcs	.+2      	; 0x5e6 <strftime+0x5e>
     5e4:	cd c2       	rjmp	.+1434   	; 0xb80 <strftime+0x5f8>
     5e6:	d4 01       	movw	r26, r8
     5e8:	8c 91       	ld	r24, X
     5ea:	85 32       	cpi	r24, 0x25	; 37
     5ec:	09 f0       	breq	.+2      	; 0x5f0 <strftime+0x68>
     5ee:	bc c2       	rjmp	.+1400   	; 0xb68 <strftime+0x5e0>
     5f0:	11 96       	adiw	r26, 0x01	; 1
     5f2:	1c 91       	ld	r17, X
     5f4:	15 34       	cpi	r17, 0x45	; 69
     5f6:	31 f0       	breq	.+12     	; 0x604 <strftime+0x7c>
     5f8:	1f 34       	cpi	r17, 0x4F	; 79
     5fa:	21 f0       	breq	.+8      	; 0x604 <strftime+0x7c>
     5fc:	b2 e0       	ldi	r27, 0x02	; 2
     5fe:	8b 0e       	add	r8, r27
     600:	91 1c       	adc	r9, r1
     602:	06 c0       	rjmp	.+12     	; 0x610 <strftime+0x88>
     604:	f4 01       	movw	r30, r8
     606:	12 81       	ldd	r17, Z+2	; 0x02
     608:	94 01       	movw	r18, r8
     60a:	2d 5f       	subi	r18, 0xFD	; 253
     60c:	3f 4f       	sbci	r19, 0xFF	; 255
     60e:	49 01       	movw	r8, r18
     610:	19 35       	cpi	r17, 0x59	; 89
     612:	09 f4       	brne	.+2      	; 0x616 <strftime+0x8e>
     614:	32 c2       	rjmp	.+1124   	; 0xa7a <strftime+0x4f2>
     616:	0c f0       	brlt	.+2      	; 0x61a <strftime+0x92>
     618:	60 c0       	rjmp	.+192    	; 0x6da <strftime+0x152>
     61a:	19 34       	cpi	r17, 0x49	; 73
     61c:	09 f4       	brne	.+2      	; 0x620 <strftime+0x98>
     61e:	3f c1       	rjmp	.+638    	; 0x89e <strftime+0x316>
     620:	44 f5       	brge	.+80     	; 0x672 <strftime+0xea>
     622:	13 34       	cpi	r17, 0x43	; 67
     624:	09 f4       	brne	.+2      	; 0x628 <strftime+0xa0>
     626:	e7 c0       	rjmp	.+462    	; 0x7f6 <strftime+0x26e>
     628:	54 f4       	brge	.+20     	; 0x63e <strftime+0xb6>
     62a:	11 34       	cpi	r17, 0x41	; 65
     62c:	09 f4       	brne	.+2      	; 0x630 <strftime+0xa8>
     62e:	be c0       	rjmp	.+380    	; 0x7ac <strftime+0x224>
     630:	0c f0       	brlt	.+2      	; 0x634 <strftime+0xac>
     632:	ca c0       	rjmp	.+404    	; 0x7c8 <strftime+0x240>
     634:	15 32       	cpi	r17, 0x25	; 37
     636:	09 f0       	breq	.+2      	; 0x63a <strftime+0xb2>
     638:	74 c2       	rjmp	.+1256   	; 0xb22 <strftime+0x59a>
     63a:	19 83       	std	Y+1, r17	; 0x01
     63c:	75 c2       	rjmp	.+1258   	; 0xb28 <strftime+0x5a0>
     63e:	16 34       	cpi	r17, 0x46	; 70
     640:	09 f4       	brne	.+2      	; 0x644 <strftime+0xbc>
     642:	ea c0       	rjmp	.+468    	; 0x818 <strftime+0x290>
     644:	64 f4       	brge	.+24     	; 0x65e <strftime+0xd6>
     646:	14 34       	cpi	r17, 0x44	; 68
     648:	09 f0       	breq	.+2      	; 0x64c <strftime+0xc4>
     64a:	6b c2       	rjmp	.+1238   	; 0xb22 <strftime+0x59a>
     64c:	f7 01       	movw	r30, r14
     64e:	86 81       	ldd	r24, Z+6	; 0x06
     650:	97 81       	ldd	r25, Z+7	; 0x07
     652:	b1 01       	movw	r22, r2
     654:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     658:	9f 93       	push	r25
     65a:	8f 93       	push	r24
     65c:	e7 c1       	rjmp	.+974    	; 0xa2c <strftime+0x4a4>
     65e:	17 34       	cpi	r17, 0x47	; 71
     660:	09 f4       	brne	.+2      	; 0x664 <strftime+0xdc>
     662:	f8 c0       	rjmp	.+496    	; 0x854 <strftime+0x2cc>
     664:	18 34       	cpi	r17, 0x48	; 72
     666:	09 f0       	breq	.+2      	; 0x66a <strftime+0xe2>
     668:	5c c2       	rjmp	.+1208   	; 0xb22 <strftime+0x59a>
     66a:	d7 01       	movw	r26, r14
     66c:	12 96       	adiw	r26, 0x02	; 2
     66e:	8c 91       	ld	r24, X
     670:	30 c1       	rjmp	.+608    	; 0x8d2 <strftime+0x34a>
     672:	14 35       	cpi	r17, 0x54	; 84
     674:	09 f4       	brne	.+2      	; 0x678 <strftime+0xf0>
     676:	89 c1       	rjmp	.+786    	; 0x98a <strftime+0x402>
     678:	64 f4       	brge	.+24     	; 0x692 <strftime+0x10a>
     67a:	12 35       	cpi	r17, 0x52	; 82
     67c:	09 f4       	brne	.+2      	; 0x680 <strftime+0xf8>
     67e:	6e c1       	rjmp	.+732    	; 0x95c <strftime+0x3d4>
     680:	0c f0       	brlt	.+2      	; 0x684 <strftime+0xfc>
     682:	25 c1       	rjmp	.+586    	; 0x8ce <strftime+0x346>
     684:	1d 34       	cpi	r17, 0x4D	; 77
     686:	09 f0       	breq	.+2      	; 0x68a <strftime+0x102>
     688:	4c c2       	rjmp	.+1176   	; 0xb22 <strftime+0x59a>
     68a:	d7 01       	movw	r26, r14
     68c:	11 96       	adiw	r26, 0x01	; 1
     68e:	8c 91       	ld	r24, X
     690:	20 c1       	rjmp	.+576    	; 0x8d2 <strftime+0x34a>
     692:	16 35       	cpi	r17, 0x56	; 86
     694:	09 f4       	brne	.+2      	; 0x698 <strftime+0x110>
     696:	a5 c1       	rjmp	.+842    	; 0x9e2 <strftime+0x45a>
     698:	0c f4       	brge	.+2      	; 0x69c <strftime+0x114>
     69a:	a1 c1       	rjmp	.+834    	; 0x9de <strftime+0x456>
     69c:	17 35       	cpi	r17, 0x57	; 87
     69e:	09 f4       	brne	.+2      	; 0x6a2 <strftime+0x11a>
     6a0:	b4 c1       	rjmp	.+872    	; 0xa0a <strftime+0x482>
     6a2:	18 35       	cpi	r17, 0x58	; 88
     6a4:	09 f0       	breq	.+2      	; 0x6a8 <strftime+0x120>
     6a6:	3d c2       	rjmp	.+1146   	; 0xb22 <strftime+0x59a>
     6a8:	f7 01       	movw	r30, r14
     6aa:	80 81       	ld	r24, Z
     6ac:	28 2f       	mov	r18, r24
     6ae:	08 2e       	mov	r0, r24
     6b0:	00 0c       	add	r0, r0
     6b2:	33 0b       	sbc	r19, r19
     6b4:	3f 93       	push	r19
     6b6:	8f 93       	push	r24
     6b8:	81 81       	ldd	r24, Z+1	; 0x01
     6ba:	28 2f       	mov	r18, r24
     6bc:	08 2e       	mov	r0, r24
     6be:	00 0c       	add	r0, r0
     6c0:	33 0b       	sbc	r19, r19
     6c2:	3f 93       	push	r19
     6c4:	8f 93       	push	r24
     6c6:	82 81       	ldd	r24, Z+2	; 0x02
     6c8:	28 2f       	mov	r18, r24
     6ca:	08 2e       	mov	r0, r24
     6cc:	00 0c       	add	r0, r0
     6ce:	33 0b       	sbc	r19, r19
     6d0:	3f 93       	push	r19
     6d2:	8f 93       	push	r24
     6d4:	89 ea       	ldi	r24, 0xA9	; 169
     6d6:	96 e4       	ldi	r25, 0x46	; 70
     6d8:	c0 c1       	rjmp	.+896    	; 0xa5a <strftime+0x4d2>
     6da:	1d 36       	cpi	r17, 0x6D	; 109
     6dc:	09 f4       	brne	.+2      	; 0x6e0 <strftime+0x158>
     6de:	f0 c0       	rjmp	.+480    	; 0x8c0 <strftime+0x338>
     6e0:	ac f5       	brge	.+106    	; 0x74c <strftime+0x1c4>
     6e2:	14 36       	cpi	r17, 0x64	; 100
     6e4:	09 f4       	brne	.+2      	; 0x6e8 <strftime+0x160>
     6e6:	94 c0       	rjmp	.+296    	; 0x810 <strftime+0x288>
     6e8:	74 f4       	brge	.+28     	; 0x706 <strftime+0x17e>
     6ea:	12 36       	cpi	r17, 0x62	; 98
     6ec:	09 f4       	brne	.+2      	; 0x6f0 <strftime+0x168>
     6ee:	66 c0       	rjmp	.+204    	; 0x7bc <strftime+0x234>
     6f0:	0c f0       	brlt	.+2      	; 0x6f4 <strftime+0x16c>
     6f2:	75 c0       	rjmp	.+234    	; 0x7de <strftime+0x256>
     6f4:	11 36       	cpi	r17, 0x61	; 97
     6f6:	09 f0       	breq	.+2      	; 0x6fa <strftime+0x172>
     6f8:	14 c2       	rjmp	.+1064   	; 0xb22 <strftime+0x59a>
     6fa:	03 e0       	ldi	r16, 0x03	; 3
     6fc:	96 01       	movw	r18, r12
     6fe:	d7 01       	movw	r26, r14
     700:	14 96       	adiw	r26, 0x04	; 4
     702:	4c 91       	ld	r20, X
     704:	57 c0       	rjmp	.+174    	; 0x7b4 <strftime+0x22c>
     706:	17 36       	cpi	r17, 0x67	; 103
     708:	09 f4       	brne	.+2      	; 0x70c <strftime+0x184>
     70a:	a4 c0       	rjmp	.+328    	; 0x854 <strftime+0x2cc>
     70c:	74 f4       	brge	.+28     	; 0x72a <strftime+0x1a2>
     70e:	15 36       	cpi	r17, 0x65	; 101
     710:	09 f0       	breq	.+2      	; 0x714 <strftime+0x18c>
     712:	07 c2       	rjmp	.+1038   	; 0xb22 <strftime+0x59a>
     714:	f7 01       	movw	r30, r14
     716:	83 81       	ldd	r24, Z+3	; 0x03
     718:	28 2f       	mov	r18, r24
     71a:	08 2e       	mov	r0, r24
     71c:	00 0c       	add	r0, r0
     71e:	33 0b       	sbc	r19, r19
     720:	3f 93       	push	r19
     722:	8f 93       	push	r24
     724:	86 e6       	ldi	r24, 0x66	; 102
     726:	96 e4       	ldi	r25, 0x46	; 70
     728:	c8 c0       	rjmp	.+400    	; 0x8ba <strftime+0x332>
     72a:	18 36       	cpi	r17, 0x68	; 104
     72c:	09 f4       	brne	.+2      	; 0x730 <strftime+0x1a8>
     72e:	46 c0       	rjmp	.+140    	; 0x7bc <strftime+0x234>
     730:	1a 36       	cpi	r17, 0x6A	; 106
     732:	09 f0       	breq	.+2      	; 0x736 <strftime+0x1ae>
     734:	f6 c1       	rjmp	.+1004   	; 0xb22 <strftime+0x59a>
     736:	d7 01       	movw	r26, r14
     738:	18 96       	adiw	r26, 0x08	; 8
     73a:	8d 91       	ld	r24, X+
     73c:	9c 91       	ld	r25, X
     73e:	19 97       	sbiw	r26, 0x09	; 9
     740:	01 96       	adiw	r24, 0x01	; 1
     742:	9f 93       	push	r25
     744:	8f 93       	push	r24
     746:	8c e7       	ldi	r24, 0x7C	; 124
     748:	96 e4       	ldi	r25, 0x46	; 70
     74a:	b7 c0       	rjmp	.+366    	; 0x8ba <strftime+0x332>
     74c:	15 37       	cpi	r17, 0x75	; 117
     74e:	09 f4       	brne	.+2      	; 0x752 <strftime+0x1ca>
     750:	35 c1       	rjmp	.+618    	; 0x9bc <strftime+0x434>
     752:	b4 f4       	brge	.+44     	; 0x780 <strftime+0x1f8>
     754:	10 37       	cpi	r17, 0x70	; 112
     756:	09 f4       	brne	.+2      	; 0x75a <strftime+0x1d2>
     758:	c2 c0       	rjmp	.+388    	; 0x8de <strftime+0x356>
     75a:	34 f4       	brge	.+12     	; 0x768 <strftime+0x1e0>
     75c:	1e 36       	cpi	r17, 0x6E	; 110
     75e:	09 f0       	breq	.+2      	; 0x762 <strftime+0x1da>
     760:	e0 c1       	rjmp	.+960    	; 0xb22 <strftime+0x59a>
     762:	8a e0       	ldi	r24, 0x0A	; 10
     764:	89 83       	std	Y+1, r24	; 0x01
     766:	e0 c1       	rjmp	.+960    	; 0xb28 <strftime+0x5a0>
     768:	12 37       	cpi	r17, 0x72	; 114
     76a:	09 f4       	brne	.+2      	; 0x76e <strftime+0x1e6>
     76c:	c6 c0       	rjmp	.+396    	; 0x8fa <strftime+0x372>
     76e:	14 37       	cpi	r17, 0x74	; 116
     770:	09 f0       	breq	.+2      	; 0x774 <strftime+0x1ec>
     772:	d7 c1       	rjmp	.+942    	; 0xb22 <strftime+0x59a>
     774:	62 e9       	ldi	r22, 0x92	; 146
     776:	76 e4       	ldi	r23, 0x46	; 70
     778:	c6 01       	movw	r24, r12
     77a:	0e 94 e8 7b 	call	0xf7d0	; 0xf7d0 <strcpy>
     77e:	d4 c1       	rjmp	.+936    	; 0xb28 <strftime+0x5a0>
     780:	18 37       	cpi	r17, 0x78	; 120
     782:	09 f4       	brne	.+2      	; 0x786 <strftime+0x1fe>
     784:	48 c1       	rjmp	.+656    	; 0xa16 <strftime+0x48e>
     786:	5c f4       	brge	.+22     	; 0x79e <strftime+0x216>
     788:	17 37       	cpi	r17, 0x77	; 119
     78a:	09 f0       	breq	.+2      	; 0x78e <strftime+0x206>
     78c:	ca c1       	rjmp	.+916    	; 0xb22 <strftime+0x59a>
     78e:	f7 01       	movw	r30, r14
     790:	84 81       	ldd	r24, Z+4	; 0x04
     792:	28 2f       	mov	r18, r24
     794:	08 2e       	mov	r0, r24
     796:	00 0c       	add	r0, r0
     798:	33 0b       	sbc	r19, r19
     79a:	3f 93       	push	r19
     79c:	74 c1       	rjmp	.+744    	; 0xa86 <strftime+0x4fe>
     79e:	19 37       	cpi	r17, 0x79	; 121
     7a0:	09 f4       	brne	.+2      	; 0x7a4 <strftime+0x21c>
     7a2:	5e c1       	rjmp	.+700    	; 0xa60 <strftime+0x4d8>
     7a4:	1a 37       	cpi	r17, 0x7A	; 122
     7a6:	09 f4       	brne	.+2      	; 0x7aa <strftime+0x222>
     7a8:	7e c1       	rjmp	.+764    	; 0xaa6 <strftime+0x51e>
     7aa:	bb c1       	rjmp	.+886    	; 0xb22 <strftime+0x59a>
     7ac:	0f ef       	ldi	r16, 0xFF	; 255
     7ae:	96 01       	movw	r18, r12
     7b0:	f7 01       	movw	r30, r14
     7b2:	44 81       	ldd	r20, Z+4	; 0x04
     7b4:	68 e3       	ldi	r22, 0x38	; 56
     7b6:	73 e0       	ldi	r23, 0x03	; 3
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	0d c0       	rjmp	.+26     	; 0x7d6 <strftime+0x24e>
     7bc:	03 e0       	ldi	r16, 0x03	; 3
     7be:	96 01       	movw	r18, r12
     7c0:	d7 01       	movw	r26, r14
     7c2:	15 96       	adiw	r26, 0x05	; 5
     7c4:	4c 91       	ld	r20, X
     7c6:	04 c0       	rjmp	.+8      	; 0x7d0 <strftime+0x248>
     7c8:	0f ef       	ldi	r16, 0xFF	; 255
     7ca:	96 01       	movw	r18, r12
     7cc:	f7 01       	movw	r30, r14
     7ce:	45 81       	ldd	r20, Z+5	; 0x05
     7d0:	61 ee       	ldi	r22, 0xE1	; 225
     7d2:	72 e0       	ldi	r23, 0x02	; 2
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	0e 94 8b 02 	call	0x516	; 0x516 <pgm_copystring>
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	a7 c1       	rjmp	.+846    	; 0xb2c <strftime+0x5a4>
     7de:	b6 01       	movw	r22, r12
     7e0:	c7 01       	movw	r24, r14
     7e2:	0e 94 27 06 	call	0xc4e	; 0xc4e <asctime_r>
     7e6:	f6 01       	movw	r30, r12
     7e8:	cf 01       	movw	r24, r30
     7ea:	8c 19       	sub	r24, r12
     7ec:	9d 09       	sbc	r25, r13
     7ee:	21 91       	ld	r18, Z+
     7f0:	21 11       	cpse	r18, r1
     7f2:	fa cf       	rjmp	.-12     	; 0x7e8 <strftime+0x260>
     7f4:	9b c1       	rjmp	.+822    	; 0xb2c <strftime+0x5a4>
     7f6:	d7 01       	movw	r26, r14
     7f8:	16 96       	adiw	r26, 0x06	; 6
     7fa:	8d 91       	ld	r24, X+
     7fc:	9c 91       	ld	r25, X
     7fe:	17 97       	sbiw	r26, 0x07	; 7
     800:	84 59       	subi	r24, 0x94	; 148
     802:	98 4f       	sbci	r25, 0xF8	; 248
     804:	b1 01       	movw	r22, r2
     806:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     80a:	7f 93       	push	r23
     80c:	6f 93       	push	r22
     80e:	3b c0       	rjmp	.+118    	; 0x886 <strftime+0x2fe>
     810:	d7 01       	movw	r26, r14
     812:	13 96       	adiw	r26, 0x03	; 3
     814:	8c 91       	ld	r24, X
     816:	5d c0       	rjmp	.+186    	; 0x8d2 <strftime+0x34a>
     818:	d7 01       	movw	r26, r14
     81a:	13 96       	adiw	r26, 0x03	; 3
     81c:	8c 91       	ld	r24, X
     81e:	13 97       	sbiw	r26, 0x03	; 3
     820:	28 2f       	mov	r18, r24
     822:	08 2e       	mov	r0, r24
     824:	00 0c       	add	r0, r0
     826:	33 0b       	sbc	r19, r19
     828:	3f 93       	push	r19
     82a:	8f 93       	push	r24
     82c:	15 96       	adiw	r26, 0x05	; 5
     82e:	8c 91       	ld	r24, X
     830:	15 97       	sbiw	r26, 0x05	; 5
     832:	08 2e       	mov	r0, r24
     834:	00 0c       	add	r0, r0
     836:	99 0b       	sbc	r25, r25
     838:	01 96       	adiw	r24, 0x01	; 1
     83a:	9f 93       	push	r25
     83c:	8f 93       	push	r24
     83e:	16 96       	adiw	r26, 0x06	; 6
     840:	8d 91       	ld	r24, X+
     842:	9c 91       	ld	r25, X
     844:	17 97       	sbiw	r26, 0x07	; 7
     846:	84 59       	subi	r24, 0x94	; 148
     848:	98 4f       	sbci	r25, 0xF8	; 248
     84a:	9f 93       	push	r25
     84c:	8f 93       	push	r24
     84e:	8a e6       	ldi	r24, 0x6A	; 106
     850:	96 e4       	ldi	r25, 0x46	; 70
     852:	03 c1       	rjmp	.+518    	; 0xa5a <strftime+0x4d2>
     854:	d7 01       	movw	r26, r14
     856:	18 96       	adiw	r26, 0x08	; 8
     858:	6d 91       	ld	r22, X+
     85a:	7c 91       	ld	r23, X
     85c:	19 97       	sbiw	r26, 0x09	; 9
     85e:	16 96       	adiw	r26, 0x06	; 6
     860:	8d 91       	ld	r24, X+
     862:	9c 91       	ld	r25, X
     864:	17 97       	sbiw	r26, 0x07	; 7
     866:	ae 01       	movw	r20, r28
     868:	45 5e       	subi	r20, 0xE5	; 229
     86a:	5f 4f       	sbci	r21, 0xFF	; 255
     86c:	84 59       	subi	r24, 0x94	; 148
     86e:	98 4f       	sbci	r25, 0xF8	; 248
     870:	0e 94 80 07 	call	0xf00	; 0xf00 <iso_week_date_r>
     874:	17 36       	cpi	r17, 0x67	; 103
     876:	51 f4       	brne	.+20     	; 0x88c <strftime+0x304>
     878:	8b 8d       	ldd	r24, Y+27	; 0x1b
     87a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     87c:	b1 01       	movw	r22, r2
     87e:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     882:	9f 93       	push	r25
     884:	8f 93       	push	r24
     886:	e2 e7       	ldi	r30, 0x72	; 114
     888:	f6 e4       	ldi	r31, 0x46	; 70
     88a:	a6 c0       	rjmp	.+332    	; 0x9d8 <strftime+0x450>
     88c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     88e:	8f 93       	push	r24
     890:	8b 8d       	ldd	r24, Y+27	; 0x1b
     892:	8f 93       	push	r24
     894:	47 e7       	ldi	r20, 0x77	; 119
     896:	56 e4       	ldi	r21, 0x46	; 70
     898:	5f 93       	push	r21
     89a:	4f 93       	push	r20
     89c:	f9 c0       	rjmp	.+498    	; 0xa90 <strftime+0x508>
     89e:	f7 01       	movw	r30, r14
     8a0:	82 81       	ldd	r24, Z+2	; 0x02
     8a2:	6c e0       	ldi	r22, 0x0C	; 12
     8a4:	0e 94 95 80 	call	0x1012a	; 0x1012a <__divmodqi4>
     8a8:	99 23       	and	r25, r25
     8aa:	21 f0       	breq	.+8      	; 0x8b4 <strftime+0x32c>
     8ac:	89 2f       	mov	r24, r25
     8ae:	99 0f       	add	r25, r25
     8b0:	99 0b       	sbc	r25, r25
     8b2:	de c0       	rjmp	.+444    	; 0xa70 <strftime+0x4e8>
     8b4:	8c e0       	ldi	r24, 0x0C	; 12
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	db c0       	rjmp	.+438    	; 0xa70 <strftime+0x4e8>
     8ba:	9f 93       	push	r25
     8bc:	8f 93       	push	r24
     8be:	e8 c0       	rjmp	.+464    	; 0xa90 <strftime+0x508>
     8c0:	f7 01       	movw	r30, r14
     8c2:	85 81       	ldd	r24, Z+5	; 0x05
     8c4:	08 2e       	mov	r0, r24
     8c6:	00 0c       	add	r0, r0
     8c8:	99 0b       	sbc	r25, r25
     8ca:	01 96       	adiw	r24, 0x01	; 1
     8cc:	d1 c0       	rjmp	.+418    	; 0xa70 <strftime+0x4e8>
     8ce:	d7 01       	movw	r26, r14
     8d0:	8c 91       	ld	r24, X
     8d2:	28 2f       	mov	r18, r24
     8d4:	08 2e       	mov	r0, r24
     8d6:	00 0c       	add	r0, r0
     8d8:	33 0b       	sbc	r19, r19
     8da:	3f 93       	push	r19
     8dc:	ca c0       	rjmp	.+404    	; 0xa72 <strftime+0x4ea>
     8de:	81 e4       	ldi	r24, 0x41	; 65
     8e0:	89 83       	std	Y+1, r24	; 0x01
     8e2:	f7 01       	movw	r30, r14
     8e4:	82 81       	ldd	r24, Z+2	; 0x02
     8e6:	8c 30       	cpi	r24, 0x0C	; 12
     8e8:	14 f0       	brlt	.+4      	; 0x8ee <strftime+0x366>
     8ea:	80 e5       	ldi	r24, 0x50	; 80
     8ec:	89 83       	std	Y+1, r24	; 0x01
     8ee:	8d e4       	ldi	r24, 0x4D	; 77
     8f0:	8a 83       	std	Y+2, r24	; 0x02
     8f2:	1b 82       	std	Y+3, r1	; 0x03
     8f4:	82 e0       	ldi	r24, 0x02	; 2
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	19 c1       	rjmp	.+562    	; 0xb2c <strftime+0x5a4>
     8fa:	d7 01       	movw	r26, r14
     8fc:	12 96       	adiw	r26, 0x02	; 2
     8fe:	8c 91       	ld	r24, X
     900:	6c e0       	ldi	r22, 0x0C	; 12
     902:	0e 94 95 80 	call	0x1012a	; 0x1012a <__divmodqi4>
     906:	99 23       	and	r25, r25
     908:	21 f0       	breq	.+8      	; 0x912 <strftime+0x38a>
     90a:	89 2f       	mov	r24, r25
     90c:	99 0f       	add	r25, r25
     90e:	99 0b       	sbc	r25, r25
     910:	02 c0       	rjmp	.+4      	; 0x916 <strftime+0x38e>
     912:	8c e0       	ldi	r24, 0x0C	; 12
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	f7 01       	movw	r30, r14
     918:	20 81       	ld	r18, Z
     91a:	42 2f       	mov	r20, r18
     91c:	02 2e       	mov	r0, r18
     91e:	00 0c       	add	r0, r0
     920:	55 0b       	sbc	r21, r21
     922:	5f 93       	push	r21
     924:	2f 93       	push	r18
     926:	21 81       	ldd	r18, Z+1	; 0x01
     928:	42 2f       	mov	r20, r18
     92a:	02 2e       	mov	r0, r18
     92c:	00 0c       	add	r0, r0
     92e:	55 0b       	sbc	r21, r21
     930:	5f 93       	push	r21
     932:	2f 93       	push	r18
     934:	9f 93       	push	r25
     936:	8f 93       	push	r24
     938:	21 e8       	ldi	r18, 0x81	; 129
     93a:	36 e4       	ldi	r19, 0x46	; 70
     93c:	3f 93       	push	r19
     93e:	2f 93       	push	r18
     940:	df 92       	push	r13
     942:	cf 92       	push	r12
     944:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
     948:	cd bf       	out	0x3d, r28	; 61
     94a:	de bf       	out	0x3e, r29	; 62
     94c:	f7 01       	movw	r30, r14
     94e:	22 81       	ldd	r18, Z+2	; 0x02
     950:	2c 30       	cpi	r18, 0x0C	; 12
     952:	0c f4       	brge	.+2      	; 0x956 <strftime+0x3ce>
     954:	eb c0       	rjmp	.+470    	; 0xb2c <strftime+0x5a4>
     956:	20 e5       	ldi	r18, 0x50	; 80
     958:	2b 87       	std	Y+11, r18	; 0x0b
     95a:	e8 c0       	rjmp	.+464    	; 0xb2c <strftime+0x5a4>
     95c:	d7 01       	movw	r26, r14
     95e:	11 96       	adiw	r26, 0x01	; 1
     960:	8c 91       	ld	r24, X
     962:	11 97       	sbiw	r26, 0x01	; 1
     964:	28 2f       	mov	r18, r24
     966:	08 2e       	mov	r0, r24
     968:	00 0c       	add	r0, r0
     96a:	33 0b       	sbc	r19, r19
     96c:	3f 93       	push	r19
     96e:	8f 93       	push	r24
     970:	12 96       	adiw	r26, 0x02	; 2
     972:	8c 91       	ld	r24, X
     974:	28 2f       	mov	r18, r24
     976:	08 2e       	mov	r0, r24
     978:	00 0c       	add	r0, r0
     97a:	33 0b       	sbc	r19, r19
     97c:	3f 93       	push	r19
     97e:	8f 93       	push	r24
     980:	89 e9       	ldi	r24, 0x99	; 153
     982:	96 e4       	ldi	r25, 0x46	; 70
     984:	9f 93       	push	r25
     986:	8f 93       	push	r24
     988:	c5 c0       	rjmp	.+394    	; 0xb14 <strftime+0x58c>
     98a:	f7 01       	movw	r30, r14
     98c:	80 81       	ld	r24, Z
     98e:	28 2f       	mov	r18, r24
     990:	08 2e       	mov	r0, r24
     992:	00 0c       	add	r0, r0
     994:	33 0b       	sbc	r19, r19
     996:	3f 93       	push	r19
     998:	8f 93       	push	r24
     99a:	81 81       	ldd	r24, Z+1	; 0x01
     99c:	28 2f       	mov	r18, r24
     99e:	08 2e       	mov	r0, r24
     9a0:	00 0c       	add	r0, r0
     9a2:	33 0b       	sbc	r19, r19
     9a4:	3f 93       	push	r19
     9a6:	8f 93       	push	r24
     9a8:	82 81       	ldd	r24, Z+2	; 0x02
     9aa:	28 2f       	mov	r18, r24
     9ac:	08 2e       	mov	r0, r24
     9ae:	00 0c       	add	r0, r0
     9b0:	33 0b       	sbc	r19, r19
     9b2:	3f 93       	push	r19
     9b4:	8f 93       	push	r24
     9b6:	84 e9       	ldi	r24, 0x94	; 148
     9b8:	96 e4       	ldi	r25, 0x46	; 70
     9ba:	4f c0       	rjmp	.+158    	; 0xa5a <strftime+0x4d2>
     9bc:	d7 01       	movw	r26, r14
     9be:	14 96       	adiw	r26, 0x04	; 4
     9c0:	8c 91       	ld	r24, X
     9c2:	08 2e       	mov	r0, r24
     9c4:	00 0c       	add	r0, r0
     9c6:	99 0b       	sbc	r25, r25
     9c8:	00 97       	sbiw	r24, 0x00	; 0
     9ca:	11 f4       	brne	.+4      	; 0x9d0 <strftime+0x448>
     9cc:	87 e0       	ldi	r24, 0x07	; 7
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	9f 93       	push	r25
     9d2:	8f 93       	push	r24
     9d4:	e3 ea       	ldi	r30, 0xA3	; 163
     9d6:	f6 e4       	ldi	r31, 0x46	; 70
     9d8:	ff 93       	push	r31
     9da:	ef 93       	push	r30
     9dc:	59 c0       	rjmp	.+178    	; 0xa90 <strftime+0x508>
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	15 c0       	rjmp	.+42     	; 0xa0c <strftime+0x484>
     9e2:	d7 01       	movw	r26, r14
     9e4:	18 96       	adiw	r26, 0x08	; 8
     9e6:	6d 91       	ld	r22, X+
     9e8:	7c 91       	ld	r23, X
     9ea:	19 97       	sbiw	r26, 0x09	; 9
     9ec:	16 96       	adiw	r26, 0x06	; 6
     9ee:	8d 91       	ld	r24, X+
     9f0:	9c 91       	ld	r25, X
     9f2:	17 97       	sbiw	r26, 0x07	; 7
     9f4:	ae 01       	movw	r20, r28
     9f6:	45 5e       	subi	r20, 0xE5	; 229
     9f8:	5f 4f       	sbci	r21, 0xFF	; 255
     9fa:	84 59       	subi	r24, 0x94	; 148
     9fc:	98 4f       	sbci	r25, 0xF8	; 248
     9fe:	0e 94 80 07 	call	0xf00	; 0xf00 <iso_week_date_r>
     a02:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a04:	8f 93       	push	r24
     a06:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a08:	34 c0       	rjmp	.+104    	; 0xa72 <strftime+0x4ea>
     a0a:	61 e0       	ldi	r22, 0x01	; 1
     a0c:	c7 01       	movw	r24, r14
     a0e:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <week_of_year>
     a12:	1f 92       	push	r1
     a14:	2e c0       	rjmp	.+92     	; 0xa72 <strftime+0x4ea>
     a16:	d7 01       	movw	r26, r14
     a18:	16 96       	adiw	r26, 0x06	; 6
     a1a:	8d 91       	ld	r24, X+
     a1c:	9c 91       	ld	r25, X
     a1e:	17 97       	sbiw	r26, 0x07	; 7
     a20:	b1 01       	movw	r22, r2
     a22:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     a26:	9f 93       	push	r25
     a28:	8f 93       	push	r24
     a2a:	f7 01       	movw	r30, r14
     a2c:	83 81       	ldd	r24, Z+3	; 0x03
     a2e:	28 2f       	mov	r18, r24
     a30:	08 2e       	mov	r0, r24
     a32:	00 0c       	add	r0, r0
     a34:	33 0b       	sbc	r19, r19
     a36:	3f 93       	push	r19
     a38:	8f 93       	push	r24
     a3a:	85 81       	ldd	r24, Z+5	; 0x05
     a3c:	08 2e       	mov	r0, r24
     a3e:	00 0c       	add	r0, r0
     a40:	99 0b       	sbc	r25, r25
     a42:	01 96       	adiw	r24, 0x01	; 1
     a44:	9f 93       	push	r25
     a46:	8f 93       	push	r24
     a48:	27 e5       	ldi	r18, 0x57	; 87
     a4a:	36 e4       	ldi	r19, 0x46	; 70
     a4c:	3f 93       	push	r19
     a4e:	2f 93       	push	r18
     a50:	df 92       	push	r13
     a52:	cf 92       	push	r12
     a54:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
     a58:	61 c0       	rjmp	.+194    	; 0xb1c <strftime+0x594>
     a5a:	9f 93       	push	r25
     a5c:	8f 93       	push	r24
     a5e:	f8 cf       	rjmp	.-16     	; 0xa50 <strftime+0x4c8>
     a60:	d7 01       	movw	r26, r14
     a62:	16 96       	adiw	r26, 0x06	; 6
     a64:	8d 91       	ld	r24, X+
     a66:	9c 91       	ld	r25, X
     a68:	17 97       	sbiw	r26, 0x07	; 7
     a6a:	b1 01       	movw	r22, r2
     a6c:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     a70:	9f 93       	push	r25
     a72:	8f 93       	push	r24
     a74:	bf 92       	push	r11
     a76:	af 92       	push	r10
     a78:	0b c0       	rjmp	.+22     	; 0xa90 <strftime+0x508>
     a7a:	f7 01       	movw	r30, r14
     a7c:	86 81       	ldd	r24, Z+6	; 0x06
     a7e:	97 81       	ldd	r25, Z+7	; 0x07
     a80:	84 59       	subi	r24, 0x94	; 148
     a82:	98 4f       	sbci	r25, 0xF8	; 248
     a84:	9f 93       	push	r25
     a86:	8f 93       	push	r24
     a88:	26 ea       	ldi	r18, 0xA6	; 166
     a8a:	36 e4       	ldi	r19, 0x46	; 70
     a8c:	3f 93       	push	r19
     a8e:	2f 93       	push	r18
     a90:	df 92       	push	r13
     a92:	cf 92       	push	r12
     a94:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
     a98:	0f 90       	pop	r0
     a9a:	0f 90       	pop	r0
     a9c:	0f 90       	pop	r0
     a9e:	0f 90       	pop	r0
     aa0:	0f 90       	pop	r0
     aa2:	0f 90       	pop	r0
     aa4:	43 c0       	rjmp	.+134    	; 0xb2c <strftime+0x5a4>
     aa6:	60 91 df 4a 	lds	r22, 0x4ADF	; 0x804adf <__utc_offset>
     aaa:	70 91 e0 4a 	lds	r23, 0x4AE0	; 0x804ae0 <__utc_offset+0x1>
     aae:	80 91 e1 4a 	lds	r24, 0x4AE1	; 0x804ae1 <__utc_offset+0x2>
     ab2:	90 91 e2 4a 	lds	r25, 0x4AE2	; 0x804ae2 <__utc_offset+0x3>
     ab6:	2c e3       	ldi	r18, 0x3C	; 60
     ab8:	30 e0       	ldi	r19, 0x00	; 0
     aba:	40 e0       	ldi	r20, 0x00	; 0
     abc:	50 e0       	ldi	r21, 0x00	; 0
     abe:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
     ac2:	89 01       	movw	r16, r18
     ac4:	9a 01       	movw	r18, r20
     ac6:	f8 01       	movw	r30, r16
     ac8:	d7 01       	movw	r26, r14
     aca:	1a 96       	adiw	r26, 0x0a	; 10
     acc:	8d 91       	ld	r24, X+
     ace:	9c 91       	ld	r25, X
     ad0:	1b 97       	sbiw	r26, 0x0b	; 11
     ad2:	6c e3       	ldi	r22, 0x3C	; 60
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     ada:	16 16       	cp	r1, r22
     adc:	17 06       	cpc	r1, r23
     ade:	1c f4       	brge	.+6      	; 0xae6 <strftime+0x55e>
     ae0:	fb 01       	movw	r30, r22
     ae2:	e0 0f       	add	r30, r16
     ae4:	f1 1f       	adc	r31, r17
     ae6:	cf 01       	movw	r24, r30
     ae8:	6c e3       	ldi	r22, 0x3C	; 60
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     af0:	97 ff       	sbrs	r25, 7
     af2:	03 c0       	rjmp	.+6      	; 0xafa <strftime+0x572>
     af4:	91 95       	neg	r25
     af6:	81 95       	neg	r24
     af8:	91 09       	sbc	r25, r1
     afa:	9f 93       	push	r25
     afc:	8f 93       	push	r24
     afe:	cf 01       	movw	r24, r30
     b00:	6c e3       	ldi	r22, 0x3C	; 60
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     b08:	7f 93       	push	r23
     b0a:	6f 93       	push	r22
     b0c:	e8 eb       	ldi	r30, 0xB8	; 184
     b0e:	f6 e4       	ldi	r31, 0x46	; 70
     b10:	ff 93       	push	r31
     b12:	ef 93       	push	r30
     b14:	df 92       	push	r13
     b16:	cf 92       	push	r12
     b18:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
     b1c:	cd bf       	out	0x3d, r28	; 61
     b1e:	de bf       	out	0x3e, r29	; 62
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <strftime+0x5a4>
     b22:	8f e3       	ldi	r24, 0x3F	; 63
     b24:	89 83       	std	Y+1, r24	; 0x01
     b26:	1a 82       	std	Y+2, r1	; 0x02
     b28:	81 e0       	ldi	r24, 0x01	; 1
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	93 01       	movw	r18, r6
     b2e:	28 0f       	add	r18, r24
     b30:	39 1f       	adc	r19, r25
     b32:	a9 a1       	ldd	r26, Y+33	; 0x21
     b34:	ba a1       	ldd	r27, Y+34	; 0x22
     b36:	2a 17       	cp	r18, r26
     b38:	3b 07       	cpc	r19, r27
     b3a:	98 f4       	brcc	.+38     	; 0xb62 <strftime+0x5da>
     b3c:	d2 01       	movw	r26, r4
     b3e:	f6 01       	movw	r30, r12
     b40:	af 01       	movw	r20, r30
     b42:	4c 19       	sub	r20, r12
     b44:	5d 09       	sbc	r21, r13
     b46:	48 17       	cp	r20, r24
     b48:	59 07       	cpc	r21, r25
     b4a:	1c f4       	brge	.+6      	; 0xb52 <strftime+0x5ca>
     b4c:	41 91       	ld	r20, Z+
     b4e:	4d 93       	st	X+, r20
     b50:	f7 cf       	rjmp	.-18     	; 0xb40 <strftime+0x5b8>
     b52:	97 ff       	sbrs	r25, 7
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <strftime+0x5d2>
     b56:	80 e0       	ldi	r24, 0x00	; 0
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	48 0e       	add	r4, r24
     b5c:	59 1e       	adc	r5, r25
     b5e:	39 01       	movw	r6, r18
     b60:	3c cd       	rjmp	.-1416   	; 0x5da <strftime+0x52>
     b62:	f2 01       	movw	r30, r4
     b64:	10 82       	st	Z, r1
     b66:	0e c0       	rjmp	.+28     	; 0xb84 <strftime+0x5fc>
     b68:	d2 01       	movw	r26, r4
     b6a:	8d 93       	st	X+, r24
     b6c:	2d 01       	movw	r4, r26
     b6e:	bf ef       	ldi	r27, 0xFF	; 255
     b70:	6b 1a       	sub	r6, r27
     b72:	7b 0a       	sbc	r7, r27
     b74:	88 23       	and	r24, r24
     b76:	31 f0       	breq	.+12     	; 0xb84 <strftime+0x5fc>
     b78:	ef ef       	ldi	r30, 0xFF	; 255
     b7a:	8e 1a       	sub	r8, r30
     b7c:	9e 0a       	sbc	r9, r30
     b7e:	2d cd       	rjmp	.-1446   	; 0x5da <strftime+0x52>
     b80:	d2 01       	movw	r26, r4
     b82:	1c 92       	st	X, r1
     b84:	c3 01       	movw	r24, r6
     b86:	a2 96       	adiw	r28, 0x22	; 34
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	df 91       	pop	r29
     b8e:	cf 91       	pop	r28
     b90:	1f 91       	pop	r17
     b92:	0f 91       	pop	r16
     b94:	ff 90       	pop	r15
     b96:	ef 90       	pop	r14
     b98:	df 90       	pop	r13
     b9a:	cf 90       	pop	r12
     b9c:	bf 90       	pop	r11
     b9e:	af 90       	pop	r10
     ba0:	9f 90       	pop	r9
     ba2:	8f 90       	pop	r8
     ba4:	7f 90       	pop	r7
     ba6:	6f 90       	pop	r6
     ba8:	5f 90       	pop	r5
     baa:	4f 90       	pop	r4
     bac:	3f 90       	pop	r3
     bae:	2f 90       	pop	r2
     bb0:	08 95       	ret

00000bb2 <time>:
     bb2:	fc 01       	movw	r30, r24
     bb4:	0f b6       	in	r0, 0x3f	; 63
     bb6:	f8 94       	cli
     bb8:	60 91 cf 4a 	lds	r22, 0x4ACF	; 0x804acf <__system_time>
     bbc:	70 91 d0 4a 	lds	r23, 0x4AD0	; 0x804ad0 <__system_time+0x1>
     bc0:	80 91 d1 4a 	lds	r24, 0x4AD1	; 0x804ad1 <__system_time+0x2>
     bc4:	90 91 d2 4a 	lds	r25, 0x4AD2	; 0x804ad2 <__system_time+0x3>
     bc8:	0f be       	out	0x3f, r0	; 63
     bca:	30 97       	sbiw	r30, 0x00	; 0
     bcc:	21 f0       	breq	.+8      	; 0xbd6 <time+0x24>
     bce:	60 83       	st	Z, r22
     bd0:	71 83       	std	Z+1, r23	; 0x01
     bd2:	82 83       	std	Z+2, r24	; 0x02
     bd4:	93 83       	std	Z+3, r25	; 0x03
     bd6:	08 95       	ret

00000bd8 <week_of_year>:
     bd8:	fc 01       	movw	r30, r24
     bda:	20 85       	ldd	r18, Z+8	; 0x08
     bdc:	31 85       	ldd	r19, Z+9	; 0x09
     bde:	c9 01       	movw	r24, r18
     be0:	07 96       	adiw	r24, 0x07	; 7
     be2:	44 81       	ldd	r20, Z+4	; 0x04
     be4:	84 1b       	sub	r24, r20
     be6:	91 09       	sbc	r25, r1
     be8:	47 fd       	sbrc	r20, 7
     bea:	93 95       	inc	r25
     bec:	86 0f       	add	r24, r22
     bee:	91 1d       	adc	r25, r1
     bf0:	e7 e0       	ldi	r30, 0x07	; 7
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	bf 01       	movw	r22, r30
     bf6:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     bfa:	a9 01       	movw	r20, r18
     bfc:	48 1b       	sub	r20, r24
     bfe:	59 0b       	sbc	r21, r25
     c00:	ca 01       	movw	r24, r20
     c02:	57 fd       	sbrc	r21, 7
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <week_of_year+0x3a>
     c06:	bf 01       	movw	r22, r30
     c08:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	86 0f       	add	r24, r22
     c10:	08 95       	ret
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	08 95       	ret

00000c16 <system_tick>:
     c16:	8f 93       	push	r24
     c18:	8f b7       	in	r24, 0x3f	; 63
     c1a:	8f 93       	push	r24
     c1c:	f8 94       	cli
     c1e:	80 91 cf 4a 	lds	r24, 0x4ACF	; 0x804acf <__system_time>
     c22:	8f 5f       	subi	r24, 0xFF	; 255
     c24:	80 93 cf 4a 	sts	0x4ACF, r24	; 0x804acf <__system_time>
     c28:	80 91 d0 4a 	lds	r24, 0x4AD0	; 0x804ad0 <__system_time+0x1>
     c2c:	8f 4f       	sbci	r24, 0xFF	; 255
     c2e:	80 93 d0 4a 	sts	0x4AD0, r24	; 0x804ad0 <__system_time+0x1>
     c32:	80 91 d1 4a 	lds	r24, 0x4AD1	; 0x804ad1 <__system_time+0x2>
     c36:	8f 4f       	sbci	r24, 0xFF	; 255
     c38:	80 93 d1 4a 	sts	0x4AD1, r24	; 0x804ad1 <__system_time+0x2>
     c3c:	80 91 d2 4a 	lds	r24, 0x4AD2	; 0x804ad2 <__system_time+0x3>
     c40:	8f 4f       	sbci	r24, 0xFF	; 255
     c42:	80 93 d2 4a 	sts	0x4AD2, r24	; 0x804ad2 <__system_time+0x3>
     c46:	8f 91       	pop	r24
     c48:	8f bf       	out	0x3f, r24	; 63
     c4a:	8f 91       	pop	r24
     c4c:	08 95       	ret

00000c4e <asctime_r>:
     c4e:	cf 92       	push	r12
     c50:	df 92       	push	r13
     c52:	ef 92       	push	r14
     c54:	ff 92       	push	r15
     c56:	0f 93       	push	r16
     c58:	1f 93       	push	r17
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	8c 01       	movw	r16, r24
     c60:	eb 01       	movw	r28, r22
     c62:	fc 01       	movw	r30, r24
     c64:	84 81       	ldd	r24, Z+4	; 0x04
     c66:	b8 2f       	mov	r27, r24
     c68:	bb 0f       	add	r27, r27
     c6a:	b8 0f       	add	r27, r24
     c6c:	85 81       	ldd	r24, Z+5	; 0x05
     c6e:	78 2f       	mov	r23, r24
     c70:	77 0f       	add	r23, r23
     c72:	78 0f       	add	r23, r24
     c74:	9e 01       	movw	r18, r28
     c76:	40 e0       	ldi	r20, 0x00	; 0
     c78:	8b 2f       	mov	r24, r27
     c7a:	84 0f       	add	r24, r20
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	a0 e0       	ldi	r26, 0x00	; 0
     c80:	8e 58       	subi	r24, 0x8E	; 142
     c82:	9c 4f       	sbci	r25, 0xFC	; 252
     c84:	af 4f       	sbci	r26, 0xFF	; 255
     c86:	fc 01       	movw	r30, r24
     c88:	5a 2f       	mov	r21, r26
     c8a:	0e 94 a3 80 	call	0x10146	; 0x10146 <__xload_1>
     c8e:	f9 01       	movw	r30, r18
     c90:	61 93       	st	Z+, r22
     c92:	9f 01       	movw	r18, r30
     c94:	87 2f       	mov	r24, r23
     c96:	84 0f       	add	r24, r20
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	a0 e0       	ldi	r26, 0x00	; 0
     c9c:	88 57       	subi	r24, 0x78	; 120
     c9e:	9c 4f       	sbci	r25, 0xFC	; 252
     ca0:	af 4f       	sbci	r26, 0xFF	; 255
     ca2:	fc 01       	movw	r30, r24
     ca4:	5a 2f       	mov	r21, r26
     ca6:	0e 94 a3 80 	call	0x10146	; 0x10146 <__xload_1>
     caa:	f9 01       	movw	r30, r18
     cac:	63 83       	std	Z+3, r22	; 0x03
     cae:	4f 5f       	subi	r20, 0xFF	; 255
     cb0:	43 30       	cpi	r20, 0x03	; 3
     cb2:	11 f7       	brne	.-60     	; 0xc78 <asctime_r+0x2a>
     cb4:	80 e2       	ldi	r24, 0x20	; 32
     cb6:	8f 83       	std	Y+7, r24	; 0x07
     cb8:	8b 83       	std	Y+3, r24	; 0x03
     cba:	be 01       	movw	r22, r28
     cbc:	68 5f       	subi	r22, 0xF8	; 248
     cbe:	7f 4f       	sbci	r23, 0xFF	; 255
     cc0:	f8 01       	movw	r30, r16
     cc2:	83 81       	ldd	r24, Z+3	; 0x03
     cc4:	40 e2       	ldi	r20, 0x20	; 32
     cc6:	08 2e       	mov	r0, r24
     cc8:	00 0c       	add	r0, r0
     cca:	99 0b       	sbc	r25, r25
     ccc:	0e 94 fa 07 	call	0xff4	; 0xff4 <__print_lz>
     cd0:	be 01       	movw	r22, r28
     cd2:	65 5f       	subi	r22, 0xF5	; 245
     cd4:	7f 4f       	sbci	r23, 0xFF	; 255
     cd6:	f8 01       	movw	r30, r16
     cd8:	82 81       	ldd	r24, Z+2	; 0x02
     cda:	4a e3       	ldi	r20, 0x3A	; 58
     cdc:	08 2e       	mov	r0, r24
     cde:	00 0c       	add	r0, r0
     ce0:	99 0b       	sbc	r25, r25
     ce2:	0e 94 fa 07 	call	0xff4	; 0xff4 <__print_lz>
     ce6:	be 01       	movw	r22, r28
     ce8:	62 5f       	subi	r22, 0xF2	; 242
     cea:	7f 4f       	sbci	r23, 0xFF	; 255
     cec:	f8 01       	movw	r30, r16
     cee:	81 81       	ldd	r24, Z+1	; 0x01
     cf0:	4a e3       	ldi	r20, 0x3A	; 58
     cf2:	08 2e       	mov	r0, r24
     cf4:	00 0c       	add	r0, r0
     cf6:	99 0b       	sbc	r25, r25
     cf8:	0e 94 fa 07 	call	0xff4	; 0xff4 <__print_lz>
     cfc:	be 01       	movw	r22, r28
     cfe:	6f 5e       	subi	r22, 0xEF	; 239
     d00:	7f 4f       	sbci	r23, 0xFF	; 255
     d02:	f8 01       	movw	r30, r16
     d04:	80 81       	ld	r24, Z
     d06:	40 e2       	ldi	r20, 0x20	; 32
     d08:	08 2e       	mov	r0, r24
     d0a:	00 0c       	add	r0, r0
     d0c:	99 0b       	sbc	r25, r25
     d0e:	0e 94 fa 07 	call	0xff4	; 0xff4 <__print_lz>
     d12:	f8 01       	movw	r30, r16
     d14:	86 81       	ldd	r24, Z+6	; 0x06
     d16:	97 81       	ldd	r25, Z+7	; 0x07
     d18:	64 e6       	ldi	r22, 0x64	; 100
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	84 59       	subi	r24, 0x94	; 148
     d1e:	98 4f       	sbci	r25, 0xF8	; 248
     d20:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     d24:	6b 01       	movw	r12, r22
     d26:	7c 01       	movw	r14, r24
     d28:	be 01       	movw	r22, r28
     d2a:	6c 5e       	subi	r22, 0xEC	; 236
     d2c:	7f 4f       	sbci	r23, 0xFF	; 255
     d2e:	40 e2       	ldi	r20, 0x20	; 32
     d30:	c6 01       	movw	r24, r12
     d32:	0e 94 fa 07 	call	0xff4	; 0xff4 <__print_lz>
     d36:	be 01       	movw	r22, r28
     d38:	6a 5e       	subi	r22, 0xEA	; 234
     d3a:	7f 4f       	sbci	r23, 0xFF	; 255
     d3c:	40 e0       	ldi	r20, 0x00	; 0
     d3e:	c7 01       	movw	r24, r14
     d40:	df 91       	pop	r29
     d42:	cf 91       	pop	r28
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	ff 90       	pop	r15
     d4a:	ef 90       	pop	r14
     d4c:	df 90       	pop	r13
     d4e:	cf 90       	pop	r12
     d50:	0c 94 fa 07 	jmp	0xff4	; 0xff4 <__print_lz>

00000d54 <gmtime_r>:
     d54:	cf 92       	push	r12
     d56:	df 92       	push	r13
     d58:	ef 92       	push	r14
     d5a:	ff 92       	push	r15
     d5c:	0f 93       	push	r16
     d5e:	1f 93       	push	r17
     d60:	cf 93       	push	r28
     d62:	df 93       	push	r29
     d64:	cd b7       	in	r28, 0x3d	; 61
     d66:	de b7       	in	r29, 0x3e	; 62
     d68:	28 97       	sbiw	r28, 0x08	; 8
     d6a:	cd bf       	out	0x3d, r28	; 61
     d6c:	de bf       	out	0x3e, r29	; 62
     d6e:	8b 01       	movw	r16, r22
     d70:	fc 01       	movw	r30, r24
     d72:	60 81       	ld	r22, Z
     d74:	71 81       	ldd	r23, Z+1	; 0x01
     d76:	82 81       	ldd	r24, Z+2	; 0x02
     d78:	93 81       	ldd	r25, Z+3	; 0x03
     d7a:	20 e8       	ldi	r18, 0x80	; 128
     d7c:	31 e5       	ldi	r19, 0x51	; 81
     d7e:	41 e0       	ldi	r20, 0x01	; 1
     d80:	50 e0       	ldi	r21, 0x00	; 0
     d82:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
     d86:	69 01       	movw	r12, r18
     d88:	7a 01       	movw	r14, r20
     d8a:	2c e3       	ldi	r18, 0x3C	; 60
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	40 e0       	ldi	r20, 0x00	; 0
     d90:	50 e0       	ldi	r21, 0x00	; 0
     d92:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
     d96:	29 83       	std	Y+1, r18	; 0x01
     d98:	3a 83       	std	Y+2, r19	; 0x02
     d9a:	4b 83       	std	Y+3, r20	; 0x03
     d9c:	5c 83       	std	Y+4, r21	; 0x04
     d9e:	89 81       	ldd	r24, Y+1	; 0x01
     da0:	9a 81       	ldd	r25, Y+2	; 0x02
     da2:	ab 81       	ldd	r26, Y+3	; 0x03
     da4:	bc 81       	ldd	r27, Y+4	; 0x04
     da6:	f8 01       	movw	r30, r16
     da8:	60 83       	st	Z, r22
     daa:	6c e3       	ldi	r22, 0x3C	; 60
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     db2:	dc 01       	movw	r26, r24
     db4:	cb 01       	movw	r24, r22
     db6:	f8 01       	movw	r30, r16
     db8:	a1 83       	std	Z+1, r26	; 0x01
     dba:	82 83       	std	Z+2, r24	; 0x02
     dbc:	c6 01       	movw	r24, r12
     dbe:	06 96       	adiw	r24, 0x06	; 6
     dc0:	67 e0       	ldi	r22, 0x07	; 7
     dc2:	70 e0       	ldi	r23, 0x00	; 0
     dc4:	0e 94 c4 79 	call	0xf388	; 0xf388 <__udivmodhi4>
     dc8:	84 83       	std	Z+4, r24	; 0x04
     dca:	2d ea       	ldi	r18, 0xAD	; 173
     dcc:	3e e8       	ldi	r19, 0x8E	; 142
     dce:	40 e0       	ldi	r20, 0x00	; 0
     dd0:	50 e0       	ldi	r21, 0x00	; 0
     dd2:	c7 01       	movw	r24, r14
     dd4:	b6 01       	movw	r22, r12
     dd6:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
     dda:	29 83       	std	Y+1, r18	; 0x01
     ddc:	3a 83       	std	Y+2, r19	; 0x02
     dde:	6d 83       	std	Y+5, r22	; 0x05
     de0:	7e 83       	std	Y+6, r23	; 0x06
     de2:	8f 83       	std	Y+7, r24	; 0x07
     de4:	98 87       	std	Y+8, r25	; 0x08
     de6:	89 81       	ldd	r24, Y+1	; 0x01
     de8:	9a 81       	ldd	r25, Y+2	; 0x02
     dea:	24 e6       	ldi	r18, 0x64	; 100
     dec:	28 9f       	mul	r18, r24
     dee:	60 01       	movw	r12, r0
     df0:	29 9f       	mul	r18, r25
     df2:	d0 0c       	add	r13, r0
     df4:	11 24       	eor	r1, r1
     df6:	6d 81       	ldd	r22, Y+5	; 0x05
     df8:	7e 81       	ldd	r23, Y+6	; 0x06
     dfa:	8f 81       	ldd	r24, Y+7	; 0x07
     dfc:	98 85       	ldd	r25, Y+8	; 0x08
     dfe:	25 eb       	ldi	r18, 0xB5	; 181
     e00:	35 e0       	ldi	r19, 0x05	; 5
     e02:	40 e0       	ldi	r20, 0x00	; 0
     e04:	50 e0       	ldi	r21, 0x00	; 0
     e06:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
     e0a:	29 83       	std	Y+1, r18	; 0x01
     e0c:	3a 83       	std	Y+2, r19	; 0x02
     e0e:	6d 83       	std	Y+5, r22	; 0x05
     e10:	7e 83       	std	Y+6, r23	; 0x06
     e12:	e9 80       	ldd	r14, Y+1	; 0x01
     e14:	fa 80       	ldd	r15, Y+2	; 0x02
     e16:	ee 0c       	add	r14, r14
     e18:	ff 1c       	adc	r15, r15
     e1a:	ee 0c       	add	r14, r14
     e1c:	ff 1c       	adc	r15, r15
     e1e:	ec 0c       	add	r14, r12
     e20:	fd 1c       	adc	r15, r13
     e22:	8d 81       	ldd	r24, Y+5	; 0x05
     e24:	9e 81       	ldd	r25, Y+6	; 0x06
     e26:	f5 e6       	ldi	r31, 0x65	; 101
     e28:	ef 16       	cp	r14, r31
     e2a:	f1 04       	cpc	r15, r1
     e2c:	10 f0       	brcs	.+4      	; 0xe32 <gmtime_r+0xde>
     e2e:	01 96       	adiw	r24, 0x01	; 1
     e30:	04 c0       	rjmp	.+8      	; 0xe3a <gmtime_r+0xe6>
     e32:	24 e6       	ldi	r18, 0x64	; 100
     e34:	e2 16       	cp	r14, r18
     e36:	f1 04       	cpc	r15, r1
     e38:	19 f0       	breq	.+6      	; 0xe40 <gmtime_r+0xec>
     e3a:	21 e0       	ldi	r18, 0x01	; 1
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <gmtime_r+0xf0>
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	a9 01       	movw	r20, r18
     e46:	44 59       	subi	r20, 0x94	; 148
     e48:	5e 4f       	sbci	r21, 0xFE	; 254
     e4a:	48 17       	cp	r20, r24
     e4c:	59 07       	cpc	r21, r25
     e4e:	68 f4       	brcc	.+26     	; 0xe6a <gmtime_r+0x116>
     e50:	6d e6       	ldi	r22, 0x6D	; 109
     e52:	71 e0       	ldi	r23, 0x01	; 1
     e54:	82 1b       	sub	r24, r18
     e56:	93 0b       	sbc	r25, r19
     e58:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     e5c:	dc 01       	movw	r26, r24
     e5e:	cb 01       	movw	r24, r22
     e60:	e8 0e       	add	r14, r24
     e62:	f9 1e       	adc	r15, r25
     e64:	cd 01       	movw	r24, r26
     e66:	20 e0       	ldi	r18, 0x00	; 0
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	44 e6       	ldi	r20, 0x64	; 100
     e6c:	e4 0e       	add	r14, r20
     e6e:	f1 1c       	adc	r15, r1
     e70:	f8 01       	movw	r30, r16
     e72:	e6 82       	std	Z+6, r14	; 0x06
     e74:	f7 82       	std	Z+7, r15	; 0x07
     e76:	80 87       	std	Z+8, r24	; 0x08
     e78:	91 87       	std	Z+9, r25	; 0x09
     e7a:	25 5c       	subi	r18, 0xC5	; 197
     e7c:	3f 4f       	sbci	r19, 0xFF	; 255
     e7e:	82 17       	cp	r24, r18
     e80:	93 07       	cpc	r25, r19
     e82:	48 f4       	brcc	.+18     	; 0xe96 <gmtime_r+0x142>
     e84:	6f e1       	ldi	r22, 0x1F	; 31
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     e8c:	dc 01       	movw	r26, r24
     e8e:	cb 01       	movw	r24, r22
     e90:	f8 01       	movw	r30, r16
     e92:	85 83       	std	Z+5, r24	; 0x05
     e94:	22 c0       	rjmp	.+68     	; 0xeda <gmtime_r+0x186>
     e96:	69 e9       	ldi	r22, 0x99	; 153
     e98:	70 e0       	ldi	r23, 0x00	; 0
     e9a:	82 1b       	sub	r24, r18
     e9c:	93 0b       	sbc	r25, r19
     e9e:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     ea2:	dc 01       	movw	r26, r24
     ea4:	cb 01       	movw	r24, r22
     ea6:	f8 2e       	mov	r15, r24
     ea8:	ff 0c       	add	r15, r15
     eaa:	ff 0c       	add	r15, r15
     eac:	f8 0e       	add	r15, r24
     eae:	6d e3       	ldi	r22, 0x3D	; 61
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	cd 01       	movw	r24, r26
     eb4:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     eb8:	dc 01       	movw	r26, r24
     eba:	cb 01       	movw	r24, r22
     ebc:	e8 2e       	mov	r14, r24
     ebe:	ee 0c       	add	r14, r14
     ec0:	6f e1       	ldi	r22, 0x1F	; 31
     ec2:	70 e0       	ldi	r23, 0x00	; 0
     ec4:	cd 01       	movw	r24, r26
     ec6:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     eca:	dc 01       	movw	r26, r24
     ecc:	cb 01       	movw	r24, r22
     ece:	22 e0       	ldi	r18, 0x02	; 2
     ed0:	28 0f       	add	r18, r24
     ed2:	f2 0e       	add	r15, r18
     ed4:	fe 0c       	add	r15, r14
     ed6:	f8 01       	movw	r30, r16
     ed8:	f5 82       	std	Z+5, r15	; 0x05
     eda:	a3 83       	std	Z+3, r26	; 0x03
     edc:	f8 01       	movw	r30, r16
     ede:	12 86       	std	Z+10, r1	; 0x0a
     ee0:	13 86       	std	Z+11, r1	; 0x0b
     ee2:	83 81       	ldd	r24, Z+3	; 0x03
     ee4:	8f 5f       	subi	r24, 0xFF	; 255
     ee6:	83 83       	std	Z+3, r24	; 0x03
     ee8:	28 96       	adiw	r28, 0x08	; 8
     eea:	cd bf       	out	0x3d, r28	; 61
     eec:	de bf       	out	0x3e, r29	; 62
     eee:	df 91       	pop	r29
     ef0:	cf 91       	pop	r28
     ef2:	1f 91       	pop	r17
     ef4:	0f 91       	pop	r16
     ef6:	ff 90       	pop	r15
     ef8:	ef 90       	pop	r14
     efa:	df 90       	pop	r13
     efc:	cf 90       	pop	r12
     efe:	08 95       	ret

00000f00 <iso_week_date_r>:
     f00:	cf 92       	push	r12
     f02:	df 92       	push	r13
     f04:	ef 92       	push	r14
     f06:	ff 92       	push	r15
     f08:	0f 93       	push	r16
     f0a:	1f 93       	push	r17
     f0c:	cf 93       	push	r28
     f0e:	df 93       	push	r29
     f10:	8c 01       	movw	r16, r24
     f12:	7b 01       	movw	r14, r22
     f14:	ea 01       	movw	r28, r20
     f16:	88 83       	st	Y, r24
     f18:	99 83       	std	Y+1, r25	; 0x01
     f1a:	0e 94 07 02 	call	0x40e	; 0x40e <is_leap_year>
     f1e:	28 2f       	mov	r18, r24
     f20:	a8 01       	movw	r20, r16
     f22:	40 5d       	subi	r20, 0xD0	; 208
     f24:	57 40       	sbci	r21, 0x07	; 7
     f26:	6d e6       	ldi	r22, 0x6D	; 109
     f28:	71 e0       	ldi	r23, 0x01	; 1
     f2a:	46 9f       	mul	r20, r22
     f2c:	c0 01       	movw	r24, r0
     f2e:	47 9f       	mul	r20, r23
     f30:	90 0d       	add	r25, r0
     f32:	56 9f       	mul	r21, r22
     f34:	90 0d       	add	r25, r0
     f36:	11 24       	eor	r1, r1
     f38:	8e 0d       	add	r24, r14
     f3a:	9f 1d       	adc	r25, r15
     f3c:	41 15       	cp	r20, r1
     f3e:	51 05       	cpc	r21, r1
     f40:	79 f0       	breq	.+30     	; 0xf60 <iso_week_date_r+0x60>
     f42:	ba 01       	movw	r22, r20
     f44:	76 95       	lsr	r23
     f46:	67 95       	ror	r22
     f48:	76 95       	lsr	r23
     f4a:	67 95       	ror	r22
     f4c:	6f 5f       	subi	r22, 0xFF	; 255
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	86 0f       	add	r24, r22
     f52:	97 1f       	adc	r25, r23
     f54:	82 1b       	sub	r24, r18
     f56:	91 09       	sbc	r25, r1
     f58:	45 36       	cpi	r20, 0x65	; 101
     f5a:	51 05       	cpc	r21, r1
     f5c:	08 f0       	brcs	.+2      	; 0xf60 <iso_week_date_r+0x60>
     f5e:	01 97       	sbiw	r24, 0x01	; 1
     f60:	06 96       	adiw	r24, 0x06	; 6
     f62:	67 e0       	ldi	r22, 0x07	; 7
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	0e 94 c4 79 	call	0xf388	; 0xf388 <__udivmodhi4>
     f6a:	6c 01       	movw	r12, r24
     f6c:	89 2b       	or	r24, r25
     f6e:	19 f4       	brne	.+6      	; 0xf76 <iso_week_date_r+0x76>
     f70:	87 e0       	ldi	r24, 0x07	; 7
     f72:	c8 2e       	mov	r12, r24
     f74:	d1 2c       	mov	r13, r1
     f76:	cc 82       	std	Y+4, r12	; 0x04
     f78:	dd 82       	std	Y+5, r13	; 0x05
     f7a:	c7 01       	movw	r24, r14
     f7c:	0b 96       	adiw	r24, 0x0b	; 11
     f7e:	8c 19       	sub	r24, r12
     f80:	9d 09       	sbc	r25, r13
     f82:	67 e0       	ldi	r22, 0x07	; 7
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
     f8a:	65 33       	cpi	r22, 0x35	; 53
     f8c:	71 05       	cpc	r23, r1
     f8e:	b1 f4       	brne	.+44     	; 0xfbc <iso_week_date_r+0xbc>
     f90:	81 e0       	ldi	r24, 0x01	; 1
     f92:	c8 1a       	sub	r12, r24
     f94:	d1 08       	sbc	r13, r1
     f96:	ec 18       	sub	r14, r12
     f98:	fd 08       	sbc	r15, r13
     f9a:	82 2f       	mov	r24, r18
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	84 59       	subi	r24, 0x94	; 148
     fa0:	9e 4f       	sbci	r25, 0xFE	; 254
     fa2:	23 e0       	ldi	r18, 0x03	; 3
     fa4:	e2 0e       	add	r14, r18
     fa6:	f1 1c       	adc	r15, r1
     fa8:	8e 15       	cp	r24, r14
     faa:	9f 05       	cpc	r25, r15
     fac:	3c f4       	brge	.+14     	; 0xfbc <iso_week_date_r+0xbc>
     fae:	88 81       	ld	r24, Y
     fb0:	99 81       	ldd	r25, Y+1	; 0x01
     fb2:	01 96       	adiw	r24, 0x01	; 1
     fb4:	88 83       	st	Y, r24
     fb6:	99 83       	std	Y+1, r25	; 0x01
     fb8:	61 e0       	ldi	r22, 0x01	; 1
     fba:	70 e0       	ldi	r23, 0x00	; 0
     fbc:	6a 83       	std	Y+2, r22	; 0x02
     fbe:	7b 83       	std	Y+3, r23	; 0x03
     fc0:	67 2b       	or	r22, r23
     fc2:	79 f4       	brne	.+30     	; 0xfe2 <iso_week_date_r+0xe2>
     fc4:	01 50       	subi	r16, 0x01	; 1
     fc6:	11 09       	sbc	r17, r1
     fc8:	c8 01       	movw	r24, r16
     fca:	0e 94 07 02 	call	0x40e	; 0x40e <is_leap_year>
     fce:	68 2f       	mov	r22, r24
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	64 59       	subi	r22, 0x94	; 148
     fd4:	7e 4f       	sbci	r23, 0xFE	; 254
     fd6:	ae 01       	movw	r20, r28
     fd8:	c8 01       	movw	r24, r16
     fda:	0e 94 80 07 	call	0xf00	; 0xf00 <iso_week_date_r>
     fde:	cc 82       	std	Y+4, r12	; 0x04
     fe0:	dd 82       	std	Y+5, r13	; 0x05
     fe2:	df 91       	pop	r29
     fe4:	cf 91       	pop	r28
     fe6:	1f 91       	pop	r17
     fe8:	0f 91       	pop	r16
     fea:	ff 90       	pop	r15
     fec:	ef 90       	pop	r14
     fee:	df 90       	pop	r13
     ff0:	cf 90       	pop	r12
     ff2:	08 95       	ret

00000ff4 <__print_lz>:
     ff4:	1f 93       	push	r17
     ff6:	cf 93       	push	r28
     ff8:	df 93       	push	r29
     ffa:	eb 01       	movw	r28, r22
     ffc:	14 2f       	mov	r17, r20
     ffe:	6a e0       	ldi	r22, 0x0A	; 10
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
    1006:	60 5d       	subi	r22, 0xD0	; 208
    1008:	68 83       	st	Y, r22
    100a:	80 5d       	subi	r24, 0xD0	; 208
    100c:	89 83       	std	Y+1, r24	; 0x01
    100e:	1a 83       	std	Y+2, r17	; 0x02
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	1f 91       	pop	r17
    1016:	08 95       	ret

00001018 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
    1018:	cf 93       	push	r28
    101a:	df 93       	push	r29
    101c:	cd b7       	in	r28, 0x3d	; 61
    101e:	de b7       	in	r29, 0x3e	; 62
	system_init();
    1020:	0e 94 f2 3d 	call	0x7be4	; 0x7be4 <system_init>
}
    1024:	00 00       	nop
    1026:	df 91       	pop	r29
    1028:	cf 91       	pop	r28
    102a:	08 95       	ret

0000102c <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
    102c:	1f 92       	push	r1
    102e:	0f 92       	push	r0
    1030:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1034:	0f 92       	push	r0
    1036:	11 24       	eor	r1, r1
    1038:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    103c:	0f 92       	push	r0
    103e:	2f 93       	push	r18
    1040:	8f 93       	push	r24
    1042:	9f 93       	push	r25
    1044:	ef 93       	push	r30
    1046:	ff 93       	push	r31
    1048:	cf 93       	push	r28
    104a:	df 93       	push	r29
    104c:	cd b7       	in	r28, 0x3d	; 61
    104e:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    1050:	80 e2       	ldi	r24, 0x20	; 32
    1052:	9b e0       	ldi	r25, 0x0B	; 11
    1054:	fc 01       	movw	r30, r24
    1056:	86 81       	ldd	r24, Z+6	; 0x06
    1058:	88 2f       	mov	r24, r24
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	81 70       	andi	r24, 0x01	; 1
    105e:	99 27       	eor	r25, r25
    1060:	21 e0       	ldi	r18, 0x01	; 1
    1062:	89 2b       	or	r24, r25
    1064:	09 f4       	brne	.+2      	; 0x1068 <__vector_30+0x3c>
    1066:	20 e0       	ldi	r18, 0x00	; 0
    1068:	22 23       	and	r18, r18
    106a:	29 f0       	breq	.+10     	; 0x1076 <__vector_30+0x4a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
    106c:	80 e2       	ldi	r24, 0x20	; 32
    106e:	9b e0       	ldi	r25, 0x0B	; 11
    1070:	21 e0       	ldi	r18, 0x01	; 1
    1072:	fc 01       	movw	r30, r24
    1074:	26 83       	std	Z+6, r18	; 0x06
    }
}
    1076:	00 00       	nop
    1078:	df 91       	pop	r29
    107a:	cf 91       	pop	r28
    107c:	ff 91       	pop	r31
    107e:	ef 91       	pop	r30
    1080:	9f 91       	pop	r25
    1082:	8f 91       	pop	r24
    1084:	2f 91       	pop	r18
    1086:	0f 90       	pop	r0
    1088:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    108c:	0f 90       	pop	r0
    108e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1092:	0f 90       	pop	r0
    1094:	1f 90       	pop	r1
    1096:	18 95       	reti

00001098 <__vector_19>:

ISR(USART0_RXC_vect)
{
    1098:	1f 92       	push	r1
    109a:	0f 92       	push	r0
    109c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10a0:	0f 92       	push	r0
    10a2:	11 24       	eor	r1, r1
    10a4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10a8:	0f 92       	push	r0
    10aa:	2f 93       	push	r18
    10ac:	3f 93       	push	r19
    10ae:	4f 93       	push	r20
    10b0:	5f 93       	push	r21
    10b2:	6f 93       	push	r22
    10b4:	7f 93       	push	r23
    10b6:	8f 93       	push	r24
    10b8:	9f 93       	push	r25
    10ba:	af 93       	push	r26
    10bc:	bf 93       	push	r27
    10be:	ef 93       	push	r30
    10c0:	ff 93       	push	r31
    10c2:	cf 93       	push	r28
    10c4:	df 93       	push	r29
    10c6:	1f 92       	push	r1
    10c8:	cd b7       	in	r28, 0x3d	; 61
    10ca:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    10cc:	0e 94 4f 72 	call	0xe49e	; 0xe49e <USART0_get_data>
    10d0:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    10d2:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    10d6:	88 23       	and	r24, r24
    10d8:	19 f4       	brne	.+6      	; 0x10e0 <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    10da:	89 81       	ldd	r24, Y+1	; 0x01
    10dc:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    10e0:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    10e4:	88 23       	and	r24, r24
    10e6:	19 f4       	brne	.+6      	; 0x10ee <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    10e8:	89 81       	ldd	r24, Y+1	; 0x01
    10ea:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_Z9serial_Rxh>
	}
}
    10ee:	00 00       	nop
    10f0:	0f 90       	pop	r0
    10f2:	df 91       	pop	r29
    10f4:	cf 91       	pop	r28
    10f6:	ff 91       	pop	r31
    10f8:	ef 91       	pop	r30
    10fa:	bf 91       	pop	r27
    10fc:	af 91       	pop	r26
    10fe:	9f 91       	pop	r25
    1100:	8f 91       	pop	r24
    1102:	7f 91       	pop	r23
    1104:	6f 91       	pop	r22
    1106:	5f 91       	pop	r21
    1108:	4f 91       	pop	r20
    110a:	3f 91       	pop	r19
    110c:	2f 91       	pop	r18
    110e:	0f 90       	pop	r0
    1110:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1114:	0f 90       	pop	r0
    1116:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    111a:	0f 90       	pop	r0
    111c:	1f 90       	pop	r1
    111e:	18 95       	reti

00001120 <__vector_55>:

ISR(USART4_RXC_vect)
{
    1120:	1f 92       	push	r1
    1122:	0f 92       	push	r0
    1124:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1128:	0f 92       	push	r0
    112a:	11 24       	eor	r1, r1
    112c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1130:	0f 92       	push	r0
    1132:	2f 93       	push	r18
    1134:	3f 93       	push	r19
    1136:	4f 93       	push	r20
    1138:	5f 93       	push	r21
    113a:	6f 93       	push	r22
    113c:	7f 93       	push	r23
    113e:	8f 93       	push	r24
    1140:	9f 93       	push	r25
    1142:	af 93       	push	r26
    1144:	bf 93       	push	r27
    1146:	ef 93       	push	r30
    1148:	ff 93       	push	r31
    114a:	cf 93       	push	r28
    114c:	df 93       	push	r29
    114e:	1f 92       	push	r1
    1150:	cd b7       	in	r28, 0x3d	; 61
    1152:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    1154:	0e 94 62 73 	call	0xe6c4	; 0xe6c4 <USART4_get_data>
    1158:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    115a:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    115e:	84 30       	cpi	r24, 0x04	; 4
    1160:	19 f4       	brne	.+6      	; 0x1168 <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    1162:	89 81       	ldd	r24, Y+1	; 0x01
    1164:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    1168:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    116c:	84 30       	cpi	r24, 0x04	; 4
    116e:	19 f4       	brne	.+6      	; 0x1176 <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    1170:	89 81       	ldd	r24, Y+1	; 0x01
    1172:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_Z9serial_Rxh>
	}
}
    1176:	00 00       	nop
    1178:	0f 90       	pop	r0
    117a:	df 91       	pop	r29
    117c:	cf 91       	pop	r28
    117e:	ff 91       	pop	r31
    1180:	ef 91       	pop	r30
    1182:	bf 91       	pop	r27
    1184:	af 91       	pop	r26
    1186:	9f 91       	pop	r25
    1188:	8f 91       	pop	r24
    118a:	7f 91       	pop	r23
    118c:	6f 91       	pop	r22
    118e:	5f 91       	pop	r21
    1190:	4f 91       	pop	r20
    1192:	3f 91       	pop	r19
    1194:	2f 91       	pop	r18
    1196:	0f 90       	pop	r0
    1198:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    119c:	0f 90       	pop	r0
    119e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    11a2:	0f 90       	pop	r0
    11a4:	1f 90       	pop	r1
    11a6:	18 95       	reti

000011a8 <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    11a8:	cf 93       	push	r28
    11aa:	df 93       	push	r29
    11ac:	cd b7       	in	r28, 0x3d	; 61
    11ae:	de b7       	in	r29, 0x3e	; 62
    11b0:	2a 97       	sbiw	r28, 0x0a	; 10
    11b2:	cd bf       	out	0x3d, r28	; 61
    11b4:	de bf       	out	0x3e, r29	; 62
    11b6:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    11b8:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    11bc:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    11c0:	89 2b       	or	r24, r25
    11c2:	31 f4       	brne	.+12     	; 0x11d0 <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    11c4:	0e 94 bd 60 	call	0xc17a	; 0xc17a <nextEmptySBRxBuffer>
    11c8:	80 93 c2 46 	sts	0x46C2, r24	; 0x8046c2 <__data_end>
    11cc:	90 93 c3 46 	sts	0x46C3, r25	; 0x8046c3 <__data_end+0x1>
	}

	if(buff)
    11d0:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    11d4:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    11d8:	89 2b       	or	r24, r25
    11da:	09 f4       	brne	.+2      	; 0x11de <_Z9serial_Rxh+0x36>
    11dc:	5e c2       	rjmp	.+1212   	; 0x169a <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    11de:	8a 85       	ldd	r24, Y+10	; 0x0a
    11e0:	88 2f       	mov	r24, r24
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	0e 94 ba 7b 	call	0xf774	; 0xf774 <toupper>
    11e8:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    11ea:	80 91 c4 46 	lds	r24, 0x46C4	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
    11ee:	88 23       	and	r24, r24
    11f0:	39 f0       	breq	.+14     	; 0x1200 <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    11f2:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    11f4:	80 91 c4 46 	lds	r24, 0x46C4	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
    11f8:	81 50       	subi	r24, 0x01	; 1
    11fa:	80 93 c4 46 	sts	0x46C4, r24	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11fe:	4d c2       	rjmp	.+1178   	; 0x169a <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    1200:	8a 85       	ldd	r24, Y+10	; 0x0a
    1202:	8b 31       	cpi	r24, 0x1B	; 27
    1204:	91 f4       	brne	.+36     	; 0x122a <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    1206:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    1208:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    120c:	84 31       	cpi	r24, 0x14	; 20
    120e:	48 f4       	brcc	.+18     	; 0x1222 <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    1210:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1214:	88 2f       	mov	r24, r24
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	8a 53       	subi	r24, 0x3A	; 58
    121a:	99 4b       	sbci	r25, 0xB9	; 185
    121c:	fc 01       	movw	r30, r24
    121e:	80 81       	ld	r24, Z
    1220:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    1222:	82 e0       	ldi	r24, 0x02	; 2
    1224:	80 93 c4 46 	sts	0x46C4, r24	; 0x8046c4 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    1228:	38 c2       	rjmp	.+1136   	; 0x169a <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    122a:	8a 85       	ldd	r24, Y+10	; 0x0a
    122c:	8d 30       	cpi	r24, 0x0D	; 13
    122e:	09 f0       	breq	.+2      	; 0x1232 <_Z9serial_Rxh+0x8a>
    1230:	60 c0       	rjmp	.+192    	; 0x12f2 <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    1232:	80 91 f8 46 	lds	r24, 0x46F8	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
    1236:	88 23       	and	r24, r24
    1238:	09 f4       	brne	.+2      	; 0x123c <_Z9serial_Rxh+0x94>
    123a:	41 c0       	rjmp	.+130    	; 0x12be <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    123c:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1240:	88 23       	and	r24, r24
    1242:	d1 f1       	breq	.+116    	; 0x12b8 <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    1244:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    1248:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    124c:	22 e0       	ldi	r18, 0x02	; 2
    124e:	fc 01       	movw	r30, r24
    1250:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    1252:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    1256:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    125a:	20 91 f9 46 	lds	r18, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    125e:	30 91 fa 46 	lds	r19, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1262:	fc 01       	movw	r30, r24
    1264:	21 83       	std	Z+1, r18	; 0x01
    1266:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    1268:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    126c:	88 23       	and	r24, r24
    126e:	e1 f0       	breq	.+56     	; 0x12a8 <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    1270:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    1274:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1278:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    127c:	88 2f       	mov	r24, r24
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	bc 01       	movw	r22, r24
    1282:	61 50       	subi	r22, 0x01	; 1
    1284:	71 09       	sbc	r23, r1
    1286:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    128a:	88 2f       	mov	r24, r24
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	e4 e1       	ldi	r30, 0x14	; 20
    1290:	e6 9f       	mul	r30, r22
    1292:	90 01       	movw	r18, r0
    1294:	e7 9f       	mul	r30, r23
    1296:	30 0d       	add	r19, r0
    1298:	11 24       	eor	r1, r1
    129a:	24 0f       	add	r18, r20
    129c:	35 1f       	adc	r19, r21
    129e:	82 0f       	add	r24, r18
    12a0:	93 1f       	adc	r25, r19
    12a2:	03 96       	adiw	r24, 0x03	; 3
    12a4:	fc 01       	movw	r30, r24
    12a6:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    12a8:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    12ac:	88 2f       	mov	r24, r24
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	8a 53       	subi	r24, 0x3A	; 58
    12b2:	99 4b       	sbci	r25, 0xB9	; 185
    12b4:	fc 01       	movw	r30, r24
    12b6:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    12b8:	0e 94 ae 62 	call	0xc55c	; 0xc55c <sb_send_NewLine>
    12bc:	09 c0       	rjmp	.+18     	; 0x12d0 <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    12be:	80 91 c2 46 	lds	r24, 0x46C2	; 0x8046c2 <__data_end>
    12c2:	90 91 c3 46 	lds	r25, 0x46C3	; 0x8046c3 <__data_end+0x1>
    12c6:	2f ef       	ldi	r18, 0xFF	; 255
    12c8:	3f ef       	ldi	r19, 0xFF	; 255
    12ca:	fc 01       	movw	r30, r24
    12cc:	21 83       	std	Z+1, r18	; 0x01
    12ce:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    12d0:	10 92 c5 46 	sts	0x46C5, r1	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    12d4:	10 92 fc 46 	sts	0x46FC, r1	; 0x8046fc <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    12d8:	10 92 f9 46 	sts	0x46F9, r1	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    12dc:	10 92 fa 46 	sts	0x46FA, r1	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    12e0:	10 92 fb 46 	sts	0x46FB, r1	; 0x8046fb <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    12e4:	10 92 c2 46 	sts	0x46C2, r1	; 0x8046c2 <__data_end>
    12e8:	10 92 c3 46 	sts	0x46C3, r1	; 0x8046c3 <__data_end+0x1>

			receiving_msg = false;
    12ec:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    12f0:	d4 c1       	rjmp	.+936    	; 0x169a <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    12f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    12f4:	88 23       	and	r24, r24
    12f6:	09 f4       	brne	.+2      	; 0x12fa <_Z9serial_Rxh+0x152>
    12f8:	d0 c1       	rjmp	.+928    	; 0x169a <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    12fa:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    12fe:	88 2f       	mov	r24, r24
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	8a 53       	subi	r24, 0x3A	; 58
    1304:	99 4b       	sbci	r25, 0xB9	; 185
    1306:	2a 85       	ldd	r18, Y+10	; 0x0a
    1308:	fc 01       	movw	r30, r24
    130a:	20 83       	st	Z, r18

			if(charIndex)
    130c:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1310:	88 23       	and	r24, r24
    1312:	09 f4       	brne	.+2      	; 0x1316 <_Z9serial_Rxh+0x16e>
    1314:	7c c1       	rjmp	.+760    	; 0x160e <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    1316:	8a 85       	ldd	r24, Y+10	; 0x0a
    1318:	8f 37       	cpi	r24, 0x7F	; 127
    131a:	09 f0       	breq	.+2      	; 0x131e <_Z9serial_Rxh+0x176>
    131c:	a1 c0       	rjmp	.+322    	; 0x1460 <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    131e:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1322:	81 50       	subi	r24, 0x01	; 1
    1324:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    1328:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    132c:	88 23       	and	r24, r24
    132e:	29 f5       	brne	.+74     	; 0x137a <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    1330:	20 91 f9 46 	lds	r18, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1334:	30 91 fa 46 	lds	r19, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1338:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    133c:	88 2f       	mov	r24, r24
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	8a 53       	subi	r24, 0x3A	; 58
    1342:	99 4b       	sbci	r25, 0xB9	; 185
    1344:	fc 01       	movw	r30, r24
    1346:	80 81       	ld	r24, Z
    1348:	88 2f       	mov	r24, r24
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	a9 01       	movw	r20, r18
    134e:	48 1b       	sub	r20, r24
    1350:	59 0b       	sbc	r21, r25
    1352:	ca 01       	movw	r24, r20
    1354:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1358:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    135c:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1360:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1364:	2a e0       	ldi	r18, 0x0A	; 10
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	b9 01       	movw	r22, r18
    136a:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
    136e:	cb 01       	movw	r24, r22
    1370:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1374:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    1378:	63 c0       	rjmp	.+198    	; 0x1440 <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    137a:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    137e:	88 23       	and	r24, r24
    1380:	11 f1       	breq	.+68     	; 0x13c6 <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    1382:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1386:	81 50       	subi	r24, 0x01	; 1
    1388:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    138c:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    1390:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1394:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1398:	88 2f       	mov	r24, r24
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	bc 01       	movw	r22, r24
    139e:	61 50       	subi	r22, 0x01	; 1
    13a0:	71 09       	sbc	r23, r1
    13a2:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    13a6:	88 2f       	mov	r24, r24
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	e4 e1       	ldi	r30, 0x14	; 20
    13ac:	e6 9f       	mul	r30, r22
    13ae:	90 01       	movw	r18, r0
    13b0:	e7 9f       	mul	r30, r23
    13b2:	30 0d       	add	r19, r0
    13b4:	11 24       	eor	r1, r1
    13b6:	24 0f       	add	r18, r20
    13b8:	35 1f       	adc	r19, r21
    13ba:	82 0f       	add	r24, r18
    13bc:	93 1f       	adc	r25, r19
    13be:	03 96       	adiw	r24, 0x03	; 3
    13c0:	fc 01       	movw	r30, r24
    13c2:	10 82       	st	Z, r1
    13c4:	3d c0       	rjmp	.+122    	; 0x1440 <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    13c6:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    13ca:	88 2f       	mov	r24, r24
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	8a 53       	subi	r24, 0x3A	; 58
    13d0:	99 4b       	sbci	r25, 0xB9	; 185
    13d2:	fc 01       	movw	r30, r24
    13d4:	80 81       	ld	r24, Z
    13d6:	80 32       	cpi	r24, 0x20	; 32
    13d8:	d9 f4       	brne	.+54     	; 0x1410 <_Z9serial_Rxh+0x268>
					{
						field_index--;
    13da:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    13de:	81 50       	subi	r24, 0x01	; 1
    13e0:	80 93 fb 46 	sts	0x46FB, r24	; 0x8046fb <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    13e4:	20 91 c2 46 	lds	r18, 0x46C2	; 0x8046c2 <__data_end>
    13e8:	30 91 c3 46 	lds	r19, 0x46C3	; 0x8046c3 <__data_end+0x1>
    13ec:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    13f0:	48 2f       	mov	r20, r24
    13f2:	50 e0       	ldi	r21, 0x00	; 0
    13f4:	64 e1       	ldi	r22, 0x14	; 20
    13f6:	64 9f       	mul	r22, r20
    13f8:	c0 01       	movw	r24, r0
    13fa:	65 9f       	mul	r22, r21
    13fc:	90 0d       	add	r25, r0
    13fe:	11 24       	eor	r1, r1
    1400:	03 96       	adiw	r24, 0x03	; 3
    1402:	82 0f       	add	r24, r18
    1404:	93 1f       	adc	r25, r19
    1406:	0e 94 ef 7b 	call	0xf7de	; 0xf7de <strlen>
    140a:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    140e:	18 c0       	rjmp	.+48     	; 0x1440 <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    1410:	20 91 c2 46 	lds	r18, 0x46C2	; 0x8046c2 <__data_end>
    1414:	30 91 c3 46 	lds	r19, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1418:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    141c:	48 2f       	mov	r20, r24
    141e:	50 e0       	ldi	r21, 0x00	; 0
    1420:	64 e1       	ldi	r22, 0x14	; 20
    1422:	64 9f       	mul	r22, r20
    1424:	c0 01       	movw	r24, r0
    1426:	65 9f       	mul	r22, r21
    1428:	90 0d       	add	r25, r0
    142a:	11 24       	eor	r1, r1
    142c:	82 0f       	add	r24, r18
    142e:	93 1f       	adc	r25, r19
    1430:	03 96       	adiw	r24, 0x03	; 3
    1432:	fc 01       	movw	r30, r24
    1434:	10 82       	st	Z, r1
						field_index--;
    1436:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    143a:	81 50       	subi	r24, 0x01	; 1
    143c:	80 93 fb 46 	sts	0x46FB, r24	; 0x8046fb <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    1440:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1444:	88 2f       	mov	r24, r24
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	8a 53       	subi	r24, 0x3A	; 58
    144a:	99 4b       	sbci	r25, 0xB9	; 185
    144c:	fc 01       	movw	r30, r24
    144e:	10 82       	st	Z, r1

					if(charIndex == 0)
    1450:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1454:	88 23       	and	r24, r24
    1456:	09 f0       	breq	.+2      	; 0x145a <_Z9serial_Rxh+0x2b2>
    1458:	1a c1       	rjmp	.+564    	; 0x168e <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    145a:	10 92 f8 46 	sts	0x46F8, r1	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
    145e:	17 c1       	rjmp	.+558    	; 0x168e <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    1460:	8a 85       	ldd	r24, Y+10	; 0x0a
    1462:	80 32       	cpi	r24, 0x20	; 32
    1464:	09 f0       	breq	.+2      	; 0x1468 <_Z9serial_Rxh+0x2c0>
    1466:	55 c0       	rjmp	.+170    	; 0x1512 <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    1468:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    146c:	88 2f       	mov	r24, r24
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	01 97       	sbiw	r24, 0x01	; 1
    1472:	8a 53       	subi	r24, 0x3A	; 58
    1474:	99 4b       	sbci	r25, 0xB9	; 185
    1476:	fc 01       	movw	r30, r24
    1478:	80 81       	ld	r24, Z
    147a:	80 32       	cpi	r24, 0x20	; 32
    147c:	39 f0       	breq	.+14     	; 0x148c <_Z9serial_Rxh+0x2e4>
    147e:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1482:	88 2f       	mov	r24, r24
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	01 96       	adiw	r24, 0x01	; 1
    1488:	03 97       	sbiw	r24, 0x03	; 3
    148a:	14 f0       	brlt	.+4      	; 0x1490 <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    148c:	1a 86       	std	Y+10, r1	; 0x0a
    148e:	ff c0       	rjmp	.+510    	; 0x168e <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    1490:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1494:	88 23       	and	r24, r24
    1496:	e1 f0       	breq	.+56     	; 0x14d0 <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    1498:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    149c:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    14a0:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    14a4:	88 2f       	mov	r24, r24
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	bc 01       	movw	r22, r24
    14aa:	61 50       	subi	r22, 0x01	; 1
    14ac:	71 09       	sbc	r23, r1
    14ae:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    14b2:	88 2f       	mov	r24, r24
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	e4 e1       	ldi	r30, 0x14	; 20
    14b8:	e6 9f       	mul	r30, r22
    14ba:	90 01       	movw	r18, r0
    14bc:	e7 9f       	mul	r30, r23
    14be:	30 0d       	add	r19, r0
    14c0:	11 24       	eor	r1, r1
    14c2:	24 0f       	add	r18, r20
    14c4:	35 1f       	adc	r19, r21
    14c6:	82 0f       	add	r24, r18
    14c8:	93 1f       	adc	r25, r19
    14ca:	03 96       	adiw	r24, 0x03	; 3
    14cc:	fc 01       	movw	r30, r24
    14ce:	10 82       	st	Z, r1
							}

							field_index++;
    14d0:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    14d4:	8f 5f       	subi	r24, 0xFF	; 255
    14d6:	80 93 fb 46 	sts	0x46FB, r24	; 0x8046fb <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    14da:	10 92 fc 46 	sts	0x46FC, r1	; 0x8046fc <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    14de:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    14e2:	88 2f       	mov	r24, r24
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	01 96       	adiw	r24, 0x01	; 1
    14e8:	8a 83       	std	Y+2, r24	; 0x02
    14ea:	9b 83       	std	Y+3, r25	; 0x03
    14ec:	81 e3       	ldi	r24, 0x31	; 49
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	8c 83       	std	Y+4, r24	; 0x04
    14f2:	9d 83       	std	Y+5, r25	; 0x05
    14f4:	2a 81       	ldd	r18, Y+2	; 0x02
    14f6:	3b 81       	ldd	r19, Y+3	; 0x03
    14f8:	8c 81       	ldd	r24, Y+4	; 0x04
    14fa:	9d 81       	ldd	r25, Y+5	; 0x05
    14fc:	28 17       	cp	r18, r24
    14fe:	39 07       	cpc	r19, r25
    1500:	1c f4       	brge	.+6      	; 0x1508 <_Z9serial_Rxh+0x360>
    1502:	8a 81       	ldd	r24, Y+2	; 0x02
    1504:	9b 81       	ldd	r25, Y+3	; 0x03
    1506:	02 c0       	rjmp	.+4      	; 0x150c <_Z9serial_Rxh+0x364>
    1508:	8c 81       	ldd	r24, Y+4	; 0x04
    150a:	9d 81       	ldd	r25, Y+5	; 0x05
    150c:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1510:	be c0       	rjmp	.+380    	; 0x168e <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    1512:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1516:	85 31       	cpi	r24, 0x15	; 21
    1518:	08 f0       	brcs	.+2      	; 0x151c <_Z9serial_Rxh+0x374>
    151a:	77 c0       	rjmp	.+238    	; 0x160a <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    151c:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1520:	88 23       	and	r24, r24
    1522:	e1 f4       	brne	.+56     	; 0x155c <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    1524:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1528:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    152c:	88 0f       	add	r24, r24
    152e:	99 1f       	adc	r25, r25
    1530:	9c 01       	movw	r18, r24
    1532:	22 0f       	add	r18, r18
    1534:	33 1f       	adc	r19, r19
    1536:	22 0f       	add	r18, r18
    1538:	33 1f       	adc	r19, r19
    153a:	28 0f       	add	r18, r24
    153c:	39 1f       	adc	r19, r25
    153e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1540:	88 2f       	mov	r24, r24
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	82 0f       	add	r24, r18
    1546:	93 1f       	adc	r25, r19
    1548:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    154c:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    1550:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1554:	8f 5f       	subi	r24, 0xFF	; 255
    1556:	80 93 fc 46 	sts	0x46FC, r24	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    155a:	3d c0       	rjmp	.+122    	; 0x15d6 <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    155c:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    1560:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    1564:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    1568:	88 2f       	mov	r24, r24
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	bc 01       	movw	r22, r24
    156e:	61 50       	subi	r22, 0x01	; 1
    1570:	71 09       	sbc	r23, r1
    1572:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    1576:	91 e0       	ldi	r25, 0x01	; 1
    1578:	98 0f       	add	r25, r24
    157a:	90 93 fc 46 	sts	0x46FC, r25	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    157e:	88 2f       	mov	r24, r24
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	e4 e1       	ldi	r30, 0x14	; 20
    1584:	e6 9f       	mul	r30, r22
    1586:	90 01       	movw	r18, r0
    1588:	e7 9f       	mul	r30, r23
    158a:	30 0d       	add	r19, r0
    158c:	11 24       	eor	r1, r1
    158e:	24 0f       	add	r18, r20
    1590:	35 1f       	adc	r19, r21
    1592:	82 0f       	add	r24, r18
    1594:	93 1f       	adc	r25, r19
    1596:	03 96       	adiw	r24, 0x03	; 3
    1598:	2a 85       	ldd	r18, Y+10	; 0x0a
    159a:	fc 01       	movw	r30, r24
    159c:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    159e:	40 91 c2 46 	lds	r20, 0x46C2	; 0x8046c2 <__data_end>
    15a2:	50 91 c3 46 	lds	r21, 0x46C3	; 0x8046c3 <__data_end+0x1>
    15a6:	80 91 fb 46 	lds	r24, 0x46FB	; 0x8046fb <_ZZ9serial_RxhE11field_index>
    15aa:	88 2f       	mov	r24, r24
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	bc 01       	movw	r22, r24
    15b0:	61 50       	subi	r22, 0x01	; 1
    15b2:	71 09       	sbc	r23, r1
    15b4:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ9serial_RxhE9field_len>
    15b8:	88 2f       	mov	r24, r24
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	e4 e1       	ldi	r30, 0x14	; 20
    15be:	e6 9f       	mul	r30, r22
    15c0:	90 01       	movw	r18, r0
    15c2:	e7 9f       	mul	r30, r23
    15c4:	30 0d       	add	r19, r0
    15c6:	11 24       	eor	r1, r1
    15c8:	24 0f       	add	r18, r20
    15ca:	35 1f       	adc	r19, r21
    15cc:	82 0f       	add	r24, r18
    15ce:	93 1f       	adc	r25, r19
    15d0:	03 96       	adiw	r24, 0x03	; 3
    15d2:	fc 01       	movw	r30, r24
    15d4:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    15d6:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    15da:	88 2f       	mov	r24, r24
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	01 96       	adiw	r24, 0x01	; 1
    15e0:	8e 83       	std	Y+6, r24	; 0x06
    15e2:	9f 83       	std	Y+7, r25	; 0x07
    15e4:	81 e3       	ldi	r24, 0x31	; 49
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	88 87       	std	Y+8, r24	; 0x08
    15ea:	99 87       	std	Y+9, r25	; 0x09
    15ec:	2e 81       	ldd	r18, Y+6	; 0x06
    15ee:	3f 81       	ldd	r19, Y+7	; 0x07
    15f0:	88 85       	ldd	r24, Y+8	; 0x08
    15f2:	99 85       	ldd	r25, Y+9	; 0x09
    15f4:	28 17       	cp	r18, r24
    15f6:	39 07       	cpc	r19, r25
    15f8:	1c f4       	brge	.+6      	; 0x1600 <_Z9serial_Rxh+0x458>
    15fa:	8e 81       	ldd	r24, Y+6	; 0x06
    15fc:	9f 81       	ldd	r25, Y+7	; 0x07
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <_Z9serial_Rxh+0x45c>
    1600:	88 85       	ldd	r24, Y+8	; 0x08
    1602:	99 85       	ldd	r25, Y+9	; 0x09
    1604:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1608:	42 c0       	rjmp	.+132    	; 0x168e <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    160a:	1a 86       	std	Y+10, r1	; 0x0a
    160c:	40 c0       	rjmp	.+128    	; 0x168e <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    160e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1610:	8f 37       	cpi	r24, 0x7F	; 127
    1612:	69 f4       	brne	.+26     	; 0x162e <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    1614:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1618:	90 91 fa 46 	lds	r25, 0x46FA	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    161c:	18 16       	cp	r1, r24
    161e:	19 06       	cpc	r1, r25
    1620:	0c f0       	brlt	.+2      	; 0x1624 <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    1622:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    1624:	10 92 f9 46 	sts	0x46F9, r1	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1628:	10 92 fa 46 	sts	0x46FA, r1	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>
    162c:	30 c0       	rjmp	.+96     	; 0x168e <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    162e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1630:	80 32       	cpi	r24, 0x20	; 32
    1632:	11 f4       	brne	.+4      	; 0x1638 <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    1634:	1a 86       	std	Y+10, r1	; 0x0a
    1636:	2b c0       	rjmp	.+86     	; 0x168e <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    1638:	10 92 fb 46 	sts	0x46FB, r1	; 0x8046fb <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    163c:	8a 85       	ldd	r24, Y+10	; 0x0a
    163e:	88 2f       	mov	r24, r24
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	80 93 f9 46 	sts	0x46F9, r24	; 0x8046f9 <_ZZ9serial_RxhE6msg_ID>
    1646:	90 93 fa 46 	sts	0x46FA, r25	; 0x8046fa <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    164a:	19 82       	std	Y+1, r1	; 0x01
    164c:	89 81       	ldd	r24, Y+1	; 0x01
    164e:	83 30       	cpi	r24, 0x03	; 3
    1650:	b0 f4       	brcc	.+44     	; 0x167e <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    1652:	20 91 c2 46 	lds	r18, 0x46C2	; 0x8046c2 <__data_end>
    1656:	30 91 c3 46 	lds	r19, 0x46C3	; 0x8046c3 <__data_end+0x1>
    165a:	89 81       	ldd	r24, Y+1	; 0x01
    165c:	48 2f       	mov	r20, r24
    165e:	50 e0       	ldi	r21, 0x00	; 0
    1660:	64 e1       	ldi	r22, 0x14	; 20
    1662:	64 9f       	mul	r22, r20
    1664:	c0 01       	movw	r24, r0
    1666:	65 9f       	mul	r22, r21
    1668:	90 0d       	add	r25, r0
    166a:	11 24       	eor	r1, r1
    166c:	82 0f       	add	r24, r18
    166e:	93 1f       	adc	r25, r19
    1670:	03 96       	adiw	r24, 0x03	; 3
    1672:	fc 01       	movw	r30, r24
    1674:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    1676:	89 81       	ldd	r24, Y+1	; 0x01
    1678:	8f 5f       	subi	r24, 0xFF	; 255
    167a:	89 83       	std	Y+1, r24	; 0x01
    167c:	e7 cf       	rjmp	.-50     	; 0x164c <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    167e:	81 e0       	ldi	r24, 0x01	; 1
    1680:	80 93 f8 46 	sts	0x46F8, r24	; 0x8046f8 <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    1684:	80 91 c5 46 	lds	r24, 0x46C5	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
    1688:	8f 5f       	subi	r24, 0xFF	; 255
    168a:	80 93 c5 46 	sts	0x46C5, r24	; 0x8046c5 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    168e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1690:	88 23       	and	r24, r24
    1692:	19 f0       	breq	.+6      	; 0x169a <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    1694:	8a 85       	ldd	r24, Y+10	; 0x0a
    1696:	0e 94 bf 62 	call	0xc57e	; 0xc57e <sb_echo_char>
			}
		}
	}	
}
    169a:	00 00       	nop
    169c:	2a 96       	adiw	r28, 0x0a	; 10
    169e:	cd bf       	out	0x3d, r28	; 61
    16a0:	de bf       	out	0x3e, r29	; 62
    16a2:	df 91       	pop	r29
    16a4:	cf 91       	pop	r28
    16a6:	08 95       	ret

000016a8 <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    16a8:	1f 92       	push	r1
    16aa:	0f 92       	push	r0
    16ac:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    16b0:	0f 92       	push	r0
    16b2:	11 24       	eor	r1, r1
    16b4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    16b8:	0f 92       	push	r0
    16ba:	2f 93       	push	r18
    16bc:	3f 93       	push	r19
    16be:	4f 93       	push	r20
    16c0:	5f 93       	push	r21
    16c2:	6f 93       	push	r22
    16c4:	7f 93       	push	r23
    16c6:	8f 93       	push	r24
    16c8:	9f 93       	push	r25
    16ca:	af 93       	push	r26
    16cc:	bf 93       	push	r27
    16ce:	ef 93       	push	r30
    16d0:	ff 93       	push	r31
    16d2:	cf 93       	push	r28
    16d4:	df 93       	push	r29
    16d6:	cd b7       	in	r28, 0x3d	; 61
    16d8:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    16da:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    16de:	88 23       	and	r24, r24
    16e0:	09 f0       	breq	.+2      	; 0x16e4 <__vector_20+0x3c>
    16e2:	45 c0       	rjmp	.+138    	; 0x176e <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    16e4:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    16e8:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    16ec:	89 2b       	or	r24, r25
    16ee:	31 f4       	brne	.+12     	; 0x16fc <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    16f0:	0e 94 84 57 	call	0xaf08	; 0xaf08 <_Z18nextFullLBTxBufferv>
    16f4:	80 93 fd 46 	sts	0x46FD, r24	; 0x8046fd <_ZZ11__vector_20E4buff>
    16f8:	90 93 fe 46 	sts	0x46FE, r25	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    16fc:	20 91 fd 46 	lds	r18, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    1700:	30 91 fe 46 	lds	r19, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    1704:	80 91 ff 46 	lds	r24, 0x46FF	; 0x8046ff <_ZZ11__vector_20E9charIndex>
    1708:	88 2f       	mov	r24, r24
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	82 0f       	add	r24, r18
    170e:	93 1f       	adc	r25, r19
    1710:	fc 01       	movw	r30, r24
    1712:	80 81       	ld	r24, Z
    1714:	88 23       	and	r24, r24
    1716:	a9 f0       	breq	.+42     	; 0x1742 <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1718:	80 e0       	ldi	r24, 0x00	; 0
    171a:	98 e0       	ldi	r25, 0x08	; 8
    171c:	40 91 fd 46 	lds	r20, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    1720:	50 91 fe 46 	lds	r21, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    1724:	20 91 ff 46 	lds	r18, 0x46FF	; 0x8046ff <_ZZ11__vector_20E9charIndex>
    1728:	31 e0       	ldi	r19, 0x01	; 1
    172a:	32 0f       	add	r19, r18
    172c:	30 93 ff 46 	sts	0x46FF, r19	; 0x8046ff <_ZZ11__vector_20E9charIndex>
    1730:	22 2f       	mov	r18, r18
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	24 0f       	add	r18, r20
    1736:	35 1f       	adc	r19, r21
    1738:	f9 01       	movw	r30, r18
    173a:	20 81       	ld	r18, Z
    173c:	fc 01       	movw	r30, r24
    173e:	22 83       	std	Z+2, r18	; 0x02
    1740:	16 c0       	rjmp	.+44     	; 0x176e <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    1742:	10 92 ff 46 	sts	0x46FF, r1	; 0x8046ff <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    1746:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    174a:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    174e:	fc 01       	movw	r30, r24
    1750:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1752:	0e 94 84 57 	call	0xaf08	; 0xaf08 <_Z18nextFullLBTxBufferv>
    1756:	80 93 fd 46 	sts	0x46FD, r24	; 0x8046fd <_ZZ11__vector_20E4buff>
    175a:	90 93 fe 46 	sts	0x46FE, r25	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    175e:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ11__vector_20E4buff>
    1762:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ11__vector_20E4buff+0x1>
    1766:	89 2b       	or	r24, r25
    1768:	11 f4       	brne	.+4      	; 0x176e <__vector_20+0xc6>
			{
				linkbus_end_tx();
    176a:	0e 94 c9 58 	call	0xb192	; 0xb192 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    176e:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    1772:	88 23       	and	r24, r24
    1774:	09 f0       	breq	.+2      	; 0x1778 <__vector_20+0xd0>
    1776:	45 c0       	rjmp	.+138    	; 0x1802 <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1778:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    177c:	90 91 01 47 	lds	r25, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    1780:	89 2b       	or	r24, r25
    1782:	31 f4       	brne	.+12     	; 0x1790 <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1784:	0e 94 27 60 	call	0xc04e	; 0xc04e <nextFullSBTxBuffer>
    1788:	80 93 00 47 	sts	0x4700, r24	; 0x804700 <_ZZ11__vector_20E4buff_0>
    178c:	90 93 01 47 	sts	0x4701, r25	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1790:	20 91 00 47 	lds	r18, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    1794:	30 91 01 47 	lds	r19, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    1798:	80 91 02 47 	lds	r24, 0x4702	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
    179c:	88 2f       	mov	r24, r24
    179e:	90 e0       	ldi	r25, 0x00	; 0
    17a0:	82 0f       	add	r24, r18
    17a2:	93 1f       	adc	r25, r19
    17a4:	fc 01       	movw	r30, r24
    17a6:	80 81       	ld	r24, Z
    17a8:	88 23       	and	r24, r24
    17aa:	a9 f0       	breq	.+42     	; 0x17d6 <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    17ac:	80 e0       	ldi	r24, 0x00	; 0
    17ae:	98 e0       	ldi	r25, 0x08	; 8
    17b0:	40 91 00 47 	lds	r20, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    17b4:	50 91 01 47 	lds	r21, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    17b8:	20 91 02 47 	lds	r18, 0x4702	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
    17bc:	31 e0       	ldi	r19, 0x01	; 1
    17be:	32 0f       	add	r19, r18
    17c0:	30 93 02 47 	sts	0x4702, r19	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
    17c4:	22 2f       	mov	r18, r18
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	24 0f       	add	r18, r20
    17ca:	35 1f       	adc	r19, r21
    17cc:	f9 01       	movw	r30, r18
    17ce:	20 81       	ld	r18, Z
    17d0:	fc 01       	movw	r30, r24
    17d2:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    17d4:	16 c0       	rjmp	.+44     	; 0x1802 <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    17d6:	10 92 02 47 	sts	0x4702, r1	; 0x804702 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    17da:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    17de:	90 91 01 47 	lds	r25, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    17e2:	fc 01       	movw	r30, r24
    17e4:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    17e6:	0e 94 27 60 	call	0xc04e	; 0xc04e <nextFullSBTxBuffer>
    17ea:	80 93 00 47 	sts	0x4700, r24	; 0x804700 <_ZZ11__vector_20E4buff_0>
    17ee:	90 93 01 47 	sts	0x4701, r25	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    17f2:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ11__vector_20E4buff_0>
    17f6:	90 91 01 47 	lds	r25, 0x4701	; 0x804701 <_ZZ11__vector_20E4buff_0+0x1>
    17fa:	89 2b       	or	r24, r25
    17fc:	11 f4       	brne	.+4      	; 0x1802 <__vector_20+0x15a>
			{
				serialbus_end_tx();
    17fe:	0e 94 7c 61 	call	0xc2f8	; 0xc2f8 <serialbus_end_tx>
			}
		}
	}
}
    1802:	00 00       	nop
    1804:	df 91       	pop	r29
    1806:	cf 91       	pop	r28
    1808:	ff 91       	pop	r31
    180a:	ef 91       	pop	r30
    180c:	bf 91       	pop	r27
    180e:	af 91       	pop	r26
    1810:	9f 91       	pop	r25
    1812:	8f 91       	pop	r24
    1814:	7f 91       	pop	r23
    1816:	6f 91       	pop	r22
    1818:	5f 91       	pop	r21
    181a:	4f 91       	pop	r20
    181c:	3f 91       	pop	r19
    181e:	2f 91       	pop	r18
    1820:	0f 90       	pop	r0
    1822:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1826:	0f 90       	pop	r0
    1828:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    182c:	0f 90       	pop	r0
    182e:	1f 90       	pop	r1
    1830:	18 95       	reti

00001832 <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    1832:	1f 92       	push	r1
    1834:	0f 92       	push	r0
    1836:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    183a:	0f 92       	push	r0
    183c:	11 24       	eor	r1, r1
    183e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1842:	0f 92       	push	r0
    1844:	2f 93       	push	r18
    1846:	3f 93       	push	r19
    1848:	4f 93       	push	r20
    184a:	5f 93       	push	r21
    184c:	6f 93       	push	r22
    184e:	7f 93       	push	r23
    1850:	8f 93       	push	r24
    1852:	9f 93       	push	r25
    1854:	af 93       	push	r26
    1856:	bf 93       	push	r27
    1858:	ef 93       	push	r30
    185a:	ff 93       	push	r31
    185c:	cf 93       	push	r28
    185e:	df 93       	push	r29
    1860:	cd b7       	in	r28, 0x3d	; 61
    1862:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    1864:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    1868:	84 30       	cpi	r24, 0x04	; 4
    186a:	09 f0       	breq	.+2      	; 0x186e <__vector_56+0x3c>
    186c:	45 c0       	rjmp	.+138    	; 0x18f8 <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    186e:	80 91 03 47 	lds	r24, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    1872:	90 91 04 47 	lds	r25, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    1876:	89 2b       	or	r24, r25
    1878:	31 f4       	brne	.+12     	; 0x1886 <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    187a:	0e 94 84 57 	call	0xaf08	; 0xaf08 <_Z18nextFullLBTxBufferv>
    187e:	80 93 03 47 	sts	0x4703, r24	; 0x804703 <_ZZ11__vector_56E4buff>
    1882:	90 93 04 47 	sts	0x4704, r25	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    1886:	20 91 03 47 	lds	r18, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    188a:	30 91 04 47 	lds	r19, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    188e:	80 91 05 47 	lds	r24, 0x4705	; 0x804705 <_ZZ11__vector_56E9charIndex>
    1892:	88 2f       	mov	r24, r24
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	82 0f       	add	r24, r18
    1898:	93 1f       	adc	r25, r19
    189a:	fc 01       	movw	r30, r24
    189c:	80 81       	ld	r24, Z
    189e:	88 23       	and	r24, r24
    18a0:	a9 f0       	breq	.+42     	; 0x18cc <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    18a2:	80 e8       	ldi	r24, 0x80	; 128
    18a4:	98 e0       	ldi	r25, 0x08	; 8
    18a6:	40 91 03 47 	lds	r20, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    18aa:	50 91 04 47 	lds	r21, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    18ae:	20 91 05 47 	lds	r18, 0x4705	; 0x804705 <_ZZ11__vector_56E9charIndex>
    18b2:	31 e0       	ldi	r19, 0x01	; 1
    18b4:	32 0f       	add	r19, r18
    18b6:	30 93 05 47 	sts	0x4705, r19	; 0x804705 <_ZZ11__vector_56E9charIndex>
    18ba:	22 2f       	mov	r18, r18
    18bc:	30 e0       	ldi	r19, 0x00	; 0
    18be:	24 0f       	add	r18, r20
    18c0:	35 1f       	adc	r19, r21
    18c2:	f9 01       	movw	r30, r18
    18c4:	20 81       	ld	r18, Z
    18c6:	fc 01       	movw	r30, r24
    18c8:	22 83       	std	Z+2, r18	; 0x02
    18ca:	16 c0       	rjmp	.+44     	; 0x18f8 <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    18cc:	10 92 05 47 	sts	0x4705, r1	; 0x804705 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    18d0:	80 91 03 47 	lds	r24, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    18d4:	90 91 04 47 	lds	r25, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    18d8:	fc 01       	movw	r30, r24
    18da:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    18dc:	0e 94 84 57 	call	0xaf08	; 0xaf08 <_Z18nextFullLBTxBufferv>
    18e0:	80 93 03 47 	sts	0x4703, r24	; 0x804703 <_ZZ11__vector_56E4buff>
    18e4:	90 93 04 47 	sts	0x4704, r25	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    18e8:	80 91 03 47 	lds	r24, 0x4703	; 0x804703 <_ZZ11__vector_56E4buff>
    18ec:	90 91 04 47 	lds	r25, 0x4704	; 0x804704 <_ZZ11__vector_56E4buff+0x1>
    18f0:	89 2b       	or	r24, r25
    18f2:	11 f4       	brne	.+4      	; 0x18f8 <__vector_56+0xc6>
			{
				linkbus_end_tx();
    18f4:	0e 94 c9 58 	call	0xb192	; 0xb192 <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    18f8:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    18fc:	84 30       	cpi	r24, 0x04	; 4
    18fe:	09 f0       	breq	.+2      	; 0x1902 <__vector_56+0xd0>
    1900:	45 c0       	rjmp	.+138    	; 0x198c <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1902:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1906:	90 91 07 47 	lds	r25, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    190a:	89 2b       	or	r24, r25
    190c:	31 f4       	brne	.+12     	; 0x191a <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    190e:	0e 94 27 60 	call	0xc04e	; 0xc04e <nextFullSBTxBuffer>
    1912:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1916:	90 93 07 47 	sts	0x4707, r25	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    191a:	20 91 06 47 	lds	r18, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    191e:	30 91 07 47 	lds	r19, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1922:	80 91 08 47 	lds	r24, 0x4708	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
    1926:	88 2f       	mov	r24, r24
    1928:	90 e0       	ldi	r25, 0x00	; 0
    192a:	82 0f       	add	r24, r18
    192c:	93 1f       	adc	r25, r19
    192e:	fc 01       	movw	r30, r24
    1930:	80 81       	ld	r24, Z
    1932:	88 23       	and	r24, r24
    1934:	a9 f0       	breq	.+42     	; 0x1960 <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1936:	80 e8       	ldi	r24, 0x80	; 128
    1938:	98 e0       	ldi	r25, 0x08	; 8
    193a:	40 91 06 47 	lds	r20, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    193e:	50 91 07 47 	lds	r21, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1942:	20 91 08 47 	lds	r18, 0x4708	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
    1946:	31 e0       	ldi	r19, 0x01	; 1
    1948:	32 0f       	add	r19, r18
    194a:	30 93 08 47 	sts	0x4708, r19	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
    194e:	22 2f       	mov	r18, r18
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	24 0f       	add	r18, r20
    1954:	35 1f       	adc	r19, r21
    1956:	f9 01       	movw	r30, r18
    1958:	20 81       	ld	r18, Z
    195a:	fc 01       	movw	r30, r24
    195c:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    195e:	16 c0       	rjmp	.+44     	; 0x198c <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1960:	10 92 08 47 	sts	0x4708, r1	; 0x804708 <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    1964:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1968:	90 91 07 47 	lds	r25, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    196c:	fc 01       	movw	r30, r24
    196e:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1970:	0e 94 27 60 	call	0xc04e	; 0xc04e <nextFullSBTxBuffer>
    1974:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1978:	90 93 07 47 	sts	0x4707, r25	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    197c:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ11__vector_56E4buff_0>
    1980:	90 91 07 47 	lds	r25, 0x4707	; 0x804707 <_ZZ11__vector_56E4buff_0+0x1>
    1984:	89 2b       	or	r24, r25
    1986:	11 f4       	brne	.+4      	; 0x198c <__vector_56+0x15a>
			{
				serialbus_end_tx();
    1988:	0e 94 7c 61 	call	0xc2f8	; 0xc2f8 <serialbus_end_tx>
			}
		}
	}
}
    198c:	00 00       	nop
    198e:	df 91       	pop	r29
    1990:	cf 91       	pop	r28
    1992:	ff 91       	pop	r31
    1994:	ef 91       	pop	r30
    1996:	bf 91       	pop	r27
    1998:	af 91       	pop	r26
    199a:	9f 91       	pop	r25
    199c:	8f 91       	pop	r24
    199e:	7f 91       	pop	r23
    19a0:	6f 91       	pop	r22
    19a2:	5f 91       	pop	r21
    19a4:	4f 91       	pop	r20
    19a6:	3f 91       	pop	r19
    19a8:	2f 91       	pop	r18
    19aa:	0f 90       	pop	r0
    19ac:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    19b0:	0f 90       	pop	r0
    19b2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    19b6:	0f 90       	pop	r0
    19b8:	1f 90       	pop	r1
    19ba:	18 95       	reti

000019bc <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    19bc:	1f 92       	push	r1
    19be:	0f 92       	push	r0
    19c0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    19c4:	0f 92       	push	r0
    19c6:	11 24       	eor	r1, r1
    19c8:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    19cc:	0f 92       	push	r0
    19ce:	2f 93       	push	r18
    19d0:	3f 93       	push	r19
    19d2:	4f 93       	push	r20
    19d4:	5f 93       	push	r21
    19d6:	6f 93       	push	r22
    19d8:	7f 93       	push	r23
    19da:	8f 93       	push	r24
    19dc:	9f 93       	push	r25
    19de:	af 93       	push	r26
    19e0:	bf 93       	push	r27
    19e2:	ef 93       	push	r30
    19e4:	ff 93       	push	r31
    19e6:	cf 93       	push	r28
    19e8:	df 93       	push	r29
    19ea:	1f 92       	push	r1
    19ec:	cd b7       	in	r28, 0x3d	; 61
    19ee:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    19f0:	0e 94 dc 72 	call	0xe5b8	; 0xe5b8 <USART1_get_data>
    19f4:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    19f6:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    19fa:	81 30       	cpi	r24, 0x01	; 1
    19fc:	19 f4       	brne	.+6      	; 0x1a04 <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    19fe:	89 81       	ldd	r24, Y+1	; 0x01
    1a00:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    1a04:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    1a08:	81 30       	cpi	r24, 0x01	; 1
    1a0a:	19 f4       	brne	.+6      	; 0x1a12 <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    1a0c:	89 81       	ldd	r24, Y+1	; 0x01
    1a0e:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_Z9serial_Rxh>
	}
}
    1a12:	00 00       	nop
    1a14:	0f 90       	pop	r0
    1a16:	df 91       	pop	r29
    1a18:	cf 91       	pop	r28
    1a1a:	ff 91       	pop	r31
    1a1c:	ef 91       	pop	r30
    1a1e:	bf 91       	pop	r27
    1a20:	af 91       	pop	r26
    1a22:	9f 91       	pop	r25
    1a24:	8f 91       	pop	r24
    1a26:	7f 91       	pop	r23
    1a28:	6f 91       	pop	r22
    1a2a:	5f 91       	pop	r21
    1a2c:	4f 91       	pop	r20
    1a2e:	3f 91       	pop	r19
    1a30:	2f 91       	pop	r18
    1a32:	0f 90       	pop	r0
    1a34:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1a38:	0f 90       	pop	r0
    1a3a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1a3e:	0f 90       	pop	r0
    1a40:	1f 90       	pop	r1
    1a42:	18 95       	reti

00001a44 <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1a44:	cf 93       	push	r28
    1a46:	df 93       	push	r29
    1a48:	1f 92       	push	r1
    1a4a:	cd b7       	in	r28, 0x3d	; 61
    1a4c:	de b7       	in	r29, 0x3e	; 62
    1a4e:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1a50:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1a54:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1a58:	89 2b       	or	r24, r25
    1a5a:	31 f4       	brne	.+12     	; 0x1a68 <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1a5c:	0e 94 12 58 	call	0xb024	; 0xb024 <_Z19nextEmptyLBRxBufferv>
    1a60:	80 93 09 47 	sts	0x4709, r24	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1a64:	90 93 0a 47 	sts	0x470A, r25	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1a68:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1a6c:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1a70:	89 2b       	or	r24, r25
    1a72:	09 f4       	brne	.+2      	; 0x1a76 <_Z10linkbus_Rxh+0x32>
    1a74:	43 c1       	rjmp	.+646    	; 0x1cfc <_Z10linkbus_Rxh+0x2b8>
	{
		rx_char = toupper(rx_char);
    1a76:	89 81       	ldd	r24, Y+1	; 0x01
    1a78:	88 2f       	mov	r24, r24
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	0e 94 ba 7b 	call	0xf774	; 0xf774 <toupper>
    1a80:	89 83       	std	Y+1, r24	; 0x01

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
    1a82:	89 81       	ldd	r24, Y+1	; 0x01
    1a84:	84 32       	cpi	r24, 0x24	; 36
    1a86:	19 f0       	breq	.+6      	; 0x1a8e <_Z10linkbus_Rxh+0x4a>
    1a88:	89 81       	ldd	r24, Y+1	; 0x01
    1a8a:	81 32       	cpi	r24, 0x21	; 33
    1a8c:	e9 f5       	brne	.+122    	; 0x1b08 <_Z10linkbus_Rxh+0xc4>
		{
			charIndex = 0;
    1a8e:	10 92 0b 47 	sts	0x470B, r1	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1a92:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1a96:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1a9a:	29 81       	ldd	r18, Y+1	; 0x01
    1a9c:	21 32       	cpi	r18, 0x21	; 33
    1a9e:	11 f4       	brne	.+4      	; 0x1aa4 <_Z10linkbus_Rxh+0x60>
    1aa0:	23 e0       	ldi	r18, 0x03	; 3
    1aa2:	01 c0       	rjmp	.+2      	; 0x1aa6 <_Z10linkbus_Rxh+0x62>
    1aa4:	21 e0       	ldi	r18, 0x01	; 1
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	20 83       	st	Z, r18
			field_len = 0;
    1aaa:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1aae:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1ab2:	10 92 0e 47 	sts	0x470E, r1	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1ab6:	10 92 0f 47 	sts	0x470F, r1	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1aba:	10 92 10 47 	sts	0x4710, r1	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	80 93 11 47 	sts	0x4711, r24	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1ac4:	10 92 12 47 	sts	0x4712, r1	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1ac8:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1acc:	83 30       	cpi	r24, 0x03	; 3
    1ace:	c8 f4       	brcc	.+50     	; 0x1b02 <_Z10linkbus_Rxh+0xbe>
			{
				buff->fields[field_index][0] = '\0';
    1ad0:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1ad4:	30 91 0a 47 	lds	r19, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1ad8:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1adc:	48 2f       	mov	r20, r24
    1ade:	50 e0       	ldi	r21, 0x00	; 0
    1ae0:	65 e1       	ldi	r22, 0x15	; 21
    1ae2:	64 9f       	mul	r22, r20
    1ae4:	c0 01       	movw	r24, r0
    1ae6:	65 9f       	mul	r22, r21
    1ae8:	90 0d       	add	r25, r0
    1aea:	11 24       	eor	r1, r1
    1aec:	82 0f       	add	r24, r18
    1aee:	93 1f       	adc	r25, r19
    1af0:	03 96       	adiw	r24, 0x03	; 3
    1af2:	fc 01       	movw	r30, r24
    1af4:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1af6:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1afa:	8f 5f       	subi	r24, 0xFF	; 255
    1afc:	80 93 12 47 	sts	0x4712, r24	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1b00:	e3 cf       	rjmp	.-58     	; 0x1ac8 <_Z10linkbus_Rxh+0x84>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1b02:	10 92 12 47 	sts	0x4712, r1	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1b06:	e9 c0       	rjmp	.+466    	; 0x1cda <_Z10linkbus_Rxh+0x296>
		}
		else if(receiving_msg)
    1b08:	80 91 11 47 	lds	r24, 0x4711	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
    1b0c:	88 23       	and	r24, r24
    1b0e:	09 f4       	brne	.+2      	; 0x1b12 <_Z10linkbus_Rxh+0xce>
    1b10:	c7 c0       	rjmp	.+398    	; 0x1ca0 <_Z10linkbus_Rxh+0x25c>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
    1b12:	89 81       	ldd	r24, Y+1	; 0x01
    1b14:	8c 32       	cpi	r24, 0x2C	; 44
    1b16:	39 f0       	breq	.+14     	; 0x1b26 <_Z10linkbus_Rxh+0xe2>
    1b18:	89 81       	ldd	r24, Y+1	; 0x01
    1b1a:	8b 33       	cpi	r24, 0x3B	; 59
    1b1c:	21 f0       	breq	.+8      	; 0x1b26 <_Z10linkbus_Rxh+0xe2>
    1b1e:	89 81       	ldd	r24, Y+1	; 0x01
    1b20:	8f 33       	cpi	r24, 0x3F	; 63
    1b22:	09 f0       	breq	.+2      	; 0x1b26 <_Z10linkbus_Rxh+0xe2>
    1b24:	6b c0       	rjmp	.+214    	; 0x1bfc <_Z10linkbus_Rxh+0x1b8>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1b26:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1b2a:	88 23       	and	r24, r24
    1b2c:	e1 f0       	breq	.+56     	; 0x1b66 <_Z10linkbus_Rxh+0x122>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1b2e:	40 91 09 47 	lds	r20, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1b32:	50 91 0a 47 	lds	r21, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1b36:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1b3a:	88 2f       	mov	r24, r24
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	bc 01       	movw	r22, r24
    1b40:	61 50       	subi	r22, 0x01	; 1
    1b42:	71 09       	sbc	r23, r1
    1b44:	80 91 0c 47 	lds	r24, 0x470C	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
    1b48:	88 2f       	mov	r24, r24
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	e5 e1       	ldi	r30, 0x15	; 21
    1b4e:	e6 9f       	mul	r30, r22
    1b50:	90 01       	movw	r18, r0
    1b52:	e7 9f       	mul	r30, r23
    1b54:	30 0d       	add	r19, r0
    1b56:	11 24       	eor	r1, r1
    1b58:	24 0f       	add	r18, r20
    1b5a:	35 1f       	adc	r19, r21
    1b5c:	82 0f       	add	r24, r18
    1b5e:	93 1f       	adc	r25, r19
    1b60:	03 96       	adiw	r24, 0x03	; 3
    1b62:	fc 01       	movw	r30, r24
    1b64:	10 82       	st	Z, r1
				}

				field_index++;
    1b66:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1b6a:	8f 5f       	subi	r24, 0xFF	; 255
    1b6c:	80 93 12 47 	sts	0x4712, r24	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1b70:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1b74:	89 81       	ldd	r24, Y+1	; 0x01
    1b76:	8b 33       	cpi	r24, 0x3B	; 59
    1b78:	b1 f4       	brne	.+44     	; 0x1ba6 <_Z10linkbus_Rxh+0x162>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1b7a:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1b7e:	84 30       	cpi	r24, 0x04	; 4
    1b80:	78 f0       	brcs	.+30     	; 0x1ba0 <_Z10linkbus_Rxh+0x15c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b82:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1b86:	30 91 0a 47 	lds	r19, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1b8a:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b8e:	90 91 0e 47 	lds	r25, 0x470E	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b92:	a0 91 0f 47 	lds	r26, 0x470F	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b96:	b0 91 10 47 	lds	r27, 0x4710	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b9a:	f9 01       	movw	r30, r18
    1b9c:	81 83       	std	Z+1, r24	; 0x01
    1b9e:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1ba0:	10 92 11 47 	sts	0x4711, r1	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
    1ba4:	1f c0       	rjmp	.+62     	; 0x1be4 <_Z10linkbus_Rxh+0x1a0>
				}
				else if(rx_char == '?')
    1ba6:	89 81       	ldd	r24, Y+1	; 0x01
    1ba8:	8f 33       	cpi	r24, 0x3F	; 63
    1baa:	e1 f4       	brne	.+56     	; 0x1be4 <_Z10linkbus_Rxh+0x1a0>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1bac:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1bb0:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1bb4:	22 e0       	ldi	r18, 0x02	; 2
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1bba:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1bbe:	83 30       	cpi	r24, 0x03	; 3
    1bc0:	78 f0       	brcs	.+30     	; 0x1be0 <_Z10linkbus_Rxh+0x19c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1bc2:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1bc6:	30 91 0a 47 	lds	r19, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1bca:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bce:	90 91 0e 47 	lds	r25, 0x470E	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bd2:	a0 91 0f 47 	lds	r26, 0x470F	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1bd6:	b0 91 10 47 	lds	r27, 0x4710	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1bda:	f9 01       	movw	r30, r18
    1bdc:	81 83       	std	Z+1, r24	; 0x01
    1bde:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1be0:	10 92 11 47 	sts	0x4711, r1	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1be4:	90 91 11 47 	lds	r25, 0x4711	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
    1be8:	81 e0       	ldi	r24, 0x01	; 1
    1bea:	89 27       	eor	r24, r25
    1bec:	88 23       	and	r24, r24
    1bee:	09 f4       	brne	.+2      	; 0x1bf2 <_Z10linkbus_Rxh+0x1ae>
    1bf0:	74 c0       	rjmp	.+232    	; 0x1cda <_Z10linkbus_Rxh+0x296>
				{
					buff = 0;
    1bf2:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1bf6:	10 92 0a 47 	sts	0x470A, r1	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1bfa:	6f c0       	rjmp	.+222    	; 0x1cda <_Z10linkbus_Rxh+0x296>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1bfc:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1c00:	88 23       	and	r24, r24
    1c02:	61 f5       	brne	.+88     	; 0x1c5c <_Z10linkbus_Rxh+0x218>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1c04:	80 91 0d 47 	lds	r24, 0x470D	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c08:	90 91 0e 47 	lds	r25, 0x470E	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c0c:	a0 91 0f 47 	lds	r26, 0x470F	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c10:	b0 91 10 47 	lds	r27, 0x4710	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c14:	88 0f       	add	r24, r24
    1c16:	99 1f       	adc	r25, r25
    1c18:	aa 1f       	adc	r26, r26
    1c1a:	bb 1f       	adc	r27, r27
    1c1c:	9c 01       	movw	r18, r24
    1c1e:	ad 01       	movw	r20, r26
    1c20:	22 0f       	add	r18, r18
    1c22:	33 1f       	adc	r19, r19
    1c24:	44 1f       	adc	r20, r20
    1c26:	55 1f       	adc	r21, r21
    1c28:	22 0f       	add	r18, r18
    1c2a:	33 1f       	adc	r19, r19
    1c2c:	44 1f       	adc	r20, r20
    1c2e:	55 1f       	adc	r21, r21
    1c30:	28 0f       	add	r18, r24
    1c32:	39 1f       	adc	r19, r25
    1c34:	4a 1f       	adc	r20, r26
    1c36:	5b 1f       	adc	r21, r27
    1c38:	89 81       	ldd	r24, Y+1	; 0x01
    1c3a:	88 2f       	mov	r24, r24
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	a0 e0       	ldi	r26, 0x00	; 0
    1c40:	b0 e0       	ldi	r27, 0x00	; 0
    1c42:	82 0f       	add	r24, r18
    1c44:	93 1f       	adc	r25, r19
    1c46:	a4 1f       	adc	r26, r20
    1c48:	b5 1f       	adc	r27, r21
    1c4a:	80 93 0d 47 	sts	0x470D, r24	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c4e:	90 93 0e 47 	sts	0x470E, r25	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c52:	a0 93 0f 47 	sts	0x470F, r26	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c56:	b0 93 10 47 	sts	0x4710, r27	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c5a:	3f c0       	rjmp	.+126    	; 0x1cda <_Z10linkbus_Rxh+0x296>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1c5c:	40 91 09 47 	lds	r20, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1c60:	50 91 0a 47 	lds	r21, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1c64:	80 91 12 47 	lds	r24, 0x4712	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
    1c68:	88 2f       	mov	r24, r24
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	bc 01       	movw	r22, r24
    1c6e:	61 50       	subi	r22, 0x01	; 1
    1c70:	71 09       	sbc	r23, r1
    1c72:	80 91 0c 47 	lds	r24, 0x470C	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
    1c76:	91 e0       	ldi	r25, 0x01	; 1
    1c78:	98 0f       	add	r25, r24
    1c7a:	90 93 0c 47 	sts	0x470C, r25	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
    1c7e:	88 2f       	mov	r24, r24
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	e5 e1       	ldi	r30, 0x15	; 21
    1c84:	e6 9f       	mul	r30, r22
    1c86:	90 01       	movw	r18, r0
    1c88:	e7 9f       	mul	r30, r23
    1c8a:	30 0d       	add	r19, r0
    1c8c:	11 24       	eor	r1, r1
    1c8e:	24 0f       	add	r18, r20
    1c90:	35 1f       	adc	r19, r21
    1c92:	82 0f       	add	r24, r18
    1c94:	93 1f       	adc	r25, r19
    1c96:	03 96       	adiw	r24, 0x03	; 3
    1c98:	29 81       	ldd	r18, Y+1	; 0x01
    1c9a:	fc 01       	movw	r30, r24
    1c9c:	20 83       	st	Z, r18
    1c9e:	1d c0       	rjmp	.+58     	; 0x1cda <_Z10linkbus_Rxh+0x296>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1ca0:	89 81       	ldd	r24, Y+1	; 0x01
    1ca2:	8d 30       	cpi	r24, 0x0D	; 13
    1ca4:	d1 f4       	brne	.+52     	; 0x1cda <_Z10linkbus_Rxh+0x296>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1ca6:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1caa:	90 91 0a 47 	lds	r25, 0x470A	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
    1cae:	fc 01       	movw	r30, r24
    1cb0:	11 82       	std	Z+1, r1	; 0x01
    1cb2:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1cb4:	82 e3       	ldi	r24, 0x32	; 50
    1cb6:	80 93 0b 47 	sts	0x470B, r24	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1cba:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1cbe:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZZ10linkbus_RxhE10tempMsg_ID>
    1cc2:	10 92 0e 47 	sts	0x470E, r1	; 0x80470e <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1cc6:	10 92 0f 47 	sts	0x470F, r1	; 0x80470f <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1cca:	10 92 10 47 	sts	0x4710, r1	; 0x804710 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1cce:	10 92 12 47 	sts	0x4712, r1	; 0x804712 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1cd2:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ10linkbus_RxhE4buff>
    1cd6:	10 92 0a 47 	sts	0x470A, r1	; 0x80470a <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1cda:	80 91 0b 47 	lds	r24, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1cde:	8f 5f       	subi	r24, 0xFF	; 255
    1ce0:	80 93 0b 47 	sts	0x470B, r24	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1ce4:	90 91 0b 47 	lds	r25, 0x470B	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	92 33       	cpi	r25, 0x32	; 50
    1cec:	08 f4       	brcc	.+2      	; 0x1cf0 <_Z10linkbus_Rxh+0x2ac>
    1cee:	80 e0       	ldi	r24, 0x00	; 0
    1cf0:	88 23       	and	r24, r24
    1cf2:	21 f0       	breq	.+8      	; 0x1cfc <_Z10linkbus_Rxh+0x2b8>
		{
			receiving_msg = false;
    1cf4:	10 92 11 47 	sts	0x4711, r1	; 0x804711 <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
    1cf8:	10 92 0b 47 	sts	0x470B, r1	; 0x80470b <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
    1cfc:	00 00       	nop
    1cfe:	0f 90       	pop	r0
    1d00:	df 91       	pop	r29
    1d02:	cf 91       	pop	r28
    1d04:	08 95       	ret

00001d06 <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1d06:	1f 92       	push	r1
    1d08:	0f 92       	push	r0
    1d0a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1d0e:	0f 92       	push	r0
    1d10:	11 24       	eor	r1, r1
    1d12:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1d16:	0f 92       	push	r0
    1d18:	2f 93       	push	r18
    1d1a:	3f 93       	push	r19
    1d1c:	4f 93       	push	r20
    1d1e:	5f 93       	push	r21
    1d20:	6f 93       	push	r22
    1d22:	7f 93       	push	r23
    1d24:	8f 93       	push	r24
    1d26:	9f 93       	push	r25
    1d28:	af 93       	push	r26
    1d2a:	bf 93       	push	r27
    1d2c:	ef 93       	push	r30
    1d2e:	ff 93       	push	r31
    1d30:	cf 93       	push	r28
    1d32:	df 93       	push	r29
    1d34:	cd b7       	in	r28, 0x3d	; 61
    1d36:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1d38:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    1d3c:	81 30       	cpi	r24, 0x01	; 1
    1d3e:	09 f0       	breq	.+2      	; 0x1d42 <__vector_32+0x3c>
    1d40:	45 c0       	rjmp	.+138    	; 0x1dcc <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1d42:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1d46:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1d4a:	89 2b       	or	r24, r25
    1d4c:	31 f4       	brne	.+12     	; 0x1d5a <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1d4e:	0e 94 27 60 	call	0xc04e	; 0xc04e <nextFullSBTxBuffer>
    1d52:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <_ZZ11__vector_32E4buff>
    1d56:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1d5a:	20 91 13 47 	lds	r18, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1d5e:	30 91 14 47 	lds	r19, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1d62:	80 91 15 47 	lds	r24, 0x4715	; 0x804715 <_ZZ11__vector_32E9charIndex>
    1d66:	88 2f       	mov	r24, r24
    1d68:	90 e0       	ldi	r25, 0x00	; 0
    1d6a:	82 0f       	add	r24, r18
    1d6c:	93 1f       	adc	r25, r19
    1d6e:	fc 01       	movw	r30, r24
    1d70:	80 81       	ld	r24, Z
    1d72:	88 23       	and	r24, r24
    1d74:	a9 f0       	breq	.+42     	; 0x1da0 <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1d76:	80 e2       	ldi	r24, 0x20	; 32
    1d78:	98 e0       	ldi	r25, 0x08	; 8
    1d7a:	40 91 13 47 	lds	r20, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1d7e:	50 91 14 47 	lds	r21, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1d82:	20 91 15 47 	lds	r18, 0x4715	; 0x804715 <_ZZ11__vector_32E9charIndex>
    1d86:	31 e0       	ldi	r19, 0x01	; 1
    1d88:	32 0f       	add	r19, r18
    1d8a:	30 93 15 47 	sts	0x4715, r19	; 0x804715 <_ZZ11__vector_32E9charIndex>
    1d8e:	22 2f       	mov	r18, r18
    1d90:	30 e0       	ldi	r19, 0x00	; 0
    1d92:	24 0f       	add	r18, r20
    1d94:	35 1f       	adc	r19, r21
    1d96:	f9 01       	movw	r30, r18
    1d98:	20 81       	ld	r18, Z
    1d9a:	fc 01       	movw	r30, r24
    1d9c:	22 83       	std	Z+2, r18	; 0x02
    1d9e:	16 c0       	rjmp	.+44     	; 0x1dcc <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1da0:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1da4:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1da8:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1dac:	fc 01       	movw	r30, r24
    1dae:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1db0:	0e 94 27 60 	call	0xc04e	; 0xc04e <nextFullSBTxBuffer>
    1db4:	80 93 13 47 	sts	0x4713, r24	; 0x804713 <_ZZ11__vector_32E4buff>
    1db8:	90 93 14 47 	sts	0x4714, r25	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1dbc:	80 91 13 47 	lds	r24, 0x4713	; 0x804713 <_ZZ11__vector_32E4buff>
    1dc0:	90 91 14 47 	lds	r25, 0x4714	; 0x804714 <_ZZ11__vector_32E4buff+0x1>
    1dc4:	89 2b       	or	r24, r25
    1dc6:	11 f4       	brne	.+4      	; 0x1dcc <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1dc8:	0e 94 7c 61 	call	0xc2f8	; 0xc2f8 <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1dcc:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    1dd0:	81 30       	cpi	r24, 0x01	; 1
    1dd2:	09 f0       	breq	.+2      	; 0x1dd6 <__vector_32+0xd0>
    1dd4:	45 c0       	rjmp	.+138    	; 0x1e60 <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1dd6:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1dda:	90 91 17 47 	lds	r25, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1dde:	89 2b       	or	r24, r25
    1de0:	31 f4       	brne	.+12     	; 0x1dee <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1de2:	0e 94 84 57 	call	0xaf08	; 0xaf08 <_Z18nextFullLBTxBufferv>
    1de6:	80 93 16 47 	sts	0x4716, r24	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1dea:	90 93 17 47 	sts	0x4717, r25	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1dee:	20 91 16 47 	lds	r18, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1df2:	30 91 17 47 	lds	r19, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1df6:	80 91 18 47 	lds	r24, 0x4718	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
    1dfa:	88 2f       	mov	r24, r24
    1dfc:	90 e0       	ldi	r25, 0x00	; 0
    1dfe:	82 0f       	add	r24, r18
    1e00:	93 1f       	adc	r25, r19
    1e02:	fc 01       	movw	r30, r24
    1e04:	80 81       	ld	r24, Z
    1e06:	88 23       	and	r24, r24
    1e08:	a9 f0       	breq	.+42     	; 0x1e34 <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1e0a:	80 e2       	ldi	r24, 0x20	; 32
    1e0c:	98 e0       	ldi	r25, 0x08	; 8
    1e0e:	40 91 16 47 	lds	r20, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1e12:	50 91 17 47 	lds	r21, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1e16:	20 91 18 47 	lds	r18, 0x4718	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
    1e1a:	31 e0       	ldi	r19, 0x01	; 1
    1e1c:	32 0f       	add	r19, r18
    1e1e:	30 93 18 47 	sts	0x4718, r19	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
    1e22:	22 2f       	mov	r18, r18
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	24 0f       	add	r18, r20
    1e28:	35 1f       	adc	r19, r21
    1e2a:	f9 01       	movw	r30, r18
    1e2c:	20 81       	ld	r18, Z
    1e2e:	fc 01       	movw	r30, r24
    1e30:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1e32:	16 c0       	rjmp	.+44     	; 0x1e60 <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1e34:	10 92 18 47 	sts	0x4718, r1	; 0x804718 <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1e38:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1e3c:	90 91 17 47 	lds	r25, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1e40:	fc 01       	movw	r30, r24
    1e42:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1e44:	0e 94 84 57 	call	0xaf08	; 0xaf08 <_Z18nextFullLBTxBufferv>
    1e48:	80 93 16 47 	sts	0x4716, r24	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1e4c:	90 93 17 47 	sts	0x4717, r25	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1e50:	80 91 16 47 	lds	r24, 0x4716	; 0x804716 <_ZZ11__vector_32E4buff_0>
    1e54:	90 91 17 47 	lds	r25, 0x4717	; 0x804717 <_ZZ11__vector_32E4buff_0+0x1>
    1e58:	89 2b       	or	r24, r25
    1e5a:	11 f4       	brne	.+4      	; 0x1e60 <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1e5c:	0e 94 c9 58 	call	0xb192	; 0xb192 <_Z14linkbus_end_txv>
			}
		}
	}
}
    1e60:	00 00       	nop
    1e62:	df 91       	pop	r29
    1e64:	cf 91       	pop	r28
    1e66:	ff 91       	pop	r31
    1e68:	ef 91       	pop	r30
    1e6a:	bf 91       	pop	r27
    1e6c:	af 91       	pop	r26
    1e6e:	9f 91       	pop	r25
    1e70:	8f 91       	pop	r24
    1e72:	7f 91       	pop	r23
    1e74:	6f 91       	pop	r22
    1e76:	5f 91       	pop	r21
    1e78:	4f 91       	pop	r20
    1e7a:	3f 91       	pop	r19
    1e7c:	2f 91       	pop	r18
    1e7e:	0f 90       	pop	r0
    1e80:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e84:	0f 90       	pop	r0
    1e86:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e8a:	0f 90       	pop	r0
    1e8c:	1f 90       	pop	r1
    1e8e:	18 95       	reti

00001e90 <PORTA_set_pin_level>:
}

void initializeAllEventSettings(bool disableEvent)
{
	
}
    1e90:	cf 93       	push	r28
    1e92:	df 93       	push	r29
    1e94:	00 d0       	rcall	.+0      	; 0x1e96 <PORTA_set_pin_level+0x6>
    1e96:	cd b7       	in	r28, 0x3d	; 61
    1e98:	de b7       	in	r29, 0x3e	; 62
    1e9a:	89 83       	std	Y+1, r24	; 0x01
    1e9c:	6a 83       	std	Y+2, r22	; 0x02
    1e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1ea0:	88 23       	and	r24, r24
    1ea2:	a9 f0       	breq	.+42     	; 0x1ece <PORTA_set_pin_level+0x3e>
    1ea4:	20 e0       	ldi	r18, 0x00	; 0
    1ea6:	30 e0       	ldi	r19, 0x00	; 0
    1ea8:	80 e0       	ldi	r24, 0x00	; 0
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	fc 01       	movw	r30, r24
    1eae:	81 81       	ldd	r24, Z+1	; 0x01
    1eb0:	68 2f       	mov	r22, r24
    1eb2:	89 81       	ldd	r24, Y+1	; 0x01
    1eb4:	48 2f       	mov	r20, r24
    1eb6:	50 e0       	ldi	r21, 0x00	; 0
    1eb8:	81 e0       	ldi	r24, 0x01	; 1
    1eba:	90 e0       	ldi	r25, 0x00	; 0
    1ebc:	02 c0       	rjmp	.+4      	; 0x1ec2 <PORTA_set_pin_level+0x32>
    1ebe:	88 0f       	add	r24, r24
    1ec0:	99 1f       	adc	r25, r25
    1ec2:	4a 95       	dec	r20
    1ec4:	e2 f7       	brpl	.-8      	; 0x1ebe <PORTA_set_pin_level+0x2e>
    1ec6:	86 2b       	or	r24, r22
    1ec8:	f9 01       	movw	r30, r18
    1eca:	81 83       	std	Z+1, r24	; 0x01
    1ecc:	15 c0       	rjmp	.+42     	; 0x1ef8 <PORTA_set_pin_level+0x68>
    1ece:	20 e0       	ldi	r18, 0x00	; 0
    1ed0:	30 e0       	ldi	r19, 0x00	; 0
    1ed2:	80 e0       	ldi	r24, 0x00	; 0
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	fc 01       	movw	r30, r24
    1ed8:	81 81       	ldd	r24, Z+1	; 0x01
    1eda:	68 2f       	mov	r22, r24
    1edc:	89 81       	ldd	r24, Y+1	; 0x01
    1ede:	48 2f       	mov	r20, r24
    1ee0:	50 e0       	ldi	r21, 0x00	; 0
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	90 e0       	ldi	r25, 0x00	; 0
    1ee6:	02 c0       	rjmp	.+4      	; 0x1eec <PORTA_set_pin_level+0x5c>
    1ee8:	88 0f       	add	r24, r24
    1eea:	99 1f       	adc	r25, r25
    1eec:	4a 95       	dec	r20
    1eee:	e2 f7       	brpl	.-8      	; 0x1ee8 <PORTA_set_pin_level+0x58>
    1ef0:	80 95       	com	r24
    1ef2:	86 23       	and	r24, r22
    1ef4:	f9 01       	movw	r30, r18
    1ef6:	81 83       	std	Z+1, r24	; 0x01
    1ef8:	00 00       	nop
    1efa:	0f 90       	pop	r0
    1efc:	0f 90       	pop	r0
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	08 95       	ret

00001f04 <PORTB_set_pin_level>:
    1f04:	cf 93       	push	r28
    1f06:	df 93       	push	r29
    1f08:	00 d0       	rcall	.+0      	; 0x1f0a <PORTB_set_pin_level+0x6>
    1f0a:	cd b7       	in	r28, 0x3d	; 61
    1f0c:	de b7       	in	r29, 0x3e	; 62
    1f0e:	89 83       	std	Y+1, r24	; 0x01
    1f10:	6a 83       	std	Y+2, r22	; 0x02
    1f12:	8a 81       	ldd	r24, Y+2	; 0x02
    1f14:	88 23       	and	r24, r24
    1f16:	a9 f0       	breq	.+42     	; 0x1f42 <PORTB_set_pin_level+0x3e>
    1f18:	84 e0       	ldi	r24, 0x04	; 4
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	24 e0       	ldi	r18, 0x04	; 4
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	f9 01       	movw	r30, r18
    1f22:	21 81       	ldd	r18, Z+1	; 0x01
    1f24:	62 2f       	mov	r22, r18
    1f26:	29 81       	ldd	r18, Y+1	; 0x01
    1f28:	42 2f       	mov	r20, r18
    1f2a:	50 e0       	ldi	r21, 0x00	; 0
    1f2c:	21 e0       	ldi	r18, 0x01	; 1
    1f2e:	30 e0       	ldi	r19, 0x00	; 0
    1f30:	02 c0       	rjmp	.+4      	; 0x1f36 <PORTB_set_pin_level+0x32>
    1f32:	22 0f       	add	r18, r18
    1f34:	33 1f       	adc	r19, r19
    1f36:	4a 95       	dec	r20
    1f38:	e2 f7       	brpl	.-8      	; 0x1f32 <PORTB_set_pin_level+0x2e>
    1f3a:	26 2b       	or	r18, r22
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	21 83       	std	Z+1, r18	; 0x01
    1f40:	15 c0       	rjmp	.+42     	; 0x1f6c <PORTB_set_pin_level+0x68>
    1f42:	84 e0       	ldi	r24, 0x04	; 4
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	24 e0       	ldi	r18, 0x04	; 4
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	f9 01       	movw	r30, r18
    1f4c:	21 81       	ldd	r18, Z+1	; 0x01
    1f4e:	62 2f       	mov	r22, r18
    1f50:	29 81       	ldd	r18, Y+1	; 0x01
    1f52:	42 2f       	mov	r20, r18
    1f54:	50 e0       	ldi	r21, 0x00	; 0
    1f56:	21 e0       	ldi	r18, 0x01	; 1
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	02 c0       	rjmp	.+4      	; 0x1f60 <PORTB_set_pin_level+0x5c>
    1f5c:	22 0f       	add	r18, r18
    1f5e:	33 1f       	adc	r19, r19
    1f60:	4a 95       	dec	r20
    1f62:	e2 f7       	brpl	.-8      	; 0x1f5c <PORTB_set_pin_level+0x58>
    1f64:	20 95       	com	r18
    1f66:	26 23       	and	r18, r22
    1f68:	fc 01       	movw	r30, r24
    1f6a:	21 83       	std	Z+1, r18	; 0x01
    1f6c:	00 00       	nop
    1f6e:	0f 90       	pop	r0
    1f70:	0f 90       	pop	r0
    1f72:	df 91       	pop	r29
    1f74:	cf 91       	pop	r28
    1f76:	08 95       	ret

00001f78 <PORTC_set_pin_pull_mode>:
    1f78:	cf 93       	push	r28
    1f7a:	df 93       	push	r29
    1f7c:	00 d0       	rcall	.+0      	; 0x1f7e <PORTC_set_pin_pull_mode+0x6>
    1f7e:	00 d0       	rcall	.+0      	; 0x1f80 <PORTC_set_pin_pull_mode+0x8>
    1f80:	cd b7       	in	r28, 0x3d	; 61
    1f82:	de b7       	in	r29, 0x3e	; 62
    1f84:	8b 83       	std	Y+3, r24	; 0x03
    1f86:	6c 83       	std	Y+4, r22	; 0x04
    1f88:	8b 81       	ldd	r24, Y+3	; 0x03
    1f8a:	88 2f       	mov	r24, r24
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	80 5b       	subi	r24, 0xB0	; 176
    1f90:	9b 4f       	sbci	r25, 0xFB	; 251
    1f92:	89 83       	std	Y+1, r24	; 0x01
    1f94:	9a 83       	std	Y+2, r25	; 0x02
    1f96:	8c 81       	ldd	r24, Y+4	; 0x04
    1f98:	81 30       	cpi	r24, 0x01	; 1
    1f9a:	59 f4       	brne	.+22     	; 0x1fb2 <PORTC_set_pin_pull_mode+0x3a>
    1f9c:	89 81       	ldd	r24, Y+1	; 0x01
    1f9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa0:	fc 01       	movw	r30, r24
    1fa2:	80 81       	ld	r24, Z
    1fa4:	28 2f       	mov	r18, r24
    1fa6:	28 60       	ori	r18, 0x08	; 8
    1fa8:	89 81       	ldd	r24, Y+1	; 0x01
    1faa:	9a 81       	ldd	r25, Y+2	; 0x02
    1fac:	fc 01       	movw	r30, r24
    1fae:	20 83       	st	Z, r18
    1fb0:	0d c0       	rjmp	.+26     	; 0x1fcc <PORTC_set_pin_pull_mode+0x54>
    1fb2:	8c 81       	ldd	r24, Y+4	; 0x04
    1fb4:	88 23       	and	r24, r24
    1fb6:	51 f4       	brne	.+20     	; 0x1fcc <PORTC_set_pin_pull_mode+0x54>
    1fb8:	89 81       	ldd	r24, Y+1	; 0x01
    1fba:	9a 81       	ldd	r25, Y+2	; 0x02
    1fbc:	fc 01       	movw	r30, r24
    1fbe:	80 81       	ld	r24, Z
    1fc0:	28 2f       	mov	r18, r24
    1fc2:	27 7f       	andi	r18, 0xF7	; 247
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc8:	fc 01       	movw	r30, r24
    1fca:	20 83       	st	Z, r18
    1fcc:	00 00       	nop
    1fce:	24 96       	adiw	r28, 0x04	; 4
    1fd0:	cd bf       	out	0x3d, r28	; 61
    1fd2:	de bf       	out	0x3e, r29	; 62
    1fd4:	df 91       	pop	r29
    1fd6:	cf 91       	pop	r28
    1fd8:	08 95       	ret

00001fda <PORTC_set_pin_level>:
    1fda:	cf 93       	push	r28
    1fdc:	df 93       	push	r29
    1fde:	00 d0       	rcall	.+0      	; 0x1fe0 <PORTC_set_pin_level+0x6>
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	89 83       	std	Y+1, r24	; 0x01
    1fe6:	6a 83       	std	Y+2, r22	; 0x02
    1fe8:	8a 81       	ldd	r24, Y+2	; 0x02
    1fea:	88 23       	and	r24, r24
    1fec:	a9 f0       	breq	.+42     	; 0x2018 <PORTC_set_pin_level+0x3e>
    1fee:	88 e0       	ldi	r24, 0x08	; 8
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	28 e0       	ldi	r18, 0x08	; 8
    1ff4:	30 e0       	ldi	r19, 0x00	; 0
    1ff6:	f9 01       	movw	r30, r18
    1ff8:	21 81       	ldd	r18, Z+1	; 0x01
    1ffa:	62 2f       	mov	r22, r18
    1ffc:	29 81       	ldd	r18, Y+1	; 0x01
    1ffe:	42 2f       	mov	r20, r18
    2000:	50 e0       	ldi	r21, 0x00	; 0
    2002:	21 e0       	ldi	r18, 0x01	; 1
    2004:	30 e0       	ldi	r19, 0x00	; 0
    2006:	02 c0       	rjmp	.+4      	; 0x200c <PORTC_set_pin_level+0x32>
    2008:	22 0f       	add	r18, r18
    200a:	33 1f       	adc	r19, r19
    200c:	4a 95       	dec	r20
    200e:	e2 f7       	brpl	.-8      	; 0x2008 <PORTC_set_pin_level+0x2e>
    2010:	26 2b       	or	r18, r22
    2012:	fc 01       	movw	r30, r24
    2014:	21 83       	std	Z+1, r18	; 0x01
    2016:	15 c0       	rjmp	.+42     	; 0x2042 <PORTC_set_pin_level+0x68>
    2018:	88 e0       	ldi	r24, 0x08	; 8
    201a:	90 e0       	ldi	r25, 0x00	; 0
    201c:	28 e0       	ldi	r18, 0x08	; 8
    201e:	30 e0       	ldi	r19, 0x00	; 0
    2020:	f9 01       	movw	r30, r18
    2022:	21 81       	ldd	r18, Z+1	; 0x01
    2024:	62 2f       	mov	r22, r18
    2026:	29 81       	ldd	r18, Y+1	; 0x01
    2028:	42 2f       	mov	r20, r18
    202a:	50 e0       	ldi	r21, 0x00	; 0
    202c:	21 e0       	ldi	r18, 0x01	; 1
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	02 c0       	rjmp	.+4      	; 0x2036 <PORTC_set_pin_level+0x5c>
    2032:	22 0f       	add	r18, r18
    2034:	33 1f       	adc	r19, r19
    2036:	4a 95       	dec	r20
    2038:	e2 f7       	brpl	.-8      	; 0x2032 <PORTC_set_pin_level+0x58>
    203a:	20 95       	com	r18
    203c:	26 23       	and	r18, r22
    203e:	fc 01       	movw	r30, r24
    2040:	21 83       	std	Z+1, r18	; 0x01
    2042:	00 00       	nop
    2044:	0f 90       	pop	r0
    2046:	0f 90       	pop	r0
    2048:	df 91       	pop	r29
    204a:	cf 91       	pop	r28
    204c:	08 95       	ret

0000204e <PORTC_get_pin_level>:
    204e:	cf 93       	push	r28
    2050:	df 93       	push	r29
    2052:	1f 92       	push	r1
    2054:	cd b7       	in	r28, 0x3d	; 61
    2056:	de b7       	in	r29, 0x3e	; 62
    2058:	89 83       	std	Y+1, r24	; 0x01
    205a:	88 e0       	ldi	r24, 0x08	; 8
    205c:	90 e0       	ldi	r25, 0x00	; 0
    205e:	fc 01       	movw	r30, r24
    2060:	82 81       	ldd	r24, Z+2	; 0x02
    2062:	88 2f       	mov	r24, r24
    2064:	90 e0       	ldi	r25, 0x00	; 0
    2066:	29 81       	ldd	r18, Y+1	; 0x01
    2068:	22 2f       	mov	r18, r18
    206a:	30 e0       	ldi	r19, 0x00	; 0
    206c:	02 c0       	rjmp	.+4      	; 0x2072 <PORTC_get_pin_level+0x24>
    206e:	95 95       	asr	r25
    2070:	87 95       	ror	r24
    2072:	2a 95       	dec	r18
    2074:	e2 f7       	brpl	.-8      	; 0x206e <PORTC_get_pin_level+0x20>
    2076:	81 70       	andi	r24, 0x01	; 1
    2078:	99 27       	eor	r25, r25
    207a:	21 e0       	ldi	r18, 0x01	; 1
    207c:	89 2b       	or	r24, r25
    207e:	09 f4       	brne	.+2      	; 0x2082 <PORTC_get_pin_level+0x34>
    2080:	20 e0       	ldi	r18, 0x00	; 0
    2082:	82 2f       	mov	r24, r18
    2084:	0f 90       	pop	r0
    2086:	df 91       	pop	r29
    2088:	cf 91       	pop	r28
    208a:	08 95       	ret

0000208c <PORTD_get_pin_level>:
    208c:	cf 93       	push	r28
    208e:	df 93       	push	r29
    2090:	1f 92       	push	r1
    2092:	cd b7       	in	r28, 0x3d	; 61
    2094:	de b7       	in	r29, 0x3e	; 62
    2096:	89 83       	std	Y+1, r24	; 0x01
    2098:	8c e0       	ldi	r24, 0x0C	; 12
    209a:	90 e0       	ldi	r25, 0x00	; 0
    209c:	fc 01       	movw	r30, r24
    209e:	82 81       	ldd	r24, Z+2	; 0x02
    20a0:	88 2f       	mov	r24, r24
    20a2:	90 e0       	ldi	r25, 0x00	; 0
    20a4:	29 81       	ldd	r18, Y+1	; 0x01
    20a6:	22 2f       	mov	r18, r18
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	02 c0       	rjmp	.+4      	; 0x20b0 <PORTD_get_pin_level+0x24>
    20ac:	95 95       	asr	r25
    20ae:	87 95       	ror	r24
    20b0:	2a 95       	dec	r18
    20b2:	e2 f7       	brpl	.-8      	; 0x20ac <PORTD_get_pin_level+0x20>
    20b4:	81 70       	andi	r24, 0x01	; 1
    20b6:	99 27       	eor	r25, r25
    20b8:	21 e0       	ldi	r18, 0x01	; 1
    20ba:	89 2b       	or	r24, r25
    20bc:	09 f4       	brne	.+2      	; 0x20c0 <PORTD_get_pin_level+0x34>
    20be:	20 e0       	ldi	r18, 0x00	; 0
    20c0:	82 2f       	mov	r24, r18
    20c2:	0f 90       	pop	r0
    20c4:	df 91       	pop	r29
    20c6:	cf 91       	pop	r28
    20c8:	08 95       	ret

000020ca <LED_set_RED_level>:
    20ca:	cf 93       	push	r28
    20cc:	df 93       	push	r29
    20ce:	1f 92       	push	r1
    20d0:	cd b7       	in	r28, 0x3d	; 61
    20d2:	de b7       	in	r29, 0x3e	; 62
    20d4:	89 83       	std	Y+1, r24	; 0x01
    20d6:	69 81       	ldd	r22, Y+1	; 0x01
    20d8:	86 e0       	ldi	r24, 0x06	; 6
    20da:	0e 94 ed 0f 	call	0x1fda	; 0x1fda <PORTC_set_pin_level>
    20de:	00 00       	nop
    20e0:	0f 90       	pop	r0
    20e2:	df 91       	pop	r29
    20e4:	cf 91       	pop	r28
    20e6:	08 95       	ret

000020e8 <__vector_6>:
    20e8:	1f 92       	push	r1
    20ea:	0f 92       	push	r0
    20ec:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    20f0:	0f 92       	push	r0
    20f2:	11 24       	eor	r1, r1
    20f4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    20f8:	0f 92       	push	r0
    20fa:	ef 92       	push	r14
    20fc:	ff 92       	push	r15
    20fe:	0f 93       	push	r16
    2100:	1f 93       	push	r17
    2102:	2f 93       	push	r18
    2104:	3f 93       	push	r19
    2106:	4f 93       	push	r20
    2108:	5f 93       	push	r21
    210a:	6f 93       	push	r22
    210c:	7f 93       	push	r23
    210e:	8f 93       	push	r24
    2110:	9f 93       	push	r25
    2112:	af 93       	push	r26
    2114:	bf 93       	push	r27
    2116:	ef 93       	push	r30
    2118:	ff 93       	push	r31
    211a:	cf 93       	push	r28
    211c:	df 93       	push	r29
    211e:	cd b7       	in	r28, 0x3d	; 61
    2120:	de b7       	in	r29, 0x3e	; 62
    2122:	2f 97       	sbiw	r28, 0x0f	; 15
    2124:	cd bf       	out	0x3d, r28	; 61
    2126:	de bf       	out	0x3e, r29	; 62
    2128:	80 e0       	ldi	r24, 0x00	; 0
    212a:	94 e0       	ldi	r25, 0x04	; 4
    212c:	fc 01       	movw	r30, r24
    212e:	81 85       	ldd	r24, Z+9	; 0x09
    2130:	88 2f       	mov	r24, r24
    2132:	90 e0       	ldi	r25, 0x00	; 0
    2134:	84 70       	andi	r24, 0x04	; 4
    2136:	99 27       	eor	r25, r25
    2138:	21 e0       	ldi	r18, 0x01	; 1
    213a:	89 2b       	or	r24, r25
    213c:	09 f4       	brne	.+2      	; 0x2140 <__vector_6+0x58>
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	22 23       	and	r18, r18
    2142:	09 f4       	brne	.+2      	; 0x2146 <__vector_6+0x5e>
    2144:	e5 c3       	rjmp	.+1994   	; 0x2910 <__vector_6+0x828>
    2146:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    214a:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    214e:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    2152:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    2156:	01 96       	adiw	r24, 0x01	; 1
    2158:	a1 1d       	adc	r26, r1
    215a:	b1 1d       	adc	r27, r1
    215c:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    2160:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    2164:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    2168:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>
    216c:	0e 94 0b 06 	call	0xc16	; 0xc16 <system_tick>
    2170:	80 91 99 47 	lds	r24, 0x4799	; 0x804799 <_ZL10g_sleeping>
    2174:	88 23       	and	r24, r24
    2176:	09 f4       	brne	.+2      	; 0x217a <__vector_6+0x92>
    2178:	3e c0       	rjmp	.+124    	; 0x21f6 <__vector_6+0x10e>
    217a:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    217e:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    2182:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    2186:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    218a:	21 e0       	ldi	r18, 0x01	; 1
    218c:	89 2b       	or	r24, r25
    218e:	8a 2b       	or	r24, r26
    2190:	8b 2b       	or	r24, r27
    2192:	09 f4       	brne	.+2      	; 0x2196 <__vector_6+0xae>
    2194:	20 e0       	ldi	r18, 0x00	; 0
    2196:	22 23       	and	r18, r18
    2198:	99 f0       	breq	.+38     	; 0x21c0 <__vector_6+0xd8>
    219a:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    219e:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    21a2:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    21a6:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    21aa:	01 97       	sbiw	r24, 0x01	; 1
    21ac:	a1 09       	sbc	r26, r1
    21ae:	b1 09       	sbc	r27, r1
    21b0:	80 93 9a 47 	sts	0x479A, r24	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    21b4:	90 93 9b 47 	sts	0x479B, r25	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    21b8:	a0 93 9c 47 	sts	0x479C, r26	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    21bc:	b0 93 9d 47 	sts	0x479D, r27	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    21c0:	80 91 9a 47 	lds	r24, 0x479A	; 0x80479a <_ZL23g_seconds_left_to_sleep>
    21c4:	90 91 9b 47 	lds	r25, 0x479B	; 0x80479b <_ZL23g_seconds_left_to_sleep+0x1>
    21c8:	a0 91 9c 47 	lds	r26, 0x479C	; 0x80479c <_ZL23g_seconds_left_to_sleep+0x2>
    21cc:	b0 91 9d 47 	lds	r27, 0x479D	; 0x80479d <_ZL23g_seconds_left_to_sleep+0x3>
    21d0:	89 2b       	or	r24, r25
    21d2:	8a 2b       	or	r24, r26
    21d4:	8b 2b       	or	r24, r27
    21d6:	21 f0       	breq	.+8      	; 0x21e0 <__vector_6+0xf8>
    21d8:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    21dc:	88 23       	and	r24, r24
    21de:	11 f0       	breq	.+4      	; 0x21e4 <__vector_6+0xfc>
    21e0:	81 e0       	ldi	r24, 0x01	; 1
    21e2:	01 c0       	rjmp	.+2      	; 0x21e6 <__vector_6+0xfe>
    21e4:	80 e0       	ldi	r24, 0x00	; 0
    21e6:	88 23       	and	r24, r24
    21e8:	09 f4       	brne	.+2      	; 0x21ec <__vector_6+0x104>
    21ea:	92 c3       	rjmp	.+1828   	; 0x2910 <__vector_6+0x828>
    21ec:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
    21f0:	10 92 99 47 	sts	0x4799, r1	; 0x804799 <_ZL10g_sleeping>
    21f4:	8d c3       	rjmp	.+1818   	; 0x2910 <__vector_6+0x828>
    21f6:	19 86       	std	Y+9, r1	; 0x09
    21f8:	1a 86       	std	Y+10, r1	; 0x0a
    21fa:	1b 86       	std	Y+11, r1	; 0x0b
    21fc:	1c 86       	std	Y+12, r1	; 0x0c
    21fe:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    2202:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    2206:	21 e0       	ldi	r18, 0x01	; 1
    2208:	89 2b       	or	r24, r25
    220a:	09 f4       	brne	.+2      	; 0x220e <__vector_6+0x126>
    220c:	20 e0       	ldi	r18, 0x00	; 0
    220e:	22 23       	and	r18, r18
    2210:	49 f0       	breq	.+18     	; 0x2224 <__vector_6+0x13c>
    2212:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    2216:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    221a:	01 97       	sbiw	r24, 0x01	; 1
    221c:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    2220:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    2224:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <g_event_commenced>
    2228:	88 23       	and	r24, r24
    222a:	09 f4       	brne	.+2      	; 0x222e <__vector_6+0x146>
    222c:	5c c0       	rjmp	.+184    	; 0x22e6 <__vector_6+0x1fe>
    222e:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    2232:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    2236:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    223a:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    223e:	89 2b       	or	r24, r25
    2240:	8a 2b       	or	r24, r26
    2242:	8b 2b       	or	r24, r27
    2244:	71 f0       	breq	.+28     	; 0x2262 <__vector_6+0x17a>
    2246:	90 91 96 47 	lds	r25, 0x4796	; 0x804796 <g_check_for_next_event>
    224a:	81 e0       	ldi	r24, 0x01	; 1
    224c:	89 27       	eor	r24, r25
    224e:	88 23       	and	r24, r24
    2250:	41 f0       	breq	.+16     	; 0x2262 <__vector_6+0x17a>
    2252:	90 91 5c 47 	lds	r25, 0x475C	; 0x80475c <_ZL20g_shutting_down_wifi>
    2256:	81 e0       	ldi	r24, 0x01	; 1
    2258:	89 27       	eor	r24, r25
    225a:	88 23       	and	r24, r24
    225c:	11 f0       	breq	.+4      	; 0x2262 <__vector_6+0x17a>
    225e:	81 e0       	ldi	r24, 0x01	; 1
    2260:	01 c0       	rjmp	.+2      	; 0x2264 <__vector_6+0x17c>
    2262:	80 e0       	ldi	r24, 0x00	; 0
    2264:	88 23       	and	r24, r24
    2266:	09 f4       	brne	.+2      	; 0x226a <__vector_6+0x182>
    2268:	3e c0       	rjmp	.+124    	; 0x22e6 <__vector_6+0x1fe>
    226a:	ce 01       	movw	r24, r28
    226c:	09 96       	adiw	r24, 0x09	; 9
    226e:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    2272:	29 85       	ldd	r18, Y+9	; 0x09
    2274:	3a 85       	ldd	r19, Y+10	; 0x0a
    2276:	4b 85       	ldd	r20, Y+11	; 0x0b
    2278:	5c 85       	ldd	r21, Y+12	; 0x0c
    227a:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    227e:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    2282:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    2286:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    228a:	61 e0       	ldi	r22, 0x01	; 1
    228c:	28 17       	cp	r18, r24
    228e:	39 07       	cpc	r19, r25
    2290:	4a 07       	cpc	r20, r26
    2292:	5b 07       	cpc	r21, r27
    2294:	08 f4       	brcc	.+2      	; 0x2298 <__vector_6+0x1b0>
    2296:	60 e0       	ldi	r22, 0x00	; 0
    2298:	66 23       	and	r22, r22
    229a:	29 f1       	breq	.+74     	; 0x22e6 <__vector_6+0x1fe>
    229c:	8c ef       	ldi	r24, 0xFC	; 252
    229e:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    22a2:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZL12g_on_the_air>
    22a6:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZL12g_on_the_air+0x1>
    22aa:	10 92 56 47 	sts	0x4756, r1	; 0x804756 <_ZL12g_on_the_air+0x2>
    22ae:	10 92 57 47 	sts	0x4757, r1	; 0x804757 <_ZL12g_on_the_air+0x3>
    22b2:	80 e0       	ldi	r24, 0x00	; 0
    22b4:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
    22b8:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    22bc:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
    22c0:	81 e0       	ldi	r24, 0x01	; 1
    22c2:	80 93 96 47 	sts	0x4796, r24	; 0x804796 <g_check_for_next_event>
    22c6:	8a e5       	ldi	r24, 0x5A	; 90
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    22ce:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    22d2:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    22d6:	88 23       	and	r24, r24
    22d8:	19 f0       	breq	.+6      	; 0x22e0 <__vector_6+0x1f8>
    22da:	8c e3       	ldi	r24, 0x3C	; 60
    22dc:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    22e0:	80 e0       	ldi	r24, 0x00	; 0
    22e2:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
    22e6:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    22ea:	88 23       	and	r24, r24
    22ec:	09 f4       	brne	.+2      	; 0x22f0 <__vector_6+0x208>
    22ee:	92 c2       	rjmp	.+1316   	; 0x2814 <__vector_6+0x72c>
    22f0:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <g_event_commenced>
    22f4:	88 23       	and	r24, r24
    22f6:	09 f4       	brne	.+2      	; 0x22fa <__vector_6+0x212>
    22f8:	f0 c1       	rjmp	.+992    	; 0x26da <__vector_6+0x5f2>
    22fa:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    22fe:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2302:	21 e0       	ldi	r18, 0x01	; 1
    2304:	89 2b       	or	r24, r25
    2306:	09 f4       	brne	.+2      	; 0x230a <__vector_6+0x222>
    2308:	20 e0       	ldi	r18, 0x00	; 0
    230a:	22 23       	and	r18, r18
    230c:	49 f0       	breq	.+18     	; 0x2320 <__vector_6+0x238>
    230e:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    2312:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2316:	01 97       	sbiw	r24, 0x01	; 1
    2318:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    231c:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2320:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2324:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2328:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    232c:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2330:	21 e0       	ldi	r18, 0x01	; 1
    2332:	89 2b       	or	r24, r25
    2334:	8a 2b       	or	r24, r26
    2336:	8b 2b       	or	r24, r27
    2338:	09 f4       	brne	.+2      	; 0x233c <__vector_6+0x254>
    233a:	20 e0       	ldi	r18, 0x00	; 0
    233c:	22 23       	and	r18, r18
    233e:	09 f4       	brne	.+2      	; 0x2342 <__vector_6+0x25a>
    2340:	69 c2       	rjmp	.+1234   	; 0x2814 <__vector_6+0x72c>
    2342:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2346:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    234a:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    234e:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2352:	21 e0       	ldi	r18, 0x01	; 1
    2354:	18 16       	cp	r1, r24
    2356:	19 06       	cpc	r1, r25
    2358:	1a 06       	cpc	r1, r26
    235a:	1b 06       	cpc	r1, r27
    235c:	0c f0       	brlt	.+2      	; 0x2360 <__vector_6+0x278>
    235e:	20 e0       	ldi	r18, 0x00	; 0
    2360:	22 23       	and	r18, r18
    2362:	09 f4       	brne	.+2      	; 0x2366 <__vector_6+0x27e>
    2364:	5e c1       	rjmp	.+700    	; 0x2622 <__vector_6+0x53a>
    2366:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    236a:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    236e:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2372:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2376:	01 97       	sbiw	r24, 0x01	; 1
    2378:	a1 09       	sbc	r26, r1
    237a:	b1 09       	sbc	r27, r1
    237c:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    2380:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2384:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2388:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    238c:	80 91 58 47 	lds	r24, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    2390:	90 91 59 47 	lds	r25, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    2394:	89 2b       	or	r24, r25
    2396:	41 f4       	brne	.+16     	; 0x23a8 <__vector_6+0x2c0>
    2398:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    239c:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    23a0:	89 2b       	or	r24, r25
    23a2:	11 f0       	breq	.+4      	; 0x23a8 <__vector_6+0x2c0>
    23a4:	81 e0       	ldi	r24, 0x01	; 1
    23a6:	01 c0       	rjmp	.+2      	; 0x23aa <__vector_6+0x2c2>
    23a8:	80 e0       	ldi	r24, 0x00	; 0
    23aa:	88 23       	and	r24, r24
    23ac:	a9 f1       	breq	.+106    	; 0x2418 <__vector_6+0x330>
    23ae:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    23b2:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    23b6:	9c 01       	movw	r18, r24
    23b8:	40 e0       	ldi	r20, 0x00	; 0
    23ba:	50 e0       	ldi	r21, 0x00	; 0
    23bc:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    23c0:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    23c4:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    23c8:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    23cc:	61 e0       	ldi	r22, 0x01	; 1
    23ce:	28 17       	cp	r18, r24
    23d0:	39 07       	cpc	r19, r25
    23d2:	4a 07       	cpc	r20, r26
    23d4:	5b 07       	cpc	r21, r27
    23d6:	09 f0       	breq	.+2      	; 0x23da <__vector_6+0x2f2>
    23d8:	60 e0       	ldi	r22, 0x00	; 0
    23da:	66 23       	and	r22, r22
    23dc:	e9 f0       	breq	.+58     	; 0x2418 <__vector_6+0x330>
    23de:	8f ee       	ldi	r24, 0xEF	; 239
    23e0:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    23e4:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    23e8:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    23ec:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    23f0:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    23f4:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    23f8:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    23fc:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2400:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2404:	1d 86       	std	Y+13, r1	; 0x0d
    2406:	ce 01       	movw	r24, r28
    2408:	0d 96       	adiw	r24, 0x0d	; 13
    240a:	40 e0       	ldi	r20, 0x00	; 0
    240c:	50 e0       	ldi	r21, 0x00	; 0
    240e:	bc 01       	movw	r22, r24
    2410:	83 e7       	ldi	r24, 0x73	; 115
    2412:	97 e4       	ldi	r25, 0x47	; 71
    2414:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    2418:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    241c:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2420:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2424:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2428:	21 e0       	ldi	r18, 0x01	; 1
    242a:	89 2b       	or	r24, r25
    242c:	8a 2b       	or	r24, r26
    242e:	8b 2b       	or	r24, r27
    2430:	09 f0       	breq	.+2      	; 0x2434 <__vector_6+0x34c>
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	22 23       	and	r18, r18
    2436:	09 f4       	brne	.+2      	; 0x243a <__vector_6+0x352>
    2438:	ed c1       	rjmp	.+986    	; 0x2814 <__vector_6+0x72c>
    243a:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    243e:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2442:	21 e0       	ldi	r18, 0x01	; 1
    2444:	89 2b       	or	r24, r25
    2446:	09 f4       	brne	.+2      	; 0x244a <__vector_6+0x362>
    2448:	20 e0       	ldi	r18, 0x00	; 0
    244a:	22 23       	and	r18, r18
    244c:	09 f4       	brne	.+2      	; 0x2450 <__vector_6+0x368>
    244e:	d0 c0       	rjmp	.+416    	; 0x25f0 <__vector_6+0x508>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
    2456:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    245a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    245e:	20 91 54 47 	lds	r18, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2462:	30 91 55 47 	lds	r19, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2466:	40 91 56 47 	lds	r20, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    246a:	50 91 57 47 	lds	r21, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    246e:	09 2e       	mov	r0, r25
    2470:	00 0c       	add	r0, r0
    2472:	aa 0b       	sbc	r26, r26
    2474:	bb 0b       	sbc	r27, r27
    2476:	79 01       	movw	r14, r18
    2478:	8a 01       	movw	r16, r20
    247a:	e8 1a       	sub	r14, r24
    247c:	f9 0a       	sbc	r15, r25
    247e:	0a 0b       	sbc	r16, r26
    2480:	1b 0b       	sbc	r17, r27
    2482:	d8 01       	movw	r26, r16
    2484:	c7 01       	movw	r24, r14
    2486:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    248a:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    248e:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2492:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    2496:	81 e0       	ldi	r24, 0x01	; 1
    2498:	8d 87       	std	Y+13, r24	; 0x0d
    249a:	ce 01       	movw	r24, r28
    249c:	0d 96       	adiw	r24, 0x0d	; 13
    249e:	40 e0       	ldi	r20, 0x00	; 0
    24a0:	50 e0       	ldi	r21, 0x00	; 0
    24a2:	bc 01       	movw	r22, r24
    24a4:	8e e5       	ldi	r24, 0x5E	; 94
    24a6:	97 e4       	ldi	r25, 0x47	; 71
    24a8:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    24ac:	8e ef       	ldi	r24, 0xFE	; 254
    24ae:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    24b2:	80 e0       	ldi	r24, 0x00	; 0
    24b4:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
    24b8:	19 82       	std	Y+1, r1	; 0x01
    24ba:	1a 82       	std	Y+2, r1	; 0x02
    24bc:	1b 82       	std	Y+3, r1	; 0x03
    24be:	1c 82       	std	Y+4, r1	; 0x04
    24c0:	ce 01       	movw	r24, r28
    24c2:	09 96       	adiw	r24, 0x09	; 9
    24c4:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    24c8:	29 85       	ldd	r18, Y+9	; 0x09
    24ca:	3a 85       	ldd	r19, Y+10	; 0x0a
    24cc:	4b 85       	ldd	r20, Y+11	; 0x0b
    24ce:	5c 85       	ldd	r21, Y+12	; 0x0c
    24d0:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    24d4:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    24d8:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    24dc:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    24e0:	61 e0       	ldi	r22, 0x01	; 1
    24e2:	28 17       	cp	r18, r24
    24e4:	39 07       	cpc	r19, r25
    24e6:	4a 07       	cpc	r20, r26
    24e8:	5b 07       	cpc	r21, r27
    24ea:	08 f0       	brcs	.+2      	; 0x24ee <__vector_6+0x406>
    24ec:	60 e0       	ldi	r22, 0x00	; 0
    24ee:	66 23       	and	r22, r22
    24f0:	b1 f0       	breq	.+44     	; 0x251e <__vector_6+0x436>
    24f2:	29 85       	ldd	r18, Y+9	; 0x09
    24f4:	3a 85       	ldd	r19, Y+10	; 0x0a
    24f6:	4b 85       	ldd	r20, Y+11	; 0x0b
    24f8:	5c 85       	ldd	r21, Y+12	; 0x0c
    24fa:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    24fe:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    2502:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    2506:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    250a:	bc 01       	movw	r22, r24
    250c:	cd 01       	movw	r24, r26
    250e:	0e 94 6d 73 	call	0xe6da	; 0xe6da <_Z7timeDifmm>
    2512:	dc 01       	movw	r26, r24
    2514:	cb 01       	movw	r24, r22
    2516:	89 83       	std	Y+1, r24	; 0x01
    2518:	9a 83       	std	Y+2, r25	; 0x02
    251a:	ab 83       	std	Y+3, r26	; 0x03
    251c:	bc 83       	std	Y+4, r27	; 0x04
    251e:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    2522:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2526:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    252a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    252e:	82 0f       	add	r24, r18
    2530:	93 1f       	adc	r25, r19
    2532:	0f 96       	adiw	r24, 0x0f	; 15
    2534:	9c 01       	movw	r18, r24
    2536:	99 0f       	add	r25, r25
    2538:	44 0b       	sbc	r20, r20
    253a:	55 0b       	sbc	r21, r21
    253c:	61 e0       	ldi	r22, 0x01	; 1
    253e:	89 81       	ldd	r24, Y+1	; 0x01
    2540:	9a 81       	ldd	r25, Y+2	; 0x02
    2542:	ab 81       	ldd	r26, Y+3	; 0x03
    2544:	bc 81       	ldd	r27, Y+4	; 0x04
    2546:	28 17       	cp	r18, r24
    2548:	39 07       	cpc	r19, r25
    254a:	4a 07       	cpc	r20, r26
    254c:	5b 07       	cpc	r21, r27
    254e:	0c f0       	brlt	.+2      	; 0x2552 <__vector_6+0x46a>
    2550:	60 e0       	ldi	r22, 0x00	; 0
    2552:	66 23       	and	r22, r22
    2554:	09 f4       	brne	.+2      	; 0x2558 <__vector_6+0x470>
    2556:	5e c1       	rjmp	.+700    	; 0x2814 <__vector_6+0x72c>
    2558:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    255c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2560:	40 97       	sbiw	r24, 0x10	; 16
    2562:	34 f0       	brlt	.+12     	; 0x2570 <__vector_6+0x488>
    2564:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2568:	88 23       	and	r24, r24
    256a:	11 f4       	brne	.+4      	; 0x2570 <__vector_6+0x488>
    256c:	81 e0       	ldi	r24, 0x01	; 1
    256e:	01 c0       	rjmp	.+2      	; 0x2572 <__vector_6+0x48a>
    2570:	80 e0       	ldi	r24, 0x00	; 0
    2572:	88 23       	and	r24, r24
    2574:	09 f4       	brne	.+2      	; 0x2578 <__vector_6+0x490>
    2576:	4e c1       	rjmp	.+668    	; 0x2814 <__vector_6+0x72c>
    2578:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    257c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    2580:	0a 97       	sbiw	r24, 0x0a	; 10
    2582:	09 2e       	mov	r0, r25
    2584:	00 0c       	add	r0, r0
    2586:	aa 0b       	sbc	r26, r26
    2588:	bb 0b       	sbc	r27, r27
    258a:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    258e:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    2592:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    2596:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    259a:	82 e0       	ldi	r24, 0x02	; 2
    259c:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    25a0:	81 e0       	ldi	r24, 0x01	; 1
    25a2:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <_ZL13g_go_to_sleep>
    25a6:	1d 82       	std	Y+5, r1	; 0x05
    25a8:	1e 82       	std	Y+6, r1	; 0x06
    25aa:	20 91 58 47 	lds	r18, 0x4758	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    25ae:	30 91 59 47 	lds	r19, 0x4759	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    25b2:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <_ZL18g_seconds_to_sleep>
    25b6:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    25ba:	a0 91 17 40 	lds	r26, 0x4017	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    25be:	b0 91 18 40 	lds	r27, 0x4018	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    25c2:	89 01       	movw	r16, r18
    25c4:	08 1b       	sub	r16, r24
    25c6:	19 0b       	sbc	r17, r25
    25c8:	c8 01       	movw	r24, r16
    25ca:	8f 83       	std	Y+7, r24	; 0x07
    25cc:	98 87       	std	Y+8, r25	; 0x08
    25ce:	2d 81       	ldd	r18, Y+5	; 0x05
    25d0:	3e 81       	ldd	r19, Y+6	; 0x06
    25d2:	8f 81       	ldd	r24, Y+7	; 0x07
    25d4:	98 85       	ldd	r25, Y+8	; 0x08
    25d6:	28 17       	cp	r18, r24
    25d8:	39 07       	cpc	r19, r25
    25da:	1c f4       	brge	.+6      	; 0x25e2 <__vector_6+0x4fa>
    25dc:	8f 81       	ldd	r24, Y+7	; 0x07
    25de:	98 85       	ldd	r25, Y+8	; 0x08
    25e0:	02 c0       	rjmp	.+4      	; 0x25e6 <__vector_6+0x4fe>
    25e2:	8d 81       	ldd	r24, Y+5	; 0x05
    25e4:	9e 81       	ldd	r25, Y+6	; 0x06
    25e6:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    25ea:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    25ee:	12 c1       	rjmp	.+548    	; 0x2814 <__vector_6+0x72c>
    25f0:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    25f4:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    25f8:	09 2e       	mov	r0, r25
    25fa:	00 0c       	add	r0, r0
    25fc:	aa 0b       	sbc	r26, r26
    25fe:	bb 0b       	sbc	r27, r27
    2600:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    2604:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2608:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    260c:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    2610:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2614:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    2618:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    261c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2620:	f9 c0       	rjmp	.+498    	; 0x2814 <__vector_6+0x72c>
    2622:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2626:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    262a:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    262e:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2632:	88 27       	eor	r24, r24
    2634:	b7 fd       	sbrc	r27, 7
    2636:	83 95       	inc	r24
    2638:	99 27       	eor	r25, r25
    263a:	aa 27       	eor	r26, r26
    263c:	bb 27       	eor	r27, r27
    263e:	88 23       	and	r24, r24
    2640:	09 f4       	brne	.+2      	; 0x2644 <__vector_6+0x55c>
    2642:	e8 c0       	rjmp	.+464    	; 0x2814 <__vector_6+0x72c>
    2644:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2648:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    264c:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2650:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2654:	01 96       	adiw	r24, 0x01	; 1
    2656:	a1 1d       	adc	r26, r1
    2658:	b1 1d       	adc	r27, r1
    265a:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    265e:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2662:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    2666:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    266a:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    266e:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2672:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2676:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    267a:	21 e0       	ldi	r18, 0x01	; 1
    267c:	89 2b       	or	r24, r25
    267e:	8a 2b       	or	r24, r26
    2680:	8b 2b       	or	r24, r27
    2682:	09 f0       	breq	.+2      	; 0x2686 <__vector_6+0x59e>
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	22 23       	and	r18, r18
    2688:	09 f4       	brne	.+2      	; 0x268c <__vector_6+0x5a4>
    268a:	c4 c0       	rjmp	.+392    	; 0x2814 <__vector_6+0x72c>
    268c:	8d ef       	ldi	r24, 0xFD	; 253
    268e:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2692:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2696:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    269a:	09 2e       	mov	r0, r25
    269c:	00 0c       	add	r0, r0
    269e:	aa 0b       	sbc	r26, r26
    26a0:	bb 0b       	sbc	r27, r27
    26a2:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    26a6:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    26aa:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    26ae:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    26b2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    26b6:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    26ba:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    26be:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    26c2:	81 e0       	ldi	r24, 0x01	; 1
    26c4:	8e 87       	std	Y+14, r24	; 0x0e
    26c6:	ce 01       	movw	r24, r28
    26c8:	0e 96       	adiw	r24, 0x0e	; 14
    26ca:	40 e0       	ldi	r20, 0x00	; 0
    26cc:	50 e0       	ldi	r21, 0x00	; 0
    26ce:	bc 01       	movw	r22, r24
    26d0:	8e e5       	ldi	r24, 0x5E	; 94
    26d2:	97 e4       	ldi	r25, 0x47	; 71
    26d4:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    26d8:	9d c0       	rjmp	.+314    	; 0x2814 <__vector_6+0x72c>
    26da:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    26de:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    26e2:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    26e6:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    26ea:	21 e0       	ldi	r18, 0x01	; 1
    26ec:	89 2b       	or	r24, r25
    26ee:	8a 2b       	or	r24, r26
    26f0:	8b 2b       	or	r24, r27
    26f2:	09 f4       	brne	.+2      	; 0x26f6 <__vector_6+0x60e>
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	22 23       	and	r18, r18
    26f8:	09 f4       	brne	.+2      	; 0x26fc <__vector_6+0x614>
    26fa:	8c c0       	rjmp	.+280    	; 0x2814 <__vector_6+0x72c>
    26fc:	ce 01       	movw	r24, r28
    26fe:	09 96       	adiw	r24, 0x09	; 9
    2700:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    2704:	29 85       	ldd	r18, Y+9	; 0x09
    2706:	3a 85       	ldd	r19, Y+10	; 0x0a
    2708:	4b 85       	ldd	r20, Y+11	; 0x0b
    270a:	5c 85       	ldd	r21, Y+12	; 0x0c
    270c:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    2710:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    2714:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    2718:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    271c:	61 e0       	ldi	r22, 0x01	; 1
    271e:	28 17       	cp	r18, r24
    2720:	39 07       	cpc	r19, r25
    2722:	4a 07       	cpc	r20, r26
    2724:	5b 07       	cpc	r21, r27
    2726:	08 f4       	brcc	.+2      	; 0x272a <__vector_6+0x642>
    2728:	60 e0       	ldi	r22, 0x00	; 0
    272a:	66 23       	and	r22, r22
    272c:	09 f4       	brne	.+2      	; 0x2730 <__vector_6+0x648>
    272e:	72 c0       	rjmp	.+228    	; 0x2814 <__vector_6+0x72c>
    2730:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    2734:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    2738:	21 e0       	ldi	r18, 0x01	; 1
    273a:	89 2b       	or	r24, r25
    273c:	09 f4       	brne	.+2      	; 0x2740 <__vector_6+0x658>
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	22 23       	and	r18, r18
    2742:	71 f1       	breq	.+92     	; 0x27a0 <__vector_6+0x6b8>
    2744:	8e ef       	ldi	r24, 0xFE	; 254
    2746:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    274a:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    274e:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    2752:	91 95       	neg	r25
    2754:	81 95       	neg	r24
    2756:	91 09       	sbc	r25, r1
    2758:	09 2e       	mov	r0, r25
    275a:	00 0c       	add	r0, r0
    275c:	aa 0b       	sbc	r26, r26
    275e:	bb 0b       	sbc	r27, r27
    2760:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    2764:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    2768:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    276c:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    2770:	20 91 8a 47 	lds	r18, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    2774:	30 91 8b 47 	lds	r19, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    2778:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    277c:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2780:	82 0f       	add	r24, r18
    2782:	93 1f       	adc	r25, r19
    2784:	9c 01       	movw	r18, r24
    2786:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    278a:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    278e:	a9 01       	movw	r20, r18
    2790:	48 1b       	sub	r20, r24
    2792:	59 0b       	sbc	r21, r25
    2794:	ca 01       	movw	r24, r20
    2796:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    279a:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    279e:	37 c0       	rjmp	.+110    	; 0x280e <__vector_6+0x726>
    27a0:	8d ef       	ldi	r24, 0xFD	; 253
    27a2:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    27a6:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    27aa:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    27ae:	09 2e       	mov	r0, r25
    27b0:	00 0c       	add	r0, r0
    27b2:	aa 0b       	sbc	r26, r26
    27b4:	bb 0b       	sbc	r27, r27
    27b6:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    27ba:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    27be:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    27c2:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    27c6:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    27ca:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    27ce:	9c 01       	movw	r18, r24
    27d0:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    27d4:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    27d8:	f9 01       	movw	r30, r18
    27da:	e8 1b       	sub	r30, r24
    27dc:	f9 0b       	sbc	r31, r25
    27de:	cf 01       	movw	r24, r30
    27e0:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    27e4:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    27e8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    27ec:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    27f0:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    27f4:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    27f8:	81 e0       	ldi	r24, 0x01	; 1
    27fa:	8f 87       	std	Y+15, r24	; 0x0f
    27fc:	ce 01       	movw	r24, r28
    27fe:	0f 96       	adiw	r24, 0x0f	; 15
    2800:	40 e0       	ldi	r20, 0x00	; 0
    2802:	50 e0       	ldi	r21, 0x00	; 0
    2804:	bc 01       	movw	r22, r24
    2806:	8e e5       	ldi	r24, 0x5E	; 94
    2808:	97 e4       	ldi	r25, 0x47	; 71
    280a:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    280e:	81 e0       	ldi	r24, 0x01	; 1
    2810:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
    2814:	90 91 5b 47 	lds	r25, 0x475B	; 0x80475b <_ZL19g_wifi_enable_delay>
    2818:	81 e0       	ldi	r24, 0x01	; 1
    281a:	99 23       	and	r25, r25
    281c:	09 f4       	brne	.+2      	; 0x2820 <__vector_6+0x738>
    281e:	80 e0       	ldi	r24, 0x00	; 0
    2820:	88 23       	and	r24, r24
    2822:	91 f0       	breq	.+36     	; 0x2848 <__vector_6+0x760>
    2824:	80 91 5b 47 	lds	r24, 0x475B	; 0x80475b <_ZL19g_wifi_enable_delay>
    2828:	81 50       	subi	r24, 0x01	; 1
    282a:	80 93 5b 47 	sts	0x475B, r24	; 0x80475b <_ZL19g_wifi_enable_delay>
    282e:	90 91 5b 47 	lds	r25, 0x475B	; 0x80475b <_ZL19g_wifi_enable_delay>
    2832:	81 e0       	ldi	r24, 0x01	; 1
    2834:	99 23       	and	r25, r25
    2836:	09 f0       	breq	.+2      	; 0x283a <__vector_6+0x752>
    2838:	80 e0       	ldi	r24, 0x00	; 0
    283a:	88 23       	and	r24, r24
    283c:	09 f4       	brne	.+2      	; 0x2840 <__vector_6+0x758>
    283e:	68 c0       	rjmp	.+208    	; 0x2910 <__vector_6+0x828>
    2840:	80 e0       	ldi	r24, 0x00	; 0
    2842:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    2846:	64 c0       	rjmp	.+200    	; 0x2910 <__vector_6+0x828>
    2848:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    284c:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    2850:	89 2b       	or	r24, r25
    2852:	81 f0       	breq	.+32     	; 0x2874 <__vector_6+0x78c>
    2854:	80 91 5c 47 	lds	r24, 0x475C	; 0x80475c <_ZL20g_shutting_down_wifi>
    2858:	88 23       	and	r24, r24
    285a:	61 f4       	brne	.+24     	; 0x2874 <__vector_6+0x78c>
    285c:	90 91 96 47 	lds	r25, 0x4796	; 0x804796 <g_check_for_next_event>
    2860:	81 e0       	ldi	r24, 0x01	; 1
    2862:	89 27       	eor	r24, r25
    2864:	88 23       	and	r24, r24
    2866:	41 f0       	breq	.+16     	; 0x2878 <__vector_6+0x790>
    2868:	90 91 97 47 	lds	r25, 0x4797	; 0x804797 <g_waiting_for_next_event>
    286c:	81 e0       	ldi	r24, 0x01	; 1
    286e:	89 27       	eor	r24, r25
    2870:	88 23       	and	r24, r24
    2872:	11 f0       	breq	.+4      	; 0x2878 <__vector_6+0x790>
    2874:	81 e0       	ldi	r24, 0x01	; 1
    2876:	01 c0       	rjmp	.+2      	; 0x287a <__vector_6+0x792>
    2878:	80 e0       	ldi	r24, 0x00	; 0
    287a:	88 23       	and	r24, r24
    287c:	09 f4       	brne	.+2      	; 0x2880 <__vector_6+0x798>
    287e:	41 c0       	rjmp	.+130    	; 0x2902 <__vector_6+0x81a>
    2880:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2884:	81 e0       	ldi	r24, 0x01	; 1
    2886:	99 23       	and	r25, r25
    2888:	09 f4       	brne	.+2      	; 0x288c <__vector_6+0x7a4>
    288a:	80 e0       	ldi	r24, 0x00	; 0
    288c:	88 23       	and	r24, r24
    288e:	c9 f1       	breq	.+114    	; 0x2902 <__vector_6+0x81a>
    2890:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2894:	81 50       	subi	r24, 0x01	; 1
    2896:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    289a:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    289e:	81 e0       	ldi	r24, 0x01	; 1
    28a0:	99 23       	and	r25, r25
    28a2:	09 f0       	breq	.+2      	; 0x28a6 <__vector_6+0x7be>
    28a4:	80 e0       	ldi	r24, 0x00	; 0
    28a6:	88 23       	and	r24, r24
    28a8:	61 f1       	breq	.+88     	; 0x2902 <__vector_6+0x81a>
    28aa:	81 e0       	ldi	r24, 0x01	; 1
    28ac:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    28b0:	80 e0       	ldi	r24, 0x00	; 0
    28b2:	0e 94 fa 3a 	call	0x75f4	; 0x75f4 <_Z10wifi_powerb>
    28b6:	10 92 5c 47 	sts	0x475C, r1	; 0x80475c <_ZL20g_shutting_down_wifi>
    28ba:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    28be:	81 e0       	ldi	r24, 0x01	; 1
    28c0:	89 27       	eor	r24, r25
    28c2:	88 23       	and	r24, r24
    28c4:	91 f0       	breq	.+36     	; 0x28ea <__vector_6+0x802>
    28c6:	84 e0       	ldi	r24, 0x04	; 4
    28c8:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <_ZL13g_go_to_sleep>
    28d2:	8f ef       	ldi	r24, 0xFF	; 255
    28d4:	9f ef       	ldi	r25, 0xFF	; 255
    28d6:	dc 01       	movw	r26, r24
    28d8:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    28dc:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    28e0:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    28e4:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    28e8:	0a c0       	rjmp	.+20     	; 0x28fe <__vector_6+0x816>
    28ea:	90 91 5d 47 	lds	r25, 0x475D	; 0x80475d <_ZL11g_sleepType>
    28ee:	81 e0       	ldi	r24, 0x01	; 1
    28f0:	93 30       	cpi	r25, 0x03	; 3
    28f2:	09 f0       	breq	.+2      	; 0x28f6 <__vector_6+0x80e>
    28f4:	80 e0       	ldi	r24, 0x00	; 0
    28f6:	88 23       	and	r24, r24
    28f8:	11 f0       	breq	.+4      	; 0x28fe <__vector_6+0x816>
    28fa:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_Z12eventEnabledv>
    28fe:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    2902:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    2906:	88 23       	and	r24, r24
    2908:	19 f0       	breq	.+6      	; 0x2910 <__vector_6+0x828>
    290a:	81 e0       	ldi	r24, 0x01	; 1
    290c:	80 93 5a 47 	sts	0x475A, r24	; 0x80475a <_ZL16g_report_seconds>
    2910:	80 e0       	ldi	r24, 0x00	; 0
    2912:	94 e0       	ldi	r25, 0x04	; 4
    2914:	2f ef       	ldi	r18, 0xFF	; 255
    2916:	fc 01       	movw	r30, r24
    2918:	21 87       	std	Z+9, r18	; 0x09
    291a:	00 00       	nop
    291c:	2f 96       	adiw	r28, 0x0f	; 15
    291e:	cd bf       	out	0x3d, r28	; 61
    2920:	de bf       	out	0x3e, r29	; 62
    2922:	df 91       	pop	r29
    2924:	cf 91       	pop	r28
    2926:	ff 91       	pop	r31
    2928:	ef 91       	pop	r30
    292a:	bf 91       	pop	r27
    292c:	af 91       	pop	r26
    292e:	9f 91       	pop	r25
    2930:	8f 91       	pop	r24
    2932:	7f 91       	pop	r23
    2934:	6f 91       	pop	r22
    2936:	5f 91       	pop	r21
    2938:	4f 91       	pop	r20
    293a:	3f 91       	pop	r19
    293c:	2f 91       	pop	r18
    293e:	1f 91       	pop	r17
    2940:	0f 91       	pop	r16
    2942:	ff 90       	pop	r15
    2944:	ef 90       	pop	r14
    2946:	0f 90       	pop	r0
    2948:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    294c:	0f 90       	pop	r0
    294e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2952:	0f 90       	pop	r0
    2954:	1f 90       	pop	r1
    2956:	18 95       	reti

00002958 <__vector_22>:
    2958:	1f 92       	push	r1
    295a:	0f 92       	push	r0
    295c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2960:	0f 92       	push	r0
    2962:	11 24       	eor	r1, r1
    2964:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2968:	0f 92       	push	r0
    296a:	2f 93       	push	r18
    296c:	3f 93       	push	r19
    296e:	4f 93       	push	r20
    2970:	5f 93       	push	r21
    2972:	6f 93       	push	r22
    2974:	7f 93       	push	r23
    2976:	8f 93       	push	r24
    2978:	9f 93       	push	r25
    297a:	af 93       	push	r26
    297c:	bf 93       	push	r27
    297e:	ef 93       	push	r30
    2980:	ff 93       	push	r31
    2982:	cf 93       	push	r28
    2984:	df 93       	push	r29
    2986:	1f 92       	push	r1
    2988:	cd b7       	in	r28, 0x3d	; 61
    298a:	de b7       	in	r29, 0x3e	; 62
    298c:	80 e6       	ldi	r24, 0x60	; 96
    298e:	94 e0       	ldi	r25, 0x04	; 4
    2990:	fc 01       	movw	r30, r24
    2992:	81 85       	ldd	r24, Z+9	; 0x09
    2994:	88 2f       	mov	r24, r24
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	82 70       	andi	r24, 0x02	; 2
    299a:	99 27       	eor	r25, r25
    299c:	21 e0       	ldi	r18, 0x01	; 1
    299e:	89 2b       	or	r24, r25
    29a0:	09 f4       	brne	.+2      	; 0x29a4 <__vector_22+0x4c>
    29a2:	20 e0       	ldi	r18, 0x00	; 0
    29a4:	22 23       	and	r18, r18
    29a6:	b1 f0       	breq	.+44     	; 0x29d4 <__vector_22+0x7c>
    29a8:	0e 94 e0 2b 	call	0x57c0	; 0x57c0 <_Z18antennaIsConnectedv>
    29ac:	89 83       	std	Y+1, r24	; 0x01
    29ae:	99 81       	ldd	r25, Y+1	; 0x01
    29b0:	81 e0       	ldi	r24, 0x01	; 1
    29b2:	89 27       	eor	r24, r25
    29b4:	88 23       	and	r24, r24
    29b6:	71 f0       	breq	.+28     	; 0x29d4 <__vector_22+0x7c>
    29b8:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    29bc:	81 e0       	ldi	r24, 0x01	; 1
    29be:	91 30       	cpi	r25, 0x01	; 1
    29c0:	09 f4       	brne	.+2      	; 0x29c4 <__vector_22+0x6c>
    29c2:	80 e0       	ldi	r24, 0x00	; 0
    29c4:	88 23       	and	r24, r24
    29c6:	31 f0       	breq	.+12     	; 0x29d4 <__vector_22+0x7c>
    29c8:	81 e0       	ldi	r24, 0x01	; 1
    29ca:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <g_antenna_connect_state>
    29ce:	81 e0       	ldi	r24, 0x01	; 1
    29d0:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    29d4:	80 e6       	ldi	r24, 0x60	; 96
    29d6:	94 e0       	ldi	r25, 0x04	; 4
    29d8:	2f ef       	ldi	r18, 0xFF	; 255
    29da:	fc 01       	movw	r30, r24
    29dc:	21 87       	std	Z+9, r18	; 0x09
    29de:	00 00       	nop
    29e0:	0f 90       	pop	r0
    29e2:	df 91       	pop	r29
    29e4:	cf 91       	pop	r28
    29e6:	ff 91       	pop	r31
    29e8:	ef 91       	pop	r30
    29ea:	bf 91       	pop	r27
    29ec:	af 91       	pop	r26
    29ee:	9f 91       	pop	r25
    29f0:	8f 91       	pop	r24
    29f2:	7f 91       	pop	r23
    29f4:	6f 91       	pop	r22
    29f6:	5f 91       	pop	r21
    29f8:	4f 91       	pop	r20
    29fa:	3f 91       	pop	r19
    29fc:	2f 91       	pop	r18
    29fe:	0f 90       	pop	r0
    2a00:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a04:	0f 90       	pop	r0
    2a06:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2a0a:	0f 90       	pop	r0
    2a0c:	1f 90       	pop	r1
    2a0e:	18 95       	reti

00002a10 <__vector_12>:
    2a10:	1f 92       	push	r1
    2a12:	0f 92       	push	r0
    2a14:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2a18:	0f 92       	push	r0
    2a1a:	11 24       	eor	r1, r1
    2a1c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2a20:	0f 92       	push	r0
    2a22:	2f 93       	push	r18
    2a24:	3f 93       	push	r19
    2a26:	4f 93       	push	r20
    2a28:	5f 93       	push	r21
    2a2a:	6f 93       	push	r22
    2a2c:	7f 93       	push	r23
    2a2e:	8f 93       	push	r24
    2a30:	9f 93       	push	r25
    2a32:	af 93       	push	r26
    2a34:	bf 93       	push	r27
    2a36:	ef 93       	push	r30
    2a38:	ff 93       	push	r31
    2a3a:	cf 93       	push	r28
    2a3c:	df 93       	push	r29
    2a3e:	cd b7       	in	r28, 0x3d	; 61
    2a40:	de b7       	in	r29, 0x3e	; 62
    2a42:	27 97       	sbiw	r28, 0x07	; 7
    2a44:	cd bf       	out	0x3d, r28	; 61
    2a46:	de bf       	out	0x3e, r29	; 62
    2a48:	80 e0       	ldi	r24, 0x00	; 0
    2a4a:	9b e0       	ldi	r25, 0x0B	; 11
    2a4c:	fc 01       	movw	r30, r24
    2a4e:	86 81       	ldd	r24, Z+6	; 0x06
    2a50:	88 2f       	mov	r24, r24
    2a52:	90 e0       	ldi	r25, 0x00	; 0
    2a54:	81 70       	andi	r24, 0x01	; 1
    2a56:	99 27       	eor	r25, r25
    2a58:	21 e0       	ldi	r18, 0x01	; 1
    2a5a:	89 2b       	or	r24, r25
    2a5c:	09 f4       	brne	.+2      	; 0x2a60 <__vector_12+0x50>
    2a5e:	20 e0       	ldi	r18, 0x00	; 0
    2a60:	22 23       	and	r18, r18
    2a62:	09 f4       	brne	.+2      	; 0x2a66 <__vector_12+0x56>
    2a64:	d4 c1       	rjmp	.+936    	; 0x2e0e <__vector_12+0x3fe>
    2a66:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    2a6a:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    2a6e:	21 e0       	ldi	r18, 0x01	; 1
    2a70:	89 2b       	or	r24, r25
    2a72:	09 f4       	brne	.+2      	; 0x2a76 <__vector_12+0x66>
    2a74:	20 e0       	ldi	r18, 0x00	; 0
    2a76:	22 23       	and	r18, r18
    2a78:	49 f0       	breq	.+18     	; 0x2a8c <__vector_12+0x7c>
    2a7a:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    2a7e:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    2a82:	01 97       	sbiw	r24, 0x01	; 1
    2a84:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    2a88:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    2a8c:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <g_i2c1_timeout_ticks>
    2a90:	90 91 2b 40 	lds	r25, 0x402B	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    2a94:	21 e0       	ldi	r18, 0x01	; 1
    2a96:	89 2b       	or	r24, r25
    2a98:	09 f4       	brne	.+2      	; 0x2a9c <__vector_12+0x8c>
    2a9a:	20 e0       	ldi	r18, 0x00	; 0
    2a9c:	22 23       	and	r18, r18
    2a9e:	49 f0       	breq	.+18     	; 0x2ab2 <__vector_12+0xa2>
    2aa0:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <g_i2c1_timeout_ticks>
    2aa4:	90 91 2b 40 	lds	r25, 0x402B	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    2aa8:	01 97       	sbiw	r24, 0x01	; 1
    2aaa:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <g_i2c1_timeout_ticks>
    2aae:	90 93 2b 40 	sts	0x402B, r25	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    2ab2:	80 91 4f 47 	lds	r24, 0x474F	; 0x80474f <_ZL21g_util_tick_countdown>
    2ab6:	90 91 50 47 	lds	r25, 0x4750	; 0x804750 <_ZL21g_util_tick_countdown+0x1>
    2aba:	21 e0       	ldi	r18, 0x01	; 1
    2abc:	89 2b       	or	r24, r25
    2abe:	09 f4       	brne	.+2      	; 0x2ac2 <__vector_12+0xb2>
    2ac0:	20 e0       	ldi	r18, 0x00	; 0
    2ac2:	22 23       	and	r18, r18
    2ac4:	49 f0       	breq	.+18     	; 0x2ad8 <__vector_12+0xc8>
    2ac6:	80 91 4f 47 	lds	r24, 0x474F	; 0x80474f <_ZL21g_util_tick_countdown>
    2aca:	90 91 50 47 	lds	r25, 0x4750	; 0x804750 <_ZL21g_util_tick_countdown+0x1>
    2ace:	01 97       	sbiw	r24, 0x01	; 1
    2ad0:	80 93 4f 47 	sts	0x474F, r24	; 0x80474f <_ZL21g_util_tick_countdown>
    2ad4:	90 93 50 47 	sts	0x4750, r25	; 0x804750 <_ZL21g_util_tick_countdown+0x1>
    2ad8:	87 e0       	ldi	r24, 0x07	; 7
    2ada:	0e 94 27 10 	call	0x204e	; 0x204e <PORTC_get_pin_level>
    2ade:	98 2f       	mov	r25, r24
    2ae0:	81 e0       	ldi	r24, 0x01	; 1
    2ae2:	89 27       	eor	r24, r25
    2ae4:	88 23       	and	r24, r24
    2ae6:	a1 f0       	breq	.+40     	; 0x2b10 <__vector_12+0x100>
    2ae8:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2aec:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2af0:	21 e0       	ldi	r18, 0x01	; 1
    2af2:	88 3e       	cpi	r24, 0xE8	; 232
    2af4:	93 40       	sbci	r25, 0x03	; 3
    2af6:	08 f0       	brcs	.+2      	; 0x2afa <__vector_12+0xea>
    2af8:	20 e0       	ldi	r18, 0x00	; 0
    2afa:	22 23       	and	r18, r18
    2afc:	49 f0       	breq	.+18     	; 0x2b10 <__vector_12+0x100>
    2afe:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2b02:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2b06:	01 96       	adiw	r24, 0x01	; 1
    2b08:	80 93 a7 47 	sts	0x47A7, r24	; 0x8047a7 <g_switch_closed_count>
    2b0c:	90 93 a8 47 	sts	0x47A8, r25	; 0x8047a8 <g_switch_closed_count+0x1>
    2b10:	0e 94 04 28 	call	0x5008	; 0x5008 <_Z19updateAntennaStatusv>
    2b14:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    2b18:	88 23       	and	r24, r24
    2b1a:	31 f0       	breq	.+12     	; 0x2b28 <__vector_12+0x118>
    2b1c:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <g_event_commenced>
    2b20:	88 23       	and	r24, r24
    2b22:	11 f0       	breq	.+4      	; 0x2b28 <__vector_12+0x118>
    2b24:	81 e0       	ldi	r24, 0x01	; 1
    2b26:	01 c0       	rjmp	.+2      	; 0x2b2a <__vector_12+0x11a>
    2b28:	80 e0       	ldi	r24, 0x00	; 0
    2b2a:	88 23       	and	r24, r24
    2b2c:	09 f4       	brne	.+2      	; 0x2b30 <__vector_12+0x120>
    2b2e:	9f c0       	rjmp	.+318    	; 0x2c6e <__vector_12+0x25e>
    2b30:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2b34:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2b38:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2b3c:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2b40:	21 e0       	ldi	r18, 0x01	; 1
    2b42:	18 16       	cp	r1, r24
    2b44:	19 06       	cpc	r1, r25
    2b46:	1a 06       	cpc	r1, r26
    2b48:	1b 06       	cpc	r1, r27
    2b4a:	0c f0       	brlt	.+2      	; 0x2b4e <__vector_12+0x13e>
    2b4c:	20 e0       	ldi	r18, 0x00	; 0
    2b4e:	22 23       	and	r18, r18
    2b50:	09 f4       	brne	.+2      	; 0x2b54 <__vector_12+0x144>
    2b52:	6b c0       	rjmp	.+214    	; 0x2c2a <__vector_12+0x21a>
    2b54:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E7codeInc>
    2b58:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <_ZZ11__vector_12E7codeInc+0x1>
    2b5c:	89 2b       	or	r24, r25
    2b5e:	09 f4       	brne	.+2      	; 0x2b62 <__vector_12+0x152>
    2b60:	53 c0       	rjmp	.+166    	; 0x2c08 <__vector_12+0x1f8>
    2b62:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E7codeInc>
    2b66:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <_ZZ11__vector_12E7codeInc+0x1>
    2b6a:	01 97       	sbiw	r24, 0x01	; 1
    2b6c:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <_ZZ11__vector_12E7codeInc>
    2b70:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <_ZZ11__vector_12E7codeInc+0x1>
    2b74:	80 91 ba 47 	lds	r24, 0x47BA	; 0x8047ba <_ZZ11__vector_12E7codeInc>
    2b78:	90 91 bb 47 	lds	r25, 0x47BB	; 0x8047bb <_ZZ11__vector_12E7codeInc+0x1>
    2b7c:	89 2b       	or	r24, r25
    2b7e:	09 f0       	breq	.+2      	; 0x2b82 <__vector_12+0x172>
    2b80:	76 c0       	rjmp	.+236    	; 0x2c6e <__vector_12+0x25e>
    2b82:	9e 01       	movw	r18, r28
    2b84:	2a 5f       	subi	r18, 0xFA	; 250
    2b86:	3f 4f       	sbci	r19, 0xFF	; 255
    2b88:	ce 01       	movw	r24, r28
    2b8a:	05 96       	adiw	r24, 0x05	; 5
    2b8c:	a9 01       	movw	r20, r18
    2b8e:	bc 01       	movw	r22, r24
    2b90:	80 e0       	ldi	r24, 0x00	; 0
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    2b98:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <_ZZ11__vector_12E3key>
    2b9c:	9d 81       	ldd	r25, Y+5	; 0x05
    2b9e:	81 e0       	ldi	r24, 0x01	; 1
    2ba0:	89 27       	eor	r24, r25
    2ba2:	88 23       	and	r24, r24
    2ba4:	31 f1       	breq	.+76     	; 0x2bf2 <__vector_12+0x1e2>
    2ba6:	8e 81       	ldd	r24, Y+6	; 0x06
    2ba8:	88 23       	and	r24, r24
    2baa:	19 f1       	breq	.+70     	; 0x2bf2 <__vector_12+0x1e2>
    2bac:	8d ef       	ldi	r24, 0xFD	; 253
    2bae:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2bb2:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2bb6:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    2bba:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2bbe:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2bc2:	81 e0       	ldi	r24, 0x01	; 1
    2bc4:	8d 83       	std	Y+5, r24	; 0x05
    2bc6:	ce 01       	movw	r24, r28
    2bc8:	05 96       	adiw	r24, 0x05	; 5
    2bca:	40 e0       	ldi	r20, 0x00	; 0
    2bcc:	50 e0       	ldi	r21, 0x00	; 0
    2bce:	bc 01       	movw	r22, r24
    2bd0:	8e e5       	ldi	r24, 0x5E	; 94
    2bd2:	97 e4       	ldi	r25, 0x47	; 71
    2bd4:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    2bd8:	9e 01       	movw	r18, r28
    2bda:	2a 5f       	subi	r18, 0xFA	; 250
    2bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    2bde:	ce 01       	movw	r24, r28
    2be0:	05 96       	adiw	r24, 0x05	; 5
    2be2:	a9 01       	movw	r20, r18
    2be4:	bc 01       	movw	r22, r24
    2be6:	80 e0       	ldi	r24, 0x00	; 0
    2be8:	90 e0       	ldi	r25, 0x00	; 0
    2bea:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    2bee:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <_ZZ11__vector_12E3key>
    2bf2:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_ZZ11__vector_12E3key>
    2bf6:	88 23       	and	r24, r24
    2bf8:	d1 f1       	breq	.+116    	; 0x2c6e <__vector_12+0x25e>
    2bfa:	81 e0       	ldi	r24, 0x01	; 1
    2bfc:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
    2c00:	81 e0       	ldi	r24, 0x01	; 1
    2c02:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
    2c06:	33 c0       	rjmp	.+102    	; 0x2c6e <__vector_12+0x25e>
    2c08:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_ZZ11__vector_12E3key>
    2c0c:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
    2c10:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_ZZ11__vector_12E3key>
    2c14:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
    2c18:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2c1c:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2c20:	80 93 ba 47 	sts	0x47BA, r24	; 0x8047ba <_ZZ11__vector_12E7codeInc>
    2c24:	90 93 bb 47 	sts	0x47BB, r25	; 0x8047bb <_ZZ11__vector_12E7codeInc+0x1>
    2c28:	22 c0       	rjmp	.+68     	; 0x2c6e <__vector_12+0x25e>
    2c2a:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    2c2e:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    2c32:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    2c36:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    2c3a:	21 e0       	ldi	r18, 0x01	; 1
    2c3c:	89 2b       	or	r24, r25
    2c3e:	8a 2b       	or	r24, r26
    2c40:	8b 2b       	or	r24, r27
    2c42:	09 f0       	breq	.+2      	; 0x2c46 <__vector_12+0x236>
    2c44:	20 e0       	ldi	r18, 0x00	; 0
    2c46:	22 23       	and	r18, r18
    2c48:	91 f0       	breq	.+36     	; 0x2c6e <__vector_12+0x25e>
    2c4a:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_ZZ11__vector_12E3key>
    2c4e:	88 23       	and	r24, r24
    2c50:	71 f0       	breq	.+28     	; 0x2c6e <__vector_12+0x25e>
    2c52:	10 92 bc 47 	sts	0x47BC, r1	; 0x8047bc <_ZZ11__vector_12E3key>
    2c56:	80 e0       	ldi	r24, 0x00	; 0
    2c58:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
    2c5c:	80 e0       	ldi	r24, 0x00	; 0
    2c5e:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
    2c62:	80 e0       	ldi	r24, 0x00	; 0
    2c64:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
    2c68:	8e ef       	ldi	r24, 0xFE	; 254
    2c6a:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    2c6e:	90 91 bd 47 	lds	r25, 0x47BD	; 0x8047bd <_ZZ11__vector_12E19conversionInProcess>
    2c72:	81 e0       	ldi	r24, 0x01	; 1
    2c74:	89 27       	eor	r24, r25
    2c76:	88 23       	and	r24, r24
    2c78:	09 f4       	brne	.+2      	; 0x2c7c <__vector_12+0x26c>
    2c7a:	74 c0       	rjmp	.+232    	; 0x2d64 <__vector_12+0x354>
    2c7c:	8f ef       	ldi	r24, 0xFF	; 255
    2c7e:	80 93 be 47 	sts	0x47BE, r24	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2c82:	1f 82       	std	Y+7, r1	; 0x07
    2c84:	9f 81       	ldd	r25, Y+7	; 0x07
    2c86:	81 e0       	ldi	r24, 0x01	; 1
    2c88:	93 30       	cpi	r25, 0x03	; 3
    2c8a:	08 f0       	brcs	.+2      	; 0x2c8e <__vector_12+0x27e>
    2c8c:	80 e0       	ldi	r24, 0x00	; 0
    2c8e:	88 23       	and	r24, r24
    2c90:	d9 f1       	breq	.+118    	; 0x2d08 <__vector_12+0x2f8>
    2c92:	8f 81       	ldd	r24, Y+7	; 0x07
    2c94:	88 2f       	mov	r24, r24
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	88 0f       	add	r24, r24
    2c9a:	99 1f       	adc	r25, r25
    2c9c:	84 5e       	subi	r24, 0xE4	; 228
    2c9e:	9f 4b       	sbci	r25, 0xBF	; 191
    2ca0:	fc 01       	movw	r30, r24
    2ca2:	80 81       	ld	r24, Z
    2ca4:	91 81       	ldd	r25, Z+1	; 0x01
    2ca6:	21 e0       	ldi	r18, 0x01	; 1
    2ca8:	89 2b       	or	r24, r25
    2caa:	09 f4       	brne	.+2      	; 0x2cae <__vector_12+0x29e>
    2cac:	20 e0       	ldi	r18, 0x00	; 0
    2cae:	22 23       	and	r18, r18
    2cb0:	a1 f0       	breq	.+40     	; 0x2cda <__vector_12+0x2ca>
    2cb2:	8f 81       	ldd	r24, Y+7	; 0x07
    2cb4:	88 2f       	mov	r24, r24
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	9c 01       	movw	r18, r24
    2cba:	22 0f       	add	r18, r18
    2cbc:	33 1f       	adc	r19, r19
    2cbe:	24 5e       	subi	r18, 0xE4	; 228
    2cc0:	3f 4b       	sbci	r19, 0xBF	; 191
    2cc2:	f9 01       	movw	r30, r18
    2cc4:	20 81       	ld	r18, Z
    2cc6:	31 81       	ldd	r19, Z+1	; 0x01
    2cc8:	21 50       	subi	r18, 0x01	; 1
    2cca:	31 09       	sbc	r19, r1
    2ccc:	88 0f       	add	r24, r24
    2cce:	99 1f       	adc	r25, r25
    2cd0:	84 5e       	subi	r24, 0xE4	; 228
    2cd2:	9f 4b       	sbci	r25, 0xBF	; 191
    2cd4:	fc 01       	movw	r30, r24
    2cd6:	20 83       	st	Z, r18
    2cd8:	31 83       	std	Z+1, r19	; 0x01
    2cda:	8f 81       	ldd	r24, Y+7	; 0x07
    2cdc:	88 2f       	mov	r24, r24
    2cde:	90 e0       	ldi	r25, 0x00	; 0
    2ce0:	88 0f       	add	r24, r24
    2ce2:	99 1f       	adc	r25, r25
    2ce4:	84 5e       	subi	r24, 0xE4	; 228
    2ce6:	9f 4b       	sbci	r25, 0xBF	; 191
    2ce8:	fc 01       	movw	r30, r24
    2cea:	80 81       	ld	r24, Z
    2cec:	91 81       	ldd	r25, Z+1	; 0x01
    2cee:	21 e0       	ldi	r18, 0x01	; 1
    2cf0:	89 2b       	or	r24, r25
    2cf2:	09 f0       	breq	.+2      	; 0x2cf6 <__vector_12+0x2e6>
    2cf4:	20 e0       	ldi	r18, 0x00	; 0
    2cf6:	22 23       	and	r18, r18
    2cf8:	19 f0       	breq	.+6      	; 0x2d00 <__vector_12+0x2f0>
    2cfa:	8f 81       	ldd	r24, Y+7	; 0x07
    2cfc:	80 93 be 47 	sts	0x47BE, r24	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2d00:	8f 81       	ldd	r24, Y+7	; 0x07
    2d02:	8f 5f       	subi	r24, 0xFF	; 255
    2d04:	8f 83       	std	Y+7, r24	; 0x07
    2d06:	be cf       	rjmp	.-132    	; 0x2c84 <__vector_12+0x274>
    2d08:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2d0c:	88 23       	and	r24, r24
    2d0e:	0c f4       	brge	.+2      	; 0x2d12 <__vector_12+0x302>
    2d10:	7e c0       	rjmp	.+252    	; 0x2e0e <__vector_12+0x3fe>
    2d12:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2d16:	08 2e       	mov	r0, r24
    2d18:	00 0c       	add	r0, r0
    2d1a:	99 0b       	sbc	r25, r25
    2d1c:	20 91 be 47 	lds	r18, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2d20:	02 2e       	mov	r0, r18
    2d22:	00 0c       	add	r0, r0
    2d24:	33 0b       	sbc	r19, r19
    2d26:	22 0f       	add	r18, r18
    2d28:	33 1f       	adc	r19, r19
    2d2a:	24 5b       	subi	r18, 0xB4	; 180
    2d2c:	39 4b       	sbci	r19, 0xB9	; 185
    2d2e:	f9 01       	movw	r30, r18
    2d30:	20 81       	ld	r18, Z
    2d32:	31 81       	ldd	r19, Z+1	; 0x01
    2d34:	88 0f       	add	r24, r24
    2d36:	99 1f       	adc	r25, r25
    2d38:	84 5e       	subi	r24, 0xE4	; 228
    2d3a:	9f 4b       	sbci	r25, 0xBF	; 191
    2d3c:	fc 01       	movw	r30, r24
    2d3e:	20 83       	st	Z, r18
    2d40:	31 83       	std	Z+1, r19	; 0x01
    2d42:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2d46:	08 2e       	mov	r0, r24
    2d48:	00 0c       	add	r0, r0
    2d4a:	99 0b       	sbc	r25, r25
    2d4c:	87 5e       	subi	r24, 0xE7	; 231
    2d4e:	9f 4b       	sbci	r25, 0xBF	; 191
    2d50:	fc 01       	movw	r30, r24
    2d52:	80 81       	ld	r24, Z
    2d54:	0e 94 67 34 	call	0x68ce	; 0x68ce <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2d58:	0e 94 ca 34 	call	0x6994	; 0x6994 <_Z20ADC0_startConversionv>
    2d5c:	81 e0       	ldi	r24, 0x01	; 1
    2d5e:	80 93 bd 47 	sts	0x47BD, r24	; 0x8047bd <_ZZ11__vector_12E19conversionInProcess>
    2d62:	55 c0       	rjmp	.+170    	; 0x2e0e <__vector_12+0x3fe>
    2d64:	0e 94 df 34 	call	0x69be	; 0x69be <_Z19ADC0_conversionDonev>
    2d68:	88 23       	and	r24, r24
    2d6a:	09 f4       	brne	.+2      	; 0x2d6e <__vector_12+0x35e>
    2d6c:	50 c0       	rjmp	.+160    	; 0x2e0e <__vector_12+0x3fe>
    2d6e:	0e 94 f3 34 	call	0x69e6	; 0x69e6 <_Z9ADC0_readv>
    2d72:	89 83       	std	Y+1, r24	; 0x01
    2d74:	9a 83       	std	Y+2, r25	; 0x02
    2d76:	89 81       	ldd	r24, Y+1	; 0x01
    2d78:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7a:	0b 97       	sbiw	r24, 0x0b	; 11
    2d7c:	c0 f1       	brcs	.+112    	; 0x2dee <__vector_12+0x3de>
    2d7e:	89 81       	ldd	r24, Y+1	; 0x01
    2d80:	9a 81       	ldd	r25, Y+2	; 0x02
    2d82:	8a 3f       	cpi	r24, 0xFA	; 250
    2d84:	9f 40       	sbci	r25, 0x0F	; 15
    2d86:	98 f5       	brcc	.+102    	; 0x2dee <__vector_12+0x3de>
    2d88:	89 81       	ldd	r24, Y+1	; 0x01
    2d8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8c:	80 93 bf 47 	sts	0x47BF, r24	; 0x8047bf <_ZZ11__vector_12E20holdConversionResult>
    2d90:	90 93 c0 47 	sts	0x47C0, r25	; 0x8047c0 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2d94:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2d98:	08 2e       	mov	r0, r24
    2d9a:	00 0c       	add	r0, r0
    2d9c:	99 0b       	sbc	r25, r25
    2d9e:	88 0f       	add	r24, r24
    2da0:	99 1f       	adc	r25, r25
    2da2:	8f 55       	subi	r24, 0x5F	; 95
    2da4:	98 4b       	sbci	r25, 0xB8	; 184
    2da6:	fc 01       	movw	r30, r24
    2da8:	80 81       	ld	r24, Z
    2daa:	91 81       	ldd	r25, Z+1	; 0x01
    2dac:	8b 83       	std	Y+3, r24	; 0x03
    2dae:	9c 83       	std	Y+4, r25	; 0x04
    2db0:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2db4:	08 2e       	mov	r0, r24
    2db6:	00 0c       	add	r0, r0
    2db8:	99 0b       	sbc	r25, r25
    2dba:	82 56       	subi	r24, 0x62	; 98
    2dbc:	98 4b       	sbci	r25, 0xB8	; 184
    2dbe:	21 e0       	ldi	r18, 0x01	; 1
    2dc0:	fc 01       	movw	r30, r24
    2dc2:	20 83       	st	Z, r18
    2dc4:	80 91 bf 47 	lds	r24, 0x47BF	; 0x8047bf <_ZZ11__vector_12E20holdConversionResult>
    2dc8:	90 91 c0 47 	lds	r25, 0x47C0	; 0x8047c0 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2dcc:	8b 83       	std	Y+3, r24	; 0x03
    2dce:	9c 83       	std	Y+4, r25	; 0x04
    2dd0:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2dd4:	08 2e       	mov	r0, r24
    2dd6:	00 0c       	add	r0, r0
    2dd8:	99 0b       	sbc	r25, r25
    2dda:	88 0f       	add	r24, r24
    2ddc:	99 1f       	adc	r25, r25
    2dde:	8f 55       	subi	r24, 0x5F	; 95
    2de0:	98 4b       	sbci	r25, 0xB8	; 184
    2de2:	2b 81       	ldd	r18, Y+3	; 0x03
    2de4:	3c 81       	ldd	r19, Y+4	; 0x04
    2de6:	fc 01       	movw	r30, r24
    2de8:	20 83       	st	Z, r18
    2dea:	31 83       	std	Z+1, r19	; 0x01
    2dec:	0e c0       	rjmp	.+28     	; 0x2e0a <__vector_12+0x3fa>
    2dee:	80 91 be 47 	lds	r24, 0x47BE	; 0x8047be <_ZZ11__vector_12E24indexConversionInProcess>
    2df2:	08 2e       	mov	r0, r24
    2df4:	00 0c       	add	r0, r0
    2df6:	99 0b       	sbc	r25, r25
    2df8:	88 0f       	add	r24, r24
    2dfa:	99 1f       	adc	r25, r25
    2dfc:	8f 55       	subi	r24, 0x5F	; 95
    2dfe:	98 4b       	sbci	r25, 0xB8	; 184
    2e00:	fc 01       	movw	r30, r24
    2e02:	80 81       	ld	r24, Z
    2e04:	91 81       	ldd	r25, Z+1	; 0x01
    2e06:	89 83       	std	Y+1, r24	; 0x01
    2e08:	9a 83       	std	Y+2, r25	; 0x02
    2e0a:	10 92 bd 47 	sts	0x47BD, r1	; 0x8047bd <_ZZ11__vector_12E19conversionInProcess>
    2e0e:	80 e0       	ldi	r24, 0x00	; 0
    2e10:	9b e0       	ldi	r25, 0x0B	; 11
    2e12:	21 e0       	ldi	r18, 0x01	; 1
    2e14:	fc 01       	movw	r30, r24
    2e16:	26 83       	std	Z+6, r18	; 0x06
    2e18:	00 00       	nop
    2e1a:	27 96       	adiw	r28, 0x07	; 7
    2e1c:	cd bf       	out	0x3d, r28	; 61
    2e1e:	de bf       	out	0x3e, r29	; 62
    2e20:	df 91       	pop	r29
    2e22:	cf 91       	pop	r28
    2e24:	ff 91       	pop	r31
    2e26:	ef 91       	pop	r30
    2e28:	bf 91       	pop	r27
    2e2a:	af 91       	pop	r26
    2e2c:	9f 91       	pop	r25
    2e2e:	8f 91       	pop	r24
    2e30:	7f 91       	pop	r23
    2e32:	6f 91       	pop	r22
    2e34:	5f 91       	pop	r21
    2e36:	4f 91       	pop	r20
    2e38:	3f 91       	pop	r19
    2e3a:	2f 91       	pop	r18
    2e3c:	0f 90       	pop	r0
    2e3e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2e42:	0f 90       	pop	r0
    2e44:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2e48:	0f 90       	pop	r0
    2e4a:	1f 90       	pop	r1
    2e4c:	18 95       	reti

00002e4e <__vector_29>:
    2e4e:	1f 92       	push	r1
    2e50:	0f 92       	push	r0
    2e52:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2e56:	0f 92       	push	r0
    2e58:	11 24       	eor	r1, r1
    2e5a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2e5e:	0f 92       	push	r0
    2e60:	2f 93       	push	r18
    2e62:	3f 93       	push	r19
    2e64:	4f 93       	push	r20
    2e66:	5f 93       	push	r21
    2e68:	6f 93       	push	r22
    2e6a:	7f 93       	push	r23
    2e6c:	8f 93       	push	r24
    2e6e:	9f 93       	push	r25
    2e70:	af 93       	push	r26
    2e72:	bf 93       	push	r27
    2e74:	ef 93       	push	r30
    2e76:	ff 93       	push	r31
    2e78:	cf 93       	push	r28
    2e7a:	df 93       	push	r29
    2e7c:	cd b7       	in	r28, 0x3d	; 61
    2e7e:	de b7       	in	r29, 0x3e	; 62
    2e80:	80 e4       	ldi	r24, 0x40	; 64
    2e82:	94 e0       	ldi	r25, 0x04	; 4
    2e84:	fc 01       	movw	r30, r24
    2e86:	81 85       	ldd	r24, Z+9	; 0x09
    2e88:	88 1f       	adc	r24, r24
    2e8a:	88 27       	eor	r24, r24
    2e8c:	88 1f       	adc	r24, r24
    2e8e:	88 23       	and	r24, r24
    2e90:	09 f4       	brne	.+2      	; 0x2e94 <__vector_29+0x46>
    2e92:	4f c0       	rjmp	.+158    	; 0x2f32 <__vector_29+0xe4>
    2e94:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2e98:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2e9c:	21 e0       	ldi	r18, 0x01	; 1
    2e9e:	88 3e       	cpi	r24, 0xE8	; 232
    2ea0:	93 40       	sbci	r25, 0x03	; 3
    2ea2:	08 f4       	brcc	.+2      	; 0x2ea6 <__vector_29+0x58>
    2ea4:	20 e0       	ldi	r18, 0x00	; 0
    2ea6:	22 23       	and	r18, r18
    2ea8:	21 f0       	breq	.+8      	; 0x2eb2 <__vector_29+0x64>
    2eaa:	81 e0       	ldi	r24, 0x01	; 1
    2eac:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_long_button_press>
    2eb0:	3c c0       	rjmp	.+120    	; 0x2f2a <__vector_29+0xdc>
    2eb2:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    2eb6:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    2eba:	21 e0       	ldi	r18, 0x01	; 1
    2ebc:	0b 97       	sbiw	r24, 0x0b	; 11
    2ebe:	08 f4       	brcc	.+2      	; 0x2ec2 <__vector_29+0x74>
    2ec0:	20 e0       	ldi	r18, 0x00	; 0
    2ec2:	22 23       	and	r18, r18
    2ec4:	91 f1       	breq	.+100    	; 0x2f2a <__vector_29+0xdc>
    2ec6:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ11__vector_29E5count>
    2eca:	90 91 c2 47 	lds	r25, 0x47C2	; 0x8047c2 <_ZZ11__vector_29E5count+0x1>
    2ece:	01 96       	adiw	r24, 0x01	; 1
    2ed0:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ11__vector_29E5count>
    2ed4:	90 93 c2 47 	sts	0x47C2, r25	; 0x8047c2 <_ZZ11__vector_29E5count+0x1>
    2ed8:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ11__vector_29E5count>
    2edc:	90 91 c2 47 	lds	r25, 0x47C2	; 0x8047c2 <_ZZ11__vector_29E5count+0x1>
    2ee0:	81 70       	andi	r24, 0x01	; 1
    2ee2:	99 27       	eor	r25, r25
    2ee4:	89 2b       	or	r24, r25
    2ee6:	89 f0       	breq	.+34     	; 0x2f0a <__vector_29+0xbc>
    2ee8:	65 e0       	ldi	r22, 0x05	; 5
    2eea:	8a ea       	ldi	r24, 0xAA	; 170
    2eec:	97 e4       	ldi	r25, 0x47	; 71
    2eee:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    2ef2:	61 e0       	ldi	r22, 0x01	; 1
    2ef4:	8a ea       	ldi	r24, 0xAA	; 170
    2ef6:	97 e4       	ldi	r25, 0x47	; 71
    2ef8:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    2efc:	81 e0       	ldi	r24, 0x01	; 1
    2efe:	0e 94 fa 3a 	call	0x75f4	; 0x75f4 <_Z10wifi_powerb>
    2f02:	80 e0       	ldi	r24, 0x00	; 0
    2f04:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    2f08:	10 c0       	rjmp	.+32     	; 0x2f2a <__vector_29+0xdc>
    2f0a:	66 e0       	ldi	r22, 0x06	; 6
    2f0c:	8a ea       	ldi	r24, 0xAA	; 170
    2f0e:	97 e4       	ldi	r25, 0x47	; 71
    2f10:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    2f14:	61 e0       	ldi	r22, 0x01	; 1
    2f16:	8a ea       	ldi	r24, 0xAA	; 170
    2f18:	97 e4       	ldi	r25, 0x47	; 71
    2f1a:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    2f1e:	81 e0       	ldi	r24, 0x01	; 1
    2f20:	0e 94 fa 3a 	call	0x75f4	; 0x75f4 <_Z10wifi_powerb>
    2f24:	81 e0       	ldi	r24, 0x01	; 1
    2f26:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    2f2a:	10 92 a7 47 	sts	0x47A7, r1	; 0x8047a7 <g_switch_closed_count>
    2f2e:	10 92 a8 47 	sts	0x47A8, r1	; 0x8047a8 <g_switch_closed_count+0x1>
    2f32:	80 e4       	ldi	r24, 0x40	; 64
    2f34:	94 e0       	ldi	r25, 0x04	; 4
    2f36:	2f ef       	ldi	r18, 0xFF	; 255
    2f38:	fc 01       	movw	r30, r24
    2f3a:	21 87       	std	Z+9, r18	; 0x09
    2f3c:	00 00       	nop
    2f3e:	df 91       	pop	r29
    2f40:	cf 91       	pop	r28
    2f42:	ff 91       	pop	r31
    2f44:	ef 91       	pop	r30
    2f46:	bf 91       	pop	r27
    2f48:	af 91       	pop	r26
    2f4a:	9f 91       	pop	r25
    2f4c:	8f 91       	pop	r24
    2f4e:	7f 91       	pop	r23
    2f50:	6f 91       	pop	r22
    2f52:	5f 91       	pop	r21
    2f54:	4f 91       	pop	r20
    2f56:	3f 91       	pop	r19
    2f58:	2f 91       	pop	r18
    2f5a:	0f 90       	pop	r0
    2f5c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2f60:	0f 90       	pop	r0
    2f62:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2f66:	0f 90       	pop	r0
    2f68:	1f 90       	pop	r1
    2f6a:	18 95       	reti

00002f6c <_Z10powerUp3V3v>:
    2f6c:	cf 93       	push	r28
    2f6e:	df 93       	push	r29
    2f70:	cd b7       	in	r28, 0x3d	; 61
    2f72:	de b7       	in	r29, 0x3e	; 62
    2f74:	61 e0       	ldi	r22, 0x01	; 1
    2f76:	84 e0       	ldi	r24, 0x04	; 4
    2f78:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <PORTB_set_pin_level>
    2f7c:	61 e0       	ldi	r22, 0x01	; 1
    2f7e:	87 e0       	ldi	r24, 0x07	; 7
    2f80:	0e 94 48 0f 	call	0x1e90	; 0x1e90 <PORTA_set_pin_level>
    2f84:	81 e0       	ldi	r24, 0x01	; 1
    2f86:	80 93 4e 47 	sts	0x474E, r24	; 0x80474e <_ZL18g_perform_3V3_init>
    2f8a:	00 00       	nop
    2f8c:	df 91       	pop	r29
    2f8e:	cf 91       	pop	r28
    2f90:	08 95       	ret

00002f92 <main>:
    2f92:	cf 93       	push	r28
    2f94:	df 93       	push	r29
    2f96:	00 d0       	rcall	.+0      	; 0x2f98 <main+0x6>
    2f98:	cd b7       	in	r28, 0x3d	; 61
    2f9a:	de b7       	in	r29, 0x3e	; 62
    2f9c:	0e 94 0c 08 	call	0x1018	; 0x1018 <atmel_start_init>
    2fa0:	80 e0       	ldi	r24, 0x00	; 0
    2fa2:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
    2fa6:	61 e0       	ldi	r22, 0x01	; 1
    2fa8:	84 e0       	ldi	r24, 0x04	; 4
    2faa:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <PORTB_set_pin_level>
    2fae:	81 e0       	ldi	r24, 0x01	; 1
    2fb0:	0e 94 fa 3a 	call	0x75f4	; 0x75f4 <_Z10wifi_powerb>
    2fb4:	81 e0       	ldi	r24, 0x01	; 1
    2fb6:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    2fba:	84 e6       	ldi	r24, 0x64	; 100
    2fbc:	80 93 5b 47 	sts	0x475B, r24	; 0x80475b <_ZL19g_wifi_enable_delay>
    2fc0:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_Z10powerUp3V3v>
    2fc4:	8b ea       	ldi	r24, 0xAB	; 171
    2fc6:	97 e4       	ldi	r25, 0x47	; 71
    2fc8:	0e 94 b6 4b 	call	0x976c	; 0x976c <_ZN13EepromManager20initializeEEPROMVarsEv>
    2fcc:	8b ea       	ldi	r24, 0xAB	; 171
    2fce:	97 e4       	ldi	r25, 0x47	; 71
    2fd0:	0e 94 6a 49 	call	0x92d4	; 0x92d4 <_ZN13EepromManager11readNonVolsEv>
    2fd4:	0e 94 c7 2b 	call	0x578e	; 0x578e <_Z8rtc_initv>
    2fd8:	98 2f       	mov	r25, r24
    2fda:	81 e0       	ldi	r24, 0x01	; 1
    2fdc:	9c 3f       	cpi	r25, 0xFC	; 252
    2fde:	09 f0       	breq	.+2      	; 0x2fe2 <main+0x50>
    2fe0:	80 e0       	ldi	r24, 0x00	; 0
    2fe2:	88 23       	and	r24, r24
    2fe4:	e9 f4       	brne	.+58     	; 0x3020 <main+0x8e>
    2fe6:	ce 01       	movw	r24, r28
    2fe8:	01 96       	adiw	r24, 0x01	; 1
    2fea:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    2fee:	dc 01       	movw	r26, r24
    2ff0:	cb 01       	movw	r24, r22
    2ff2:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    2ff6:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    2ffa:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    2ffe:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>
    3002:	89 81       	ldd	r24, Y+1	; 0x01
    3004:	88 23       	and	r24, r24
    3006:	61 f4       	brne	.+24     	; 0x3020 <main+0x8e>
    3008:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    300c:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3010:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3014:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3018:	bc 01       	movw	r22, r24
    301a:	cd 01       	movw	r24, r26
    301c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <set_system_time>
    3020:	0e 94 28 3b 	call	0x7650	; 0x7650 <_Z11wifiPresentv>
    3024:	98 2f       	mov	r25, r24
    3026:	81 e0       	ldi	r24, 0x01	; 1
    3028:	89 27       	eor	r24, r25
    302a:	88 23       	and	r24, r24
    302c:	51 f0       	breq	.+20     	; 0x3042 <main+0xb0>
    302e:	80 e0       	ldi	r24, 0x00	; 0
    3030:	0e 94 fa 3a 	call	0x75f4	; 0x75f4 <_Z10wifi_powerb>
    3034:	81 e0       	ldi	r24, 0x01	; 1
    3036:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    303a:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZL19g_wifi_enable_delay>
    303e:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    3042:	0e 94 b8 20 	call	0x4170	; 0x4170 <_Z17handleLinkBusMsgsv>
    3046:	0e 94 48 19 	call	0x3290	; 0x3290 <_Z19handleSerialBusMsgsv>
    304a:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZL18g_perform_3V3_init>
    304e:	88 23       	and	r24, r24
    3050:	b9 f0       	breq	.+46     	; 0x3080 <main+0xee>
    3052:	10 92 4e 47 	sts	0x474E, r1	; 0x80474e <_ZL18g_perform_3V3_init>
    3056:	0e 94 54 70 	call	0xe0a8	; 0xe0a8 <_Z16init_transmitterv>
    305a:	98 2f       	mov	r25, r24
    305c:	81 e0       	ldi	r24, 0x01	; 1
    305e:	92 3d       	cpi	r25, 0xD2	; 210
    3060:	09 f4       	brne	.+2      	; 0x3064 <main+0xd2>
    3062:	80 e0       	ldi	r24, 0x00	; 0
    3064:	88 23       	and	r24, r24
    3066:	31 f0       	breq	.+12     	; 0x3074 <main+0xe2>
    3068:	81 e0       	ldi	r24, 0x01	; 1
    306a:	80 93 4d 47 	sts	0x474D, r24	; 0x80474d <_ZL33g_powerUp_initialization_complete>
    306e:	81 e0       	ldi	r24, 0x01	; 1
    3070:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <_ZL13g_start_event>
    3074:	8c e3       	ldi	r24, 0x3C	; 60
    3076:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    307a:	80 e0       	ldi	r24, 0x00	; 0
    307c:	0e 94 11 3b 	call	0x7622	; 0x7622 <_Z10wifi_resetb>
    3080:	80 91 a7 47 	lds	r24, 0x47A7	; 0x8047a7 <g_switch_closed_count>
    3084:	90 91 a8 47 	lds	r25, 0x47A8	; 0x8047a8 <g_switch_closed_count+0x1>
    3088:	21 e0       	ldi	r18, 0x01	; 1
    308a:	88 3e       	cpi	r24, 0xE8	; 232
    308c:	93 40       	sbci	r25, 0x03	; 3
    308e:	08 f4       	brcc	.+2      	; 0x3092 <main+0x100>
    3090:	20 e0       	ldi	r18, 0x00	; 0
    3092:	22 23       	and	r18, r18
    3094:	51 f0       	breq	.+20     	; 0x30aa <main+0x118>
    3096:	68 e0       	ldi	r22, 0x08	; 8
    3098:	8a ea       	ldi	r24, 0xAA	; 170
    309a:	97 e4       	ldi	r25, 0x47	; 71
    309c:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    30a0:	67 e0       	ldi	r22, 0x07	; 7
    30a2:	8a ea       	ldi	r24, 0xAA	; 170
    30a4:	97 e4       	ldi	r25, 0x47	; 71
    30a6:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    30aa:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_long_button_press>
    30ae:	88 23       	and	r24, r24
    30b0:	21 f1       	breq	.+72     	; 0x30fa <main+0x168>
    30b2:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    30b6:	88 23       	and	r24, r24
    30b8:	89 f0       	breq	.+34     	; 0x30dc <main+0x14a>
    30ba:	81 e0       	ldi	r24, 0x01	; 1
    30bc:	80 93 53 47 	sts	0x4753, r24	; 0x804753 <_ZL11g_end_event>
    30c0:	66 e0       	ldi	r22, 0x06	; 6
    30c2:	8a ea       	ldi	r24, 0xAA	; 170
    30c4:	97 e4       	ldi	r25, 0x47	; 71
    30c6:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    30ca:	61 e0       	ldi	r22, 0x01	; 1
    30cc:	8a ea       	ldi	r24, 0xAA	; 170
    30ce:	97 e4       	ldi	r25, 0x47	; 71
    30d0:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    30d4:	81 e0       	ldi	r24, 0x01	; 1
    30d6:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    30da:	0d c0       	rjmp	.+26     	; 0x30f6 <main+0x164>
    30dc:	81 e0       	ldi	r24, 0x01	; 1
    30de:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <_ZL13g_start_event>
    30e2:	68 e0       	ldi	r22, 0x08	; 8
    30e4:	8a ea       	ldi	r24, 0xAA	; 170
    30e6:	97 e4       	ldi	r25, 0x47	; 71
    30e8:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    30ec:	61 e0       	ldi	r22, 0x01	; 1
    30ee:	8a ea       	ldi	r24, 0xAA	; 170
    30f0:	97 e4       	ldi	r25, 0x47	; 71
    30f2:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    30f6:	10 92 a9 47 	sts	0x47A9, r1	; 0x8047a9 <g_long_button_press>
    30fa:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <_ZL13g_start_event>
    30fe:	88 23       	and	r24, r24
    3100:	41 f1       	breq	.+80     	; 0x3152 <main+0x1c0>
    3102:	10 92 52 47 	sts	0x4752, r1	; 0x804752 <_ZL13g_start_event>
    3106:	1a 82       	std	Y+2, r1	; 0x02
    3108:	ce 01       	movw	r24, r28
    310a:	02 96       	adiw	r24, 0x02	; 2
    310c:	0e 94 61 29 	call	0x52c2	; 0x52c2 <_Z11launchEventP2SC>
    3110:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    3114:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <_ZL13g_go_to_sleep>
    3118:	88 23       	and	r24, r24
    311a:	31 f0       	breq	.+12     	; 0x3128 <main+0x196>
    311c:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL11g_sleepType>
    3120:	88 23       	and	r24, r24
    3122:	11 f0       	breq	.+4      	; 0x3128 <main+0x196>
    3124:	81 e0       	ldi	r24, 0x01	; 1
    3126:	01 c0       	rjmp	.+2      	; 0x312a <main+0x198>
    3128:	80 e0       	ldi	r24, 0x00	; 0
    312a:	88 23       	and	r24, r24
    312c:	29 f0       	breq	.+10     	; 0x3138 <main+0x1a6>
    312e:	83 e0       	ldi	r24, 0x03	; 3
    3130:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    3134:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
    3138:	8c e3       	ldi	r24, 0x3C	; 60
    313a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    313e:	65 e0       	ldi	r22, 0x05	; 5
    3140:	8a ea       	ldi	r24, 0xAA	; 170
    3142:	97 e4       	ldi	r25, 0x47	; 71
    3144:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    3148:	61 e0       	ldi	r22, 0x01	; 1
    314a:	8a ea       	ldi	r24, 0xAA	; 170
    314c:	97 e4       	ldi	r25, 0x47	; 71
    314e:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    3152:	80 91 53 47 	lds	r24, 0x4753	; 0x804753 <_ZL11g_end_event>
    3156:	88 23       	and	r24, r24
    3158:	71 f0       	breq	.+28     	; 0x3176 <main+0x1e4>
    315a:	10 92 53 47 	sts	0x4753, r1	; 0x804753 <_ZL11g_end_event>
    315e:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <_Z12suspendEventv>
    3162:	68 e0       	ldi	r22, 0x08	; 8
    3164:	8a ea       	ldi	r24, 0xAA	; 170
    3166:	97 e4       	ldi	r25, 0x47	; 71
    3168:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    316c:	61 e0       	ldi	r22, 0x01	; 1
    316e:	8a ea       	ldi	r24, 0xAA	; 170
    3170:	97 e4       	ldi	r25, 0x47	; 71
    3172:	0e 94 ba 53 	call	0xa774	; 0xa774 <_ZN4leds5blinkE7Blink_t>
    3176:	80 91 5a 47 	lds	r24, 0x475A	; 0x80475a <_ZL16g_report_seconds>
    317a:	88 23       	and	r24, r24
    317c:	59 f1       	breq	.+86     	; 0x31d4 <main+0x242>
    317e:	10 92 5a 47 	sts	0x475A, r1	; 0x80475a <_ZL16g_report_seconds>
    3182:	80 e0       	ldi	r24, 0x00	; 0
    3184:	90 e0       	ldi	r25, 0x00	; 0
    3186:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    318a:	dc 01       	movw	r26, r24
    318c:	cb 01       	movw	r24, r22
    318e:	2b 2f       	mov	r18, r27
    3190:	2f 93       	push	r18
    3192:	2a 2f       	mov	r18, r26
    3194:	2f 93       	push	r18
    3196:	29 2f       	mov	r18, r25
    3198:	2f 93       	push	r18
    319a:	8f 93       	push	r24
    319c:	81 e5       	ldi	r24, 0x51	; 81
    319e:	90 e4       	ldi	r25, 0x40	; 64
    31a0:	89 2f       	mov	r24, r25
    31a2:	8f 93       	push	r24
    31a4:	81 e5       	ldi	r24, 0x51	; 81
    31a6:	90 e4       	ldi	r25, 0x40	; 64
    31a8:	8f 93       	push	r24
    31aa:	89 e1       	ldi	r24, 0x19	; 25
    31ac:	97 e4       	ldi	r25, 0x47	; 71
    31ae:	89 2f       	mov	r24, r25
    31b0:	8f 93       	push	r24
    31b2:	89 e1       	ldi	r24, 0x19	; 25
    31b4:	97 e4       	ldi	r25, 0x47	; 71
    31b6:	8f 93       	push	r24
    31b8:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    31bc:	8d b7       	in	r24, 0x3d	; 61
    31be:	9e b7       	in	r25, 0x3e	; 62
    31c0:	08 96       	adiw	r24, 0x08	; 8
    31c2:	cd bf       	out	0x3d, r28	; 61
    31c4:	de bf       	out	0x3e, r29	; 62
    31c6:	49 e1       	ldi	r20, 0x19	; 25
    31c8:	57 e4       	ldi	r21, 0x47	; 71
    31ca:	65 e5       	ldi	r22, 0x55	; 85
    31cc:	70 e4       	ldi	r23, 0x40	; 64
    31ce:	83 e0       	ldi	r24, 0x03	; 3
    31d0:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    31d4:	90 91 4b 47 	lds	r25, 0x474B	; 0x80474b <_ZL17g_last_error_code>
    31d8:	81 e0       	ldi	r24, 0x01	; 1
    31da:	99 23       	and	r25, r25
    31dc:	09 f4       	brne	.+2      	; 0x31e0 <main+0x24e>
    31de:	80 e0       	ldi	r24, 0x00	; 0
    31e0:	88 23       	and	r24, r24
    31e2:	31 f1       	breq	.+76     	; 0x3230 <main+0x29e>
    31e4:	80 91 4b 47 	lds	r24, 0x474B	; 0x80474b <_ZL17g_last_error_code>
    31e8:	88 2f       	mov	r24, r24
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	29 2f       	mov	r18, r25
    31ee:	2f 93       	push	r18
    31f0:	8f 93       	push	r24
    31f2:	89 e5       	ldi	r24, 0x59	; 89
    31f4:	90 e4       	ldi	r25, 0x40	; 64
    31f6:	89 2f       	mov	r24, r25
    31f8:	8f 93       	push	r24
    31fa:	89 e5       	ldi	r24, 0x59	; 89
    31fc:	90 e4       	ldi	r25, 0x40	; 64
    31fe:	8f 93       	push	r24
    3200:	89 e1       	ldi	r24, 0x19	; 25
    3202:	97 e4       	ldi	r25, 0x47	; 71
    3204:	89 2f       	mov	r24, r25
    3206:	8f 93       	push	r24
    3208:	89 e1       	ldi	r24, 0x19	; 25
    320a:	97 e4       	ldi	r25, 0x47	; 71
    320c:	8f 93       	push	r24
    320e:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3212:	0f 90       	pop	r0
    3214:	0f 90       	pop	r0
    3216:	0f 90       	pop	r0
    3218:	0f 90       	pop	r0
    321a:	0f 90       	pop	r0
    321c:	0f 90       	pop	r0
    321e:	49 e1       	ldi	r20, 0x19	; 25
    3220:	57 e4       	ldi	r21, 0x47	; 71
    3222:	6c e5       	ldi	r22, 0x5C	; 92
    3224:	70 e4       	ldi	r23, 0x40	; 64
    3226:	83 e0       	ldi	r24, 0x03	; 3
    3228:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    322c:	10 92 4b 47 	sts	0x474B, r1	; 0x80474b <_ZL17g_last_error_code>
    3230:	90 91 4c 47 	lds	r25, 0x474C	; 0x80474c <_ZL18g_last_status_code>
    3234:	81 e0       	ldi	r24, 0x01	; 1
    3236:	99 23       	and	r25, r25
    3238:	09 f4       	brne	.+2      	; 0x323c <main+0x2aa>
    323a:	80 e0       	ldi	r24, 0x00	; 0
    323c:	88 23       	and	r24, r24
    323e:	09 f4       	brne	.+2      	; 0x3242 <main+0x2b0>
    3240:	00 cf       	rjmp	.-512    	; 0x3042 <main+0xb0>
    3242:	80 91 4c 47 	lds	r24, 0x474C	; 0x80474c <_ZL18g_last_status_code>
    3246:	88 2f       	mov	r24, r24
    3248:	90 e0       	ldi	r25, 0x00	; 0
    324a:	29 2f       	mov	r18, r25
    324c:	2f 93       	push	r18
    324e:	8f 93       	push	r24
    3250:	89 e5       	ldi	r24, 0x59	; 89
    3252:	90 e4       	ldi	r25, 0x40	; 64
    3254:	89 2f       	mov	r24, r25
    3256:	8f 93       	push	r24
    3258:	89 e5       	ldi	r24, 0x59	; 89
    325a:	90 e4       	ldi	r25, 0x40	; 64
    325c:	8f 93       	push	r24
    325e:	89 e1       	ldi	r24, 0x19	; 25
    3260:	97 e4       	ldi	r25, 0x47	; 71
    3262:	89 2f       	mov	r24, r25
    3264:	8f 93       	push	r24
    3266:	89 e1       	ldi	r24, 0x19	; 25
    3268:	97 e4       	ldi	r25, 0x47	; 71
    326a:	8f 93       	push	r24
    326c:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3270:	0f 90       	pop	r0
    3272:	0f 90       	pop	r0
    3274:	0f 90       	pop	r0
    3276:	0f 90       	pop	r0
    3278:	0f 90       	pop	r0
    327a:	0f 90       	pop	r0
    327c:	49 e1       	ldi	r20, 0x19	; 25
    327e:	57 e4       	ldi	r21, 0x47	; 71
    3280:	6f e5       	ldi	r22, 0x5F	; 95
    3282:	70 e4       	ldi	r23, 0x40	; 64
    3284:	83 e0       	ldi	r24, 0x03	; 3
    3286:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    328a:	10 92 4c 47 	sts	0x474C, r1	; 0x80474c <_ZL18g_last_status_code>
    328e:	d9 ce       	rjmp	.-590    	; 0x3042 <main+0xb0>

00003290 <_Z19handleSerialBusMsgsv>:
    3290:	ef 92       	push	r14
    3292:	ff 92       	push	r15
    3294:	0f 93       	push	r16
    3296:	1f 93       	push	r17
    3298:	cf 93       	push	r28
    329a:	df 93       	push	r29
    329c:	cd b7       	in	r28, 0x3d	; 61
    329e:	de b7       	in	r29, 0x3e	; 62
    32a0:	c6 59       	subi	r28, 0x96	; 150
    32a2:	d1 09       	sbc	r29, r1
    32a4:	cd bf       	out	0x3d, r28	; 61
    32a6:	de bf       	out	0x3e, r29	; 62
    32a8:	0e 94 09 61 	call	0xc212	; 0xc212 <nextFullSBRxBuffer>
    32ac:	8e 83       	std	Y+6, r24	; 0x06
    32ae:	9f 83       	std	Y+7, r25	; 0x07
    32b0:	21 e0       	ldi	r18, 0x01	; 1
    32b2:	8e 81       	ldd	r24, Y+6	; 0x06
    32b4:	9f 81       	ldd	r25, Y+7	; 0x07
    32b6:	89 2b       	or	r24, r25
    32b8:	09 f4       	brne	.+2      	; 0x32bc <_Z19handleSerialBusMsgsv+0x2c>
    32ba:	20 e0       	ldi	r18, 0x00	; 0
    32bc:	22 23       	and	r18, r18
    32be:	09 f4       	brne	.+2      	; 0x32c2 <_Z19handleSerialBusMsgsv+0x32>
    32c0:	4b c7       	rjmp	.+3734   	; 0x4158 <__DATA_REGION_LENGTH__+0x158>
    32c2:	8e 81       	ldd	r24, Y+6	; 0x06
    32c4:	9f 81       	ldd	r25, Y+7	; 0x07
    32c6:	fc 01       	movw	r30, r24
    32c8:	81 81       	ldd	r24, Z+1	; 0x01
    32ca:	92 81       	ldd	r25, Z+2	; 0x02
    32cc:	88 87       	std	Y+8, r24	; 0x08
    32ce:	99 87       	std	Y+9, r25	; 0x09
    32d0:	88 85       	ldd	r24, Y+8	; 0x08
    32d2:	99 85       	ldd	r25, Y+9	; 0x09
    32d4:	8a 3e       	cpi	r24, 0xEA	; 234
    32d6:	f2 e2       	ldi	r31, 0x22	; 34
    32d8:	9f 07       	cpc	r25, r31
    32da:	09 f4       	brne	.+2      	; 0x32de <_Z19handleSerialBusMsgsv+0x4e>
    32dc:	a4 c3       	rjmp	.+1864   	; 0x3a26 <_Z19handleSerialBusMsgsv+0x796>
    32de:	8b 3e       	cpi	r24, 0xEB	; 235
    32e0:	22 e2       	ldi	r18, 0x22	; 34
    32e2:	92 07       	cpc	r25, r18
    32e4:	b8 f4       	brcc	.+46     	; 0x3314 <_Z19handleSerialBusMsgsv+0x84>
    32e6:	8f 36       	cpi	r24, 0x6F	; 111
    32e8:	ed e1       	ldi	r30, 0x1D	; 29
    32ea:	9e 07       	cpc	r25, r30
    32ec:	09 f4       	brne	.+2      	; 0x32f0 <_Z19handleSerialBusMsgsv+0x60>
    32ee:	ed c3       	rjmp	.+2010   	; 0x3aca <_Z19handleSerialBusMsgsv+0x83a>
    32f0:	80 37       	cpi	r24, 0x70	; 112
    32f2:	fd e1       	ldi	r31, 0x1D	; 29
    32f4:	9f 07       	cpc	r25, r31
    32f6:	28 f4       	brcc	.+10     	; 0x3302 <_Z19handleSerialBusMsgsv+0x72>
    32f8:	8e 31       	cpi	r24, 0x1E	; 30
    32fa:	93 40       	sbci	r25, 0x03	; 3
    32fc:	09 f4       	brne	.+2      	; 0x3300 <_Z19handleSerialBusMsgsv+0x70>
    32fe:	81 c2       	rjmp	.+1282   	; 0x3802 <_Z19handleSerialBusMsgsv+0x572>
    3300:	19 c7       	rjmp	.+3634   	; 0x4134 <__DATA_REGION_LENGTH__+0x134>
    3302:	86 3c       	cpi	r24, 0xC6	; 198
    3304:	ee e1       	ldi	r30, 0x1E	; 30
    3306:	9e 07       	cpc	r25, r30
    3308:	e9 f0       	breq	.+58     	; 0x3344 <_Z19handleSerialBusMsgsv+0xb4>
    330a:	81 3d       	cpi	r24, 0xD1	; 209
    330c:	9e 41       	sbci	r25, 0x1E	; 30
    330e:	09 f4       	brne	.+2      	; 0x3312 <_Z19handleSerialBusMsgsv+0x82>
    3310:	a9 c1       	rjmp	.+850    	; 0x3664 <_Z19handleSerialBusMsgsv+0x3d4>
    3312:	10 c7       	rjmp	.+3616   	; 0x4134 <__DATA_REGION_LENGTH__+0x134>
    3314:	82 37       	cpi	r24, 0x72	; 114
    3316:	23 e2       	ldi	r18, 0x23	; 35
    3318:	92 07       	cpc	r25, r18
    331a:	09 f4       	brne	.+2      	; 0x331e <_Z19handleSerialBusMsgsv+0x8e>
    331c:	00 c3       	rjmp	.+1536   	; 0x391e <_Z19handleSerialBusMsgsv+0x68e>
    331e:	83 37       	cpi	r24, 0x73	; 115
    3320:	e3 e2       	ldi	r30, 0x23	; 35
    3322:	9e 07       	cpc	r25, r30
    3324:	28 f4       	brcc	.+10     	; 0x3330 <_Z19handleSerialBusMsgsv+0xa0>
    3326:	88 3f       	cpi	r24, 0xF8	; 248
    3328:	92 42       	sbci	r25, 0x22	; 34
    332a:	09 f4       	brne	.+2      	; 0x332e <_Z19handleSerialBusMsgsv+0x9e>
    332c:	38 c1       	rjmp	.+624    	; 0x359e <_Z19handleSerialBusMsgsv+0x30e>
    332e:	02 c7       	rjmp	.+3588   	; 0x4134 <__DATA_REGION_LENGTH__+0x134>
    3330:	84 33       	cpi	r24, 0x34	; 52
    3332:	24 e2       	ldi	r18, 0x24	; 36
    3334:	92 07       	cpc	r25, r18
    3336:	09 f4       	brne	.+2      	; 0x333a <_Z19handleSerialBusMsgsv+0xaa>
    3338:	29 c2       	rjmp	.+1106   	; 0x378c <_Z19handleSerialBusMsgsv+0x4fc>
    333a:	85 3c       	cpi	r24, 0xC5	; 197
    333c:	94 42       	sbci	r25, 0x24	; 36
    333e:	09 f4       	brne	.+2      	; 0x3342 <_Z19handleSerialBusMsgsv+0xb2>
    3340:	e5 c6       	rjmp	.+3530   	; 0x410c <__DATA_REGION_LENGTH__+0x10c>
    3342:	f8 c6       	rjmp	.+3568   	; 0x4134 <__DATA_REGION_LENGTH__+0x134>
    3344:	8e 81       	ldd	r24, Y+6	; 0x06
    3346:	9f 81       	ldd	r25, Y+7	; 0x07
    3348:	fc 01       	movw	r30, r24
    334a:	83 81       	ldd	r24, Z+3	; 0x03
    334c:	88 2f       	mov	r24, r24
    334e:	90 e0       	ldi	r25, 0x00	; 0
    3350:	89 83       	std	Y+1, r24	; 0x01
    3352:	9a 83       	std	Y+2, r25	; 0x02
    3354:	89 81       	ldd	r24, Y+1	; 0x01
    3356:	9a 81       	ldd	r25, Y+2	; 0x02
    3358:	89 2b       	or	r24, r25
    335a:	09 f4       	brne	.+2      	; 0x335e <_Z19handleSerialBusMsgsv+0xce>
    335c:	d0 c0       	rjmp	.+416    	; 0x34fe <_Z19handleSerialBusMsgsv+0x26e>
    335e:	89 81       	ldd	r24, Y+1	; 0x01
    3360:	9a 81       	ldd	r25, Y+2	; 0x02
    3362:	82 34       	cpi	r24, 0x42	; 66
    3364:	91 05       	cpc	r25, r1
    3366:	19 f4       	brne	.+6      	; 0x336e <_Z19handleSerialBusMsgsv+0xde>
    3368:	19 82       	std	Y+1, r1	; 0x01
    336a:	1a 82       	std	Y+2, r1	; 0x02
    336c:	ac c0       	rjmp	.+344    	; 0x34c6 <_Z19handleSerialBusMsgsv+0x236>
    336e:	89 81       	ldd	r24, Y+1	; 0x01
    3370:	9a 81       	ldd	r25, Y+2	; 0x02
    3372:	86 34       	cpi	r24, 0x46	; 70
    3374:	91 05       	cpc	r25, r1
    3376:	29 f4       	brne	.+10     	; 0x3382 <_Z19handleSerialBusMsgsv+0xf2>
    3378:	86 e0       	ldi	r24, 0x06	; 6
    337a:	90 e0       	ldi	r25, 0x00	; 0
    337c:	89 83       	std	Y+1, r24	; 0x01
    337e:	9a 83       	std	Y+2, r25	; 0x02
    3380:	a2 c0       	rjmp	.+324    	; 0x34c6 <_Z19handleSerialBusMsgsv+0x236>
    3382:	89 81       	ldd	r24, Y+1	; 0x01
    3384:	9a 81       	ldd	r25, Y+2	; 0x02
    3386:	83 34       	cpi	r24, 0x43	; 67
    3388:	91 05       	cpc	r25, r1
    338a:	b9 f5       	brne	.+110    	; 0x33fa <_Z19handleSerialBusMsgsv+0x16a>
    338c:	8e 81       	ldd	r24, Y+6	; 0x06
    338e:	9f 81       	ldd	r25, Y+7	; 0x07
    3390:	fc 01       	movw	r30, r24
    3392:	87 89       	ldd	r24, Z+23	; 0x17
    3394:	8b 83       	std	Y+3, r24	; 0x03
    3396:	8e 81       	ldd	r24, Y+6	; 0x06
    3398:	9f 81       	ldd	r25, Y+7	; 0x07
    339a:	fc 01       	movw	r30, r24
    339c:	10 8e       	std	Z+24, r1	; 0x18
    339e:	8b 81       	ldd	r24, Y+3	; 0x03
    33a0:	82 34       	cpi	r24, 0x42	; 66
    33a2:	11 f4       	brne	.+4      	; 0x33a8 <_Z19handleSerialBusMsgsv+0x118>
    33a4:	80 e3       	ldi	r24, 0x30	; 48
    33a6:	8b 83       	std	Y+3, r24	; 0x03
    33a8:	8b 81       	ldd	r24, Y+3	; 0x03
    33aa:	88 2f       	mov	r24, r24
    33ac:	90 e0       	ldi	r25, 0x00	; 0
    33ae:	c0 97       	sbiw	r24, 0x30	; 48
    33b0:	0a 97       	sbiw	r24, 0x0a	; 10
    33b2:	08 f0       	brcs	.+2      	; 0x33b6 <_Z19handleSerialBusMsgsv+0x126>
    33b4:	88 c0       	rjmp	.+272    	; 0x34c6 <_Z19handleSerialBusMsgsv+0x236>
    33b6:	8e 81       	ldd	r24, Y+6	; 0x06
    33b8:	9f 81       	ldd	r25, Y+7	; 0x07
    33ba:	47 96       	adiw	r24, 0x17	; 23
    33bc:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    33c0:	8a 87       	std	Y+10, r24	; 0x0a
    33c2:	9b 87       	std	Y+11, r25	; 0x0b
    33c4:	1c 86       	std	Y+12, r1	; 0x0c
    33c6:	85 e0       	ldi	r24, 0x05	; 5
    33c8:	8d 87       	std	Y+13, r24	; 0x0d
    33ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    33cc:	28 2f       	mov	r18, r24
    33ce:	30 e0       	ldi	r19, 0x00	; 0
    33d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    33d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    33d4:	28 17       	cp	r18, r24
    33d6:	39 07       	cpc	r19, r25
    33d8:	24 f4       	brge	.+8      	; 0x33e2 <_Z19handleSerialBusMsgsv+0x152>
    33da:	8d 85       	ldd	r24, Y+13	; 0x0d
    33dc:	88 2f       	mov	r24, r24
    33de:	90 e0       	ldi	r25, 0x00	; 0
    33e0:	09 c0       	rjmp	.+18     	; 0x33f4 <_Z19handleSerialBusMsgsv+0x164>
    33e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    33e4:	88 2f       	mov	r24, r24
    33e6:	90 e0       	ldi	r25, 0x00	; 0
    33e8:	2a 85       	ldd	r18, Y+10	; 0x0a
    33ea:	3b 85       	ldd	r19, Y+11	; 0x0b
    33ec:	82 17       	cp	r24, r18
    33ee:	93 07       	cpc	r25, r19
    33f0:	0c f4       	brge	.+2      	; 0x33f4 <_Z19handleSerialBusMsgsv+0x164>
    33f2:	c9 01       	movw	r24, r18
    33f4:	89 83       	std	Y+1, r24	; 0x01
    33f6:	9a 83       	std	Y+2, r25	; 0x02
    33f8:	66 c0       	rjmp	.+204    	; 0x34c6 <_Z19handleSerialBusMsgsv+0x236>
    33fa:	89 81       	ldd	r24, Y+1	; 0x01
    33fc:	9a 81       	ldd	r25, Y+2	; 0x02
    33fe:	83 35       	cpi	r24, 0x53	; 83
    3400:	91 05       	cpc	r25, r1
    3402:	09 f0       	breq	.+2      	; 0x3406 <_Z19handleSerialBusMsgsv+0x176>
    3404:	59 c0       	rjmp	.+178    	; 0x34b8 <_Z19handleSerialBusMsgsv+0x228>
    3406:	1c 82       	std	Y+4, r1	; 0x04
    3408:	8e 81       	ldd	r24, Y+6	; 0x06
    340a:	9f 81       	ldd	r25, Y+7	; 0x07
    340c:	fc 01       	movw	r30, r24
    340e:	87 89       	ldd	r24, Z+23	; 0x17
    3410:	8e 87       	std	Y+14, r24	; 0x0e
    3412:	8e 81       	ldd	r24, Y+6	; 0x06
    3414:	9f 81       	ldd	r25, Y+7	; 0x07
    3416:	fc 01       	movw	r30, r24
    3418:	80 8d       	ldd	r24, Z+24	; 0x18
    341a:	8f 87       	std	Y+15, r24	; 0x0f
    341c:	8e 81       	ldd	r24, Y+6	; 0x06
    341e:	9f 81       	ldd	r25, Y+7	; 0x07
    3420:	fc 01       	movw	r30, r24
    3422:	11 8e       	std	Z+25, r1	; 0x19
    3424:	8e 85       	ldd	r24, Y+14	; 0x0e
    3426:	82 34       	cpi	r24, 0x42	; 66
    3428:	11 f4       	brne	.+4      	; 0x342e <_Z19handleSerialBusMsgsv+0x19e>
    342a:	1c 82       	std	Y+4, r1	; 0x04
    342c:	36 c0       	rjmp	.+108    	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    342e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3430:	86 34       	cpi	r24, 0x46	; 70
    3432:	51 f4       	brne	.+20     	; 0x3448 <_Z19handleSerialBusMsgsv+0x1b8>
    3434:	8f 85       	ldd	r24, Y+15	; 0x0f
    3436:	81 33       	cpi	r24, 0x31	; 49
    3438:	80 f1       	brcs	.+96     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    343a:	8f 85       	ldd	r24, Y+15	; 0x0f
    343c:	86 33       	cpi	r24, 0x36	; 54
    343e:	68 f5       	brcc	.+90     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3440:	8f 85       	ldd	r24, Y+15	; 0x0f
    3442:	84 52       	subi	r24, 0x24	; 36
    3444:	8c 83       	std	Y+4, r24	; 0x04
    3446:	29 c0       	rjmp	.+82     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3448:	8e 85       	ldd	r24, Y+14	; 0x0e
    344a:	83 35       	cpi	r24, 0x53	; 83
    344c:	69 f4       	brne	.+26     	; 0x3468 <_Z19handleSerialBusMsgsv+0x1d8>
    344e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3450:	81 33       	cpi	r24, 0x31	; 49
    3452:	38 f0       	brcs	.+14     	; 0x3462 <_Z19handleSerialBusMsgsv+0x1d2>
    3454:	8f 85       	ldd	r24, Y+15	; 0x0f
    3456:	86 33       	cpi	r24, 0x36	; 54
    3458:	20 f4       	brcc	.+8      	; 0x3462 <_Z19handleSerialBusMsgsv+0x1d2>
    345a:	8f 85       	ldd	r24, Y+15	; 0x0f
    345c:	89 52       	subi	r24, 0x29	; 41
    345e:	8c 83       	std	Y+4, r24	; 0x04
    3460:	1c c0       	rjmp	.+56     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3462:	87 e0       	ldi	r24, 0x07	; 7
    3464:	8c 83       	std	Y+4, r24	; 0x04
    3466:	19 c0       	rjmp	.+50     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3468:	8f 85       	ldd	r24, Y+15	; 0x0f
    346a:	86 34       	cpi	r24, 0x46	; 70
    346c:	51 f4       	brne	.+20     	; 0x3482 <_Z19handleSerialBusMsgsv+0x1f2>
    346e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3470:	81 33       	cpi	r24, 0x31	; 49
    3472:	98 f0       	brcs	.+38     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3474:	8e 85       	ldd	r24, Y+14	; 0x0e
    3476:	86 33       	cpi	r24, 0x36	; 54
    3478:	80 f4       	brcc	.+32     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    347a:	8e 85       	ldd	r24, Y+14	; 0x0e
    347c:	84 52       	subi	r24, 0x24	; 36
    347e:	8c 83       	std	Y+4, r24	; 0x04
    3480:	0c c0       	rjmp	.+24     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3482:	8f 85       	ldd	r24, Y+15	; 0x0f
    3484:	83 35       	cpi	r24, 0x53	; 83
    3486:	49 f4       	brne	.+18     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3488:	8e 85       	ldd	r24, Y+14	; 0x0e
    348a:	81 33       	cpi	r24, 0x31	; 49
    348c:	30 f0       	brcs	.+12     	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    348e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3490:	86 33       	cpi	r24, 0x36	; 54
    3492:	18 f4       	brcc	.+6      	; 0x349a <_Z19handleSerialBusMsgsv+0x20a>
    3494:	8e 85       	ldd	r24, Y+14	; 0x0e
    3496:	89 52       	subi	r24, 0x29	; 41
    3498:	8c 83       	std	Y+4, r24	; 0x04
    349a:	8c 81       	ldd	r24, Y+4	; 0x04
    349c:	87 30       	cpi	r24, 0x07	; 7
    349e:	48 f0       	brcs	.+18     	; 0x34b2 <_Z19handleSerialBusMsgsv+0x222>
    34a0:	8c 81       	ldd	r24, Y+4	; 0x04
    34a2:	82 31       	cpi	r24, 0x12	; 18
    34a4:	30 f4       	brcc	.+12     	; 0x34b2 <_Z19handleSerialBusMsgsv+0x222>
    34a6:	8c 81       	ldd	r24, Y+4	; 0x04
    34a8:	88 2f       	mov	r24, r24
    34aa:	90 e0       	ldi	r25, 0x00	; 0
    34ac:	89 83       	std	Y+1, r24	; 0x01
    34ae:	9a 83       	std	Y+2, r25	; 0x02
    34b0:	0a c0       	rjmp	.+20     	; 0x34c6 <_Z19handleSerialBusMsgsv+0x236>
    34b2:	19 82       	std	Y+1, r1	; 0x01
    34b4:	1a 82       	std	Y+2, r1	; 0x02
    34b6:	07 c0       	rjmp	.+14     	; 0x34c6 <_Z19handleSerialBusMsgsv+0x236>
    34b8:	8e 81       	ldd	r24, Y+6	; 0x06
    34ba:	9f 81       	ldd	r25, Y+7	; 0x07
    34bc:	03 96       	adiw	r24, 0x03	; 3
    34be:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    34c2:	89 83       	std	Y+1, r24	; 0x01
    34c4:	9a 83       	std	Y+2, r25	; 0x02
    34c6:	89 81       	ldd	r24, Y+1	; 0x01
    34c8:	9a 81       	ldd	r25, Y+2	; 0x02
    34ca:	99 23       	and	r25, r25
    34cc:	c4 f0       	brlt	.+48     	; 0x34fe <_Z19handleSerialBusMsgsv+0x26e>
    34ce:	89 81       	ldd	r24, Y+1	; 0x01
    34d0:	9a 81       	ldd	r25, Y+2	; 0x02
    34d2:	42 97       	sbiw	r24, 0x12	; 18
    34d4:	a4 f4       	brge	.+40     	; 0x34fe <_Z19handleSerialBusMsgsv+0x26e>
    34d6:	89 81       	ldd	r24, Y+1	; 0x01
    34d8:	8a a7       	std	Y+42, r24	; 0x2a
    34da:	ce 01       	movw	r24, r28
    34dc:	8a 96       	adiw	r24, 0x2a	; 42
    34de:	ac 01       	movw	r20, r24
    34e0:	6e e3       	ldi	r22, 0x3E	; 62
    34e2:	8b ea       	ldi	r24, 0xAB	; 171
    34e4:	97 e4       	ldi	r25, 0x47	; 71
    34e6:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    34ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    34ec:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    34f0:	98 17       	cp	r25, r24
    34f2:	29 f0       	breq	.+10     	; 0x34fe <_Z19handleSerialBusMsgsv+0x26e>
    34f4:	ce 01       	movw	r24, r28
    34f6:	8a 96       	adiw	r24, 0x2a	; 42
    34f8:	60 e0       	ldi	r22, 0x00	; 0
    34fa:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
    34fe:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    3502:	68 2f       	mov	r22, r24
    3504:	89 e1       	ldi	r24, 0x19	; 25
    3506:	97 e4       	ldi	r25, 0x47	; 71
    3508:	0e 94 2e 76 	call	0xec5c	; 0xec5c <_Z8fox2TextPc5Fox_t>
    350c:	98 2f       	mov	r25, r24
    350e:	81 e0       	ldi	r24, 0x01	; 1
    3510:	89 27       	eor	r24, r25
    3512:	88 23       	and	r24, r24
    3514:	11 f1       	breq	.+68     	; 0x355a <_Z19handleSerialBusMsgsv+0x2ca>
    3516:	ce 01       	movw	r24, r28
    3518:	8b 96       	adiw	r24, 0x2b	; 43
    351a:	69 e1       	ldi	r22, 0x19	; 25
    351c:	77 e4       	ldi	r23, 0x47	; 71
    351e:	0e 94 e8 7b 	call	0xf7d0	; 0xf7d0 <strcpy>
    3522:	ce 01       	movw	r24, r28
    3524:	8b 96       	adiw	r24, 0x2b	; 43
    3526:	29 2f       	mov	r18, r25
    3528:	2f 93       	push	r18
    352a:	8f 93       	push	r24
    352c:	82 e6       	ldi	r24, 0x62	; 98
    352e:	90 e4       	ldi	r25, 0x40	; 64
    3530:	89 2f       	mov	r24, r25
    3532:	8f 93       	push	r24
    3534:	82 e6       	ldi	r24, 0x62	; 98
    3536:	90 e4       	ldi	r25, 0x40	; 64
    3538:	8f 93       	push	r24
    353a:	89 e1       	ldi	r24, 0x19	; 25
    353c:	97 e4       	ldi	r25, 0x47	; 71
    353e:	89 2f       	mov	r24, r25
    3540:	8f 93       	push	r24
    3542:	89 e1       	ldi	r24, 0x19	; 25
    3544:	97 e4       	ldi	r25, 0x47	; 71
    3546:	8f 93       	push	r24
    3548:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    354c:	0f 90       	pop	r0
    354e:	0f 90       	pop	r0
    3550:	0f 90       	pop	r0
    3552:	0f 90       	pop	r0
    3554:	0f 90       	pop	r0
    3556:	0f 90       	pop	r0
    3558:	1d c0       	rjmp	.+58     	; 0x3594 <_Z19handleSerialBusMsgsv+0x304>
    355a:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    355e:	88 2f       	mov	r24, r24
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	29 2f       	mov	r18, r25
    3564:	2f 93       	push	r18
    3566:	8f 93       	push	r24
    3568:	8a e6       	ldi	r24, 0x6A	; 106
    356a:	90 e4       	ldi	r25, 0x40	; 64
    356c:	89 2f       	mov	r24, r25
    356e:	8f 93       	push	r24
    3570:	8a e6       	ldi	r24, 0x6A	; 106
    3572:	90 e4       	ldi	r25, 0x40	; 64
    3574:	8f 93       	push	r24
    3576:	89 e1       	ldi	r24, 0x19	; 25
    3578:	97 e4       	ldi	r25, 0x47	; 71
    357a:	89 2f       	mov	r24, r25
    357c:	8f 93       	push	r24
    357e:	89 e1       	ldi	r24, 0x19	; 25
    3580:	97 e4       	ldi	r25, 0x47	; 71
    3582:	8f 93       	push	r24
    3584:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3588:	0f 90       	pop	r0
    358a:	0f 90       	pop	r0
    358c:	0f 90       	pop	r0
    358e:	0f 90       	pop	r0
    3590:	0f 90       	pop	r0
    3592:	0f 90       	pop	r0
    3594:	89 e1       	ldi	r24, 0x19	; 25
    3596:	97 e4       	ldi	r25, 0x47	; 71
    3598:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    359c:	d5 c5       	rjmp	.+2986   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    359e:	8e 81       	ldd	r24, Y+6	; 0x06
    35a0:	9f 81       	ldd	r25, Y+7	; 0x07
    35a2:	fc 01       	movw	r30, r24
    35a4:	83 81       	ldd	r24, Z+3	; 0x03
    35a6:	88 23       	and	r24, r24
    35a8:	e9 f1       	breq	.+122    	; 0x3624 <_Z19handleSerialBusMsgsv+0x394>
    35aa:	8e 81       	ldd	r24, Y+6	; 0x06
    35ac:	9f 81       	ldd	r25, Y+7	; 0x07
    35ae:	03 96       	adiw	r24, 0x03	; 3
    35b0:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    35b4:	80 93 c3 47 	sts	0x47C3, r24	; 0x8047c3 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    35b8:	90 93 c4 47 	sts	0x47C4, r25	; 0x8047c4 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    35bc:	80 91 c3 47 	lds	r24, 0x47C3	; 0x8047c3 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    35c0:	90 91 c4 47 	lds	r25, 0x47C4	; 0x8047c4 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    35c4:	89 38       	cpi	r24, 0x89	; 137
    35c6:	93 41       	sbci	r25, 0x13	; 19
    35c8:	68 f4       	brcc	.+26     	; 0x35e4 <_Z19handleSerialBusMsgsv+0x354>
    35ca:	60 e0       	ldi	r22, 0x00	; 0
    35cc:	70 e0       	ldi	r23, 0x00	; 0
    35ce:	83 ec       	ldi	r24, 0xC3	; 195
    35d0:	97 e4       	ldi	r25, 0x47	; 71
    35d2:	0e 94 c2 6f 	call	0xdf84	; 0xdf84 <_Z15txSetParametersPjPb>
    35d6:	88 8b       	std	Y+16, r24	; 0x10
    35d8:	88 89       	ldd	r24, Y+16	; 0x10
    35da:	88 23       	and	r24, r24
    35dc:	19 f0       	breq	.+6      	; 0x35e4 <_Z19handleSerialBusMsgsv+0x354>
    35de:	88 89       	ldd	r24, Y+16	; 0x10
    35e0:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    35e4:	0e 94 b7 6f 	call	0xdf6e	; 0xdf6e <_Z12txGetPowerMwv>
    35e8:	29 2f       	mov	r18, r25
    35ea:	2f 93       	push	r18
    35ec:	8f 93       	push	r24
    35ee:	82 e7       	ldi	r24, 0x72	; 114
    35f0:	90 e4       	ldi	r25, 0x40	; 64
    35f2:	89 2f       	mov	r24, r25
    35f4:	8f 93       	push	r24
    35f6:	82 e7       	ldi	r24, 0x72	; 114
    35f8:	90 e4       	ldi	r25, 0x40	; 64
    35fa:	8f 93       	push	r24
    35fc:	89 e1       	ldi	r24, 0x19	; 25
    35fe:	97 e4       	ldi	r25, 0x47	; 71
    3600:	89 2f       	mov	r24, r25
    3602:	8f 93       	push	r24
    3604:	89 e1       	ldi	r24, 0x19	; 25
    3606:	97 e4       	ldi	r25, 0x47	; 71
    3608:	8f 93       	push	r24
    360a:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    360e:	0f 90       	pop	r0
    3610:	0f 90       	pop	r0
    3612:	0f 90       	pop	r0
    3614:	0f 90       	pop	r0
    3616:	0f 90       	pop	r0
    3618:	0f 90       	pop	r0
    361a:	89 e1       	ldi	r24, 0x19	; 25
    361c:	97 e4       	ldi	r25, 0x47	; 71
    361e:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3622:	92 c5       	rjmp	.+2852   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    3624:	0e 94 b7 6f 	call	0xdf6e	; 0xdf6e <_Z12txGetPowerMwv>
    3628:	29 2f       	mov	r18, r25
    362a:	2f 93       	push	r18
    362c:	8f 93       	push	r24
    362e:	82 e7       	ldi	r24, 0x72	; 114
    3630:	90 e4       	ldi	r25, 0x40	; 64
    3632:	89 2f       	mov	r24, r25
    3634:	8f 93       	push	r24
    3636:	82 e7       	ldi	r24, 0x72	; 114
    3638:	90 e4       	ldi	r25, 0x40	; 64
    363a:	8f 93       	push	r24
    363c:	89 e1       	ldi	r24, 0x19	; 25
    363e:	97 e4       	ldi	r25, 0x47	; 71
    3640:	89 2f       	mov	r24, r25
    3642:	8f 93       	push	r24
    3644:	89 e1       	ldi	r24, 0x19	; 25
    3646:	97 e4       	ldi	r25, 0x47	; 71
    3648:	8f 93       	push	r24
    364a:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    364e:	0f 90       	pop	r0
    3650:	0f 90       	pop	r0
    3652:	0f 90       	pop	r0
    3654:	0f 90       	pop	r0
    3656:	0f 90       	pop	r0
    3658:	0f 90       	pop	r0
    365a:	89 e1       	ldi	r24, 0x19	; 25
    365c:	97 e4       	ldi	r25, 0x47	; 71
    365e:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3662:	72 c5       	rjmp	.+2788   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    3664:	19 8a       	std	Y+17, r1	; 0x11
    3666:	1a 8a       	std	Y+18, r1	; 0x12
    3668:	1b 8a       	std	Y+19, r1	; 0x13
    366a:	1c 8a       	std	Y+20, r1	; 0x14
    366c:	8e 81       	ldd	r24, Y+6	; 0x06
    366e:	9f 81       	ldd	r25, Y+7	; 0x07
    3670:	fc 01       	movw	r30, r24
    3672:	83 81       	ldd	r24, Z+3	; 0x03
    3674:	88 23       	and	r24, r24
    3676:	49 f1       	breq	.+82     	; 0x36ca <_Z19handleSerialBusMsgsv+0x43a>
    3678:	8e 81       	ldd	r24, Y+6	; 0x06
    367a:	9f 81       	ldd	r25, Y+7	; 0x07
    367c:	03 96       	adiw	r24, 0x03	; 3
    367e:	9e 01       	movw	r18, r28
    3680:	2c 5b       	subi	r18, 0xBC	; 188
    3682:	3f 4f       	sbci	r19, 0xFF	; 255
    3684:	b9 01       	movw	r22, r18
    3686:	0e 94 69 74 	call	0xe8d2	; 0xe8d2 <_Z12frequencyValPcPm>
    368a:	ce 01       	movw	r24, r28
    368c:	8c 5b       	subi	r24, 0xBC	; 188
    368e:	9f 4f       	sbci	r25, 0xFF	; 255
    3690:	61 e0       	ldi	r22, 0x01	; 1
    3692:	0e 94 12 6f 	call	0xde24	; 0xde24 <_Z14txSetFrequencyPmb>
    3696:	98 2f       	mov	r25, r24
    3698:	81 e0       	ldi	r24, 0x01	; 1
    369a:	89 27       	eor	r24, r25
    369c:	88 23       	and	r24, r24
    369e:	89 f0       	breq	.+34     	; 0x36c2 <_Z19handleSerialBusMsgsv+0x432>
    36a0:	ce 01       	movw	r24, r28
    36a2:	8c 5b       	subi	r24, 0xBC	; 188
    36a4:	9f 4f       	sbci	r25, 0xFF	; 255
    36a6:	fc 01       	movw	r30, r24
    36a8:	80 81       	ld	r24, Z
    36aa:	91 81       	ldd	r25, Z+1	; 0x01
    36ac:	a2 81       	ldd	r26, Z+2	; 0x02
    36ae:	b3 81       	ldd	r27, Z+3	; 0x03
    36b0:	89 8b       	std	Y+17, r24	; 0x11
    36b2:	9a 8b       	std	Y+18, r25	; 0x12
    36b4:	ab 8b       	std	Y+19, r26	; 0x13
    36b6:	bc 8b       	std	Y+20, r27	; 0x14
    36b8:	8b ea       	ldi	r24, 0xAB	; 171
    36ba:	97 e4       	ldi	r25, 0x47	; 71
    36bc:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
    36c0:	04 c0       	rjmp	.+8      	; 0x36ca <_Z19handleSerialBusMsgsv+0x43a>
    36c2:	8d e7       	ldi	r24, 0x7D	; 125
    36c4:	90 e4       	ldi	r25, 0x40	; 64
    36c6:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    36ca:	0e 94 64 6f 	call	0xdec8	; 0xdec8 <_Z14txGetFrequencyv>
    36ce:	dc 01       	movw	r26, r24
    36d0:	cb 01       	movw	r24, r22
    36d2:	89 8b       	std	Y+17, r24	; 0x11
    36d4:	9a 8b       	std	Y+18, r25	; 0x12
    36d6:	ab 8b       	std	Y+19, r26	; 0x13
    36d8:	bc 8b       	std	Y+20, r27	; 0x14
    36da:	89 89       	ldd	r24, Y+17	; 0x11
    36dc:	9a 89       	ldd	r25, Y+18	; 0x12
    36de:	ab 89       	ldd	r26, Y+19	; 0x13
    36e0:	bc 89       	ldd	r27, Y+20	; 0x14
    36e2:	89 2b       	or	r24, r25
    36e4:	8a 2b       	or	r24, r26
    36e6:	8b 2b       	or	r24, r27
    36e8:	09 f4       	brne	.+2      	; 0x36ec <_Z19handleSerialBusMsgsv+0x45c>
    36ea:	29 c5       	rjmp	.+2642   	; 0x413e <__DATA_REGION_LENGTH__+0x13e>
    36ec:	89 89       	ldd	r24, Y+17	; 0x11
    36ee:	9a 89       	ldd	r25, Y+18	; 0x12
    36f0:	ab 89       	ldd	r26, Y+19	; 0x13
    36f2:	bc 89       	ldd	r27, Y+20	; 0x14
    36f4:	9e 01       	movw	r18, r28
    36f6:	28 5b       	subi	r18, 0xB8	; 184
    36f8:	3f 4f       	sbci	r19, 0xFF	; 255
    36fa:	ac 01       	movw	r20, r24
    36fc:	bd 01       	movw	r22, r26
    36fe:	c9 01       	movw	r24, r18
    3700:	0e 94 ed 73 	call	0xe7da	; 0xe7da <_Z15frequencyStringPcm>
    3704:	98 2f       	mov	r25, r24
    3706:	81 e0       	ldi	r24, 0x01	; 1
    3708:	89 27       	eor	r24, r25
    370a:	88 23       	and	r24, r24
    370c:	e9 f0       	breq	.+58     	; 0x3748 <_Z19handleSerialBusMsgsv+0x4b8>
    370e:	ce 01       	movw	r24, r28
    3710:	88 5b       	subi	r24, 0xB8	; 184
    3712:	9f 4f       	sbci	r25, 0xFF	; 255
    3714:	29 2f       	mov	r18, r25
    3716:	2f 93       	push	r18
    3718:	8f 93       	push	r24
    371a:	88 ea       	ldi	r24, 0xA8	; 168
    371c:	90 e4       	ldi	r25, 0x40	; 64
    371e:	89 2f       	mov	r24, r25
    3720:	8f 93       	push	r24
    3722:	88 ea       	ldi	r24, 0xA8	; 168
    3724:	90 e4       	ldi	r25, 0x40	; 64
    3726:	8f 93       	push	r24
    3728:	89 e1       	ldi	r24, 0x19	; 25
    372a:	97 e4       	ldi	r25, 0x47	; 71
    372c:	89 2f       	mov	r24, r25
    372e:	8f 93       	push	r24
    3730:	89 e1       	ldi	r24, 0x19	; 25
    3732:	97 e4       	ldi	r25, 0x47	; 71
    3734:	8f 93       	push	r24
    3736:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    373a:	0f 90       	pop	r0
    373c:	0f 90       	pop	r0
    373e:	0f 90       	pop	r0
    3740:	0f 90       	pop	r0
    3742:	0f 90       	pop	r0
    3744:	0f 90       	pop	r0
    3746:	1d c0       	rjmp	.+58     	; 0x3782 <_Z19handleSerialBusMsgsv+0x4f2>
    3748:	8c 89       	ldd	r24, Y+20	; 0x14
    374a:	8f 93       	push	r24
    374c:	8b 89       	ldd	r24, Y+19	; 0x13
    374e:	8f 93       	push	r24
    3750:	8a 89       	ldd	r24, Y+18	; 0x12
    3752:	8f 93       	push	r24
    3754:	89 89       	ldd	r24, Y+17	; 0x11
    3756:	8f 93       	push	r24
    3758:	80 eb       	ldi	r24, 0xB0	; 176
    375a:	90 e4       	ldi	r25, 0x40	; 64
    375c:	89 2f       	mov	r24, r25
    375e:	8f 93       	push	r24
    3760:	80 eb       	ldi	r24, 0xB0	; 176
    3762:	90 e4       	ldi	r25, 0x40	; 64
    3764:	8f 93       	push	r24
    3766:	89 e1       	ldi	r24, 0x19	; 25
    3768:	97 e4       	ldi	r25, 0x47	; 71
    376a:	89 2f       	mov	r24, r25
    376c:	8f 93       	push	r24
    376e:	89 e1       	ldi	r24, 0x19	; 25
    3770:	97 e4       	ldi	r25, 0x47	; 71
    3772:	8f 93       	push	r24
    3774:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3778:	8d b7       	in	r24, 0x3d	; 61
    377a:	9e b7       	in	r25, 0x3e	; 62
    377c:	08 96       	adiw	r24, 0x08	; 8
    377e:	cd bf       	out	0x3d, r28	; 61
    3780:	de bf       	out	0x3e, r29	; 62
    3782:	89 e1       	ldi	r24, 0x19	; 25
    3784:	97 e4       	ldi	r25, 0x47	; 71
    3786:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    378a:	d9 c4       	rjmp	.+2482   	; 0x413e <__DATA_REGION_LENGTH__+0x13e>
    378c:	8e 81       	ldd	r24, Y+6	; 0x06
    378e:	9f 81       	ldd	r25, Y+7	; 0x07
    3790:	fc 01       	movw	r30, r24
    3792:	83 81       	ldd	r24, Z+3	; 0x03
    3794:	88 23       	and	r24, r24
    3796:	81 f1       	breq	.+96     	; 0x37f8 <_Z19handleSerialBusMsgsv+0x568>
    3798:	8e 81       	ldd	r24, Y+6	; 0x06
    379a:	9f 81       	ldd	r25, Y+7	; 0x07
    379c:	fc 01       	movw	r30, r24
    379e:	83 81       	ldd	r24, Z+3	; 0x03
    37a0:	80 33       	cpi	r24, 0x30	; 48
    37a2:	21 f4       	brne	.+8      	; 0x37ac <_Z19handleSerialBusMsgsv+0x51c>
    37a4:	82 e0       	ldi	r24, 0x02	; 2
    37a6:	0e 94 6c 2c 	call	0x58d8	; 0x58d8 <_Z12stopEventNow19EventActionSource_t>
    37aa:	ce c4       	rjmp	.+2460   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    37ac:	8e 81       	ldd	r24, Y+6	; 0x06
    37ae:	9f 81       	ldd	r25, Y+7	; 0x07
    37b0:	fc 01       	movw	r30, r24
    37b2:	83 81       	ldd	r24, Z+3	; 0x03
    37b4:	81 33       	cpi	r24, 0x31	; 49
    37b6:	21 f4       	brne	.+8      	; 0x37c0 <_Z19handleSerialBusMsgsv+0x530>
    37b8:	82 e0       	ldi	r24, 0x02	; 2
    37ba:	0e 94 0a 2c 	call	0x5814	; 0x5814 <_Z13startEventNow19EventActionSource_t>
    37be:	c4 c4       	rjmp	.+2440   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    37c0:	8e 81       	ldd	r24, Y+6	; 0x06
    37c2:	9f 81       	ldd	r25, Y+7	; 0x07
    37c4:	fc 01       	movw	r30, r24
    37c6:	83 81       	ldd	r24, Z+3	; 0x03
    37c8:	82 33       	cpi	r24, 0x32	; 50
    37ca:	29 f4       	brne	.+10     	; 0x37d6 <_Z19handleSerialBusMsgsv+0x546>
    37cc:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    37d0:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_Z18startEventUsingRTCv>
    37d4:	b9 c4       	rjmp	.+2418   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    37d6:	8e 81       	ldd	r24, Y+6	; 0x06
    37d8:	9f 81       	ldd	r25, Y+7	; 0x07
    37da:	fc 01       	movw	r30, r24
    37dc:	83 81       	ldd	r24, Z+3	; 0x03
    37de:	83 33       	cpi	r24, 0x33	; 51
    37e0:	31 f4       	brne	.+12     	; 0x37ee <_Z19handleSerialBusMsgsv+0x55e>
    37e2:	62 e0       	ldi	r22, 0x02	; 2
    37e4:	80 e0       	ldi	r24, 0x00	; 0
    37e6:	90 e0       	ldi	r25, 0x00	; 0
    37e8:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
    37ec:	ad c4       	rjmp	.+2394   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    37ee:	89 eb       	ldi	r24, 0xB9	; 185
    37f0:	90 e4       	ldi	r25, 0x40	; 64
    37f2:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    37f6:	a8 c4       	rjmp	.+2384   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    37f8:	89 eb       	ldi	r24, 0xB9	; 185
    37fa:	90 e4       	ldi	r25, 0x40	; 64
    37fc:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3800:	a3 c4       	rjmp	.+2374   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    3802:	8e 81       	ldd	r24, Y+6	; 0x06
    3804:	9f 81       	ldd	r25, Y+7	; 0x07
    3806:	fc 01       	movw	r30, r24
    3808:	83 81       	ldd	r24, Z+3	; 0x03
    380a:	88 23       	and	r24, r24
    380c:	09 f4       	brne	.+2      	; 0x3810 <_Z19handleSerialBusMsgsv+0x580>
    380e:	41 c0       	rjmp	.+130    	; 0x3892 <_Z19handleSerialBusMsgsv+0x602>
    3810:	80 e2       	ldi	r24, 0x20	; 32
    3812:	90 e0       	ldi	r25, 0x00	; 0
    3814:	80 93 19 47 	sts	0x4719, r24	; 0x804719 <_ZL9g_tempStr>
    3818:	90 93 1a 47 	sts	0x471A, r25	; 0x80471a <_ZL9g_tempStr+0x1>
    381c:	8e 81       	ldd	r24, Y+6	; 0x06
    381e:	9f 81       	ldd	r25, Y+7	; 0x07
    3820:	03 96       	adiw	r24, 0x03	; 3
    3822:	bc 01       	movw	r22, r24
    3824:	89 e1       	ldi	r24, 0x19	; 25
    3826:	97 e4       	ldi	r25, 0x47	; 71
    3828:	0e 94 c9 7b 	call	0xf792	; 0xf792 <strcat>
    382c:	8e 81       	ldd	r24, Y+6	; 0x06
    382e:	9f 81       	ldd	r25, Y+7	; 0x07
    3830:	fc 01       	movw	r30, r24
    3832:	87 89       	ldd	r24, Z+23	; 0x17
    3834:	88 23       	and	r24, r24
    3836:	d1 f0       	breq	.+52     	; 0x386c <_Z19handleSerialBusMsgsv+0x5dc>
    3838:	89 e1       	ldi	r24, 0x19	; 25
    383a:	97 e4       	ldi	r25, 0x47	; 71
    383c:	9c 01       	movw	r18, r24
    383e:	f9 01       	movw	r30, r18
    3840:	01 90       	ld	r0, Z+
    3842:	00 20       	and	r0, r0
    3844:	e9 f7       	brne	.-6      	; 0x3840 <_Z19handleSerialBusMsgsv+0x5b0>
    3846:	cf 01       	movw	r24, r30
    3848:	01 97       	sbiw	r24, 0x01	; 1
    384a:	82 1b       	sub	r24, r18
    384c:	93 0b       	sbc	r25, r19
    384e:	87 5e       	subi	r24, 0xE7	; 231
    3850:	98 4b       	sbci	r25, 0xB8	; 184
    3852:	20 e2       	ldi	r18, 0x20	; 32
    3854:	30 e0       	ldi	r19, 0x00	; 0
    3856:	fc 01       	movw	r30, r24
    3858:	20 83       	st	Z, r18
    385a:	31 83       	std	Z+1, r19	; 0x01
    385c:	8e 81       	ldd	r24, Y+6	; 0x06
    385e:	9f 81       	ldd	r25, Y+7	; 0x07
    3860:	47 96       	adiw	r24, 0x17	; 23
    3862:	bc 01       	movw	r22, r24
    3864:	89 e1       	ldi	r24, 0x19	; 25
    3866:	97 e4       	ldi	r25, 0x47	; 71
    3868:	0e 94 c9 7b 	call	0xf792	; 0xf792 <strcat>
    386c:	89 e1       	ldi	r24, 0x19	; 25
    386e:	97 e4       	ldi	r25, 0x47	; 71
    3870:	0e 94 ef 7b 	call	0xf7de	; 0xf7de <strlen>
    3874:	45 97       	sbiw	r24, 0x15	; 21
    3876:	68 f4       	brcc	.+26     	; 0x3892 <_Z19handleSerialBusMsgsv+0x602>
    3878:	69 e1       	ldi	r22, 0x19	; 25
    387a:	77 e4       	ldi	r23, 0x47	; 71
    387c:	83 e7       	ldi	r24, 0x73	; 115
    387e:	97 e4       	ldi	r25, 0x47	; 71
    3880:	0e 94 e8 7b 	call	0xf7d0	; 0xf7d0 <strcpy>
    3884:	49 e1       	ldi	r20, 0x19	; 25
    3886:	57 e4       	ldi	r21, 0x47	; 71
    3888:	6a e0       	ldi	r22, 0x0A	; 10
    388a:	8b ea       	ldi	r24, 0xAB	; 171
    388c:	97 e4       	ldi	r25, 0x47	; 71
    388e:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3892:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    3896:	88 23       	and	r24, r24
    3898:	01 f1       	breq	.+64     	; 0x38da <_Z19handleSerialBusMsgsv+0x64a>
    389a:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    389e:	88 2f       	mov	r24, r24
    38a0:	90 e0       	ldi	r25, 0x00	; 0
    38a2:	bc 01       	movw	r22, r24
    38a4:	83 e7       	ldi	r24, 0x73	; 115
    38a6:	97 e4       	ldi	r25, 0x47	; 71
    38a8:	0e 94 26 5c 	call	0xb84c	; 0xb84c <_Z26timeRequiredToSendStrAtWPMPcj>
    38ac:	88 5a       	subi	r24, 0xA8	; 168
    38ae:	9d 4f       	sbci	r25, 0xFD	; 253
    38b0:	96 95       	lsr	r25
    38b2:	87 95       	ror	r24
    38b4:	96 95       	lsr	r25
    38b6:	87 95       	ror	r24
    38b8:	96 95       	lsr	r25
    38ba:	87 95       	ror	r24
    38bc:	9c 01       	movw	r18, r24
    38be:	a5 ec       	ldi	r26, 0xC5	; 197
    38c0:	b0 e2       	ldi	r27, 0x20	; 32
    38c2:	0e 94 36 7a 	call	0xf46c	; 0xf46c <__umulhisi3>
    38c6:	92 95       	swap	r25
    38c8:	82 95       	swap	r24
    38ca:	8f 70       	andi	r24, 0x0F	; 15
    38cc:	89 27       	eor	r24, r25
    38ce:	9f 70       	andi	r25, 0x0F	; 15
    38d0:	89 27       	eor	r24, r25
    38d2:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    38d6:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    38da:	83 e7       	ldi	r24, 0x73	; 115
    38dc:	97 e4       	ldi	r25, 0x47	; 71
    38de:	89 2f       	mov	r24, r25
    38e0:	8f 93       	push	r24
    38e2:	83 e7       	ldi	r24, 0x73	; 115
    38e4:	97 e4       	ldi	r25, 0x47	; 71
    38e6:	8f 93       	push	r24
    38e8:	8e eb       	ldi	r24, 0xBE	; 190
    38ea:	90 e4       	ldi	r25, 0x40	; 64
    38ec:	89 2f       	mov	r24, r25
    38ee:	8f 93       	push	r24
    38f0:	8e eb       	ldi	r24, 0xBE	; 190
    38f2:	90 e4       	ldi	r25, 0x40	; 64
    38f4:	8f 93       	push	r24
    38f6:	89 e1       	ldi	r24, 0x19	; 25
    38f8:	97 e4       	ldi	r25, 0x47	; 71
    38fa:	89 2f       	mov	r24, r25
    38fc:	8f 93       	push	r24
    38fe:	89 e1       	ldi	r24, 0x19	; 25
    3900:	97 e4       	ldi	r25, 0x47	; 71
    3902:	8f 93       	push	r24
    3904:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3908:	0f 90       	pop	r0
    390a:	0f 90       	pop	r0
    390c:	0f 90       	pop	r0
    390e:	0f 90       	pop	r0
    3910:	0f 90       	pop	r0
    3912:	0f 90       	pop	r0
    3914:	89 e1       	ldi	r24, 0x19	; 25
    3916:	97 e4       	ldi	r25, 0x47	; 71
    3918:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    391c:	15 c4       	rjmp	.+2090   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    391e:	8e 81       	ldd	r24, Y+6	; 0x06
    3920:	9f 81       	ldd	r25, Y+7	; 0x07
    3922:	fc 01       	movw	r30, r24
    3924:	83 81       	ldd	r24, Z+3	; 0x03
    3926:	83 35       	cpi	r24, 0x53	; 83
    3928:	09 f0       	breq	.+2      	; 0x392c <_Z19handleSerialBusMsgsv+0x69c>
    392a:	6f c0       	rjmp	.+222    	; 0x3a0a <_Z19handleSerialBusMsgsv+0x77a>
    392c:	8e 81       	ldd	r24, Y+6	; 0x06
    392e:	9f 81       	ldd	r25, Y+7	; 0x07
    3930:	fc 01       	movw	r30, r24
    3932:	87 89       	ldd	r24, Z+23	; 0x17
    3934:	8d 8b       	std	Y+21, r24	; 0x15
    3936:	8d 89       	ldd	r24, Y+21	; 0x15
    3938:	88 23       	and	r24, r24
    393a:	09 f4       	brne	.+2      	; 0x393e <_Z19handleSerialBusMsgsv+0x6ae>
    393c:	48 c0       	rjmp	.+144    	; 0x39ce <_Z19handleSerialBusMsgsv+0x73e>
    393e:	8e 81       	ldd	r24, Y+6	; 0x06
    3940:	9f 81       	ldd	r25, Y+7	; 0x07
    3942:	47 96       	adiw	r24, 0x17	; 23
    3944:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    3948:	dc 01       	movw	r26, r24
    394a:	cb 01       	movw	r24, r22
    394c:	8e 8b       	std	Y+22, r24	; 0x16
    394e:	8e 89       	ldd	r24, Y+22	; 0x16
    3950:	8f 8b       	std	Y+23, r24	; 0x17
    3952:	85 e0       	ldi	r24, 0x05	; 5
    3954:	88 8f       	std	Y+24, r24	; 0x18
    3956:	84 e1       	ldi	r24, 0x14	; 20
    3958:	89 8f       	std	Y+25, r24	; 0x19
    395a:	9f 89       	ldd	r25, Y+23	; 0x17
    395c:	89 8d       	ldd	r24, Y+25	; 0x19
    395e:	89 17       	cp	r24, r25
    3960:	40 f0       	brcs	.+16     	; 0x3972 <_Z19handleSerialBusMsgsv+0x6e2>
    3962:	9f 89       	ldd	r25, Y+23	; 0x17
    3964:	88 8d       	ldd	r24, Y+24	; 0x18
    3966:	98 17       	cp	r25, r24
    3968:	10 f4       	brcc	.+4      	; 0x396e <_Z19handleSerialBusMsgsv+0x6de>
    396a:	88 8d       	ldd	r24, Y+24	; 0x18
    396c:	03 c0       	rjmp	.+6      	; 0x3974 <_Z19handleSerialBusMsgsv+0x6e4>
    396e:	8f 89       	ldd	r24, Y+23	; 0x17
    3970:	01 c0       	rjmp	.+2      	; 0x3974 <_Z19handleSerialBusMsgsv+0x6e4>
    3972:	89 8d       	ldd	r24, Y+25	; 0x19
    3974:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    3978:	4b e0       	ldi	r20, 0x0B	; 11
    397a:	50 e4       	ldi	r21, 0x40	; 64
    397c:	6d e3       	ldi	r22, 0x3D	; 61
    397e:	8b ea       	ldi	r24, 0xAB	; 171
    3980:	97 e4       	ldi	r25, 0x47	; 71
    3982:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3986:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    398a:	88 23       	and	r24, r24
    398c:	01 f1       	breq	.+64     	; 0x39ce <_Z19handleSerialBusMsgsv+0x73e>
    398e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3992:	88 2f       	mov	r24, r24
    3994:	90 e0       	ldi	r25, 0x00	; 0
    3996:	bc 01       	movw	r22, r24
    3998:	83 e7       	ldi	r24, 0x73	; 115
    399a:	97 e4       	ldi	r25, 0x47	; 71
    399c:	0e 94 26 5c 	call	0xb84c	; 0xb84c <_Z26timeRequiredToSendStrAtWPMPcj>
    39a0:	88 5a       	subi	r24, 0xA8	; 168
    39a2:	9d 4f       	sbci	r25, 0xFD	; 253
    39a4:	96 95       	lsr	r25
    39a6:	87 95       	ror	r24
    39a8:	96 95       	lsr	r25
    39aa:	87 95       	ror	r24
    39ac:	96 95       	lsr	r25
    39ae:	87 95       	ror	r24
    39b0:	9c 01       	movw	r18, r24
    39b2:	a5 ec       	ldi	r26, 0xC5	; 197
    39b4:	b0 e2       	ldi	r27, 0x20	; 32
    39b6:	0e 94 36 7a 	call	0xf46c	; 0xf46c <__umulhisi3>
    39ba:	92 95       	swap	r25
    39bc:	82 95       	swap	r24
    39be:	8f 70       	andi	r24, 0x0F	; 15
    39c0:	89 27       	eor	r24, r25
    39c2:	9f 70       	andi	r25, 0x0F	; 15
    39c4:	89 27       	eor	r24, r25
    39c6:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    39ca:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    39ce:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    39d2:	88 2f       	mov	r24, r24
    39d4:	90 e0       	ldi	r25, 0x00	; 0
    39d6:	29 2f       	mov	r18, r25
    39d8:	2f 93       	push	r18
    39da:	8f 93       	push	r24
    39dc:	85 ec       	ldi	r24, 0xC5	; 197
    39de:	90 e4       	ldi	r25, 0x40	; 64
    39e0:	89 2f       	mov	r24, r25
    39e2:	8f 93       	push	r24
    39e4:	85 ec       	ldi	r24, 0xC5	; 197
    39e6:	90 e4       	ldi	r25, 0x40	; 64
    39e8:	8f 93       	push	r24
    39ea:	89 e1       	ldi	r24, 0x19	; 25
    39ec:	97 e4       	ldi	r25, 0x47	; 71
    39ee:	89 2f       	mov	r24, r25
    39f0:	8f 93       	push	r24
    39f2:	89 e1       	ldi	r24, 0x19	; 25
    39f4:	97 e4       	ldi	r25, 0x47	; 71
    39f6:	8f 93       	push	r24
    39f8:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    39fc:	0f 90       	pop	r0
    39fe:	0f 90       	pop	r0
    3a00:	0f 90       	pop	r0
    3a02:	0f 90       	pop	r0
    3a04:	0f 90       	pop	r0
    3a06:	0f 90       	pop	r0
    3a08:	09 c0       	rjmp	.+18     	; 0x3a1c <_Z19handleSerialBusMsgsv+0x78c>
    3a0a:	85 e0       	ldi	r24, 0x05	; 5
    3a0c:	e9 eb       	ldi	r30, 0xB9	; 185
    3a0e:	f0 e4       	ldi	r31, 0x40	; 64
    3a10:	a9 e1       	ldi	r26, 0x19	; 25
    3a12:	b7 e4       	ldi	r27, 0x47	; 71
    3a14:	01 90       	ld	r0, Z+
    3a16:	0d 92       	st	X+, r0
    3a18:	8a 95       	dec	r24
    3a1a:	e1 f7       	brne	.-8      	; 0x3a14 <_Z19handleSerialBusMsgsv+0x784>
    3a1c:	89 e1       	ldi	r24, 0x19	; 25
    3a1e:	97 e4       	ldi	r25, 0x47	; 71
    3a20:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3a24:	91 c3       	rjmp	.+1826   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    3a26:	8e 81       	ldd	r24, Y+6	; 0x06
    3a28:	9f 81       	ldd	r25, Y+7	; 0x07
    3a2a:	fc 01       	movw	r30, r24
    3a2c:	83 81       	ldd	r24, Z+3	; 0x03
    3a2e:	88 23       	and	r24, r24
    3a30:	51 f1       	breq	.+84     	; 0x3a86 <_Z19handleSerialBusMsgsv+0x7f6>
    3a32:	8e 81       	ldd	r24, Y+6	; 0x06
    3a34:	9f 81       	ldd	r25, Y+7	; 0x07
    3a36:	03 96       	adiw	r24, 0x03	; 3
    3a38:	48 e0       	ldi	r20, 0x08	; 8
    3a3a:	50 e0       	ldi	r21, 0x00	; 0
    3a3c:	bc 01       	movw	r22, r24
    3a3e:	89 e1       	ldi	r24, 0x19	; 25
    3a40:	97 e4       	ldi	r25, 0x47	; 71
    3a42:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strncpy>
    3a46:	10 92 21 47 	sts	0x4721, r1	; 0x804721 <_ZL9g_tempStr+0x8>
    3a4a:	89 e1       	ldi	r24, 0x19	; 25
    3a4c:	97 e4       	ldi	r25, 0x47	; 71
    3a4e:	0e 94 c6 73 	call	0xe78c	; 0xe78c <_Z11only_digitsPc>
    3a52:	88 23       	and	r24, r24
    3a54:	41 f0       	breq	.+16     	; 0x3a66 <_Z19handleSerialBusMsgsv+0x7d6>
    3a56:	89 e1       	ldi	r24, 0x19	; 25
    3a58:	97 e4       	ldi	r25, 0x47	; 71
    3a5a:	0e 94 ef 7b 	call	0xf7de	; 0xf7de <strlen>
    3a5e:	04 97       	sbiw	r24, 0x04	; 4
    3a60:	10 f0       	brcs	.+4      	; 0x3a66 <_Z19handleSerialBusMsgsv+0x7d6>
    3a62:	81 e0       	ldi	r24, 0x01	; 1
    3a64:	01 c0       	rjmp	.+2      	; 0x3a68 <_Z19handleSerialBusMsgsv+0x7d8>
    3a66:	80 e0       	ldi	r24, 0x00	; 0
    3a68:	88 23       	and	r24, r24
    3a6a:	69 f0       	breq	.+26     	; 0x3a86 <_Z19handleSerialBusMsgsv+0x7f6>
    3a6c:	69 e1       	ldi	r22, 0x19	; 25
    3a6e:	77 e4       	ldi	r23, 0x47	; 71
    3a70:	8d ea       	ldi	r24, 0xAD	; 173
    3a72:	97 e4       	ldi	r25, 0x47	; 71
    3a74:	0e 94 e8 7b 	call	0xf7d0	; 0xf7d0 <strcpy>
    3a78:	4d ea       	ldi	r20, 0xAD	; 173
    3a7a:	57 e4       	ldi	r21, 0x47	; 71
    3a7c:	64 e3       	ldi	r22, 0x34	; 52
    3a7e:	8b ea       	ldi	r24, 0xAB	; 171
    3a80:	97 e4       	ldi	r25, 0x47	; 71
    3a82:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3a86:	8d ea       	ldi	r24, 0xAD	; 173
    3a88:	97 e4       	ldi	r25, 0x47	; 71
    3a8a:	89 2f       	mov	r24, r25
    3a8c:	8f 93       	push	r24
    3a8e:	8d ea       	ldi	r24, 0xAD	; 173
    3a90:	97 e4       	ldi	r25, 0x47	; 71
    3a92:	8f 93       	push	r24
    3a94:	87 ed       	ldi	r24, 0xD7	; 215
    3a96:	90 e4       	ldi	r25, 0x40	; 64
    3a98:	89 2f       	mov	r24, r25
    3a9a:	8f 93       	push	r24
    3a9c:	87 ed       	ldi	r24, 0xD7	; 215
    3a9e:	90 e4       	ldi	r25, 0x40	; 64
    3aa0:	8f 93       	push	r24
    3aa2:	89 e1       	ldi	r24, 0x19	; 25
    3aa4:	97 e4       	ldi	r25, 0x47	; 71
    3aa6:	89 2f       	mov	r24, r25
    3aa8:	8f 93       	push	r24
    3aaa:	89 e1       	ldi	r24, 0x19	; 25
    3aac:	97 e4       	ldi	r25, 0x47	; 71
    3aae:	8f 93       	push	r24
    3ab0:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3ab4:	0f 90       	pop	r0
    3ab6:	0f 90       	pop	r0
    3ab8:	0f 90       	pop	r0
    3aba:	0f 90       	pop	r0
    3abc:	0f 90       	pop	r0
    3abe:	0f 90       	pop	r0
    3ac0:	89 e1       	ldi	r24, 0x19	; 25
    3ac2:	97 e4       	ldi	r25, 0x47	; 71
    3ac4:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3ac8:	3f c3       	rjmp	.+1662   	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    3aca:	1d 82       	std	Y+5, r1	; 0x05
    3acc:	8e 81       	ldd	r24, Y+6	; 0x06
    3ace:	9f 81       	ldd	r25, Y+7	; 0x07
    3ad0:	fc 01       	movw	r30, r24
    3ad2:	83 81       	ldd	r24, Z+3	; 0x03
    3ad4:	88 23       	and	r24, r24
    3ad6:	39 f0       	breq	.+14     	; 0x3ae6 <_Z19handleSerialBusMsgsv+0x856>
    3ad8:	8e 81       	ldd	r24, Y+6	; 0x06
    3ada:	9f 81       	ldd	r25, Y+7	; 0x07
    3adc:	fc 01       	movw	r30, r24
    3ade:	83 81       	ldd	r24, Z+3	; 0x03
    3ae0:	84 35       	cpi	r24, 0x54	; 84
    3ae2:	09 f0       	breq	.+2      	; 0x3ae6 <_Z19handleSerialBusMsgsv+0x856>
    3ae4:	9b c1       	rjmp	.+822    	; 0x3e1c <_Z19handleSerialBusMsgsv+0xb8c>
    3ae6:	8e 81       	ldd	r24, Y+6	; 0x06
    3ae8:	9f 81       	ldd	r25, Y+7	; 0x07
    3aea:	fc 01       	movw	r30, r24
    3aec:	87 89       	ldd	r24, Z+23	; 0x17
    3aee:	88 23       	and	r24, r24
    3af0:	09 f4       	brne	.+2      	; 0x3af4 <_Z19handleSerialBusMsgsv+0x864>
    3af2:	76 c0       	rjmp	.+236    	; 0x3be0 <_Z19handleSerialBusMsgsv+0x950>
    3af4:	8e 81       	ldd	r24, Y+6	; 0x06
    3af6:	9f 81       	ldd	r25, Y+7	; 0x07
    3af8:	47 96       	adiw	r24, 0x17	; 23
    3afa:	4c e0       	ldi	r20, 0x0C	; 12
    3afc:	50 e0       	ldi	r21, 0x00	; 0
    3afe:	bc 01       	movw	r22, r24
    3b00:	89 e1       	ldi	r24, 0x19	; 25
    3b02:	97 e4       	ldi	r25, 0x47	; 71
    3b04:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strncpy>
    3b08:	10 92 25 47 	sts	0x4725, r1	; 0x804725 <_ZL9g_tempStr+0xc>
    3b0c:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    3b10:	81 95       	neg	r24
    3b12:	48 2f       	mov	r20, r24
    3b14:	65 eb       	ldi	r22, 0xB5	; 181
    3b16:	77 e4       	ldi	r23, 0x47	; 71
    3b18:	89 e1       	ldi	r24, 0x19	; 25
    3b1a:	97 e4       	ldi	r25, 0x47	; 71
    3b1c:	0e 94 14 30 	call	0x6028	; 0x6028 <_Z18validateTimeStringPcPma>
    3b20:	dc 01       	movw	r26, r24
    3b22:	cb 01       	movw	r24, r22
    3b24:	8a a3       	std	Y+34, r24	; 0x22
    3b26:	9b a3       	std	Y+35, r25	; 0x23
    3b28:	ac a3       	std	Y+36, r26	; 0x24
    3b2a:	bd a3       	std	Y+37, r27	; 0x25
    3b2c:	8a a1       	ldd	r24, Y+34	; 0x22
    3b2e:	9b a1       	ldd	r25, Y+35	; 0x23
    3b30:	ac a1       	ldd	r26, Y+36	; 0x24
    3b32:	bd a1       	ldd	r27, Y+37	; 0x25
    3b34:	89 2b       	or	r24, r25
    3b36:	8a 2b       	or	r24, r26
    3b38:	8b 2b       	or	r24, r27
    3b3a:	09 f4       	brne	.+2      	; 0x3b3e <_Z19handleSerialBusMsgsv+0x8ae>
    3b3c:	6c c1       	rjmp	.+728    	; 0x3e16 <_Z19handleSerialBusMsgsv+0xb86>
    3b3e:	60 e0       	ldi	r22, 0x00	; 0
    3b40:	89 e1       	ldi	r24, 0x19	; 25
    3b42:	97 e4       	ldi	r25, 0x47	; 71
    3b44:	0e 94 2d 42 	call	0x845a	; 0x845a <ds3231_set_date_time_arducon>
    3b48:	8e a3       	std	Y+38, r24	; 0x26
    3b4a:	8e a1       	ldd	r24, Y+38	; 0x26
    3b4c:	88 23       	and	r24, r24
    3b4e:	51 f0       	breq	.+20     	; 0x3b64 <_Z19handleSerialBusMsgsv+0x8d4>
    3b50:	88 e2       	ldi	r24, 0x28	; 40
    3b52:	ef ed       	ldi	r30, 0xDF	; 223
    3b54:	f0 e4       	ldi	r31, 0x40	; 64
    3b56:	a9 e1       	ldi	r26, 0x19	; 25
    3b58:	b7 e4       	ldi	r27, 0x47	; 71
    3b5a:	01 90       	ld	r0, Z+
    3b5c:	0d 92       	st	X+, r0
    3b5e:	8a 95       	dec	r24
    3b60:	e1 f7       	brne	.-8      	; 0x3b5a <_Z19handleSerialBusMsgsv+0x8ca>
    3b62:	59 c1       	rjmp	.+690    	; 0x3e16 <_Z19handleSerialBusMsgsv+0xb86>
    3b64:	80 e0       	ldi	r24, 0x00	; 0
    3b66:	90 e0       	ldi	r25, 0x00	; 0
    3b68:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    3b6c:	dc 01       	movw	r26, r24
    3b6e:	cb 01       	movw	r24, r22
    3b70:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    3b74:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    3b78:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    3b7c:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>
    3b80:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    3b84:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3b88:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3b8c:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3b90:	ae 01       	movw	r20, r28
    3b92:	4b 59       	subi	r20, 0x9B	; 155
    3b94:	5f 4f       	sbci	r21, 0xFF	; 255
    3b96:	22 e3       	ldi	r18, 0x32	; 50
    3b98:	30 e0       	ldi	r19, 0x00	; 0
    3b9a:	bc 01       	movw	r22, r24
    3b9c:	cd 01       	movw	r24, r26
    3b9e:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3ba2:	29 2f       	mov	r18, r25
    3ba4:	2f 93       	push	r18
    3ba6:	8f 93       	push	r24
    3ba8:	87 e0       	ldi	r24, 0x07	; 7
    3baa:	91 e4       	ldi	r25, 0x41	; 65
    3bac:	89 2f       	mov	r24, r25
    3bae:	8f 93       	push	r24
    3bb0:	87 e0       	ldi	r24, 0x07	; 7
    3bb2:	91 e4       	ldi	r25, 0x41	; 65
    3bb4:	8f 93       	push	r24
    3bb6:	89 e1       	ldi	r24, 0x19	; 25
    3bb8:	97 e4       	ldi	r25, 0x47	; 71
    3bba:	89 2f       	mov	r24, r25
    3bbc:	8f 93       	push	r24
    3bbe:	89 e1       	ldi	r24, 0x19	; 25
    3bc0:	97 e4       	ldi	r25, 0x47	; 71
    3bc2:	8f 93       	push	r24
    3bc4:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3bc8:	0f 90       	pop	r0
    3bca:	0f 90       	pop	r0
    3bcc:	0f 90       	pop	r0
    3bce:	0f 90       	pop	r0
    3bd0:	0f 90       	pop	r0
    3bd2:	0f 90       	pop	r0
    3bd4:	60 e0       	ldi	r22, 0x00	; 0
    3bd6:	80 e0       	ldi	r24, 0x00	; 0
    3bd8:	90 e0       	ldi	r25, 0x00	; 0
    3bda:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
    3bde:	1b c1       	rjmp	.+566    	; 0x3e16 <_Z19handleSerialBusMsgsv+0xb86>
    3be0:	ce 01       	movw	r24, r28
    3be2:	84 5a       	subi	r24, 0xA4	; 164
    3be4:	9f 4f       	sbci	r25, 0xFF	; 255
    3be6:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    3bea:	dc 01       	movw	r26, r24
    3bec:	cb 01       	movw	r24, r22
    3bee:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    3bf2:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    3bf6:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    3bfa:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>
    3bfe:	ce 01       	movw	r24, r28
    3c00:	84 5a       	subi	r24, 0xA4	; 164
    3c02:	9f 4f       	sbci	r25, 0xFF	; 255
    3c04:	fc 01       	movw	r30, r24
    3c06:	80 81       	ld	r24, Z
    3c08:	88 23       	and	r24, r24
    3c0a:	51 f0       	breq	.+20     	; 0x3c20 <_Z19handleSerialBusMsgsv+0x990>
    3c0c:	88 e2       	ldi	r24, 0x28	; 40
    3c0e:	ef ed       	ldi	r30, 0xDF	; 223
    3c10:	f0 e4       	ldi	r31, 0x40	; 64
    3c12:	a9 e1       	ldi	r26, 0x19	; 25
    3c14:	b7 e4       	ldi	r27, 0x47	; 71
    3c16:	01 90       	ld	r0, Z+
    3c18:	0d 92       	st	X+, r0
    3c1a:	8a 95       	dec	r24
    3c1c:	e1 f7       	brne	.-8      	; 0x3c16 <_Z19handleSerialBusMsgsv+0x986>
    3c1e:	fb c0       	rjmp	.+502    	; 0x3e16 <_Z19handleSerialBusMsgsv+0xb86>
    3c20:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    3c24:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3c28:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3c2c:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3c30:	ae 01       	movw	r20, r28
    3c32:	4b 59       	subi	r20, 0x9B	; 155
    3c34:	5f 4f       	sbci	r21, 0xFF	; 255
    3c36:	22 e3       	ldi	r18, 0x32	; 50
    3c38:	30 e0       	ldi	r19, 0x00	; 0
    3c3a:	bc 01       	movw	r22, r24
    3c3c:	cd 01       	movw	r24, r26
    3c3e:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3c42:	29 2f       	mov	r18, r25
    3c44:	2f 93       	push	r18
    3c46:	8f 93       	push	r24
    3c48:	81 e1       	ldi	r24, 0x11	; 17
    3c4a:	91 e4       	ldi	r25, 0x41	; 65
    3c4c:	89 2f       	mov	r24, r25
    3c4e:	8f 93       	push	r24
    3c50:	81 e1       	ldi	r24, 0x11	; 17
    3c52:	91 e4       	ldi	r25, 0x41	; 65
    3c54:	8f 93       	push	r24
    3c56:	89 e1       	ldi	r24, 0x19	; 25
    3c58:	97 e4       	ldi	r25, 0x47	; 71
    3c5a:	89 2f       	mov	r24, r25
    3c5c:	8f 93       	push	r24
    3c5e:	89 e1       	ldi	r24, 0x19	; 25
    3c60:	97 e4       	ldi	r25, 0x47	; 71
    3c62:	8f 93       	push	r24
    3c64:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3c68:	0f 90       	pop	r0
    3c6a:	0f 90       	pop	r0
    3c6c:	0f 90       	pop	r0
    3c6e:	0f 90       	pop	r0
    3c70:	0f 90       	pop	r0
    3c72:	0f 90       	pop	r0
    3c74:	89 e1       	ldi	r24, 0x19	; 25
    3c76:	97 e4       	ldi	r25, 0x47	; 71
    3c78:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3c7c:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3c80:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3c84:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3c88:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3c8c:	ae 01       	movw	r20, r28
    3c8e:	4b 59       	subi	r20, 0x9B	; 155
    3c90:	5f 4f       	sbci	r21, 0xFF	; 255
    3c92:	22 e3       	ldi	r18, 0x32	; 50
    3c94:	30 e0       	ldi	r19, 0x00	; 0
    3c96:	bc 01       	movw	r22, r24
    3c98:	cd 01       	movw	r24, r26
    3c9a:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3c9e:	29 2f       	mov	r18, r25
    3ca0:	2f 93       	push	r18
    3ca2:	8f 93       	push	r24
    3ca4:	8d e1       	ldi	r24, 0x1D	; 29
    3ca6:	91 e4       	ldi	r25, 0x41	; 65
    3ca8:	89 2f       	mov	r24, r25
    3caa:	8f 93       	push	r24
    3cac:	8d e1       	ldi	r24, 0x1D	; 29
    3cae:	91 e4       	ldi	r25, 0x41	; 65
    3cb0:	8f 93       	push	r24
    3cb2:	89 e1       	ldi	r24, 0x19	; 25
    3cb4:	97 e4       	ldi	r25, 0x47	; 71
    3cb6:	89 2f       	mov	r24, r25
    3cb8:	8f 93       	push	r24
    3cba:	89 e1       	ldi	r24, 0x19	; 25
    3cbc:	97 e4       	ldi	r25, 0x47	; 71
    3cbe:	8f 93       	push	r24
    3cc0:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3cc4:	0f 90       	pop	r0
    3cc6:	0f 90       	pop	r0
    3cc8:	0f 90       	pop	r0
    3cca:	0f 90       	pop	r0
    3ccc:	0f 90       	pop	r0
    3cce:	0f 90       	pop	r0
    3cd0:	89 e1       	ldi	r24, 0x19	; 25
    3cd2:	97 e4       	ldi	r25, 0x47	; 71
    3cd4:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3cd8:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    3cdc:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3ce0:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3ce4:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3ce8:	ae 01       	movw	r20, r28
    3cea:	4b 59       	subi	r20, 0x9B	; 155
    3cec:	5f 4f       	sbci	r21, 0xFF	; 255
    3cee:	22 e3       	ldi	r18, 0x32	; 50
    3cf0:	30 e0       	ldi	r19, 0x00	; 0
    3cf2:	bc 01       	movw	r22, r24
    3cf4:	cd 01       	movw	r24, r26
    3cf6:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3cfa:	29 2f       	mov	r18, r25
    3cfc:	2f 93       	push	r18
    3cfe:	8f 93       	push	r24
    3d00:	89 e2       	ldi	r24, 0x29	; 41
    3d02:	91 e4       	ldi	r25, 0x41	; 65
    3d04:	89 2f       	mov	r24, r25
    3d06:	8f 93       	push	r24
    3d08:	89 e2       	ldi	r24, 0x29	; 41
    3d0a:	91 e4       	ldi	r25, 0x41	; 65
    3d0c:	8f 93       	push	r24
    3d0e:	89 e1       	ldi	r24, 0x19	; 25
    3d10:	97 e4       	ldi	r25, 0x47	; 71
    3d12:	89 2f       	mov	r24, r25
    3d14:	8f 93       	push	r24
    3d16:	89 e1       	ldi	r24, 0x19	; 25
    3d18:	97 e4       	ldi	r25, 0x47	; 71
    3d1a:	8f 93       	push	r24
    3d1c:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3d20:	0f 90       	pop	r0
    3d22:	0f 90       	pop	r0
    3d24:	0f 90       	pop	r0
    3d26:	0f 90       	pop	r0
    3d28:	0f 90       	pop	r0
    3d2a:	0f 90       	pop	r0
    3d2c:	89 e1       	ldi	r24, 0x19	; 25
    3d2e:	97 e4       	ldi	r25, 0x47	; 71
    3d30:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    3d34:	0e 94 e8 32 	call	0x65d0	; 0x65d0 <_Z23clockConfigurationCheckv>
    3d38:	8f a3       	std	Y+39, r24	; 0x27
    3d3a:	8f a1       	ldd	r24, Y+39	; 0x27
    3d3c:	81 30       	cpi	r24, 0x01	; 1
    3d3e:	31 f0       	breq	.+12     	; 0x3d4c <_Z19handleSerialBusMsgsv+0xabc>
    3d40:	8f a1       	ldd	r24, Y+39	; 0x27
    3d42:	85 30       	cpi	r24, 0x05	; 5
    3d44:	19 f0       	breq	.+6      	; 0x3d4c <_Z19handleSerialBusMsgsv+0xabc>
    3d46:	0e 94 7f 33 	call	0x66fe	; 0x66fe <_Z18reportConfigErrorsv>
    3d4a:	65 c0       	rjmp	.+202    	; 0x3e16 <_Z19handleSerialBusMsgsv+0xb86>
    3d4c:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    3d50:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3d54:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3d58:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3d5c:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    3d60:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3d64:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3d68:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3d6c:	0f 2e       	mov	r0, r31
    3d6e:	f5 e3       	ldi	r31, 0x35	; 53
    3d70:	ef 2e       	mov	r14, r31
    3d72:	f1 e4       	ldi	r31, 0x41	; 65
    3d74:	ff 2e       	mov	r15, r31
    3d76:	f0 2d       	mov	r31, r0
    3d78:	02 e4       	ldi	r16, 0x42	; 66
    3d7a:	11 e4       	ldi	r17, 0x41	; 65
    3d7c:	bc 01       	movw	r22, r24
    3d7e:	cd 01       	movw	r24, r26
    3d80:	0e 94 46 31 	call	0x628c	; 0x628c <_Z14reportTimeTillmmPKcS0_>
    3d84:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    3d88:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3d8c:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3d90:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3d94:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3d98:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3d9c:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3da0:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3da4:	e1 2c       	mov	r14, r1
    3da6:	f1 2c       	mov	r15, r1
    3da8:	0e e4       	ldi	r16, 0x4E	; 78
    3daa:	11 e4       	ldi	r17, 0x41	; 65
    3dac:	bc 01       	movw	r22, r24
    3dae:	cd 01       	movw	r24, r26
    3db0:	0e 94 46 31 	call	0x628c	; 0x628c <_Z14reportTimeTillmmPKcS0_>
    3db4:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    3db8:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3dbc:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3dc0:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3dc4:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    3dc8:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3dcc:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3dd0:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3dd4:	61 e0       	ldi	r22, 0x01	; 1
    3dd6:	28 17       	cp	r18, r24
    3dd8:	39 07       	cpc	r19, r25
    3dda:	4a 07       	cpc	r20, r26
    3ddc:	5b 07       	cpc	r21, r27
    3dde:	08 f0       	brcs	.+2      	; 0x3de2 <_Z19handleSerialBusMsgsv+0xb52>
    3de0:	60 e0       	ldi	r22, 0x00	; 0
    3de2:	66 23       	and	r22, r22
    3de4:	c1 f0       	breq	.+48     	; 0x3e16 <_Z19handleSerialBusMsgsv+0xb86>
    3de6:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    3dea:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3dee:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3df2:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3df6:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    3dfa:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3dfe:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3e02:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3e06:	e1 2c       	mov	r14, r1
    3e08:	f1 2c       	mov	r15, r1
    3e0a:	06 e5       	ldi	r16, 0x56	; 86
    3e0c:	11 e4       	ldi	r17, 0x41	; 65
    3e0e:	bc 01       	movw	r22, r24
    3e10:	cd 01       	movw	r24, r26
    3e12:	0e 94 46 31 	call	0x628c	; 0x628c <_Z14reportTimeTillmmPKcS0_>
    3e16:	81 e0       	ldi	r24, 0x01	; 1
    3e18:	8d 83       	std	Y+5, r24	; 0x05
    3e1a:	70 c1       	rjmp	.+736    	; 0x40fc <__DATA_REGION_LENGTH__+0xfc>
    3e1c:	8e 81       	ldd	r24, Y+6	; 0x06
    3e1e:	9f 81       	ldd	r25, Y+7	; 0x07
    3e20:	fc 01       	movw	r30, r24
    3e22:	83 81       	ldd	r24, Z+3	; 0x03
    3e24:	83 35       	cpi	r24, 0x53	; 83
    3e26:	09 f0       	breq	.+2      	; 0x3e2a <_Z19handleSerialBusMsgsv+0xb9a>
    3e28:	da c0       	rjmp	.+436    	; 0x3fde <_Z19handleSerialBusMsgsv+0xd4e>
    3e2a:	8e 81       	ldd	r24, Y+6	; 0x06
    3e2c:	9f 81       	ldd	r25, Y+7	; 0x07
    3e2e:	47 96       	adiw	r24, 0x17	; 23
    3e30:	bc 01       	movw	r22, r24
    3e32:	89 e1       	ldi	r24, 0x19	; 25
    3e34:	97 e4       	ldi	r25, 0x47	; 71
    3e36:	0e 94 e8 7b 	call	0xf7d0	; 0xf7d0 <strcpy>
    3e3a:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    3e3e:	81 95       	neg	r24
    3e40:	48 2f       	mov	r20, r24
    3e42:	6c e8       	ldi	r22, 0x8C	; 140
    3e44:	77 e4       	ldi	r23, 0x47	; 71
    3e46:	89 e1       	ldi	r24, 0x19	; 25
    3e48:	97 e4       	ldi	r25, 0x47	; 71
    3e4a:	0e 94 14 30 	call	0x6028	; 0x6028 <_Z18validateTimeStringPcPma>
    3e4e:	dc 01       	movw	r26, r24
    3e50:	cb 01       	movw	r24, r22
    3e52:	8a 8f       	std	Y+26, r24	; 0x1a
    3e54:	9b 8f       	std	Y+27, r25	; 0x1b
    3e56:	ac 8f       	std	Y+28, r26	; 0x1c
    3e58:	bd 8f       	std	Y+29, r27	; 0x1d
    3e5a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e5c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e5e:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3e60:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3e62:	89 2b       	or	r24, r25
    3e64:	8a 2b       	or	r24, r26
    3e66:	8b 2b       	or	r24, r27
    3e68:	09 f4       	brne	.+2      	; 0x3e6c <_Z19handleSerialBusMsgsv+0xbdc>
    3e6a:	8c c0       	rjmp	.+280    	; 0x3f84 <_Z19handleSerialBusMsgsv+0xcf4>
    3e6c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e6e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e70:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3e72:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3e74:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    3e78:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    3e7c:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    3e80:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
    3e84:	4c e8       	ldi	r20, 0x8C	; 140
    3e86:	57 e4       	ldi	r21, 0x47	; 71
    3e88:	62 e0       	ldi	r22, 0x02	; 2
    3e8a:	8b ea       	ldi	r24, 0xAB	; 171
    3e8c:	97 e4       	ldi	r25, 0x47	; 71
    3e8e:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3e92:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    3e96:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    3e9a:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    3e9e:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    3ea2:	9e 01       	movw	r18, r28
    3ea4:	23 5a       	subi	r18, 0xA3	; 163
    3ea6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ea8:	f9 01       	movw	r30, r18
    3eaa:	80 83       	st	Z, r24
    3eac:	91 83       	std	Z+1, r25	; 0x01
    3eae:	a2 83       	std	Z+2, r26	; 0x02
    3eb0:	b3 83       	std	Z+3, r27	; 0x03
    3eb2:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3eb6:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3eba:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3ebe:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3ec2:	80 58       	subi	r24, 0x80	; 128
    3ec4:	9e 4a       	sbci	r25, 0xAE	; 174
    3ec6:	ae 4f       	sbci	r26, 0xFE	; 254
    3ec8:	bf 4f       	sbci	r27, 0xFF	; 255
    3eca:	9e 01       	movw	r18, r28
    3ecc:	2f 59       	subi	r18, 0x9F	; 159
    3ece:	3f 4f       	sbci	r19, 0xFF	; 255
    3ed0:	f9 01       	movw	r30, r18
    3ed2:	80 83       	st	Z, r24
    3ed4:	91 83       	std	Z+1, r25	; 0x01
    3ed6:	a2 83       	std	Z+2, r26	; 0x02
    3ed8:	b3 83       	std	Z+3, r27	; 0x03
    3eda:	ce 01       	movw	r24, r28
    3edc:	83 5a       	subi	r24, 0xA3	; 163
    3ede:	9f 4f       	sbci	r25, 0xFF	; 255
    3ee0:	fc 01       	movw	r30, r24
    3ee2:	20 81       	ld	r18, Z
    3ee4:	31 81       	ldd	r19, Z+1	; 0x01
    3ee6:	42 81       	ldd	r20, Z+2	; 0x02
    3ee8:	53 81       	ldd	r21, Z+3	; 0x03
    3eea:	ce 01       	movw	r24, r28
    3eec:	8f 59       	subi	r24, 0x9F	; 159
    3eee:	9f 4f       	sbci	r25, 0xFF	; 255
    3ef0:	fc 01       	movw	r30, r24
    3ef2:	80 81       	ld	r24, Z
    3ef4:	91 81       	ldd	r25, Z+1	; 0x01
    3ef6:	a2 81       	ldd	r26, Z+2	; 0x02
    3ef8:	b3 81       	ldd	r27, Z+3	; 0x03
    3efa:	28 17       	cp	r18, r24
    3efc:	39 07       	cpc	r19, r25
    3efe:	4a 07       	cpc	r20, r26
    3f00:	5b 07       	cpc	r21, r27
    3f02:	48 f4       	brcc	.+18     	; 0x3f16 <_Z19handleSerialBusMsgsv+0xc86>
    3f04:	ce 01       	movw	r24, r28
    3f06:	8f 59       	subi	r24, 0x9F	; 159
    3f08:	9f 4f       	sbci	r25, 0xFF	; 255
    3f0a:	fc 01       	movw	r30, r24
    3f0c:	80 81       	ld	r24, Z
    3f0e:	91 81       	ldd	r25, Z+1	; 0x01
    3f10:	a2 81       	ldd	r26, Z+2	; 0x02
    3f12:	b3 81       	ldd	r27, Z+3	; 0x03
    3f14:	08 c0       	rjmp	.+16     	; 0x3f26 <_Z19handleSerialBusMsgsv+0xc96>
    3f16:	ce 01       	movw	r24, r28
    3f18:	83 5a       	subi	r24, 0xA3	; 163
    3f1a:	9f 4f       	sbci	r25, 0xFF	; 255
    3f1c:	fc 01       	movw	r30, r24
    3f1e:	80 81       	ld	r24, Z
    3f20:	91 81       	ldd	r25, Z+1	; 0x01
    3f22:	a2 81       	ldd	r26, Z+2	; 0x02
    3f24:	b3 81       	ldd	r27, Z+3	; 0x03
    3f26:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    3f2a:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    3f2e:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    3f32:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    3f36:	40 e9       	ldi	r20, 0x90	; 144
    3f38:	57 e4       	ldi	r21, 0x47	; 71
    3f3a:	66 e0       	ldi	r22, 0x06	; 6
    3f3c:	8b ea       	ldi	r24, 0xAB	; 171
    3f3e:	97 e4       	ldi	r25, 0x47	; 71
    3f40:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3f44:	63 e0       	ldi	r22, 0x03	; 3
    3f46:	80 e0       	ldi	r24, 0x00	; 0
    3f48:	90 e0       	ldi	r25, 0x00	; 0
    3f4a:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
    3f4e:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    3f52:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3f56:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3f5a:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3f5e:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    3f62:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    3f66:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    3f6a:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    3f6e:	61 e0       	ldi	r22, 0x01	; 1
    3f70:	82 17       	cp	r24, r18
    3f72:	93 07       	cpc	r25, r19
    3f74:	a4 07       	cpc	r26, r20
    3f76:	b5 07       	cpc	r27, r21
    3f78:	08 f0       	brcs	.+2      	; 0x3f7c <_Z19handleSerialBusMsgsv+0xcec>
    3f7a:	60 e0       	ldi	r22, 0x00	; 0
    3f7c:	66 23       	and	r22, r22
    3f7e:	11 f0       	breq	.+4      	; 0x3f84 <_Z19handleSerialBusMsgsv+0xcf4>
    3f80:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_Z18startEventUsingRTCv>
    3f84:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    3f88:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    3f8c:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    3f90:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    3f94:	ae 01       	movw	r20, r28
    3f96:	4b 59       	subi	r20, 0x9B	; 155
    3f98:	5f 4f       	sbci	r21, 0xFF	; 255
    3f9a:	22 e3       	ldi	r18, 0x32	; 50
    3f9c:	30 e0       	ldi	r19, 0x00	; 0
    3f9e:	bc 01       	movw	r22, r24
    3fa0:	cd 01       	movw	r24, r26
    3fa2:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    3fa6:	29 2f       	mov	r18, r25
    3fa8:	2f 93       	push	r18
    3faa:	8f 93       	push	r24
    3fac:	87 e6       	ldi	r24, 0x67	; 103
    3fae:	91 e4       	ldi	r25, 0x41	; 65
    3fb0:	89 2f       	mov	r24, r25
    3fb2:	8f 93       	push	r24
    3fb4:	87 e6       	ldi	r24, 0x67	; 103
    3fb6:	91 e4       	ldi	r25, 0x41	; 65
    3fb8:	8f 93       	push	r24
    3fba:	89 e1       	ldi	r24, 0x19	; 25
    3fbc:	97 e4       	ldi	r25, 0x47	; 71
    3fbe:	89 2f       	mov	r24, r25
    3fc0:	8f 93       	push	r24
    3fc2:	89 e1       	ldi	r24, 0x19	; 25
    3fc4:	97 e4       	ldi	r25, 0x47	; 71
    3fc6:	8f 93       	push	r24
    3fc8:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    3fcc:	0f 90       	pop	r0
    3fce:	0f 90       	pop	r0
    3fd0:	0f 90       	pop	r0
    3fd2:	0f 90       	pop	r0
    3fd4:	0f 90       	pop	r0
    3fd6:	0f 90       	pop	r0
    3fd8:	81 e0       	ldi	r24, 0x01	; 1
    3fda:	8d 83       	std	Y+5, r24	; 0x05
    3fdc:	8f c0       	rjmp	.+286    	; 0x40fc <__DATA_REGION_LENGTH__+0xfc>
    3fde:	8e 81       	ldd	r24, Y+6	; 0x06
    3fe0:	9f 81       	ldd	r25, Y+7	; 0x07
    3fe2:	fc 01       	movw	r30, r24
    3fe4:	83 81       	ldd	r24, Z+3	; 0x03
    3fe6:	86 34       	cpi	r24, 0x46	; 70
    3fe8:	09 f0       	breq	.+2      	; 0x3fec <_Z19handleSerialBusMsgsv+0xd5c>
    3fea:	80 c0       	rjmp	.+256    	; 0x40ec <__DATA_REGION_LENGTH__+0xec>
    3fec:	8e 81       	ldd	r24, Y+6	; 0x06
    3fee:	9f 81       	ldd	r25, Y+7	; 0x07
    3ff0:	47 96       	adiw	r24, 0x17	; 23
    3ff2:	bc 01       	movw	r22, r24
    3ff4:	89 e1       	ldi	r24, 0x19	; 25
    3ff6:	97 e4       	ldi	r25, 0x47	; 71
    3ff8:	0e 94 e8 7b 	call	0xf7d0	; 0xf7d0 <strcpy>
    3ffc:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    4000:	81 95       	neg	r24
    4002:	48 2f       	mov	r20, r24
    4004:	60 e9       	ldi	r22, 0x90	; 144
    4006:	77 e4       	ldi	r23, 0x47	; 71
    4008:	89 e1       	ldi	r24, 0x19	; 25
    400a:	97 e4       	ldi	r25, 0x47	; 71
    400c:	0e 94 14 30 	call	0x6028	; 0x6028 <_Z18validateTimeStringPcPma>
    4010:	dc 01       	movw	r26, r24
    4012:	cb 01       	movw	r24, r22
    4014:	8e 8f       	std	Y+30, r24	; 0x1e
    4016:	9f 8f       	std	Y+31, r25	; 0x1f
    4018:	a8 a3       	std	Y+32, r26	; 0x20
    401a:	b9 a3       	std	Y+33, r27	; 0x21
    401c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    401e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4020:	a8 a1       	ldd	r26, Y+32	; 0x20
    4022:	b9 a1       	ldd	r27, Y+33	; 0x21
    4024:	89 2b       	or	r24, r25
    4026:	8a 2b       	or	r24, r26
    4028:	8b 2b       	or	r24, r27
    402a:	99 f1       	breq	.+102    	; 0x4092 <__DATA_REGION_LENGTH__+0x92>
    402c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    402e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4030:	a8 a1       	ldd	r26, Y+32	; 0x20
    4032:	b9 a1       	ldd	r27, Y+33	; 0x21
    4034:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    4038:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    403c:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    4040:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    4044:	40 e9       	ldi	r20, 0x90	; 144
    4046:	57 e4       	ldi	r21, 0x47	; 71
    4048:	66 e0       	ldi	r22, 0x06	; 6
    404a:	8b ea       	ldi	r24, 0xAB	; 171
    404c:	97 e4       	ldi	r25, 0x47	; 71
    404e:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    4052:	63 e0       	ldi	r22, 0x03	; 3
    4054:	80 e0       	ldi	r24, 0x00	; 0
    4056:	90 e0       	ldi	r25, 0x00	; 0
    4058:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
    405c:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    4060:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    4064:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    4068:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    406c:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    4070:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    4074:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    4078:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    407c:	61 e0       	ldi	r22, 0x01	; 1
    407e:	82 17       	cp	r24, r18
    4080:	93 07       	cpc	r25, r19
    4082:	a4 07       	cpc	r26, r20
    4084:	b5 07       	cpc	r27, r21
    4086:	08 f0       	brcs	.+2      	; 0x408a <__DATA_REGION_LENGTH__+0x8a>
    4088:	60 e0       	ldi	r22, 0x00	; 0
    408a:	66 23       	and	r22, r22
    408c:	11 f0       	breq	.+4      	; 0x4092 <__DATA_REGION_LENGTH__+0x92>
    408e:	0e 94 9a 2c 	call	0x5934	; 0x5934 <_Z18startEventUsingRTCv>
    4092:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    4096:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    409a:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    409e:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    40a2:	ae 01       	movw	r20, r28
    40a4:	4b 59       	subi	r20, 0x9B	; 155
    40a6:	5f 4f       	sbci	r21, 0xFF	; 255
    40a8:	22 e3       	ldi	r18, 0x32	; 50
    40aa:	30 e0       	ldi	r19, 0x00	; 0
    40ac:	bc 01       	movw	r22, r24
    40ae:	cd 01       	movw	r24, r26
    40b0:	0e 94 61 45 	call	0x8ac2	; 0x8ac2 <convertEpochToTimeString>
    40b4:	29 2f       	mov	r18, r25
    40b6:	2f 93       	push	r18
    40b8:	8f 93       	push	r24
    40ba:	89 e2       	ldi	r24, 0x29	; 41
    40bc:	91 e4       	ldi	r25, 0x41	; 65
    40be:	89 2f       	mov	r24, r25
    40c0:	8f 93       	push	r24
    40c2:	89 e2       	ldi	r24, 0x29	; 41
    40c4:	91 e4       	ldi	r25, 0x41	; 65
    40c6:	8f 93       	push	r24
    40c8:	89 e1       	ldi	r24, 0x19	; 25
    40ca:	97 e4       	ldi	r25, 0x47	; 71
    40cc:	89 2f       	mov	r24, r25
    40ce:	8f 93       	push	r24
    40d0:	89 e1       	ldi	r24, 0x19	; 25
    40d2:	97 e4       	ldi	r25, 0x47	; 71
    40d4:	8f 93       	push	r24
    40d6:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    40da:	0f 90       	pop	r0
    40dc:	0f 90       	pop	r0
    40de:	0f 90       	pop	r0
    40e0:	0f 90       	pop	r0
    40e2:	0f 90       	pop	r0
    40e4:	0f 90       	pop	r0
    40e6:	81 e0       	ldi	r24, 0x01	; 1
    40e8:	8d 83       	std	Y+5, r24	; 0x05
    40ea:	08 c0       	rjmp	.+16     	; 0x40fc <__DATA_REGION_LENGTH__+0xfc>
    40ec:	8e 81       	ldd	r24, Y+6	; 0x06
    40ee:	9f 81       	ldd	r25, Y+7	; 0x07
    40f0:	fc 01       	movw	r30, r24
    40f2:	83 81       	ldd	r24, Z+3	; 0x03
    40f4:	8a 32       	cpi	r24, 0x2A	; 42
    40f6:	11 f4       	brne	.+4      	; 0x40fc <__DATA_REGION_LENGTH__+0xfc>
    40f8:	0e 94 78 44 	call	0x88f0	; 0x88f0 <ds3231_sync2nearestMinute>
    40fc:	8d 81       	ldd	r24, Y+5	; 0x05
    40fe:	88 23       	and	r24, r24
    4100:	01 f1       	breq	.+64     	; 0x4142 <__DATA_REGION_LENGTH__+0x142>
    4102:	89 e1       	ldi	r24, 0x19	; 25
    4104:	97 e4       	ldi	r25, 0x47	; 71
    4106:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    410a:	1b c0       	rjmp	.+54     	; 0x4142 <__DATA_REGION_LENGTH__+0x142>
    410c:	8e 81       	ldd	r24, Y+6	; 0x06
    410e:	9f 81       	ldd	r25, Y+7	; 0x07
    4110:	fc 01       	movw	r30, r24
    4112:	83 81       	ldd	r24, Z+3	; 0x03
    4114:	83 34       	cpi	r24, 0x43	; 67
    4116:	b9 f4       	brne	.+46     	; 0x4146 <__DATA_REGION_LENGTH__+0x146>
    4118:	8e 81       	ldd	r24, Y+6	; 0x06
    411a:	9f 81       	ldd	r25, Y+7	; 0x07
    411c:	fc 01       	movw	r30, r24
    411e:	87 89       	ldd	r24, Z+23	; 0x17
    4120:	88 23       	and	r24, r24
    4122:	89 f0       	breq	.+34     	; 0x4146 <__DATA_REGION_LENGTH__+0x146>
    4124:	8e 81       	ldd	r24, Y+6	; 0x06
    4126:	9f 81       	ldd	r25, Y+7	; 0x07
    4128:	47 96       	adiw	r24, 0x17	; 23
    412a:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    412e:	88 a7       	std	Y+40, r24	; 0x28
    4130:	99 a7       	std	Y+41, r25	; 0x29
    4132:	09 c0       	rjmp	.+18     	; 0x4146 <__DATA_REGION_LENGTH__+0x146>
    4134:	82 e7       	ldi	r24, 0x72	; 114
    4136:	91 e4       	ldi	r25, 0x41	; 65
    4138:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    413c:	05 c0       	rjmp	.+10     	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    413e:	00 00       	nop
    4140:	03 c0       	rjmp	.+6      	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    4142:	00 00       	nop
    4144:	01 c0       	rjmp	.+2      	; 0x4148 <__DATA_REGION_LENGTH__+0x148>
    4146:	00 00       	nop
    4148:	8e 81       	ldd	r24, Y+6	; 0x06
    414a:	9f 81       	ldd	r25, Y+7	; 0x07
    414c:	fc 01       	movw	r30, r24
    414e:	11 82       	std	Z+1, r1	; 0x01
    4150:	12 82       	std	Z+2, r1	; 0x02
    4152:	0e 94 9b 62 	call	0xc536	; 0xc536 <sb_send_NewPrompt>
    4156:	a8 c8       	rjmp	.-3760   	; 0x32a8 <_Z19handleSerialBusMsgsv+0x18>
    4158:	00 00       	nop
    415a:	ca 56       	subi	r28, 0x6A	; 106
    415c:	df 4f       	sbci	r29, 0xFF	; 255
    415e:	cd bf       	out	0x3d, r28	; 61
    4160:	de bf       	out	0x3e, r29	; 62
    4162:	df 91       	pop	r29
    4164:	cf 91       	pop	r28
    4166:	1f 91       	pop	r17
    4168:	0f 91       	pop	r16
    416a:	ff 90       	pop	r15
    416c:	ef 90       	pop	r14
    416e:	08 95       	ret

00004170 <_Z17handleLinkBusMsgsv>:
    4170:	cf 93       	push	r28
    4172:	df 93       	push	r29
    4174:	cd b7       	in	r28, 0x3d	; 61
    4176:	de b7       	in	r29, 0x3e	; 62
    4178:	e4 97       	sbiw	r28, 0x34	; 52
    417a:	cd bf       	out	0x3d, r28	; 61
    417c:	de bf       	out	0x3e, r29	; 62
    417e:	81 e0       	ldi	r24, 0x01	; 1
    4180:	89 83       	std	Y+1, r24	; 0x01
    4182:	0e 94 5a 58 	call	0xb0b4	; 0xb0b4 <_Z18nextFullLBRxBufferv>
    4186:	8a 87       	std	Y+10, r24	; 0x0a
    4188:	9b 87       	std	Y+11, r25	; 0x0b
    418a:	21 e0       	ldi	r18, 0x01	; 1
    418c:	8a 85       	ldd	r24, Y+10	; 0x0a
    418e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4190:	89 2b       	or	r24, r25
    4192:	09 f4       	brne	.+2      	; 0x4196 <_Z17handleLinkBusMsgsv+0x26>
    4194:	20 e0       	ldi	r18, 0x00	; 0
    4196:	22 23       	and	r18, r18
    4198:	09 f4       	brne	.+2      	; 0x419c <_Z17handleLinkBusMsgsv+0x2c>
    419a:	2f c7       	rjmp	.+3678   	; 0x4ffa <_Z17handleLinkBusMsgsv+0xe8a>
    419c:	8a 85       	ldd	r24, Y+10	; 0x0a
    419e:	9b 85       	ldd	r25, Y+11	; 0x0b
    41a0:	fc 01       	movw	r30, r24
    41a2:	81 81       	ldd	r24, Z+1	; 0x01
    41a4:	92 81       	ldd	r25, Z+2	; 0x02
    41a6:	8c 87       	std	Y+12, r24	; 0x0c
    41a8:	9d 87       	std	Y+13, r25	; 0x0d
    41aa:	8c 85       	ldd	r24, Y+12	; 0x0c
    41ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    41ae:	82 38       	cpi	r24, 0x82	; 130
    41b0:	fe e1       	ldi	r31, 0x1E	; 30
    41b2:	9f 07       	cpc	r25, r31
    41b4:	09 f4       	brne	.+2      	; 0x41b8 <_Z17handleLinkBusMsgsv+0x48>
    41b6:	92 c0       	rjmp	.+292    	; 0x42dc <_Z17handleLinkBusMsgsv+0x16c>
    41b8:	83 38       	cpi	r24, 0x83	; 131
    41ba:	2e e1       	ldi	r18, 0x1E	; 30
    41bc:	92 07       	cpc	r25, r18
    41be:	80 f5       	brcc	.+96     	; 0x4220 <_Z17handleLinkBusMsgsv+0xb0>
    41c0:	81 36       	cpi	r24, 0x61	; 97
    41c2:	e3 e0       	ldi	r30, 0x03	; 3
    41c4:	9e 07       	cpc	r25, r30
    41c6:	09 f4       	brne	.+2      	; 0x41ca <_Z17handleLinkBusMsgsv+0x5a>
    41c8:	df c5       	rjmp	.+3006   	; 0x4d88 <_Z17handleLinkBusMsgsv+0xc18>
    41ca:	82 36       	cpi	r24, 0x62	; 98
    41cc:	f3 e0       	ldi	r31, 0x03	; 3
    41ce:	9f 07       	cpc	r25, r31
    41d0:	78 f4       	brcc	.+30     	; 0x41f0 <_Z17handleLinkBusMsgsv+0x80>
    41d2:	85 31       	cpi	r24, 0x15	; 21
    41d4:	23 e0       	ldi	r18, 0x03	; 3
    41d6:	92 07       	cpc	r25, r18
    41d8:	09 f4       	brne	.+2      	; 0x41dc <_Z17handleLinkBusMsgsv+0x6c>
    41da:	50 c1       	rjmp	.+672    	; 0x447c <_Z17handleLinkBusMsgsv+0x30c>
    41dc:	8e 31       	cpi	r24, 0x1E	; 30
    41de:	e3 e0       	ldi	r30, 0x03	; 3
    41e0:	9e 07       	cpc	r25, r30
    41e2:	09 f4       	brne	.+2      	; 0x41e6 <_Z17handleLinkBusMsgsv+0x76>
    41e4:	ab c3       	rjmp	.+1878   	; 0x493c <_Z17handleLinkBusMsgsv+0x7cc>
    41e6:	84 35       	cpi	r24, 0x54	; 84
    41e8:	91 05       	cpc	r25, r1
    41ea:	09 f4       	brne	.+2      	; 0x41ee <_Z17handleLinkBusMsgsv+0x7e>
    41ec:	fa c4       	rjmp	.+2548   	; 0x4be2 <_Z17handleLinkBusMsgsv+0xa72>
    41ee:	da c6       	rjmp	.+3508   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    41f0:	8f 3a       	cpi	r24, 0xAF	; 175
    41f2:	f3 e0       	ldi	r31, 0x03	; 3
    41f4:	9f 07       	cpc	r25, r31
    41f6:	09 f4       	brne	.+2      	; 0x41fa <_Z17handleLinkBusMsgsv+0x8a>
    41f8:	4c c0       	rjmp	.+152    	; 0x4292 <_Z17handleLinkBusMsgsv+0x122>
    41fa:	80 3b       	cpi	r24, 0xB0	; 176
    41fc:	23 e0       	ldi	r18, 0x03	; 3
    41fe:	92 07       	cpc	r25, r18
    4200:	28 f4       	brcc	.+10     	; 0x420c <_Z17handleLinkBusMsgsv+0x9c>
    4202:	84 38       	cpi	r24, 0x84	; 132
    4204:	93 40       	sbci	r25, 0x03	; 3
    4206:	09 f4       	brne	.+2      	; 0x420a <_Z17handleLinkBusMsgsv+0x9a>
    4208:	14 c2       	rjmp	.+1064   	; 0x4632 <_Z17handleLinkBusMsgsv+0x4c2>
    420a:	cc c6       	rjmp	.+3480   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    420c:	86 3a       	cpi	r24, 0xA6	; 166
    420e:	fc e1       	ldi	r31, 0x1C	; 28
    4210:	9f 07       	cpc	r25, r31
    4212:	09 f4       	brne	.+2      	; 0x4216 <_Z17handleLinkBusMsgsv+0xa6>
    4214:	58 c6       	rjmp	.+3248   	; 0x4ec6 <_Z17handleLinkBusMsgsv+0xd56>
    4216:	88 31       	cpi	r24, 0x18	; 24
    4218:	9d 41       	sbci	r25, 0x1D	; 29
    421a:	09 f4       	brne	.+2      	; 0x421e <_Z17handleLinkBusMsgsv+0xae>
    421c:	c9 c6       	rjmp	.+3474   	; 0x4fb0 <_Z17handleLinkBusMsgsv+0xe40>
    421e:	c2 c6       	rjmp	.+3460   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    4220:	8a 39       	cpi	r24, 0x9A	; 154
    4222:	e3 e2       	ldi	r30, 0x23	; 35
    4224:	9e 07       	cpc	r25, r30
    4226:	09 f4       	brne	.+2      	; 0x422a <_Z17handleLinkBusMsgsv+0xba>
    4228:	55 c0       	rjmp	.+170    	; 0x42d4 <_Z17handleLinkBusMsgsv+0x164>
    422a:	8b 39       	cpi	r24, 0x9B	; 155
    422c:	f3 e2       	ldi	r31, 0x23	; 35
    422e:	9f 07       	cpc	r25, r31
    4230:	c0 f4       	brcc	.+48     	; 0x4262 <_Z17handleLinkBusMsgsv+0xf2>
    4232:	8e 36       	cpi	r24, 0x6E	; 110
    4234:	21 e2       	ldi	r18, 0x21	; 33
    4236:	92 07       	cpc	r25, r18
    4238:	09 f4       	brne	.+2      	; 0x423c <_Z17handleLinkBusMsgsv+0xcc>
    423a:	ba c6       	rjmp	.+3444   	; 0x4fb0 <_Z17handleLinkBusMsgsv+0xe40>
    423c:	8f 36       	cpi	r24, 0x6F	; 111
    423e:	e1 e2       	ldi	r30, 0x21	; 33
    4240:	9e 07       	cpc	r25, r30
    4242:	28 f4       	brcc	.+10     	; 0x424e <_Z17handleLinkBusMsgsv+0xde>
    4244:	81 3d       	cpi	r24, 0xD1	; 209
    4246:	9e 41       	sbci	r25, 0x1E	; 30
    4248:	09 f4       	brne	.+2      	; 0x424c <_Z17handleLinkBusMsgsv+0xdc>
    424a:	c4 c5       	rjmp	.+2952   	; 0x4dd4 <_Z17handleLinkBusMsgsv+0xc64>
    424c:	ab c6       	rjmp	.+3414   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    424e:	8d 3a       	cpi	r24, 0xAD	; 173
    4250:	22 e2       	ldi	r18, 0x22	; 34
    4252:	92 07       	cpc	r25, r18
    4254:	09 f4       	brne	.+2      	; 0x4258 <_Z17handleLinkBusMsgsv+0xe8>
    4256:	9c c0       	rjmp	.+312    	; 0x4390 <_Z17handleLinkBusMsgsv+0x220>
    4258:	81 3c       	cpi	r24, 0xC1	; 193
    425a:	92 42       	sbci	r25, 0x22	; 34
    425c:	09 f4       	brne	.+2      	; 0x4260 <_Z17handleLinkBusMsgsv+0xf0>
    425e:	09 c1       	rjmp	.+530    	; 0x4472 <_Z17handleLinkBusMsgsv+0x302>
    4260:	a1 c6       	rjmp	.+3394   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    4262:	80 3d       	cpi	r24, 0xD0	; 208
    4264:	f3 e2       	ldi	r31, 0x23	; 35
    4266:	9f 07       	cpc	r25, r31
    4268:	09 f4       	brne	.+2      	; 0x426c <_Z17handleLinkBusMsgsv+0xfc>
    426a:	da c3       	rjmp	.+1972   	; 0x4a20 <_Z17handleLinkBusMsgsv+0x8b0>
    426c:	81 3d       	cpi	r24, 0xD1	; 209
    426e:	23 e2       	ldi	r18, 0x23	; 35
    4270:	92 07       	cpc	r25, r18
    4272:	28 f4       	brcc	.+10     	; 0x427e <_Z17handleLinkBusMsgsv+0x10e>
    4274:	8f 3c       	cpi	r24, 0xCF	; 207
    4276:	93 42       	sbci	r25, 0x23	; 35
    4278:	09 f4       	brne	.+2      	; 0x427c <_Z17handleLinkBusMsgsv+0x10c>
    427a:	81 c6       	rjmp	.+3330   	; 0x4f7e <_Z17handleLinkBusMsgsv+0xe0e>
    427c:	93 c6       	rjmp	.+3366   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    427e:	87 3f       	cpi	r24, 0xF7	; 247
    4280:	f3 e2       	ldi	r31, 0x23	; 35
    4282:	9f 07       	cpc	r25, r31
    4284:	09 f4       	brne	.+2      	; 0x4288 <_Z17handleLinkBusMsgsv+0x118>
    4286:	6b c2       	rjmp	.+1238   	; 0x475e <_Z17handleLinkBusMsgsv+0x5ee>
    4288:	8c 39       	cpi	r24, 0x9C	; 156
    428a:	94 42       	sbci	r25, 0x24	; 36
    428c:	09 f4       	brne	.+2      	; 0x4290 <_Z17handleLinkBusMsgsv+0x120>
    428e:	82 c6       	rjmp	.+3332   	; 0x4f94 <_Z17handleLinkBusMsgsv+0xe24>
    4290:	89 c6       	rjmp	.+3346   	; 0x4fa4 <_Z17handleLinkBusMsgsv+0xe34>
    4292:	8a 85       	ldd	r24, Y+10	; 0x0a
    4294:	9b 85       	ldd	r25, Y+11	; 0x0b
    4296:	fc 01       	movw	r30, r24
    4298:	83 81       	ldd	r24, Z+3	; 0x03
    429a:	88 23       	and	r24, r24
    429c:	09 f4       	brne	.+2      	; 0x42a0 <_Z17handleLinkBusMsgsv+0x130>
    429e:	8a c6       	rjmp	.+3348   	; 0x4fb4 <_Z17handleLinkBusMsgsv+0xe44>
    42a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    42a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    42a4:	03 96       	adiw	r24, 0x03	; 3
    42a6:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    42aa:	21 e0       	ldi	r18, 0x01	; 1
    42ac:	89 2b       	or	r24, r25
    42ae:	09 f4       	brne	.+2      	; 0x42b2 <_Z17handleLinkBusMsgsv+0x142>
    42b0:	20 e0       	ldi	r18, 0x00	; 0
    42b2:	2e 87       	std	Y+14, r18	; 0x0e
    42b4:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <_Z12suspendEventv>
    42b8:	0e 94 8b 59 	call	0xb316	; 0xb316 <_Z15linkbus_disablev>
    42bc:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    42c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    42c2:	81 e0       	ldi	r24, 0x01	; 1
    42c4:	89 27       	eor	r24, r25
    42c6:	88 23       	and	r24, r24
    42c8:	09 f4       	brne	.+2      	; 0x42cc <_Z17handleLinkBusMsgsv+0x15c>
    42ca:	74 c6       	rjmp	.+3304   	; 0x4fb4 <_Z17handleLinkBusMsgsv+0xe44>
    42cc:	80 e0       	ldi	r24, 0x00	; 0
    42ce:	0e 94 fa 3a 	call	0x75f4	; 0x75f4 <_Z10wifi_powerb>
    42d2:	70 c6       	rjmp	.+3296   	; 0x4fb4 <_Z17handleLinkBusMsgsv+0xe44>
    42d4:	82 e0       	ldi	r24, 0x02	; 2
    42d6:	0e 94 fc 28 	call	0x51f8	; 0x51f8 <_Z8wdt_init7WDReset>
    42da:	ff cf       	rjmp	.-2      	; 0x42da <_Z17handleLinkBusMsgsv+0x16a>
    42dc:	8a 85       	ldd	r24, Y+10	; 0x0a
    42de:	9b 85       	ldd	r25, Y+11	; 0x0b
    42e0:	fc 01       	movw	r30, r24
    42e2:	83 81       	ldd	r24, Z+3	; 0x03
    42e4:	8f 87       	std	Y+15, r24	; 0x0f
    42e6:	81 e0       	ldi	r24, 0x01	; 1
    42e8:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    42ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    42ee:	8a 35       	cpi	r24, 0x5A	; 90
    42f0:	21 f4       	brne	.+8      	; 0x42fa <_Z17handleLinkBusMsgsv+0x18a>
    42f2:	88 e7       	ldi	r24, 0x78	; 120
    42f4:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    42f8:	5f c6       	rjmp	.+3262   	; 0x4fb8 <_Z17handleLinkBusMsgsv+0xe48>
    42fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    42fc:	80 33       	cpi	r24, 0x30	; 48
    42fe:	a9 f5       	brne	.+106    	; 0x436a <_Z17handleLinkBusMsgsv+0x1fa>
    4300:	80 91 97 47 	lds	r24, 0x4797	; 0x804797 <g_waiting_for_next_event>
    4304:	88 23       	and	r24, r24
    4306:	39 f0       	breq	.+14     	; 0x4316 <_Z17handleLinkBusMsgsv+0x1a6>
    4308:	49 eb       	ldi	r20, 0xB9	; 185
    430a:	52 e4       	ldi	r21, 0x42	; 66
    430c:	6b eb       	ldi	r22, 0xBB	; 187
    430e:	72 e4       	ldi	r23, 0x42	; 66
    4310:	83 e0       	ldi	r24, 0x03	; 3
    4312:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4316:	80 e0       	ldi	r24, 0x00	; 0
    4318:	90 e0       	ldi	r25, 0x00	; 0
    431a:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    431e:	dc 01       	movw	r26, r24
    4320:	cb 01       	movw	r24, r22
    4322:	2b 2f       	mov	r18, r27
    4324:	2f 93       	push	r18
    4326:	2a 2f       	mov	r18, r26
    4328:	2f 93       	push	r18
    432a:	29 2f       	mov	r18, r25
    432c:	2f 93       	push	r18
    432e:	8f 93       	push	r24
    4330:	81 e5       	ldi	r24, 0x51	; 81
    4332:	90 e4       	ldi	r25, 0x40	; 64
    4334:	89 2f       	mov	r24, r25
    4336:	8f 93       	push	r24
    4338:	81 e5       	ldi	r24, 0x51	; 81
    433a:	90 e4       	ldi	r25, 0x40	; 64
    433c:	8f 93       	push	r24
    433e:	89 e1       	ldi	r24, 0x19	; 25
    4340:	97 e4       	ldi	r25, 0x47	; 71
    4342:	89 2f       	mov	r24, r25
    4344:	8f 93       	push	r24
    4346:	89 e1       	ldi	r24, 0x19	; 25
    4348:	97 e4       	ldi	r25, 0x47	; 71
    434a:	8f 93       	push	r24
    434c:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    4350:	8d b7       	in	r24, 0x3d	; 61
    4352:	9e b7       	in	r25, 0x3e	; 62
    4354:	08 96       	adiw	r24, 0x08	; 8
    4356:	cd bf       	out	0x3d, r28	; 61
    4358:	de bf       	out	0x3e, r29	; 62
    435a:	49 e1       	ldi	r20, 0x19	; 25
    435c:	57 e4       	ldi	r21, 0x47	; 71
    435e:	65 e5       	ldi	r22, 0x55	; 85
    4360:	70 e4       	ldi	r23, 0x40	; 64
    4362:	83 e0       	ldi	r24, 0x03	; 3
    4364:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4368:	27 c6       	rjmp	.+3150   	; 0x4fb8 <_Z17handleLinkBusMsgsv+0xe48>
    436a:	8f 85       	ldd	r24, Y+15	; 0x0f
    436c:	83 33       	cpi	r24, 0x33	; 51
    436e:	09 f0       	breq	.+2      	; 0x4372 <_Z17handleLinkBusMsgsv+0x202>
    4370:	23 c6       	rjmp	.+3142   	; 0x4fb8 <_Z17handleLinkBusMsgsv+0xe48>
    4372:	10 92 5b 47 	sts	0x475B, r1	; 0x80475b <_ZL19g_wifi_enable_delay>
    4376:	81 e0       	ldi	r24, 0x01	; 1
    4378:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    437c:	10 92 97 47 	sts	0x4797, r1	; 0x804797 <g_waiting_for_next_event>
    4380:	10 92 96 47 	sts	0x4796, r1	; 0x804796 <g_check_for_next_event>
    4384:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    4388:	81 e0       	ldi	r24, 0x01	; 1
    438a:	80 93 5c 47 	sts	0x475C, r24	; 0x80475c <_ZL20g_shutting_down_wifi>
    438e:	14 c6       	rjmp	.+3112   	; 0x4fb8 <_Z17handleLinkBusMsgsv+0xe48>
    4390:	8a 85       	ldd	r24, Y+10	; 0x0a
    4392:	9b 85       	ldd	r25, Y+11	; 0x0b
    4394:	fc 01       	movw	r30, r24
    4396:	83 81       	ldd	r24, Z+3	; 0x03
    4398:	88 23       	and	r24, r24
    439a:	09 f4       	brne	.+2      	; 0x439e <_Z17handleLinkBusMsgsv+0x22e>
    439c:	0f c6       	rjmp	.+3102   	; 0x4fbc <_Z17handleLinkBusMsgsv+0xe4c>
    439e:	8a 85       	ldd	r24, Y+10	; 0x0a
    43a0:	9b 85       	ldd	r25, Y+11	; 0x0b
    43a2:	fc 01       	movw	r30, r24
    43a4:	83 81       	ldd	r24, Z+3	; 0x03
    43a6:	8d 34       	cpi	r24, 0x4D	; 77
    43a8:	81 f4       	brne	.+32     	; 0x43ca <_Z17handleLinkBusMsgsv+0x25a>
    43aa:	8a 85       	ldd	r24, Y+10	; 0x0a
    43ac:	9b 85       	ldd	r25, Y+11	; 0x0b
    43ae:	fc 01       	movw	r30, r24
    43b0:	80 8d       	ldd	r24, Z+24	; 0x18
    43b2:	88 23       	and	r24, r24
    43b4:	51 f0       	breq	.+20     	; 0x43ca <_Z17handleLinkBusMsgsv+0x25a>
    43b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    43b8:	9b 85       	ldd	r25, Y+11	; 0x0b
    43ba:	48 96       	adiw	r24, 0x18	; 24
    43bc:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    43c0:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    43c4:	90 93 c6 47 	sts	0x47C6, r25	; 0x8047c6 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    43c8:	09 c0       	rjmp	.+18     	; 0x43dc <_Z17handleLinkBusMsgsv+0x26c>
    43ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    43cc:	9b 85       	ldd	r25, Y+11	; 0x0b
    43ce:	03 96       	adiw	r24, 0x03	; 3
    43d0:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    43d4:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    43d8:	90 93 c6 47 	sts	0x47C6, r25	; 0x8047c6 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    43dc:	0e 94 b7 6f 	call	0xdf6e	; 0xdf6e <_Z12txGetPowerMwv>
    43e0:	9c 01       	movw	r18, r24
    43e2:	80 91 c5 47 	lds	r24, 0x47C5	; 0x8047c5 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    43e6:	90 91 c6 47 	lds	r25, 0x47C6	; 0x8047c6 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    43ea:	41 e0       	ldi	r20, 0x01	; 1
    43ec:	28 17       	cp	r18, r24
    43ee:	39 07       	cpc	r19, r25
    43f0:	09 f4       	brne	.+2      	; 0x43f4 <_Z17handleLinkBusMsgsv+0x284>
    43f2:	40 e0       	ldi	r20, 0x00	; 0
    43f4:	44 23       	and	r20, r20
    43f6:	b9 f1       	breq	.+110    	; 0x4466 <_Z17handleLinkBusMsgsv+0x2f6>
    43f8:	60 e0       	ldi	r22, 0x00	; 0
    43fa:	70 e0       	ldi	r23, 0x00	; 0
    43fc:	85 ec       	ldi	r24, 0xC5	; 197
    43fe:	97 e4       	ldi	r25, 0x47	; 71
    4400:	0e 94 c2 6f 	call	0xdf84	; 0xdf84 <_Z15txSetParametersPjPb>
    4404:	88 8b       	std	Y+16, r24	; 0x10
    4406:	88 89       	ldd	r24, Y+16	; 0x10
    4408:	88 23       	and	r24, r24
    440a:	21 f0       	breq	.+8      	; 0x4414 <_Z17handleLinkBusMsgsv+0x2a4>
    440c:	88 89       	ldd	r24, Y+16	; 0x10
    440e:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    4412:	05 c0       	rjmp	.+10     	; 0x441e <_Z17handleLinkBusMsgsv+0x2ae>
    4414:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4418:	8f 5f       	subi	r24, 0xFF	; 255
    441a:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    441e:	80 91 c5 47 	lds	r24, 0x47C5	; 0x8047c5 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    4422:	90 91 c6 47 	lds	r25, 0x47C6	; 0x8047c6 <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4426:	29 2f       	mov	r18, r25
    4428:	2f 93       	push	r18
    442a:	8f 93       	push	r24
    442c:	8f eb       	ldi	r24, 0xBF	; 191
    442e:	92 e4       	ldi	r25, 0x42	; 66
    4430:	89 2f       	mov	r24, r25
    4432:	8f 93       	push	r24
    4434:	8f eb       	ldi	r24, 0xBF	; 191
    4436:	92 e4       	ldi	r25, 0x42	; 66
    4438:	8f 93       	push	r24
    443a:	89 e1       	ldi	r24, 0x19	; 25
    443c:	97 e4       	ldi	r25, 0x47	; 71
    443e:	89 2f       	mov	r24, r25
    4440:	8f 93       	push	r24
    4442:	89 e1       	ldi	r24, 0x19	; 25
    4444:	97 e4       	ldi	r25, 0x47	; 71
    4446:	8f 93       	push	r24
    4448:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    444c:	0f 90       	pop	r0
    444e:	0f 90       	pop	r0
    4450:	0f 90       	pop	r0
    4452:	0f 90       	pop	r0
    4454:	0f 90       	pop	r0
    4456:	0f 90       	pop	r0
    4458:	49 e1       	ldi	r20, 0x19	; 25
    445a:	57 e4       	ldi	r21, 0x47	; 71
    445c:	64 ec       	ldi	r22, 0xC4	; 196
    445e:	72 e4       	ldi	r23, 0x42	; 66
    4460:	83 e0       	ldi	r24, 0x03	; 3
    4462:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4466:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    446a:	8f 5f       	subi	r24, 0xFF	; 255
    446c:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4470:	a5 c5       	rjmp	.+2890   	; 0x4fbc <_Z17handleLinkBusMsgsv+0xe4c>
    4472:	8b ea       	ldi	r24, 0xAB	; 171
    4474:	97 e4       	ldi	r25, 0x47	; 71
    4476:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
    447a:	b1 c5       	rjmp	.+2914   	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    447c:	8a 85       	ldd	r24, Y+10	; 0x0a
    447e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4480:	fc 01       	movw	r30, r24
    4482:	83 81       	ldd	r24, Z+3	; 0x03
    4484:	89 8b       	std	Y+17, r24	; 0x11
    4486:	89 89       	ldd	r24, Y+17	; 0x11
    4488:	81 33       	cpi	r24, 0x31	; 49
    448a:	21 f0       	breq	.+8      	; 0x4494 <_Z17handleLinkBusMsgsv+0x324>
    448c:	89 89       	ldd	r24, Y+17	; 0x11
    448e:	82 33       	cpi	r24, 0x32	; 50
    4490:	09 f0       	breq	.+2      	; 0x4494 <_Z17handleLinkBusMsgsv+0x324>
    4492:	bf c0       	rjmp	.+382    	; 0x4612 <_Z17handleLinkBusMsgsv+0x4a2>
    4494:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <g_antenna_connect_state>
    4498:	82 30       	cpi	r24, 0x02	; 2
    449a:	41 f0       	breq	.+16     	; 0x44ac <_Z17handleLinkBusMsgsv+0x33c>
    449c:	90 91 40 40 	lds	r25, 0x4040	; 0x804040 <g_tx_power_is_zero>
    44a0:	81 e0       	ldi	r24, 0x01	; 1
    44a2:	89 27       	eor	r24, r25
    44a4:	88 23       	and	r24, r24
    44a6:	11 f0       	breq	.+4      	; 0x44ac <_Z17handleLinkBusMsgsv+0x33c>
    44a8:	81 e0       	ldi	r24, 0x01	; 1
    44aa:	01 c0       	rjmp	.+2      	; 0x44ae <_Z17handleLinkBusMsgsv+0x33e>
    44ac:	80 e0       	ldi	r24, 0x00	; 0
    44ae:	88 23       	and	r24, r24
    44b0:	21 f0       	breq	.+8      	; 0x44ba <_Z17handleLinkBusMsgsv+0x34a>
    44b2:	87 ef       	ldi	r24, 0xF7	; 247
    44b4:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    44b8:	ba c0       	rjmp	.+372    	; 0x462e <_Z17handleLinkBusMsgsv+0x4be>
    44ba:	89 89       	ldd	r24, Y+17	; 0x11
    44bc:	81 33       	cpi	r24, 0x31	; 49
    44be:	09 f0       	breq	.+2      	; 0x44c2 <_Z17handleLinkBusMsgsv+0x352>
    44c0:	64 c0       	rjmp	.+200    	; 0x458a <_Z17handleLinkBusMsgsv+0x41a>
    44c2:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <g_antenna_connect_state>
    44c6:	82 30       	cpi	r24, 0x02	; 2
    44c8:	21 f0       	breq	.+8      	; 0x44d2 <_Z17handleLinkBusMsgsv+0x362>
    44ca:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <g_tx_power_is_zero>
    44ce:	88 23       	and	r24, r24
    44d0:	11 f0       	breq	.+4      	; 0x44d6 <_Z17handleLinkBusMsgsv+0x366>
    44d2:	81 e0       	ldi	r24, 0x01	; 1
    44d4:	01 c0       	rjmp	.+2      	; 0x44d8 <_Z17handleLinkBusMsgsv+0x368>
    44d6:	80 e0       	ldi	r24, 0x00	; 0
    44d8:	88 23       	and	r24, r24
    44da:	09 f4       	brne	.+2      	; 0x44de <_Z17handleLinkBusMsgsv+0x36e>
    44dc:	52 c0       	rjmp	.+164    	; 0x4582 <_Z17handleLinkBusMsgsv+0x412>
    44de:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    44e2:	81 e0       	ldi	r24, 0x01	; 1
    44e4:	8f a7       	std	Y+47, r24	; 0x2f
    44e6:	ce 01       	movw	r24, r28
    44e8:	8f 96       	adiw	r24, 0x2f	; 47
    44ea:	40 e0       	ldi	r20, 0x00	; 0
    44ec:	50 e0       	ldi	r21, 0x00	; 0
    44ee:	bc 01       	movw	r22, r24
    44f0:	8e e5       	ldi	r24, 0x5E	; 94
    44f2:	97 e4       	ldi	r25, 0x47	; 71
    44f4:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    44f8:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    44fc:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    4500:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4504:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4508:	81 e0       	ldi	r24, 0x01	; 1
    450a:	90 e0       	ldi	r25, 0x00	; 0
    450c:	a0 e0       	ldi	r26, 0x00	; 0
    450e:	b0 e0       	ldi	r27, 0x00	; 0
    4510:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    4514:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    4518:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    451c:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
    4520:	8f ef       	ldi	r24, 0xFF	; 255
    4522:	9f ef       	ldi	r25, 0xFF	; 255
    4524:	dc 01       	movw	r26, r24
    4526:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    452a:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    452e:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    4532:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    4536:	8f e0       	ldi	r24, 0x0F	; 15
    4538:	97 e2       	ldi	r25, 0x27	; 39
    453a:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    453e:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4542:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    4546:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    454a:	8f e0       	ldi	r24, 0x0F	; 15
    454c:	97 e2       	ldi	r25, 0x27	; 39
    454e:	a0 e0       	ldi	r26, 0x00	; 0
    4550:	b0 e0       	ldi	r27, 0x00	; 0
    4552:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    4556:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    455a:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    455e:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    4562:	8f ef       	ldi	r24, 0xFF	; 255
    4564:	9f ef       	ldi	r25, 0xFF	; 255
    4566:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    456a:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    456e:	81 e0       	ldi	r24, 0x01	; 1
    4570:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
    4574:	81 e0       	ldi	r24, 0x01	; 1
    4576:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
    457a:	8d ef       	ldi	r24, 0xFD	; 253
    457c:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    4580:	56 c0       	rjmp	.+172    	; 0x462e <_Z17handleLinkBusMsgsv+0x4be>
    4582:	87 ef       	ldi	r24, 0xF7	; 247
    4584:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    4588:	52 c0       	rjmp	.+164    	; 0x462e <_Z17handleLinkBusMsgsv+0x4be>
    458a:	89 89       	ldd	r24, Y+17	; 0x11
    458c:	82 33       	cpi	r24, 0x32	; 50
    458e:	09 f0       	breq	.+2      	; 0x4592 <_Z17handleLinkBusMsgsv+0x422>
    4590:	4e c0       	rjmp	.+156    	; 0x462e <_Z17handleLinkBusMsgsv+0x4be>
    4592:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4596:	88 23       	and	r24, r24
    4598:	41 f0       	breq	.+16     	; 0x45aa <_Z17handleLinkBusMsgsv+0x43a>
    459a:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    459e:	8c 30       	cpi	r24, 0x0C	; 12
    45a0:	20 f4       	brcc	.+8      	; 0x45aa <_Z17handleLinkBusMsgsv+0x43a>
    45a2:	8d ec       	ldi	r24, 0xCD	; 205
    45a4:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    45a8:	42 c0       	rjmp	.+132    	; 0x462e <_Z17handleLinkBusMsgsv+0x4be>
    45aa:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    45ae:	88 23       	and	r24, r24
    45b0:	51 f0       	breq	.+20     	; 0x45c6 <_Z17handleLinkBusMsgsv+0x456>
    45b2:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    45b6:	88 23       	and	r24, r24
    45b8:	11 f0       	breq	.+4      	; 0x45be <_Z17handleLinkBusMsgsv+0x44e>
    45ba:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <_Z12suspendEventv>
    45be:	8b ea       	ldi	r24, 0xAB	; 171
    45c0:	97 e4       	ldi	r25, 0x47	; 71
    45c2:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
    45c6:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    45ca:	81 e0       	ldi	r24, 0x01	; 1
    45cc:	89 27       	eor	r24, r25
    45ce:	88 23       	and	r24, r24
    45d0:	c1 f0       	breq	.+48     	; 0x4602 <_Z17handleLinkBusMsgsv+0x492>
    45d2:	18 aa       	std	Y+48, r1	; 0x30
    45d4:	ce 01       	movw	r24, r28
    45d6:	c0 96       	adiw	r24, 0x30	; 48
    45d8:	0e 94 61 29 	call	0x52c2	; 0x52c2 <_Z11launchEventP2SC>
    45dc:	8a 8b       	std	Y+18, r24	; 0x12
    45de:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <_ZL13g_go_to_sleep>
    45e2:	88 23       	and	r24, r24
    45e4:	31 f0       	breq	.+12     	; 0x45f2 <_Z17handleLinkBusMsgsv+0x482>
    45e6:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL11g_sleepType>
    45ea:	88 23       	and	r24, r24
    45ec:	11 f0       	breq	.+4      	; 0x45f2 <_Z17handleLinkBusMsgsv+0x482>
    45ee:	81 e0       	ldi	r24, 0x01	; 1
    45f0:	01 c0       	rjmp	.+2      	; 0x45f4 <_Z17handleLinkBusMsgsv+0x484>
    45f2:	80 e0       	ldi	r24, 0x00	; 0
    45f4:	88 23       	and	r24, r24
    45f6:	29 f0       	breq	.+10     	; 0x4602 <_Z17handleLinkBusMsgsv+0x492>
    45f8:	83 e0       	ldi	r24, 0x03	; 3
    45fa:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    45fe:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
    4602:	8c e3       	ldi	r24, 0x3C	; 60
    4604:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4608:	10 92 c7 47 	sts	0x47C7, r1	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    460c:	10 92 c8 47 	sts	0x47C8, r1	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4610:	0e c0       	rjmp	.+28     	; 0x462e <_Z17handleLinkBusMsgsv+0x4be>
    4612:	89 89       	ldd	r24, Y+17	; 0x11
    4614:	80 33       	cpi	r24, 0x30	; 48
    4616:	09 f0       	breq	.+2      	; 0x461a <_Z17handleLinkBusMsgsv+0x4aa>
    4618:	d3 c4       	rjmp	.+2470   	; 0x4fc0 <_Z17handleLinkBusMsgsv+0xe50>
    461a:	0e 94 f0 2b 	call	0x57e0	; 0x57e0 <_Z12suspendEventv>
    461e:	10 92 c7 47 	sts	0x47C7, r1	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4622:	10 92 c8 47 	sts	0x47C8, r1	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4626:	8c ee       	ldi	r24, 0xEC	; 236
    4628:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    462c:	c9 c4       	rjmp	.+2450   	; 0x4fc0 <_Z17handleLinkBusMsgsv+0xe50>
    462e:	00 00       	nop
    4630:	c7 c4       	rjmp	.+2446   	; 0x4fc0 <_Z17handleLinkBusMsgsv+0xe50>
    4632:	1a 82       	std	Y+2, r1	; 0x02
    4634:	1b 82       	std	Y+3, r1	; 0x03
    4636:	1c 82       	std	Y+4, r1	; 0x04
    4638:	1d 82       	std	Y+5, r1	; 0x05
    463a:	8a 85       	ldd	r24, Y+10	; 0x0a
    463c:	9b 85       	ldd	r25, Y+11	; 0x0b
    463e:	fc 01       	movw	r30, r24
    4640:	83 81       	ldd	r24, Z+3	; 0x03
    4642:	83 35       	cpi	r24, 0x53	; 83
    4644:	09 f0       	breq	.+2      	; 0x4648 <_Z17handleLinkBusMsgsv+0x4d8>
    4646:	47 c0       	rjmp	.+142    	; 0x46d6 <_Z17handleLinkBusMsgsv+0x566>
    4648:	8a 85       	ldd	r24, Y+10	; 0x0a
    464a:	9b 85       	ldd	r25, Y+11	; 0x0b
    464c:	fc 01       	movw	r30, r24
    464e:	80 8d       	ldd	r24, Z+24	; 0x18
    4650:	88 23       	and	r24, r24
    4652:	59 f0       	breq	.+22     	; 0x466a <_Z17handleLinkBusMsgsv+0x4fa>
    4654:	8a 85       	ldd	r24, Y+10	; 0x0a
    4656:	9b 85       	ldd	r25, Y+11	; 0x0b
    4658:	48 96       	adiw	r24, 0x18	; 24
    465a:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    465e:	dc 01       	movw	r26, r24
    4660:	cb 01       	movw	r24, r22
    4662:	8a 83       	std	Y+2, r24	; 0x02
    4664:	9b 83       	std	Y+3, r25	; 0x03
    4666:	ac 83       	std	Y+4, r26	; 0x04
    4668:	bd 83       	std	Y+5, r27	; 0x05
    466a:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    466e:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    4672:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    4676:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    467a:	61 e0       	ldi	r22, 0x01	; 1
    467c:	2a 81       	ldd	r18, Y+2	; 0x02
    467e:	3b 81       	ldd	r19, Y+3	; 0x03
    4680:	4c 81       	ldd	r20, Y+4	; 0x04
    4682:	5d 81       	ldd	r21, Y+5	; 0x05
    4684:	28 17       	cp	r18, r24
    4686:	39 07       	cpc	r19, r25
    4688:	4a 07       	cpc	r20, r26
    468a:	5b 07       	cpc	r21, r27
    468c:	09 f4       	brne	.+2      	; 0x4690 <_Z17handleLinkBusMsgsv+0x520>
    468e:	60 e0       	ldi	r22, 0x00	; 0
    4690:	66 23       	and	r22, r22
    4692:	d9 f0       	breq	.+54     	; 0x46ca <_Z17handleLinkBusMsgsv+0x55a>
    4694:	8a 81       	ldd	r24, Y+2	; 0x02
    4696:	9b 81       	ldd	r25, Y+3	; 0x03
    4698:	ac 81       	ldd	r26, Y+4	; 0x04
    469a:	bd 81       	ldd	r27, Y+5	; 0x05
    469c:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    46a0:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    46a4:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    46a8:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
    46ac:	80 e0       	ldi	r24, 0x00	; 0
    46ae:	90 e0       	ldi	r25, 0x00	; 0
    46b0:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    46b4:	dc 01       	movw	r26, r24
    46b6:	cb 01       	movw	r24, r22
    46b8:	bc 01       	movw	r22, r24
    46ba:	cd 01       	movw	r24, r26
    46bc:	0e 94 7f 02 	call	0x4fe	; 0x4fe <set_system_time>
    46c0:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    46c4:	8f 5f       	subi	r24, 0xFF	; 255
    46c6:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    46ca:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    46ce:	8f 5f       	subi	r24, 0xFF	; 255
    46d0:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    46d4:	77 c4       	rjmp	.+2286   	; 0x4fc4 <_Z17handleLinkBusMsgsv+0xe54>
    46d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    46d8:	9b 85       	ldd	r25, Y+11	; 0x0b
    46da:	fc 01       	movw	r30, r24
    46dc:	83 81       	ldd	r24, Z+3	; 0x03
    46de:	86 34       	cpi	r24, 0x46	; 70
    46e0:	09 f0       	breq	.+2      	; 0x46e4 <_Z17handleLinkBusMsgsv+0x574>
    46e2:	70 c4       	rjmp	.+2272   	; 0x4fc4 <_Z17handleLinkBusMsgsv+0xe54>
    46e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    46e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    46e8:	fc 01       	movw	r30, r24
    46ea:	80 8d       	ldd	r24, Z+24	; 0x18
    46ec:	88 23       	and	r24, r24
    46ee:	59 f0       	breq	.+22     	; 0x4706 <_Z17handleLinkBusMsgsv+0x596>
    46f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    46f2:	9b 85       	ldd	r25, Y+11	; 0x0b
    46f4:	48 96       	adiw	r24, 0x18	; 24
    46f6:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    46fa:	dc 01       	movw	r26, r24
    46fc:	cb 01       	movw	r24, r22
    46fe:	8a 83       	std	Y+2, r24	; 0x02
    4700:	9b 83       	std	Y+3, r25	; 0x03
    4702:	ac 83       	std	Y+4, r26	; 0x04
    4704:	bd 83       	std	Y+5, r27	; 0x05
    4706:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    470a:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    470e:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    4712:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    4716:	61 e0       	ldi	r22, 0x01	; 1
    4718:	2a 81       	ldd	r18, Y+2	; 0x02
    471a:	3b 81       	ldd	r19, Y+3	; 0x03
    471c:	4c 81       	ldd	r20, Y+4	; 0x04
    471e:	5d 81       	ldd	r21, Y+5	; 0x05
    4720:	28 17       	cp	r18, r24
    4722:	39 07       	cpc	r19, r25
    4724:	4a 07       	cpc	r20, r26
    4726:	5b 07       	cpc	r21, r27
    4728:	09 f4       	brne	.+2      	; 0x472c <_Z17handleLinkBusMsgsv+0x5bc>
    472a:	60 e0       	ldi	r22, 0x00	; 0
    472c:	66 23       	and	r22, r22
    472e:	89 f0       	breq	.+34     	; 0x4752 <_Z17handleLinkBusMsgsv+0x5e2>
    4730:	8a 81       	ldd	r24, Y+2	; 0x02
    4732:	9b 81       	ldd	r25, Y+3	; 0x03
    4734:	ac 81       	ldd	r26, Y+4	; 0x04
    4736:	bd 81       	ldd	r27, Y+5	; 0x05
    4738:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    473c:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    4740:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    4744:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
    4748:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    474c:	8f 5f       	subi	r24, 0xFF	; 255
    474e:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4752:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4756:	8f 5f       	subi	r24, 0xFF	; 255
    4758:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    475c:	33 c4       	rjmp	.+2150   	; 0x4fc4 <_Z17handleLinkBusMsgsv+0xe54>
    475e:	81 e0       	ldi	r24, 0x01	; 1
    4760:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4764:	8a 85       	ldd	r24, Y+10	; 0x0a
    4766:	9b 85       	ldd	r25, Y+11	; 0x0b
    4768:	fc 01       	movw	r30, r24
    476a:	80 81       	ld	r24, Z
    476c:	81 30       	cpi	r24, 0x01	; 1
    476e:	09 f0       	breq	.+2      	; 0x4772 <_Z17handleLinkBusMsgsv+0x602>
    4770:	4a c0       	rjmp	.+148    	; 0x4806 <_Z17handleLinkBusMsgsv+0x696>
    4772:	8a 85       	ldd	r24, Y+10	; 0x0a
    4774:	9b 85       	ldd	r25, Y+11	; 0x0b
    4776:	fc 01       	movw	r30, r24
    4778:	83 81       	ldd	r24, Z+3	; 0x03
    477a:	88 23       	and	r24, r24
    477c:	d1 f0       	breq	.+52     	; 0x47b2 <_Z17handleLinkBusMsgsv+0x642>
    477e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4780:	9b 85       	ldd	r25, Y+11	; 0x0b
    4782:	03 96       	adiw	r24, 0x03	; 3
    4784:	44 e1       	ldi	r20, 0x14	; 20
    4786:	50 e0       	ldi	r21, 0x00	; 0
    4788:	bc 01       	movw	r22, r24
    478a:	89 e1       	ldi	r24, 0x19	; 25
    478c:	97 e4       	ldi	r25, 0x47	; 71
    478e:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strncpy>
    4792:	60 e0       	ldi	r22, 0x00	; 0
    4794:	89 e1       	ldi	r24, 0x19	; 25
    4796:	97 e4       	ldi	r25, 0x47	; 71
    4798:	0e 94 96 42 	call	0x852c	; 0x852c <ds3231_set_date_time>
    479c:	80 e0       	ldi	r24, 0x00	; 0
    479e:	90 e0       	ldi	r25, 0x00	; 0
    47a0:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    47a4:	dc 01       	movw	r26, r24
    47a6:	cb 01       	movw	r24, r22
    47a8:	bc 01       	movw	r22, r24
    47aa:	cd 01       	movw	r24, r26
    47ac:	0e 94 7f 02 	call	0x4fe	; 0x4fe <set_system_time>
    47b0:	0b c4       	rjmp	.+2070   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    47b2:	80 e0       	ldi	r24, 0x00	; 0
    47b4:	90 e0       	ldi	r25, 0x00	; 0
    47b6:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    47ba:	dc 01       	movw	r26, r24
    47bc:	cb 01       	movw	r24, r22
    47be:	2b 2f       	mov	r18, r27
    47c0:	2f 93       	push	r18
    47c2:	2a 2f       	mov	r18, r26
    47c4:	2f 93       	push	r18
    47c6:	29 2f       	mov	r18, r25
    47c8:	2f 93       	push	r18
    47ca:	8f 93       	push	r24
    47cc:	81 e5       	ldi	r24, 0x51	; 81
    47ce:	90 e4       	ldi	r25, 0x40	; 64
    47d0:	89 2f       	mov	r24, r25
    47d2:	8f 93       	push	r24
    47d4:	81 e5       	ldi	r24, 0x51	; 81
    47d6:	90 e4       	ldi	r25, 0x40	; 64
    47d8:	8f 93       	push	r24
    47da:	89 e1       	ldi	r24, 0x19	; 25
    47dc:	97 e4       	ldi	r25, 0x47	; 71
    47de:	89 2f       	mov	r24, r25
    47e0:	8f 93       	push	r24
    47e2:	89 e1       	ldi	r24, 0x19	; 25
    47e4:	97 e4       	ldi	r25, 0x47	; 71
    47e6:	8f 93       	push	r24
    47e8:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    47ec:	8d b7       	in	r24, 0x3d	; 61
    47ee:	9e b7       	in	r25, 0x3e	; 62
    47f0:	08 96       	adiw	r24, 0x08	; 8
    47f2:	cd bf       	out	0x3d, r28	; 61
    47f4:	de bf       	out	0x3e, r29	; 62
    47f6:	49 e1       	ldi	r20, 0x19	; 25
    47f8:	57 e4       	ldi	r21, 0x47	; 71
    47fa:	65 e5       	ldi	r22, 0x55	; 85
    47fc:	70 e4       	ldi	r23, 0x40	; 64
    47fe:	83 e0       	ldi	r24, 0x03	; 3
    4800:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4804:	e1 c3       	rjmp	.+1986   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    4806:	8a 85       	ldd	r24, Y+10	; 0x0a
    4808:	9b 85       	ldd	r25, Y+11	; 0x0b
    480a:	fc 01       	movw	r30, r24
    480c:	80 81       	ld	r24, Z
    480e:	82 30       	cpi	r24, 0x02	; 2
    4810:	09 f0       	breq	.+2      	; 0x4814 <_Z17handleLinkBusMsgsv+0x6a4>
    4812:	da c3       	rjmp	.+1972   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    4814:	8a 85       	ldd	r24, Y+10	; 0x0a
    4816:	9b 85       	ldd	r25, Y+11	; 0x0b
    4818:	fc 01       	movw	r30, r24
    481a:	83 81       	ldd	r24, Z+3	; 0x03
    481c:	88 35       	cpi	r24, 0x58	; 88
    481e:	c9 f5       	brne	.+114    	; 0x4892 <_Z17handleLinkBusMsgsv+0x722>
    4820:	1b 8a       	std	Y+19, r1	; 0x13
    4822:	8a 85       	ldd	r24, Y+10	; 0x0a
    4824:	9b 85       	ldd	r25, Y+11	; 0x0b
    4826:	fc 01       	movw	r30, r24
    4828:	80 8d       	ldd	r24, Z+24	; 0x18
    482a:	88 23       	and	r24, r24
    482c:	51 f0       	breq	.+20     	; 0x4842 <_Z17handleLinkBusMsgsv+0x6d2>
    482e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4830:	9b 85       	ldd	r25, Y+11	; 0x0b
    4832:	48 96       	adiw	r24, 0x18	; 24
    4834:	0e 94 75 7b 	call	0xf6ea	; 0xf6ea <atoi>
    4838:	8b 8b       	std	Y+19, r24	; 0x13
    483a:	8b 89       	ldd	r24, Y+19	; 0x13
    483c:	0e 94 ee 43 	call	0x87dc	; 0x87dc <ds3231_set_aging>
    4840:	c3 c3       	rjmp	.+1926   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    4842:	0e 94 1d 44 	call	0x883a	; 0x883a <ds3231_get_aging>
    4846:	8b 8b       	std	Y+19, r24	; 0x13
    4848:	8b 89       	ldd	r24, Y+19	; 0x13
    484a:	08 2e       	mov	r0, r24
    484c:	00 0c       	add	r0, r0
    484e:	99 0b       	sbc	r25, r25
    4850:	29 2f       	mov	r18, r25
    4852:	2f 93       	push	r18
    4854:	8f 93       	push	r24
    4856:	88 ec       	ldi	r24, 0xC8	; 200
    4858:	92 e4       	ldi	r25, 0x42	; 66
    485a:	89 2f       	mov	r24, r25
    485c:	8f 93       	push	r24
    485e:	88 ec       	ldi	r24, 0xC8	; 200
    4860:	92 e4       	ldi	r25, 0x42	; 66
    4862:	8f 93       	push	r24
    4864:	89 e1       	ldi	r24, 0x19	; 25
    4866:	97 e4       	ldi	r25, 0x47	; 71
    4868:	89 2f       	mov	r24, r25
    486a:	8f 93       	push	r24
    486c:	89 e1       	ldi	r24, 0x19	; 25
    486e:	97 e4       	ldi	r25, 0x47	; 71
    4870:	8f 93       	push	r24
    4872:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    4876:	0f 90       	pop	r0
    4878:	0f 90       	pop	r0
    487a:	0f 90       	pop	r0
    487c:	0f 90       	pop	r0
    487e:	0f 90       	pop	r0
    4880:	0f 90       	pop	r0
    4882:	49 e1       	ldi	r20, 0x19	; 25
    4884:	57 e4       	ldi	r21, 0x47	; 71
    4886:	65 e5       	ldi	r22, 0x55	; 85
    4888:	70 e4       	ldi	r23, 0x40	; 64
    488a:	83 e0       	ldi	r24, 0x03	; 3
    488c:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4890:	9b c3       	rjmp	.+1846   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    4892:	80 e0       	ldi	r24, 0x00	; 0
    4894:	90 e0       	ldi	r25, 0x00	; 0
    4896:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    489a:	dc 01       	movw	r26, r24
    489c:	cb 01       	movw	r24, r22
    489e:	8c 8b       	std	Y+20, r24	; 0x14
    48a0:	9d 8b       	std	Y+21, r25	; 0x15
    48a2:	ae 8b       	std	Y+22, r26	; 0x16
    48a4:	bf 8b       	std	Y+23, r27	; 0x17
    48a6:	8c 89       	ldd	r24, Y+20	; 0x14
    48a8:	9d 89       	ldd	r25, Y+21	; 0x15
    48aa:	ae 89       	ldd	r26, Y+22	; 0x16
    48ac:	bf 89       	ldd	r27, Y+23	; 0x17
    48ae:	bc 01       	movw	r22, r24
    48b0:	cd 01       	movw	r24, r26
    48b2:	0e 94 7f 02 	call	0x4fe	; 0x4fe <set_system_time>
    48b6:	80 91 c9 47 	lds	r24, 0x47C9	; 0x8047c9 <_ZZ17handleLinkBusMsgsvE8lastTime>
    48ba:	90 91 ca 47 	lds	r25, 0x47CA	; 0x8047ca <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    48be:	a0 91 cb 47 	lds	r26, 0x47CB	; 0x8047cb <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    48c2:	b0 91 cc 47 	lds	r27, 0x47CC	; 0x8047cc <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    48c6:	2c 89       	ldd	r18, Y+20	; 0x14
    48c8:	3d 89       	ldd	r19, Y+21	; 0x15
    48ca:	4e 89       	ldd	r20, Y+22	; 0x16
    48cc:	5f 89       	ldd	r21, Y+23	; 0x17
    48ce:	28 17       	cp	r18, r24
    48d0:	39 07       	cpc	r19, r25
    48d2:	4a 07       	cpc	r20, r26
    48d4:	5b 07       	cpc	r21, r27
    48d6:	09 f4       	brne	.+2      	; 0x48da <_Z17handleLinkBusMsgsv+0x76a>
    48d8:	77 c3       	rjmp	.+1774   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    48da:	8f 89       	ldd	r24, Y+23	; 0x17
    48dc:	8f 93       	push	r24
    48de:	8e 89       	ldd	r24, Y+22	; 0x16
    48e0:	8f 93       	push	r24
    48e2:	8d 89       	ldd	r24, Y+21	; 0x15
    48e4:	8f 93       	push	r24
    48e6:	8c 89       	ldd	r24, Y+20	; 0x14
    48e8:	8f 93       	push	r24
    48ea:	81 e5       	ldi	r24, 0x51	; 81
    48ec:	90 e4       	ldi	r25, 0x40	; 64
    48ee:	89 2f       	mov	r24, r25
    48f0:	8f 93       	push	r24
    48f2:	81 e5       	ldi	r24, 0x51	; 81
    48f4:	90 e4       	ldi	r25, 0x40	; 64
    48f6:	8f 93       	push	r24
    48f8:	89 e1       	ldi	r24, 0x19	; 25
    48fa:	97 e4       	ldi	r25, 0x47	; 71
    48fc:	89 2f       	mov	r24, r25
    48fe:	8f 93       	push	r24
    4900:	89 e1       	ldi	r24, 0x19	; 25
    4902:	97 e4       	ldi	r25, 0x47	; 71
    4904:	8f 93       	push	r24
    4906:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    490a:	8d b7       	in	r24, 0x3d	; 61
    490c:	9e b7       	in	r25, 0x3e	; 62
    490e:	08 96       	adiw	r24, 0x08	; 8
    4910:	cd bf       	out	0x3d, r28	; 61
    4912:	de bf       	out	0x3e, r29	; 62
    4914:	49 e1       	ldi	r20, 0x19	; 25
    4916:	57 e4       	ldi	r21, 0x47	; 71
    4918:	65 e5       	ldi	r22, 0x55	; 85
    491a:	70 e4       	ldi	r23, 0x40	; 64
    491c:	83 e0       	ldi	r24, 0x03	; 3
    491e:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4922:	8c 89       	ldd	r24, Y+20	; 0x14
    4924:	9d 89       	ldd	r25, Y+21	; 0x15
    4926:	ae 89       	ldd	r26, Y+22	; 0x16
    4928:	bf 89       	ldd	r27, Y+23	; 0x17
    492a:	80 93 c9 47 	sts	0x47C9, r24	; 0x8047c9 <_ZZ17handleLinkBusMsgsvE8lastTime>
    492e:	90 93 ca 47 	sts	0x47CA, r25	; 0x8047ca <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    4932:	a0 93 cb 47 	sts	0x47CB, r26	; 0x8047cb <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    4936:	b0 93 cc 47 	sts	0x47CC, r27	; 0x8047cc <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    493a:	46 c3       	rjmp	.+1676   	; 0x4fc8 <_Z17handleLinkBusMsgsv+0xe58>
    493c:	8a 85       	ldd	r24, Y+10	; 0x0a
    493e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4940:	fc 01       	movw	r30, r24
    4942:	83 81       	ldd	r24, Z+3	; 0x03
    4944:	88 23       	and	r24, r24
    4946:	09 f4       	brne	.+2      	; 0x494a <_Z17handleLinkBusMsgsv+0x7da>
    4948:	43 c0       	rjmp	.+134    	; 0x49d0 <_Z17handleLinkBusMsgsv+0x860>
    494a:	8a 85       	ldd	r24, Y+10	; 0x0a
    494c:	9b 85       	ldd	r25, Y+11	; 0x0b
    494e:	03 96       	adiw	r24, 0x03	; 3
    4950:	bc 01       	movw	r22, r24
    4952:	83 e7       	ldi	r24, 0x73	; 115
    4954:	97 e4       	ldi	r25, 0x47	; 71
    4956:	0e 94 df 7b 	call	0xf7be	; 0xf7be <strcmp>
    495a:	89 2b       	or	r24, r25
    495c:	99 f1       	breq	.+102    	; 0x49c4 <_Z17handleLinkBusMsgsv+0x854>
    495e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4960:	9b 85       	ldd	r25, Y+11	; 0x0b
    4962:	03 96       	adiw	r24, 0x03	; 3
    4964:	44 e1       	ldi	r20, 0x14	; 20
    4966:	50 e0       	ldi	r21, 0x00	; 0
    4968:	bc 01       	movw	r22, r24
    496a:	83 e7       	ldi	r24, 0x73	; 115
    496c:	97 e4       	ldi	r25, 0x47	; 71
    496e:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strncpy>
    4972:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    4976:	88 23       	and	r24, r24
    4978:	01 f1       	breq	.+64     	; 0x49ba <_Z17handleLinkBusMsgsv+0x84a>
    497a:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    497e:	88 2f       	mov	r24, r24
    4980:	90 e0       	ldi	r25, 0x00	; 0
    4982:	bc 01       	movw	r22, r24
    4984:	83 e7       	ldi	r24, 0x73	; 115
    4986:	97 e4       	ldi	r25, 0x47	; 71
    4988:	0e 94 26 5c 	call	0xb84c	; 0xb84c <_Z26timeRequiredToSendStrAtWPMPcj>
    498c:	8c 50       	subi	r24, 0x0C	; 12
    498e:	9e 4f       	sbci	r25, 0xFE	; 254
    4990:	96 95       	lsr	r25
    4992:	87 95       	ror	r24
    4994:	96 95       	lsr	r25
    4996:	87 95       	ror	r24
    4998:	96 95       	lsr	r25
    499a:	87 95       	ror	r24
    499c:	9c 01       	movw	r18, r24
    499e:	a5 ec       	ldi	r26, 0xC5	; 197
    49a0:	b0 e2       	ldi	r27, 0x20	; 32
    49a2:	0e 94 36 7a 	call	0xf46c	; 0xf46c <__umulhisi3>
    49a6:	92 95       	swap	r25
    49a8:	82 95       	swap	r24
    49aa:	8f 70       	andi	r24, 0x0F	; 15
    49ac:	89 27       	eor	r24, r25
    49ae:	9f 70       	andi	r25, 0x0F	; 15
    49b0:	89 27       	eor	r24, r25
    49b2:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    49b6:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    49ba:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    49be:	8f 5f       	subi	r24, 0xFF	; 255
    49c0:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    49c4:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    49c8:	8f 5f       	subi	r24, 0xFF	; 255
    49ca:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    49ce:	fe c2       	rjmp	.+1532   	; 0x4fcc <_Z17handleLinkBusMsgsv+0xe5c>
    49d0:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    49d4:	88 23       	and	r24, r24
    49d6:	09 f4       	brne	.+2      	; 0x49da <_Z17handleLinkBusMsgsv+0x86a>
    49d8:	f9 c2       	rjmp	.+1522   	; 0x4fcc <_Z17handleLinkBusMsgsv+0xe5c>
    49da:	83 e7       	ldi	r24, 0x73	; 115
    49dc:	97 e4       	ldi	r25, 0x47	; 71
    49de:	89 2f       	mov	r24, r25
    49e0:	8f 93       	push	r24
    49e2:	83 e7       	ldi	r24, 0x73	; 115
    49e4:	97 e4       	ldi	r25, 0x47	; 71
    49e6:	8f 93       	push	r24
    49e8:	8d ec       	ldi	r24, 0xCD	; 205
    49ea:	92 e4       	ldi	r25, 0x42	; 66
    49ec:	89 2f       	mov	r24, r25
    49ee:	8f 93       	push	r24
    49f0:	8d ec       	ldi	r24, 0xCD	; 205
    49f2:	92 e4       	ldi	r25, 0x42	; 66
    49f4:	8f 93       	push	r24
    49f6:	89 e1       	ldi	r24, 0x19	; 25
    49f8:	97 e4       	ldi	r25, 0x47	; 71
    49fa:	89 2f       	mov	r24, r25
    49fc:	8f 93       	push	r24
    49fe:	89 e1       	ldi	r24, 0x19	; 25
    4a00:	97 e4       	ldi	r25, 0x47	; 71
    4a02:	8f 93       	push	r24
    4a04:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    4a08:	0f 90       	pop	r0
    4a0a:	0f 90       	pop	r0
    4a0c:	0f 90       	pop	r0
    4a0e:	0f 90       	pop	r0
    4a10:	0f 90       	pop	r0
    4a12:	0f 90       	pop	r0
    4a14:	89 e1       	ldi	r24, 0x19	; 25
    4a16:	97 e4       	ldi	r25, 0x47	; 71
    4a18:	0e 94 c0 59 	call	0xb380	; 0xb380 <_Z12lb_send_textPc>
    4a1c:	19 82       	std	Y+1, r1	; 0x01
    4a1e:	d6 c2       	rjmp	.+1452   	; 0x4fcc <_Z17handleLinkBusMsgsv+0xe5c>
    4a20:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4a24:	88 8f       	std	Y+24, r24	; 0x18
    4a26:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a28:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a2a:	fc 01       	movw	r30, r24
    4a2c:	83 81       	ldd	r24, Z+3	; 0x03
    4a2e:	89 34       	cpi	r24, 0x49	; 73
    4a30:	09 f0       	breq	.+2      	; 0x4a34 <_Z17handleLinkBusMsgsv+0x8c4>
    4a32:	76 c0       	rjmp	.+236    	; 0x4b20 <_Z17handleLinkBusMsgsv+0x9b0>
    4a34:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a36:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a38:	fc 01       	movw	r30, r24
    4a3a:	80 8d       	ldd	r24, Z+24	; 0x18
    4a3c:	88 23       	and	r24, r24
    4a3e:	09 f4       	brne	.+2      	; 0x4a42 <_Z17handleLinkBusMsgsv+0x8d2>
    4a40:	c7 c2       	rjmp	.+1422   	; 0x4fd0 <_Z17handleLinkBusMsgsv+0xe60>
    4a42:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a44:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a46:	48 96       	adiw	r24, 0x18	; 24
    4a48:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4a4c:	dc 01       	movw	r26, r24
    4a4e:	cb 01       	movw	r24, r22
    4a50:	89 8f       	std	Y+25, r24	; 0x19
    4a52:	9a 8f       	std	Y+26, r25	; 0x1a
    4a54:	ab 8f       	std	Y+27, r26	; 0x1b
    4a56:	bc 8f       	std	Y+28, r27	; 0x1c
    4a58:	85 e0       	ldi	r24, 0x05	; 5
    4a5a:	8d 8f       	std	Y+29, r24	; 0x1d
    4a5c:	84 e1       	ldi	r24, 0x14	; 20
    4a5e:	8e 8f       	std	Y+30, r24	; 0x1e
    4a60:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4a62:	28 2f       	mov	r18, r24
    4a64:	30 e0       	ldi	r19, 0x00	; 0
    4a66:	40 e0       	ldi	r20, 0x00	; 0
    4a68:	50 e0       	ldi	r21, 0x00	; 0
    4a6a:	89 8d       	ldd	r24, Y+25	; 0x19
    4a6c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    4a6e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    4a70:	bc 8d       	ldd	r27, Y+28	; 0x1c
    4a72:	28 17       	cp	r18, r24
    4a74:	39 07       	cpc	r19, r25
    4a76:	4a 07       	cpc	r20, r26
    4a78:	5b 07       	cpc	r21, r27
    4a7a:	34 f4       	brge	.+12     	; 0x4a88 <_Z17handleLinkBusMsgsv+0x918>
    4a7c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4a7e:	88 2f       	mov	r24, r24
    4a80:	90 e0       	ldi	r25, 0x00	; 0
    4a82:	a0 e0       	ldi	r26, 0x00	; 0
    4a84:	b0 e0       	ldi	r27, 0x00	; 0
    4a86:	10 c0       	rjmp	.+32     	; 0x4aa8 <_Z17handleLinkBusMsgsv+0x938>
    4a88:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4a8a:	88 2f       	mov	r24, r24
    4a8c:	90 e0       	ldi	r25, 0x00	; 0
    4a8e:	a0 e0       	ldi	r26, 0x00	; 0
    4a90:	b0 e0       	ldi	r27, 0x00	; 0
    4a92:	29 8d       	ldd	r18, Y+25	; 0x19
    4a94:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4a96:	4b 8d       	ldd	r20, Y+27	; 0x1b
    4a98:	5c 8d       	ldd	r21, Y+28	; 0x1c
    4a9a:	82 17       	cp	r24, r18
    4a9c:	93 07       	cpc	r25, r19
    4a9e:	a4 07       	cpc	r26, r20
    4aa0:	b5 07       	cpc	r27, r21
    4aa2:	14 f4       	brge	.+4      	; 0x4aa8 <_Z17handleLinkBusMsgsv+0x938>
    4aa4:	da 01       	movw	r26, r20
    4aa6:	c9 01       	movw	r24, r18
    4aa8:	88 8f       	std	Y+24, r24	; 0x18
    4aaa:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    4aae:	81 e0       	ldi	r24, 0x01	; 1
    4ab0:	28 8d       	ldd	r18, Y+24	; 0x18
    4ab2:	29 17       	cp	r18, r25
    4ab4:	09 f4       	brne	.+2      	; 0x4ab8 <_Z17handleLinkBusMsgsv+0x948>
    4ab6:	80 e0       	ldi	r24, 0x00	; 0
    4ab8:	88 23       	and	r24, r24
    4aba:	61 f1       	breq	.+88     	; 0x4b14 <_Z17handleLinkBusMsgsv+0x9a4>
    4abc:	88 8d       	ldd	r24, Y+24	; 0x18
    4abe:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    4ac2:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ac6:	8f 5f       	subi	r24, 0xFF	; 255
    4ac8:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4acc:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    4ad0:	88 23       	and	r24, r24
    4ad2:	01 f1       	breq	.+64     	; 0x4b14 <_Z17handleLinkBusMsgsv+0x9a4>
    4ad4:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4ad8:	88 2f       	mov	r24, r24
    4ada:	90 e0       	ldi	r25, 0x00	; 0
    4adc:	bc 01       	movw	r22, r24
    4ade:	83 e7       	ldi	r24, 0x73	; 115
    4ae0:	97 e4       	ldi	r25, 0x47	; 71
    4ae2:	0e 94 26 5c 	call	0xb84c	; 0xb84c <_Z26timeRequiredToSendStrAtWPMPcj>
    4ae6:	8c 50       	subi	r24, 0x0C	; 12
    4ae8:	9e 4f       	sbci	r25, 0xFE	; 254
    4aea:	96 95       	lsr	r25
    4aec:	87 95       	ror	r24
    4aee:	96 95       	lsr	r25
    4af0:	87 95       	ror	r24
    4af2:	96 95       	lsr	r25
    4af4:	87 95       	ror	r24
    4af6:	9c 01       	movw	r18, r24
    4af8:	a5 ec       	ldi	r26, 0xC5	; 197
    4afa:	b0 e2       	ldi	r27, 0x20	; 32
    4afc:	0e 94 36 7a 	call	0xf46c	; 0xf46c <__umulhisi3>
    4b00:	92 95       	swap	r25
    4b02:	82 95       	swap	r24
    4b04:	8f 70       	andi	r24, 0x0F	; 15
    4b06:	89 27       	eor	r24, r25
    4b08:	9f 70       	andi	r25, 0x0F	; 15
    4b0a:	89 27       	eor	r24, r25
    4b0c:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    4b10:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    4b14:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4b18:	8f 5f       	subi	r24, 0xFF	; 255
    4b1a:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4b1e:	58 c2       	rjmp	.+1200   	; 0x4fd0 <_Z17handleLinkBusMsgsv+0xe60>
    4b20:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b22:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b24:	fc 01       	movw	r30, r24
    4b26:	83 81       	ldd	r24, Z+3	; 0x03
    4b28:	80 35       	cpi	r24, 0x50	; 80
    4b2a:	09 f0       	breq	.+2      	; 0x4b2e <_Z17handleLinkBusMsgsv+0x9be>
    4b2c:	51 c2       	rjmp	.+1186   	; 0x4fd0 <_Z17handleLinkBusMsgsv+0xe60>
    4b2e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b30:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b32:	fc 01       	movw	r30, r24
    4b34:	80 8d       	ldd	r24, Z+24	; 0x18
    4b36:	88 23       	and	r24, r24
    4b38:	09 f4       	brne	.+2      	; 0x4b3c <_Z17handleLinkBusMsgsv+0x9cc>
    4b3a:	4a c2       	rjmp	.+1172   	; 0x4fd0 <_Z17handleLinkBusMsgsv+0xe60>
    4b3c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4b3e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4b40:	48 96       	adiw	r24, 0x18	; 24
    4b42:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4b46:	dc 01       	movw	r26, r24
    4b48:	cb 01       	movw	r24, r22
    4b4a:	8f 8f       	std	Y+31, r24	; 0x1f
    4b4c:	98 a3       	std	Y+32, r25	; 0x20
    4b4e:	a9 a3       	std	Y+33, r26	; 0x21
    4b50:	ba a3       	std	Y+34, r27	; 0x22
    4b52:	85 e0       	ldi	r24, 0x05	; 5
    4b54:	8b a3       	std	Y+35, r24	; 0x23
    4b56:	84 e1       	ldi	r24, 0x14	; 20
    4b58:	8c a3       	std	Y+36, r24	; 0x24
    4b5a:	8c a1       	ldd	r24, Y+36	; 0x24
    4b5c:	28 2f       	mov	r18, r24
    4b5e:	30 e0       	ldi	r19, 0x00	; 0
    4b60:	40 e0       	ldi	r20, 0x00	; 0
    4b62:	50 e0       	ldi	r21, 0x00	; 0
    4b64:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4b66:	98 a1       	ldd	r25, Y+32	; 0x20
    4b68:	a9 a1       	ldd	r26, Y+33	; 0x21
    4b6a:	ba a1       	ldd	r27, Y+34	; 0x22
    4b6c:	28 17       	cp	r18, r24
    4b6e:	39 07       	cpc	r19, r25
    4b70:	4a 07       	cpc	r20, r26
    4b72:	5b 07       	cpc	r21, r27
    4b74:	34 f4       	brge	.+12     	; 0x4b82 <_Z17handleLinkBusMsgsv+0xa12>
    4b76:	8c a1       	ldd	r24, Y+36	; 0x24
    4b78:	88 2f       	mov	r24, r24
    4b7a:	90 e0       	ldi	r25, 0x00	; 0
    4b7c:	a0 e0       	ldi	r26, 0x00	; 0
    4b7e:	b0 e0       	ldi	r27, 0x00	; 0
    4b80:	10 c0       	rjmp	.+32     	; 0x4ba2 <_Z17handleLinkBusMsgsv+0xa32>
    4b82:	8b a1       	ldd	r24, Y+35	; 0x23
    4b84:	88 2f       	mov	r24, r24
    4b86:	90 e0       	ldi	r25, 0x00	; 0
    4b88:	a0 e0       	ldi	r26, 0x00	; 0
    4b8a:	b0 e0       	ldi	r27, 0x00	; 0
    4b8c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4b8e:	38 a1       	ldd	r19, Y+32	; 0x20
    4b90:	49 a1       	ldd	r20, Y+33	; 0x21
    4b92:	5a a1       	ldd	r21, Y+34	; 0x22
    4b94:	82 17       	cp	r24, r18
    4b96:	93 07       	cpc	r25, r19
    4b98:	a4 07       	cpc	r26, r20
    4b9a:	b5 07       	cpc	r27, r21
    4b9c:	14 f4       	brge	.+4      	; 0x4ba2 <_Z17handleLinkBusMsgsv+0xa32>
    4b9e:	da 01       	movw	r26, r20
    4ba0:	c9 01       	movw	r24, r18
    4ba2:	88 8f       	std	Y+24, r24	; 0x18
    4ba4:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    4ba8:	81 e0       	ldi	r24, 0x01	; 1
    4baa:	28 8d       	ldd	r18, Y+24	; 0x18
    4bac:	29 17       	cp	r18, r25
    4bae:	09 f4       	brne	.+2      	; 0x4bb2 <_Z17handleLinkBusMsgsv+0xa42>
    4bb0:	80 e0       	ldi	r24, 0x00	; 0
    4bb2:	88 23       	and	r24, r24
    4bb4:	81 f0       	breq	.+32     	; 0x4bd6 <_Z17handleLinkBusMsgsv+0xa66>
    4bb6:	88 8d       	ldd	r24, Y+24	; 0x18
    4bb8:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    4bbc:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4bc0:	8f 5f       	subi	r24, 0xFF	; 255
    4bc2:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4bc6:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4bca:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    4bce:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4bd2:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4bd6:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4bda:	8f 5f       	subi	r24, 0xFF	; 255
    4bdc:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4be0:	f7 c1       	rjmp	.+1006   	; 0x4fd0 <_Z17handleLinkBusMsgsv+0xe60>
    4be2:	1d a2       	std	Y+37, r1	; 0x25
    4be4:	1e a2       	std	Y+38, r1	; 0x26
    4be6:	8a 85       	ldd	r24, Y+10	; 0x0a
    4be8:	9b 85       	ldd	r25, Y+11	; 0x0b
    4bea:	fc 01       	movw	r30, r24
    4bec:	83 81       	ldd	r24, Z+3	; 0x03
    4bee:	80 33       	cpi	r24, 0x30	; 48
    4bf0:	71 f5       	brne	.+92     	; 0x4c4e <_Z17handleLinkBusMsgsv+0xade>
    4bf2:	8a 85       	ldd	r24, Y+10	; 0x0a
    4bf4:	9b 85       	ldd	r25, Y+11	; 0x0b
    4bf6:	fc 01       	movw	r30, r24
    4bf8:	80 8d       	ldd	r24, Z+24	; 0x18
    4bfa:	88 23       	and	r24, r24
    4bfc:	09 f4       	brne	.+2      	; 0x4c00 <_Z17handleLinkBusMsgsv+0xa90>
    4bfe:	ea c1       	rjmp	.+980    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4c00:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c02:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c04:	48 96       	adiw	r24, 0x18	; 24
    4c06:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4c0a:	dc 01       	movw	r26, r24
    4c0c:	cb 01       	movw	r24, r22
    4c0e:	8d a3       	std	Y+37, r24	; 0x25
    4c10:	9e a3       	std	Y+38, r25	; 0x26
    4c12:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    4c16:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    4c1a:	41 e0       	ldi	r20, 0x01	; 1
    4c1c:	2d a1       	ldd	r18, Y+37	; 0x25
    4c1e:	3e a1       	ldd	r19, Y+38	; 0x26
    4c20:	28 17       	cp	r18, r24
    4c22:	39 07       	cpc	r19, r25
    4c24:	09 f4       	brne	.+2      	; 0x4c28 <_Z17handleLinkBusMsgsv+0xab8>
    4c26:	40 e0       	ldi	r20, 0x00	; 0
    4c28:	44 23       	and	r20, r20
    4c2a:	59 f0       	breq	.+22     	; 0x4c42 <_Z17handleLinkBusMsgsv+0xad2>
    4c2c:	8d a1       	ldd	r24, Y+37	; 0x25
    4c2e:	9e a1       	ldd	r25, Y+38	; 0x26
    4c30:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4c34:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4c38:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c3c:	8f 5f       	subi	r24, 0xFF	; 255
    4c3e:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4c42:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4c46:	8f 5f       	subi	r24, 0xFF	; 255
    4c48:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4c4c:	c3 c1       	rjmp	.+902    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4c4e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c50:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c52:	fc 01       	movw	r30, r24
    4c54:	83 81       	ldd	r24, Z+3	; 0x03
    4c56:	81 33       	cpi	r24, 0x31	; 49
    4c58:	71 f5       	brne	.+92     	; 0x4cb6 <_Z17handleLinkBusMsgsv+0xb46>
    4c5a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c5c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c5e:	fc 01       	movw	r30, r24
    4c60:	80 8d       	ldd	r24, Z+24	; 0x18
    4c62:	88 23       	and	r24, r24
    4c64:	09 f4       	brne	.+2      	; 0x4c68 <_Z17handleLinkBusMsgsv+0xaf8>
    4c66:	b6 c1       	rjmp	.+876    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4c68:	8a 85       	ldd	r24, Y+10	; 0x0a
    4c6a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4c6c:	48 96       	adiw	r24, 0x18	; 24
    4c6e:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4c72:	dc 01       	movw	r26, r24
    4c74:	cb 01       	movw	r24, r22
    4c76:	8d a3       	std	Y+37, r24	; 0x25
    4c78:	9e a3       	std	Y+38, r25	; 0x26
    4c7a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    4c7e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    4c82:	41 e0       	ldi	r20, 0x01	; 1
    4c84:	2d a1       	ldd	r18, Y+37	; 0x25
    4c86:	3e a1       	ldd	r19, Y+38	; 0x26
    4c88:	28 17       	cp	r18, r24
    4c8a:	39 07       	cpc	r19, r25
    4c8c:	09 f4       	brne	.+2      	; 0x4c90 <_Z17handleLinkBusMsgsv+0xb20>
    4c8e:	40 e0       	ldi	r20, 0x00	; 0
    4c90:	44 23       	and	r20, r20
    4c92:	59 f0       	breq	.+22     	; 0x4caa <_Z17handleLinkBusMsgsv+0xb3a>
    4c94:	8d a1       	ldd	r24, Y+37	; 0x25
    4c96:	9e a1       	ldd	r25, Y+38	; 0x26
    4c98:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    4c9c:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    4ca0:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4ca4:	8f 5f       	subi	r24, 0xFF	; 255
    4ca6:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4caa:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4cae:	8f 5f       	subi	r24, 0xFF	; 255
    4cb0:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4cb4:	8f c1       	rjmp	.+798    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4cb6:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cb8:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cba:	fc 01       	movw	r30, r24
    4cbc:	83 81       	ldd	r24, Z+3	; 0x03
    4cbe:	89 34       	cpi	r24, 0x49	; 73
    4cc0:	71 f5       	brne	.+92     	; 0x4d1e <_Z17handleLinkBusMsgsv+0xbae>
    4cc2:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cc4:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cc6:	fc 01       	movw	r30, r24
    4cc8:	80 8d       	ldd	r24, Z+24	; 0x18
    4cca:	88 23       	and	r24, r24
    4ccc:	09 f4       	brne	.+2      	; 0x4cd0 <_Z17handleLinkBusMsgsv+0xb60>
    4cce:	82 c1       	rjmp	.+772    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4cd0:	8a 85       	ldd	r24, Y+10	; 0x0a
    4cd2:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cd4:	48 96       	adiw	r24, 0x18	; 24
    4cd6:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4cda:	dc 01       	movw	r26, r24
    4cdc:	cb 01       	movw	r24, r22
    4cde:	8d a3       	std	Y+37, r24	; 0x25
    4ce0:	9e a3       	std	Y+38, r25	; 0x26
    4ce2:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    4ce6:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    4cea:	41 e0       	ldi	r20, 0x01	; 1
    4cec:	2d a1       	ldd	r18, Y+37	; 0x25
    4cee:	3e a1       	ldd	r19, Y+38	; 0x26
    4cf0:	28 17       	cp	r18, r24
    4cf2:	39 07       	cpc	r19, r25
    4cf4:	09 f4       	brne	.+2      	; 0x4cf8 <_Z17handleLinkBusMsgsv+0xb88>
    4cf6:	40 e0       	ldi	r20, 0x00	; 0
    4cf8:	44 23       	and	r20, r20
    4cfa:	59 f0       	breq	.+22     	; 0x4d12 <_Z17handleLinkBusMsgsv+0xba2>
    4cfc:	8d a1       	ldd	r24, Y+37	; 0x25
    4cfe:	9e a1       	ldd	r25, Y+38	; 0x26
    4d00:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    4d04:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    4d08:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d0c:	8f 5f       	subi	r24, 0xFF	; 255
    4d0e:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d12:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d16:	8f 5f       	subi	r24, 0xFF	; 255
    4d18:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d1c:	5b c1       	rjmp	.+694    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4d1e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d20:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d22:	fc 01       	movw	r30, r24
    4d24:	83 81       	ldd	r24, Z+3	; 0x03
    4d26:	84 34       	cpi	r24, 0x44	; 68
    4d28:	09 f0       	breq	.+2      	; 0x4d2c <_Z17handleLinkBusMsgsv+0xbbc>
    4d2a:	54 c1       	rjmp	.+680    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4d2c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d2e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d30:	fc 01       	movw	r30, r24
    4d32:	80 8d       	ldd	r24, Z+24	; 0x18
    4d34:	88 23       	and	r24, r24
    4d36:	09 f4       	brne	.+2      	; 0x4d3a <_Z17handleLinkBusMsgsv+0xbca>
    4d38:	4d c1       	rjmp	.+666    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4d3a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d3c:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d3e:	48 96       	adiw	r24, 0x18	; 24
    4d40:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4d44:	dc 01       	movw	r26, r24
    4d46:	cb 01       	movw	r24, r22
    4d48:	8d a3       	std	Y+37, r24	; 0x25
    4d4a:	9e a3       	std	Y+38, r25	; 0x26
    4d4c:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    4d50:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    4d54:	41 e0       	ldi	r20, 0x01	; 1
    4d56:	2d a1       	ldd	r18, Y+37	; 0x25
    4d58:	3e a1       	ldd	r19, Y+38	; 0x26
    4d5a:	28 17       	cp	r18, r24
    4d5c:	39 07       	cpc	r19, r25
    4d5e:	09 f4       	brne	.+2      	; 0x4d62 <_Z17handleLinkBusMsgsv+0xbf2>
    4d60:	40 e0       	ldi	r20, 0x00	; 0
    4d62:	44 23       	and	r20, r20
    4d64:	59 f0       	breq	.+22     	; 0x4d7c <_Z17handleLinkBusMsgsv+0xc0c>
    4d66:	8d a1       	ldd	r24, Y+37	; 0x25
    4d68:	9e a1       	ldd	r25, Y+38	; 0x26
    4d6a:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    4d6e:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
    4d72:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d76:	8f 5f       	subi	r24, 0xFF	; 255
    4d78:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4d7c:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d80:	8f 5f       	subi	r24, 0xFF	; 255
    4d82:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4d86:	26 c1       	rjmp	.+588    	; 0x4fd4 <_Z17handleLinkBusMsgsv+0xe64>
    4d88:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d8a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d8c:	fc 01       	movw	r30, r24
    4d8e:	83 81       	ldd	r24, Z+3	; 0x03
    4d90:	88 23       	and	r24, r24
    4d92:	09 f4       	brne	.+2      	; 0x4d96 <_Z17handleLinkBusMsgsv+0xc26>
    4d94:	21 c1       	rjmp	.+578    	; 0x4fd8 <_Z17handleLinkBusMsgsv+0xe68>
    4d96:	8a 85       	ldd	r24, Y+10	; 0x0a
    4d98:	9b 85       	ldd	r25, Y+11	; 0x0b
    4d9a:	03 96       	adiw	r24, 0x03	; 3
    4d9c:	bc 01       	movw	r22, r24
    4d9e:	8e e5       	ldi	r24, 0x5E	; 94
    4da0:	97 e4       	ldi	r25, 0x47	; 71
    4da2:	0e 94 df 7b 	call	0xf7be	; 0xf7be <strcmp>
    4da6:	89 2b       	or	r24, r25
    4da8:	79 f0       	breq	.+30     	; 0x4dc8 <_Z17handleLinkBusMsgsv+0xc58>
    4daa:	8a 85       	ldd	r24, Y+10	; 0x0a
    4dac:	9b 85       	ldd	r25, Y+11	; 0x0b
    4dae:	03 96       	adiw	r24, 0x03	; 3
    4db0:	44 e1       	ldi	r20, 0x14	; 20
    4db2:	50 e0       	ldi	r21, 0x00	; 0
    4db4:	bc 01       	movw	r22, r24
    4db6:	8e e5       	ldi	r24, 0x5E	; 94
    4db8:	97 e4       	ldi	r25, 0x47	; 71
    4dba:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strncpy>
    4dbe:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4dc2:	8f 5f       	subi	r24, 0xFF	; 255
    4dc4:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4dc8:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4dcc:	8f 5f       	subi	r24, 0xFF	; 255
    4dce:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4dd2:	02 c1       	rjmp	.+516    	; 0x4fd8 <_Z17handleLinkBusMsgsv+0xe68>
    4dd4:	1e 82       	std	Y+6, r1	; 0x06
    4dd6:	1f 82       	std	Y+7, r1	; 0x07
    4dd8:	18 86       	std	Y+8, r1	; 0x08
    4dda:	19 86       	std	Y+9, r1	; 0x09
    4ddc:	8a 85       	ldd	r24, Y+10	; 0x0a
    4dde:	9b 85       	ldd	r25, Y+11	; 0x0b
    4de0:	fc 01       	movw	r30, r24
    4de2:	83 81       	ldd	r24, Z+3	; 0x03
    4de4:	88 23       	and	r24, r24
    4de6:	c9 f1       	breq	.+114    	; 0x4e5a <_Z17handleLinkBusMsgsv+0xcea>
    4de8:	8a 85       	ldd	r24, Y+10	; 0x0a
    4dea:	9b 85       	ldd	r25, Y+11	; 0x0b
    4dec:	03 96       	adiw	r24, 0x03	; 3
    4dee:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    4df2:	dc 01       	movw	r26, r24
    4df4:	cb 01       	movw	r24, r22
    4df6:	89 ab       	std	Y+49, r24	; 0x31
    4df8:	9a ab       	std	Y+50, r25	; 0x32
    4dfa:	ab ab       	std	Y+51, r26	; 0x33
    4dfc:	bc ab       	std	Y+52, r27	; 0x34
    4dfe:	0e 94 64 6f 	call	0xdec8	; 0xdec8 <_Z14txGetFrequencyv>
    4e02:	9b 01       	movw	r18, r22
    4e04:	ac 01       	movw	r20, r24
    4e06:	89 a9       	ldd	r24, Y+49	; 0x31
    4e08:	9a a9       	ldd	r25, Y+50	; 0x32
    4e0a:	ab a9       	ldd	r26, Y+51	; 0x33
    4e0c:	bc a9       	ldd	r27, Y+52	; 0x34
    4e0e:	61 e0       	ldi	r22, 0x01	; 1
    4e10:	28 17       	cp	r18, r24
    4e12:	39 07       	cpc	r19, r25
    4e14:	4a 07       	cpc	r20, r26
    4e16:	5b 07       	cpc	r21, r27
    4e18:	09 f4       	brne	.+2      	; 0x4e1c <_Z17handleLinkBusMsgsv+0xcac>
    4e1a:	60 e0       	ldi	r22, 0x00	; 0
    4e1c:	66 23       	and	r22, r22
    4e1e:	b9 f0       	breq	.+46     	; 0x4e4e <_Z17handleLinkBusMsgsv+0xcde>
    4e20:	ce 01       	movw	r24, r28
    4e22:	c1 96       	adiw	r24, 0x31	; 49
    4e24:	61 e0       	ldi	r22, 0x01	; 1
    4e26:	0e 94 12 6f 	call	0xde24	; 0xde24 <_Z14txSetFrequencyPmb>
    4e2a:	98 2f       	mov	r25, r24
    4e2c:	81 e0       	ldi	r24, 0x01	; 1
    4e2e:	89 27       	eor	r24, r25
    4e30:	88 23       	and	r24, r24
    4e32:	69 f0       	breq	.+26     	; 0x4e4e <_Z17handleLinkBusMsgsv+0xcde>
    4e34:	89 a9       	ldd	r24, Y+49	; 0x31
    4e36:	9a a9       	ldd	r25, Y+50	; 0x32
    4e38:	ab a9       	ldd	r26, Y+51	; 0x33
    4e3a:	bc a9       	ldd	r27, Y+52	; 0x34
    4e3c:	8e 83       	std	Y+6, r24	; 0x06
    4e3e:	9f 83       	std	Y+7, r25	; 0x07
    4e40:	a8 87       	std	Y+8, r26	; 0x08
    4e42:	b9 87       	std	Y+9, r27	; 0x09
    4e44:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e48:	8f 5f       	subi	r24, 0xFF	; 255
    4e4a:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZZ17handleLinkBusMsgsvE25new_event_parameter_count>
    4e4e:	80 91 c8 47 	lds	r24, 0x47C8	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4e52:	8f 5f       	subi	r24, 0xFF	; 255
    4e54:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_ZZ17handleLinkBusMsgsvE35event_parameter_commands_rcvd_count>
    4e58:	08 c0       	rjmp	.+16     	; 0x4e6a <_Z17handleLinkBusMsgsv+0xcfa>
    4e5a:	0e 94 64 6f 	call	0xdec8	; 0xdec8 <_Z14txGetFrequencyv>
    4e5e:	dc 01       	movw	r26, r24
    4e60:	cb 01       	movw	r24, r22
    4e62:	8e 83       	std	Y+6, r24	; 0x06
    4e64:	9f 83       	std	Y+7, r25	; 0x07
    4e66:	a8 87       	std	Y+8, r26	; 0x08
    4e68:	b9 87       	std	Y+9, r27	; 0x09
    4e6a:	8e 81       	ldd	r24, Y+6	; 0x06
    4e6c:	9f 81       	ldd	r25, Y+7	; 0x07
    4e6e:	a8 85       	ldd	r26, Y+8	; 0x08
    4e70:	b9 85       	ldd	r27, Y+9	; 0x09
    4e72:	89 2b       	or	r24, r25
    4e74:	8a 2b       	or	r24, r26
    4e76:	8b 2b       	or	r24, r27
    4e78:	09 f4       	brne	.+2      	; 0x4e7c <_Z17handleLinkBusMsgsv+0xd0c>
    4e7a:	b0 c0       	rjmp	.+352    	; 0x4fdc <_Z17handleLinkBusMsgsv+0xe6c>
    4e7c:	89 85       	ldd	r24, Y+9	; 0x09
    4e7e:	8f 93       	push	r24
    4e80:	88 85       	ldd	r24, Y+8	; 0x08
    4e82:	8f 93       	push	r24
    4e84:	8f 81       	ldd	r24, Y+7	; 0x07
    4e86:	8f 93       	push	r24
    4e88:	8e 81       	ldd	r24, Y+6	; 0x06
    4e8a:	8f 93       	push	r24
    4e8c:	86 ed       	ldi	r24, 0xD6	; 214
    4e8e:	92 e4       	ldi	r25, 0x42	; 66
    4e90:	89 2f       	mov	r24, r25
    4e92:	8f 93       	push	r24
    4e94:	86 ed       	ldi	r24, 0xD6	; 214
    4e96:	92 e4       	ldi	r25, 0x42	; 66
    4e98:	8f 93       	push	r24
    4e9a:	89 e1       	ldi	r24, 0x19	; 25
    4e9c:	97 e4       	ldi	r25, 0x47	; 71
    4e9e:	89 2f       	mov	r24, r25
    4ea0:	8f 93       	push	r24
    4ea2:	89 e1       	ldi	r24, 0x19	; 25
    4ea4:	97 e4       	ldi	r25, 0x47	; 71
    4ea6:	8f 93       	push	r24
    4ea8:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    4eac:	8d b7       	in	r24, 0x3d	; 61
    4eae:	9e b7       	in	r25, 0x3e	; 62
    4eb0:	08 96       	adiw	r24, 0x08	; 8
    4eb2:	cd bf       	out	0x3d, r28	; 61
    4eb4:	de bf       	out	0x3e, r29	; 62
    4eb6:	49 e1       	ldi	r20, 0x19	; 25
    4eb8:	57 e4       	ldi	r21, 0x47	; 71
    4eba:	6b ed       	ldi	r22, 0xDB	; 219
    4ebc:	72 e4       	ldi	r23, 0x42	; 66
    4ebe:	83 e0       	ldi	r24, 0x03	; 3
    4ec0:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4ec4:	8b c0       	rjmp	.+278    	; 0x4fdc <_Z17handleLinkBusMsgsv+0xe6c>
    4ec6:	80 91 a1 47 	lds	r24, 0x47A1	; 0x8047a1 <_ZL22g_lastConversionResult>
    4eca:	90 91 a2 47 	lds	r25, 0x47A2	; 0x8047a2 <_ZL22g_lastConversionResult+0x1>
    4ece:	cc 01       	movw	r24, r24
    4ed0:	a0 e0       	ldi	r26, 0x00	; 0
    4ed2:	b0 e0       	ldi	r27, 0x00	; 0
    4ed4:	bc 01       	movw	r22, r24
    4ed6:	cd 01       	movw	r24, r26
    4ed8:	0e 94 4f 78 	call	0xf09e	; 0xf09e <__floatunsisf>
    4edc:	dc 01       	movw	r26, r24
    4ede:	cb 01       	movw	r24, r22
    4ee0:	8f a3       	std	Y+39, r24	; 0x27
    4ee2:	98 a7       	std	Y+40, r25	; 0x28
    4ee4:	a9 a7       	std	Y+41, r26	; 0x29
    4ee6:	ba a7       	std	Y+42, r27	; 0x2a
    4ee8:	20 e0       	ldi	r18, 0x00	; 0
    4eea:	30 e0       	ldi	r19, 0x00	; 0
    4eec:	4c e2       	ldi	r20, 0x2C	; 44
    4eee:	53 e4       	ldi	r21, 0x43	; 67
    4ef0:	6f a1       	ldd	r22, Y+39	; 0x27
    4ef2:	78 a5       	ldd	r23, Y+40	; 0x28
    4ef4:	89 a5       	ldd	r24, Y+41	; 0x29
    4ef6:	9a a5       	ldd	r25, Y+42	; 0x2a
    4ef8:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    4efc:	dc 01       	movw	r26, r24
    4efe:	cb 01       	movw	r24, r22
    4f00:	8f a3       	std	Y+39, r24	; 0x27
    4f02:	98 a7       	std	Y+40, r25	; 0x28
    4f04:	a9 a7       	std	Y+41, r26	; 0x29
    4f06:	ba a7       	std	Y+42, r27	; 0x2a
    4f08:	2f e6       	ldi	r18, 0x6F	; 111
    4f0a:	32 e1       	ldi	r19, 0x12	; 18
    4f0c:	43 e0       	ldi	r20, 0x03	; 3
    4f0e:	5a e3       	ldi	r21, 0x3A	; 58
    4f10:	6f a1       	ldd	r22, Y+39	; 0x27
    4f12:	78 a5       	ldd	r23, Y+40	; 0x28
    4f14:	89 a5       	ldd	r24, Y+41	; 0x29
    4f16:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f18:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    4f1c:	dc 01       	movw	r26, r24
    4f1e:	cb 01       	movw	r24, r22
    4f20:	8f a3       	std	Y+39, r24	; 0x27
    4f22:	98 a7       	std	Y+40, r25	; 0x28
    4f24:	a9 a7       	std	Y+41, r26	; 0x29
    4f26:	ba a7       	std	Y+42, r27	; 0x2a
    4f28:	20 e0       	ldi	r18, 0x00	; 0
    4f2a:	30 e0       	ldi	r19, 0x00	; 0
    4f2c:	40 e8       	ldi	r20, 0x80	; 128
    4f2e:	5f e3       	ldi	r21, 0x3F	; 63
    4f30:	6f a1       	ldd	r22, Y+39	; 0x27
    4f32:	78 a5       	ldd	r23, Y+40	; 0x28
    4f34:	89 a5       	ldd	r24, Y+41	; 0x29
    4f36:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f38:	0e 94 1f 77 	call	0xee3e	; 0xee3e <__addsf3>
    4f3c:	dc 01       	movw	r26, r24
    4f3e:	cb 01       	movw	r24, r22
    4f40:	8f a3       	std	Y+39, r24	; 0x27
    4f42:	98 a7       	std	Y+40, r25	; 0x28
    4f44:	a9 a7       	std	Y+41, r26	; 0x29
    4f46:	ba a7       	std	Y+42, r27	; 0x2a
    4f48:	6f a1       	ldd	r22, Y+39	; 0x27
    4f4a:	78 a5       	ldd	r23, Y+40	; 0x28
    4f4c:	89 a5       	ldd	r24, Y+41	; 0x29
    4f4e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f50:	0e 94 20 78 	call	0xf040	; 0xf040 <__fixunssfsi>
    4f54:	dc 01       	movw	r26, r24
    4f56:	cb 01       	movw	r24, r22
    4f58:	8b a7       	std	Y+43, r24	; 0x2b
    4f5a:	9c a7       	std	Y+44, r25	; 0x2c
    4f5c:	8b a5       	ldd	r24, Y+43	; 0x2b
    4f5e:	9c a5       	ldd	r25, Y+44	; 0x2c
    4f60:	6f ed       	ldi	r22, 0xDF	; 223
    4f62:	72 e4       	ldi	r23, 0x42	; 66
    4f64:	0e 94 6c 5a 	call	0xb4d8	; 0xb4d8 <_Z16lb_broadcast_numjPKc>
    4f68:	80 e0       	ldi	r24, 0x00	; 0
    4f6a:	90 e0       	ldi	r25, 0x00	; 0
    4f6c:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    4f70:	dc 01       	movw	r26, r24
    4f72:	cb 01       	movw	r24, r22
    4f74:	bc 01       	movw	r22, r24
    4f76:	cd 01       	movw	r24, r26
    4f78:	0e 94 7f 02 	call	0x4fe	; 0x4fe <set_system_time>
    4f7c:	30 c0       	rjmp	.+96     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4f7e:	0e 94 ff 34 	call	0x69fe	; 0x69fe <_Z12temperatureCv>
    4f82:	8d a7       	std	Y+45, r24	; 0x2d
    4f84:	9e a7       	std	Y+46, r25	; 0x2e
    4f86:	8d a5       	ldd	r24, Y+45	; 0x2d
    4f88:	9e a5       	ldd	r25, Y+46	; 0x2e
    4f8a:	64 ee       	ldi	r22, 0xE4	; 228
    4f8c:	72 e4       	ldi	r23, 0x42	; 66
    4f8e:	0e 94 6c 5a 	call	0xb4d8	; 0xb4d8 <_Z16lb_broadcast_numjPKc>
    4f92:	25 c0       	rjmp	.+74     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4f94:	49 ee       	ldi	r20, 0xE9	; 233
    4f96:	52 e4       	ldi	r21, 0x42	; 66
    4f98:	6d ee       	ldi	r22, 0xED	; 237
    4f9a:	72 e4       	ldi	r23, 0x42	; 66
    4f9c:	83 e0       	ldi	r24, 0x03	; 3
    4f9e:	0e 94 1d 5a 	call	0xb43a	; 0xb43a <_Z11lb_send_msg13LBMessageTypePKcPc>
    4fa2:	1d c0       	rjmp	.+58     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fa4:	19 82       	std	Y+1, r1	; 0x01
    4fa6:	81 ef       	ldi	r24, 0xF1	; 241
    4fa8:	92 e4       	ldi	r25, 0x42	; 66
    4faa:	0e 94 c0 59 	call	0xb380	; 0xb380 <_Z12lb_send_textPc>
    4fae:	17 c0       	rjmp	.+46     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fb0:	00 00       	nop
    4fb2:	15 c0       	rjmp	.+42     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fb4:	00 00       	nop
    4fb6:	13 c0       	rjmp	.+38     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fb8:	00 00       	nop
    4fba:	11 c0       	rjmp	.+34     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fbc:	00 00       	nop
    4fbe:	0f c0       	rjmp	.+30     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fc0:	00 00       	nop
    4fc2:	0d c0       	rjmp	.+26     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fc4:	00 00       	nop
    4fc6:	0b c0       	rjmp	.+22     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fc8:	00 00       	nop
    4fca:	09 c0       	rjmp	.+18     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fcc:	00 00       	nop
    4fce:	07 c0       	rjmp	.+14     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fd0:	00 00       	nop
    4fd2:	05 c0       	rjmp	.+10     	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fd4:	00 00       	nop
    4fd6:	03 c0       	rjmp	.+6      	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fd8:	00 00       	nop
    4fda:	01 c0       	rjmp	.+2      	; 0x4fde <_Z17handleLinkBusMsgsv+0xe6e>
    4fdc:	00 00       	nop
    4fde:	8a 85       	ldd	r24, Y+10	; 0x0a
    4fe0:	9b 85       	ldd	r25, Y+11	; 0x0b
    4fe2:	fc 01       	movw	r30, r24
    4fe4:	11 82       	std	Z+1, r1	; 0x01
    4fe6:	12 82       	std	Z+2, r1	; 0x02
    4fe8:	89 81       	ldd	r24, Y+1	; 0x01
    4fea:	88 23       	and	r24, r24
    4fec:	09 f4       	brne	.+2      	; 0x4ff0 <_Z17handleLinkBusMsgsv+0xe80>
    4fee:	c9 c8       	rjmp	.-3694   	; 0x4182 <_Z17handleLinkBusMsgsv+0x12>
    4ff0:	87 ef       	ldi	r24, 0xF7	; 247
    4ff2:	92 e4       	ldi	r25, 0x42	; 66
    4ff4:	0e 94 c0 59 	call	0xb380	; 0xb380 <_Z12lb_send_textPc>
    4ff8:	c4 c8       	rjmp	.-3704   	; 0x4182 <_Z17handleLinkBusMsgsv+0x12>
    4ffa:	00 00       	nop
    4ffc:	e4 96       	adiw	r28, 0x34	; 52
    4ffe:	cd bf       	out	0x3d, r28	; 61
    5000:	de bf       	out	0x3e, r29	; 62
    5002:	df 91       	pop	r29
    5004:	cf 91       	pop	r28
    5006:	08 95       	ret

00005008 <_Z19updateAntennaStatusv>:
    5008:	cf 93       	push	r28
    500a:	df 93       	push	r29
    500c:	1f 92       	push	r1
    500e:	cd b7       	in	r28, 0x3d	; 61
    5010:	de b7       	in	r29, 0x3e	; 62
    5012:	0e 94 e0 2b 	call	0x57c0	; 0x57c0 <_Z18antennaIsConnectedv>
    5016:	89 83       	std	Y+1, r24	; 0x01
    5018:	99 81       	ldd	r25, Y+1	; 0x01
    501a:	81 e0       	ldi	r24, 0x01	; 1
    501c:	89 27       	eor	r24, r25
    501e:	88 23       	and	r24, r24
    5020:	91 f0       	breq	.+36     	; 0x5046 <_Z19updateAntennaStatusv+0x3e>
    5022:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    5026:	81 e0       	ldi	r24, 0x01	; 1
    5028:	91 30       	cpi	r25, 0x01	; 1
    502a:	09 f4       	brne	.+2      	; 0x502e <_Z19updateAntennaStatusv+0x26>
    502c:	80 e0       	ldi	r24, 0x00	; 0
    502e:	88 23       	and	r24, r24
    5030:	31 f0       	breq	.+12     	; 0x503e <_Z19updateAntennaStatusv+0x36>
    5032:	81 e0       	ldi	r24, 0x01	; 1
    5034:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <g_antenna_connect_state>
    5038:	81 e0       	ldi	r24, 0x01	; 1
    503a:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    503e:	83 e0       	ldi	r24, 0x03	; 3
    5040:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5044:	27 c0       	rjmp	.+78     	; 0x5094 <_Z19updateAntennaStatusv+0x8c>
    5046:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    504a:	81 e0       	ldi	r24, 0x01	; 1
    504c:	92 30       	cpi	r25, 0x02	; 2
    504e:	09 f4       	brne	.+2      	; 0x5052 <_Z19updateAntennaStatusv+0x4a>
    5050:	80 e0       	ldi	r24, 0x00	; 0
    5052:	88 23       	and	r24, r24
    5054:	f9 f0       	breq	.+62     	; 0x5094 <_Z19updateAntennaStatusv+0x8c>
    5056:	80 91 cd 47 	lds	r24, 0x47CD	; 0x8047cd <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    505a:	99 81       	ldd	r25, Y+1	; 0x01
    505c:	98 17       	cp	r25, r24
    505e:	b9 f4       	brne	.+46     	; 0x508e <_Z19updateAntennaStatusv+0x86>
    5060:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5064:	88 23       	and	r24, r24
    5066:	b1 f0       	breq	.+44     	; 0x5094 <_Z19updateAntennaStatusv+0x8c>
    5068:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    506c:	81 50       	subi	r24, 0x01	; 1
    506e:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5072:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5076:	88 23       	and	r24, r24
    5078:	69 f4       	brne	.+26     	; 0x5094 <_Z19updateAntennaStatusv+0x8c>
    507a:	82 e0       	ldi	r24, 0x02	; 2
    507c:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <g_antenna_connect_state>
    5080:	81 e0       	ldi	r24, 0x01	; 1
    5082:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    5086:	83 e0       	ldi	r24, 0x03	; 3
    5088:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    508c:	03 c0       	rjmp	.+6      	; 0x5094 <_Z19updateAntennaStatusv+0x8c>
    508e:	83 e0       	ldi	r24, 0x03	; 3
    5090:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    5094:	89 81       	ldd	r24, Y+1	; 0x01
    5096:	80 93 cd 47 	sts	0x47CD, r24	; 0x8047cd <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    509a:	00 00       	nop
    509c:	0f 90       	pop	r0
    509e:	df 91       	pop	r29
    50a0:	cf 91       	pop	r28
    50a2:	08 95       	ret

000050a4 <_Z12eventEnabledv>:
    50a4:	ef 92       	push	r14
    50a6:	ff 92       	push	r15
    50a8:	0f 93       	push	r16
    50aa:	1f 93       	push	r17
    50ac:	cf 93       	push	r28
    50ae:	df 93       	push	r29
    50b0:	cd b7       	in	r28, 0x3d	; 61
    50b2:	de b7       	in	r29, 0x3e	; 62
    50b4:	29 97       	sbiw	r28, 0x09	; 9
    50b6:	cd bf       	out	0x3d, r28	; 61
    50b8:	de bf       	out	0x3e, r29	; 62
    50ba:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    50be:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    50c2:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    50c6:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    50ca:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    50ce:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    50d2:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    50d6:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    50da:	bc 01       	movw	r22, r24
    50dc:	cd 01       	movw	r24, r26
    50de:	0e 94 6d 73 	call	0xe6da	; 0xe6da <_Z7timeDifmm>
    50e2:	dc 01       	movw	r26, r24
    50e4:	cb 01       	movw	r24, r22
    50e6:	89 83       	std	Y+1, r24	; 0x01
    50e8:	9a 83       	std	Y+2, r25	; 0x02
    50ea:	ab 83       	std	Y+3, r26	; 0x03
    50ec:	bc 83       	std	Y+4, r27	; 0x04
    50ee:	21 e0       	ldi	r18, 0x01	; 1
    50f0:	89 81       	ldd	r24, Y+1	; 0x01
    50f2:	9a 81       	ldd	r25, Y+2	; 0x02
    50f4:	ab 81       	ldd	r26, Y+3	; 0x03
    50f6:	bc 81       	ldd	r27, Y+4	; 0x04
    50f8:	18 16       	cp	r1, r24
    50fa:	19 06       	cpc	r1, r25
    50fc:	1a 06       	cpc	r1, r26
    50fe:	1b 06       	cpc	r1, r27
    5100:	0c f0       	brlt	.+2      	; 0x5104 <_Z12eventEnabledv+0x60>
    5102:	20 e0       	ldi	r18, 0x00	; 0
    5104:	2d 83       	std	Y+5, r18	; 0x05
    5106:	ce 01       	movw	r24, r28
    5108:	06 96       	adiw	r24, 0x06	; 6
    510a:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <time>
    510e:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    5112:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5116:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    511a:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    511e:	8e 81       	ldd	r24, Y+6	; 0x06
    5120:	9f 81       	ldd	r25, Y+7	; 0x07
    5122:	a8 85       	ldd	r26, Y+8	; 0x08
    5124:	b9 85       	ldd	r27, Y+9	; 0x09
    5126:	bc 01       	movw	r22, r24
    5128:	cd 01       	movw	r24, r26
    512a:	0e 94 6d 73 	call	0xe6da	; 0xe6da <_Z7timeDifmm>
    512e:	dc 01       	movw	r26, r24
    5130:	cb 01       	movw	r24, r22
    5132:	89 83       	std	Y+1, r24	; 0x01
    5134:	9a 83       	std	Y+2, r25	; 0x02
    5136:	ab 83       	std	Y+3, r26	; 0x03
    5138:	bc 83       	std	Y+4, r27	; 0x04
    513a:	89 81       	ldd	r24, Y+1	; 0x01
    513c:	9a 81       	ldd	r25, Y+2	; 0x02
    513e:	ab 81       	ldd	r26, Y+3	; 0x03
    5140:	bc 81       	ldd	r27, Y+4	; 0x04
    5142:	bb 23       	and	r27, r27
    5144:	2c f0       	brlt	.+10     	; 0x5150 <_Z12eventEnabledv+0xac>
    5146:	8d 81       	ldd	r24, Y+5	; 0x05
    5148:	88 23       	and	r24, r24
    514a:	11 f0       	breq	.+4      	; 0x5150 <_Z12eventEnabledv+0xac>
    514c:	80 e0       	ldi	r24, 0x00	; 0
    514e:	4a c0       	rjmp	.+148    	; 0x51e4 <_Z12eventEnabledv+0x140>
    5150:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5154:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5158:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    515c:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5160:	8e 81       	ldd	r24, Y+6	; 0x06
    5162:	9f 81       	ldd	r25, Y+7	; 0x07
    5164:	a8 85       	ldd	r26, Y+8	; 0x08
    5166:	b9 85       	ldd	r27, Y+9	; 0x09
    5168:	bc 01       	movw	r22, r24
    516a:	cd 01       	movw	r24, r26
    516c:	0e 94 6d 73 	call	0xe6da	; 0xe6da <_Z7timeDifmm>
    5170:	dc 01       	movw	r26, r24
    5172:	cb 01       	movw	r24, r22
    5174:	89 83       	std	Y+1, r24	; 0x01
    5176:	9a 83       	std	Y+2, r25	; 0x02
    5178:	ab 83       	std	Y+3, r26	; 0x03
    517a:	bc 83       	std	Y+4, r27	; 0x04
    517c:	89 81       	ldd	r24, Y+1	; 0x01
    517e:	9a 81       	ldd	r25, Y+2	; 0x02
    5180:	ab 81       	ldd	r26, Y+3	; 0x03
    5182:	bc 81       	ldd	r27, Y+4	; 0x04
    5184:	84 3c       	cpi	r24, 0xC4	; 196
    5186:	9f 4f       	sbci	r25, 0xFF	; 255
    5188:	af 4f       	sbci	r26, 0xFF	; 255
    518a:	bf 4f       	sbci	r27, 0xFF	; 255
    518c:	64 f0       	brlt	.+24     	; 0x51a6 <_Z12eventEnabledv+0x102>
    518e:	10 92 5d 47 	sts	0x475D, r1	; 0x80475d <_ZL11g_sleepType>
    5192:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL18g_seconds_to_sleep>
    5196:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    519a:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    519e:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    51a2:	81 e0       	ldi	r24, 0x01	; 1
    51a4:	1f c0       	rjmp	.+62     	; 0x51e4 <_Z12eventEnabledv+0x140>
    51a6:	24 ec       	ldi	r18, 0xC4	; 196
    51a8:	3f ef       	ldi	r19, 0xFF	; 255
    51aa:	4f ef       	ldi	r20, 0xFF	; 255
    51ac:	5f ef       	ldi	r21, 0xFF	; 255
    51ae:	89 81       	ldd	r24, Y+1	; 0x01
    51b0:	9a 81       	ldd	r25, Y+2	; 0x02
    51b2:	ab 81       	ldd	r26, Y+3	; 0x03
    51b4:	bc 81       	ldd	r27, Y+4	; 0x04
    51b6:	79 01       	movw	r14, r18
    51b8:	8a 01       	movw	r16, r20
    51ba:	e8 1a       	sub	r14, r24
    51bc:	f9 0a       	sbc	r15, r25
    51be:	0a 0b       	sbc	r16, r26
    51c0:	1b 0b       	sbc	r17, r27
    51c2:	d8 01       	movw	r26, r16
    51c4:	c7 01       	movw	r24, r14
    51c6:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    51ca:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    51ce:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    51d2:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    51d6:	81 e0       	ldi	r24, 0x01	; 1
    51d8:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
    51dc:	81 e0       	ldi	r24, 0x01	; 1
    51de:	80 93 98 47 	sts	0x4798, r24	; 0x804798 <_ZL13g_go_to_sleep>
    51e2:	81 e0       	ldi	r24, 0x01	; 1
    51e4:	29 96       	adiw	r28, 0x09	; 9
    51e6:	cd bf       	out	0x3d, r28	; 61
    51e8:	de bf       	out	0x3e, r29	; 62
    51ea:	df 91       	pop	r29
    51ec:	cf 91       	pop	r28
    51ee:	1f 91       	pop	r17
    51f0:	0f 91       	pop	r16
    51f2:	ff 90       	pop	r15
    51f4:	ef 90       	pop	r14
    51f6:	08 95       	ret

000051f8 <_Z8wdt_init7WDReset>:
    51f8:	cf 93       	push	r28
    51fa:	df 93       	push	r29
    51fc:	1f 92       	push	r1
    51fe:	cd b7       	in	r28, 0x3d	; 61
    5200:	de b7       	in	r29, 0x3e	; 62
    5202:	89 83       	std	Y+1, r24	; 0x01
    5204:	00 00       	nop
    5206:	0f 90       	pop	r0
    5208:	df 91       	pop	r29
    520a:	cf 91       	pop	r28
    520c:	08 95       	ret

0000520e <_Z13throttleValueh>:
    520e:	cf 93       	push	r28
    5210:	df 93       	push	r29
    5212:	cd b7       	in	r28, 0x3d	; 61
    5214:	de b7       	in	r29, 0x3e	; 62
    5216:	2a 97       	sbiw	r28, 0x0a	; 10
    5218:	cd bf       	out	0x3d, r28	; 61
    521a:	de bf       	out	0x3e, r29	; 62
    521c:	8a 87       	std	Y+10, r24	; 0x0a
    521e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5220:	89 83       	std	Y+1, r24	; 0x01
    5222:	85 e0       	ldi	r24, 0x05	; 5
    5224:	90 e0       	ldi	r25, 0x00	; 0
    5226:	8a 83       	std	Y+2, r24	; 0x02
    5228:	9b 83       	std	Y+3, r25	; 0x03
    522a:	84 e1       	ldi	r24, 0x14	; 20
    522c:	90 e0       	ldi	r25, 0x00	; 0
    522e:	8c 83       	std	Y+4, r24	; 0x04
    5230:	9d 83       	std	Y+5, r25	; 0x05
    5232:	89 81       	ldd	r24, Y+1	; 0x01
    5234:	28 2f       	mov	r18, r24
    5236:	88 0f       	add	r24, r24
    5238:	33 0b       	sbc	r19, r19
    523a:	8c 81       	ldd	r24, Y+4	; 0x04
    523c:	9d 81       	ldd	r25, Y+5	; 0x05
    523e:	82 17       	cp	r24, r18
    5240:	93 07       	cpc	r25, r19
    5242:	5c f0       	brlt	.+22     	; 0x525a <_Z13throttleValueh+0x4c>
    5244:	89 81       	ldd	r24, Y+1	; 0x01
    5246:	08 2e       	mov	r0, r24
    5248:	00 0c       	add	r0, r0
    524a:	99 0b       	sbc	r25, r25
    524c:	2a 81       	ldd	r18, Y+2	; 0x02
    524e:	3b 81       	ldd	r19, Y+3	; 0x03
    5250:	82 17       	cp	r24, r18
    5252:	93 07       	cpc	r25, r19
    5254:	24 f4       	brge	.+8      	; 0x525e <_Z13throttleValueh+0x50>
    5256:	c9 01       	movw	r24, r18
    5258:	02 c0       	rjmp	.+4      	; 0x525e <_Z13throttleValueh+0x50>
    525a:	8c 81       	ldd	r24, Y+4	; 0x04
    525c:	9d 81       	ldd	r25, Y+5	; 0x05
    525e:	8a 87       	std	Y+10, r24	; 0x0a
    5260:	8a 85       	ldd	r24, Y+10	; 0x0a
    5262:	28 2f       	mov	r18, r24
    5264:	30 e0       	ldi	r19, 0x00	; 0
    5266:	40 e0       	ldi	r20, 0x00	; 0
    5268:	50 e0       	ldi	r21, 0x00	; 0
    526a:	88 ed       	ldi	r24, 0xD8	; 216
    526c:	9d e0       	ldi	r25, 0x0D	; 13
    526e:	a0 e0       	ldi	r26, 0x00	; 0
    5270:	b0 e0       	ldi	r27, 0x00	; 0
    5272:	bc 01       	movw	r22, r24
    5274:	cd 01       	movw	r24, r26
    5276:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
    527a:	da 01       	movw	r26, r20
    527c:	c9 01       	movw	r24, r18
    527e:	2a e0       	ldi	r18, 0x0A	; 10
    5280:	30 e0       	ldi	r19, 0x00	; 0
    5282:	40 e0       	ldi	r20, 0x00	; 0
    5284:	50 e0       	ldi	r21, 0x00	; 0
    5286:	bc 01       	movw	r22, r24
    5288:	cd 01       	movw	r24, r26
    528a:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
    528e:	da 01       	movw	r26, r20
    5290:	c9 01       	movw	r24, r18
    5292:	bc 01       	movw	r22, r24
    5294:	cd 01       	movw	r24, r26
    5296:	0e 94 51 78 	call	0xf0a2	; 0xf0a2 <__floatsisf>
    529a:	dc 01       	movw	r26, r24
    529c:	cb 01       	movw	r24, r22
    529e:	8e 83       	std	Y+6, r24	; 0x06
    52a0:	9f 83       	std	Y+7, r25	; 0x07
    52a2:	a8 87       	std	Y+8, r26	; 0x08
    52a4:	b9 87       	std	Y+9, r27	; 0x09
    52a6:	6e 81       	ldd	r22, Y+6	; 0x06
    52a8:	7f 81       	ldd	r23, Y+7	; 0x07
    52aa:	88 85       	ldd	r24, Y+8	; 0x08
    52ac:	99 85       	ldd	r25, Y+9	; 0x09
    52ae:	0e 94 20 78 	call	0xf040	; 0xf040 <__fixunssfsi>
    52b2:	dc 01       	movw	r26, r24
    52b4:	cb 01       	movw	r24, r22
    52b6:	2a 96       	adiw	r28, 0x0a	; 10
    52b8:	cd bf       	out	0x3d, r28	; 61
    52ba:	de bf       	out	0x3e, r29	; 62
    52bc:	df 91       	pop	r29
    52be:	cf 91       	pop	r28
    52c0:	08 95       	ret

000052c2 <_Z11launchEventP2SC>:
    52c2:	cf 93       	push	r28
    52c4:	df 93       	push	r29
    52c6:	00 d0       	rcall	.+0      	; 0x52c8 <_Z11launchEventP2SC+0x6>
    52c8:	1f 92       	push	r1
    52ca:	cd b7       	in	r28, 0x3d	; 61
    52cc:	de b7       	in	r29, 0x3e	; 62
    52ce:	8a 83       	std	Y+2, r24	; 0x02
    52d0:	9b 83       	std	Y+3, r25	; 0x03
    52d2:	8a 81       	ldd	r24, Y+2	; 0x02
    52d4:	9b 81       	ldd	r25, Y+3	; 0x03
    52d6:	0e 94 8c 29 	call	0x5318	; 0x5318 <_Z33activateEventUsingCurrentSettingsP2SC>
    52da:	89 83       	std	Y+1, r24	; 0x01
    52dc:	8a 81       	ldd	r24, Y+2	; 0x02
    52de:	9b 81       	ldd	r25, Y+3	; 0x03
    52e0:	fc 01       	movw	r30, r24
    52e2:	80 81       	ld	r24, Z
    52e4:	88 23       	and	r24, r24
    52e6:	31 f0       	breq	.+12     	; 0x52f4 <_Z11launchEventP2SC+0x32>
    52e8:	8a 81       	ldd	r24, Y+2	; 0x02
    52ea:	9b 81       	ldd	r25, Y+3	; 0x03
    52ec:	fc 01       	movw	r30, r24
    52ee:	80 81       	ld	r24, Z
    52f0:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
    52f4:	89 81       	ldd	r24, Y+1	; 0x01
    52f6:	88 23       	and	r24, r24
    52f8:	21 f0       	breq	.+8      	; 0x5302 <_Z11launchEventP2SC+0x40>
    52fa:	89 81       	ldd	r24, Y+1	; 0x01
    52fc:	80 93 4b 47 	sts	0x474B, r24	; 0x80474b <_ZL17g_last_error_code>
    5300:	04 c0       	rjmp	.+8      	; 0x530a <_Z11launchEventP2SC+0x48>
    5302:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_Z12eventEnabledv>
    5306:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
    530a:	89 81       	ldd	r24, Y+1	; 0x01
    530c:	23 96       	adiw	r28, 0x03	; 3
    530e:	cd bf       	out	0x3d, r28	; 61
    5310:	de bf       	out	0x3e, r29	; 62
    5312:	df 91       	pop	r29
    5314:	cf 91       	pop	r28
    5316:	08 95       	ret

00005318 <_Z33activateEventUsingCurrentSettingsP2SC>:
    5318:	cf 93       	push	r28
    531a:	df 93       	push	r29
    531c:	cd b7       	in	r28, 0x3d	; 61
    531e:	de b7       	in	r29, 0x3e	; 62
    5320:	63 97       	sbiw	r28, 0x13	; 19
    5322:	cd bf       	out	0x3d, r28	; 61
    5324:	de bf       	out	0x3e, r29	; 62
    5326:	8a 8b       	std	Y+18, r24	; 0x12
    5328:	9b 8b       	std	Y+19, r25	; 0x13
    532a:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    532e:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5332:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5336:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    533a:	21 e0       	ldi	r18, 0x01	; 1
    533c:	89 2b       	or	r24, r25
    533e:	8a 2b       	or	r24, r26
    5340:	8b 2b       	or	r24, r27
    5342:	09 f0       	breq	.+2      	; 0x5346 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    5344:	20 e0       	ldi	r18, 0x00	; 0
    5346:	22 23       	and	r18, r18
    5348:	11 f0       	breq	.+4      	; 0x534e <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    534a:	8c ec       	ldi	r24, 0xCC	; 204
    534c:	1a c2       	rjmp	.+1076   	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    534e:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5352:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5356:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    535a:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    535e:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    5362:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5366:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    536a:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    536e:	61 e0       	ldi	r22, 0x01	; 1
    5370:	28 17       	cp	r18, r24
    5372:	39 07       	cpc	r19, r25
    5374:	4a 07       	cpc	r20, r26
    5376:	5b 07       	cpc	r21, r27
    5378:	08 f4       	brcc	.+2      	; 0x537c <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    537a:	60 e0       	ldi	r22, 0x00	; 0
    537c:	66 23       	and	r22, r22
    537e:	11 f0       	breq	.+4      	; 0x5384 <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    5380:	8d ec       	ldi	r24, 0xCD	; 205
    5382:	ff c1       	rjmp	.+1022   	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5384:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5388:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    538c:	21 e0       	ldi	r18, 0x01	; 1
    538e:	89 2b       	or	r24, r25
    5390:	09 f0       	breq	.+2      	; 0x5394 <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    5392:	20 e0       	ldi	r18, 0x00	; 0
    5394:	22 23       	and	r18, r18
    5396:	11 f0       	breq	.+4      	; 0x539c <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    5398:	8b ec       	ldi	r24, 0xCB	; 203
    539a:	f3 c1       	rjmp	.+998    	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    539c:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    53a0:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    53a4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    53a8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    53ac:	28 0f       	add	r18, r24
    53ae:	39 1f       	adc	r19, r25
    53b0:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    53b4:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    53b8:	41 e0       	ldi	r20, 0x01	; 1
    53ba:	28 17       	cp	r18, r24
    53bc:	39 07       	cpc	r19, r25
    53be:	0c f0       	brlt	.+2      	; 0x53c2 <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    53c0:	40 e0       	ldi	r20, 0x00	; 0
    53c2:	44 23       	and	r20, r20
    53c4:	11 f0       	breq	.+4      	; 0x53ca <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    53c6:	8a ec       	ldi	r24, 0xCA	; 202
    53c8:	dc c1       	rjmp	.+952    	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    53ca:	80 91 5e 47 	lds	r24, 0x475E	; 0x80475e <g_messages_text>
    53ce:	88 23       	and	r24, r24
    53d0:	11 f4       	brne	.+4      	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    53d2:	89 ec       	ldi	r24, 0xC9	; 201
    53d4:	d6 c1       	rjmp	.+940    	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    53d6:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    53da:	81 e0       	ldi	r24, 0x01	; 1
    53dc:	99 23       	and	r25, r25
    53de:	09 f0       	breq	.+2      	; 0x53e2 <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    53e0:	80 e0       	ldi	r24, 0x00	; 0
    53e2:	88 23       	and	r24, r24
    53e4:	11 f0       	breq	.+4      	; 0x53ea <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    53e6:	88 ec       	ldi	r24, 0xC8	; 200
    53e8:	cc c1       	rjmp	.+920    	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    53ea:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    53ee:	88 23       	and	r24, r24
    53f0:	91 f1       	breq	.+100    	; 0x5456 <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    53f2:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    53f6:	88 23       	and	r24, r24
    53f8:	31 f0       	breq	.+12     	; 0x5406 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    53fa:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    53fe:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    5402:	89 2b       	or	r24, r25
    5404:	11 f4       	brne	.+4      	; 0x540a <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    5406:	81 e0       	ldi	r24, 0x01	; 1
    5408:	01 c0       	rjmp	.+2      	; 0x540c <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    540a:	80 e0       	ldi	r24, 0x00	; 0
    540c:	88 23       	and	r24, r24
    540e:	11 f0       	breq	.+4      	; 0x5414 <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    5410:	87 ec       	ldi	r24, 0xC7	; 199
    5412:	b7 c1       	rjmp	.+878    	; 0x5782 <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5414:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    5418:	88 2f       	mov	r24, r24
    541a:	90 e0       	ldi	r25, 0x00	; 0
    541c:	bc 01       	movw	r22, r24
    541e:	83 e7       	ldi	r24, 0x73	; 115
    5420:	97 e4       	ldi	r25, 0x47	; 71
    5422:	0e 94 26 5c 	call	0xb84c	; 0xb84c <_Z26timeRequiredToSendStrAtWPMPcj>
    5426:	8c 50       	subi	r24, 0x0C	; 12
    5428:	9e 4f       	sbci	r25, 0xFE	; 254
    542a:	96 95       	lsr	r25
    542c:	87 95       	ror	r24
    542e:	96 95       	lsr	r25
    5430:	87 95       	ror	r24
    5432:	96 95       	lsr	r25
    5434:	87 95       	ror	r24
    5436:	9c 01       	movw	r18, r24
    5438:	a5 ec       	ldi	r26, 0xC5	; 197
    543a:	b0 e2       	ldi	r27, 0x20	; 32
    543c:	0e 94 36 7a 	call	0xf46c	; 0xf46c <__umulhisi3>
    5440:	92 95       	swap	r25
    5442:	82 95       	swap	r24
    5444:	8f 70       	andi	r24, 0x0F	; 15
    5446:	89 27       	eor	r24, r25
    5448:	9f 70       	andi	r25, 0x0F	; 15
    544a:	89 27       	eor	r24, r25
    544c:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_time_needed_for_ID>
    5450:	90 93 89 47 	sts	0x4789, r25	; 0x804789 <g_time_needed_for_ID+0x1>
    5454:	04 c0       	rjmp	.+8      	; 0x545e <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    5456:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_time_needed_for_ID>
    545a:	10 92 89 47 	sts	0x4789, r1	; 0x804789 <g_time_needed_for_ID+0x1>
    545e:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    5462:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    5466:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    546a:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    546e:	8a 83       	std	Y+2, r24	; 0x02
    5470:	9b 83       	std	Y+3, r25	; 0x03
    5472:	ac 83       	std	Y+4, r26	; 0x04
    5474:	bd 83       	std	Y+5, r27	; 0x05
    5476:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    547a:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    547e:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5482:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5486:	61 e0       	ldi	r22, 0x01	; 1
    5488:	8a 81       	ldd	r24, Y+2	; 0x02
    548a:	9b 81       	ldd	r25, Y+3	; 0x03
    548c:	ac 81       	ldd	r26, Y+4	; 0x04
    548e:	bd 81       	ldd	r27, Y+5	; 0x05
    5490:	28 17       	cp	r18, r24
    5492:	39 07       	cpc	r19, r25
    5494:	4a 07       	cpc	r20, r26
    5496:	5b 07       	cpc	r21, r27
    5498:	08 f0       	brcs	.+2      	; 0x549c <_Z33activateEventUsingCurrentSettingsP2SC+0x184>
    549a:	60 e0       	ldi	r22, 0x00	; 0
    549c:	66 23       	and	r22, r22
    549e:	59 f0       	breq	.+22     	; 0x54b6 <_Z33activateEventUsingCurrentSettingsP2SC+0x19e>
    54a0:	8a 89       	ldd	r24, Y+18	; 0x12
    54a2:	9b 89       	ldd	r25, Y+19	; 0x13
    54a4:	89 2b       	or	r24, r25
    54a6:	09 f4       	brne	.+2      	; 0x54aa <_Z33activateEventUsingCurrentSettingsP2SC+0x192>
    54a8:	6b c1       	rjmp	.+726    	; 0x5780 <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    54aa:	8a 89       	ldd	r24, Y+18	; 0x12
    54ac:	9b 89       	ldd	r25, Y+19	; 0x13
    54ae:	2a ef       	ldi	r18, 0xFA	; 250
    54b0:	fc 01       	movw	r30, r24
    54b2:	20 83       	st	Z, r18
    54b4:	65 c1       	rjmp	.+714    	; 0x5780 <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    54b6:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    54ba:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    54be:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    54c2:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    54c6:	8a 81       	ldd	r24, Y+2	; 0x02
    54c8:	9b 81       	ldd	r25, Y+3	; 0x03
    54ca:	ac 81       	ldd	r26, Y+4	; 0x04
    54cc:	bd 81       	ldd	r27, Y+5	; 0x05
    54ce:	bc 01       	movw	r22, r24
    54d0:	cd 01       	movw	r24, r26
    54d2:	0e 94 6d 73 	call	0xe6da	; 0xe6da <_Z7timeDifmm>
    54d6:	dc 01       	movw	r26, r24
    54d8:	cb 01       	movw	r24, r22
    54da:	8e 83       	std	Y+6, r24	; 0x06
    54dc:	9f 83       	std	Y+7, r25	; 0x07
    54de:	a8 87       	std	Y+8, r26	; 0x08
    54e0:	b9 87       	std	Y+9, r27	; 0x09
    54e2:	8e 81       	ldd	r24, Y+6	; 0x06
    54e4:	9f 81       	ldd	r25, Y+7	; 0x07
    54e6:	a8 85       	ldd	r26, Y+8	; 0x08
    54e8:	b9 85       	ldd	r27, Y+9	; 0x09
    54ea:	bb 23       	and	r27, r27
    54ec:	0c f4       	brge	.+2      	; 0x54f0 <_Z33activateEventUsingCurrentSettingsP2SC+0x1d8>
    54ee:	34 c1       	rjmp	.+616    	; 0x5758 <_Z33activateEventUsingCurrentSettingsP2SC+0x440>
    54f0:	19 82       	std	Y+1, r1	; 0x01
    54f2:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    54f6:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    54fa:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    54fe:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    5502:	82 0f       	add	r24, r18
    5504:	93 1f       	adc	r25, r19
    5506:	8a 87       	std	Y+10, r24	; 0x0a
    5508:	9b 87       	std	Y+11, r25	; 0x0b
    550a:	8a 85       	ldd	r24, Y+10	; 0x0a
    550c:	9b 85       	ldd	r25, Y+11	; 0x0b
    550e:	9c 01       	movw	r18, r24
    5510:	99 0f       	add	r25, r25
    5512:	44 0b       	sbc	r20, r20
    5514:	55 0b       	sbc	r21, r21
    5516:	8e 81       	ldd	r24, Y+6	; 0x06
    5518:	9f 81       	ldd	r25, Y+7	; 0x07
    551a:	a8 85       	ldd	r26, Y+8	; 0x08
    551c:	b9 85       	ldd	r27, Y+9	; 0x09
    551e:	bc 01       	movw	r22, r24
    5520:	cd 01       	movw	r24, r26
    5522:	0e 94 0e 7a 	call	0xf41c	; 0xf41c <__divmodsi4>
    5526:	dc 01       	movw	r26, r24
    5528:	cb 01       	movw	r24, r22
    552a:	8c 87       	std	Y+12, r24	; 0x0c
    552c:	9d 87       	std	Y+13, r25	; 0x0d
    552e:	20 91 8a 47 	lds	r18, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    5532:	30 91 8b 47 	lds	r19, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    5536:	8c 85       	ldd	r24, Y+12	; 0x0c
    5538:	9d 85       	ldd	r25, Y+13	; 0x0d
    553a:	a9 01       	movw	r20, r18
    553c:	48 1b       	sub	r20, r24
    553e:	59 0b       	sbc	r21, r25
    5540:	ca 01       	movw	r24, r20
    5542:	8e 87       	std	Y+14, r24	; 0x0e
    5544:	9f 87       	std	Y+15, r25	; 0x0f
    5546:	8e 85       	ldd	r24, Y+14	; 0x0e
    5548:	9f 85       	ldd	r25, Y+15	; 0x0f
    554a:	18 16       	cp	r1, r24
    554c:	19 06       	cpc	r1, r25
    554e:	0c f4       	brge	.+2      	; 0x5552 <_Z33activateEventUsingCurrentSettingsP2SC+0x23a>
    5550:	a8 c0       	rjmp	.+336    	; 0x56a2 <_Z33activateEventUsingCurrentSettingsP2SC+0x38a>
    5552:	8e 85       	ldd	r24, Y+14	; 0x0e
    5554:	9f 85       	ldd	r25, Y+15	; 0x0f
    5556:	22 27       	eor	r18, r18
    5558:	33 27       	eor	r19, r19
    555a:	28 1b       	sub	r18, r24
    555c:	39 0b       	sbc	r19, r25
    555e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5562:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5566:	41 e0       	ldi	r20, 0x01	; 1
    5568:	28 17       	cp	r18, r24
    556a:	39 07       	cpc	r19, r25
    556c:	0c f4       	brge	.+2      	; 0x5570 <_Z33activateEventUsingCurrentSettingsP2SC+0x258>
    556e:	40 e0       	ldi	r20, 0x00	; 0
    5570:	44 23       	and	r20, r20
    5572:	09 f4       	brne	.+2      	; 0x5576 <_Z33activateEventUsingCurrentSettingsP2SC+0x25e>
    5574:	41 c0       	rjmp	.+130    	; 0x55f8 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e0>
    5576:	2a 85       	ldd	r18, Y+10	; 0x0a
    5578:	3b 85       	ldd	r19, Y+11	; 0x0b
    557a:	8e 85       	ldd	r24, Y+14	; 0x0e
    557c:	9f 85       	ldd	r25, Y+15	; 0x0f
    557e:	82 0f       	add	r24, r18
    5580:	93 1f       	adc	r25, r19
    5582:	91 95       	neg	r25
    5584:	81 95       	neg	r24
    5586:	91 09       	sbc	r25, r1
    5588:	09 2e       	mov	r0, r25
    558a:	00 0c       	add	r0, r0
    558c:	aa 0b       	sbc	r26, r26
    558e:	bb 0b       	sbc	r27, r27
    5590:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    5594:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    5598:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    559c:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    55a0:	8a 89       	ldd	r24, Y+18	; 0x12
    55a2:	9b 89       	ldd	r25, Y+19	; 0x13
    55a4:	89 2b       	or	r24, r25
    55a6:	29 f0       	breq	.+10     	; 0x55b2 <_Z33activateEventUsingCurrentSettingsP2SC+0x29a>
    55a8:	8a 89       	ldd	r24, Y+18	; 0x12
    55aa:	9b 89       	ldd	r25, Y+19	; 0x13
    55ac:	2e ef       	ldi	r18, 0xFE	; 254
    55ae:	fc 01       	movw	r30, r24
    55b0:	20 83       	st	Z, r18
    55b2:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    55b6:	81 e0       	ldi	r24, 0x01	; 1
    55b8:	89 27       	eor	r24, r25
    55ba:	88 23       	and	r24, r24
    55bc:	09 f4       	brne	.+2      	; 0x55c0 <_Z33activateEventUsingCurrentSettingsP2SC+0x2a8>
    55be:	a6 c0       	rjmp	.+332    	; 0x570c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    55c0:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    55c4:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    55c8:	9c 01       	movw	r18, r24
    55ca:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    55ce:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    55d2:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    55d6:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    55da:	28 1b       	sub	r18, r24
    55dc:	39 0b       	sbc	r19, r25
    55de:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    55e2:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    55e6:	a9 01       	movw	r20, r18
    55e8:	48 1b       	sub	r20, r24
    55ea:	59 0b       	sbc	r21, r25
    55ec:	ca 01       	movw	r24, r20
    55ee:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    55f2:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    55f6:	8a c0       	rjmp	.+276    	; 0x570c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    55f8:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    55fc:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5600:	8e 85       	ldd	r24, Y+14	; 0x0e
    5602:	9f 85       	ldd	r25, Y+15	; 0x0f
    5604:	82 0f       	add	r24, r18
    5606:	93 1f       	adc	r25, r19
    5608:	09 2e       	mov	r0, r25
    560a:	00 0c       	add	r0, r0
    560c:	aa 0b       	sbc	r26, r26
    560e:	bb 0b       	sbc	r27, r27
    5610:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    5614:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    5618:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    561c:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    5620:	81 e0       	ldi	r24, 0x01	; 1
    5622:	89 83       	std	Y+1, r24	; 0x01
    5624:	8a 89       	ldd	r24, Y+18	; 0x12
    5626:	9b 89       	ldd	r25, Y+19	; 0x13
    5628:	89 2b       	or	r24, r25
    562a:	29 f0       	breq	.+10     	; 0x5636 <_Z33activateEventUsingCurrentSettingsP2SC+0x31e>
    562c:	8a 89       	ldd	r24, Y+18	; 0x12
    562e:	9b 89       	ldd	r25, Y+19	; 0x13
    5630:	2d ef       	ldi	r18, 0xFD	; 253
    5632:	fc 01       	movw	r30, r24
    5634:	20 83       	st	Z, r18
    5636:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    563a:	81 e0       	ldi	r24, 0x01	; 1
    563c:	89 27       	eor	r24, r25
    563e:	88 23       	and	r24, r24
    5640:	09 f4       	brne	.+2      	; 0x5644 <_Z33activateEventUsingCurrentSettingsP2SC+0x32c>
    5642:	64 c0       	rjmp	.+200    	; 0x570c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5644:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    5648:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    564c:	9c 01       	movw	r18, r24
    564e:	40 e0       	ldi	r20, 0x00	; 0
    5650:	50 e0       	ldi	r21, 0x00	; 0
    5652:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    5656:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    565a:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    565e:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    5662:	61 e0       	ldi	r22, 0x01	; 1
    5664:	28 17       	cp	r18, r24
    5666:	39 07       	cpc	r19, r25
    5668:	4a 07       	cpc	r20, r26
    566a:	5b 07       	cpc	r21, r27
    566c:	0c f0       	brlt	.+2      	; 0x5670 <_Z33activateEventUsingCurrentSettingsP2SC+0x358>
    566e:	60 e0       	ldi	r22, 0x00	; 0
    5670:	66 23       	and	r22, r22
    5672:	09 f4       	brne	.+2      	; 0x5676 <_Z33activateEventUsingCurrentSettingsP2SC+0x35e>
    5674:	4b c0       	rjmp	.+150    	; 0x570c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5676:	80 91 54 47 	lds	r24, 0x4754	; 0x804754 <_ZL12g_on_the_air>
    567a:	90 91 55 47 	lds	r25, 0x4755	; 0x804755 <_ZL12g_on_the_air+0x1>
    567e:	a0 91 56 47 	lds	r26, 0x4756	; 0x804756 <_ZL12g_on_the_air+0x2>
    5682:	b0 91 57 47 	lds	r27, 0x4757	; 0x804757 <_ZL12g_on_the_air+0x3>
    5686:	9c 01       	movw	r18, r24
    5688:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    568c:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    5690:	a9 01       	movw	r20, r18
    5692:	48 1b       	sub	r20, r24
    5694:	59 0b       	sbc	r21, r25
    5696:	ca 01       	movw	r24, r20
    5698:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    569c:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    56a0:	35 c0       	rjmp	.+106    	; 0x570c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    56a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    56a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    56a6:	91 95       	neg	r25
    56a8:	81 95       	neg	r24
    56aa:	91 09       	sbc	r25, r1
    56ac:	09 2e       	mov	r0, r25
    56ae:	00 0c       	add	r0, r0
    56b0:	aa 0b       	sbc	r26, r26
    56b2:	bb 0b       	sbc	r27, r27
    56b4:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    56b8:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    56bc:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    56c0:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
    56c4:	8a 89       	ldd	r24, Y+18	; 0x12
    56c6:	9b 89       	ldd	r25, Y+19	; 0x13
    56c8:	89 2b       	or	r24, r25
    56ca:	29 f0       	breq	.+10     	; 0x56d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3be>
    56cc:	8a 89       	ldd	r24, Y+18	; 0x12
    56ce:	9b 89       	ldd	r25, Y+19	; 0x13
    56d0:	2e ef       	ldi	r18, 0xFE	; 254
    56d2:	fc 01       	movw	r30, r24
    56d4:	20 83       	st	Z, r18
    56d6:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    56da:	81 e0       	ldi	r24, 0x01	; 1
    56dc:	89 27       	eor	r24, r25
    56de:	88 23       	and	r24, r24
    56e0:	a9 f0       	breq	.+42     	; 0x570c <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    56e2:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    56e6:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    56ea:	8e 85       	ldd	r24, Y+14	; 0x0e
    56ec:	9f 85       	ldd	r25, Y+15	; 0x0f
    56ee:	82 0f       	add	r24, r18
    56f0:	93 1f       	adc	r25, r19
    56f2:	9c 01       	movw	r18, r24
    56f4:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_time_needed_for_ID>
    56f8:	90 91 89 47 	lds	r25, 0x4789	; 0x804789 <g_time_needed_for_ID+0x1>
    56fc:	a9 01       	movw	r20, r18
    56fe:	48 1b       	sub	r20, r24
    5700:	59 0b       	sbc	r21, r25
    5702:	ca 01       	movw	r24, r20
    5704:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5708:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
    570c:	89 81       	ldd	r24, Y+1	; 0x01
    570e:	88 23       	and	r24, r24
    5710:	e1 f0       	breq	.+56     	; 0x574a <_Z33activateEventUsingCurrentSettingsP2SC+0x432>
    5712:	80 91 94 47 	lds	r24, 0x4794	; 0x804794 <g_event_enabled>
    5716:	88 8b       	std	Y+16, r24	; 0x10
    5718:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
    571c:	81 e0       	ldi	r24, 0x01	; 1
    571e:	89 8b       	std	Y+17, r24	; 0x11
    5720:	ce 01       	movw	r24, r28
    5722:	41 96       	adiw	r24, 0x11	; 17
    5724:	40 e0       	ldi	r20, 0x00	; 0
    5726:	50 e0       	ldi	r21, 0x00	; 0
    5728:	bc 01       	movw	r22, r24
    572a:	8e e5       	ldi	r24, 0x5E	; 94
    572c:	97 e4       	ldi	r25, 0x47	; 71
    572e:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
    5732:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5736:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    573a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    573e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    5742:	88 89       	ldd	r24, Y+16	; 0x10
    5744:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
    5748:	03 c0       	rjmp	.+6      	; 0x5750 <_Z33activateEventUsingCurrentSettingsP2SC+0x438>
    574a:	80 e0       	ldi	r24, 0x00	; 0
    574c:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
    5750:	81 e0       	ldi	r24, 0x01	; 1
    5752:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
    5756:	0c c0       	rjmp	.+24     	; 0x5770 <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    5758:	8a 89       	ldd	r24, Y+18	; 0x12
    575a:	9b 89       	ldd	r25, Y+19	; 0x13
    575c:	89 2b       	or	r24, r25
    575e:	29 f0       	breq	.+10     	; 0x576a <_Z33activateEventUsingCurrentSettingsP2SC+0x452>
    5760:	8a 89       	ldd	r24, Y+18	; 0x12
    5762:	9b 89       	ldd	r25, Y+19	; 0x13
    5764:	2f ef       	ldi	r18, 0xFF	; 255
    5766:	fc 01       	movw	r30, r24
    5768:	20 83       	st	Z, r18
    576a:	80 e0       	ldi	r24, 0x00	; 0
    576c:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
    5770:	10 92 97 47 	sts	0x4797, r1	; 0x804797 <g_waiting_for_next_event>
    5774:	8a e5       	ldi	r24, 0x5A	; 90
    5776:	90 e0       	ldi	r25, 0x00	; 0
    5778:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    577c:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    5780:	80 e0       	ldi	r24, 0x00	; 0
    5782:	63 96       	adiw	r28, 0x13	; 19
    5784:	cd bf       	out	0x3d, r28	; 61
    5786:	de bf       	out	0x3e, r29	; 62
    5788:	df 91       	pop	r29
    578a:	cf 91       	pop	r28
    578c:	08 95       	ret

0000578e <_Z8rtc_initv>:
    578e:	cf 93       	push	r28
    5790:	df 93       	push	r29
    5792:	cd b7       	in	r28, 0x3d	; 61
    5794:	de b7       	in	r29, 0x3e	; 62
    5796:	61 e0       	ldi	r22, 0x01	; 1
    5798:	83 e0       	ldi	r24, 0x03	; 3
    579a:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <PORTC_set_pin_pull_mode>
    579e:	61 e0       	ldi	r22, 0x01	; 1
    57a0:	82 e0       	ldi	r24, 0x02	; 2
    57a2:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <PORTC_set_pin_pull_mode>
    57a6:	0e 94 24 3e 	call	0x7c48	; 0x7c48 <ds3231_init>
    57aa:	81 e0       	ldi	r24, 0x01	; 1
    57ac:	0e 94 ba 43 	call	0x8774	; 0x8774 <ds3231_1s_sqw>
    57b0:	88 23       	and	r24, r24
    57b2:	11 f0       	breq	.+4      	; 0x57b8 <_Z8rtc_initv+0x2a>
    57b4:	8c ef       	ldi	r24, 0xFC	; 252
    57b6:	01 c0       	rjmp	.+2      	; 0x57ba <_Z8rtc_initv+0x2c>
    57b8:	80 e0       	ldi	r24, 0x00	; 0
    57ba:	df 91       	pop	r29
    57bc:	cf 91       	pop	r28
    57be:	08 95       	ret

000057c0 <_Z18antennaIsConnectedv>:
    57c0:	cf 93       	push	r28
    57c2:	df 93       	push	r29
    57c4:	1f 92       	push	r1
    57c6:	cd b7       	in	r28, 0x3d	; 61
    57c8:	de b7       	in	r29, 0x3e	; 62
    57ca:	81 e0       	ldi	r24, 0x01	; 1
    57cc:	0e 94 46 10 	call	0x208c	; 0x208c <PORTD_get_pin_level>
    57d0:	89 83       	std	Y+1, r24	; 0x01
    57d2:	99 81       	ldd	r25, Y+1	; 0x01
    57d4:	81 e0       	ldi	r24, 0x01	; 1
    57d6:	89 27       	eor	r24, r25
    57d8:	0f 90       	pop	r0
    57da:	df 91       	pop	r29
    57dc:	cf 91       	pop	r28
    57de:	08 95       	ret

000057e0 <_Z12suspendEventv>:

void suspendEvent()
{
    57e0:	cf 93       	push	r28
    57e2:	df 93       	push	r29
    57e4:	cd b7       	in	r28, 0x3d	; 61
    57e6:	de b7       	in	r29, 0x3e	; 62
	g_event_enabled = false;    /* get things stopped immediately */
    57e8:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
	g_on_the_air = 0;           /*  stop transmitting */
    57ec:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <_ZL12g_on_the_air>
    57f0:	10 92 55 47 	sts	0x4755, r1	; 0x804755 <_ZL12g_on_the_air+0x1>
    57f4:	10 92 56 47 	sts	0x4756, r1	; 0x804756 <_ZL12g_on_the_air+0x2>
    57f8:	10 92 57 47 	sts	0x4757, r1	; 0x804757 <_ZL12g_on_the_air+0x3>
	g_event_commenced = false;  /* get things stopped immediately */
    57fc:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
	keyTransmitter(OFF);
    5800:	80 e0       	ldi	r24, 0x00	; 0
    5802:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
	powerToTransmitter(OFF);
    5806:	80 e0       	ldi	r24, 0x00	; 0
    5808:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
}
    580c:	00 00       	nop
    580e:	df 91       	pop	r29
    5810:	cf 91       	pop	r28
    5812:	08 95       	ret

00005814 <_Z13startEventNow19EventActionSource_t>:


void startEventNow(EventActionSource_t activationSource)
{
    5814:	cf 93       	push	r28
    5816:	df 93       	push	r29
    5818:	00 d0       	rcall	.+0      	; 0x581a <_Z13startEventNow19EventActionSource_t+0x6>
    581a:	cd b7       	in	r28, 0x3d	; 61
    581c:	de b7       	in	r29, 0x3e	; 62
    581e:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    5820:	0e 94 e8 32 	call	0x65d0	; 0x65d0 <_Z23clockConfigurationCheckv>
    5824:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == POWER_UP)
    5826:	8a 81       	ldd	r24, Y+2	; 0x02
    5828:	88 23       	and	r24, r24
    582a:	79 f4       	brne	.+30     	; 0x584a <_Z13startEventNow19EventActionSource_t+0x36>
	{
		if(conf == CONFIGURATION_ERROR)
    582c:	89 81       	ldd	r24, Y+1	; 0x01
    582e:	82 30       	cpi	r24, 0x02	; 2
    5830:	31 f4       	brne	.+12     	; 0x583e <_Z13startEventNow19EventActionSource_t+0x2a>
		{
			setupForFox(NULL, START_NOTHING);
    5832:	60 e0       	ldi	r22, 0x00	; 0
    5834:	80 e0       	ldi	r24, 0x00	; 0
    5836:	90 e0       	ldi	r25, 0x00	; 0
    5838:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    583c:	47 c0       	rjmp	.+142    	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    583e:	63 e0       	ldi	r22, 0x03	; 3
    5840:	80 e0       	ldi	r24, 0x00	; 0
    5842:	90 e0       	ldi	r25, 0x00	; 0
    5844:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5848:	41 c0       	rjmp	.+130    	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
		}
	}
	else if(activationSource == PROGRAMMATIC)
    584a:	8a 81       	ldd	r24, Y+2	; 0x02
    584c:	82 30       	cpi	r24, 0x02	; 2
    584e:	f1 f4       	brne	.+60     	; 0x588c <_Z13startEventNow19EventActionSource_t+0x78>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
    5850:	89 81       	ldd	r24, Y+1	; 0x01
    5852:	82 30       	cpi	r24, 0x02	; 2
    5854:	31 f4       	brne	.+12     	; 0x5862 <_Z13startEventNow19EventActionSource_t+0x4e>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5856:	61 e0       	ldi	r22, 0x01	; 1
    5858:	80 e0       	ldi	r24, 0x00	; 0
    585a:	90 e0       	ldi	r25, 0x00	; 0
    585c:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5860:	35 c0       	rjmp	.+106    	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else if((conf == WAITING_FOR_START) || (conf == SCHEDULED_EVENT_WILL_NEVER_RUN) || (conf == SCHEDULED_EVENT_DID_NOT_START)) /* Start immediately */
    5862:	89 81       	ldd	r24, Y+1	; 0x01
    5864:	81 30       	cpi	r24, 0x01	; 1
    5866:	31 f0       	breq	.+12     	; 0x5874 <_Z13startEventNow19EventActionSource_t+0x60>
    5868:	89 81       	ldd	r24, Y+1	; 0x01
    586a:	84 30       	cpi	r24, 0x04	; 4
    586c:	19 f0       	breq	.+6      	; 0x5874 <_Z13startEventNow19EventActionSource_t+0x60>
    586e:	89 81       	ldd	r24, Y+1	; 0x01
    5870:	83 30       	cpi	r24, 0x03	; 3
    5872:	31 f4       	brne	.+12     	; 0x5880 <_Z13startEventNow19EventActionSource_t+0x6c>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5874:	61 e0       	ldi	r22, 0x01	; 1
    5876:	80 e0       	ldi	r24, 0x00	; 0
    5878:	90 e0       	ldi	r25, 0x00	; 0
    587a:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    587e:	26 c0       	rjmp	.+76     	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /*if((conf == EVENT_IN_PROGRESS) */
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
    5880:	63 e0       	ldi	r22, 0x03	; 3
    5882:	80 e0       	ldi	r24, 0x00	; 0
    5884:	90 e0       	ldi	r25, 0x00	; 0
    5886:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    588a:	20 c0       	rjmp	.+64     	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
		}
	}
	else                                                                                                                            /* PUSHBUTTON */
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* No scheduled event */
    588c:	89 81       	ldd	r24, Y+1	; 0x01
    588e:	82 30       	cpi	r24, 0x02	; 2
    5890:	31 f4       	brne	.+12     	; 0x589e <_Z13startEventNow19EventActionSource_t+0x8a>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5892:	61 e0       	ldi	r22, 0x01	; 1
    5894:	80 e0       	ldi	r24, 0x00	; 0
    5896:	90 e0       	ldi	r25, 0x00	; 0
    5898:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    589c:	17 c0       	rjmp	.+46     	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /* if(buttonActivated) */
		{
			if(conf == WAITING_FOR_START)
    589e:	89 81       	ldd	r24, Y+1	; 0x01
    58a0:	81 30       	cpi	r24, 0x01	; 1
    58a2:	31 f4       	brne	.+12     	; 0x58b0 <_Z13startEventNow19EventActionSource_t+0x9c>
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
    58a4:	62 e0       	ldi	r22, 0x02	; 2
    58a6:	80 e0       	ldi	r24, 0x00	; 0
    58a8:	90 e0       	ldi	r25, 0x00	; 0
    58aa:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    58ae:	0e c0       	rjmp	.+28     	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			if(conf == WAITING_FOR_START)
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
			}
			else if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    58b0:	89 81       	ldd	r24, Y+1	; 0x01
    58b2:	84 30       	cpi	r24, 0x04	; 4
    58b4:	31 f4       	brne	.+12     	; 0x58c2 <_Z13startEventNow19EventActionSource_t+0xae>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
    58b6:	63 e0       	ldi	r22, 0x03	; 3
    58b8:	80 e0       	ldi	r24, 0x00	; 0
    58ba:	90 e0       	ldi	r25, 0x00	; 0
    58bc:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    58c0:	05 c0       	rjmp	.+10     	; 0x58cc <_Z13startEventNow19EventActionSource_t+0xb8>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
			}
			else                                                                                                                    /* Event should be running now */
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* start the running event */
    58c2:	63 e0       	ldi	r22, 0x03	; 3
    58c4:	80 e0       	ldi	r24, 0x00	; 0
    58c6:	90 e0       	ldi	r25, 0x00	; 0
    58c8:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    58cc:	00 00       	nop
    58ce:	0f 90       	pop	r0
    58d0:	0f 90       	pop	r0
    58d2:	df 91       	pop	r29
    58d4:	cf 91       	pop	r28
    58d6:	08 95       	ret

000058d8 <_Z12stopEventNow19EventActionSource_t>:

void stopEventNow(EventActionSource_t activationSource)
{
    58d8:	cf 93       	push	r28
    58da:	df 93       	push	r29
    58dc:	00 d0       	rcall	.+0      	; 0x58de <_Z12stopEventNow19EventActionSource_t+0x6>
    58de:	cd b7       	in	r28, 0x3d	; 61
    58e0:	de b7       	in	r29, 0x3e	; 62
    58e2:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    58e4:	0e 94 e8 32 	call	0x65d0	; 0x65d0 <_Z23clockConfigurationCheckv>
    58e8:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == PROGRAMMATIC)
    58ea:	8a 81       	ldd	r24, Y+2	; 0x02
    58ec:	82 30       	cpi	r24, 0x02	; 2
    58ee:	31 f4       	brne	.+12     	; 0x58fc <_Z12stopEventNow19EventActionSource_t+0x24>
	{
		setupForFox(NULL, START_NOTHING);
    58f0:	60 e0       	ldi	r22, 0x00	; 0
    58f2:	80 e0       	ldi	r24, 0x00	; 0
    58f4:	90 e0       	ldi	r25, 0x00	; 0
    58f6:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    58fa:	16 c0       	rjmp	.+44     	; 0x5928 <_Z12stopEventNow19EventActionSource_t+0x50>
	{
		setupForFox(NULL, START_NOTHING);
	}
	else    /* if(activationSource == PUSHBUTTON) */
	{
		if(conf == WAITING_FOR_START)
    58fc:	89 81       	ldd	r24, Y+1	; 0x01
    58fe:	81 30       	cpi	r24, 0x01	; 1
    5900:	29 f4       	brne	.+10     	; 0x590c <_Z12stopEventNow19EventActionSource_t+0x34>
		{
			setupForFox(NULL, START_TRANSMISSIONS_NOW);
    5902:	62 e0       	ldi	r22, 0x02	; 2
    5904:	80 e0       	ldi	r24, 0x00	; 0
    5906:	90 e0       	ldi	r25, 0x00	; 0
    5908:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
		}
		if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    590c:	89 81       	ldd	r24, Y+1	; 0x01
    590e:	84 30       	cpi	r24, 0x04	; 4
    5910:	31 f4       	brne	.+12     	; 0x591e <_Z12stopEventNow19EventActionSource_t+0x46>
		{
			setupForFox(NULL, START_NOTHING);
    5912:	60 e0       	ldi	r22, 0x00	; 0
    5914:	80 e0       	ldi	r24, 0x00	; 0
    5916:	90 e0       	ldi	r25, 0x00	; 0
    5918:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    591c:	05 c0       	rjmp	.+10     	; 0x5928 <_Z12stopEventNow19EventActionSource_t+0x50>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else    /*if(conf == CONFIGURATION_ERROR) */
		{
			setupForFox(NULL, START_NOTHING);
    591e:	60 e0       	ldi	r22, 0x00	; 0
    5920:	80 e0       	ldi	r24, 0x00	; 0
    5922:	90 e0       	ldi	r25, 0x00	; 0
    5924:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    5928:	00 00       	nop
    592a:	0f 90       	pop	r0
    592c:	0f 90       	pop	r0
    592e:	df 91       	pop	r29
    5930:	cf 91       	pop	r28
    5932:	08 95       	ret

00005934 <_Z18startEventUsingRTCv>:

void startEventUsingRTC(void)
{
    5934:	ef 92       	push	r14
    5936:	ff 92       	push	r15
    5938:	0f 93       	push	r16
    593a:	1f 93       	push	r17
    593c:	cf 93       	push	r28
    593e:	df 93       	push	r29
    5940:	1f 92       	push	r1
    5942:	cd b7       	in	r28, 0x3d	; 61
    5944:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    5946:	80 e0       	ldi	r24, 0x00	; 0
    5948:	90 e0       	ldi	r25, 0x00	; 0
    594a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    594e:	dc 01       	movw	r26, r24
    5950:	cb 01       	movw	r24, r22
    5952:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    5956:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    595a:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    595e:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>
	ConfigurationState_t state = clockConfigurationCheck();
    5962:	0e 94 e8 32 	call	0x65d0	; 0x65d0 <_Z23clockConfigurationCheckv>
    5966:	89 83       	std	Y+1, r24	; 0x01

	if(state != CONFIGURATION_ERROR)
    5968:	89 81       	ldd	r24, Y+1	; 0x01
    596a:	82 30       	cpi	r24, 0x02	; 2
    596c:	09 f4       	brne	.+2      	; 0x5970 <_Z18startEventUsingRTCv+0x3c>
    596e:	6c c0       	rjmp	.+216    	; 0x5a48 <_Z18startEventUsingRTCv+0x114>
	{
		setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    5970:	63 e0       	ldi	r22, 0x03	; 3
    5972:	80 e0       	ldi	r24, 0x00	; 0
    5974:	90 e0       	ldi	r25, 0x00	; 0
    5976:	0e 94 2f 2d 	call	0x5a5e	; 0x5a5e <_Z11setupForFoxP5Fox_t13EventAction_t>
		reportTimeTill(g_current_epoch, g_event_start_epoch, "Starts in: ", "In progress\n");
    597a:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    597e:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5982:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5986:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    598a:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    598e:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    5992:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    5996:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    599a:	0f 2e       	mov	r0, r31
    599c:	f5 e3       	ldi	r31, 0x35	; 53
    599e:	ef 2e       	mov	r14, r31
    59a0:	f1 e4       	ldi	r31, 0x41	; 65
    59a2:	ff 2e       	mov	r15, r31
    59a4:	f0 2d       	mov	r31, r0
    59a6:	02 e4       	ldi	r16, 0x42	; 66
    59a8:	11 e4       	ldi	r17, 0x41	; 65
    59aa:	bc 01       	movw	r22, r24
    59ac:	cd 01       	movw	r24, r26
    59ae:	0e 94 46 31 	call	0x628c	; 0x628c <_Z14reportTimeTillmmPKcS0_>

		if(g_event_start_epoch < g_current_epoch)
    59b2:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    59b6:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    59ba:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    59be:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    59c2:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    59c6:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    59ca:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    59ce:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    59d2:	61 e0       	ldi	r22, 0x01	; 1
    59d4:	28 17       	cp	r18, r24
    59d6:	39 07       	cpc	r19, r25
    59d8:	4a 07       	cpc	r20, r26
    59da:	5b 07       	cpc	r21, r27
    59dc:	08 f0       	brcs	.+2      	; 0x59e0 <_Z18startEventUsingRTCv+0xac>
    59de:	60 e0       	ldi	r22, 0x00	; 0
    59e0:	66 23       	and	r22, r22
    59e2:	c9 f0       	breq	.+50     	; 0x5a16 <_Z18startEventUsingRTCv+0xe2>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
    59e4:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    59e8:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    59ec:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    59f0:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    59f4:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    59f8:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    59fc:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    5a00:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    5a04:	e1 2c       	mov	r14, r1
    5a06:	f1 2c       	mov	r15, r1
    5a08:	06 e5       	ldi	r16, 0x56	; 86
    5a0a:	11 e4       	ldi	r17, 0x41	; 65
    5a0c:	bc 01       	movw	r22, r24
    5a0e:	cd 01       	movw	r24, r26
    5a10:	0e 94 46 31 	call	0x628c	; 0x628c <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5a14:	1b c0       	rjmp	.+54     	; 0x5a4c <_Z18startEventUsingRTCv+0x118>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
		}
		else
		{
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
    5a16:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    5a1a:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5a1e:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5a22:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5a26:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    5a2a:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5a2e:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5a32:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5a36:	e1 2c       	mov	r14, r1
    5a38:	f1 2c       	mov	r15, r1
    5a3a:	0e e4       	ldi	r16, 0x4E	; 78
    5a3c:	11 e4       	ldi	r17, 0x41	; 65
    5a3e:	bc 01       	movw	r22, r24
    5a40:	cd 01       	movw	r24, r26
    5a42:	0e 94 46 31 	call	0x628c	; 0x628c <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    5a46:	02 c0       	rjmp	.+4      	; 0x5a4c <_Z18startEventUsingRTCv+0x118>
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
		}
	}
	else
	{
		reportConfigErrors();
    5a48:	0e 94 7f 33 	call	0x66fe	; 0x66fe <_Z18reportConfigErrorsv>
	}
}
    5a4c:	00 00       	nop
    5a4e:	0f 90       	pop	r0
    5a50:	df 91       	pop	r29
    5a52:	cf 91       	pop	r28
    5a54:	1f 91       	pop	r17
    5a56:	0f 91       	pop	r16
    5a58:	ff 90       	pop	r15
    5a5a:	ef 90       	pop	r14
    5a5c:	08 95       	ret

00005a5e <_Z11setupForFoxP5Fox_t13EventAction_t>:



void setupForFox(Fox_t* fox, EventAction_t action)
{
    5a5e:	cf 93       	push	r28
    5a60:	df 93       	push	r29
    5a62:	cd b7       	in	r28, 0x3d	; 61
    5a64:	de b7       	in	r29, 0x3e	; 62
    5a66:	2c 97       	sbiw	r28, 0x0c	; 12
    5a68:	cd bf       	out	0x3d, r28	; 61
    5a6a:	de bf       	out	0x3e, r29	; 62
    5a6c:	8a 87       	std	Y+10, r24	; 0x0a
    5a6e:	9b 87       	std	Y+11, r25	; 0x0b
    5a70:	6c 87       	std	Y+12, r22	; 0x0c
	bool patternNotSet = true;
    5a72:	81 e0       	ldi	r24, 0x01	; 1
    5a74:	89 83       	std	Y+1, r24	; 0x01
	
	if(fox)
    5a76:	8a 85       	ldd	r24, Y+10	; 0x0a
    5a78:	9b 85       	ldd	r25, Y+11	; 0x0b
    5a7a:	89 2b       	or	r24, r25
    5a7c:	61 f0       	breq	.+24     	; 0x5a96 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
	{
		if(*fox != INVALID_FOX)
    5a7e:	8a 85       	ldd	r24, Y+10	; 0x0a
    5a80:	9b 85       	ldd	r25, Y+11	; 0x0b
    5a82:	fc 01       	movw	r30, r24
    5a84:	80 81       	ld	r24, Z
    5a86:	82 31       	cpi	r24, 0x12	; 18
    5a88:	31 f0       	breq	.+12     	; 0x5a96 <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
		{
			g_fox = *fox;
    5a8a:	8a 85       	ldd	r24, Y+10	; 0x0a
    5a8c:	9b 85       	ldd	r25, Y+11	; 0x0b
    5a8e:	fc 01       	movw	r30, r24
    5a90:	80 81       	ld	r24, Z
    5a92:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
		}
	}

	g_event_enabled = false;
    5a96:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
	g_event_commenced = false;
    5a9a:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
	LED_set_RED_level(OFF);
    5a9e:	80 e0       	ldi	r24, 0x00	; 0
    5aa0:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
 	g_current_epoch = ds3231_get_epoch(null);
    5aa4:	80 e0       	ldi	r24, 0x00	; 0
    5aa6:	90 e0       	ldi	r25, 0x00	; 0
    5aa8:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    5aac:	dc 01       	movw	r26, r24
    5aae:	cb 01       	movw	r24, r22
    5ab0:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    5ab4:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    5ab8:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    5abc:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>

	switch(g_fox)
    5ac0:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    5ac4:	88 2f       	mov	r24, r24
    5ac6:	90 e0       	ldi	r25, 0x00	; 0
    5ac8:	09 2e       	mov	r0, r25
    5aca:	00 0c       	add	r0, r0
    5acc:	aa 0b       	sbc	r26, r26
    5ace:	bb 0b       	sbc	r27, r27
    5ad0:	41 e0       	ldi	r20, 0x01	; 1
    5ad2:	50 e0       	ldi	r21, 0x00	; 0
    5ad4:	20 e1       	ldi	r18, 0x10	; 16
    5ad6:	30 e0       	ldi	r19, 0x00	; 0
    5ad8:	84 1b       	sub	r24, r20
    5ada:	95 0b       	sbc	r25, r21
    5adc:	28 17       	cp	r18, r24
    5ade:	39 07       	cpc	r19, r25
    5ae0:	08 f4       	brcc	.+2      	; 0x5ae4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x86>
    5ae2:	a1 c1       	rjmp	.+834    	; 0x5e26 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c8>
    5ae4:	8c 58       	subi	r24, 0x8C	; 140
    5ae6:	9f 4f       	sbci	r25, 0xFF	; 255
    5ae8:	fc 01       	movw	r30, r24
    5aea:	0c 94 2d 7a 	jmp	0xf45a	; 0xf45a <__tablejump2__>
	{
		case FOX_1:
		{
			if(patternNotSet)
    5aee:	89 81       	ldd	r24, Y+1	; 0x01
    5af0:	88 23       	and	r24, r24
    5af2:	89 f0       	breq	.+34     	; 0x5b16 <_Z11setupForFoxP5Fox_t13EventAction_t+0xb8>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    5af4:	8d e4       	ldi	r24, 0x4D	; 77
    5af6:	9f e4       	ldi	r25, 0x4F	; 79
    5af8:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5afc:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5b00:	85 e4       	ldi	r24, 0x45	; 69
    5b02:	90 e0       	ldi	r25, 0x00	; 0
    5b04:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5b08:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5b0c:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5b0e:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5b12:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    5b16:	89 81       	ldd	r24, Y+1	; 0x01
    5b18:	88 23       	and	r24, r24
    5b1a:	99 f0       	breq	.+38     	; 0x5b42 <_Z11setupForFoxP5Fox_t13EventAction_t+0xe4>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    5b1c:	8d e4       	ldi	r24, 0x4D	; 77
    5b1e:	9f e4       	ldi	r25, 0x4F	; 79
    5b20:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5b24:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5b28:	89 e4       	ldi	r24, 0x49	; 73
    5b2a:	90 e0       	ldi	r25, 0x00	; 0
    5b2c:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5b30:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5b34:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 60;
    5b36:	8c e3       	ldi	r24, 0x3C	; 60
    5b38:	90 e0       	ldi	r25, 0x00	; 0
    5b3a:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5b3e:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    5b42:	89 81       	ldd	r24, Y+1	; 0x01
    5b44:	88 23       	and	r24, r24
    5b46:	99 f0       	breq	.+38     	; 0x5b6e <_Z11setupForFoxP5Fox_t13EventAction_t+0x110>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    5b48:	8d e4       	ldi	r24, 0x4D	; 77
    5b4a:	9f e4       	ldi	r25, 0x4F	; 79
    5b4c:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5b50:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5b54:	83 e5       	ldi	r24, 0x53	; 83
    5b56:	90 e0       	ldi	r25, 0x00	; 0
    5b58:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5b5c:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5b60:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 120;
    5b62:	88 e7       	ldi	r24, 0x78	; 120
    5b64:	90 e0       	ldi	r25, 0x00	; 0
    5b66:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5b6a:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    5b6e:	89 81       	ldd	r24, Y+1	; 0x01
    5b70:	88 23       	and	r24, r24
    5b72:	99 f0       	breq	.+38     	; 0x5b9a <_Z11setupForFoxP5Fox_t13EventAction_t+0x13c>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    5b74:	8d e4       	ldi	r24, 0x4D	; 77
    5b76:	9f e4       	ldi	r25, 0x4F	; 79
    5b78:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5b7c:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5b80:	88 e4       	ldi	r24, 0x48	; 72
    5b82:	90 e0       	ldi	r25, 0x00	; 0
    5b84:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5b88:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				patternNotSet = false;
    5b8c:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 180;
    5b8e:	84 eb       	ldi	r24, 0xB4	; 180
    5b90:	90 e0       	ldi	r25, 0x00	; 0
    5b92:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5b96:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    5b9a:	89 81       	ldd	r24, Y+1	; 0x01
    5b9c:	88 23       	and	r24, r24
    5b9e:	91 f0       	breq	.+36     	; 0x5bc4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x166>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    5ba0:	8d e4       	ldi	r24, 0x4D	; 77
    5ba2:	9f e4       	ldi	r25, 0x4F	; 79
    5ba4:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5ba8:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5bac:	85 e3       	ldi	r24, 0x35	; 53
    5bae:	90 e0       	ldi	r25, 0x00	; 0
    5bb0:	80 93 60 47 	sts	0x4760, r24	; 0x804760 <g_messages_text+0x2>
    5bb4:	90 93 61 47 	sts	0x4761, r25	; 0x804761 <g_messages_text+0x3>
				g_intra_cycle_delay_time = 240;
    5bb8:	80 ef       	ldi	r24, 0xF0	; 240
    5bba:	90 e0       	ldi	r25, 0x00	; 0
    5bbc:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5bc0:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5bc4:	81 e0       	ldi	r24, 0x01	; 1
    5bc6:	8a 83       	std	Y+2, r24	; 0x02
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5bc8:	ce 01       	movw	r24, r28
    5bca:	02 96       	adiw	r24, 0x02	; 2
    5bcc:	40 e0       	ldi	r20, 0x00	; 0
    5bce:	50 e0       	ldi	r21, 0x00	; 0
    5bd0:	bc 01       	movw	r22, r24
    5bd2:	8e e5       	ldi	r24, 0x5E	; 94
    5bd4:	97 e4       	ldi	r25, 0x47	; 71
    5bd6:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5bda:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5bde:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    5be2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5be6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 60;			/* wait 1 minute to send the ID */
    5bea:	8c e3       	ldi	r24, 0x3C	; 60
    5bec:	90 e0       	ldi	r25, 0x00	; 0
    5bee:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5bf2:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5bf6:	8c e3       	ldi	r24, 0x3C	; 60
    5bf8:	90 e0       	ldi	r25, 0x00	; 0
    5bfa:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5bfe:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    5c02:	80 ef       	ldi	r24, 0xF0	; 240
    5c04:	90 e0       	ldi	r25, 0x00	; 0
    5c06:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5c0a:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5c0e:	41 c1       	rjmp	.+642    	; 0x5e92 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_S1:
		{
			if(patternNotSet)
    5c10:	89 81       	ldd	r24, Y+1	; 0x01
    5c12:	88 23       	and	r24, r24
    5c14:	69 f0       	breq	.+26     	; 0x5c30 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "ME");
    5c16:	8d e4       	ldi	r24, 0x4D	; 77
    5c18:	95 e4       	ldi	r25, 0x45	; 69
    5c1a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5c1e:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5c22:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5c26:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5c28:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5c2c:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S2:
		{
			if(patternNotSet)
    5c30:	89 81       	ldd	r24, Y+1	; 0x01
    5c32:	88 23       	and	r24, r24
    5c34:	79 f0       	breq	.+30     	; 0x5c54 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MI");
    5c36:	8d e4       	ldi	r24, 0x4D	; 77
    5c38:	99 e4       	ldi	r25, 0x49	; 73
    5c3a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5c3e:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5c42:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5c46:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5c48:	8c e0       	ldi	r24, 0x0C	; 12
    5c4a:	90 e0       	ldi	r25, 0x00	; 0
    5c4c:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5c50:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S3:
		{
			if(patternNotSet)
    5c54:	89 81       	ldd	r24, Y+1	; 0x01
    5c56:	88 23       	and	r24, r24
    5c58:	79 f0       	breq	.+30     	; 0x5c78 <_Z11setupForFoxP5Fox_t13EventAction_t+0x21a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MS");
    5c5a:	8d e4       	ldi	r24, 0x4D	; 77
    5c5c:	93 e5       	ldi	r25, 0x53	; 83
    5c5e:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5c62:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5c66:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5c6a:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5c6c:	88 e1       	ldi	r24, 0x18	; 24
    5c6e:	90 e0       	ldi	r25, 0x00	; 0
    5c70:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5c74:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S4:
		{
			if(patternNotSet)
    5c78:	89 81       	ldd	r24, Y+1	; 0x01
    5c7a:	88 23       	and	r24, r24
    5c7c:	79 f0       	breq	.+30     	; 0x5c9c <_Z11setupForFoxP5Fox_t13EventAction_t+0x23e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MH");
    5c7e:	8d e4       	ldi	r24, 0x4D	; 77
    5c80:	98 e4       	ldi	r25, 0x48	; 72
    5c82:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5c86:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5c8a:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5c8e:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5c90:	84 e2       	ldi	r24, 0x24	; 36
    5c92:	90 e0       	ldi	r25, 0x00	; 0
    5c94:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5c98:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S5:
		{
			{
				if(patternNotSet)
    5c9c:	89 81       	ldd	r24, Y+1	; 0x01
    5c9e:	88 23       	and	r24, r24
    5ca0:	71 f0       	breq	.+28     	; 0x5cbe <_Z11setupForFoxP5Fox_t13EventAction_t+0x260>
				{
					sprintf(g_messages_text[PATTERN_TEXT], "M5");
    5ca2:	8d e4       	ldi	r24, 0x4D	; 77
    5ca4:	95 e3       	ldi	r25, 0x35	; 53
    5ca6:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5caa:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5cae:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
					g_intra_cycle_delay_time = 48;
    5cb2:	80 e3       	ldi	r24, 0x30	; 48
    5cb4:	90 e0       	ldi	r25, 0x00	; 0
    5cb6:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5cba:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
				}
			}
			
			bool repeat = true;
    5cbe:	81 e0       	ldi	r24, 0x01	; 1
    5cc0:	8b 83       	std	Y+3, r24	; 0x03
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5cc2:	ce 01       	movw	r24, r28
    5cc4:	03 96       	adiw	r24, 0x03	; 3
    5cc6:	40 e0       	ldi	r20, 0x00	; 0
    5cc8:	50 e0       	ldi	r21, 0x00	; 0
    5cca:	bc 01       	movw	r22, r24
    5ccc:	8e e5       	ldi	r24, 0x5E	; 94
    5cce:	97 e4       	ldi	r25, 0x47	; 71
    5cd0:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5cd4:	88 e0       	ldi	r24, 0x08	; 8
    5cd6:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5cda:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5cde:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    5ce2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5ce6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5cea:	88 e5       	ldi	r24, 0x58	; 88
    5cec:	92 e0       	ldi	r25, 0x02	; 2
    5cee:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5cf2:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5cf6:	8c e0       	ldi	r24, 0x0C	; 12
    5cf8:	90 e0       	ldi	r25, 0x00	; 0
    5cfa:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5cfe:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5d02:	80 e3       	ldi	r24, 0x30	; 48
    5d04:	90 e0       	ldi	r25, 0x00	; 0
    5d06:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5d0a:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5d0e:	c1 c0       	rjmp	.+386    	; 0x5e92 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_F1:
		{
			if(patternNotSet)
    5d10:	89 81       	ldd	r24, Y+1	; 0x01
    5d12:	88 23       	and	r24, r24
    5d14:	69 f0       	breq	.+26     	; 0x5d30 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OE");
    5d16:	8f e4       	ldi	r24, 0x4F	; 79
    5d18:	95 e4       	ldi	r25, 0x45	; 69
    5d1a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d1e:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d22:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5d26:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    5d28:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5d2c:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F2:
		{
			if(patternNotSet)
    5d30:	89 81       	ldd	r24, Y+1	; 0x01
    5d32:	88 23       	and	r24, r24
    5d34:	79 f0       	breq	.+30     	; 0x5d54 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OI");
    5d36:	8f e4       	ldi	r24, 0x4F	; 79
    5d38:	99 e4       	ldi	r25, 0x49	; 73
    5d3a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d3e:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d42:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5d46:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    5d48:	8c e0       	ldi	r24, 0x0C	; 12
    5d4a:	90 e0       	ldi	r25, 0x00	; 0
    5d4c:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5d50:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F3:
		{
			if(patternNotSet)
    5d54:	89 81       	ldd	r24, Y+1	; 0x01
    5d56:	88 23       	and	r24, r24
    5d58:	79 f0       	breq	.+30     	; 0x5d78 <_Z11setupForFoxP5Fox_t13EventAction_t+0x31a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OS");
    5d5a:	8f e4       	ldi	r24, 0x4F	; 79
    5d5c:	93 e5       	ldi	r25, 0x53	; 83
    5d5e:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d62:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d66:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5d6a:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5d6c:	88 e1       	ldi	r24, 0x18	; 24
    5d6e:	90 e0       	ldi	r25, 0x00	; 0
    5d70:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5d74:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F4:
		{
			if(patternNotSet)
    5d78:	89 81       	ldd	r24, Y+1	; 0x01
    5d7a:	88 23       	and	r24, r24
    5d7c:	79 f0       	breq	.+30     	; 0x5d9c <_Z11setupForFoxP5Fox_t13EventAction_t+0x33e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OH");
    5d7e:	8f e4       	ldi	r24, 0x4F	; 79
    5d80:	98 e4       	ldi	r25, 0x48	; 72
    5d82:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5d86:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5d8a:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				patternNotSet = false;
    5d8e:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5d90:	84 e2       	ldi	r24, 0x24	; 36
    5d92:	90 e0       	ldi	r25, 0x00	; 0
    5d94:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5d98:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F5:
		{
			if(patternNotSet)
    5d9c:	89 81       	ldd	r24, Y+1	; 0x01
    5d9e:	88 23       	and	r24, r24
    5da0:	71 f0       	breq	.+28     	; 0x5dbe <_Z11setupForFoxP5Fox_t13EventAction_t+0x360>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "O5");
    5da2:	8f e4       	ldi	r24, 0x4F	; 79
    5da4:	95 e3       	ldi	r25, 0x35	; 53
    5da6:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5daa:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5dae:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
				g_intra_cycle_delay_time = 48;
    5db2:	80 e3       	ldi	r24, 0x30	; 48
    5db4:	90 e0       	ldi	r25, 0x00	; 0
    5db6:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    5dba:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5dbe:	81 e0       	ldi	r24, 0x01	; 1
    5dc0:	8c 83       	std	Y+4, r24	; 0x04
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5dc2:	ce 01       	movw	r24, r28
    5dc4:	04 96       	adiw	r24, 0x04	; 4
    5dc6:	40 e0       	ldi	r20, 0x00	; 0
    5dc8:	50 e0       	ldi	r21, 0x00	; 0
    5dca:	bc 01       	movw	r22, r24
    5dcc:	8e e5       	ldi	r24, 0x5E	; 94
    5dce:	97 e4       	ldi	r25, 0x47	; 71
    5dd0:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 15;
    5dd4:	8f e0       	ldi	r24, 0x0F	; 15
    5dd6:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5dda:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5dde:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    5de2:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5de6:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5dea:	88 e5       	ldi	r24, 0x58	; 88
    5dec:	92 e0       	ldi	r25, 0x02	; 2
    5dee:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5df2:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5df6:	8c e0       	ldi	r24, 0x0C	; 12
    5df8:	90 e0       	ldi	r25, 0x00	; 0
    5dfa:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5dfe:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5e02:	80 e3       	ldi	r24, 0x30	; 48
    5e04:	90 e0       	ldi	r25, 0x00	; 0
    5e06:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5e0a:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5e0e:	41 c0       	rjmp	.+130    	; 0x5e92 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>
#endif // SUPPORT_TEMP_AND_VOLTAGE_REPORTING


		case SPECTATOR:
		{
			sprintf(g_messages_text[PATTERN_TEXT], "S");
    5e10:	83 e5       	ldi	r24, 0x53	; 83
    5e12:	90 e0       	ldi	r25, 0x00	; 0
    5e14:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5e18:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
			patternNotSet = false;
    5e1c:	19 82       	std	Y+1, r1	; 0x01
			g_intra_cycle_delay_time = 0;
    5e1e:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5e22:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
		}
		case BEACON:
		default:
		{
			if(patternNotSet)
    5e26:	89 81       	ldd	r24, Y+1	; 0x01
    5e28:	88 23       	and	r24, r24
    5e2a:	41 f0       	breq	.+16     	; 0x5e3c <_Z11setupForFoxP5Fox_t13EventAction_t+0x3de>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO");
    5e2c:	8d e4       	ldi	r24, 0x4D	; 77
    5e2e:	9f e4       	ldi	r25, 0x4F	; 79
    5e30:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
    5e34:	90 93 5f 47 	sts	0x475F, r25	; 0x80475f <g_messages_text+0x1>
    5e38:	10 92 60 47 	sts	0x4760, r1	; 0x804760 <g_messages_text+0x2>
			}
			
			g_intra_cycle_delay_time = 0;
    5e3c:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    5e40:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			bool repeat = true;
    5e44:	81 e0       	ldi	r24, 0x01	; 1
    5e46:	8d 83       	std	Y+5, r24	; 0x05
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5e48:	ce 01       	movw	r24, r28
    5e4a:	05 96       	adiw	r24, 0x05	; 5
    5e4c:	40 e0       	ldi	r20, 0x00	; 0
    5e4e:	50 e0       	ldi	r21, 0x00	; 0
    5e50:	bc 01       	movw	r22, r24
    5e52:	8e e5       	ldi	r24, 0x5E	; 94
    5e54:	97 e4       	ldi	r25, 0x47	; 71
    5e56:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5e5a:	88 e0       	ldi	r24, 0x08	; 8
    5e5c:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5e60:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5e64:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    5e68:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5e6c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5e70:	88 e5       	ldi	r24, 0x58	; 88
    5e72:	92 e0       	ldi	r25, 0x02	; 2
    5e74:	80 93 58 47 	sts	0x4758, r24	; 0x804758 <_ZL26g_sendID_seconds_countdown>
    5e78:	90 93 59 47 	sts	0x4759, r25	; 0x804759 <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5e7c:	8c e3       	ldi	r24, 0x3C	; 60
    5e7e:	90 e0       	ldi	r25, 0x00	; 0
    5e80:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5e84:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 0;						/* off period is very short */
    5e88:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    5e8c:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5e90:	00 00       	nop
	}

	if(action == START_NOTHING)
    5e92:	8c 85       	ldd	r24, Y+12	; 0x0c
    5e94:	88 23       	and	r24, r24
    5e96:	91 f4       	brne	.+36     	; 0x5ebc <_Z11setupForFoxP5Fox_t13EventAction_t+0x45e>
	{
		g_event_commenced = false;                   /* get things running immediately */
    5e98:	10 92 95 47 	sts	0x4795, r1	; 0x804795 <g_event_commenced>
		g_event_enabled = false;                     /* get things running immediately */
    5e9c:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>

 		g_use_rtc_for_startstop = false;
    5ea0:	10 92 b9 47 	sts	0x47B9, r1	; 0x8047b9 <g_use_rtc_for_startstop>
 		g_event_enabled = false;
    5ea4:	10 92 94 47 	sts	0x4794, r1	; 0x804794 <g_event_enabled>
		keyTransmitter(OFF);
    5ea8:	80 e0       	ldi	r24, 0x00	; 0
    5eaa:	0e 94 83 6f 	call	0xdf06	; 0xdf06 <_Z14keyTransmitterb>
		LED_set_RED_level(OFF);
    5eae:	80 e0       	ldi	r24, 0x00	; 0
    5eb0:	0e 94 65 10 	call	0x20ca	; 0x20ca <LED_set_RED_level>
		powerToTransmitter(OFF);
    5eb4:	80 e0       	ldi	r24, 0x00	; 0
    5eb6:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5eba:	af c0       	rjmp	.+350    	; 0x601a <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
 		g_event_enabled = false;
		keyTransmitter(OFF);
		LED_set_RED_level(OFF);
		powerToTransmitter(OFF);
	}
	else if(action == START_EVENT_NOW)
    5ebc:	8c 85       	ldd	r24, Y+12	; 0x0c
    5ebe:	81 30       	cpi	r24, 0x01	; 1
    5ec0:	09 f0       	breq	.+2      	; 0x5ec4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x466>
    5ec2:	72 c0       	rjmp	.+228    	; 0x5fa8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x54a>
//  		g_event_enabled = true;
// 		g_event_commenced = true;					/* get things running immediately */
// 		g_event_enabled = true;						/* get things running immediately */

		EC result;
		g_current_epoch = ds3231_get_epoch(&result);
    5ec4:	ce 01       	movw	r24, r28
    5ec6:	06 96       	adiw	r24, 0x06	; 6
    5ec8:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    5ecc:	dc 01       	movw	r26, r24
    5ece:	cb 01       	movw	r24, r22
    5ed0:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    5ed4:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    5ed8:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    5edc:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>
		
		if(result == ERROR_CODE_NO_ERROR)
    5ee0:	8e 81       	ldd	r24, Y+6	; 0x06
    5ee2:	88 23       	and	r24, r24
    5ee4:	e9 f5       	brne	.+122    	; 0x5f60 <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
		{
			g_event_start_epoch = g_current_epoch;
    5ee6:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    5eea:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    5eee:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    5ef2:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    5ef6:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    5efa:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    5efe:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    5f02:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
			if(g_event_start_epoch > g_event_finish_epoch)
    5f06:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    5f0a:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5f0e:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5f12:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5f16:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    5f1a:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    5f1e:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    5f22:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    5f26:	61 e0       	ldi	r22, 0x01	; 1
    5f28:	82 17       	cp	r24, r18
    5f2a:	93 07       	cpc	r25, r19
    5f2c:	a4 07       	cpc	r26, r20
    5f2e:	b5 07       	cpc	r27, r21
    5f30:	08 f0       	brcs	.+2      	; 0x5f34 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4d6>
    5f32:	60 e0       	ldi	r22, 0x00	; 0
    5f34:	66 23       	and	r22, r22
    5f36:	a1 f0       	breq	.+40     	; 0x5f60 <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
			{
				g_event_finish_epoch = g_event_start_epoch + DAY;
    5f38:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    5f3c:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    5f40:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    5f44:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    5f48:	80 58       	subi	r24, 0x80	; 128
    5f4a:	9e 4a       	sbci	r25, 0xAE	; 174
    5f4c:	ae 4f       	sbci	r26, 0xFE	; 254
    5f4e:	bf 4f       	sbci	r27, 0xFF	; 255
    5f50:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    5f54:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    5f58:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    5f5c:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
			}
		}
		
		SC status = STATUS_CODE_IDLE;
    5f60:	1f 82       	std	Y+7, r1	; 0x07
		result = launchEvent(&status);
    5f62:	ce 01       	movw	r24, r28
    5f64:	07 96       	adiw	r24, 0x07	; 7
    5f66:	0e 94 61 29 	call	0x52c2	; 0x52c2 <_Z11launchEventP2SC>
    5f6a:	8e 83       	std	Y+6, r24	; 0x06
		
		if(g_go_to_sleep && g_sleepType)
    5f6c:	80 91 98 47 	lds	r24, 0x4798	; 0x804798 <_ZL13g_go_to_sleep>
    5f70:	88 23       	and	r24, r24
    5f72:	31 f0       	breq	.+12     	; 0x5f80 <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5f74:	80 91 5d 47 	lds	r24, 0x475D	; 0x80475d <_ZL11g_sleepType>
    5f78:	88 23       	and	r24, r24
    5f7a:	11 f0       	breq	.+4      	; 0x5f80 <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5f7c:	81 e0       	ldi	r24, 0x01	; 1
    5f7e:	01 c0       	rjmp	.+2      	; 0x5f82 <_Z11setupForFoxP5Fox_t13EventAction_t+0x524>
    5f80:	80 e0       	ldi	r24, 0x00	; 0
    5f82:	88 23       	and	r24, r24
    5f84:	29 f0       	breq	.+10     	; 0x5f90 <_Z11setupForFoxP5Fox_t13EventAction_t+0x532>
		{
			g_sleepType = SLEEP_AFTER_WIFI_GOES_OFF;
    5f86:	83 e0       	ldi	r24, 0x03	; 3
    5f88:	80 93 5d 47 	sts	0x475D, r24	; 0x80475d <_ZL11g_sleepType>
			g_go_to_sleep = false;
    5f8c:	10 92 98 47 	sts	0x4798, r1	; 0x804798 <_ZL13g_go_to_sleep>
		}

		g_WiFi_shutdown_seconds = 60;
    5f90:	8c e3       	ldi	r24, 0x3C	; 60
    5f92:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>

		if(!result)
    5f96:	8e 81       	ldd	r24, Y+6	; 0x06
    5f98:	88 23       	and	r24, r24
    5f9a:	09 f0       	breq	.+2      	; 0x5f9e <_Z11setupForFoxP5Fox_t13EventAction_t+0x540>
    5f9c:	3e c0       	rjmp	.+124    	; 0x601a <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		{
			g_ee_mgr.saveAllEEPROM();
    5f9e:	8b ea       	ldi	r24, 0xAB	; 171
    5fa0:	97 e4       	ldi	r25, 0x47	; 71
    5fa2:	0e 94 ba 47 	call	0x8f74	; 0x8f74 <_ZN13EepromManager13saveAllEEPROMEv>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5fa6:	39 c0       	rjmp	.+114    	; 0x601a <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		if(!result)
		{
			g_ee_mgr.saveAllEEPROM();
		}
	}
	else if(action == START_TRANSMISSIONS_NOW)                                  /* Immediately start transmitting, regardless RTC or time slot */
    5fa8:	8c 85       	ldd	r24, Y+12	; 0x0c
    5faa:	82 30       	cpi	r24, 0x02	; 2
    5fac:	91 f5       	brne	.+100    	; 0x6012 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b4>
	{
		bool repeat = true;
    5fae:	81 e0       	ldi	r24, 0x01	; 1
    5fb0:	88 87       	std	Y+8, r24	; 0x08
		makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5fb2:	ce 01       	movw	r24, r28
    5fb4:	08 96       	adiw	r24, 0x08	; 8
    5fb6:	40 e0       	ldi	r20, 0x00	; 0
    5fb8:	50 e0       	ldi	r21, 0x00	; 0
    5fba:	bc 01       	movw	r22, r24
    5fbc:	8e e5       	ldi	r24, 0x5E	; 94
    5fbe:	97 e4       	ldi	r25, 0x47	; 71
    5fc0:	0e 94 ce 5a 	call	0xb59c	; 0xb59c <_Z9makeMorsePcPbS0_>
		g_code_throttle = throttleValue(g_pattern_codespeed);
    5fc4:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5fc8:	0e 94 07 29 	call	0x520e	; 0x520e <_Z13throttleValueh>
    5fcc:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5fd0:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

// 		g_event_start_epoch = 1;                     /* have it start a long time ago */
// 		g_event_finish_epoch = MAX_TIME;             /* run for a long long time */
		g_on_the_air = g_on_air_seconds;			/* start out transmitting */
    5fd4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5fd8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5fdc:	09 2e       	mov	r0, r25
    5fde:	00 0c       	add	r0, r0
    5fe0:	aa 0b       	sbc	r26, r26
    5fe2:	bb 0b       	sbc	r27, r27
    5fe4:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <_ZL12g_on_the_air>
    5fe8:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <_ZL12g_on_the_air+0x1>
    5fec:	a0 93 56 47 	sts	0x4756, r26	; 0x804756 <_ZL12g_on_the_air+0x2>
    5ff0:	b0 93 57 47 	sts	0x4757, r27	; 0x804757 <_ZL12g_on_the_air+0x3>
		g_event_commenced = true;                   /* get things running immediately */
    5ff4:	81 e0       	ldi	r24, 0x01	; 1
    5ff6:	80 93 95 47 	sts	0x4795, r24	; 0x804795 <g_event_commenced>
		g_event_enabled = true;                     /* get things running immediately */
    5ffa:	81 e0       	ldi	r24, 0x01	; 1
    5ffc:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
		g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    6000:	8d ef       	ldi	r24, 0xFD	; 253
    6002:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL18g_last_status_code>
		
// 		g_seconds_since_sync = (g_fox_counter - 1) * g_on_air_interval_seconds; /* Total elapsed time since start of event */
 		g_use_rtc_for_startstop = false;
    6006:	10 92 b9 47 	sts	0x47B9, r1	; 0x8047b9 <g_use_rtc_for_startstop>
 		g_event_enabled = true;
    600a:	81 e0       	ldi	r24, 0x01	; 1
    600c:	80 93 94 47 	sts	0x4794, r24	; 0x804794 <g_event_enabled>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    6010:	04 c0       	rjmp	.+8      	; 0x601a <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
	}
	else         /* if(action == START_EVENT_WITH_STARTFINISH_TIMES) */
	{
		SC sc;
 //		EC ec = 
		launchEvent(&sc);
    6012:	ce 01       	movw	r24, r28
    6014:	09 96       	adiw	r24, 0x09	; 9
    6016:	0e 94 61 29 	call	0x52c2	; 0x52c2 <_Z11launchEventP2SC>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    601a:	00 00       	nop
    601c:	2c 96       	adiw	r28, 0x0c	; 12
    601e:	cd bf       	out	0x3d, r28	; 61
    6020:	de bf       	out	0x3e, r29	; 62
    6022:	df 91       	pop	r29
    6024:	cf 91       	pop	r28
    6026:	08 95       	ret

00006028 <_Z18validateTimeStringPcPma>:

time_t validateTimeString(char* str, time_t* epochVar, int8_t offsetHours)
{
    6028:	cf 93       	push	r28
    602a:	df 93       	push	r29
    602c:	cd b7       	in	r28, 0x3d	; 61
    602e:	de b7       	in	r29, 0x3e	; 62
    6030:	a4 97       	sbiw	r28, 0x24	; 36
    6032:	cd bf       	out	0x3d, r28	; 61
    6034:	de bf       	out	0x3e, r29	; 62
    6036:	88 a3       	std	Y+32, r24	; 0x20
    6038:	99 a3       	std	Y+33, r25	; 0x21
    603a:	6a a3       	std	Y+34, r22	; 0x22
    603c:	7b a3       	std	Y+35, r23	; 0x23
    603e:	4c a3       	std	Y+36, r20	; 0x24
	time_t valid = 0;
    6040:	19 82       	std	Y+1, r1	; 0x01
    6042:	1a 82       	std	Y+2, r1	; 0x02
    6044:	1b 82       	std	Y+3, r1	; 0x03
    6046:	1c 82       	std	Y+4, r1	; 0x04
	int len = strlen(str);
    6048:	88 a1       	ldd	r24, Y+32	; 0x20
    604a:	99 a1       	ldd	r25, Y+33	; 0x21
    604c:	0e 94 ef 7b 	call	0xf7de	; 0xf7de <strlen>
    6050:	8d 83       	std	Y+5, r24	; 0x05
    6052:	9e 83       	std	Y+6, r25	; 0x06
	time_t minimumEpoch = MINIMUM_EPOCH;
    6054:	80 e0       	ldi	r24, 0x00	; 0
    6056:	96 e6       	ldi	r25, 0x66	; 102
    6058:	ae ee       	ldi	r26, 0xEE	; 238
    605a:	bf e5       	ldi	r27, 0x5F	; 95
    605c:	8f 83       	std	Y+7, r24	; 0x07
    605e:	98 87       	std	Y+8, r25	; 0x08
    6060:	a9 87       	std	Y+9, r26	; 0x09
    6062:	ba 87       	std	Y+10, r27	; 0x0a
	uint8_t validationType = 0;
    6064:	1b 86       	std	Y+11, r1	; 0x0b

	if(epochVar == &g_event_start_epoch)
    6066:	8a a1       	ldd	r24, Y+34	; 0x22
    6068:	9b a1       	ldd	r25, Y+35	; 0x23
    606a:	8c 58       	subi	r24, 0x8C	; 140
    606c:	97 44       	sbci	r25, 0x47	; 71
    606e:	89 f5       	brne	.+98     	; 0x60d2 <_Z18validateTimeStringPcPma+0xaa>
	{
		minimumEpoch = MAX(g_current_epoch, MINIMUM_EPOCH);
    6070:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    6074:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    6078:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    607c:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    6080:	8c 87       	std	Y+12, r24	; 0x0c
    6082:	9d 87       	std	Y+13, r25	; 0x0d
    6084:	ae 87       	std	Y+14, r26	; 0x0e
    6086:	bf 87       	std	Y+15, r27	; 0x0f
    6088:	80 e0       	ldi	r24, 0x00	; 0
    608a:	96 e6       	ldi	r25, 0x66	; 102
    608c:	ae ee       	ldi	r26, 0xEE	; 238
    608e:	bf e5       	ldi	r27, 0x5F	; 95
    6090:	88 8b       	std	Y+16, r24	; 0x10
    6092:	99 8b       	std	Y+17, r25	; 0x11
    6094:	aa 8b       	std	Y+18, r26	; 0x12
    6096:	bb 8b       	std	Y+19, r27	; 0x13
    6098:	2c 85       	ldd	r18, Y+12	; 0x0c
    609a:	3d 85       	ldd	r19, Y+13	; 0x0d
    609c:	4e 85       	ldd	r20, Y+14	; 0x0e
    609e:	5f 85       	ldd	r21, Y+15	; 0x0f
    60a0:	88 89       	ldd	r24, Y+16	; 0x10
    60a2:	99 89       	ldd	r25, Y+17	; 0x11
    60a4:	aa 89       	ldd	r26, Y+18	; 0x12
    60a6:	bb 89       	ldd	r27, Y+19	; 0x13
    60a8:	28 17       	cp	r18, r24
    60aa:	39 07       	cpc	r19, r25
    60ac:	4a 07       	cpc	r20, r26
    60ae:	5b 07       	cpc	r21, r27
    60b0:	28 f4       	brcc	.+10     	; 0x60bc <_Z18validateTimeStringPcPma+0x94>
    60b2:	88 89       	ldd	r24, Y+16	; 0x10
    60b4:	99 89       	ldd	r25, Y+17	; 0x11
    60b6:	aa 89       	ldd	r26, Y+18	; 0x12
    60b8:	bb 89       	ldd	r27, Y+19	; 0x13
    60ba:	04 c0       	rjmp	.+8      	; 0x60c4 <_Z18validateTimeStringPcPma+0x9c>
    60bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    60be:	9d 85       	ldd	r25, Y+13	; 0x0d
    60c0:	ae 85       	ldd	r26, Y+14	; 0x0e
    60c2:	bf 85       	ldd	r27, Y+15	; 0x0f
    60c4:	8f 83       	std	Y+7, r24	; 0x07
    60c6:	98 87       	std	Y+8, r25	; 0x08
    60c8:	a9 87       	std	Y+9, r26	; 0x09
    60ca:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 1;
    60cc:	81 e0       	ldi	r24, 0x01	; 1
    60ce:	8b 87       	std	Y+11, r24	; 0x0b
    60d0:	39 c0       	rjmp	.+114    	; 0x6144 <_Z18validateTimeStringPcPma+0x11c>
	}
	else if(epochVar == &g_event_finish_epoch)
    60d2:	8a a1       	ldd	r24, Y+34	; 0x22
    60d4:	9b a1       	ldd	r25, Y+35	; 0x23
    60d6:	80 59       	subi	r24, 0x90	; 144
    60d8:	97 44       	sbci	r25, 0x47	; 71
    60da:	a1 f5       	brne	.+104    	; 0x6144 <_Z18validateTimeStringPcPma+0x11c>
	{
		minimumEpoch = MAX(g_event_start_epoch, g_current_epoch);
    60dc:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    60e0:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    60e4:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    60e8:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    60ec:	88 8f       	std	Y+24, r24	; 0x18
    60ee:	99 8f       	std	Y+25, r25	; 0x19
    60f0:	aa 8f       	std	Y+26, r26	; 0x1a
    60f2:	bb 8f       	std	Y+27, r27	; 0x1b
    60f4:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    60f8:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    60fc:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    6100:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    6104:	8c 8f       	std	Y+28, r24	; 0x1c
    6106:	9d 8f       	std	Y+29, r25	; 0x1d
    6108:	ae 8f       	std	Y+30, r26	; 0x1e
    610a:	bf 8f       	std	Y+31, r27	; 0x1f
    610c:	28 8d       	ldd	r18, Y+24	; 0x18
    610e:	39 8d       	ldd	r19, Y+25	; 0x19
    6110:	4a 8d       	ldd	r20, Y+26	; 0x1a
    6112:	5b 8d       	ldd	r21, Y+27	; 0x1b
    6114:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6116:	9d 8d       	ldd	r25, Y+29	; 0x1d
    6118:	ae 8d       	ldd	r26, Y+30	; 0x1e
    611a:	bf 8d       	ldd	r27, Y+31	; 0x1f
    611c:	28 17       	cp	r18, r24
    611e:	39 07       	cpc	r19, r25
    6120:	4a 07       	cpc	r20, r26
    6122:	5b 07       	cpc	r21, r27
    6124:	28 f4       	brcc	.+10     	; 0x6130 <_Z18validateTimeStringPcPma+0x108>
    6126:	8c 8d       	ldd	r24, Y+28	; 0x1c
    6128:	9d 8d       	ldd	r25, Y+29	; 0x1d
    612a:	ae 8d       	ldd	r26, Y+30	; 0x1e
    612c:	bf 8d       	ldd	r27, Y+31	; 0x1f
    612e:	04 c0       	rjmp	.+8      	; 0x6138 <_Z18validateTimeStringPcPma+0x110>
    6130:	88 8d       	ldd	r24, Y+24	; 0x18
    6132:	99 8d       	ldd	r25, Y+25	; 0x19
    6134:	aa 8d       	ldd	r26, Y+26	; 0x1a
    6136:	bb 8d       	ldd	r27, Y+27	; 0x1b
    6138:	8f 83       	std	Y+7, r24	; 0x07
    613a:	98 87       	std	Y+8, r25	; 0x08
    613c:	a9 87       	std	Y+9, r26	; 0x09
    613e:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 2;
    6140:	82 e0       	ldi	r24, 0x02	; 2
    6142:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	if(len == 10)
    6144:	8d 81       	ldd	r24, Y+5	; 0x05
    6146:	9e 81       	ldd	r25, Y+6	; 0x06
    6148:	0a 97       	sbiw	r24, 0x0a	; 10
    614a:	a9 f4       	brne	.+42     	; 0x6176 <_Z18validateTimeStringPcPma+0x14e>
	{
		str[10] = '0';
    614c:	88 a1       	ldd	r24, Y+32	; 0x20
    614e:	99 a1       	ldd	r25, Y+33	; 0x21
    6150:	0a 96       	adiw	r24, 0x0a	; 10
    6152:	20 e3       	ldi	r18, 0x30	; 48
    6154:	fc 01       	movw	r30, r24
    6156:	20 83       	st	Z, r18
		str[11] = '0';
    6158:	88 a1       	ldd	r24, Y+32	; 0x20
    615a:	99 a1       	ldd	r25, Y+33	; 0x21
    615c:	0b 96       	adiw	r24, 0x0b	; 11
    615e:	20 e3       	ldi	r18, 0x30	; 48
    6160:	fc 01       	movw	r30, r24
    6162:	20 83       	st	Z, r18
		str[12] = '\0';
    6164:	88 a1       	ldd	r24, Y+32	; 0x20
    6166:	99 a1       	ldd	r25, Y+33	; 0x21
    6168:	0c 96       	adiw	r24, 0x0c	; 12
    616a:	fc 01       	movw	r30, r24
    616c:	10 82       	st	Z, r1
		len = 12;
    616e:	8c e0       	ldi	r24, 0x0C	; 12
    6170:	90 e0       	ldi	r25, 0x00	; 0
    6172:	8d 83       	std	Y+5, r24	; 0x05
    6174:	9e 83       	std	Y+6, r25	; 0x06
	}

	if((len == 12) && (only_digits(str)))
    6176:	8d 81       	ldd	r24, Y+5	; 0x05
    6178:	9e 81       	ldd	r25, Y+6	; 0x06
    617a:	0c 97       	sbiw	r24, 0x0c	; 12
    617c:	41 f4       	brne	.+16     	; 0x618e <_Z18validateTimeStringPcPma+0x166>
    617e:	88 a1       	ldd	r24, Y+32	; 0x20
    6180:	99 a1       	ldd	r25, Y+33	; 0x21
    6182:	0e 94 c6 73 	call	0xe78c	; 0xe78c <_Z11only_digitsPc>
    6186:	88 23       	and	r24, r24
    6188:	11 f0       	breq	.+4      	; 0x618e <_Z18validateTimeStringPcPma+0x166>
    618a:	81 e0       	ldi	r24, 0x01	; 1
    618c:	01 c0       	rjmp	.+2      	; 0x6190 <_Z18validateTimeStringPcPma+0x168>
    618e:	80 e0       	ldi	r24, 0x00	; 0
    6190:	88 23       	and	r24, r24
    6192:	09 f4       	brne	.+2      	; 0x6196 <_Z18validateTimeStringPcPma+0x16e>
    6194:	67 c0       	rjmp	.+206    	; 0x6264 <_Z18validateTimeStringPcPma+0x23c>
	{
		time_t ep = RTC_String2Epoch(NULL, str);    /* String format "YYMMDDhhmmss" */
    6196:	88 a1       	ldd	r24, Y+32	; 0x20
    6198:	99 a1       	ldd	r25, Y+33	; 0x21
    619a:	bc 01       	movw	r22, r24
    619c:	80 e0       	ldi	r24, 0x00	; 0
    619e:	90 e0       	ldi	r25, 0x00	; 0
    61a0:	0e 94 a1 3e 	call	0x7d42	; 0x7d42 <RTC_String2Epoch>
    61a4:	dc 01       	movw	r26, r24
    61a6:	cb 01       	movw	r24, r22
    61a8:	8c 8b       	std	Y+20, r24	; 0x14
    61aa:	9d 8b       	std	Y+21, r25	; 0x15
    61ac:	ae 8b       	std	Y+22, r26	; 0x16
    61ae:	bf 8b       	std	Y+23, r27	; 0x17

		ep += (HOUR * offsetHours);
    61b0:	8c a1       	ldd	r24, Y+36	; 0x24
    61b2:	28 2f       	mov	r18, r24
    61b4:	88 0f       	add	r24, r24
    61b6:	33 0b       	sbc	r19, r19
    61b8:	44 0b       	sbc	r20, r20
    61ba:	55 0b       	sbc	r21, r21
    61bc:	80 e1       	ldi	r24, 0x10	; 16
    61be:	9e e0       	ldi	r25, 0x0E	; 14
    61c0:	dc 01       	movw	r26, r24
    61c2:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    61c6:	9b 01       	movw	r18, r22
    61c8:	ac 01       	movw	r20, r24
    61ca:	8c 89       	ldd	r24, Y+20	; 0x14
    61cc:	9d 89       	ldd	r25, Y+21	; 0x15
    61ce:	ae 89       	ldd	r26, Y+22	; 0x16
    61d0:	bf 89       	ldd	r27, Y+23	; 0x17
    61d2:	82 0f       	add	r24, r18
    61d4:	93 1f       	adc	r25, r19
    61d6:	a4 1f       	adc	r26, r20
    61d8:	b5 1f       	adc	r27, r21
    61da:	8c 8b       	std	Y+20, r24	; 0x14
    61dc:	9d 8b       	std	Y+21, r25	; 0x15
    61de:	ae 8b       	std	Y+22, r26	; 0x16
    61e0:	bf 8b       	std	Y+23, r27	; 0x17

		if(ep > minimumEpoch)
    61e2:	2c 89       	ldd	r18, Y+20	; 0x14
    61e4:	3d 89       	ldd	r19, Y+21	; 0x15
    61e6:	4e 89       	ldd	r20, Y+22	; 0x16
    61e8:	5f 89       	ldd	r21, Y+23	; 0x17
    61ea:	8f 81       	ldd	r24, Y+7	; 0x07
    61ec:	98 85       	ldd	r25, Y+8	; 0x08
    61ee:	a9 85       	ldd	r26, Y+9	; 0x09
    61f0:	ba 85       	ldd	r27, Y+10	; 0x0a
    61f2:	82 17       	cp	r24, r18
    61f4:	93 07       	cpc	r25, r19
    61f6:	a4 07       	cpc	r26, r20
    61f8:	b5 07       	cpc	r27, r21
    61fa:	48 f4       	brcc	.+18     	; 0x620e <_Z18validateTimeStringPcPma+0x1e6>
		{
			valid = ep;
    61fc:	8c 89       	ldd	r24, Y+20	; 0x14
    61fe:	9d 89       	ldd	r25, Y+21	; 0x15
    6200:	ae 89       	ldd	r26, Y+22	; 0x16
    6202:	bf 89       	ldd	r27, Y+23	; 0x17
    6204:	89 83       	std	Y+1, r24	; 0x01
    6206:	9a 83       	std	Y+2, r25	; 0x02
    6208:	ab 83       	std	Y+3, r26	; 0x03
    620a:	bc 83       	std	Y+4, r27	; 0x04
    620c:	33 c0       	rjmp	.+102    	; 0x6274 <_Z18validateTimeStringPcPma+0x24c>
		}
		else
		{
			if(validationType == 1)         /* start time validation */
    620e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6210:	81 30       	cpi	r24, 0x01	; 1
    6212:	29 f4       	brne	.+10     	; 0x621e <_Z18validateTimeStringPcPma+0x1f6>
			{
				sb_send_string(TEXT_ERR_START_IN_PAST_TXT);
    6214:	8d ef       	ldi	r24, 0xFD	; 253
    6216:	92 e4       	ldi	r25, 0x42	; 66
    6218:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    621c:	2b c0       	rjmp	.+86     	; 0x6274 <_Z18validateTimeStringPcPma+0x24c>
			}
			else if(validationType == 2)    /* finish time validation */
    621e:	8b 85       	ldd	r24, Y+11	; 0x0b
    6220:	82 30       	cpi	r24, 0x02	; 2
    6222:	d9 f4       	brne	.+54     	; 0x625a <_Z18validateTimeStringPcPma+0x232>
			{
				if(ep < g_current_epoch)
    6224:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    6228:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    622c:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    6230:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    6234:	2c 89       	ldd	r18, Y+20	; 0x14
    6236:	3d 89       	ldd	r19, Y+21	; 0x15
    6238:	4e 89       	ldd	r20, Y+22	; 0x16
    623a:	5f 89       	ldd	r21, Y+23	; 0x17
    623c:	28 17       	cp	r18, r24
    623e:	39 07       	cpc	r19, r25
    6240:	4a 07       	cpc	r20, r26
    6242:	5b 07       	cpc	r21, r27
    6244:	28 f4       	brcc	.+10     	; 0x6250 <_Z18validateTimeStringPcPma+0x228>
				{
					sb_send_string(TEXT_ERR_FINISH_IN_PAST_TXT);
    6246:	82 e1       	ldi	r24, 0x12	; 18
    6248:	93 e4       	ldi	r25, 0x43	; 67
    624a:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    624e:	12 c0       	rjmp	.+36     	; 0x6274 <_Z18validateTimeStringPcPma+0x24c>
				}
				else
				{
					sb_send_string(TEXT_ERR_FINISH_BEFORE_START_TXT);
    6250:	88 e2       	ldi	r24, 0x28	; 40
    6252:	93 e4       	ldi	r25, 0x43	; 67
    6254:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    6258:	0d c0       	rjmp	.+26     	; 0x6274 <_Z18validateTimeStringPcPma+0x24c>
				}
			}
			else    /* current time validation */
			{
				sb_send_string(TEXT_ERR_TIME_IN_PAST_TXT);
    625a:	83 e4       	ldi	r24, 0x43	; 67
    625c:	93 e4       	ldi	r25, 0x43	; 67
    625e:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    6262:	08 c0       	rjmp	.+16     	; 0x6274 <_Z18validateTimeStringPcPma+0x24c>
			}
		}
	}
	else if(len)
    6264:	8d 81       	ldd	r24, Y+5	; 0x05
    6266:	9e 81       	ldd	r25, Y+6	; 0x06
    6268:	89 2b       	or	r24, r25
    626a:	21 f0       	breq	.+8      	; 0x6274 <_Z18validateTimeStringPcPma+0x24c>
	{
		sb_send_string(TEXT_ERR_INVALID_TIME_TXT);
    626c:	87 e5       	ldi	r24, 0x57	; 87
    626e:	93 e4       	ldi	r25, 0x43	; 67
    6270:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
	}

	return(valid);
    6274:	89 81       	ldd	r24, Y+1	; 0x01
    6276:	9a 81       	ldd	r25, Y+2	; 0x02
    6278:	ab 81       	ldd	r26, Y+3	; 0x03
    627a:	bc 81       	ldd	r27, Y+4	; 0x04
}
    627c:	bc 01       	movw	r22, r24
    627e:	cd 01       	movw	r24, r26
    6280:	a4 96       	adiw	r28, 0x24	; 36
    6282:	cd bf       	out	0x3d, r28	; 61
    6284:	de bf       	out	0x3e, r29	; 62
    6286:	df 91       	pop	r29
    6288:	cf 91       	pop	r28
    628a:	08 95       	ret

0000628c <_Z14reportTimeTillmmPKcS0_>:


bool reportTimeTill(time_t from, time_t until, const char* prefix, const char* failMsg)
{
    628c:	ef 92       	push	r14
    628e:	ff 92       	push	r15
    6290:	0f 93       	push	r16
    6292:	1f 93       	push	r17
    6294:	cf 93       	push	r28
    6296:	df 93       	push	r29
    6298:	cd b7       	in	r28, 0x3d	; 61
    629a:	de b7       	in	r29, 0x3e	; 62
    629c:	6f 97       	sbiw	r28, 0x1f	; 31
    629e:	cd bf       	out	0x3d, r28	; 61
    62a0:	de bf       	out	0x3e, r29	; 62
    62a2:	6c 8b       	std	Y+20, r22	; 0x14
    62a4:	7d 8b       	std	Y+21, r23	; 0x15
    62a6:	8e 8b       	std	Y+22, r24	; 0x16
    62a8:	9f 8b       	std	Y+23, r25	; 0x17
    62aa:	28 8f       	std	Y+24, r18	; 0x18
    62ac:	39 8f       	std	Y+25, r19	; 0x19
    62ae:	4a 8f       	std	Y+26, r20	; 0x1a
    62b0:	5b 8f       	std	Y+27, r21	; 0x1b
    62b2:	0c 8f       	std	Y+28, r16	; 0x1c
    62b4:	1d 8f       	std	Y+29, r17	; 0x1d
    62b6:	ee 8e       	std	Y+30, r14	; 0x1e
    62b8:	ff 8e       	std	Y+31, r15	; 0x1f
	bool failure = false;
    62ba:	19 82       	std	Y+1, r1	; 0x01

	if(from >= until)   /* Negative time */
    62bc:	2c 89       	ldd	r18, Y+20	; 0x14
    62be:	3d 89       	ldd	r19, Y+21	; 0x15
    62c0:	4e 89       	ldd	r20, Y+22	; 0x16
    62c2:	5f 89       	ldd	r21, Y+23	; 0x17
    62c4:	88 8d       	ldd	r24, Y+24	; 0x18
    62c6:	99 8d       	ldd	r25, Y+25	; 0x19
    62c8:	aa 8d       	ldd	r26, Y+26	; 0x1a
    62ca:	bb 8d       	ldd	r27, Y+27	; 0x1b
    62cc:	28 17       	cp	r18, r24
    62ce:	39 07       	cpc	r19, r25
    62d0:	4a 07       	cpc	r20, r26
    62d2:	5b 07       	cpc	r21, r27
    62d4:	60 f0       	brcs	.+24     	; 0x62ee <_Z14reportTimeTillmmPKcS0_+0x62>
	{
		failure = true;
    62d6:	81 e0       	ldi	r24, 0x01	; 1
    62d8:	89 83       	std	Y+1, r24	; 0x01
		if(failMsg)
    62da:	8e 8d       	ldd	r24, Y+30	; 0x1e
    62dc:	9f 8d       	ldd	r25, Y+31	; 0x1f
    62de:	89 2b       	or	r24, r25
    62e0:	09 f4       	brne	.+2      	; 0x62e4 <_Z14reportTimeTillmmPKcS0_+0x58>
    62e2:	6b c1       	rjmp	.+726    	; 0x65ba <_Z14reportTimeTillmmPKcS0_+0x32e>
		{
			sb_send_string((char*)failMsg);
    62e4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    62e6:	9f 8d       	ldd	r25, Y+31	; 0x1f
    62e8:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
    62ec:	66 c1       	rjmp	.+716    	; 0x65ba <_Z14reportTimeTillmmPKcS0_+0x32e>
		}
	}
	else
	{
		if(prefix)
    62ee:	8c 8d       	ldd	r24, Y+28	; 0x1c
    62f0:	9d 8d       	ldd	r25, Y+29	; 0x1d
    62f2:	89 2b       	or	r24, r25
    62f4:	21 f0       	breq	.+8      	; 0x62fe <_Z14reportTimeTillmmPKcS0_+0x72>
		{
			sb_send_string((char*)prefix);
    62f6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    62f8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    62fa:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}
		time_t dif = until - from;
    62fe:	28 8d       	ldd	r18, Y+24	; 0x18
    6300:	39 8d       	ldd	r19, Y+25	; 0x19
    6302:	4a 8d       	ldd	r20, Y+26	; 0x1a
    6304:	5b 8d       	ldd	r21, Y+27	; 0x1b
    6306:	8c 89       	ldd	r24, Y+20	; 0x14
    6308:	9d 89       	ldd	r25, Y+21	; 0x15
    630a:	ae 89       	ldd	r26, Y+22	; 0x16
    630c:	bf 89       	ldd	r27, Y+23	; 0x17
    630e:	79 01       	movw	r14, r18
    6310:	8a 01       	movw	r16, r20
    6312:	e8 1a       	sub	r14, r24
    6314:	f9 0a       	sbc	r15, r25
    6316:	0a 0b       	sbc	r16, r26
    6318:	1b 0b       	sbc	r17, r27
    631a:	d8 01       	movw	r26, r16
    631c:	c7 01       	movw	r24, r14
    631e:	8a 83       	std	Y+2, r24	; 0x02
    6320:	9b 83       	std	Y+3, r25	; 0x03
    6322:	ac 83       	std	Y+4, r26	; 0x04
    6324:	bd 83       	std	Y+5, r27	; 0x05
		uint16_t years = dif / YEAR;
    6326:	8a 81       	ldd	r24, Y+2	; 0x02
    6328:	9b 81       	ldd	r25, Y+3	; 0x03
    632a:	ac 81       	ldd	r26, Y+4	; 0x04
    632c:	bd 81       	ldd	r27, Y+5	; 0x05
    632e:	20 e8       	ldi	r18, 0x80	; 128
    6330:	33 e3       	ldi	r19, 0x33	; 51
    6332:	41 ee       	ldi	r20, 0xE1	; 225
    6334:	51 e0       	ldi	r21, 0x01	; 1
    6336:	bc 01       	movw	r22, r24
    6338:	cd 01       	movw	r24, r26
    633a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    633e:	da 01       	movw	r26, r20
    6340:	c9 01       	movw	r24, r18
    6342:	8e 83       	std	Y+6, r24	; 0x06
    6344:	9f 83       	std	Y+7, r25	; 0x07
		time_t hold = dif - (years * YEAR);
    6346:	8e 81       	ldd	r24, Y+6	; 0x06
    6348:	9f 81       	ldd	r25, Y+7	; 0x07
    634a:	cc 01       	movw	r24, r24
    634c:	a0 e0       	ldi	r26, 0x00	; 0
    634e:	b0 e0       	ldi	r27, 0x00	; 0
    6350:	9c 01       	movw	r18, r24
    6352:	ad 01       	movw	r20, r26
    6354:	60 e8       	ldi	r22, 0x80	; 128
    6356:	73 e3       	ldi	r23, 0x33	; 51
    6358:	81 ee       	ldi	r24, 0xE1	; 225
    635a:	91 e0       	ldi	r25, 0x01	; 1
    635c:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    6360:	9b 01       	movw	r18, r22
    6362:	ac 01       	movw	r20, r24
    6364:	8a 81       	ldd	r24, Y+2	; 0x02
    6366:	9b 81       	ldd	r25, Y+3	; 0x03
    6368:	ac 81       	ldd	r26, Y+4	; 0x04
    636a:	bd 81       	ldd	r27, Y+5	; 0x05
    636c:	82 1b       	sub	r24, r18
    636e:	93 0b       	sbc	r25, r19
    6370:	a4 0b       	sbc	r26, r20
    6372:	b5 0b       	sbc	r27, r21
    6374:	88 87       	std	Y+8, r24	; 0x08
    6376:	99 87       	std	Y+9, r25	; 0x09
    6378:	aa 87       	std	Y+10, r26	; 0x0a
    637a:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t days = hold / DAY;
    637c:	88 85       	ldd	r24, Y+8	; 0x08
    637e:	99 85       	ldd	r25, Y+9	; 0x09
    6380:	aa 85       	ldd	r26, Y+10	; 0x0a
    6382:	bb 85       	ldd	r27, Y+11	; 0x0b
    6384:	20 e8       	ldi	r18, 0x80	; 128
    6386:	31 e5       	ldi	r19, 0x51	; 81
    6388:	41 e0       	ldi	r20, 0x01	; 1
    638a:	50 e0       	ldi	r21, 0x00	; 0
    638c:	bc 01       	movw	r22, r24
    638e:	cd 01       	movw	r24, r26
    6390:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    6394:	da 01       	movw	r26, r20
    6396:	c9 01       	movw	r24, r18
    6398:	8c 87       	std	Y+12, r24	; 0x0c
    639a:	9d 87       	std	Y+13, r25	; 0x0d
		hold -= (days * DAY);
    639c:	8c 85       	ldd	r24, Y+12	; 0x0c
    639e:	9d 85       	ldd	r25, Y+13	; 0x0d
    63a0:	cc 01       	movw	r24, r24
    63a2:	a0 e0       	ldi	r26, 0x00	; 0
    63a4:	b0 e0       	ldi	r27, 0x00	; 0
    63a6:	9c 01       	movw	r18, r24
    63a8:	ad 01       	movw	r20, r26
    63aa:	60 e8       	ldi	r22, 0x80	; 128
    63ac:	71 e5       	ldi	r23, 0x51	; 81
    63ae:	81 e0       	ldi	r24, 0x01	; 1
    63b0:	90 e0       	ldi	r25, 0x00	; 0
    63b2:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    63b6:	9b 01       	movw	r18, r22
    63b8:	ac 01       	movw	r20, r24
    63ba:	88 85       	ldd	r24, Y+8	; 0x08
    63bc:	99 85       	ldd	r25, Y+9	; 0x09
    63be:	aa 85       	ldd	r26, Y+10	; 0x0a
    63c0:	bb 85       	ldd	r27, Y+11	; 0x0b
    63c2:	82 1b       	sub	r24, r18
    63c4:	93 0b       	sbc	r25, r19
    63c6:	a4 0b       	sbc	r26, r20
    63c8:	b5 0b       	sbc	r27, r21
    63ca:	88 87       	std	Y+8, r24	; 0x08
    63cc:	99 87       	std	Y+9, r25	; 0x09
    63ce:	aa 87       	std	Y+10, r26	; 0x0a
    63d0:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t hours = hold / HOUR;
    63d2:	88 85       	ldd	r24, Y+8	; 0x08
    63d4:	99 85       	ldd	r25, Y+9	; 0x09
    63d6:	aa 85       	ldd	r26, Y+10	; 0x0a
    63d8:	bb 85       	ldd	r27, Y+11	; 0x0b
    63da:	20 e1       	ldi	r18, 0x10	; 16
    63dc:	3e e0       	ldi	r19, 0x0E	; 14
    63de:	40 e0       	ldi	r20, 0x00	; 0
    63e0:	50 e0       	ldi	r21, 0x00	; 0
    63e2:	bc 01       	movw	r22, r24
    63e4:	cd 01       	movw	r24, r26
    63e6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    63ea:	da 01       	movw	r26, r20
    63ec:	c9 01       	movw	r24, r18
    63ee:	8e 87       	std	Y+14, r24	; 0x0e
    63f0:	9f 87       	std	Y+15, r25	; 0x0f
		hold -= (hours * HOUR);
    63f2:	8e 85       	ldd	r24, Y+14	; 0x0e
    63f4:	9f 85       	ldd	r25, Y+15	; 0x0f
    63f6:	9c 01       	movw	r18, r24
    63f8:	40 e0       	ldi	r20, 0x00	; 0
    63fa:	50 e0       	ldi	r21, 0x00	; 0
    63fc:	80 e1       	ldi	r24, 0x10	; 16
    63fe:	9e e0       	ldi	r25, 0x0E	; 14
    6400:	dc 01       	movw	r26, r24
    6402:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    6406:	9b 01       	movw	r18, r22
    6408:	ac 01       	movw	r20, r24
    640a:	88 85       	ldd	r24, Y+8	; 0x08
    640c:	99 85       	ldd	r25, Y+9	; 0x09
    640e:	aa 85       	ldd	r26, Y+10	; 0x0a
    6410:	bb 85       	ldd	r27, Y+11	; 0x0b
    6412:	82 1b       	sub	r24, r18
    6414:	93 0b       	sbc	r25, r19
    6416:	a4 0b       	sbc	r26, r20
    6418:	b5 0b       	sbc	r27, r21
    641a:	88 87       	std	Y+8, r24	; 0x08
    641c:	99 87       	std	Y+9, r25	; 0x09
    641e:	aa 87       	std	Y+10, r26	; 0x0a
    6420:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t minutes = hold / MINUTE;
    6422:	88 85       	ldd	r24, Y+8	; 0x08
    6424:	99 85       	ldd	r25, Y+9	; 0x09
    6426:	aa 85       	ldd	r26, Y+10	; 0x0a
    6428:	bb 85       	ldd	r27, Y+11	; 0x0b
    642a:	2c e3       	ldi	r18, 0x3C	; 60
    642c:	30 e0       	ldi	r19, 0x00	; 0
    642e:	40 e0       	ldi	r20, 0x00	; 0
    6430:	50 e0       	ldi	r21, 0x00	; 0
    6432:	bc 01       	movw	r22, r24
    6434:	cd 01       	movw	r24, r26
    6436:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    643a:	da 01       	movw	r26, r20
    643c:	c9 01       	movw	r24, r18
    643e:	88 8b       	std	Y+16, r24	; 0x10
    6440:	99 8b       	std	Y+17, r25	; 0x11
		uint16_t seconds = hold - (minutes * MINUTE);
    6442:	28 85       	ldd	r18, Y+8	; 0x08
    6444:	39 85       	ldd	r19, Y+9	; 0x09
    6446:	48 89       	ldd	r20, Y+16	; 0x10
    6448:	59 89       	ldd	r21, Y+17	; 0x11
    644a:	6c e3       	ldi	r22, 0x3C	; 60
    644c:	64 9f       	mul	r22, r20
    644e:	c0 01       	movw	r24, r0
    6450:	65 9f       	mul	r22, r21
    6452:	90 0d       	add	r25, r0
    6454:	11 24       	eor	r1, r1
    6456:	89 01       	movw	r16, r18
    6458:	08 1b       	sub	r16, r24
    645a:	19 0b       	sbc	r17, r25
    645c:	c8 01       	movw	r24, r16
    645e:	8a 8b       	std	Y+18, r24	; 0x12
    6460:	9b 8b       	std	Y+19, r25	; 0x13

		g_tempStr[0] = '\0';
    6462:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZL9g_tempStr>

		if(years)
    6466:	8e 81       	ldd	r24, Y+6	; 0x06
    6468:	9f 81       	ldd	r25, Y+7	; 0x07
    646a:	89 2b       	or	r24, r25
    646c:	f1 f0       	breq	.+60     	; 0x64aa <_Z14reportTimeTillmmPKcS0_+0x21e>
		{
			sprintf(g_tempStr, "%d yrs ", years);
    646e:	8f 81       	ldd	r24, Y+7	; 0x07
    6470:	8f 93       	push	r24
    6472:	8e 81       	ldd	r24, Y+6	; 0x06
    6474:	8f 93       	push	r24
    6476:	8b e6       	ldi	r24, 0x6B	; 107
    6478:	93 e4       	ldi	r25, 0x43	; 67
    647a:	89 2f       	mov	r24, r25
    647c:	8f 93       	push	r24
    647e:	8b e6       	ldi	r24, 0x6B	; 107
    6480:	93 e4       	ldi	r25, 0x43	; 67
    6482:	8f 93       	push	r24
    6484:	89 e1       	ldi	r24, 0x19	; 25
    6486:	97 e4       	ldi	r25, 0x47	; 71
    6488:	89 2f       	mov	r24, r25
    648a:	8f 93       	push	r24
    648c:	89 e1       	ldi	r24, 0x19	; 25
    648e:	97 e4       	ldi	r25, 0x47	; 71
    6490:	8f 93       	push	r24
    6492:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    6496:	0f 90       	pop	r0
    6498:	0f 90       	pop	r0
    649a:	0f 90       	pop	r0
    649c:	0f 90       	pop	r0
    649e:	0f 90       	pop	r0
    64a0:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    64a2:	89 e1       	ldi	r24, 0x19	; 25
    64a4:	97 e4       	ldi	r25, 0x47	; 71
    64a6:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}

		if(days)
    64aa:	8c 85       	ldd	r24, Y+12	; 0x0c
    64ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    64ae:	89 2b       	or	r24, r25
    64b0:	f1 f0       	breq	.+60     	; 0x64ee <_Z14reportTimeTillmmPKcS0_+0x262>
		{
			sprintf(g_tempStr, "%d days ", days);
    64b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    64b4:	8f 93       	push	r24
    64b6:	8c 85       	ldd	r24, Y+12	; 0x0c
    64b8:	8f 93       	push	r24
    64ba:	83 e7       	ldi	r24, 0x73	; 115
    64bc:	93 e4       	ldi	r25, 0x43	; 67
    64be:	89 2f       	mov	r24, r25
    64c0:	8f 93       	push	r24
    64c2:	83 e7       	ldi	r24, 0x73	; 115
    64c4:	93 e4       	ldi	r25, 0x43	; 67
    64c6:	8f 93       	push	r24
    64c8:	89 e1       	ldi	r24, 0x19	; 25
    64ca:	97 e4       	ldi	r25, 0x47	; 71
    64cc:	89 2f       	mov	r24, r25
    64ce:	8f 93       	push	r24
    64d0:	89 e1       	ldi	r24, 0x19	; 25
    64d2:	97 e4       	ldi	r25, 0x47	; 71
    64d4:	8f 93       	push	r24
    64d6:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    64da:	0f 90       	pop	r0
    64dc:	0f 90       	pop	r0
    64de:	0f 90       	pop	r0
    64e0:	0f 90       	pop	r0
    64e2:	0f 90       	pop	r0
    64e4:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    64e6:	89 e1       	ldi	r24, 0x19	; 25
    64e8:	97 e4       	ldi	r25, 0x47	; 71
    64ea:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}

		if(hours)
    64ee:	8e 85       	ldd	r24, Y+14	; 0x0e
    64f0:	9f 85       	ldd	r25, Y+15	; 0x0f
    64f2:	89 2b       	or	r24, r25
    64f4:	f1 f0       	breq	.+60     	; 0x6532 <_Z14reportTimeTillmmPKcS0_+0x2a6>
		{
			sprintf(g_tempStr, "%d hrs ", hours);
    64f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    64f8:	8f 93       	push	r24
    64fa:	8e 85       	ldd	r24, Y+14	; 0x0e
    64fc:	8f 93       	push	r24
    64fe:	8c e7       	ldi	r24, 0x7C	; 124
    6500:	93 e4       	ldi	r25, 0x43	; 67
    6502:	89 2f       	mov	r24, r25
    6504:	8f 93       	push	r24
    6506:	8c e7       	ldi	r24, 0x7C	; 124
    6508:	93 e4       	ldi	r25, 0x43	; 67
    650a:	8f 93       	push	r24
    650c:	89 e1       	ldi	r24, 0x19	; 25
    650e:	97 e4       	ldi	r25, 0x47	; 71
    6510:	89 2f       	mov	r24, r25
    6512:	8f 93       	push	r24
    6514:	89 e1       	ldi	r24, 0x19	; 25
    6516:	97 e4       	ldi	r25, 0x47	; 71
    6518:	8f 93       	push	r24
    651a:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    651e:	0f 90       	pop	r0
    6520:	0f 90       	pop	r0
    6522:	0f 90       	pop	r0
    6524:	0f 90       	pop	r0
    6526:	0f 90       	pop	r0
    6528:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    652a:	89 e1       	ldi	r24, 0x19	; 25
    652c:	97 e4       	ldi	r25, 0x47	; 71
    652e:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}

		if(minutes)
    6532:	88 89       	ldd	r24, Y+16	; 0x10
    6534:	99 89       	ldd	r25, Y+17	; 0x11
    6536:	89 2b       	or	r24, r25
    6538:	f1 f0       	breq	.+60     	; 0x6576 <_Z14reportTimeTillmmPKcS0_+0x2ea>
		{
			sprintf(g_tempStr, "%d min ", minutes);
    653a:	89 89       	ldd	r24, Y+17	; 0x11
    653c:	8f 93       	push	r24
    653e:	88 89       	ldd	r24, Y+16	; 0x10
    6540:	8f 93       	push	r24
    6542:	84 e8       	ldi	r24, 0x84	; 132
    6544:	93 e4       	ldi	r25, 0x43	; 67
    6546:	89 2f       	mov	r24, r25
    6548:	8f 93       	push	r24
    654a:	84 e8       	ldi	r24, 0x84	; 132
    654c:	93 e4       	ldi	r25, 0x43	; 67
    654e:	8f 93       	push	r24
    6550:	89 e1       	ldi	r24, 0x19	; 25
    6552:	97 e4       	ldi	r25, 0x47	; 71
    6554:	89 2f       	mov	r24, r25
    6556:	8f 93       	push	r24
    6558:	89 e1       	ldi	r24, 0x19	; 25
    655a:	97 e4       	ldi	r25, 0x47	; 71
    655c:	8f 93       	push	r24
    655e:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    6562:	0f 90       	pop	r0
    6564:	0f 90       	pop	r0
    6566:	0f 90       	pop	r0
    6568:	0f 90       	pop	r0
    656a:	0f 90       	pop	r0
    656c:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    656e:	89 e1       	ldi	r24, 0x19	; 25
    6570:	97 e4       	ldi	r25, 0x47	; 71
    6572:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}

		sprintf(g_tempStr, "%d sec", seconds);
    6576:	8b 89       	ldd	r24, Y+19	; 0x13
    6578:	8f 93       	push	r24
    657a:	8a 89       	ldd	r24, Y+18	; 0x12
    657c:	8f 93       	push	r24
    657e:	8c e8       	ldi	r24, 0x8C	; 140
    6580:	93 e4       	ldi	r25, 0x43	; 67
    6582:	89 2f       	mov	r24, r25
    6584:	8f 93       	push	r24
    6586:	8c e8       	ldi	r24, 0x8C	; 140
    6588:	93 e4       	ldi	r25, 0x43	; 67
    658a:	8f 93       	push	r24
    658c:	89 e1       	ldi	r24, 0x19	; 25
    658e:	97 e4       	ldi	r25, 0x47	; 71
    6590:	89 2f       	mov	r24, r25
    6592:	8f 93       	push	r24
    6594:	89 e1       	ldi	r24, 0x19	; 25
    6596:	97 e4       	ldi	r25, 0x47	; 71
    6598:	8f 93       	push	r24
    659a:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    659e:	0f 90       	pop	r0
    65a0:	0f 90       	pop	r0
    65a2:	0f 90       	pop	r0
    65a4:	0f 90       	pop	r0
    65a6:	0f 90       	pop	r0
    65a8:	0f 90       	pop	r0
		sb_send_string(g_tempStr);
    65aa:	89 e1       	ldi	r24, 0x19	; 25
    65ac:	97 e4       	ldi	r25, 0x47	; 71
    65ae:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>

		sb_send_NewLine();
    65b2:	0e 94 ae 62 	call	0xc55c	; 0xc55c <sb_send_NewLine>
		g_tempStr[0] = '\0';
    65b6:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZL9g_tempStr>
	}

	return( failure);
    65ba:	89 81       	ldd	r24, Y+1	; 0x01
}
    65bc:	6f 96       	adiw	r28, 0x1f	; 31
    65be:	cd bf       	out	0x3d, r28	; 61
    65c0:	de bf       	out	0x3e, r29	; 62
    65c2:	df 91       	pop	r29
    65c4:	cf 91       	pop	r28
    65c6:	1f 91       	pop	r17
    65c8:	0f 91       	pop	r16
    65ca:	ff 90       	pop	r15
    65cc:	ef 90       	pop	r14
    65ce:	08 95       	ret

000065d0 <_Z23clockConfigurationCheckv>:



ConfigurationState_t clockConfigurationCheck(void)
{
    65d0:	cf 93       	push	r28
    65d2:	df 93       	push	r29
    65d4:	cd b7       	in	r28, 0x3d	; 61
    65d6:	de b7       	in	r29, 0x3e	; 62
	if((g_event_finish_epoch < MINIMUM_EPOCH) || (g_event_start_epoch < MINIMUM_EPOCH) || (g_current_epoch < MINIMUM_EPOCH))
    65d8:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    65dc:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    65e0:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    65e4:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    65e8:	81 15       	cp	r24, r1
    65ea:	96 46       	sbci	r25, 0x66	; 102
    65ec:	ae 4e       	sbci	r26, 0xEE	; 238
    65ee:	bf 45       	sbci	r27, 0x5F	; 95
    65f0:	d0 f0       	brcs	.+52     	; 0x6626 <_Z23clockConfigurationCheckv+0x56>
    65f2:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    65f6:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    65fa:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    65fe:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    6602:	81 15       	cp	r24, r1
    6604:	96 46       	sbci	r25, 0x66	; 102
    6606:	ae 4e       	sbci	r26, 0xEE	; 238
    6608:	bf 45       	sbci	r27, 0x5F	; 95
    660a:	68 f0       	brcs	.+26     	; 0x6626 <_Z23clockConfigurationCheckv+0x56>
    660c:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    6610:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    6614:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    6618:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    661c:	81 15       	cp	r24, r1
    661e:	96 46       	sbci	r25, 0x66	; 102
    6620:	ae 4e       	sbci	r26, 0xEE	; 238
    6622:	bf 45       	sbci	r27, 0x5F	; 95
    6624:	10 f4       	brcc	.+4      	; 0x662a <_Z23clockConfigurationCheckv+0x5a>
    6626:	81 e0       	ldi	r24, 0x01	; 1
    6628:	01 c0       	rjmp	.+2      	; 0x662c <_Z23clockConfigurationCheckv+0x5c>
    662a:	80 e0       	ldi	r24, 0x00	; 0
    662c:	88 23       	and	r24, r24
    662e:	11 f0       	breq	.+4      	; 0x6634 <_Z23clockConfigurationCheckv+0x64>
	{
		return(CONFIGURATION_ERROR);
    6630:	82 e0       	ldi	r24, 0x02	; 2
    6632:	62 c0       	rjmp	.+196    	; 0x66f8 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_event_finish_epoch <= g_event_start_epoch) /* Event configured to finish before it started */
    6634:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    6638:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    663c:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    6640:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    6644:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    6648:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    664c:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    6650:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    6654:	61 e0       	ldi	r22, 0x01	; 1
    6656:	82 17       	cp	r24, r18
    6658:	93 07       	cpc	r25, r19
    665a:	a4 07       	cpc	r26, r20
    665c:	b5 07       	cpc	r27, r21
    665e:	08 f4       	brcc	.+2      	; 0x6662 <_Z23clockConfigurationCheckv+0x92>
    6660:	60 e0       	ldi	r22, 0x00	; 0
    6662:	66 23       	and	r22, r22
    6664:	11 f0       	breq	.+4      	; 0x666a <_Z23clockConfigurationCheckv+0x9a>
	{
		return(CONFIGURATION_ERROR);
    6666:	82 e0       	ldi	r24, 0x02	; 2
    6668:	47 c0       	rjmp	.+142    	; 0x66f8 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_finish_epoch)  /* The scheduled event is over */
    666a:	20 91 b5 47 	lds	r18, 0x47B5	; 0x8047b5 <g_current_epoch>
    666e:	30 91 b6 47 	lds	r19, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    6672:	40 91 b7 47 	lds	r20, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    6676:	50 91 b8 47 	lds	r21, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    667a:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    667e:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    6682:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    6686:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    668a:	61 e0       	ldi	r22, 0x01	; 1
    668c:	82 17       	cp	r24, r18
    668e:	93 07       	cpc	r25, r19
    6690:	a4 07       	cpc	r26, r20
    6692:	b5 07       	cpc	r27, r21
    6694:	08 f0       	brcs	.+2      	; 0x6698 <_Z23clockConfigurationCheckv+0xc8>
    6696:	60 e0       	ldi	r22, 0x00	; 0
    6698:	66 23       	and	r22, r22
    669a:	11 f0       	breq	.+4      	; 0x66a0 <_Z23clockConfigurationCheckv+0xd0>
	{
		return(CONFIGURATION_ERROR);
    669c:	82 e0       	ldi	r24, 0x02	; 2
    669e:	2c c0       	rjmp	.+88     	; 0x66f8 <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_start_epoch)       /* Event should be running */
    66a0:	20 91 b5 47 	lds	r18, 0x47B5	; 0x8047b5 <g_current_epoch>
    66a4:	30 91 b6 47 	lds	r19, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    66a8:	40 91 b7 47 	lds	r20, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    66ac:	50 91 b8 47 	lds	r21, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    66b0:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    66b4:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    66b8:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    66bc:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    66c0:	61 e0       	ldi	r22, 0x01	; 1
    66c2:	82 17       	cp	r24, r18
    66c4:	93 07       	cpc	r25, r19
    66c6:	a4 07       	cpc	r26, r20
    66c8:	b5 07       	cpc	r27, r21
    66ca:	08 f0       	brcs	.+2      	; 0x66ce <_Z23clockConfigurationCheckv+0xfe>
    66cc:	60 e0       	ldi	r22, 0x00	; 0
    66ce:	66 23       	and	r22, r22
    66d0:	51 f0       	breq	.+20     	; 0x66e6 <_Z23clockConfigurationCheckv+0x116>
	{
		if(!g_event_enabled)
    66d2:	90 91 94 47 	lds	r25, 0x4794	; 0x804794 <g_event_enabled>
    66d6:	81 e0       	ldi	r24, 0x01	; 1
    66d8:	89 27       	eor	r24, r25
    66da:	88 23       	and	r24, r24
    66dc:	11 f0       	breq	.+4      	; 0x66e2 <_Z23clockConfigurationCheckv+0x112>
		{
			return(SCHEDULED_EVENT_DID_NOT_START);  /* Event scheduled to be running isn't */
    66de:	83 e0       	ldi	r24, 0x03	; 3
    66e0:	0b c0       	rjmp	.+22     	; 0x66f8 <_Z23clockConfigurationCheckv+0x128>
		}
		else
		{
			return(EVENT_IN_PROGRESS);              /* Event is running, so clock settings don't matter */
    66e2:	85 e0       	ldi	r24, 0x05	; 5
    66e4:	09 c0       	rjmp	.+18     	; 0x66f8 <_Z23clockConfigurationCheckv+0x128>
		}
	}
	else if(!g_use_rtc_for_startstop)
    66e6:	90 91 b9 47 	lds	r25, 0x47B9	; 0x8047b9 <g_use_rtc_for_startstop>
    66ea:	81 e0       	ldi	r24, 0x01	; 1
    66ec:	89 27       	eor	r24, r25
    66ee:	88 23       	and	r24, r24
    66f0:	11 f0       	breq	.+4      	; 0x66f6 <_Z23clockConfigurationCheckv+0x126>
	{
		return(SCHEDULED_EVENT_WILL_NEVER_RUN);
    66f2:	84 e0       	ldi	r24, 0x04	; 4
    66f4:	01 c0       	rjmp	.+2      	; 0x66f8 <_Z23clockConfigurationCheckv+0x128>
	}

	return(WAITING_FOR_START);  /* Future event hasn't started yet */
    66f6:	81 e0       	ldi	r24, 0x01	; 1
}
    66f8:	df 91       	pop	r29
    66fa:	cf 91       	pop	r28
    66fc:	08 95       	ret

000066fe <_Z18reportConfigErrorsv>:

void reportConfigErrors(void)
{
    66fe:	cf 93       	push	r28
    6700:	df 93       	push	r29
    6702:	cd b7       	in	r28, 0x3d	; 61
    6704:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    6706:	80 e0       	ldi	r24, 0x00	; 0
    6708:	90 e0       	ldi	r25, 0x00	; 0
    670a:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    670e:	dc 01       	movw	r26, r24
    6710:	cb 01       	movw	r24, r22
    6712:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <g_current_epoch>
    6716:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <g_current_epoch+0x1>
    671a:	a0 93 b7 47 	sts	0x47B7, r26	; 0x8047b7 <g_current_epoch+0x2>
    671e:	b0 93 b8 47 	sts	0x47B8, r27	; 0x8047b8 <g_current_epoch+0x3>

	if(g_messages_text[STATION_ID][0] == '\0')
    6722:	80 91 73 47 	lds	r24, 0x4773	; 0x804773 <g_messages_text+0x15>
    6726:	88 23       	and	r24, r24
    6728:	21 f4       	brne	.+8      	; 0x6732 <_Z18reportConfigErrorsv+0x34>
	{
		sb_send_string(TEXT_SET_ID_TXT);
    672a:	83 e9       	ldi	r24, 0x93	; 147
    672c:	93 e4       	ldi	r25, 0x43	; 67
    672e:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
	}

	if(g_current_epoch < MINIMUM_EPOCH) /* Current time is invalid */
    6732:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    6736:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    673a:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    673e:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    6742:	81 15       	cp	r24, r1
    6744:	96 46       	sbci	r25, 0x66	; 102
    6746:	ae 4e       	sbci	r26, 0xEE	; 238
    6748:	bf 45       	sbci	r27, 0x5F	; 95
    674a:	20 f4       	brcc	.+8      	; 0x6754 <_Z18reportConfigErrorsv+0x56>
	{
		sb_send_string(TEXT_SET_TIME_TXT);
    674c:	84 eb       	ldi	r24, 0xB4	; 180
    674e:	93 e4       	ldi	r25, 0x43	; 67
    6750:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
	}

	if(g_event_finish_epoch < g_current_epoch)      /* Event has already finished */
    6754:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    6758:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    675c:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    6760:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    6764:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    6768:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    676c:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    6770:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    6774:	61 e0       	ldi	r22, 0x01	; 1
    6776:	28 17       	cp	r18, r24
    6778:	39 07       	cpc	r19, r25
    677a:	4a 07       	cpc	r20, r26
    677c:	5b 07       	cpc	r21, r27
    677e:	08 f0       	brcs	.+2      	; 0x6782 <_Z18reportConfigErrorsv+0x84>
    6780:	60 e0       	ldi	r22, 0x00	; 0
    6782:	66 23       	and	r22, r22
    6784:	11 f1       	breq	.+68     	; 0x67ca <_Z18reportConfigErrorsv+0xcc>
	{
		if(g_event_start_epoch < g_current_epoch)   /* Event has already started */
    6786:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    678a:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    678e:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    6792:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    6796:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    679a:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    679e:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    67a2:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    67a6:	61 e0       	ldi	r22, 0x01	; 1
    67a8:	28 17       	cp	r18, r24
    67aa:	39 07       	cpc	r19, r25
    67ac:	4a 07       	cpc	r20, r26
    67ae:	5b 07       	cpc	r21, r27
    67b0:	08 f0       	brcs	.+2      	; 0x67b4 <_Z18reportConfigErrorsv+0xb6>
    67b2:	60 e0       	ldi	r22, 0x00	; 0
    67b4:	66 23       	and	r22, r22
    67b6:	21 f0       	breq	.+8      	; 0x67c0 <_Z18reportConfigErrorsv+0xc2>
		{
			sb_send_string(TEXT_SET_START_TXT);
    67b8:	8c ed       	ldi	r24, 0xDC	; 220
    67ba:	93 e4       	ldi	r25, 0x43	; 67
    67bc:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
    67c0:	82 e0       	ldi	r24, 0x02	; 2
    67c2:	94 e4       	ldi	r25, 0x44	; 68
    67c4:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    67c8:	33 c0       	rjmp	.+102    	; 0x6830 <_Z18reportConfigErrorsv+0x132>
			sb_send_string(TEXT_SET_START_TXT);
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
	}
	else if(g_event_start_epoch < g_current_epoch)  /* Event has already started */
    67ca:	20 91 8c 47 	lds	r18, 0x478C	; 0x80478c <g_event_start_epoch>
    67ce:	30 91 8d 47 	lds	r19, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    67d2:	40 91 8e 47 	lds	r20, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    67d6:	50 91 8f 47 	lds	r21, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    67da:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <g_current_epoch>
    67de:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <g_current_epoch+0x1>
    67e2:	a0 91 b7 47 	lds	r26, 0x47B7	; 0x8047b7 <g_current_epoch+0x2>
    67e6:	b0 91 b8 47 	lds	r27, 0x47B8	; 0x8047b8 <g_current_epoch+0x3>
    67ea:	61 e0       	ldi	r22, 0x01	; 1
    67ec:	28 17       	cp	r18, r24
    67ee:	39 07       	cpc	r19, r25
    67f0:	4a 07       	cpc	r20, r26
    67f2:	5b 07       	cpc	r21, r27
    67f4:	08 f0       	brcs	.+2      	; 0x67f8 <_Z18reportConfigErrorsv+0xfa>
    67f6:	60 e0       	ldi	r22, 0x00	; 0
    67f8:	66 23       	and	r22, r22
    67fa:	d1 f0       	breq	.+52     	; 0x6830 <_Z18reportConfigErrorsv+0x132>
	{
		if(g_event_start_epoch < MINIMUM_EPOCH)     /* Start in invalid */
    67fc:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    6800:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    6804:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    6808:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    680c:	21 e0       	ldi	r18, 0x01	; 1
    680e:	81 15       	cp	r24, r1
    6810:	96 46       	sbci	r25, 0x66	; 102
    6812:	ae 4e       	sbci	r26, 0xEE	; 238
    6814:	bf 45       	sbci	r27, 0x5F	; 95
    6816:	08 f0       	brcs	.+2      	; 0x681a <_Z18reportConfigErrorsv+0x11c>
    6818:	20 e0       	ldi	r18, 0x00	; 0
    681a:	22 23       	and	r18, r18
    681c:	29 f0       	breq	.+10     	; 0x6828 <_Z18reportConfigErrorsv+0x12a>
		{
			sb_send_string(TEXT_SET_START_TXT);
    681e:	8c ed       	ldi	r24, 0xDC	; 220
    6820:	93 e4       	ldi	r25, 0x43	; 67
    6822:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    6826:	04 c0       	rjmp	.+8      	; 0x6830 <_Z18reportConfigErrorsv+0x132>
		{
			sb_send_string(TEXT_SET_START_TXT);
		}
		else
		{
			sb_send_string((char*)"Event running...\n");
    6828:	89 e2       	ldi	r24, 0x29	; 41
    682a:	94 e4       	ldi	r25, 0x44	; 68
    682c:	0e 94 d8 62 	call	0xc5b0	; 0xc5b0 <sb_send_string>
		}
	}
}
    6830:	00 00       	nop
    6832:	df 91       	pop	r29
    6834:	cf 91       	pop	r28
    6836:	08 95       	ret

00006838 <_Z41__static_initialization_and_destruction_0ii>:
    6838:	cf 93       	push	r28
    683a:	df 93       	push	r29
    683c:	00 d0       	rcall	.+0      	; 0x683e <_Z41__static_initialization_and_destruction_0ii+0x6>
    683e:	00 d0       	rcall	.+0      	; 0x6840 <_Z41__static_initialization_and_destruction_0ii+0x8>
    6840:	cd b7       	in	r28, 0x3d	; 61
    6842:	de b7       	in	r29, 0x3e	; 62
    6844:	89 83       	std	Y+1, r24	; 0x01
    6846:	9a 83       	std	Y+2, r25	; 0x02
    6848:	6b 83       	std	Y+3, r22	; 0x03
    684a:	7c 83       	std	Y+4, r23	; 0x04
    684c:	89 81       	ldd	r24, Y+1	; 0x01
    684e:	9a 81       	ldd	r25, Y+2	; 0x02
    6850:	01 97       	sbiw	r24, 0x01	; 1
    6852:	61 f4       	brne	.+24     	; 0x686c <_Z41__static_initialization_and_destruction_0ii+0x34>
    6854:	8b 81       	ldd	r24, Y+3	; 0x03
    6856:	9c 81       	ldd	r25, Y+4	; 0x04
    6858:	01 96       	adiw	r24, 0x01	; 1
    685a:	41 f4       	brne	.+16     	; 0x686c <_Z41__static_initialization_and_destruction_0ii+0x34>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    685c:	8a ea       	ldi	r24, 0xAA	; 170
    685e:	97 e4       	ldi	r25, 0x47	; 71
    6860:	0e 94 27 52 	call	0xa44e	; 0xa44e <_ZN4ledsC1Ev>

EepromManager g_ee_mgr;
    6864:	8b ea       	ldi	r24, 0xAB	; 171
    6866:	97 e4       	ldi	r25, 0x47	; 71
    6868:	0e 94 9c 45 	call	0x8b38	; 0x8b38 <_ZN13EepromManagerC1Ev>
    686c:	89 81       	ldd	r24, Y+1	; 0x01
    686e:	9a 81       	ldd	r25, Y+2	; 0x02
    6870:	89 2b       	or	r24, r25
    6872:	61 f4       	brne	.+24     	; 0x688c <_Z41__static_initialization_and_destruction_0ii+0x54>
    6874:	8b 81       	ldd	r24, Y+3	; 0x03
    6876:	9c 81       	ldd	r25, Y+4	; 0x04
    6878:	01 96       	adiw	r24, 0x01	; 1
    687a:	41 f4       	brne	.+16     	; 0x688c <_Z41__static_initialization_and_destruction_0ii+0x54>
    687c:	8b ea       	ldi	r24, 0xAB	; 171
    687e:	97 e4       	ldi	r25, 0x47	; 71
    6880:	0e 94 a9 45 	call	0x8b52	; 0x8b52 <_ZN13EepromManagerD1Ev>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    6884:	8a ea       	ldi	r24, 0xAA	; 170
    6886:	97 e4       	ldi	r25, 0x47	; 71
    6888:	0e 94 34 52 	call	0xa468	; 0xa468 <_ZN4ledsD1Ev>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    688c:	00 00       	nop
    688e:	24 96       	adiw	r28, 0x04	; 4
    6890:	cd bf       	out	0x3d, r28	; 61
    6892:	de bf       	out	0x3e, r29	; 62
    6894:	df 91       	pop	r29
    6896:	cf 91       	pop	r28
    6898:	08 95       	ret

0000689a <_GLOBAL__sub_I_g_antenna_connect_state>:
    689a:	cf 93       	push	r28
    689c:	df 93       	push	r29
    689e:	cd b7       	in	r28, 0x3d	; 61
    68a0:	de b7       	in	r29, 0x3e	; 62
    68a2:	6f ef       	ldi	r22, 0xFF	; 255
    68a4:	7f ef       	ldi	r23, 0xFF	; 255
    68a6:	81 e0       	ldi	r24, 0x01	; 1
    68a8:	90 e0       	ldi	r25, 0x00	; 0
    68aa:	0e 94 1c 34 	call	0x6838	; 0x6838 <_Z41__static_initialization_and_destruction_0ii>
    68ae:	df 91       	pop	r29
    68b0:	cf 91       	pop	r28
    68b2:	08 95       	ret

000068b4 <_GLOBAL__sub_D_g_antenna_connect_state>:
    68b4:	cf 93       	push	r28
    68b6:	df 93       	push	r29
    68b8:	cd b7       	in	r28, 0x3d	; 61
    68ba:	de b7       	in	r29, 0x3e	; 62
    68bc:	6f ef       	ldi	r22, 0xFF	; 255
    68be:	7f ef       	ldi	r23, 0xFF	; 255
    68c0:	80 e0       	ldi	r24, 0x00	; 0
    68c2:	90 e0       	ldi	r25, 0x00	; 0
    68c4:	0e 94 1c 34 	call	0x6838	; 0x6838 <_Z41__static_initialization_and_destruction_0ii>
    68c8:	df 91       	pop	r29
    68ca:	cf 91       	pop	r28
    68cc:	08 95       	ret

000068ce <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	} ADC_Init_t;
	
static ADC_Init_t g_adc_initialization = ADC_NOT_INITIALIZED;

void ADC0_setADCChannel(ADC_Active_Channel_t chan)
{
    68ce:	cf 93       	push	r28
    68d0:	df 93       	push	r29
    68d2:	1f 92       	push	r1
    68d4:	cd b7       	in	r28, 0x3d	; 61
    68d6:	de b7       	in	r29, 0x3e	; 62
    68d8:	89 83       	std	Y+1, r24	; 0x01
	switch(chan)
    68da:	89 81       	ldd	r24, Y+1	; 0x01
    68dc:	88 2f       	mov	r24, r24
    68de:	90 e0       	ldi	r25, 0x00	; 0
    68e0:	82 30       	cpi	r24, 0x02	; 2
    68e2:	91 05       	cpc	r25, r1
    68e4:	41 f1       	breq	.+80     	; 0x6936 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x68>
    68e6:	83 30       	cpi	r24, 0x03	; 3
    68e8:	91 05       	cpc	r25, r1
    68ea:	2c f4       	brge	.+10     	; 0x68f6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    68ec:	00 97       	sbiw	r24, 0x00	; 0
    68ee:	49 f0       	breq	.+18     	; 0x6902 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    68f0:	01 97       	sbiw	r24, 0x01	; 1
    68f2:	a1 f0       	breq	.+40     	; 0x691c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    68f4:	47 c0       	rjmp	.+142    	; 0x6984 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    68f6:	83 30       	cpi	r24, 0x03	; 3
    68f8:	91 05       	cpc	r25, r1
    68fa:	51 f1       	breq	.+84     	; 0x6950 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x82>
    68fc:	04 97       	sbiw	r24, 0x04	; 4
    68fe:	a9 f1       	breq	.+106    	; 0x696a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9c>
    6900:	41 c0       	rjmp	.+130    	; 0x6984 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
	{
		case ADCAudioInput:
		{
			if(g_adc_initialization != ADC_FREE_RUN_INITIALIZED)
    6902:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZL20g_adc_initialization>
    6906:	81 30       	cpi	r24, 0x01	; 1
    6908:	19 f0       	breq	.+6      	; 0x6910 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
			{
				ADC0_SYSTEM_init(FREE_RUNNING); 
    690a:	81 e0       	ldi	r24, 0x01	; 1
    690c:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;
    6910:	80 e0       	ldi	r24, 0x00	; 0
    6912:	96 e0       	ldi	r25, 0x06	; 6
    6914:	22 e0       	ldi	r18, 0x02	; 2
    6916:	fc 01       	movw	r30, r24
    6918:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    691a:	37 c0       	rjmp	.+110    	; 0x698a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCExternalBatteryVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    691c:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZL20g_adc_initialization>
    6920:	82 30       	cpi	r24, 0x02	; 2
    6922:	19 f0       	breq	.+6      	; 0x692a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6924:	80 e0       	ldi	r24, 0x00	; 0
    6926:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;
    692a:	80 e0       	ldi	r24, 0x00	; 0
    692c:	96 e0       	ldi	r25, 0x06	; 6
    692e:	23 e0       	ldi	r18, 0x03	; 3
    6930:	fc 01       	movw	r30, r24
    6932:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6934:	2a c0       	rjmp	.+84     	; 0x698a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADC12VRegulatedVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6936:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZL20g_adc_initialization>
    693a:	82 30       	cpi	r24, 0x02	; 2
    693c:	19 f0       	breq	.+6      	; 0x6944 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x76>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    693e:	80 e0       	ldi	r24, 0x00	; 0
    6940:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
    6944:	80 e0       	ldi	r24, 0x00	; 0
    6946:	96 e0       	ldi	r25, 0x06	; 6
    6948:	24 e0       	ldi	r18, 0x04	; 4
    694a:	fc 01       	movw	r30, r24
    694c:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    694e:	1d c0       	rjmp	.+58     	; 0x698a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTXAdjustableVoltage:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    6950:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZL20g_adc_initialization>
    6954:	82 30       	cpi	r24, 0x02	; 2
    6956:	19 f0       	breq	.+6      	; 0x695e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6958:	80 e0       	ldi	r24, 0x00	; 0
    695a:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
    695e:	80 e0       	ldi	r24, 0x00	; 0
    6960:	96 e0       	ldi	r25, 0x06	; 6
    6962:	25 e0       	ldi	r18, 0x05	; 5
    6964:	fc 01       	movw	r30, r24
    6966:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6968:	10 c0       	rjmp	.+32     	; 0x698a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		case ADCTemperature:
		{
			if(g_adc_initialization != ADC_SINGLE_CONVERSION_INITIALIZED)
    696a:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZL20g_adc_initialization>
    696e:	82 30       	cpi	r24, 0x02	; 2
    6970:	19 f0       	breq	.+6      	; 0x6978 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xaa>
			{
				ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6972:	80 e0       	ldi	r24, 0x00	; 0
    6974:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL16ADC0_SYSTEM_initb>
			}
			
			ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6978:	80 e0       	ldi	r24, 0x00	; 0
    697a:	96 e0       	ldi	r25, 0x06	; 6
    697c:	22 e4       	ldi	r18, 0x42	; 66
    697e:	fc 01       	movw	r30, r24
    6980:	20 87       	std	Z+8, r18	; 0x08
		}
		break;
    6982:	03 c0       	rjmp	.+6      	; 0x698a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
		
		default:
		{
			ADC0_SYSTEM_shutdown();
    6984:	0e 94 7a 36 	call	0x6cf4	; 0x6cf4 <_ZL20ADC0_SYSTEM_shutdownv>
		}
		break;	
    6988:	00 00       	nop
	}
}
    698a:	00 00       	nop
    698c:	0f 90       	pop	r0
    698e:	df 91       	pop	r29
    6990:	cf 91       	pop	r28
    6992:	08 95       	ret

00006994 <_Z20ADC0_startConversionv>:

void ADC0_startConversion(void)
{
    6994:	cf 93       	push	r28
    6996:	df 93       	push	r29
    6998:	cd b7       	in	r28, 0x3d	; 61
    699a:	de b7       	in	r29, 0x3e	; 62
	if(g_adc_initialization != ADC_NOT_INITIALIZED)
    699c:	80 91 cf 47 	lds	r24, 0x47CF	; 0x8047cf <_ZL20g_adc_initialization>
    69a0:	88 23       	and	r24, r24
    69a2:	49 f0       	breq	.+18     	; 0x69b6 <_Z20ADC0_startConversionv+0x22>
	{
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    69a4:	80 e0       	ldi	r24, 0x00	; 0
    69a6:	96 e0       	ldi	r25, 0x06	; 6
    69a8:	fc 01       	movw	r30, r24
    69aa:	14 86       	std	Z+12, r1	; 0x0c
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    69ac:	80 e0       	ldi	r24, 0x00	; 0
    69ae:	96 e0       	ldi	r25, 0x06	; 6
    69b0:	21 e0       	ldi	r18, 0x01	; 1
    69b2:	fc 01       	movw	r30, r24
    69b4:	22 87       	std	Z+10, r18	; 0x0a
	}
}
    69b6:	00 00       	nop
    69b8:	df 91       	pop	r29
    69ba:	cf 91       	pop	r28
    69bc:	08 95       	ret

000069be <_Z19ADC0_conversionDonev>:

bool ADC0_conversionDone(void)
{
    69be:	cf 93       	push	r28
    69c0:	df 93       	push	r29
    69c2:	cd b7       	in	r28, 0x3d	; 61
    69c4:	de b7       	in	r29, 0x3e	; 62
	/* Check if the conversion is done  */
	return (ADC0.INTFLAGS & ADC_RESRDY_bm);
    69c6:	80 e0       	ldi	r24, 0x00	; 0
    69c8:	96 e0       	ldi	r25, 0x06	; 6
    69ca:	fc 01       	movw	r30, r24
    69cc:	85 85       	ldd	r24, Z+13	; 0x0d
    69ce:	88 2f       	mov	r24, r24
    69d0:	90 e0       	ldi	r25, 0x00	; 0
    69d2:	81 70       	andi	r24, 0x01	; 1
    69d4:	99 27       	eor	r25, r25
    69d6:	21 e0       	ldi	r18, 0x01	; 1
    69d8:	89 2b       	or	r24, r25
    69da:	09 f4       	brne	.+2      	; 0x69de <_Z19ADC0_conversionDonev+0x20>
    69dc:	20 e0       	ldi	r18, 0x00	; 0
    69de:	82 2f       	mov	r24, r18
}
    69e0:	df 91       	pop	r29
    69e2:	cf 91       	pop	r28
    69e4:	08 95       	ret

000069e6 <_Z9ADC0_readv>:

int ADC0_read(void)
{
    69e6:	cf 93       	push	r28
    69e8:	df 93       	push	r29
    69ea:	cd b7       	in	r28, 0x3d	; 61
    69ec:	de b7       	in	r29, 0x3e	; 62
	return ADC0.RES; 	/* Reading the result also clears the interrupt flag */
    69ee:	80 e0       	ldi	r24, 0x00	; 0
    69f0:	96 e0       	ldi	r25, 0x06	; 6
    69f2:	fc 01       	movw	r30, r24
    69f4:	80 89       	ldd	r24, Z+16	; 0x10
    69f6:	91 89       	ldd	r25, Z+17	; 0x11
}
    69f8:	df 91       	pop	r29
    69fa:	cf 91       	pop	r28
    69fc:	08 95       	ret

000069fe <_Z12temperatureCv>:

int16_t temperatureC()
{
    69fe:	cf 93       	push	r28
    6a00:	df 93       	push	r29
    6a02:	cd b7       	in	r28, 0x3d	; 61
    6a04:	de b7       	in	r29, 0x3e	; 62
    6a06:	2d 97       	sbiw	r28, 0x0d	; 13
    6a08:	cd bf       	out	0x3d, r28	; 61
    6a0a:	de bf       	out	0x3e, r29	; 62
	uint16_t sigrow_offset = SIGROW.TEMPSENSE1; // Read unsigned value from signature row
    6a0c:	80 e0       	ldi	r24, 0x00	; 0
    6a0e:	91 e1       	ldi	r25, 0x11	; 17
    6a10:	fc 01       	movw	r30, r24
    6a12:	86 81       	ldd	r24, Z+6	; 0x06
    6a14:	97 81       	ldd	r25, Z+7	; 0x07
    6a16:	8b 83       	std	Y+3, r24	; 0x03
    6a18:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t sigrow_slope = SIGROW.TEMPSENSE0; // Read unsigned value from signature row
    6a1a:	80 e0       	ldi	r24, 0x00	; 0
    6a1c:	91 e1       	ldi	r25, 0x11	; 17
    6a1e:	fc 01       	movw	r30, r24
    6a20:	84 81       	ldd	r24, Z+4	; 0x04
    6a22:	95 81       	ldd	r25, Z+5	; 0x05
    6a24:	8d 83       	std	Y+5, r24	; 0x05
    6a26:	9e 83       	std	Y+6, r25	; 0x06
	static uint32_t wait = 100000;
	uint16_t adc_reading;
	int16_t temperature_in_C = -273.15;
    6a28:	8f ee       	ldi	r24, 0xEF	; 239
    6a2a:	9e ef       	ldi	r25, 0xFE	; 254
    6a2c:	89 83       	std	Y+1, r24	; 0x01
    6a2e:	9a 83       	std	Y+2, r25	; 0x02
	uint8_t holdMux;
	
	holdMux = ADC0.MUXPOS;
    6a30:	80 e0       	ldi	r24, 0x00	; 0
    6a32:	96 e0       	ldi	r25, 0x06	; 6
    6a34:	fc 01       	movw	r30, r24
    6a36:	80 85       	ldd	r24, Z+8	; 0x08
    6a38:	8f 83       	std	Y+7, r24	; 0x07
	ADC0_SYSTEM_init(SINGLE_CONVERSION);
    6a3a:	80 e0       	ldi	r24, 0x00	; 0
    6a3c:	0e 94 68 36 	call	0x6cd0	; 0x6cd0 <_ZL16ADC0_SYSTEM_initb>
	ADC0.MUXPOS = ADC_MUXPOS_TEMPSENSE_gc;
    6a40:	80 e0       	ldi	r24, 0x00	; 0
    6a42:	96 e0       	ldi	r25, 0x06	; 6
    6a44:	22 e4       	ldi	r18, 0x42	; 66
    6a46:	fc 01       	movw	r30, r24
    6a48:	20 87       	std	Z+8, r18	; 0x08
	ADC0_startConversion();
    6a4a:	0e 94 ca 34 	call	0x6994	; 0x6994 <_Z20ADC0_startConversionv>
	
	while((!ADC0_conversionDone()) && wait--);
    6a4e:	0e 94 df 34 	call	0x69be	; 0x69be <_Z19ADC0_conversionDonev>
    6a52:	98 2f       	mov	r25, r24
    6a54:	81 e0       	ldi	r24, 0x01	; 1
    6a56:	89 27       	eor	r24, r25
    6a58:	88 23       	and	r24, r24
    6a5a:	e1 f0       	breq	.+56     	; 0x6a94 <_Z12temperatureCv+0x96>
    6a5c:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait>
    6a60:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    6a64:	a0 91 26 40 	lds	r26, 0x4026	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    6a68:	b0 91 27 40 	lds	r27, 0x4027	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    6a6c:	9c 01       	movw	r18, r24
    6a6e:	ad 01       	movw	r20, r26
    6a70:	21 50       	subi	r18, 0x01	; 1
    6a72:	31 09       	sbc	r19, r1
    6a74:	41 09       	sbc	r20, r1
    6a76:	51 09       	sbc	r21, r1
    6a78:	20 93 24 40 	sts	0x4024, r18	; 0x804024 <_ZZ12temperatureCvE4wait>
    6a7c:	30 93 25 40 	sts	0x4025, r19	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    6a80:	40 93 26 40 	sts	0x4026, r20	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    6a84:	50 93 27 40 	sts	0x4027, r21	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    6a88:	89 2b       	or	r24, r25
    6a8a:	8a 2b       	or	r24, r26
    6a8c:	8b 2b       	or	r24, r27
    6a8e:	11 f0       	breq	.+4      	; 0x6a94 <_Z12temperatureCv+0x96>
    6a90:	81 e0       	ldi	r24, 0x01	; 1
    6a92:	01 c0       	rjmp	.+2      	; 0x6a96 <_Z12temperatureCv+0x98>
    6a94:	80 e0       	ldi	r24, 0x00	; 0
    6a96:	88 23       	and	r24, r24
    6a98:	09 f0       	breq	.+2      	; 0x6a9c <_Z12temperatureCv+0x9e>
    6a9a:	d9 cf       	rjmp	.-78     	; 0x6a4e <_Z12temperatureCv+0x50>
	
	if(wait)
    6a9c:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <_ZZ12temperatureCvE4wait>
    6aa0:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <_ZZ12temperatureCvE4wait+0x1>
    6aa4:	a0 91 26 40 	lds	r26, 0x4026	; 0x804026 <_ZZ12temperatureCvE4wait+0x2>
    6aa8:	b0 91 27 40 	lds	r27, 0x4027	; 0x804027 <_ZZ12temperatureCvE4wait+0x3>
    6aac:	89 2b       	or	r24, r25
    6aae:	8a 2b       	or	r24, r26
    6ab0:	8b 2b       	or	r24, r27
    6ab2:	09 f4       	brne	.+2      	; 0x6ab6 <_Z12temperatureCv+0xb8>
    6ab4:	4d c0       	rjmp	.+154    	; 0x6b50 <_Z12temperatureCv+0x152>
	{
		adc_reading = ADC0.RES;
    6ab6:	80 e0       	ldi	r24, 0x00	; 0
    6ab8:	96 e0       	ldi	r25, 0x06	; 6
    6aba:	fc 01       	movw	r30, r24
    6abc:	80 89       	ldd	r24, Z+16	; 0x10
    6abe:	91 89       	ldd	r25, Z+17	; 0x11
    6ac0:	88 87       	std	Y+8, r24	; 0x08
    6ac2:	99 87       	std	Y+9, r25	; 0x09
		uint32_t temp = sigrow_offset - adc_reading;
    6ac4:	2b 81       	ldd	r18, Y+3	; 0x03
    6ac6:	3c 81       	ldd	r19, Y+4	; 0x04
    6ac8:	88 85       	ldd	r24, Y+8	; 0x08
    6aca:	99 85       	ldd	r25, Y+9	; 0x09
    6acc:	a9 01       	movw	r20, r18
    6ace:	48 1b       	sub	r20, r24
    6ad0:	59 0b       	sbc	r21, r25
    6ad2:	ca 01       	movw	r24, r20
    6ad4:	cc 01       	movw	r24, r24
    6ad6:	a0 e0       	ldi	r26, 0x00	; 0
    6ad8:	b0 e0       	ldi	r27, 0x00	; 0
    6ada:	8a 87       	std	Y+10, r24	; 0x0a
    6adc:	9b 87       	std	Y+11, r25	; 0x0b
    6ade:	ac 87       	std	Y+12, r26	; 0x0c
    6ae0:	bd 87       	std	Y+13, r27	; 0x0d
		temp *= sigrow_slope; // Result will overflow 16-bit variable
    6ae2:	8d 81       	ldd	r24, Y+5	; 0x05
    6ae4:	9e 81       	ldd	r25, Y+6	; 0x06
    6ae6:	cc 01       	movw	r24, r24
    6ae8:	a0 e0       	ldi	r26, 0x00	; 0
    6aea:	b0 e0       	ldi	r27, 0x00	; 0
    6aec:	2a 85       	ldd	r18, Y+10	; 0x0a
    6aee:	3b 85       	ldd	r19, Y+11	; 0x0b
    6af0:	4c 85       	ldd	r20, Y+12	; 0x0c
    6af2:	5d 85       	ldd	r21, Y+13	; 0x0d
    6af4:	bc 01       	movw	r22, r24
    6af6:	cd 01       	movw	r24, r26
    6af8:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    6afc:	dc 01       	movw	r26, r24
    6afe:	cb 01       	movw	r24, r22
    6b00:	8a 87       	std	Y+10, r24	; 0x0a
    6b02:	9b 87       	std	Y+11, r25	; 0x0b
    6b04:	ac 87       	std	Y+12, r26	; 0x0c
    6b06:	bd 87       	std	Y+13, r27	; 0x0d
		temp += 0x0800; // Add 4096/2 to get correct rounding on division below
    6b08:	8a 85       	ldd	r24, Y+10	; 0x0a
    6b0a:	9b 85       	ldd	r25, Y+11	; 0x0b
    6b0c:	ac 85       	ldd	r26, Y+12	; 0x0c
    6b0e:	bd 85       	ldd	r27, Y+13	; 0x0d
    6b10:	98 5f       	subi	r25, 0xF8	; 248
    6b12:	af 4f       	sbci	r26, 0xFF	; 255
    6b14:	bf 4f       	sbci	r27, 0xFF	; 255
    6b16:	8a 87       	std	Y+10, r24	; 0x0a
    6b18:	9b 87       	std	Y+11, r25	; 0x0b
    6b1a:	ac 87       	std	Y+12, r26	; 0x0c
    6b1c:	bd 87       	std	Y+13, r27	; 0x0d
		temp >>= 12; // Round off to nearest degree in Kelvin, by dividing with 2^12 (4096)
    6b1e:	8a 85       	ldd	r24, Y+10	; 0x0a
    6b20:	9b 85       	ldd	r25, Y+11	; 0x0b
    6b22:	ac 85       	ldd	r26, Y+12	; 0x0c
    6b24:	bd 85       	ldd	r27, Y+13	; 0x0d
    6b26:	07 2e       	mov	r0, r23
    6b28:	7c e0       	ldi	r23, 0x0C	; 12
    6b2a:	b6 95       	lsr	r27
    6b2c:	a7 95       	ror	r26
    6b2e:	97 95       	ror	r25
    6b30:	87 95       	ror	r24
    6b32:	7a 95       	dec	r23
    6b34:	d1 f7       	brne	.-12     	; 0x6b2a <_Z12temperatureCv+0x12c>
    6b36:	70 2d       	mov	r23, r0
    6b38:	8a 87       	std	Y+10, r24	; 0x0a
    6b3a:	9b 87       	std	Y+11, r25	; 0x0b
    6b3c:	ac 87       	std	Y+12, r26	; 0x0c
    6b3e:	bd 87       	std	Y+13, r27	; 0x0d
		temperature_in_C += temp;
    6b40:	2a 85       	ldd	r18, Y+10	; 0x0a
    6b42:	3b 85       	ldd	r19, Y+11	; 0x0b
    6b44:	89 81       	ldd	r24, Y+1	; 0x01
    6b46:	9a 81       	ldd	r25, Y+2	; 0x02
    6b48:	82 0f       	add	r24, r18
    6b4a:	93 1f       	adc	r25, r19
    6b4c:	89 83       	std	Y+1, r24	; 0x01
    6b4e:	9a 83       	std	Y+2, r25	; 0x02
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
    6b50:	80 e0       	ldi	r24, 0x00	; 0
    6b52:	96 e0       	ldi	r25, 0x06	; 6
    6b54:	2f 81       	ldd	r18, Y+7	; 0x07
    6b56:	fc 01       	movw	r30, r24
    6b58:	20 87       	std	Z+8, r18	; 0x08
	
	return(temperature_in_C);
    6b5a:	89 81       	ldd	r24, Y+1	; 0x01
    6b5c:	9a 81       	ldd	r25, Y+2	; 0x02
}
    6b5e:	2d 96       	adiw	r28, 0x0d	; 13
    6b60:	cd bf       	out	0x3d, r28	; 61
    6b62:	de bf       	out	0x3e, r29	; 62
    6b64:	df 91       	pop	r29
    6b66:	cf 91       	pop	r28
    6b68:	08 95       	ret

00006b6a <_ZL9PORT_initv>:


static void PORT_init(void)
{
    6b6a:	cf 93       	push	r28
    6b6c:	df 93       	push	r29
    6b6e:	cd b7       	in	r28, 0x3d	; 61
    6b70:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    6b72:	80 e6       	ldi	r24, 0x60	; 96
    6b74:	94 e0       	ldi	r25, 0x04	; 4
    6b76:	20 e6       	ldi	r18, 0x60	; 96
    6b78:	34 e0       	ldi	r19, 0x04	; 4
    6b7a:	f9 01       	movw	r30, r18
    6b7c:	22 89       	ldd	r18, Z+18	; 0x12
    6b7e:	28 7f       	andi	r18, 0xF8	; 248
    6b80:	fc 01       	movw	r30, r24
    6b82:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6b84:	80 e6       	ldi	r24, 0x60	; 96
    6b86:	94 e0       	ldi	r25, 0x04	; 4
    6b88:	20 e6       	ldi	r18, 0x60	; 96
    6b8a:	34 e0       	ldi	r19, 0x04	; 4
    6b8c:	f9 01       	movw	r30, r18
    6b8e:	22 89       	ldd	r18, Z+18	; 0x12
    6b90:	24 60       	ori	r18, 0x04	; 4
    6b92:	fc 01       	movw	r30, r24
    6b94:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    6b96:	80 e6       	ldi	r24, 0x60	; 96
    6b98:	94 e0       	ldi	r25, 0x04	; 4
    6b9a:	20 e6       	ldi	r18, 0x60	; 96
    6b9c:	34 e0       	ldi	r19, 0x04	; 4
    6b9e:	f9 01       	movw	r30, r18
    6ba0:	23 89       	ldd	r18, Z+19	; 0x13
    6ba2:	28 7f       	andi	r18, 0xF8	; 248
    6ba4:	fc 01       	movw	r30, r24
    6ba6:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6ba8:	80 e6       	ldi	r24, 0x60	; 96
    6baa:	94 e0       	ldi	r25, 0x04	; 4
    6bac:	20 e6       	ldi	r18, 0x60	; 96
    6bae:	34 e0       	ldi	r19, 0x04	; 4
    6bb0:	f9 01       	movw	r30, r18
    6bb2:	23 89       	ldd	r18, Z+19	; 0x13
    6bb4:	24 60       	ori	r18, 0x04	; 4
    6bb6:	fc 01       	movw	r30, r24
    6bb8:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    6bba:	80 e6       	ldi	r24, 0x60	; 96
    6bbc:	94 e0       	ldi	r25, 0x04	; 4
    6bbe:	20 e6       	ldi	r18, 0x60	; 96
    6bc0:	34 e0       	ldi	r19, 0x04	; 4
    6bc2:	f9 01       	movw	r30, r18
    6bc4:	24 89       	ldd	r18, Z+20	; 0x14
    6bc6:	28 7f       	andi	r18, 0xF8	; 248
    6bc8:	fc 01       	movw	r30, r24
    6bca:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6bcc:	80 e6       	ldi	r24, 0x60	; 96
    6bce:	94 e0       	ldi	r25, 0x04	; 4
    6bd0:	20 e6       	ldi	r18, 0x60	; 96
    6bd2:	34 e0       	ldi	r19, 0x04	; 4
    6bd4:	f9 01       	movw	r30, r18
    6bd6:	24 89       	ldd	r18, Z+20	; 0x14
    6bd8:	24 60       	ori	r18, 0x04	; 4
    6bda:	fc 01       	movw	r30, r24
    6bdc:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    6bde:	80 e6       	ldi	r24, 0x60	; 96
    6be0:	94 e0       	ldi	r25, 0x04	; 4
    6be2:	20 e6       	ldi	r18, 0x60	; 96
    6be4:	34 e0       	ldi	r19, 0x04	; 4
    6be6:	f9 01       	movw	r30, r18
    6be8:	25 89       	ldd	r18, Z+21	; 0x15
    6bea:	28 7f       	andi	r18, 0xF8	; 248
    6bec:	fc 01       	movw	r30, r24
    6bee:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6bf0:	80 e6       	ldi	r24, 0x60	; 96
    6bf2:	94 e0       	ldi	r25, 0x04	; 4
    6bf4:	20 e6       	ldi	r18, 0x60	; 96
    6bf6:	34 e0       	ldi	r19, 0x04	; 4
    6bf8:	f9 01       	movw	r30, r18
    6bfa:	25 89       	ldd	r18, Z+21	; 0x15
    6bfc:	24 60       	ori	r18, 0x04	; 4
    6bfe:	fc 01       	movw	r30, r24
    6c00:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    6c02:	80 e6       	ldi	r24, 0x60	; 96
    6c04:	94 e0       	ldi	r25, 0x04	; 4
    6c06:	20 e6       	ldi	r18, 0x60	; 96
    6c08:	34 e0       	ldi	r19, 0x04	; 4
    6c0a:	f9 01       	movw	r30, r18
    6c0c:	22 89       	ldd	r18, Z+18	; 0x12
    6c0e:	27 7f       	andi	r18, 0xF7	; 247
    6c10:	fc 01       	movw	r30, r24
    6c12:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    6c14:	80 e6       	ldi	r24, 0x60	; 96
    6c16:	94 e0       	ldi	r25, 0x04	; 4
    6c18:	20 e6       	ldi	r18, 0x60	; 96
    6c1a:	34 e0       	ldi	r19, 0x04	; 4
    6c1c:	f9 01       	movw	r30, r18
    6c1e:	23 89       	ldd	r18, Z+19	; 0x13
    6c20:	27 7f       	andi	r18, 0xF7	; 247
    6c22:	fc 01       	movw	r30, r24
    6c24:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    6c26:	80 e6       	ldi	r24, 0x60	; 96
    6c28:	94 e0       	ldi	r25, 0x04	; 4
    6c2a:	20 e6       	ldi	r18, 0x60	; 96
    6c2c:	34 e0       	ldi	r19, 0x04	; 4
    6c2e:	f9 01       	movw	r30, r18
    6c30:	24 89       	ldd	r18, Z+20	; 0x14
    6c32:	27 7f       	andi	r18, 0xF7	; 247
    6c34:	fc 01       	movw	r30, r24
    6c36:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    6c38:	80 e6       	ldi	r24, 0x60	; 96
    6c3a:	94 e0       	ldi	r25, 0x04	; 4
    6c3c:	20 e6       	ldi	r18, 0x60	; 96
    6c3e:	34 e0       	ldi	r19, 0x04	; 4
    6c40:	f9 01       	movw	r30, r18
    6c42:	25 89       	ldd	r18, Z+21	; 0x15
    6c44:	27 7f       	andi	r18, 0xF7	; 247
    6c46:	fc 01       	movw	r30, r24
    6c48:	25 8b       	std	Z+21, r18	; 0x15
}
    6c4a:	00 00       	nop
    6c4c:	df 91       	pop	r29
    6c4e:	cf 91       	pop	r28
    6c50:	08 95       	ret

00006c52 <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    6c52:	cf 93       	push	r28
    6c54:	df 93       	push	r29
    6c56:	cd b7       	in	r28, 0x3d	; 61
    6c58:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6c5a:	80 ea       	ldi	r24, 0xA0	; 160
    6c5c:	90 e0       	ldi	r25, 0x00	; 0
    6c5e:	21 e0       	ldi	r18, 0x01	; 1
    6c60:	fc 01       	movw	r30, r24
    6c62:	20 83       	st	Z, r18
}
    6c64:	00 00       	nop
    6c66:	df 91       	pop	r29
    6c68:	cf 91       	pop	r28
    6c6a:	08 95       	ret

00006c6c <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    6c6c:	cf 93       	push	r28
    6c6e:	df 93       	push	r29
    6c70:	1f 92       	push	r1
    6c72:	cd b7       	in	r28, 0x3d	; 61
    6c74:	de b7       	in	r29, 0x3e	; 62
    6c76:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    6c78:	80 e0       	ldi	r24, 0x00	; 0
    6c7a:	96 e0       	ldi	r25, 0x06	; 6
    6c7c:	2a e0       	ldi	r18, 0x0A	; 10
    6c7e:	fc 01       	movw	r30, r24
    6c80:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    6c82:	89 81       	ldd	r24, Y+1	; 0x01
    6c84:	88 23       	and	r24, r24
    6c86:	99 f0       	breq	.+38     	; 0x6cae <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    6c88:	80 e0       	ldi	r24, 0x00	; 0
    6c8a:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    6c8c:	23 e0       	ldi	r18, 0x03	; 3
    6c8e:	fc 01       	movw	r30, r24
    6c90:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    6c92:	80 e0       	ldi	r24, 0x00	; 0
    6c94:	96 e0       	ldi	r25, 0x06	; 6
    6c96:	21 e0       	ldi	r18, 0x01	; 1
    6c98:	fc 01       	movw	r30, r24
    6c9a:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    6c9c:	80 e0       	ldi	r24, 0x00	; 0
    6c9e:	96 e0       	ldi	r25, 0x06	; 6
    6ca0:	21 e0       	ldi	r18, 0x01	; 1
    6ca2:	fc 01       	movw	r30, r24
    6ca4:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    6ca6:	81 e0       	ldi	r24, 0x01	; 1
    6ca8:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    6cac:	0c c0       	rjmp	.+24     	; 0x6cc6 <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    6cae:	80 e0       	ldi	r24, 0x00	; 0
    6cb0:	96 e0       	ldi	r25, 0x06	; 6
    6cb2:	21 e0       	ldi	r18, 0x01	; 1
    6cb4:	fc 01       	movw	r30, r24
    6cb6:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6cb8:	80 e0       	ldi	r24, 0x00	; 0
    6cba:	96 e0       	ldi	r25, 0x06	; 6
    6cbc:	fc 01       	movw	r30, r24
    6cbe:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    6cc0:	82 e0       	ldi	r24, 0x02	; 2
    6cc2:	80 93 cf 47 	sts	0x47CF, r24	; 0x8047cf <_ZL20g_adc_initialization>
	}
}
    6cc6:	00 00       	nop
    6cc8:	0f 90       	pop	r0
    6cca:	df 91       	pop	r29
    6ccc:	cf 91       	pop	r28
    6cce:	08 95       	ret

00006cd0 <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    6cd0:	cf 93       	push	r28
    6cd2:	df 93       	push	r29
    6cd4:	1f 92       	push	r1
    6cd6:	cd b7       	in	r28, 0x3d	; 61
    6cd8:	de b7       	in	r29, 0x3e	; 62
    6cda:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    6cdc:	0e 94 b5 35 	call	0x6b6a	; 0x6b6a <_ZL9PORT_initv>
	VREF0_init();
    6ce0:	0e 94 29 36 	call	0x6c52	; 0x6c52 <_ZL10VREF0_initv>
	ADC0_init(freerun);
    6ce4:	89 81       	ldd	r24, Y+1	; 0x01
    6ce6:	0e 94 36 36 	call	0x6c6c	; 0x6c6c <_ZL9ADC0_initb>
}
    6cea:	00 00       	nop
    6cec:	0f 90       	pop	r0
    6cee:	df 91       	pop	r29
    6cf0:	cf 91       	pop	r28
    6cf2:	08 95       	ret

00006cf4 <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    6cf4:	cf 93       	push	r28
    6cf6:	df 93       	push	r29
    6cf8:	cd b7       	in	r28, 0x3d	; 61
    6cfa:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6cfc:	80 e0       	ldi	r24, 0x00	; 0
    6cfe:	96 e0       	ldi	r25, 0x06	; 6
    6d00:	fc 01       	movw	r30, r24
    6d02:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    6d04:	80 e0       	ldi	r24, 0x00	; 0
    6d06:	96 e0       	ldi	r25, 0x06	; 6
    6d08:	fc 01       	movw	r30, r24
    6d0a:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    6d0c:	10 92 cf 47 	sts	0x47CF, r1	; 0x8047cf <_ZL20g_adc_initialization>
}
    6d10:	00 00       	nop
    6d12:	df 91       	pop	r29
    6d14:	cf 91       	pop	r28
    6d16:	08 95       	ret

00006d18 <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    6d18:	1f 92       	push	r1
    6d1a:	0f 92       	push	r0
    6d1c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6d20:	0f 92       	push	r0
    6d22:	11 24       	eor	r1, r1
    6d24:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6d28:	0f 92       	push	r0
    6d2a:	2f 93       	push	r18
    6d2c:	3f 93       	push	r19
    6d2e:	4f 93       	push	r20
    6d30:	5f 93       	push	r21
    6d32:	6f 93       	push	r22
    6d34:	7f 93       	push	r23
    6d36:	8f 93       	push	r24
    6d38:	9f 93       	push	r25
    6d3a:	af 93       	push	r26
    6d3c:	bf 93       	push	r27
    6d3e:	ef 93       	push	r30
    6d40:	ff 93       	push	r31
    6d42:	cf 93       	push	r28
    6d44:	df 93       	push	r29
    6d46:	00 d0       	rcall	.+0      	; 0x6d48 <__vector_24+0x30>
    6d48:	cd b7       	in	r28, 0x3d	; 61
    6d4a:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    6d4c:	0e 94 f3 34 	call	0x69e6	; 0x69e6 <_Z9ADC0_readv>
    6d50:	89 83       	std	Y+1, r24	; 0x01
    6d52:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    6d54:	89 81       	ldd	r24, Y+1	; 0x01
    6d56:	9a 81       	ldd	r25, Y+2	; 0x02
    6d58:	bc 01       	movw	r22, r24
    6d5a:	8e ec       	ldi	r24, 0xCE	; 206
    6d5c:	97 e4       	ldi	r25, 0x47	; 71
    6d5e:	0e 94 a8 4d 	call	0x9b50	; 0x9b50 <_ZN8Goertzel9DataPointEi>
    6d62:	88 23       	and	r24, r24
    6d64:	21 f0       	breq	.+8      	; 0x6d6e <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    6d66:	80 e0       	ldi	r24, 0x00	; 0
    6d68:	96 e0       	ldi	r25, 0x06	; 6
    6d6a:	fc 01       	movw	r30, r24
    6d6c:	14 86       	std	Z+12, r1	; 0x0c
	}
    6d6e:	00 00       	nop
    6d70:	0f 90       	pop	r0
    6d72:	0f 90       	pop	r0
    6d74:	df 91       	pop	r29
    6d76:	cf 91       	pop	r28
    6d78:	ff 91       	pop	r31
    6d7a:	ef 91       	pop	r30
    6d7c:	bf 91       	pop	r27
    6d7e:	af 91       	pop	r26
    6d80:	9f 91       	pop	r25
    6d82:	8f 91       	pop	r24
    6d84:	7f 91       	pop	r23
    6d86:	6f 91       	pop	r22
    6d88:	5f 91       	pop	r21
    6d8a:	4f 91       	pop	r20
    6d8c:	3f 91       	pop	r19
    6d8e:	2f 91       	pop	r18
    6d90:	0f 90       	pop	r0
    6d92:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6d96:	0f 90       	pop	r0
    6d98:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    6d9c:	0f 90       	pop	r0
    6d9e:	1f 90       	pop	r1
    6da0:	18 95       	reti

00006da2 <_Z41__static_initialization_and_destruction_0ii>:
    6da2:	0f 93       	push	r16
    6da4:	1f 93       	push	r17
    6da6:	cf 93       	push	r28
    6da8:	df 93       	push	r29
    6daa:	00 d0       	rcall	.+0      	; 0x6dac <_Z41__static_initialization_and_destruction_0ii+0xa>
    6dac:	00 d0       	rcall	.+0      	; 0x6dae <_Z41__static_initialization_and_destruction_0ii+0xc>
    6dae:	cd b7       	in	r28, 0x3d	; 61
    6db0:	de b7       	in	r29, 0x3e	; 62
    6db2:	89 83       	std	Y+1, r24	; 0x01
    6db4:	9a 83       	std	Y+2, r25	; 0x02
    6db6:	6b 83       	std	Y+3, r22	; 0x03
    6db8:	7c 83       	std	Y+4, r23	; 0x04
    6dba:	89 81       	ldd	r24, Y+1	; 0x01
    6dbc:	9a 81       	ldd	r25, Y+2	; 0x02
    6dbe:	01 97       	sbiw	r24, 0x01	; 1
    6dc0:	91 f4       	brne	.+36     	; 0x6de6 <_Z41__static_initialization_and_destruction_0ii+0x44>
    6dc2:	8b 81       	ldd	r24, Y+3	; 0x03
    6dc4:	9c 81       	ldd	r25, Y+4	; 0x04
    6dc6:	01 96       	adiw	r24, 0x01	; 1
    6dc8:	71 f4       	brne	.+28     	; 0x6de6 <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    6dca:	80 e0       	ldi	r24, 0x00	; 0
    6dcc:	90 e4       	ldi	r25, 0x40	; 64
    6dce:	ac eb       	ldi	r26, 0xBC	; 188
    6dd0:	b6 e4       	ldi	r27, 0x46	; 70
    6dd2:	8c 01       	movw	r16, r24
    6dd4:	9d 01       	movw	r18, r26
    6dd6:	40 e0       	ldi	r20, 0x00	; 0
    6dd8:	50 e0       	ldi	r21, 0x00	; 0
    6dda:	69 e4       	ldi	r22, 0x49	; 73
    6ddc:	73 e4       	ldi	r23, 0x43	; 67
    6dde:	8e ec       	ldi	r24, 0xCE	; 206
    6de0:	97 e4       	ldi	r25, 0x47	; 71
    6de2:	0e 94 fd 4c 	call	0x99fa	; 0x99fa <_ZN8GoertzelC1Eff>
    6de6:	89 81       	ldd	r24, Y+1	; 0x01
    6de8:	9a 81       	ldd	r25, Y+2	; 0x02
    6dea:	89 2b       	or	r24, r25
    6dec:	41 f4       	brne	.+16     	; 0x6dfe <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6dee:	8b 81       	ldd	r24, Y+3	; 0x03
    6df0:	9c 81       	ldd	r25, Y+4	; 0x04
    6df2:	01 96       	adiw	r24, 0x01	; 1
    6df4:	21 f4       	brne	.+8      	; 0x6dfe <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6df6:	8e ec       	ldi	r24, 0xCE	; 206
    6df8:	97 e4       	ldi	r25, 0x47	; 71
    6dfa:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    6dfe:	00 00       	nop
    6e00:	24 96       	adiw	r28, 0x04	; 4
    6e02:	cd bf       	out	0x3d, r28	; 61
    6e04:	de bf       	out	0x3e, r29	; 62
    6e06:	df 91       	pop	r29
    6e08:	cf 91       	pop	r28
    6e0a:	1f 91       	pop	r17
    6e0c:	0f 91       	pop	r16
    6e0e:	08 95       	ret

00006e10 <_GLOBAL__sub_I_g_adcVal>:
    6e10:	cf 93       	push	r28
    6e12:	df 93       	push	r29
    6e14:	cd b7       	in	r28, 0x3d	; 61
    6e16:	de b7       	in	r29, 0x3e	; 62
    6e18:	6f ef       	ldi	r22, 0xFF	; 255
    6e1a:	7f ef       	ldi	r23, 0xFF	; 255
    6e1c:	81 e0       	ldi	r24, 0x01	; 1
    6e1e:	90 e0       	ldi	r25, 0x00	; 0
    6e20:	0e 94 d1 36 	call	0x6da2	; 0x6da2 <_Z41__static_initialization_and_destruction_0ii>
    6e24:	df 91       	pop	r29
    6e26:	cf 91       	pop	r28
    6e28:	08 95       	ret

00006e2a <_GLOBAL__sub_D_g_adcVal>:
    6e2a:	cf 93       	push	r28
    6e2c:	df 93       	push	r29
    6e2e:	cd b7       	in	r28, 0x3d	; 61
    6e30:	de b7       	in	r29, 0x3e	; 62
    6e32:	6f ef       	ldi	r22, 0xFF	; 255
    6e34:	7f ef       	ldi	r23, 0xFF	; 255
    6e36:	80 e0       	ldi	r24, 0x00	; 0
    6e38:	90 e0       	ldi	r25, 0x00	; 0
    6e3a:	0e 94 d1 36 	call	0x6da2	; 0x6da2 <_Z41__static_initialization_and_destruction_0ii>
    6e3e:	df 91       	pop	r29
    6e40:	cf 91       	pop	r28
    6e42:	08 95       	ret

00006e44 <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    6e44:	cf 93       	push	r28
    6e46:	df 93       	push	r29
    6e48:	00 d0       	rcall	.+0      	; 0x6e4a <PORTA_set_pin_pull_mode+0x6>
    6e4a:	00 d0       	rcall	.+0      	; 0x6e4c <PORTA_set_pin_pull_mode+0x8>
    6e4c:	cd b7       	in	r28, 0x3d	; 61
    6e4e:	de b7       	in	r29, 0x3e	; 62
    6e50:	8b 83       	std	Y+3, r24	; 0x03
    6e52:	6c 83       	std	Y+4, r22	; 0x04
    6e54:	8b 81       	ldd	r24, Y+3	; 0x03
    6e56:	88 2f       	mov	r24, r24
    6e58:	90 e0       	ldi	r25, 0x00	; 0
    6e5a:	80 5f       	subi	r24, 0xF0	; 240
    6e5c:	9b 4f       	sbci	r25, 0xFB	; 251
    6e5e:	89 83       	std	Y+1, r24	; 0x01
    6e60:	9a 83       	std	Y+2, r25	; 0x02
    6e62:	8c 81       	ldd	r24, Y+4	; 0x04
    6e64:	81 30       	cpi	r24, 0x01	; 1
    6e66:	59 f4       	brne	.+22     	; 0x6e7e <PORTA_set_pin_pull_mode+0x3a>
    6e68:	89 81       	ldd	r24, Y+1	; 0x01
    6e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    6e6c:	fc 01       	movw	r30, r24
    6e6e:	80 81       	ld	r24, Z
    6e70:	28 2f       	mov	r18, r24
    6e72:	28 60       	ori	r18, 0x08	; 8
    6e74:	89 81       	ldd	r24, Y+1	; 0x01
    6e76:	9a 81       	ldd	r25, Y+2	; 0x02
    6e78:	fc 01       	movw	r30, r24
    6e7a:	20 83       	st	Z, r18
    6e7c:	0d c0       	rjmp	.+26     	; 0x6e98 <PORTA_set_pin_pull_mode+0x54>
    6e7e:	8c 81       	ldd	r24, Y+4	; 0x04
    6e80:	88 23       	and	r24, r24
    6e82:	51 f4       	brne	.+20     	; 0x6e98 <PORTA_set_pin_pull_mode+0x54>
    6e84:	89 81       	ldd	r24, Y+1	; 0x01
    6e86:	9a 81       	ldd	r25, Y+2	; 0x02
    6e88:	fc 01       	movw	r30, r24
    6e8a:	80 81       	ld	r24, Z
    6e8c:	28 2f       	mov	r18, r24
    6e8e:	27 7f       	andi	r18, 0xF7	; 247
    6e90:	89 81       	ldd	r24, Y+1	; 0x01
    6e92:	9a 81       	ldd	r25, Y+2	; 0x02
    6e94:	fc 01       	movw	r30, r24
    6e96:	20 83       	st	Z, r18
    6e98:	00 00       	nop
    6e9a:	24 96       	adiw	r28, 0x04	; 4
    6e9c:	cd bf       	out	0x3d, r28	; 61
    6e9e:	de bf       	out	0x3e, r29	; 62
    6ea0:	df 91       	pop	r29
    6ea2:	cf 91       	pop	r28
    6ea4:	08 95       	ret

00006ea6 <PORTA_pin_set_isc>:
    6ea6:	cf 93       	push	r28
    6ea8:	df 93       	push	r29
    6eaa:	00 d0       	rcall	.+0      	; 0x6eac <PORTA_pin_set_isc+0x6>
    6eac:	00 d0       	rcall	.+0      	; 0x6eae <PORTA_pin_set_isc+0x8>
    6eae:	cd b7       	in	r28, 0x3d	; 61
    6eb0:	de b7       	in	r29, 0x3e	; 62
    6eb2:	8b 83       	std	Y+3, r24	; 0x03
    6eb4:	6c 83       	std	Y+4, r22	; 0x04
    6eb6:	8b 81       	ldd	r24, Y+3	; 0x03
    6eb8:	88 2f       	mov	r24, r24
    6eba:	90 e0       	ldi	r25, 0x00	; 0
    6ebc:	80 5f       	subi	r24, 0xF0	; 240
    6ebe:	9b 4f       	sbci	r25, 0xFB	; 251
    6ec0:	89 83       	std	Y+1, r24	; 0x01
    6ec2:	9a 83       	std	Y+2, r25	; 0x02
    6ec4:	89 81       	ldd	r24, Y+1	; 0x01
    6ec6:	9a 81       	ldd	r25, Y+2	; 0x02
    6ec8:	fc 01       	movw	r30, r24
    6eca:	80 81       	ld	r24, Z
    6ecc:	98 2f       	mov	r25, r24
    6ece:	98 7f       	andi	r25, 0xF8	; 248
    6ed0:	8c 81       	ldd	r24, Y+4	; 0x04
    6ed2:	89 2b       	or	r24, r25
    6ed4:	28 2f       	mov	r18, r24
    6ed6:	89 81       	ldd	r24, Y+1	; 0x01
    6ed8:	9a 81       	ldd	r25, Y+2	; 0x02
    6eda:	fc 01       	movw	r30, r24
    6edc:	20 83       	st	Z, r18
    6ede:	00 00       	nop
    6ee0:	24 96       	adiw	r28, 0x04	; 4
    6ee2:	cd bf       	out	0x3d, r28	; 61
    6ee4:	de bf       	out	0x3e, r29	; 62
    6ee6:	df 91       	pop	r29
    6ee8:	cf 91       	pop	r28
    6eea:	08 95       	ret

00006eec <PORTA_set_pin_dir>:
    6eec:	cf 93       	push	r28
    6eee:	df 93       	push	r29
    6ef0:	00 d0       	rcall	.+0      	; 0x6ef2 <PORTA_set_pin_dir+0x6>
    6ef2:	cd b7       	in	r28, 0x3d	; 61
    6ef4:	de b7       	in	r29, 0x3e	; 62
    6ef6:	89 83       	std	Y+1, r24	; 0x01
    6ef8:	6a 83       	std	Y+2, r22	; 0x02
    6efa:	8a 81       	ldd	r24, Y+2	; 0x02
    6efc:	88 2f       	mov	r24, r24
    6efe:	90 e0       	ldi	r25, 0x00	; 0
    6f00:	81 30       	cpi	r24, 0x01	; 1
    6f02:	91 05       	cpc	r25, r1
    6f04:	e1 f0       	breq	.+56     	; 0x6f3e <PORTA_set_pin_dir+0x52>
    6f06:	82 30       	cpi	r24, 0x02	; 2
    6f08:	91 05       	cpc	r25, r1
    6f0a:	71 f1       	breq	.+92     	; 0x6f68 <PORTA_set_pin_dir+0x7c>
    6f0c:	89 2b       	or	r24, r25
    6f0e:	09 f0       	breq	.+2      	; 0x6f12 <PORTA_set_pin_dir+0x26>
    6f10:	3b c0       	rjmp	.+118    	; 0x6f88 <PORTA_set_pin_dir+0x9c>
    6f12:	20 e0       	ldi	r18, 0x00	; 0
    6f14:	30 e0       	ldi	r19, 0x00	; 0
    6f16:	80 e0       	ldi	r24, 0x00	; 0
    6f18:	90 e0       	ldi	r25, 0x00	; 0
    6f1a:	fc 01       	movw	r30, r24
    6f1c:	80 81       	ld	r24, Z
    6f1e:	68 2f       	mov	r22, r24
    6f20:	89 81       	ldd	r24, Y+1	; 0x01
    6f22:	48 2f       	mov	r20, r24
    6f24:	50 e0       	ldi	r21, 0x00	; 0
    6f26:	81 e0       	ldi	r24, 0x01	; 1
    6f28:	90 e0       	ldi	r25, 0x00	; 0
    6f2a:	02 c0       	rjmp	.+4      	; 0x6f30 <PORTA_set_pin_dir+0x44>
    6f2c:	88 0f       	add	r24, r24
    6f2e:	99 1f       	adc	r25, r25
    6f30:	4a 95       	dec	r20
    6f32:	e2 f7       	brpl	.-8      	; 0x6f2c <PORTA_set_pin_dir+0x40>
    6f34:	80 95       	com	r24
    6f36:	86 23       	and	r24, r22
    6f38:	f9 01       	movw	r30, r18
    6f3a:	80 83       	st	Z, r24
    6f3c:	25 c0       	rjmp	.+74     	; 0x6f88 <PORTA_set_pin_dir+0x9c>
    6f3e:	20 e0       	ldi	r18, 0x00	; 0
    6f40:	30 e0       	ldi	r19, 0x00	; 0
    6f42:	80 e0       	ldi	r24, 0x00	; 0
    6f44:	90 e0       	ldi	r25, 0x00	; 0
    6f46:	fc 01       	movw	r30, r24
    6f48:	80 81       	ld	r24, Z
    6f4a:	68 2f       	mov	r22, r24
    6f4c:	89 81       	ldd	r24, Y+1	; 0x01
    6f4e:	48 2f       	mov	r20, r24
    6f50:	50 e0       	ldi	r21, 0x00	; 0
    6f52:	81 e0       	ldi	r24, 0x01	; 1
    6f54:	90 e0       	ldi	r25, 0x00	; 0
    6f56:	02 c0       	rjmp	.+4      	; 0x6f5c <PORTA_set_pin_dir+0x70>
    6f58:	88 0f       	add	r24, r24
    6f5a:	99 1f       	adc	r25, r25
    6f5c:	4a 95       	dec	r20
    6f5e:	e2 f7       	brpl	.-8      	; 0x6f58 <PORTA_set_pin_dir+0x6c>
    6f60:	86 2b       	or	r24, r22
    6f62:	f9 01       	movw	r30, r18
    6f64:	80 83       	st	Z, r24
    6f66:	10 c0       	rjmp	.+32     	; 0x6f88 <PORTA_set_pin_dir+0x9c>
    6f68:	89 81       	ldd	r24, Y+1	; 0x01
    6f6a:	88 2f       	mov	r24, r24
    6f6c:	90 e0       	ldi	r25, 0x00	; 0
    6f6e:	80 5f       	subi	r24, 0xF0	; 240
    6f70:	9b 4f       	sbci	r25, 0xFB	; 251
    6f72:	29 81       	ldd	r18, Y+1	; 0x01
    6f74:	22 2f       	mov	r18, r18
    6f76:	30 e0       	ldi	r19, 0x00	; 0
    6f78:	20 5f       	subi	r18, 0xF0	; 240
    6f7a:	3b 4f       	sbci	r19, 0xFB	; 251
    6f7c:	f9 01       	movw	r30, r18
    6f7e:	20 81       	ld	r18, Z
    6f80:	28 60       	ori	r18, 0x08	; 8
    6f82:	fc 01       	movw	r30, r24
    6f84:	20 83       	st	Z, r18
    6f86:	00 00       	nop
    6f88:	00 00       	nop
    6f8a:	0f 90       	pop	r0
    6f8c:	0f 90       	pop	r0
    6f8e:	df 91       	pop	r29
    6f90:	cf 91       	pop	r28
    6f92:	08 95       	ret

00006f94 <PORTA_set_pin_level>:
    6f94:	cf 93       	push	r28
    6f96:	df 93       	push	r29
    6f98:	00 d0       	rcall	.+0      	; 0x6f9a <PORTA_set_pin_level+0x6>
    6f9a:	cd b7       	in	r28, 0x3d	; 61
    6f9c:	de b7       	in	r29, 0x3e	; 62
    6f9e:	89 83       	std	Y+1, r24	; 0x01
    6fa0:	6a 83       	std	Y+2, r22	; 0x02
    6fa2:	8a 81       	ldd	r24, Y+2	; 0x02
    6fa4:	88 23       	and	r24, r24
    6fa6:	a9 f0       	breq	.+42     	; 0x6fd2 <PORTA_set_pin_level+0x3e>
    6fa8:	20 e0       	ldi	r18, 0x00	; 0
    6faa:	30 e0       	ldi	r19, 0x00	; 0
    6fac:	80 e0       	ldi	r24, 0x00	; 0
    6fae:	90 e0       	ldi	r25, 0x00	; 0
    6fb0:	fc 01       	movw	r30, r24
    6fb2:	81 81       	ldd	r24, Z+1	; 0x01
    6fb4:	68 2f       	mov	r22, r24
    6fb6:	89 81       	ldd	r24, Y+1	; 0x01
    6fb8:	48 2f       	mov	r20, r24
    6fba:	50 e0       	ldi	r21, 0x00	; 0
    6fbc:	81 e0       	ldi	r24, 0x01	; 1
    6fbe:	90 e0       	ldi	r25, 0x00	; 0
    6fc0:	02 c0       	rjmp	.+4      	; 0x6fc6 <PORTA_set_pin_level+0x32>
    6fc2:	88 0f       	add	r24, r24
    6fc4:	99 1f       	adc	r25, r25
    6fc6:	4a 95       	dec	r20
    6fc8:	e2 f7       	brpl	.-8      	; 0x6fc2 <PORTA_set_pin_level+0x2e>
    6fca:	86 2b       	or	r24, r22
    6fcc:	f9 01       	movw	r30, r18
    6fce:	81 83       	std	Z+1, r24	; 0x01
    6fd0:	15 c0       	rjmp	.+42     	; 0x6ffc <PORTA_set_pin_level+0x68>
    6fd2:	20 e0       	ldi	r18, 0x00	; 0
    6fd4:	30 e0       	ldi	r19, 0x00	; 0
    6fd6:	80 e0       	ldi	r24, 0x00	; 0
    6fd8:	90 e0       	ldi	r25, 0x00	; 0
    6fda:	fc 01       	movw	r30, r24
    6fdc:	81 81       	ldd	r24, Z+1	; 0x01
    6fde:	68 2f       	mov	r22, r24
    6fe0:	89 81       	ldd	r24, Y+1	; 0x01
    6fe2:	48 2f       	mov	r20, r24
    6fe4:	50 e0       	ldi	r21, 0x00	; 0
    6fe6:	81 e0       	ldi	r24, 0x01	; 1
    6fe8:	90 e0       	ldi	r25, 0x00	; 0
    6fea:	02 c0       	rjmp	.+4      	; 0x6ff0 <PORTA_set_pin_level+0x5c>
    6fec:	88 0f       	add	r24, r24
    6fee:	99 1f       	adc	r25, r25
    6ff0:	4a 95       	dec	r20
    6ff2:	e2 f7       	brpl	.-8      	; 0x6fec <PORTA_set_pin_level+0x58>
    6ff4:	80 95       	com	r24
    6ff6:	86 23       	and	r24, r22
    6ff8:	f9 01       	movw	r30, r18
    6ffa:	81 83       	std	Z+1, r24	; 0x01
    6ffc:	00 00       	nop
    6ffe:	0f 90       	pop	r0
    7000:	0f 90       	pop	r0
    7002:	df 91       	pop	r29
    7004:	cf 91       	pop	r28
    7006:	08 95       	ret

00007008 <PORTB_set_pin_dir>:
    7008:	cf 93       	push	r28
    700a:	df 93       	push	r29
    700c:	00 d0       	rcall	.+0      	; 0x700e <PORTB_set_pin_dir+0x6>
    700e:	cd b7       	in	r28, 0x3d	; 61
    7010:	de b7       	in	r29, 0x3e	; 62
    7012:	89 83       	std	Y+1, r24	; 0x01
    7014:	6a 83       	std	Y+2, r22	; 0x02
    7016:	8a 81       	ldd	r24, Y+2	; 0x02
    7018:	88 2f       	mov	r24, r24
    701a:	90 e0       	ldi	r25, 0x00	; 0
    701c:	81 30       	cpi	r24, 0x01	; 1
    701e:	91 05       	cpc	r25, r1
    7020:	e1 f0       	breq	.+56     	; 0x705a <PORTB_set_pin_dir+0x52>
    7022:	82 30       	cpi	r24, 0x02	; 2
    7024:	91 05       	cpc	r25, r1
    7026:	71 f1       	breq	.+92     	; 0x7084 <PORTB_set_pin_dir+0x7c>
    7028:	89 2b       	or	r24, r25
    702a:	09 f0       	breq	.+2      	; 0x702e <PORTB_set_pin_dir+0x26>
    702c:	3b c0       	rjmp	.+118    	; 0x70a4 <PORTB_set_pin_dir+0x9c>
    702e:	84 e0       	ldi	r24, 0x04	; 4
    7030:	90 e0       	ldi	r25, 0x00	; 0
    7032:	24 e0       	ldi	r18, 0x04	; 4
    7034:	30 e0       	ldi	r19, 0x00	; 0
    7036:	f9 01       	movw	r30, r18
    7038:	20 81       	ld	r18, Z
    703a:	62 2f       	mov	r22, r18
    703c:	29 81       	ldd	r18, Y+1	; 0x01
    703e:	42 2f       	mov	r20, r18
    7040:	50 e0       	ldi	r21, 0x00	; 0
    7042:	21 e0       	ldi	r18, 0x01	; 1
    7044:	30 e0       	ldi	r19, 0x00	; 0
    7046:	02 c0       	rjmp	.+4      	; 0x704c <PORTB_set_pin_dir+0x44>
    7048:	22 0f       	add	r18, r18
    704a:	33 1f       	adc	r19, r19
    704c:	4a 95       	dec	r20
    704e:	e2 f7       	brpl	.-8      	; 0x7048 <PORTB_set_pin_dir+0x40>
    7050:	20 95       	com	r18
    7052:	26 23       	and	r18, r22
    7054:	fc 01       	movw	r30, r24
    7056:	20 83       	st	Z, r18
    7058:	25 c0       	rjmp	.+74     	; 0x70a4 <PORTB_set_pin_dir+0x9c>
    705a:	84 e0       	ldi	r24, 0x04	; 4
    705c:	90 e0       	ldi	r25, 0x00	; 0
    705e:	24 e0       	ldi	r18, 0x04	; 4
    7060:	30 e0       	ldi	r19, 0x00	; 0
    7062:	f9 01       	movw	r30, r18
    7064:	20 81       	ld	r18, Z
    7066:	62 2f       	mov	r22, r18
    7068:	29 81       	ldd	r18, Y+1	; 0x01
    706a:	42 2f       	mov	r20, r18
    706c:	50 e0       	ldi	r21, 0x00	; 0
    706e:	21 e0       	ldi	r18, 0x01	; 1
    7070:	30 e0       	ldi	r19, 0x00	; 0
    7072:	02 c0       	rjmp	.+4      	; 0x7078 <PORTB_set_pin_dir+0x70>
    7074:	22 0f       	add	r18, r18
    7076:	33 1f       	adc	r19, r19
    7078:	4a 95       	dec	r20
    707a:	e2 f7       	brpl	.-8      	; 0x7074 <PORTB_set_pin_dir+0x6c>
    707c:	26 2b       	or	r18, r22
    707e:	fc 01       	movw	r30, r24
    7080:	20 83       	st	Z, r18
    7082:	10 c0       	rjmp	.+32     	; 0x70a4 <PORTB_set_pin_dir+0x9c>
    7084:	89 81       	ldd	r24, Y+1	; 0x01
    7086:	88 2f       	mov	r24, r24
    7088:	90 e0       	ldi	r25, 0x00	; 0
    708a:	80 5d       	subi	r24, 0xD0	; 208
    708c:	9b 4f       	sbci	r25, 0xFB	; 251
    708e:	29 81       	ldd	r18, Y+1	; 0x01
    7090:	22 2f       	mov	r18, r18
    7092:	30 e0       	ldi	r19, 0x00	; 0
    7094:	20 5d       	subi	r18, 0xD0	; 208
    7096:	3b 4f       	sbci	r19, 0xFB	; 251
    7098:	f9 01       	movw	r30, r18
    709a:	20 81       	ld	r18, Z
    709c:	28 60       	ori	r18, 0x08	; 8
    709e:	fc 01       	movw	r30, r24
    70a0:	20 83       	st	Z, r18
    70a2:	00 00       	nop
    70a4:	00 00       	nop
    70a6:	0f 90       	pop	r0
    70a8:	0f 90       	pop	r0
    70aa:	df 91       	pop	r29
    70ac:	cf 91       	pop	r28
    70ae:	08 95       	ret

000070b0 <PORTB_set_pin_level>:
    70b0:	cf 93       	push	r28
    70b2:	df 93       	push	r29
    70b4:	00 d0       	rcall	.+0      	; 0x70b6 <PORTB_set_pin_level+0x6>
    70b6:	cd b7       	in	r28, 0x3d	; 61
    70b8:	de b7       	in	r29, 0x3e	; 62
    70ba:	89 83       	std	Y+1, r24	; 0x01
    70bc:	6a 83       	std	Y+2, r22	; 0x02
    70be:	8a 81       	ldd	r24, Y+2	; 0x02
    70c0:	88 23       	and	r24, r24
    70c2:	a9 f0       	breq	.+42     	; 0x70ee <PORTB_set_pin_level+0x3e>
    70c4:	84 e0       	ldi	r24, 0x04	; 4
    70c6:	90 e0       	ldi	r25, 0x00	; 0
    70c8:	24 e0       	ldi	r18, 0x04	; 4
    70ca:	30 e0       	ldi	r19, 0x00	; 0
    70cc:	f9 01       	movw	r30, r18
    70ce:	21 81       	ldd	r18, Z+1	; 0x01
    70d0:	62 2f       	mov	r22, r18
    70d2:	29 81       	ldd	r18, Y+1	; 0x01
    70d4:	42 2f       	mov	r20, r18
    70d6:	50 e0       	ldi	r21, 0x00	; 0
    70d8:	21 e0       	ldi	r18, 0x01	; 1
    70da:	30 e0       	ldi	r19, 0x00	; 0
    70dc:	02 c0       	rjmp	.+4      	; 0x70e2 <PORTB_set_pin_level+0x32>
    70de:	22 0f       	add	r18, r18
    70e0:	33 1f       	adc	r19, r19
    70e2:	4a 95       	dec	r20
    70e4:	e2 f7       	brpl	.-8      	; 0x70de <PORTB_set_pin_level+0x2e>
    70e6:	26 2b       	or	r18, r22
    70e8:	fc 01       	movw	r30, r24
    70ea:	21 83       	std	Z+1, r18	; 0x01
    70ec:	15 c0       	rjmp	.+42     	; 0x7118 <PORTB_set_pin_level+0x68>
    70ee:	84 e0       	ldi	r24, 0x04	; 4
    70f0:	90 e0       	ldi	r25, 0x00	; 0
    70f2:	24 e0       	ldi	r18, 0x04	; 4
    70f4:	30 e0       	ldi	r19, 0x00	; 0
    70f6:	f9 01       	movw	r30, r18
    70f8:	21 81       	ldd	r18, Z+1	; 0x01
    70fa:	62 2f       	mov	r22, r18
    70fc:	29 81       	ldd	r18, Y+1	; 0x01
    70fe:	42 2f       	mov	r20, r18
    7100:	50 e0       	ldi	r21, 0x00	; 0
    7102:	21 e0       	ldi	r18, 0x01	; 1
    7104:	30 e0       	ldi	r19, 0x00	; 0
    7106:	02 c0       	rjmp	.+4      	; 0x710c <PORTB_set_pin_level+0x5c>
    7108:	22 0f       	add	r18, r18
    710a:	33 1f       	adc	r19, r19
    710c:	4a 95       	dec	r20
    710e:	e2 f7       	brpl	.-8      	; 0x7108 <PORTB_set_pin_level+0x58>
    7110:	20 95       	com	r18
    7112:	26 23       	and	r18, r22
    7114:	fc 01       	movw	r30, r24
    7116:	21 83       	std	Z+1, r18	; 0x01
    7118:	00 00       	nop
    711a:	0f 90       	pop	r0
    711c:	0f 90       	pop	r0
    711e:	df 91       	pop	r29
    7120:	cf 91       	pop	r28
    7122:	08 95       	ret

00007124 <PORTC_set_pin_pull_mode>:
    7124:	cf 93       	push	r28
    7126:	df 93       	push	r29
    7128:	00 d0       	rcall	.+0      	; 0x712a <PORTC_set_pin_pull_mode+0x6>
    712a:	00 d0       	rcall	.+0      	; 0x712c <PORTC_set_pin_pull_mode+0x8>
    712c:	cd b7       	in	r28, 0x3d	; 61
    712e:	de b7       	in	r29, 0x3e	; 62
    7130:	8b 83       	std	Y+3, r24	; 0x03
    7132:	6c 83       	std	Y+4, r22	; 0x04
    7134:	8b 81       	ldd	r24, Y+3	; 0x03
    7136:	88 2f       	mov	r24, r24
    7138:	90 e0       	ldi	r25, 0x00	; 0
    713a:	80 5b       	subi	r24, 0xB0	; 176
    713c:	9b 4f       	sbci	r25, 0xFB	; 251
    713e:	89 83       	std	Y+1, r24	; 0x01
    7140:	9a 83       	std	Y+2, r25	; 0x02
    7142:	8c 81       	ldd	r24, Y+4	; 0x04
    7144:	81 30       	cpi	r24, 0x01	; 1
    7146:	59 f4       	brne	.+22     	; 0x715e <PORTC_set_pin_pull_mode+0x3a>
    7148:	89 81       	ldd	r24, Y+1	; 0x01
    714a:	9a 81       	ldd	r25, Y+2	; 0x02
    714c:	fc 01       	movw	r30, r24
    714e:	80 81       	ld	r24, Z
    7150:	28 2f       	mov	r18, r24
    7152:	28 60       	ori	r18, 0x08	; 8
    7154:	89 81       	ldd	r24, Y+1	; 0x01
    7156:	9a 81       	ldd	r25, Y+2	; 0x02
    7158:	fc 01       	movw	r30, r24
    715a:	20 83       	st	Z, r18
    715c:	0d c0       	rjmp	.+26     	; 0x7178 <PORTC_set_pin_pull_mode+0x54>
    715e:	8c 81       	ldd	r24, Y+4	; 0x04
    7160:	88 23       	and	r24, r24
    7162:	51 f4       	brne	.+20     	; 0x7178 <PORTC_set_pin_pull_mode+0x54>
    7164:	89 81       	ldd	r24, Y+1	; 0x01
    7166:	9a 81       	ldd	r25, Y+2	; 0x02
    7168:	fc 01       	movw	r30, r24
    716a:	80 81       	ld	r24, Z
    716c:	28 2f       	mov	r18, r24
    716e:	27 7f       	andi	r18, 0xF7	; 247
    7170:	89 81       	ldd	r24, Y+1	; 0x01
    7172:	9a 81       	ldd	r25, Y+2	; 0x02
    7174:	fc 01       	movw	r30, r24
    7176:	20 83       	st	Z, r18
    7178:	00 00       	nop
    717a:	24 96       	adiw	r28, 0x04	; 4
    717c:	cd bf       	out	0x3d, r28	; 61
    717e:	de bf       	out	0x3e, r29	; 62
    7180:	df 91       	pop	r29
    7182:	cf 91       	pop	r28
    7184:	08 95       	ret

00007186 <PORTC_pin_set_isc>:
    7186:	cf 93       	push	r28
    7188:	df 93       	push	r29
    718a:	00 d0       	rcall	.+0      	; 0x718c <PORTC_pin_set_isc+0x6>
    718c:	00 d0       	rcall	.+0      	; 0x718e <PORTC_pin_set_isc+0x8>
    718e:	cd b7       	in	r28, 0x3d	; 61
    7190:	de b7       	in	r29, 0x3e	; 62
    7192:	8b 83       	std	Y+3, r24	; 0x03
    7194:	6c 83       	std	Y+4, r22	; 0x04
    7196:	8b 81       	ldd	r24, Y+3	; 0x03
    7198:	88 2f       	mov	r24, r24
    719a:	90 e0       	ldi	r25, 0x00	; 0
    719c:	80 5b       	subi	r24, 0xB0	; 176
    719e:	9b 4f       	sbci	r25, 0xFB	; 251
    71a0:	89 83       	std	Y+1, r24	; 0x01
    71a2:	9a 83       	std	Y+2, r25	; 0x02
    71a4:	89 81       	ldd	r24, Y+1	; 0x01
    71a6:	9a 81       	ldd	r25, Y+2	; 0x02
    71a8:	fc 01       	movw	r30, r24
    71aa:	80 81       	ld	r24, Z
    71ac:	98 2f       	mov	r25, r24
    71ae:	98 7f       	andi	r25, 0xF8	; 248
    71b0:	8c 81       	ldd	r24, Y+4	; 0x04
    71b2:	89 2b       	or	r24, r25
    71b4:	28 2f       	mov	r18, r24
    71b6:	89 81       	ldd	r24, Y+1	; 0x01
    71b8:	9a 81       	ldd	r25, Y+2	; 0x02
    71ba:	fc 01       	movw	r30, r24
    71bc:	20 83       	st	Z, r18
    71be:	00 00       	nop
    71c0:	24 96       	adiw	r28, 0x04	; 4
    71c2:	cd bf       	out	0x3d, r28	; 61
    71c4:	de bf       	out	0x3e, r29	; 62
    71c6:	df 91       	pop	r29
    71c8:	cf 91       	pop	r28
    71ca:	08 95       	ret

000071cc <PORTC_set_pin_dir>:
    71cc:	cf 93       	push	r28
    71ce:	df 93       	push	r29
    71d0:	00 d0       	rcall	.+0      	; 0x71d2 <PORTC_set_pin_dir+0x6>
    71d2:	cd b7       	in	r28, 0x3d	; 61
    71d4:	de b7       	in	r29, 0x3e	; 62
    71d6:	89 83       	std	Y+1, r24	; 0x01
    71d8:	6a 83       	std	Y+2, r22	; 0x02
    71da:	8a 81       	ldd	r24, Y+2	; 0x02
    71dc:	88 2f       	mov	r24, r24
    71de:	90 e0       	ldi	r25, 0x00	; 0
    71e0:	81 30       	cpi	r24, 0x01	; 1
    71e2:	91 05       	cpc	r25, r1
    71e4:	e1 f0       	breq	.+56     	; 0x721e <PORTC_set_pin_dir+0x52>
    71e6:	82 30       	cpi	r24, 0x02	; 2
    71e8:	91 05       	cpc	r25, r1
    71ea:	71 f1       	breq	.+92     	; 0x7248 <PORTC_set_pin_dir+0x7c>
    71ec:	89 2b       	or	r24, r25
    71ee:	09 f0       	breq	.+2      	; 0x71f2 <PORTC_set_pin_dir+0x26>
    71f0:	3b c0       	rjmp	.+118    	; 0x7268 <PORTC_set_pin_dir+0x9c>
    71f2:	88 e0       	ldi	r24, 0x08	; 8
    71f4:	90 e0       	ldi	r25, 0x00	; 0
    71f6:	28 e0       	ldi	r18, 0x08	; 8
    71f8:	30 e0       	ldi	r19, 0x00	; 0
    71fa:	f9 01       	movw	r30, r18
    71fc:	20 81       	ld	r18, Z
    71fe:	62 2f       	mov	r22, r18
    7200:	29 81       	ldd	r18, Y+1	; 0x01
    7202:	42 2f       	mov	r20, r18
    7204:	50 e0       	ldi	r21, 0x00	; 0
    7206:	21 e0       	ldi	r18, 0x01	; 1
    7208:	30 e0       	ldi	r19, 0x00	; 0
    720a:	02 c0       	rjmp	.+4      	; 0x7210 <PORTC_set_pin_dir+0x44>
    720c:	22 0f       	add	r18, r18
    720e:	33 1f       	adc	r19, r19
    7210:	4a 95       	dec	r20
    7212:	e2 f7       	brpl	.-8      	; 0x720c <PORTC_set_pin_dir+0x40>
    7214:	20 95       	com	r18
    7216:	26 23       	and	r18, r22
    7218:	fc 01       	movw	r30, r24
    721a:	20 83       	st	Z, r18
    721c:	25 c0       	rjmp	.+74     	; 0x7268 <PORTC_set_pin_dir+0x9c>
    721e:	88 e0       	ldi	r24, 0x08	; 8
    7220:	90 e0       	ldi	r25, 0x00	; 0
    7222:	28 e0       	ldi	r18, 0x08	; 8
    7224:	30 e0       	ldi	r19, 0x00	; 0
    7226:	f9 01       	movw	r30, r18
    7228:	20 81       	ld	r18, Z
    722a:	62 2f       	mov	r22, r18
    722c:	29 81       	ldd	r18, Y+1	; 0x01
    722e:	42 2f       	mov	r20, r18
    7230:	50 e0       	ldi	r21, 0x00	; 0
    7232:	21 e0       	ldi	r18, 0x01	; 1
    7234:	30 e0       	ldi	r19, 0x00	; 0
    7236:	02 c0       	rjmp	.+4      	; 0x723c <PORTC_set_pin_dir+0x70>
    7238:	22 0f       	add	r18, r18
    723a:	33 1f       	adc	r19, r19
    723c:	4a 95       	dec	r20
    723e:	e2 f7       	brpl	.-8      	; 0x7238 <PORTC_set_pin_dir+0x6c>
    7240:	26 2b       	or	r18, r22
    7242:	fc 01       	movw	r30, r24
    7244:	20 83       	st	Z, r18
    7246:	10 c0       	rjmp	.+32     	; 0x7268 <PORTC_set_pin_dir+0x9c>
    7248:	89 81       	ldd	r24, Y+1	; 0x01
    724a:	88 2f       	mov	r24, r24
    724c:	90 e0       	ldi	r25, 0x00	; 0
    724e:	80 5b       	subi	r24, 0xB0	; 176
    7250:	9b 4f       	sbci	r25, 0xFB	; 251
    7252:	29 81       	ldd	r18, Y+1	; 0x01
    7254:	22 2f       	mov	r18, r18
    7256:	30 e0       	ldi	r19, 0x00	; 0
    7258:	20 5b       	subi	r18, 0xB0	; 176
    725a:	3b 4f       	sbci	r19, 0xFB	; 251
    725c:	f9 01       	movw	r30, r18
    725e:	20 81       	ld	r18, Z
    7260:	28 60       	ori	r18, 0x08	; 8
    7262:	fc 01       	movw	r30, r24
    7264:	20 83       	st	Z, r18
    7266:	00 00       	nop
    7268:	00 00       	nop
    726a:	0f 90       	pop	r0
    726c:	0f 90       	pop	r0
    726e:	df 91       	pop	r29
    7270:	cf 91       	pop	r28
    7272:	08 95       	ret

00007274 <PORTC_set_pin_level>:
    7274:	cf 93       	push	r28
    7276:	df 93       	push	r29
    7278:	00 d0       	rcall	.+0      	; 0x727a <PORTC_set_pin_level+0x6>
    727a:	cd b7       	in	r28, 0x3d	; 61
    727c:	de b7       	in	r29, 0x3e	; 62
    727e:	89 83       	std	Y+1, r24	; 0x01
    7280:	6a 83       	std	Y+2, r22	; 0x02
    7282:	8a 81       	ldd	r24, Y+2	; 0x02
    7284:	88 23       	and	r24, r24
    7286:	a9 f0       	breq	.+42     	; 0x72b2 <PORTC_set_pin_level+0x3e>
    7288:	88 e0       	ldi	r24, 0x08	; 8
    728a:	90 e0       	ldi	r25, 0x00	; 0
    728c:	28 e0       	ldi	r18, 0x08	; 8
    728e:	30 e0       	ldi	r19, 0x00	; 0
    7290:	f9 01       	movw	r30, r18
    7292:	21 81       	ldd	r18, Z+1	; 0x01
    7294:	62 2f       	mov	r22, r18
    7296:	29 81       	ldd	r18, Y+1	; 0x01
    7298:	42 2f       	mov	r20, r18
    729a:	50 e0       	ldi	r21, 0x00	; 0
    729c:	21 e0       	ldi	r18, 0x01	; 1
    729e:	30 e0       	ldi	r19, 0x00	; 0
    72a0:	02 c0       	rjmp	.+4      	; 0x72a6 <PORTC_set_pin_level+0x32>
    72a2:	22 0f       	add	r18, r18
    72a4:	33 1f       	adc	r19, r19
    72a6:	4a 95       	dec	r20
    72a8:	e2 f7       	brpl	.-8      	; 0x72a2 <PORTC_set_pin_level+0x2e>
    72aa:	26 2b       	or	r18, r22
    72ac:	fc 01       	movw	r30, r24
    72ae:	21 83       	std	Z+1, r18	; 0x01
    72b0:	15 c0       	rjmp	.+42     	; 0x72dc <PORTC_set_pin_level+0x68>
    72b2:	88 e0       	ldi	r24, 0x08	; 8
    72b4:	90 e0       	ldi	r25, 0x00	; 0
    72b6:	28 e0       	ldi	r18, 0x08	; 8
    72b8:	30 e0       	ldi	r19, 0x00	; 0
    72ba:	f9 01       	movw	r30, r18
    72bc:	21 81       	ldd	r18, Z+1	; 0x01
    72be:	62 2f       	mov	r22, r18
    72c0:	29 81       	ldd	r18, Y+1	; 0x01
    72c2:	42 2f       	mov	r20, r18
    72c4:	50 e0       	ldi	r21, 0x00	; 0
    72c6:	21 e0       	ldi	r18, 0x01	; 1
    72c8:	30 e0       	ldi	r19, 0x00	; 0
    72ca:	02 c0       	rjmp	.+4      	; 0x72d0 <PORTC_set_pin_level+0x5c>
    72cc:	22 0f       	add	r18, r18
    72ce:	33 1f       	adc	r19, r19
    72d0:	4a 95       	dec	r20
    72d2:	e2 f7       	brpl	.-8      	; 0x72cc <PORTC_set_pin_level+0x58>
    72d4:	20 95       	com	r18
    72d6:	26 23       	and	r18, r22
    72d8:	fc 01       	movw	r30, r24
    72da:	21 83       	std	Z+1, r18	; 0x01
    72dc:	00 00       	nop
    72de:	0f 90       	pop	r0
    72e0:	0f 90       	pop	r0
    72e2:	df 91       	pop	r29
    72e4:	cf 91       	pop	r28
    72e6:	08 95       	ret

000072e8 <PORTD_set_pin_pull_mode>:
    72e8:	cf 93       	push	r28
    72ea:	df 93       	push	r29
    72ec:	00 d0       	rcall	.+0      	; 0x72ee <PORTD_set_pin_pull_mode+0x6>
    72ee:	00 d0       	rcall	.+0      	; 0x72f0 <PORTD_set_pin_pull_mode+0x8>
    72f0:	cd b7       	in	r28, 0x3d	; 61
    72f2:	de b7       	in	r29, 0x3e	; 62
    72f4:	8b 83       	std	Y+3, r24	; 0x03
    72f6:	6c 83       	std	Y+4, r22	; 0x04
    72f8:	8b 81       	ldd	r24, Y+3	; 0x03
    72fa:	88 2f       	mov	r24, r24
    72fc:	90 e0       	ldi	r25, 0x00	; 0
    72fe:	80 59       	subi	r24, 0x90	; 144
    7300:	9b 4f       	sbci	r25, 0xFB	; 251
    7302:	89 83       	std	Y+1, r24	; 0x01
    7304:	9a 83       	std	Y+2, r25	; 0x02
    7306:	8c 81       	ldd	r24, Y+4	; 0x04
    7308:	81 30       	cpi	r24, 0x01	; 1
    730a:	59 f4       	brne	.+22     	; 0x7322 <PORTD_set_pin_pull_mode+0x3a>
    730c:	89 81       	ldd	r24, Y+1	; 0x01
    730e:	9a 81       	ldd	r25, Y+2	; 0x02
    7310:	fc 01       	movw	r30, r24
    7312:	80 81       	ld	r24, Z
    7314:	28 2f       	mov	r18, r24
    7316:	28 60       	ori	r18, 0x08	; 8
    7318:	89 81       	ldd	r24, Y+1	; 0x01
    731a:	9a 81       	ldd	r25, Y+2	; 0x02
    731c:	fc 01       	movw	r30, r24
    731e:	20 83       	st	Z, r18
    7320:	0d c0       	rjmp	.+26     	; 0x733c <PORTD_set_pin_pull_mode+0x54>
    7322:	8c 81       	ldd	r24, Y+4	; 0x04
    7324:	88 23       	and	r24, r24
    7326:	51 f4       	brne	.+20     	; 0x733c <PORTD_set_pin_pull_mode+0x54>
    7328:	89 81       	ldd	r24, Y+1	; 0x01
    732a:	9a 81       	ldd	r25, Y+2	; 0x02
    732c:	fc 01       	movw	r30, r24
    732e:	80 81       	ld	r24, Z
    7330:	28 2f       	mov	r18, r24
    7332:	27 7f       	andi	r18, 0xF7	; 247
    7334:	89 81       	ldd	r24, Y+1	; 0x01
    7336:	9a 81       	ldd	r25, Y+2	; 0x02
    7338:	fc 01       	movw	r30, r24
    733a:	20 83       	st	Z, r18
    733c:	00 00       	nop
    733e:	24 96       	adiw	r28, 0x04	; 4
    7340:	cd bf       	out	0x3d, r28	; 61
    7342:	de bf       	out	0x3e, r29	; 62
    7344:	df 91       	pop	r29
    7346:	cf 91       	pop	r28
    7348:	08 95       	ret

0000734a <PORTD_pin_set_isc>:
    734a:	cf 93       	push	r28
    734c:	df 93       	push	r29
    734e:	00 d0       	rcall	.+0      	; 0x7350 <PORTD_pin_set_isc+0x6>
    7350:	00 d0       	rcall	.+0      	; 0x7352 <PORTD_pin_set_isc+0x8>
    7352:	cd b7       	in	r28, 0x3d	; 61
    7354:	de b7       	in	r29, 0x3e	; 62
    7356:	8b 83       	std	Y+3, r24	; 0x03
    7358:	6c 83       	std	Y+4, r22	; 0x04
    735a:	8b 81       	ldd	r24, Y+3	; 0x03
    735c:	88 2f       	mov	r24, r24
    735e:	90 e0       	ldi	r25, 0x00	; 0
    7360:	80 59       	subi	r24, 0x90	; 144
    7362:	9b 4f       	sbci	r25, 0xFB	; 251
    7364:	89 83       	std	Y+1, r24	; 0x01
    7366:	9a 83       	std	Y+2, r25	; 0x02
    7368:	89 81       	ldd	r24, Y+1	; 0x01
    736a:	9a 81       	ldd	r25, Y+2	; 0x02
    736c:	fc 01       	movw	r30, r24
    736e:	80 81       	ld	r24, Z
    7370:	98 2f       	mov	r25, r24
    7372:	98 7f       	andi	r25, 0xF8	; 248
    7374:	8c 81       	ldd	r24, Y+4	; 0x04
    7376:	89 2b       	or	r24, r25
    7378:	28 2f       	mov	r18, r24
    737a:	89 81       	ldd	r24, Y+1	; 0x01
    737c:	9a 81       	ldd	r25, Y+2	; 0x02
    737e:	fc 01       	movw	r30, r24
    7380:	20 83       	st	Z, r18
    7382:	00 00       	nop
    7384:	24 96       	adiw	r28, 0x04	; 4
    7386:	cd bf       	out	0x3d, r28	; 61
    7388:	de bf       	out	0x3e, r29	; 62
    738a:	df 91       	pop	r29
    738c:	cf 91       	pop	r28
    738e:	08 95       	ret

00007390 <PORTD_set_pin_dir>:
    7390:	cf 93       	push	r28
    7392:	df 93       	push	r29
    7394:	00 d0       	rcall	.+0      	; 0x7396 <PORTD_set_pin_dir+0x6>
    7396:	cd b7       	in	r28, 0x3d	; 61
    7398:	de b7       	in	r29, 0x3e	; 62
    739a:	89 83       	std	Y+1, r24	; 0x01
    739c:	6a 83       	std	Y+2, r22	; 0x02
    739e:	8a 81       	ldd	r24, Y+2	; 0x02
    73a0:	88 2f       	mov	r24, r24
    73a2:	90 e0       	ldi	r25, 0x00	; 0
    73a4:	81 30       	cpi	r24, 0x01	; 1
    73a6:	91 05       	cpc	r25, r1
    73a8:	e1 f0       	breq	.+56     	; 0x73e2 <PORTD_set_pin_dir+0x52>
    73aa:	82 30       	cpi	r24, 0x02	; 2
    73ac:	91 05       	cpc	r25, r1
    73ae:	71 f1       	breq	.+92     	; 0x740c <PORTD_set_pin_dir+0x7c>
    73b0:	89 2b       	or	r24, r25
    73b2:	09 f0       	breq	.+2      	; 0x73b6 <PORTD_set_pin_dir+0x26>
    73b4:	3b c0       	rjmp	.+118    	; 0x742c <PORTD_set_pin_dir+0x9c>
    73b6:	8c e0       	ldi	r24, 0x0C	; 12
    73b8:	90 e0       	ldi	r25, 0x00	; 0
    73ba:	2c e0       	ldi	r18, 0x0C	; 12
    73bc:	30 e0       	ldi	r19, 0x00	; 0
    73be:	f9 01       	movw	r30, r18
    73c0:	20 81       	ld	r18, Z
    73c2:	62 2f       	mov	r22, r18
    73c4:	29 81       	ldd	r18, Y+1	; 0x01
    73c6:	42 2f       	mov	r20, r18
    73c8:	50 e0       	ldi	r21, 0x00	; 0
    73ca:	21 e0       	ldi	r18, 0x01	; 1
    73cc:	30 e0       	ldi	r19, 0x00	; 0
    73ce:	02 c0       	rjmp	.+4      	; 0x73d4 <PORTD_set_pin_dir+0x44>
    73d0:	22 0f       	add	r18, r18
    73d2:	33 1f       	adc	r19, r19
    73d4:	4a 95       	dec	r20
    73d6:	e2 f7       	brpl	.-8      	; 0x73d0 <PORTD_set_pin_dir+0x40>
    73d8:	20 95       	com	r18
    73da:	26 23       	and	r18, r22
    73dc:	fc 01       	movw	r30, r24
    73de:	20 83       	st	Z, r18
    73e0:	25 c0       	rjmp	.+74     	; 0x742c <PORTD_set_pin_dir+0x9c>
    73e2:	8c e0       	ldi	r24, 0x0C	; 12
    73e4:	90 e0       	ldi	r25, 0x00	; 0
    73e6:	2c e0       	ldi	r18, 0x0C	; 12
    73e8:	30 e0       	ldi	r19, 0x00	; 0
    73ea:	f9 01       	movw	r30, r18
    73ec:	20 81       	ld	r18, Z
    73ee:	62 2f       	mov	r22, r18
    73f0:	29 81       	ldd	r18, Y+1	; 0x01
    73f2:	42 2f       	mov	r20, r18
    73f4:	50 e0       	ldi	r21, 0x00	; 0
    73f6:	21 e0       	ldi	r18, 0x01	; 1
    73f8:	30 e0       	ldi	r19, 0x00	; 0
    73fa:	02 c0       	rjmp	.+4      	; 0x7400 <PORTD_set_pin_dir+0x70>
    73fc:	22 0f       	add	r18, r18
    73fe:	33 1f       	adc	r19, r19
    7400:	4a 95       	dec	r20
    7402:	e2 f7       	brpl	.-8      	; 0x73fc <PORTD_set_pin_dir+0x6c>
    7404:	26 2b       	or	r18, r22
    7406:	fc 01       	movw	r30, r24
    7408:	20 83       	st	Z, r18
    740a:	10 c0       	rjmp	.+32     	; 0x742c <PORTD_set_pin_dir+0x9c>
    740c:	89 81       	ldd	r24, Y+1	; 0x01
    740e:	88 2f       	mov	r24, r24
    7410:	90 e0       	ldi	r25, 0x00	; 0
    7412:	80 59       	subi	r24, 0x90	; 144
    7414:	9b 4f       	sbci	r25, 0xFB	; 251
    7416:	29 81       	ldd	r18, Y+1	; 0x01
    7418:	22 2f       	mov	r18, r18
    741a:	30 e0       	ldi	r19, 0x00	; 0
    741c:	20 59       	subi	r18, 0x90	; 144
    741e:	3b 4f       	sbci	r19, 0xFB	; 251
    7420:	f9 01       	movw	r30, r18
    7422:	20 81       	ld	r18, Z
    7424:	28 60       	ori	r18, 0x08	; 8
    7426:	fc 01       	movw	r30, r24
    7428:	20 83       	st	Z, r18
    742a:	00 00       	nop
    742c:	00 00       	nop
    742e:	0f 90       	pop	r0
    7430:	0f 90       	pop	r0
    7432:	df 91       	pop	r29
    7434:	cf 91       	pop	r28
    7436:	08 95       	ret

00007438 <PORTD_get_pin_level>:
    7438:	cf 93       	push	r28
    743a:	df 93       	push	r29
    743c:	1f 92       	push	r1
    743e:	cd b7       	in	r28, 0x3d	; 61
    7440:	de b7       	in	r29, 0x3e	; 62
    7442:	89 83       	std	Y+1, r24	; 0x01
    7444:	8c e0       	ldi	r24, 0x0C	; 12
    7446:	90 e0       	ldi	r25, 0x00	; 0
    7448:	fc 01       	movw	r30, r24
    744a:	82 81       	ldd	r24, Z+2	; 0x02
    744c:	88 2f       	mov	r24, r24
    744e:	90 e0       	ldi	r25, 0x00	; 0
    7450:	29 81       	ldd	r18, Y+1	; 0x01
    7452:	22 2f       	mov	r18, r18
    7454:	30 e0       	ldi	r19, 0x00	; 0
    7456:	02 c0       	rjmp	.+4      	; 0x745c <PORTD_get_pin_level+0x24>
    7458:	95 95       	asr	r25
    745a:	87 95       	ror	r24
    745c:	2a 95       	dec	r18
    745e:	e2 f7       	brpl	.-8      	; 0x7458 <PORTD_get_pin_level+0x20>
    7460:	81 70       	andi	r24, 0x01	; 1
    7462:	99 27       	eor	r25, r25
    7464:	21 e0       	ldi	r18, 0x01	; 1
    7466:	89 2b       	or	r24, r25
    7468:	09 f4       	brne	.+2      	; 0x746c <PORTD_get_pin_level+0x34>
    746a:	20 e0       	ldi	r18, 0x00	; 0
    746c:	82 2f       	mov	r24, r18
    746e:	0f 90       	pop	r0
    7470:	df 91       	pop	r29
    7472:	cf 91       	pop	r28
    7474:	08 95       	ret

00007476 <PORTE_set_pin_dir>:
    7476:	cf 93       	push	r28
    7478:	df 93       	push	r29
    747a:	00 d0       	rcall	.+0      	; 0x747c <PORTE_set_pin_dir+0x6>
    747c:	cd b7       	in	r28, 0x3d	; 61
    747e:	de b7       	in	r29, 0x3e	; 62
    7480:	89 83       	std	Y+1, r24	; 0x01
    7482:	6a 83       	std	Y+2, r22	; 0x02
    7484:	8a 81       	ldd	r24, Y+2	; 0x02
    7486:	88 2f       	mov	r24, r24
    7488:	90 e0       	ldi	r25, 0x00	; 0
    748a:	81 30       	cpi	r24, 0x01	; 1
    748c:	91 05       	cpc	r25, r1
    748e:	e1 f0       	breq	.+56     	; 0x74c8 <PORTE_set_pin_dir+0x52>
    7490:	82 30       	cpi	r24, 0x02	; 2
    7492:	91 05       	cpc	r25, r1
    7494:	71 f1       	breq	.+92     	; 0x74f2 <PORTE_set_pin_dir+0x7c>
    7496:	89 2b       	or	r24, r25
    7498:	09 f0       	breq	.+2      	; 0x749c <PORTE_set_pin_dir+0x26>
    749a:	3b c0       	rjmp	.+118    	; 0x7512 <PORTE_set_pin_dir+0x9c>
    749c:	80 e1       	ldi	r24, 0x10	; 16
    749e:	90 e0       	ldi	r25, 0x00	; 0
    74a0:	20 e1       	ldi	r18, 0x10	; 16
    74a2:	30 e0       	ldi	r19, 0x00	; 0
    74a4:	f9 01       	movw	r30, r18
    74a6:	20 81       	ld	r18, Z
    74a8:	62 2f       	mov	r22, r18
    74aa:	29 81       	ldd	r18, Y+1	; 0x01
    74ac:	42 2f       	mov	r20, r18
    74ae:	50 e0       	ldi	r21, 0x00	; 0
    74b0:	21 e0       	ldi	r18, 0x01	; 1
    74b2:	30 e0       	ldi	r19, 0x00	; 0
    74b4:	02 c0       	rjmp	.+4      	; 0x74ba <PORTE_set_pin_dir+0x44>
    74b6:	22 0f       	add	r18, r18
    74b8:	33 1f       	adc	r19, r19
    74ba:	4a 95       	dec	r20
    74bc:	e2 f7       	brpl	.-8      	; 0x74b6 <PORTE_set_pin_dir+0x40>
    74be:	20 95       	com	r18
    74c0:	26 23       	and	r18, r22
    74c2:	fc 01       	movw	r30, r24
    74c4:	20 83       	st	Z, r18
    74c6:	25 c0       	rjmp	.+74     	; 0x7512 <PORTE_set_pin_dir+0x9c>
    74c8:	80 e1       	ldi	r24, 0x10	; 16
    74ca:	90 e0       	ldi	r25, 0x00	; 0
    74cc:	20 e1       	ldi	r18, 0x10	; 16
    74ce:	30 e0       	ldi	r19, 0x00	; 0
    74d0:	f9 01       	movw	r30, r18
    74d2:	20 81       	ld	r18, Z
    74d4:	62 2f       	mov	r22, r18
    74d6:	29 81       	ldd	r18, Y+1	; 0x01
    74d8:	42 2f       	mov	r20, r18
    74da:	50 e0       	ldi	r21, 0x00	; 0
    74dc:	21 e0       	ldi	r18, 0x01	; 1
    74de:	30 e0       	ldi	r19, 0x00	; 0
    74e0:	02 c0       	rjmp	.+4      	; 0x74e6 <PORTE_set_pin_dir+0x70>
    74e2:	22 0f       	add	r18, r18
    74e4:	33 1f       	adc	r19, r19
    74e6:	4a 95       	dec	r20
    74e8:	e2 f7       	brpl	.-8      	; 0x74e2 <PORTE_set_pin_dir+0x6c>
    74ea:	26 2b       	or	r18, r22
    74ec:	fc 01       	movw	r30, r24
    74ee:	20 83       	st	Z, r18
    74f0:	10 c0       	rjmp	.+32     	; 0x7512 <PORTE_set_pin_dir+0x9c>
    74f2:	89 81       	ldd	r24, Y+1	; 0x01
    74f4:	88 2f       	mov	r24, r24
    74f6:	90 e0       	ldi	r25, 0x00	; 0
    74f8:	80 57       	subi	r24, 0x70	; 112
    74fa:	9b 4f       	sbci	r25, 0xFB	; 251
    74fc:	29 81       	ldd	r18, Y+1	; 0x01
    74fe:	22 2f       	mov	r18, r18
    7500:	30 e0       	ldi	r19, 0x00	; 0
    7502:	20 57       	subi	r18, 0x70	; 112
    7504:	3b 4f       	sbci	r19, 0xFB	; 251
    7506:	f9 01       	movw	r30, r18
    7508:	20 81       	ld	r18, Z
    750a:	28 60       	ori	r18, 0x08	; 8
    750c:	fc 01       	movw	r30, r24
    750e:	20 83       	st	Z, r18
    7510:	00 00       	nop
    7512:	00 00       	nop
    7514:	0f 90       	pop	r0
    7516:	0f 90       	pop	r0
    7518:	df 91       	pop	r29
    751a:	cf 91       	pop	r28
    751c:	08 95       	ret

0000751e <PORTF_set_pin_dir>:
    751e:	cf 93       	push	r28
    7520:	df 93       	push	r29
    7522:	00 d0       	rcall	.+0      	; 0x7524 <PORTF_set_pin_dir+0x6>
    7524:	cd b7       	in	r28, 0x3d	; 61
    7526:	de b7       	in	r29, 0x3e	; 62
    7528:	89 83       	std	Y+1, r24	; 0x01
    752a:	6a 83       	std	Y+2, r22	; 0x02
    752c:	8a 81       	ldd	r24, Y+2	; 0x02
    752e:	88 2f       	mov	r24, r24
    7530:	90 e0       	ldi	r25, 0x00	; 0
    7532:	81 30       	cpi	r24, 0x01	; 1
    7534:	91 05       	cpc	r25, r1
    7536:	e1 f0       	breq	.+56     	; 0x7570 <PORTF_set_pin_dir+0x52>
    7538:	82 30       	cpi	r24, 0x02	; 2
    753a:	91 05       	cpc	r25, r1
    753c:	71 f1       	breq	.+92     	; 0x759a <PORTF_set_pin_dir+0x7c>
    753e:	89 2b       	or	r24, r25
    7540:	09 f0       	breq	.+2      	; 0x7544 <PORTF_set_pin_dir+0x26>
    7542:	3b c0       	rjmp	.+118    	; 0x75ba <PORTF_set_pin_dir+0x9c>
    7544:	84 e1       	ldi	r24, 0x14	; 20
    7546:	90 e0       	ldi	r25, 0x00	; 0
    7548:	24 e1       	ldi	r18, 0x14	; 20
    754a:	30 e0       	ldi	r19, 0x00	; 0
    754c:	f9 01       	movw	r30, r18
    754e:	20 81       	ld	r18, Z
    7550:	62 2f       	mov	r22, r18
    7552:	29 81       	ldd	r18, Y+1	; 0x01
    7554:	42 2f       	mov	r20, r18
    7556:	50 e0       	ldi	r21, 0x00	; 0
    7558:	21 e0       	ldi	r18, 0x01	; 1
    755a:	30 e0       	ldi	r19, 0x00	; 0
    755c:	02 c0       	rjmp	.+4      	; 0x7562 <PORTF_set_pin_dir+0x44>
    755e:	22 0f       	add	r18, r18
    7560:	33 1f       	adc	r19, r19
    7562:	4a 95       	dec	r20
    7564:	e2 f7       	brpl	.-8      	; 0x755e <PORTF_set_pin_dir+0x40>
    7566:	20 95       	com	r18
    7568:	26 23       	and	r18, r22
    756a:	fc 01       	movw	r30, r24
    756c:	20 83       	st	Z, r18
    756e:	25 c0       	rjmp	.+74     	; 0x75ba <PORTF_set_pin_dir+0x9c>
    7570:	84 e1       	ldi	r24, 0x14	; 20
    7572:	90 e0       	ldi	r25, 0x00	; 0
    7574:	24 e1       	ldi	r18, 0x14	; 20
    7576:	30 e0       	ldi	r19, 0x00	; 0
    7578:	f9 01       	movw	r30, r18
    757a:	20 81       	ld	r18, Z
    757c:	62 2f       	mov	r22, r18
    757e:	29 81       	ldd	r18, Y+1	; 0x01
    7580:	42 2f       	mov	r20, r18
    7582:	50 e0       	ldi	r21, 0x00	; 0
    7584:	21 e0       	ldi	r18, 0x01	; 1
    7586:	30 e0       	ldi	r19, 0x00	; 0
    7588:	02 c0       	rjmp	.+4      	; 0x758e <PORTF_set_pin_dir+0x70>
    758a:	22 0f       	add	r18, r18
    758c:	33 1f       	adc	r19, r19
    758e:	4a 95       	dec	r20
    7590:	e2 f7       	brpl	.-8      	; 0x758a <PORTF_set_pin_dir+0x6c>
    7592:	26 2b       	or	r18, r22
    7594:	fc 01       	movw	r30, r24
    7596:	20 83       	st	Z, r18
    7598:	10 c0       	rjmp	.+32     	; 0x75ba <PORTF_set_pin_dir+0x9c>
    759a:	89 81       	ldd	r24, Y+1	; 0x01
    759c:	88 2f       	mov	r24, r24
    759e:	90 e0       	ldi	r25, 0x00	; 0
    75a0:	80 55       	subi	r24, 0x50	; 80
    75a2:	9b 4f       	sbci	r25, 0xFB	; 251
    75a4:	29 81       	ldd	r18, Y+1	; 0x01
    75a6:	22 2f       	mov	r18, r18
    75a8:	30 e0       	ldi	r19, 0x00	; 0
    75aa:	20 55       	subi	r18, 0x50	; 80
    75ac:	3b 4f       	sbci	r19, 0xFB	; 251
    75ae:	f9 01       	movw	r30, r18
    75b0:	20 81       	ld	r18, Z
    75b2:	28 60       	ori	r18, 0x08	; 8
    75b4:	fc 01       	movw	r30, r24
    75b6:	20 83       	st	Z, r18
    75b8:	00 00       	nop
    75ba:	00 00       	nop
    75bc:	0f 90       	pop	r0
    75be:	0f 90       	pop	r0
    75c0:	df 91       	pop	r29
    75c2:	cf 91       	pop	r28
    75c4:	08 95       	ret

000075c6 <_Z10fet_driverb>:

void fet_driver(bool state)
{
    75c6:	cf 93       	push	r28
    75c8:	df 93       	push	r29
    75ca:	1f 92       	push	r1
    75cc:	cd b7       	in	r28, 0x3d	; 61
    75ce:	de b7       	in	r29, 0x3e	; 62
    75d0:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    75d2:	89 81       	ldd	r24, Y+1	; 0x01
    75d4:	88 23       	and	r24, r24
    75d6:	29 f0       	breq	.+10     	; 0x75e2 <_Z10fet_driverb+0x1c>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    75d8:	61 e0       	ldi	r22, 0x01	; 1
    75da:	83 e0       	ldi	r24, 0x03	; 3
    75dc:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
	}
}
    75e0:	04 c0       	rjmp	.+8      	; 0x75ea <_Z10fet_driverb+0x24>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    75e2:	60 e0       	ldi	r22, 0x00	; 0
    75e4:	83 e0       	ldi	r24, 0x03	; 3
    75e6:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	}
}
    75ea:	00 00       	nop
    75ec:	0f 90       	pop	r0
    75ee:	df 91       	pop	r29
    75f0:	cf 91       	pop	r28
    75f2:	08 95       	ret

000075f4 <_Z10wifi_powerb>:


void wifi_power(bool state)
{
    75f4:	cf 93       	push	r28
    75f6:	df 93       	push	r29
    75f8:	1f 92       	push	r1
    75fa:	cd b7       	in	r28, 0x3d	; 61
    75fc:	de b7       	in	r29, 0x3e	; 62
    75fe:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    7600:	89 81       	ldd	r24, Y+1	; 0x01
    7602:	88 23       	and	r24, r24
    7604:	29 f0       	breq	.+10     	; 0x7610 <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    7606:	61 e0       	ldi	r22, 0x01	; 1
    7608:	85 e0       	ldi	r24, 0x05	; 5
    760a:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    760e:	04 c0       	rjmp	.+8      	; 0x7618 <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    7610:	60 e0       	ldi	r22, 0x00	; 0
    7612:	85 e0       	ldi	r24, 0x05	; 5
    7614:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	}
}
    7618:	00 00       	nop
    761a:	0f 90       	pop	r0
    761c:	df 91       	pop	r29
    761e:	cf 91       	pop	r28
    7620:	08 95       	ret

00007622 <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    7622:	cf 93       	push	r28
    7624:	df 93       	push	r29
    7626:	1f 92       	push	r1
    7628:	cd b7       	in	r28, 0x3d	; 61
    762a:	de b7       	in	r29, 0x3e	; 62
    762c:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    762e:	89 81       	ldd	r24, Y+1	; 0x01
    7630:	88 23       	and	r24, r24
    7632:	29 f0       	breq	.+10     	; 0x763e <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    7634:	60 e0       	ldi	r22, 0x00	; 0
    7636:	86 e0       	ldi	r24, 0x06	; 6
    7638:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    763c:	04 c0       	rjmp	.+8      	; 0x7646 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    763e:	61 e0       	ldi	r22, 0x01	; 1
    7640:	86 e0       	ldi	r24, 0x06	; 6
    7642:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	}
}
    7646:	00 00       	nop
    7648:	0f 90       	pop	r0
    764a:	df 91       	pop	r29
    764c:	cf 91       	pop	r28
    764e:	08 95       	ret

00007650 <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    7650:	cf 93       	push	r28
    7652:	df 93       	push	r29
    7654:	cd b7       	in	r28, 0x3d	; 61
    7656:	de b7       	in	r29, 0x3e	; 62
	return(PORTD_get_pin_level(WIFI_MODULE_DETECT));
    7658:	87 e0       	ldi	r24, 0x07	; 7
    765a:	0e 94 1c 3a 	call	0x7438	; 0x7438 <PORTD_get_pin_level>
}
    765e:	df 91       	pop	r29
    7660:	cf 91       	pop	r28
    7662:	08 95       	ret

00007664 <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    7664:	cf 93       	push	r28
    7666:	df 93       	push	r29
    7668:	cd b7       	in	r28, 0x3d	; 61
    766a:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    766c:	61 e0       	ldi	r22, 0x01	; 1
    766e:	81 e0       	ldi	r24, 0x01	; 1
    7670:	0e 94 76 37 	call	0x6eec	; 0x6eec <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    7674:	60 e0       	ldi	r22, 0x00	; 0
    7676:	81 e0       	ldi	r24, 0x01	; 1
    7678:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    767c:	60 e0       	ldi	r22, 0x00	; 0
    767e:	82 e0       	ldi	r24, 0x02	; 2
    7680:	0e 94 76 37 	call	0x6eec	; 0x6eec <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    7684:	61 e0       	ldi	r22, 0x01	; 1
    7686:	82 e0       	ldi	r24, 0x02	; 2
    7688:	0e 94 22 37 	call	0x6e44	; 0x6e44 <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    768c:	62 e0       	ldi	r22, 0x02	; 2
    768e:	82 e0       	ldi	r24, 0x02	; 2
    7690:	0e 94 53 37 	call	0x6ea6	; 0x6ea6 <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    7694:	61 e0       	ldi	r22, 0x01	; 1
    7696:	83 e0       	ldi	r24, 0x03	; 3
    7698:	0e 94 76 37 	call	0x6eec	; 0x6eec <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    769c:	60 e0       	ldi	r22, 0x00	; 0
    769e:	83 e0       	ldi	r24, 0x03	; 3
    76a0:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    76a4:	61 e0       	ldi	r22, 0x01	; 1
    76a6:	85 e0       	ldi	r24, 0x05	; 5
    76a8:	0e 94 76 37 	call	0x6eec	; 0x6eec <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    76ac:	61 e0       	ldi	r22, 0x01	; 1
    76ae:	85 e0       	ldi	r24, 0x05	; 5
    76b0:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    76b4:	61 e0       	ldi	r22, 0x01	; 1
    76b6:	86 e0       	ldi	r24, 0x06	; 6
    76b8:	0e 94 76 37 	call	0x6eec	; 0x6eec <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    76bc:	60 e0       	ldi	r22, 0x00	; 0
    76be:	86 e0       	ldi	r24, 0x06	; 6
    76c0:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    76c4:	61 e0       	ldi	r22, 0x01	; 1
    76c6:	87 e0       	ldi	r24, 0x07	; 7
    76c8:	0e 94 76 37 	call	0x6eec	; 0x6eec <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    76cc:	60 e0       	ldi	r22, 0x00	; 0
    76ce:	87 e0       	ldi	r24, 0x07	; 7
    76d0:	0e 94 ca 37 	call	0x6f94	; 0x6f94 <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    76d4:	61 e0       	ldi	r22, 0x01	; 1
    76d6:	80 e0       	ldi	r24, 0x00	; 0
    76d8:	0e 94 04 38 	call	0x7008	; 0x7008 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    76dc:	60 e0       	ldi	r22, 0x00	; 0
    76de:	80 e0       	ldi	r24, 0x00	; 0
    76e0:	0e 94 58 38 	call	0x70b0	; 0x70b0 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    76e4:	61 e0       	ldi	r22, 0x01	; 1
    76e6:	81 e0       	ldi	r24, 0x01	; 1
    76e8:	0e 94 04 38 	call	0x7008	; 0x7008 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    76ec:	60 e0       	ldi	r22, 0x00	; 0
    76ee:	81 e0       	ldi	r24, 0x01	; 1
    76f0:	0e 94 58 38 	call	0x70b0	; 0x70b0 <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    76f4:	61 e0       	ldi	r22, 0x01	; 1
    76f6:	84 e0       	ldi	r24, 0x04	; 4
    76f8:	0e 94 04 38 	call	0x7008	; 0x7008 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    76fc:	60 e0       	ldi	r22, 0x00	; 0
    76fe:	84 e0       	ldi	r24, 0x04	; 4
    7700:	0e 94 58 38 	call	0x70b0	; 0x70b0 <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    7704:	61 e0       	ldi	r22, 0x01	; 1
    7706:	85 e0       	ldi	r24, 0x05	; 5
    7708:	0e 94 04 38 	call	0x7008	; 0x7008 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    770c:	60 e0       	ldi	r22, 0x00	; 0
    770e:	85 e0       	ldi	r24, 0x05	; 5
    7710:	0e 94 58 38 	call	0x70b0	; 0x70b0 <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    7714:	61 e0       	ldi	r22, 0x01	; 1
    7716:	85 e0       	ldi	r24, 0x05	; 5
    7718:	0e 94 e6 38 	call	0x71cc	; 0x71cc <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    771c:	60 e0       	ldi	r22, 0x00	; 0
    771e:	85 e0       	ldi	r24, 0x05	; 5
    7720:	0e 94 3a 39 	call	0x7274	; 0x7274 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    7724:	61 e0       	ldi	r22, 0x01	; 1
    7726:	86 e0       	ldi	r24, 0x06	; 6
    7728:	0e 94 e6 38 	call	0x71cc	; 0x71cc <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    772c:	60 e0       	ldi	r22, 0x00	; 0
    772e:	86 e0       	ldi	r24, 0x06	; 6
    7730:	0e 94 3a 39 	call	0x7274	; 0x7274 <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    7734:	60 e0       	ldi	r22, 0x00	; 0
    7736:	87 e0       	ldi	r24, 0x07	; 7
    7738:	0e 94 e6 38 	call	0x71cc	; 0x71cc <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    773c:	61 e0       	ldi	r22, 0x01	; 1
    773e:	87 e0       	ldi	r24, 0x07	; 7
    7740:	0e 94 92 38 	call	0x7124	; 0x7124 <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    7744:	62 e0       	ldi	r22, 0x02	; 2
    7746:	87 e0       	ldi	r24, 0x07	; 7
    7748:	0e 94 c3 38 	call	0x7186	; 0x7186 <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    774c:	60 e0       	ldi	r22, 0x00	; 0
    774e:	80 e0       	ldi	r24, 0x00	; 0
    7750:	0e 94 c8 39 	call	0x7390	; 0x7390 <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    7754:	60 e0       	ldi	r22, 0x00	; 0
    7756:	81 e0       	ldi	r24, 0x01	; 1
    7758:	0e 94 c8 39 	call	0x7390	; 0x7390 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    775c:	61 e0       	ldi	r22, 0x01	; 1
    775e:	81 e0       	ldi	r24, 0x01	; 1
    7760:	0e 94 74 39 	call	0x72e8	; 0x72e8 <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    7764:	61 e0       	ldi	r22, 0x01	; 1
    7766:	81 e0       	ldi	r24, 0x01	; 1
    7768:	0e 94 a5 39 	call	0x734a	; 0x734a <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    776c:	60 e0       	ldi	r22, 0x00	; 0
    776e:	87 e0       	ldi	r24, 0x07	; 7
    7770:	0e 94 c8 39 	call	0x7390	; 0x7390 <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    7774:	60 e0       	ldi	r22, 0x00	; 0
    7776:	87 e0       	ldi	r24, 0x07	; 7
    7778:	0e 94 74 39 	call	0x72e8	; 0x72e8 <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    777c:	62 e0       	ldi	r22, 0x02	; 2
    777e:	80 e0       	ldi	r24, 0x00	; 0
    7780:	0e 94 3b 3a 	call	0x7476	; 0x7476 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    7784:	62 e0       	ldi	r22, 0x02	; 2
    7786:	81 e0       	ldi	r24, 0x01	; 1
    7788:	0e 94 3b 3a 	call	0x7476	; 0x7476 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    778c:	62 e0       	ldi	r22, 0x02	; 2
    778e:	82 e0       	ldi	r24, 0x02	; 2
    7790:	0e 94 3b 3a 	call	0x7476	; 0x7476 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    7794:	62 e0       	ldi	r22, 0x02	; 2
    7796:	83 e0       	ldi	r24, 0x03	; 3
    7798:	0e 94 3b 3a 	call	0x7476	; 0x7476 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    779c:	62 e0       	ldi	r22, 0x02	; 2
    779e:	80 e0       	ldi	r24, 0x00	; 0
    77a0:	0e 94 8f 3a 	call	0x751e	; 0x751e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    77a4:	62 e0       	ldi	r22, 0x02	; 2
    77a6:	81 e0       	ldi	r24, 0x01	; 1
    77a8:	0e 94 8f 3a 	call	0x751e	; 0x751e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    77ac:	62 e0       	ldi	r22, 0x02	; 2
    77ae:	82 e0       	ldi	r24, 0x02	; 2
    77b0:	0e 94 8f 3a 	call	0x751e	; 0x751e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    77b4:	62 e0       	ldi	r22, 0x02	; 2
    77b6:	83 e0       	ldi	r24, 0x03	; 3
    77b8:	0e 94 8f 3a 	call	0x751e	; 0x751e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    77bc:	62 e0       	ldi	r22, 0x02	; 2
    77be:	84 e0       	ldi	r24, 0x04	; 4
    77c0:	0e 94 8f 3a 	call	0x751e	; 0x751e <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    77c4:	62 e0       	ldi	r22, 0x02	; 2
    77c6:	85 e0       	ldi	r24, 0x05	; 5
    77c8:	0e 94 8f 3a 	call	0x751e	; 0x751e <PORTF_set_pin_dir>
	/* PORTF.PIN6 = Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    77cc:	80 e0       	ldi	r24, 0x00	; 0
    77ce:	94 e0       	ldi	r25, 0x04	; 4
    77d0:	2a e0       	ldi	r18, 0x0A	; 10
    77d2:	fc 01       	movw	r30, r24
    77d4:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    77d6:	80 e6       	ldi	r24, 0x60	; 96
    77d8:	94 e0       	ldi	r25, 0x04	; 4
    77da:	29 e0       	ldi	r18, 0x09	; 9
    77dc:	fc 01       	movw	r30, r24
    77de:	21 8b       	std	Z+17, r18	; 0x11
}
    77e0:	00 00       	nop
    77e2:	df 91       	pop	r29
    77e4:	cf 91       	pop	r28
    77e6:	08 95       	ret

000077e8 <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    77e8:	cf 93       	push	r28
    77ea:	df 93       	push	r29
    77ec:	cd b7       	in	r28, 0x3d	; 61
    77ee:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    77f0:	80 e8       	ldi	r24, 0x80	; 128
    77f2:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    77f4:	fc 01       	movw	r30, r24
    77f6:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    77f8:	80 e0       	ldi	r24, 0x00	; 0
}
    77fa:	df 91       	pop	r29
    77fc:	cf 91       	pop	r28
    77fe:	08 95       	ret

00007800 <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    7800:	cf 93       	push	r28
    7802:	df 93       	push	r29
    7804:	00 d0       	rcall	.+0      	; 0x7806 <ccp_write_io+0x6>
    7806:	1f 92       	push	r1
    7808:	cd b7       	in	r28, 0x3d	; 61
    780a:	de b7       	in	r29, 0x3e	; 62
    780c:	89 83       	std	Y+1, r24	; 0x01
    780e:	9a 83       	std	Y+2, r25	; 0x02
    7810:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    7812:	89 81       	ldd	r24, Y+1	; 0x01
    7814:	9a 81       	ldd	r25, Y+2	; 0x02
    7816:	4b 81       	ldd	r20, Y+3	; 0x03
    7818:	68 ed       	ldi	r22, 0xD8	; 216
    781a:	0e 94 2c 5e 	call	0xbc58	; 0xbc58 <protected_write_io>
}
    781e:	00 00       	nop
    7820:	23 96       	adiw	r28, 0x03	; 3
    7822:	cd bf       	out	0x3d, r28	; 61
    7824:	de bf       	out	0x3e, r29	; 62
    7826:	df 91       	pop	r29
    7828:	cf 91       	pop	r28
    782a:	08 95       	ret

0000782c <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    782c:	cf 93       	push	r28
    782e:	df 93       	push	r29
    7830:	cd b7       	in	r28, 0x3d	; 61
    7832:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    7834:	64 e2       	ldi	r22, 0x24	; 36
    7836:	88 e6       	ldi	r24, 0x68	; 104
    7838:	90 e0       	ldi	r25, 0x00	; 0
    783a:	0e 94 00 3c 	call	0x7800	; 0x7800 <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    783e:	80 e0       	ldi	r24, 0x00	; 0
}
    7840:	df 91       	pop	r29
    7842:	cf 91       	pop	r28
    7844:	08 95       	ret

00007846 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    7846:	cf 93       	push	r28
    7848:	df 93       	push	r29
    784a:	cd b7       	in	r28, 0x3d	; 61
    784c:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    784e:	78 94       	sei

	return 0;
    7850:	80 e0       	ldi	r24, 0x00	; 0
}
    7852:	df 91       	pop	r29
    7854:	cf 91       	pop	r28
    7856:	08 95       	ret

00007858 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    7858:	cf 93       	push	r28
    785a:	df 93       	push	r29
    785c:	cd b7       	in	r28, 0x3d	; 61
    785e:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    7860:	80 ea       	ldi	r24, 0xA0	; 160
    7862:	90 e0       	ldi	r25, 0x00	; 0
    7864:	23 e0       	ldi	r18, 0x03	; 3
    7866:	fc 01       	movw	r30, r24
    7868:	22 83       	std	Z+2, r18	; 0x02
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    786a:	6a e0       	ldi	r22, 0x0A	; 10
    786c:	70 e0       	ldi	r23, 0x00	; 0
    786e:	80 e0       	ldi	r24, 0x00	; 0
    7870:	90 e0       	ldi	r25, 0x00	; 0
    7872:	0e 94 f9 6d 	call	0xdbf2	; 0xdbf2 <util_delay_ms>
    7876:	88 23       	and	r24, r24
    7878:	09 f0       	breq	.+2      	; 0x787c <_ZL9VREF_initv+0x24>
    787a:	f7 cf       	rjmp	.-18     	; 0x786a <_ZL9VREF_initv+0x12>
}
    787c:	00 00       	nop
    787e:	df 91       	pop	r29
    7880:	cf 91       	pop	r28
    7882:	08 95       	ret

00007884 <_Z9DAC0_initv>:

void DAC0_init(void)
{
    7884:	cf 93       	push	r28
    7886:	df 93       	push	r29
    7888:	cd b7       	in	r28, 0x3d	; 61
    788a:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    788c:	0e 94 2c 3c 	call	0x7858	; 0x7858 <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    7890:	80 e6       	ldi	r24, 0x60	; 96
    7892:	94 e0       	ldi	r25, 0x04	; 4
    7894:	20 e6       	ldi	r18, 0x60	; 96
    7896:	34 e0       	ldi	r19, 0x04	; 4
    7898:	f9 01       	movw	r30, r18
    789a:	26 89       	ldd	r18, Z+22	; 0x16
    789c:	28 7f       	andi	r18, 0xF8	; 248
    789e:	fc 01       	movw	r30, r24
    78a0:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    78a2:	80 e6       	ldi	r24, 0x60	; 96
    78a4:	94 e0       	ldi	r25, 0x04	; 4
    78a6:	20 e6       	ldi	r18, 0x60	; 96
    78a8:	34 e0       	ldi	r19, 0x04	; 4
    78aa:	f9 01       	movw	r30, r18
    78ac:	26 89       	ldd	r18, Z+22	; 0x16
    78ae:	24 60       	ori	r18, 0x04	; 4
    78b0:	fc 01       	movw	r30, r24
    78b2:	26 8b       	std	Z+22, r18	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    78b4:	80 e6       	ldi	r24, 0x60	; 96
    78b6:	94 e0       	ldi	r25, 0x04	; 4
    78b8:	20 e6       	ldi	r18, 0x60	; 96
    78ba:	34 e0       	ldi	r19, 0x04	; 4
    78bc:	f9 01       	movw	r30, r18
    78be:	26 89       	ldd	r18, Z+22	; 0x16
    78c0:	27 7f       	andi	r18, 0xF7	; 247
    78c2:	fc 01       	movw	r30, r24
    78c4:	26 8b       	std	Z+22, r18	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    78c6:	80 ea       	ldi	r24, 0xA0	; 160
    78c8:	96 e0       	ldi	r25, 0x06	; 6
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    78ca:	21 ec       	ldi	r18, 0xC1	; 193
    78cc:	fc 01       	movw	r30, r24
    78ce:	20 83       	st	Z, r18
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    78d0:	80 e0       	ldi	r24, 0x00	; 0
    78d2:	90 e0       	ldi	r25, 0x00	; 0
    78d4:	0e 94 70 3c 	call	0x78e0	; 0x78e0 <_Z11DAC0_setValj>
}
    78d8:	00 00       	nop
    78da:	df 91       	pop	r29
    78dc:	cf 91       	pop	r28
    78de:	08 95       	ret

000078e0 <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    78e0:	cf 93       	push	r28
    78e2:	df 93       	push	r29
    78e4:	00 d0       	rcall	.+0      	; 0x78e6 <_Z11DAC0_setValj+0x6>
    78e6:	cd b7       	in	r28, 0x3d	; 61
    78e8:	de b7       	in	r29, 0x3e	; 62
    78ea:	89 83       	std	Y+1, r24	; 0x01
    78ec:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    78ee:	80 ea       	ldi	r24, 0xA0	; 160
    78f0:	96 e0       	ldi	r25, 0x06	; 6
    78f2:	29 81       	ldd	r18, Y+1	; 0x01
    78f4:	22 95       	swap	r18
    78f6:	22 0f       	add	r18, r18
    78f8:	22 0f       	add	r18, r18
    78fa:	20 7c       	andi	r18, 0xC0	; 192
    78fc:	fc 01       	movw	r30, r24
    78fe:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    7900:	80 ea       	ldi	r24, 0xA0	; 160
    7902:	96 e0       	ldi	r25, 0x06	; 6
    7904:	29 81       	ldd	r18, Y+1	; 0x01
    7906:	3a 81       	ldd	r19, Y+2	; 0x02
    7908:	36 95       	lsr	r19
    790a:	27 95       	ror	r18
    790c:	36 95       	lsr	r19
    790e:	27 95       	ror	r18
    7910:	fc 01       	movw	r30, r24
    7912:	23 83       	std	Z+3, r18	; 0x03
}
    7914:	00 00       	nop
    7916:	0f 90       	pop	r0
    7918:	0f 90       	pop	r0
    791a:	df 91       	pop	r29
    791c:	cf 91       	pop	r28
    791e:	08 95       	ret

00007920 <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    7920:	cf 93       	push	r28
    7922:	df 93       	push	r29
    7924:	00 d0       	rcall	.+0      	; 0x7926 <PORTC_set_pin_dir+0x6>
    7926:	cd b7       	in	r28, 0x3d	; 61
    7928:	de b7       	in	r29, 0x3e	; 62
    792a:	89 83       	std	Y+1, r24	; 0x01
    792c:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    792e:	8a 81       	ldd	r24, Y+2	; 0x02
    7930:	88 2f       	mov	r24, r24
    7932:	90 e0       	ldi	r25, 0x00	; 0
    7934:	81 30       	cpi	r24, 0x01	; 1
    7936:	91 05       	cpc	r25, r1
    7938:	e1 f0       	breq	.+56     	; 0x7972 <PORTC_set_pin_dir+0x52>
    793a:	82 30       	cpi	r24, 0x02	; 2
    793c:	91 05       	cpc	r25, r1
    793e:	71 f1       	breq	.+92     	; 0x799c <PORTC_set_pin_dir+0x7c>
    7940:	89 2b       	or	r24, r25
    7942:	09 f0       	breq	.+2      	; 0x7946 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    7944:	3b c0       	rjmp	.+118    	; 0x79bc <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7946:	88 e0       	ldi	r24, 0x08	; 8
    7948:	90 e0       	ldi	r25, 0x00	; 0
    794a:	28 e0       	ldi	r18, 0x08	; 8
    794c:	30 e0       	ldi	r19, 0x00	; 0
    794e:	f9 01       	movw	r30, r18
    7950:	20 81       	ld	r18, Z
    7952:	62 2f       	mov	r22, r18
    7954:	29 81       	ldd	r18, Y+1	; 0x01
    7956:	42 2f       	mov	r20, r18
    7958:	50 e0       	ldi	r21, 0x00	; 0
    795a:	21 e0       	ldi	r18, 0x01	; 1
    795c:	30 e0       	ldi	r19, 0x00	; 0
    795e:	02 c0       	rjmp	.+4      	; 0x7964 <PORTC_set_pin_dir+0x44>
    7960:	22 0f       	add	r18, r18
    7962:	33 1f       	adc	r19, r19
    7964:	4a 95       	dec	r20
    7966:	e2 f7       	brpl	.-8      	; 0x7960 <PORTC_set_pin_dir+0x40>
    7968:	20 95       	com	r18
    796a:	26 23       	and	r18, r22
    796c:	fc 01       	movw	r30, r24
    796e:	20 83       	st	Z, r18
		break;
    7970:	25 c0       	rjmp	.+74     	; 0x79bc <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    7972:	88 e0       	ldi	r24, 0x08	; 8
    7974:	90 e0       	ldi	r25, 0x00	; 0
    7976:	28 e0       	ldi	r18, 0x08	; 8
    7978:	30 e0       	ldi	r19, 0x00	; 0
    797a:	f9 01       	movw	r30, r18
    797c:	20 81       	ld	r18, Z
    797e:	62 2f       	mov	r22, r18
    7980:	29 81       	ldd	r18, Y+1	; 0x01
    7982:	42 2f       	mov	r20, r18
    7984:	50 e0       	ldi	r21, 0x00	; 0
    7986:	21 e0       	ldi	r18, 0x01	; 1
    7988:	30 e0       	ldi	r19, 0x00	; 0
    798a:	02 c0       	rjmp	.+4      	; 0x7990 <PORTC_set_pin_dir+0x70>
    798c:	22 0f       	add	r18, r18
    798e:	33 1f       	adc	r19, r19
    7990:	4a 95       	dec	r20
    7992:	e2 f7       	brpl	.-8      	; 0x798c <PORTC_set_pin_dir+0x6c>
    7994:	26 2b       	or	r18, r22
    7996:	fc 01       	movw	r30, r24
    7998:	20 83       	st	Z, r18
		break;
    799a:	10 c0       	rjmp	.+32     	; 0x79bc <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    799c:	89 81       	ldd	r24, Y+1	; 0x01
    799e:	88 2f       	mov	r24, r24
    79a0:	90 e0       	ldi	r25, 0x00	; 0
    79a2:	80 5b       	subi	r24, 0xB0	; 176
    79a4:	9b 4f       	sbci	r25, 0xFB	; 251
    79a6:	29 81       	ldd	r18, Y+1	; 0x01
    79a8:	22 2f       	mov	r18, r18
    79aa:	30 e0       	ldi	r19, 0x00	; 0
    79ac:	20 5b       	subi	r18, 0xB0	; 176
    79ae:	3b 4f       	sbci	r19, 0xFB	; 251
    79b0:	f9 01       	movw	r30, r18
    79b2:	20 81       	ld	r18, Z
    79b4:	28 60       	ori	r18, 0x08	; 8
    79b6:	fc 01       	movw	r30, r24
    79b8:	20 83       	st	Z, r18
		break;
    79ba:	00 00       	nop
	default:
		break;
	}
}
    79bc:	00 00       	nop
    79be:	0f 90       	pop	r0
    79c0:	0f 90       	pop	r0
    79c2:	df 91       	pop	r29
    79c4:	cf 91       	pop	r28
    79c6:	08 95       	ret

000079c8 <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    79c8:	cf 93       	push	r28
    79ca:	df 93       	push	r29
    79cc:	00 d0       	rcall	.+0      	; 0x79ce <PORTC_set_pin_level+0x6>
    79ce:	cd b7       	in	r28, 0x3d	; 61
    79d0:	de b7       	in	r29, 0x3e	; 62
    79d2:	89 83       	std	Y+1, r24	; 0x01
    79d4:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    79d6:	8a 81       	ldd	r24, Y+2	; 0x02
    79d8:	88 23       	and	r24, r24
    79da:	a9 f0       	breq	.+42     	; 0x7a06 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    79dc:	88 e0       	ldi	r24, 0x08	; 8
    79de:	90 e0       	ldi	r25, 0x00	; 0
    79e0:	28 e0       	ldi	r18, 0x08	; 8
    79e2:	30 e0       	ldi	r19, 0x00	; 0
    79e4:	f9 01       	movw	r30, r18
    79e6:	21 81       	ldd	r18, Z+1	; 0x01
    79e8:	62 2f       	mov	r22, r18
    79ea:	29 81       	ldd	r18, Y+1	; 0x01
    79ec:	42 2f       	mov	r20, r18
    79ee:	50 e0       	ldi	r21, 0x00	; 0
    79f0:	21 e0       	ldi	r18, 0x01	; 1
    79f2:	30 e0       	ldi	r19, 0x00	; 0
    79f4:	02 c0       	rjmp	.+4      	; 0x79fa <PORTC_set_pin_level+0x32>
    79f6:	22 0f       	add	r18, r18
    79f8:	33 1f       	adc	r19, r19
    79fa:	4a 95       	dec	r20
    79fc:	e2 f7       	brpl	.-8      	; 0x79f6 <PORTC_set_pin_level+0x2e>
    79fe:	26 2b       	or	r18, r22
    7a00:	fc 01       	movw	r30, r24
    7a02:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    7a04:	15 c0       	rjmp	.+42     	; 0x7a30 <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    7a06:	88 e0       	ldi	r24, 0x08	; 8
    7a08:	90 e0       	ldi	r25, 0x00	; 0
    7a0a:	28 e0       	ldi	r18, 0x08	; 8
    7a0c:	30 e0       	ldi	r19, 0x00	; 0
    7a0e:	f9 01       	movw	r30, r18
    7a10:	21 81       	ldd	r18, Z+1	; 0x01
    7a12:	62 2f       	mov	r22, r18
    7a14:	29 81       	ldd	r18, Y+1	; 0x01
    7a16:	42 2f       	mov	r20, r18
    7a18:	50 e0       	ldi	r21, 0x00	; 0
    7a1a:	21 e0       	ldi	r18, 0x01	; 1
    7a1c:	30 e0       	ldi	r19, 0x00	; 0
    7a1e:	02 c0       	rjmp	.+4      	; 0x7a24 <PORTC_set_pin_level+0x5c>
    7a20:	22 0f       	add	r18, r18
    7a22:	33 1f       	adc	r19, r19
    7a24:	4a 95       	dec	r20
    7a26:	e2 f7       	brpl	.-8      	; 0x7a20 <PORTC_set_pin_level+0x58>
    7a28:	20 95       	com	r18
    7a2a:	26 23       	and	r18, r22
    7a2c:	fc 01       	movw	r30, r24
    7a2e:	21 83       	std	Z+1, r18	; 0x01
	}
}
    7a30:	00 00       	nop
    7a32:	0f 90       	pop	r0
    7a34:	0f 90       	pop	r0
    7a36:	df 91       	pop	r29
    7a38:	cf 91       	pop	r28
    7a3a:	08 95       	ret

00007a3c <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    7a3c:	cf 93       	push	r28
    7a3e:	df 93       	push	r29
    7a40:	1f 92       	push	r1
    7a42:	cd b7       	in	r28, 0x3d	; 61
    7a44:	de b7       	in	r29, 0x3e	; 62
    7a46:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    7a48:	69 81       	ldd	r22, Y+1	; 0x01
    7a4a:	86 e0       	ldi	r24, 0x06	; 6
    7a4c:	0e 94 90 3c 	call	0x7920	; 0x7920 <PORTC_set_pin_dir>
}
    7a50:	00 00       	nop
    7a52:	0f 90       	pop	r0
    7a54:	df 91       	pop	r29
    7a56:	cf 91       	pop	r28
    7a58:	08 95       	ret

00007a5a <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    7a5a:	cf 93       	push	r28
    7a5c:	df 93       	push	r29
    7a5e:	1f 92       	push	r1
    7a60:	cd b7       	in	r28, 0x3d	; 61
    7a62:	de b7       	in	r29, 0x3e	; 62
    7a64:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    7a66:	69 81       	ldd	r22, Y+1	; 0x01
    7a68:	85 e0       	ldi	r24, 0x05	; 5
    7a6a:	0e 94 90 3c 	call	0x7920	; 0x7920 <PORTC_set_pin_dir>
}
    7a6e:	00 00       	nop
    7a70:	0f 90       	pop	r0
    7a72:	df 91       	pop	r29
    7a74:	cf 91       	pop	r28
    7a76:	08 95       	ret

00007a78 <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    7a78:	cf 93       	push	r28
    7a7a:	df 93       	push	r29
    7a7c:	1f 92       	push	r1
    7a7e:	cd b7       	in	r28, 0x3d	; 61
    7a80:	de b7       	in	r29, 0x3e	; 62
    7a82:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    7a84:	69 81       	ldd	r22, Y+1	; 0x01
    7a86:	86 e0       	ldi	r24, 0x06	; 6
    7a88:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <PORTC_set_pin_level>
}
    7a8c:	00 00       	nop
    7a8e:	0f 90       	pop	r0
    7a90:	df 91       	pop	r29
    7a92:	cf 91       	pop	r28
    7a94:	08 95       	ret

00007a96 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    7a96:	cf 93       	push	r28
    7a98:	df 93       	push	r29
    7a9a:	1f 92       	push	r1
    7a9c:	cd b7       	in	r28, 0x3d	; 61
    7a9e:	de b7       	in	r29, 0x3e	; 62
    7aa0:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    7aa2:	69 81       	ldd	r22, Y+1	; 0x01
    7aa4:	85 e0       	ldi	r24, 0x05	; 5
    7aa6:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <PORTC_set_pin_level>
}
    7aaa:	00 00       	nop
    7aac:	0f 90       	pop	r0
    7aae:	df 91       	pop	r29
    7ab0:	cf 91       	pop	r28
    7ab2:	08 95       	ret

00007ab4 <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    7ab4:	cf 93       	push	r28
    7ab6:	df 93       	push	r29
    7ab8:	cd b7       	in	r28, 0x3d	; 61
    7aba:	de b7       	in	r29, 0x3e	; 62
    7abc:	26 97       	sbiw	r28, 0x06	; 6
    7abe:	cd bf       	out	0x3d, r28	; 61
    7ac0:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7ac2:	19 82       	std	Y+1, r1	; 0x01
    7ac4:	89 81       	ldd	r24, Y+1	; 0x01
    7ac6:	88 30       	cpi	r24, 0x08	; 8
    7ac8:	98 f4       	brcc	.+38     	; 0x7af0 <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7aca:	89 81       	ldd	r24, Y+1	; 0x01
    7acc:	88 2f       	mov	r24, r24
    7ace:	90 e0       	ldi	r25, 0x00	; 0
    7ad0:	80 5f       	subi	r24, 0xF0	; 240
    7ad2:	9b 4f       	sbci	r25, 0xFB	; 251
    7ad4:	29 81       	ldd	r18, Y+1	; 0x01
    7ad6:	22 2f       	mov	r18, r18
    7ad8:	30 e0       	ldi	r19, 0x00	; 0
    7ada:	20 5f       	subi	r18, 0xF0	; 240
    7adc:	3b 4f       	sbci	r19, 0xFB	; 251
    7ade:	f9 01       	movw	r30, r18
    7ae0:	20 81       	ld	r18, Z
    7ae2:	28 60       	ori	r18, 0x08	; 8
    7ae4:	fc 01       	movw	r30, r24
    7ae6:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7ae8:	89 81       	ldd	r24, Y+1	; 0x01
    7aea:	8f 5f       	subi	r24, 0xFF	; 255
    7aec:	89 83       	std	Y+1, r24	; 0x01
    7aee:	ea cf       	rjmp	.-44     	; 0x7ac4 <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7af0:	1a 82       	std	Y+2, r1	; 0x02
    7af2:	8a 81       	ldd	r24, Y+2	; 0x02
    7af4:	88 30       	cpi	r24, 0x08	; 8
    7af6:	98 f4       	brcc	.+38     	; 0x7b1e <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7af8:	8a 81       	ldd	r24, Y+2	; 0x02
    7afa:	88 2f       	mov	r24, r24
    7afc:	90 e0       	ldi	r25, 0x00	; 0
    7afe:	80 5d       	subi	r24, 0xD0	; 208
    7b00:	9b 4f       	sbci	r25, 0xFB	; 251
    7b02:	2a 81       	ldd	r18, Y+2	; 0x02
    7b04:	22 2f       	mov	r18, r18
    7b06:	30 e0       	ldi	r19, 0x00	; 0
    7b08:	20 5d       	subi	r18, 0xD0	; 208
    7b0a:	3b 4f       	sbci	r19, 0xFB	; 251
    7b0c:	f9 01       	movw	r30, r18
    7b0e:	20 81       	ld	r18, Z
    7b10:	28 60       	ori	r18, 0x08	; 8
    7b12:	fc 01       	movw	r30, r24
    7b14:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b16:	8a 81       	ldd	r24, Y+2	; 0x02
    7b18:	8f 5f       	subi	r24, 0xFF	; 255
    7b1a:	8a 83       	std	Y+2, r24	; 0x02
    7b1c:	ea cf       	rjmp	.-44     	; 0x7af2 <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b1e:	1b 82       	std	Y+3, r1	; 0x03
    7b20:	8b 81       	ldd	r24, Y+3	; 0x03
    7b22:	88 30       	cpi	r24, 0x08	; 8
    7b24:	98 f4       	brcc	.+38     	; 0x7b4c <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b26:	8b 81       	ldd	r24, Y+3	; 0x03
    7b28:	88 2f       	mov	r24, r24
    7b2a:	90 e0       	ldi	r25, 0x00	; 0
    7b2c:	80 5b       	subi	r24, 0xB0	; 176
    7b2e:	9b 4f       	sbci	r25, 0xFB	; 251
    7b30:	2b 81       	ldd	r18, Y+3	; 0x03
    7b32:	22 2f       	mov	r18, r18
    7b34:	30 e0       	ldi	r19, 0x00	; 0
    7b36:	20 5b       	subi	r18, 0xB0	; 176
    7b38:	3b 4f       	sbci	r19, 0xFB	; 251
    7b3a:	f9 01       	movw	r30, r18
    7b3c:	20 81       	ld	r18, Z
    7b3e:	28 60       	ori	r18, 0x08	; 8
    7b40:	fc 01       	movw	r30, r24
    7b42:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b44:	8b 81       	ldd	r24, Y+3	; 0x03
    7b46:	8f 5f       	subi	r24, 0xFF	; 255
    7b48:	8b 83       	std	Y+3, r24	; 0x03
    7b4a:	ea cf       	rjmp	.-44     	; 0x7b20 <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b4c:	1c 82       	std	Y+4, r1	; 0x04
    7b4e:	8c 81       	ldd	r24, Y+4	; 0x04
    7b50:	88 30       	cpi	r24, 0x08	; 8
    7b52:	98 f4       	brcc	.+38     	; 0x7b7a <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b54:	8c 81       	ldd	r24, Y+4	; 0x04
    7b56:	88 2f       	mov	r24, r24
    7b58:	90 e0       	ldi	r25, 0x00	; 0
    7b5a:	80 59       	subi	r24, 0x90	; 144
    7b5c:	9b 4f       	sbci	r25, 0xFB	; 251
    7b5e:	2c 81       	ldd	r18, Y+4	; 0x04
    7b60:	22 2f       	mov	r18, r18
    7b62:	30 e0       	ldi	r19, 0x00	; 0
    7b64:	20 59       	subi	r18, 0x90	; 144
    7b66:	3b 4f       	sbci	r19, 0xFB	; 251
    7b68:	f9 01       	movw	r30, r18
    7b6a:	20 81       	ld	r18, Z
    7b6c:	28 60       	ori	r18, 0x08	; 8
    7b6e:	fc 01       	movw	r30, r24
    7b70:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b72:	8c 81       	ldd	r24, Y+4	; 0x04
    7b74:	8f 5f       	subi	r24, 0xFF	; 255
    7b76:	8c 83       	std	Y+4, r24	; 0x04
    7b78:	ea cf       	rjmp	.-44     	; 0x7b4e <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7b7a:	1d 82       	std	Y+5, r1	; 0x05
    7b7c:	8d 81       	ldd	r24, Y+5	; 0x05
    7b7e:	88 30       	cpi	r24, 0x08	; 8
    7b80:	98 f4       	brcc	.+38     	; 0x7ba8 <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7b82:	8d 81       	ldd	r24, Y+5	; 0x05
    7b84:	88 2f       	mov	r24, r24
    7b86:	90 e0       	ldi	r25, 0x00	; 0
    7b88:	80 57       	subi	r24, 0x70	; 112
    7b8a:	9b 4f       	sbci	r25, 0xFB	; 251
    7b8c:	2d 81       	ldd	r18, Y+5	; 0x05
    7b8e:	22 2f       	mov	r18, r18
    7b90:	30 e0       	ldi	r19, 0x00	; 0
    7b92:	20 57       	subi	r18, 0x70	; 112
    7b94:	3b 4f       	sbci	r19, 0xFB	; 251
    7b96:	f9 01       	movw	r30, r18
    7b98:	20 81       	ld	r18, Z
    7b9a:	28 60       	ori	r18, 0x08	; 8
    7b9c:	fc 01       	movw	r30, r24
    7b9e:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7ba0:	8d 81       	ldd	r24, Y+5	; 0x05
    7ba2:	8f 5f       	subi	r24, 0xFF	; 255
    7ba4:	8d 83       	std	Y+5, r24	; 0x05
    7ba6:	ea cf       	rjmp	.-44     	; 0x7b7c <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7ba8:	1e 82       	std	Y+6, r1	; 0x06
    7baa:	8e 81       	ldd	r24, Y+6	; 0x06
    7bac:	88 30       	cpi	r24, 0x08	; 8
    7bae:	98 f4       	brcc	.+38     	; 0x7bd6 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7bb0:	8e 81       	ldd	r24, Y+6	; 0x06
    7bb2:	88 2f       	mov	r24, r24
    7bb4:	90 e0       	ldi	r25, 0x00	; 0
    7bb6:	80 55       	subi	r24, 0x50	; 80
    7bb8:	9b 4f       	sbci	r25, 0xFB	; 251
    7bba:	2e 81       	ldd	r18, Y+6	; 0x06
    7bbc:	22 2f       	mov	r18, r18
    7bbe:	30 e0       	ldi	r19, 0x00	; 0
    7bc0:	20 55       	subi	r18, 0x50	; 80
    7bc2:	3b 4f       	sbci	r19, 0xFB	; 251
    7bc4:	f9 01       	movw	r30, r18
    7bc6:	20 81       	ld	r18, Z
    7bc8:	28 60       	ori	r18, 0x08	; 8
    7bca:	fc 01       	movw	r30, r24
    7bcc:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7bce:	8e 81       	ldd	r24, Y+6	; 0x06
    7bd0:	8f 5f       	subi	r24, 0xFF	; 255
    7bd2:	8e 83       	std	Y+6, r24	; 0x06
    7bd4:	ea cf       	rjmp	.-44     	; 0x7baa <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7bd6:	00 00       	nop
    7bd8:	26 96       	adiw	r28, 0x06	; 6
    7bda:	cd bf       	out	0x3d, r28	; 61
    7bdc:	de bf       	out	0x3e, r29	; 62
    7bde:	df 91       	pop	r29
    7be0:	cf 91       	pop	r28
    7be2:	08 95       	ret

00007be4 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    7be4:	cf 93       	push	r28
    7be6:	df 93       	push	r29
    7be8:	cd b7       	in	r28, 0x3d	; 61
    7bea:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7bec:	0e 94 5a 3d 	call	0x7ab4	; 0x7ab4 <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    7bf0:	0e 94 16 3c 	call	0x782c	; 0x782c <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    7bf4:	0e 94 af 6d 	call	0xdb5e	; 0xdb5e <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    7bf8:	0e 94 23 3c 	call	0x7846	; 0x7846 <CPUINT_init>
	BINIO_init();
    7bfc:	0e 94 32 3b 	call	0x7664	; 0x7664 <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    7c00:	81 e0       	ldi	r24, 0x01	; 1
    7c02:	0e 94 1e 3d 	call	0x7a3c	; 0x7a3c <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7c06:	80 e0       	ldi	r24, 0x00	; 0
    7c08:	0e 94 3c 3d 	call	0x7a78	; 0x7a78 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    7c0c:	81 e0       	ldi	r24, 0x01	; 1
    7c0e:	0e 94 2d 3d 	call	0x7a5a	; 0x7a5a <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    7c12:	80 e0       	ldi	r24, 0x00	; 0
    7c14:	0e 94 4b 3d 	call	0x7a96	; 0x7a96 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    7c18:	0e 94 a7 6d 	call	0xdb4e	; 0xdb4e <SLPCTRL_init>
	
	DAC0_init();
    7c1c:	0e 94 42 3c 	call	0x7884	; 0x7884 <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    7c20:	41 e0       	ldi	r20, 0x01	; 1
    7c22:	60 e8       	ldi	r22, 0x80	; 128
    7c24:	75 e2       	ldi	r23, 0x25	; 37
    7c26:	80 e0       	ldi	r24, 0x00	; 0
    7c28:	90 e0       	ldi	r25, 0x00	; 0
    7c2a:	0e 94 38 59 	call	0xb270	; 0xb270 <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7c2e:	44 e0       	ldi	r20, 0x04	; 4
    7c30:	60 e8       	ldi	r22, 0x80	; 128
    7c32:	75 e2       	ldi	r23, 0x25	; 37
    7c34:	80 e0       	ldi	r24, 0x00	; 0
    7c36:	90 e0       	ldi	r25, 0x00	; 0
    7c38:	0e 94 eb 61 	call	0xc3d6	; 0xc3d6 <serialbus_init>

	BOD_init();
    7c3c:	0e 94 f4 3b 	call	0x77e8	; 0x77e8 <BOD_init>
}
    7c40:	00 00       	nop
    7c42:	df 91       	pop	r29
    7c44:	cf 91       	pop	r28
    7c46:	08 95       	ret

00007c48 <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    7c48:	cf 93       	push	r28
    7c4a:	df 93       	push	r29
    7c4c:	cd b7       	in	r28, 0x3d	; 61
    7c4e:	de b7       	in	r29, 0x3e	; 62
    7c50:	0e 94 53 4e 	call	0x9ca6	; 0x9ca6 <I2C_0_Init>
    7c54:	0e 94 49 44 	call	0x8892	; 0x8892 <ds3231_responding>
    7c58:	98 2f       	mov	r25, r24
    7c5a:	81 e0       	ldi	r24, 0x01	; 1
    7c5c:	89 27       	eor	r24, r25
    7c5e:	df 91       	pop	r29
    7c60:	cf 91       	pop	r28
    7c62:	08 95       	ret

00007c64 <_Z7bcd2dech>:
    7c64:	cf 93       	push	r28
    7c66:	df 93       	push	r29
    7c68:	00 d0       	rcall	.+0      	; 0x7c6a <_Z7bcd2dech+0x6>
    7c6a:	cd b7       	in	r28, 0x3d	; 61
    7c6c:	de b7       	in	r29, 0x3e	; 62
    7c6e:	8a 83       	std	Y+2, r24	; 0x02
    7c70:	8a 81       	ldd	r24, Y+2	; 0x02
    7c72:	88 2f       	mov	r24, r24
    7c74:	90 e0       	ldi	r25, 0x00	; 0
    7c76:	95 95       	asr	r25
    7c78:	87 95       	ror	r24
    7c7a:	95 95       	asr	r25
    7c7c:	87 95       	ror	r24
    7c7e:	95 95       	asr	r25
    7c80:	87 95       	ror	r24
    7c82:	95 95       	asr	r25
    7c84:	87 95       	ror	r24
    7c86:	88 0f       	add	r24, r24
    7c88:	98 2f       	mov	r25, r24
    7c8a:	99 0f       	add	r25, r25
    7c8c:	99 0f       	add	r25, r25
    7c8e:	98 0f       	add	r25, r24
    7c90:	8a 81       	ldd	r24, Y+2	; 0x02
    7c92:	8f 70       	andi	r24, 0x0F	; 15
    7c94:	89 0f       	add	r24, r25
    7c96:	89 83       	std	Y+1, r24	; 0x01
    7c98:	89 81       	ldd	r24, Y+1	; 0x01
    7c9a:	0f 90       	pop	r0
    7c9c:	0f 90       	pop	r0
    7c9e:	df 91       	pop	r29
    7ca0:	cf 91       	pop	r28
    7ca2:	08 95       	ret

00007ca4 <_Z7dec2bcdh>:
    7ca4:	cf 93       	push	r28
    7ca6:	df 93       	push	r29
    7ca8:	00 d0       	rcall	.+0      	; 0x7caa <_Z7dec2bcdh+0x6>
    7caa:	cd b7       	in	r28, 0x3d	; 61
    7cac:	de b7       	in	r29, 0x3e	; 62
    7cae:	8a 83       	std	Y+2, r24	; 0x02
    7cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    7cb2:	8d ec       	ldi	r24, 0xCD	; 205
    7cb4:	98 9f       	mul	r25, r24
    7cb6:	81 2d       	mov	r24, r1
    7cb8:	11 24       	eor	r1, r1
    7cba:	86 95       	lsr	r24
    7cbc:	86 95       	lsr	r24
    7cbe:	86 95       	lsr	r24
    7cc0:	88 0f       	add	r24, r24
    7cc2:	28 2f       	mov	r18, r24
    7cc4:	22 0f       	add	r18, r18
    7cc6:	22 0f       	add	r18, r18
    7cc8:	82 0f       	add	r24, r18
    7cca:	29 2f       	mov	r18, r25
    7ccc:	28 1b       	sub	r18, r24
    7cce:	82 2f       	mov	r24, r18
    7cd0:	89 83       	std	Y+1, r24	; 0x01
    7cd2:	9a 81       	ldd	r25, Y+2	; 0x02
    7cd4:	8d ec       	ldi	r24, 0xCD	; 205
    7cd6:	98 9f       	mul	r25, r24
    7cd8:	81 2d       	mov	r24, r1
    7cda:	11 24       	eor	r1, r1
    7cdc:	86 95       	lsr	r24
    7cde:	86 95       	lsr	r24
    7ce0:	86 95       	lsr	r24
    7ce2:	88 2f       	mov	r24, r24
    7ce4:	90 e0       	ldi	r25, 0x00	; 0
    7ce6:	82 95       	swap	r24
    7ce8:	92 95       	swap	r25
    7cea:	90 7f       	andi	r25, 0xF0	; 240
    7cec:	98 27       	eor	r25, r24
    7cee:	80 7f       	andi	r24, 0xF0	; 240
    7cf0:	98 27       	eor	r25, r24
    7cf2:	98 2f       	mov	r25, r24
    7cf4:	89 81       	ldd	r24, Y+1	; 0x01
    7cf6:	89 2b       	or	r24, r25
    7cf8:	89 83       	std	Y+1, r24	; 0x01
    7cfa:	89 81       	ldd	r24, Y+1	; 0x01
    7cfc:	0f 90       	pop	r0
    7cfe:	0f 90       	pop	r0
    7d00:	df 91       	pop	r29
    7d02:	cf 91       	pop	r28
    7d04:	08 95       	ret

00007d06 <_Z8char2bcdPc>:
    7d06:	cf 93       	push	r28
    7d08:	df 93       	push	r29
    7d0a:	00 d0       	rcall	.+0      	; 0x7d0c <_Z8char2bcdPc+0x6>
    7d0c:	1f 92       	push	r1
    7d0e:	cd b7       	in	r28, 0x3d	; 61
    7d10:	de b7       	in	r29, 0x3e	; 62
    7d12:	8a 83       	std	Y+2, r24	; 0x02
    7d14:	9b 83       	std	Y+3, r25	; 0x03
    7d16:	8a 81       	ldd	r24, Y+2	; 0x02
    7d18:	9b 81       	ldd	r25, Y+3	; 0x03
    7d1a:	01 96       	adiw	r24, 0x01	; 1
    7d1c:	fc 01       	movw	r30, r24
    7d1e:	20 81       	ld	r18, Z
    7d20:	8a 81       	ldd	r24, Y+2	; 0x02
    7d22:	9b 81       	ldd	r25, Y+3	; 0x03
    7d24:	fc 01       	movw	r30, r24
    7d26:	80 81       	ld	r24, Z
    7d28:	80 53       	subi	r24, 0x30	; 48
    7d2a:	82 95       	swap	r24
    7d2c:	80 7f       	andi	r24, 0xF0	; 240
    7d2e:	82 0f       	add	r24, r18
    7d30:	80 53       	subi	r24, 0x30	; 48
    7d32:	89 83       	std	Y+1, r24	; 0x01
    7d34:	89 81       	ldd	r24, Y+1	; 0x01
    7d36:	23 96       	adiw	r28, 0x03	; 3
    7d38:	cd bf       	out	0x3d, r28	; 61
    7d3a:	de bf       	out	0x3e, r29	; 62
    7d3c:	df 91       	pop	r29
    7d3e:	cf 91       	pop	r28
    7d40:	08 95       	ret

00007d42 <RTC_String2Epoch>:
    7d42:	cf 93       	push	r28
    7d44:	df 93       	push	r29
    7d46:	cd b7       	in	r28, 0x3d	; 61
    7d48:	de b7       	in	r29, 0x3e	; 62
    7d4a:	a3 97       	sbiw	r28, 0x23	; 35
    7d4c:	cd bf       	out	0x3d, r28	; 61
    7d4e:	de bf       	out	0x3e, r29	; 62
    7d50:	88 a3       	std	Y+32, r24	; 0x20
    7d52:	99 a3       	std	Y+33, r25	; 0x21
    7d54:	6a a3       	std	Y+34, r22	; 0x22
    7d56:	7b a3       	std	Y+35, r23	; 0x23
    7d58:	19 82       	std	Y+1, r1	; 0x01
    7d5a:	1a 82       	std	Y+2, r1	; 0x02
    7d5c:	1b 82       	std	Y+3, r1	; 0x03
    7d5e:	1c 82       	std	Y+4, r1	; 0x04
    7d60:	27 e0       	ldi	r18, 0x07	; 7
    7d62:	ce 01       	movw	r24, r28
    7d64:	0d 96       	adiw	r24, 0x0d	; 13
    7d66:	fc 01       	movw	r30, r24
    7d68:	32 2f       	mov	r19, r18
    7d6a:	11 92       	st	Z+, r1
    7d6c:	3a 95       	dec	r19
    7d6e:	e9 f7       	brne	.-6      	; 0x7d6a <RTC_String2Epoch+0x28>
    7d70:	2c e0       	ldi	r18, 0x0C	; 12
    7d72:	ce 01       	movw	r24, r28
    7d74:	44 96       	adiw	r24, 0x14	; 20
    7d76:	fc 01       	movw	r30, r24
    7d78:	32 2f       	mov	r19, r18
    7d7a:	11 92       	st	Z+, r1
    7d7c:	3a 95       	dec	r19
    7d7e:	e9 f7       	brne	.-6      	; 0x7d7a <RTC_String2Epoch+0x38>
    7d80:	84 e6       	ldi	r24, 0x64	; 100
    7d82:	90 e0       	ldi	r25, 0x00	; 0
    7d84:	8e 83       	std	Y+6, r24	; 0x06
    7d86:	9f 83       	std	Y+7, r25	; 0x07
    7d88:	8a a1       	ldd	r24, Y+34	; 0x22
    7d8a:	9b a1       	ldd	r25, Y+35	; 0x23
    7d8c:	89 2b       	or	r24, r25
    7d8e:	09 f4       	brne	.+2      	; 0x7d92 <RTC_String2Epoch+0x50>
    7d90:	86 c0       	rjmp	.+268    	; 0x7e9e <RTC_String2Epoch+0x15c>
    7d92:	8a a1       	ldd	r24, Y+34	; 0x22
    7d94:	9b a1       	ldd	r25, Y+35	; 0x23
    7d96:	0a 96       	adiw	r24, 0x0a	; 10
    7d98:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7d9c:	8d 87       	std	Y+13, r24	; 0x0d
    7d9e:	8a a1       	ldd	r24, Y+34	; 0x22
    7da0:	9b a1       	ldd	r25, Y+35	; 0x23
    7da2:	08 96       	adiw	r24, 0x08	; 8
    7da4:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7da8:	8e 87       	std	Y+14, r24	; 0x0e
    7daa:	8a a1       	ldd	r24, Y+34	; 0x22
    7dac:	9b a1       	ldd	r25, Y+35	; 0x23
    7dae:	06 96       	adiw	r24, 0x06	; 6
    7db0:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7db4:	8f 87       	std	Y+15, r24	; 0x0f
    7db6:	8a a1       	ldd	r24, Y+34	; 0x22
    7db8:	9b a1       	ldd	r25, Y+35	; 0x23
    7dba:	04 96       	adiw	r24, 0x04	; 4
    7dbc:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7dc0:	89 8b       	std	Y+17, r24	; 0x11
    7dc2:	8a a1       	ldd	r24, Y+34	; 0x22
    7dc4:	9b a1       	ldd	r25, Y+35	; 0x23
    7dc6:	02 96       	adiw	r24, 0x02	; 2
    7dc8:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7dcc:	8a 8b       	std	Y+18, r24	; 0x12
    7dce:	8a a1       	ldd	r24, Y+34	; 0x22
    7dd0:	9b a1       	ldd	r25, Y+35	; 0x23
    7dd2:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    7dd6:	8b 8b       	std	Y+19, r24	; 0x13
    7dd8:	8f 85       	ldd	r24, Y+15	; 0x0f
    7dda:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7dde:	88 87       	std	Y+8, r24	; 0x08
    7de0:	8b 89       	ldd	r24, Y+19	; 0x13
    7de2:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7de6:	88 2f       	mov	r24, r24
    7de8:	90 e0       	ldi	r25, 0x00	; 0
    7dea:	2e 81       	ldd	r18, Y+6	; 0x06
    7dec:	3f 81       	ldd	r19, Y+7	; 0x07
    7dee:	82 0f       	add	r24, r18
    7df0:	93 1f       	adc	r25, r19
    7df2:	8e 83       	std	Y+6, r24	; 0x06
    7df4:	9f 83       	std	Y+7, r25	; 0x07
    7df6:	8e 81       	ldd	r24, Y+6	; 0x06
    7df8:	9f 81       	ldd	r25, Y+7	; 0x07
    7dfa:	8a 8f       	std	Y+26, r24	; 0x1a
    7dfc:	9b 8f       	std	Y+27, r25	; 0x1b
    7dfe:	8e 81       	ldd	r24, Y+6	; 0x06
    7e00:	9f 81       	ldd	r25, Y+7	; 0x07
    7e02:	84 59       	subi	r24, 0x94	; 148
    7e04:	98 4f       	sbci	r25, 0xF8	; 248
    7e06:	8e 83       	std	Y+6, r24	; 0x06
    7e08:	9f 83       	std	Y+7, r25	; 0x07
    7e0a:	8a 89       	ldd	r24, Y+18	; 0x12
    7e0c:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e10:	89 87       	std	Y+9, r24	; 0x09
    7e12:	89 85       	ldd	r24, Y+9	; 0x09
    7e14:	81 50       	subi	r24, 0x01	; 1
    7e16:	89 8f       	std	Y+25, r24	; 0x19
    7e18:	89 89       	ldd	r24, Y+17	; 0x11
    7e1a:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e1e:	8a 87       	std	Y+10, r24	; 0x0a
    7e20:	8a 85       	ldd	r24, Y+10	; 0x0a
    7e22:	8f 8b       	std	Y+23, r24	; 0x17
    7e24:	1c 8e       	std	Y+28, r1	; 0x1c
    7e26:	1d 8e       	std	Y+29, r1	; 0x1d
    7e28:	81 e0       	ldi	r24, 0x01	; 1
    7e2a:	8d 83       	std	Y+5, r24	; 0x05
    7e2c:	9d 81       	ldd	r25, Y+5	; 0x05
    7e2e:	89 85       	ldd	r24, Y+9	; 0x09
    7e30:	98 17       	cp	r25, r24
    7e32:	88 f4       	brcc	.+34     	; 0x7e56 <RTC_String2Epoch+0x114>
    7e34:	8e 81       	ldd	r24, Y+6	; 0x06
    7e36:	9f 81       	ldd	r25, Y+7	; 0x07
    7e38:	6d 81       	ldd	r22, Y+5	; 0x05
    7e3a:	0e 94 72 02 	call	0x4e4	; 0x4e4 <month_length>
    7e3e:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7e40:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7e42:	88 2f       	mov	r24, r24
    7e44:	90 e0       	ldi	r25, 0x00	; 0
    7e46:	82 0f       	add	r24, r18
    7e48:	93 1f       	adc	r25, r19
    7e4a:	8c 8f       	std	Y+28, r24	; 0x1c
    7e4c:	9d 8f       	std	Y+29, r25	; 0x1d
    7e4e:	8d 81       	ldd	r24, Y+5	; 0x05
    7e50:	8f 5f       	subi	r24, 0xFF	; 255
    7e52:	8d 83       	std	Y+5, r24	; 0x05
    7e54:	eb cf       	rjmp	.-42     	; 0x7e2c <RTC_String2Epoch+0xea>
    7e56:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7e58:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7e5a:	8f 89       	ldd	r24, Y+23	; 0x17
    7e5c:	08 2e       	mov	r0, r24
    7e5e:	00 0c       	add	r0, r0
    7e60:	99 0b       	sbc	r25, r25
    7e62:	01 97       	sbiw	r24, 0x01	; 1
    7e64:	82 0f       	add	r24, r18
    7e66:	93 1f       	adc	r25, r19
    7e68:	8c 8f       	std	Y+28, r24	; 0x1c
    7e6a:	9d 8f       	std	Y+29, r25	; 0x1d
    7e6c:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e6e:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e72:	8b 87       	std	Y+11, r24	; 0x0b
    7e74:	8e 85       	ldd	r24, Y+14	; 0x0e
    7e76:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    7e7a:	8c 87       	std	Y+12, r24	; 0x0c
    7e7c:	88 85       	ldd	r24, Y+8	; 0x08
    7e7e:	8e 8b       	std	Y+22, r24	; 0x16
    7e80:	8c 85       	ldd	r24, Y+12	; 0x0c
    7e82:	8d 8b       	std	Y+21, r24	; 0x15
    7e84:	8b 85       	ldd	r24, Y+11	; 0x0b
    7e86:	8c 8b       	std	Y+20, r24	; 0x14
    7e88:	ce 01       	movw	r24, r28
    7e8a:	44 96       	adiw	r24, 0x14	; 20
    7e8c:	0e 94 77 3f 	call	0x7eee	; 0x7eee <_Z14epoch_from_ltmP2tm>
    7e90:	dc 01       	movw	r26, r24
    7e92:	cb 01       	movw	r24, r22
    7e94:	89 83       	std	Y+1, r24	; 0x01
    7e96:	9a 83       	std	Y+2, r25	; 0x02
    7e98:	ab 83       	std	Y+3, r26	; 0x03
    7e9a:	bc 83       	std	Y+4, r27	; 0x04
    7e9c:	0a c0       	rjmp	.+20     	; 0x7eb2 <RTC_String2Epoch+0x170>
    7e9e:	80 e0       	ldi	r24, 0x00	; 0
    7ea0:	90 e0       	ldi	r25, 0x00	; 0
    7ea2:	0e 94 53 40 	call	0x80a6	; 0x80a6 <ds3231_get_epoch>
    7ea6:	dc 01       	movw	r26, r24
    7ea8:	cb 01       	movw	r24, r22
    7eaa:	89 83       	std	Y+1, r24	; 0x01
    7eac:	9a 83       	std	Y+2, r25	; 0x02
    7eae:	ab 83       	std	Y+3, r26	; 0x03
    7eb0:	bc 83       	std	Y+4, r27	; 0x04
    7eb2:	88 a1       	ldd	r24, Y+32	; 0x20
    7eb4:	99 a1       	ldd	r25, Y+33	; 0x21
    7eb6:	89 2b       	or	r24, r25
    7eb8:	71 f0       	breq	.+28     	; 0x7ed6 <RTC_String2Epoch+0x194>
    7eba:	21 e0       	ldi	r18, 0x01	; 1
    7ebc:	89 81       	ldd	r24, Y+1	; 0x01
    7ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    7ec0:	ab 81       	ldd	r26, Y+3	; 0x03
    7ec2:	bc 81       	ldd	r27, Y+4	; 0x04
    7ec4:	89 2b       	or	r24, r25
    7ec6:	8a 2b       	or	r24, r26
    7ec8:	8b 2b       	or	r24, r27
    7eca:	09 f0       	breq	.+2      	; 0x7ece <RTC_String2Epoch+0x18c>
    7ecc:	20 e0       	ldi	r18, 0x00	; 0
    7ece:	88 a1       	ldd	r24, Y+32	; 0x20
    7ed0:	99 a1       	ldd	r25, Y+33	; 0x21
    7ed2:	fc 01       	movw	r30, r24
    7ed4:	20 83       	st	Z, r18
    7ed6:	89 81       	ldd	r24, Y+1	; 0x01
    7ed8:	9a 81       	ldd	r25, Y+2	; 0x02
    7eda:	ab 81       	ldd	r26, Y+3	; 0x03
    7edc:	bc 81       	ldd	r27, Y+4	; 0x04
    7ede:	bc 01       	movw	r22, r24
    7ee0:	cd 01       	movw	r24, r26
    7ee2:	a3 96       	adiw	r28, 0x23	; 35
    7ee4:	cd bf       	out	0x3d, r28	; 61
    7ee6:	de bf       	out	0x3e, r29	; 62
    7ee8:	df 91       	pop	r29
    7eea:	cf 91       	pop	r28
    7eec:	08 95       	ret

00007eee <_Z14epoch_from_ltmP2tm>:
    7eee:	ef 92       	push	r14
    7ef0:	ff 92       	push	r15
    7ef2:	0f 93       	push	r16
    7ef4:	1f 93       	push	r17
    7ef6:	cf 93       	push	r28
    7ef8:	df 93       	push	r29
    7efa:	cd b7       	in	r28, 0x3d	; 61
    7efc:	de b7       	in	r29, 0x3e	; 62
    7efe:	26 97       	sbiw	r28, 0x06	; 6
    7f00:	cd bf       	out	0x3d, r28	; 61
    7f02:	de bf       	out	0x3e, r29	; 62
    7f04:	8d 83       	std	Y+5, r24	; 0x05
    7f06:	9e 83       	std	Y+6, r25	; 0x06
    7f08:	8d 81       	ldd	r24, Y+5	; 0x05
    7f0a:	9e 81       	ldd	r25, Y+6	; 0x06
    7f0c:	fc 01       	movw	r30, r24
    7f0e:	80 81       	ld	r24, Z
    7f10:	28 2f       	mov	r18, r24
    7f12:	88 0f       	add	r24, r24
    7f14:	33 0b       	sbc	r19, r19
    7f16:	8d 81       	ldd	r24, Y+5	; 0x05
    7f18:	9e 81       	ldd	r25, Y+6	; 0x06
    7f1a:	fc 01       	movw	r30, r24
    7f1c:	81 81       	ldd	r24, Z+1	; 0x01
    7f1e:	48 2f       	mov	r20, r24
    7f20:	88 0f       	add	r24, r24
    7f22:	55 0b       	sbc	r21, r21
    7f24:	6c e3       	ldi	r22, 0x3C	; 60
    7f26:	64 9f       	mul	r22, r20
    7f28:	c0 01       	movw	r24, r0
    7f2a:	65 9f       	mul	r22, r21
    7f2c:	90 0d       	add	r25, r0
    7f2e:	11 24       	eor	r1, r1
    7f30:	82 0f       	add	r24, r18
    7f32:	93 1f       	adc	r25, r19
    7f34:	7c 01       	movw	r14, r24
    7f36:	99 0f       	add	r25, r25
    7f38:	00 0b       	sbc	r16, r16
    7f3a:	11 0b       	sbc	r17, r17
    7f3c:	8d 81       	ldd	r24, Y+5	; 0x05
    7f3e:	9e 81       	ldd	r25, Y+6	; 0x06
    7f40:	fc 01       	movw	r30, r24
    7f42:	82 81       	ldd	r24, Z+2	; 0x02
    7f44:	28 2f       	mov	r18, r24
    7f46:	88 0f       	add	r24, r24
    7f48:	33 0b       	sbc	r19, r19
    7f4a:	44 0b       	sbc	r20, r20
    7f4c:	55 0b       	sbc	r21, r21
    7f4e:	80 e1       	ldi	r24, 0x10	; 16
    7f50:	9e e0       	ldi	r25, 0x0E	; 14
    7f52:	dc 01       	movw	r26, r24
    7f54:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    7f58:	dc 01       	movw	r26, r24
    7f5a:	cb 01       	movw	r24, r22
    7f5c:	e8 0e       	add	r14, r24
    7f5e:	f9 1e       	adc	r15, r25
    7f60:	0a 1f       	adc	r16, r26
    7f62:	1b 1f       	adc	r17, r27
    7f64:	8d 81       	ldd	r24, Y+5	; 0x05
    7f66:	9e 81       	ldd	r25, Y+6	; 0x06
    7f68:	fc 01       	movw	r30, r24
    7f6a:	80 85       	ldd	r24, Z+8	; 0x08
    7f6c:	91 85       	ldd	r25, Z+9	; 0x09
    7f6e:	09 2e       	mov	r0, r25
    7f70:	00 0c       	add	r0, r0
    7f72:	aa 0b       	sbc	r26, r26
    7f74:	bb 0b       	sbc	r27, r27
    7f76:	9c 01       	movw	r18, r24
    7f78:	ad 01       	movw	r20, r26
    7f7a:	60 e8       	ldi	r22, 0x80	; 128
    7f7c:	71 e5       	ldi	r23, 0x51	; 81
    7f7e:	81 e0       	ldi	r24, 0x01	; 1
    7f80:	90 e0       	ldi	r25, 0x00	; 0
    7f82:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    7f86:	dc 01       	movw	r26, r24
    7f88:	cb 01       	movw	r24, r22
    7f8a:	e8 0e       	add	r14, r24
    7f8c:	f9 1e       	adc	r15, r25
    7f8e:	0a 1f       	adc	r16, r26
    7f90:	1b 1f       	adc	r17, r27
    7f92:	8d 81       	ldd	r24, Y+5	; 0x05
    7f94:	9e 81       	ldd	r25, Y+6	; 0x06
    7f96:	fc 01       	movw	r30, r24
    7f98:	86 81       	ldd	r24, Z+6	; 0x06
    7f9a:	97 81       	ldd	r25, Z+7	; 0x07
    7f9c:	86 54       	subi	r24, 0x46	; 70
    7f9e:	91 09       	sbc	r25, r1
    7fa0:	09 2e       	mov	r0, r25
    7fa2:	00 0c       	add	r0, r0
    7fa4:	aa 0b       	sbc	r26, r26
    7fa6:	bb 0b       	sbc	r27, r27
    7fa8:	9c 01       	movw	r18, r24
    7faa:	ad 01       	movw	r20, r26
    7fac:	60 e8       	ldi	r22, 0x80	; 128
    7fae:	73 e3       	ldi	r23, 0x33	; 51
    7fb0:	81 ee       	ldi	r24, 0xE1	; 225
    7fb2:	91 e0       	ldi	r25, 0x01	; 1
    7fb4:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    7fb8:	dc 01       	movw	r26, r24
    7fba:	cb 01       	movw	r24, r22
    7fbc:	e8 0e       	add	r14, r24
    7fbe:	f9 1e       	adc	r15, r25
    7fc0:	0a 1f       	adc	r16, r26
    7fc2:	1b 1f       	adc	r17, r27
    7fc4:	8d 81       	ldd	r24, Y+5	; 0x05
    7fc6:	9e 81       	ldd	r25, Y+6	; 0x06
    7fc8:	fc 01       	movw	r30, r24
    7fca:	86 81       	ldd	r24, Z+6	; 0x06
    7fcc:	97 81       	ldd	r25, Z+7	; 0x07
    7fce:	85 54       	subi	r24, 0x45	; 69
    7fd0:	91 09       	sbc	r25, r1
    7fd2:	99 23       	and	r25, r25
    7fd4:	0c f4       	brge	.+2      	; 0x7fd8 <_Z14epoch_from_ltmP2tm+0xea>
    7fd6:	03 96       	adiw	r24, 0x03	; 3
    7fd8:	95 95       	asr	r25
    7fda:	87 95       	ror	r24
    7fdc:	95 95       	asr	r25
    7fde:	87 95       	ror	r24
    7fe0:	09 2e       	mov	r0, r25
    7fe2:	00 0c       	add	r0, r0
    7fe4:	aa 0b       	sbc	r26, r26
    7fe6:	bb 0b       	sbc	r27, r27
    7fe8:	9c 01       	movw	r18, r24
    7fea:	ad 01       	movw	r20, r26
    7fec:	60 e8       	ldi	r22, 0x80	; 128
    7fee:	71 e5       	ldi	r23, 0x51	; 81
    7ff0:	81 e0       	ldi	r24, 0x01	; 1
    7ff2:	90 e0       	ldi	r25, 0x00	; 0
    7ff4:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    7ff8:	dc 01       	movw	r26, r24
    7ffa:	cb 01       	movw	r24, r22
    7ffc:	e8 0e       	add	r14, r24
    7ffe:	f9 1e       	adc	r15, r25
    8000:	0a 1f       	adc	r16, r26
    8002:	1b 1f       	adc	r17, r27
    8004:	8d 81       	ldd	r24, Y+5	; 0x05
    8006:	9e 81       	ldd	r25, Y+6	; 0x06
    8008:	fc 01       	movw	r30, r24
    800a:	86 81       	ldd	r24, Z+6	; 0x06
    800c:	97 81       	ldd	r25, Z+7	; 0x07
    800e:	01 97       	sbiw	r24, 0x01	; 1
    8010:	24 e6       	ldi	r18, 0x64	; 100
    8012:	30 e0       	ldi	r19, 0x00	; 0
    8014:	b9 01       	movw	r22, r18
    8016:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
    801a:	cb 01       	movw	r24, r22
    801c:	09 2e       	mov	r0, r25
    801e:	00 0c       	add	r0, r0
    8020:	aa 0b       	sbc	r26, r26
    8022:	bb 0b       	sbc	r27, r27
    8024:	9c 01       	movw	r18, r24
    8026:	ad 01       	movw	r20, r26
    8028:	60 e8       	ldi	r22, 0x80	; 128
    802a:	7e ea       	ldi	r23, 0xAE	; 174
    802c:	8e ef       	ldi	r24, 0xFE	; 254
    802e:	9f ef       	ldi	r25, 0xFF	; 255
    8030:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    8034:	dc 01       	movw	r26, r24
    8036:	cb 01       	movw	r24, r22
    8038:	e8 0e       	add	r14, r24
    803a:	f9 1e       	adc	r15, r25
    803c:	0a 1f       	adc	r16, r26
    803e:	1b 1f       	adc	r17, r27
    8040:	8d 81       	ldd	r24, Y+5	; 0x05
    8042:	9e 81       	ldd	r25, Y+6	; 0x06
    8044:	fc 01       	movw	r30, r24
    8046:	86 81       	ldd	r24, Z+6	; 0x06
    8048:	97 81       	ldd	r25, Z+7	; 0x07
    804a:	85 5d       	subi	r24, 0xD5	; 213
    804c:	9e 4f       	sbci	r25, 0xFE	; 254
    804e:	20 e9       	ldi	r18, 0x90	; 144
    8050:	31 e0       	ldi	r19, 0x01	; 1
    8052:	b9 01       	movw	r22, r18
    8054:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
    8058:	cb 01       	movw	r24, r22
    805a:	09 2e       	mov	r0, r25
    805c:	00 0c       	add	r0, r0
    805e:	aa 0b       	sbc	r26, r26
    8060:	bb 0b       	sbc	r27, r27
    8062:	9c 01       	movw	r18, r24
    8064:	ad 01       	movw	r20, r26
    8066:	60 e8       	ldi	r22, 0x80	; 128
    8068:	71 e5       	ldi	r23, 0x51	; 81
    806a:	81 e0       	ldi	r24, 0x01	; 1
    806c:	90 e0       	ldi	r25, 0x00	; 0
    806e:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    8072:	dc 01       	movw	r26, r24
    8074:	cb 01       	movw	r24, r22
    8076:	8e 0d       	add	r24, r14
    8078:	9f 1d       	adc	r25, r15
    807a:	a0 1f       	adc	r26, r16
    807c:	b1 1f       	adc	r27, r17
    807e:	89 83       	std	Y+1, r24	; 0x01
    8080:	9a 83       	std	Y+2, r25	; 0x02
    8082:	ab 83       	std	Y+3, r26	; 0x03
    8084:	bc 83       	std	Y+4, r27	; 0x04
    8086:	89 81       	ldd	r24, Y+1	; 0x01
    8088:	9a 81       	ldd	r25, Y+2	; 0x02
    808a:	ab 81       	ldd	r26, Y+3	; 0x03
    808c:	bc 81       	ldd	r27, Y+4	; 0x04
    808e:	bc 01       	movw	r22, r24
    8090:	cd 01       	movw	r24, r26
    8092:	26 96       	adiw	r28, 0x06	; 6
    8094:	cd bf       	out	0x3d, r28	; 61
    8096:	de bf       	out	0x3e, r29	; 62
    8098:	df 91       	pop	r29
    809a:	cf 91       	pop	r28
    809c:	1f 91       	pop	r17
    809e:	0f 91       	pop	r16
    80a0:	ff 90       	pop	r15
    80a2:	ef 90       	pop	r14
    80a4:	08 95       	ret

000080a6 <ds3231_get_epoch>:
    80a6:	ef 92       	push	r14
    80a8:	ff 92       	push	r15
    80aa:	0f 93       	push	r16
    80ac:	1f 93       	push	r17
    80ae:	cf 93       	push	r28
    80b0:	df 93       	push	r29
    80b2:	cd b7       	in	r28, 0x3d	; 61
    80b4:	de b7       	in	r29, 0x3e	; 62
    80b6:	a5 97       	sbiw	r28, 0x25	; 37
    80b8:	cd bf       	out	0x3d, r28	; 61
    80ba:	de bf       	out	0x3e, r29	; 62
    80bc:	8c a3       	std	Y+36, r24	; 0x24
    80be:	9d a3       	std	Y+37, r25	; 0x25
    80c0:	8a e0       	ldi	r24, 0x0A	; 10
    80c2:	89 83       	std	Y+1, r24	; 0x01
    80c4:	1a 82       	std	Y+2, r1	; 0x02
    80c6:	1b 82       	std	Y+3, r1	; 0x03
    80c8:	1c 82       	std	Y+4, r1	; 0x04
    80ca:	1d 82       	std	Y+5, r1	; 0x05
    80cc:	27 e0       	ldi	r18, 0x07	; 7
    80ce:	ce 01       	movw	r24, r28
    80d0:	41 96       	adiw	r24, 0x11	; 17
    80d2:	fc 01       	movw	r30, r24
    80d4:	32 2f       	mov	r19, r18
    80d6:	11 92       	st	Z+, r1
    80d8:	3a 95       	dec	r19
    80da:	e9 f7       	brne	.-6      	; 0x80d6 <ds3231_get_epoch+0x30>
    80dc:	89 81       	ldd	r24, Y+1	; 0x01
    80de:	9f ef       	ldi	r25, 0xFF	; 255
    80e0:	98 0f       	add	r25, r24
    80e2:	99 83       	std	Y+1, r25	; 0x01
    80e4:	88 23       	and	r24, r24
    80e6:	99 f0       	breq	.+38     	; 0x810e <ds3231_get_epoch+0x68>
    80e8:	ce 01       	movw	r24, r28
    80ea:	41 96       	adiw	r24, 0x11	; 17
    80ec:	27 e0       	ldi	r18, 0x07	; 7
    80ee:	ac 01       	movw	r20, r24
    80f0:	60 e0       	ldi	r22, 0x00	; 0
    80f2:	80 ed       	ldi	r24, 0xD0	; 208
    80f4:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <I2C_0_GetData>
    80f8:	98 2f       	mov	r25, r24
    80fa:	81 e0       	ldi	r24, 0x01	; 1
    80fc:	97 30       	cpi	r25, 0x07	; 7
    80fe:	09 f4       	brne	.+2      	; 0x8102 <ds3231_get_epoch+0x5c>
    8100:	80 e0       	ldi	r24, 0x00	; 0
    8102:	8e 83       	std	Y+6, r24	; 0x06
    8104:	8e 81       	ldd	r24, Y+6	; 0x06
    8106:	88 23       	and	r24, r24
    8108:	11 f0       	breq	.+4      	; 0x810e <ds3231_get_epoch+0x68>
    810a:	81 e0       	ldi	r24, 0x01	; 1
    810c:	01 c0       	rjmp	.+2      	; 0x8110 <ds3231_get_epoch+0x6a>
    810e:	80 e0       	ldi	r24, 0x00	; 0
    8110:	88 23       	and	r24, r24
    8112:	09 f0       	breq	.+2      	; 0x8116 <ds3231_get_epoch+0x70>
    8114:	e3 cf       	rjmp	.-58     	; 0x80dc <ds3231_get_epoch+0x36>
    8116:	9e 81       	ldd	r25, Y+6	; 0x06
    8118:	81 e0       	ldi	r24, 0x01	; 1
    811a:	89 27       	eor	r24, r25
    811c:	88 23       	and	r24, r24
    811e:	09 f4       	brne	.+2      	; 0x8122 <ds3231_get_epoch+0x7c>
    8120:	7e c1       	rjmp	.+764    	; 0x841e <ds3231_get_epoch+0x378>
    8122:	2c e0       	ldi	r18, 0x0C	; 12
    8124:	ce 01       	movw	r24, r28
    8126:	48 96       	adiw	r24, 0x18	; 24
    8128:	fc 01       	movw	r30, r24
    812a:	32 2f       	mov	r19, r18
    812c:	11 92       	st	Z+, r1
    812e:	3a 95       	dec	r19
    8130:	e9 f7       	brne	.-6      	; 0x812c <ds3231_get_epoch+0x86>
    8132:	84 e6       	ldi	r24, 0x64	; 100
    8134:	90 e0       	ldi	r25, 0x00	; 0
    8136:	89 87       	std	Y+9, r24	; 0x09
    8138:	9a 87       	std	Y+10, r25	; 0x0a
    813a:	8f 89       	ldd	r24, Y+23	; 0x17
    813c:	88 2f       	mov	r24, r24
    813e:	90 e0       	ldi	r25, 0x00	; 0
    8140:	8f 70       	andi	r24, 0x0F	; 15
    8142:	99 27       	eor	r25, r25
    8144:	29 85       	ldd	r18, Y+9	; 0x09
    8146:	3a 85       	ldd	r19, Y+10	; 0x0a
    8148:	82 0f       	add	r24, r18
    814a:	93 1f       	adc	r25, r19
    814c:	89 87       	std	Y+9, r24	; 0x09
    814e:	9a 87       	std	Y+10, r25	; 0x0a
    8150:	8f 89       	ldd	r24, Y+23	; 0x17
    8152:	82 95       	swap	r24
    8154:	8f 70       	andi	r24, 0x0F	; 15
    8156:	88 2f       	mov	r24, r24
    8158:	90 e0       	ldi	r25, 0x00	; 0
    815a:	88 0f       	add	r24, r24
    815c:	99 1f       	adc	r25, r25
    815e:	9c 01       	movw	r18, r24
    8160:	22 0f       	add	r18, r18
    8162:	33 1f       	adc	r19, r19
    8164:	22 0f       	add	r18, r18
    8166:	33 1f       	adc	r19, r19
    8168:	82 0f       	add	r24, r18
    816a:	93 1f       	adc	r25, r19
    816c:	29 85       	ldd	r18, Y+9	; 0x09
    816e:	3a 85       	ldd	r19, Y+10	; 0x0a
    8170:	82 0f       	add	r24, r18
    8172:	93 1f       	adc	r25, r19
    8174:	89 87       	std	Y+9, r24	; 0x09
    8176:	9a 87       	std	Y+10, r25	; 0x0a
    8178:	89 85       	ldd	r24, Y+9	; 0x09
    817a:	9a 85       	ldd	r25, Y+10	; 0x0a
    817c:	8e 8f       	std	Y+30, r24	; 0x1e
    817e:	9f 8f       	std	Y+31, r25	; 0x1f
    8180:	89 85       	ldd	r24, Y+9	; 0x09
    8182:	9a 85       	ldd	r25, Y+10	; 0x0a
    8184:	84 59       	subi	r24, 0x94	; 148
    8186:	98 4f       	sbci	r25, 0xF8	; 248
    8188:	89 87       	std	Y+9, r24	; 0x09
    818a:	9a 87       	std	Y+10, r25	; 0x0a
    818c:	8e 89       	ldd	r24, Y+22	; 0x16
    818e:	8f 70       	andi	r24, 0x0F	; 15
    8190:	8b 87       	std	Y+11, r24	; 0x0b
    8192:	8e 89       	ldd	r24, Y+22	; 0x16
    8194:	82 95       	swap	r24
    8196:	8f 70       	andi	r24, 0x0F	; 15
    8198:	88 0f       	add	r24, r24
    819a:	98 2f       	mov	r25, r24
    819c:	99 0f       	add	r25, r25
    819e:	99 0f       	add	r25, r25
    81a0:	89 0f       	add	r24, r25
    81a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    81a4:	89 0f       	add	r24, r25
    81a6:	8b 87       	std	Y+11, r24	; 0x0b
    81a8:	8b 85       	ldd	r24, Y+11	; 0x0b
    81aa:	81 50       	subi	r24, 0x01	; 1
    81ac:	8d 8f       	std	Y+29, r24	; 0x1d
    81ae:	8d 89       	ldd	r24, Y+21	; 0x15
    81b0:	8f 70       	andi	r24, 0x0F	; 15
    81b2:	8c 87       	std	Y+12, r24	; 0x0c
    81b4:	8d 89       	ldd	r24, Y+21	; 0x15
    81b6:	82 95       	swap	r24
    81b8:	8f 70       	andi	r24, 0x0F	; 15
    81ba:	88 0f       	add	r24, r24
    81bc:	98 2f       	mov	r25, r24
    81be:	99 0f       	add	r25, r25
    81c0:	99 0f       	add	r25, r25
    81c2:	89 0f       	add	r24, r25
    81c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    81c6:	89 0f       	add	r24, r25
    81c8:	8c 87       	std	Y+12, r24	; 0x0c
    81ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    81cc:	8b 8f       	std	Y+27, r24	; 0x1b
    81ce:	18 a2       	std	Y+32, r1	; 0x20
    81d0:	19 a2       	std	Y+33, r1	; 0x21
    81d2:	81 e0       	ldi	r24, 0x01	; 1
    81d4:	88 87       	std	Y+8, r24	; 0x08
    81d6:	98 85       	ldd	r25, Y+8	; 0x08
    81d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    81da:	98 17       	cp	r25, r24
    81dc:	88 f4       	brcc	.+34     	; 0x8200 <ds3231_get_epoch+0x15a>
    81de:	89 85       	ldd	r24, Y+9	; 0x09
    81e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    81e2:	68 85       	ldd	r22, Y+8	; 0x08
    81e4:	0e 94 72 02 	call	0x4e4	; 0x4e4 <month_length>
    81e8:	28 a1       	ldd	r18, Y+32	; 0x20
    81ea:	39 a1       	ldd	r19, Y+33	; 0x21
    81ec:	88 2f       	mov	r24, r24
    81ee:	90 e0       	ldi	r25, 0x00	; 0
    81f0:	82 0f       	add	r24, r18
    81f2:	93 1f       	adc	r25, r19
    81f4:	88 a3       	std	Y+32, r24	; 0x20
    81f6:	99 a3       	std	Y+33, r25	; 0x21
    81f8:	88 85       	ldd	r24, Y+8	; 0x08
    81fa:	8f 5f       	subi	r24, 0xFF	; 255
    81fc:	88 87       	std	Y+8, r24	; 0x08
    81fe:	eb cf       	rjmp	.-42     	; 0x81d6 <ds3231_get_epoch+0x130>
    8200:	28 a1       	ldd	r18, Y+32	; 0x20
    8202:	39 a1       	ldd	r19, Y+33	; 0x21
    8204:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8206:	08 2e       	mov	r0, r24
    8208:	00 0c       	add	r0, r0
    820a:	99 0b       	sbc	r25, r25
    820c:	01 97       	sbiw	r24, 0x01	; 1
    820e:	82 0f       	add	r24, r18
    8210:	93 1f       	adc	r25, r19
    8212:	88 a3       	std	Y+32, r24	; 0x20
    8214:	99 a3       	std	Y+33, r25	; 0x21
    8216:	89 89       	ldd	r24, Y+17	; 0x11
    8218:	82 95       	swap	r24
    821a:	8f 70       	andi	r24, 0x0F	; 15
    821c:	88 0f       	add	r24, r24
    821e:	98 2f       	mov	r25, r24
    8220:	99 0f       	add	r25, r25
    8222:	99 0f       	add	r25, r25
    8224:	89 0f       	add	r24, r25
    8226:	8d 87       	std	Y+13, r24	; 0x0d
    8228:	89 89       	ldd	r24, Y+17	; 0x11
    822a:	8f 70       	andi	r24, 0x0F	; 15
    822c:	9d 85       	ldd	r25, Y+13	; 0x0d
    822e:	89 0f       	add	r24, r25
    8230:	8d 87       	std	Y+13, r24	; 0x0d
    8232:	8a 89       	ldd	r24, Y+18	; 0x12
    8234:	82 95       	swap	r24
    8236:	8f 70       	andi	r24, 0x0F	; 15
    8238:	88 0f       	add	r24, r24
    823a:	98 2f       	mov	r25, r24
    823c:	99 0f       	add	r25, r25
    823e:	99 0f       	add	r25, r25
    8240:	89 0f       	add	r24, r25
    8242:	8e 87       	std	Y+14, r24	; 0x0e
    8244:	8a 89       	ldd	r24, Y+18	; 0x12
    8246:	8f 70       	andi	r24, 0x0F	; 15
    8248:	9e 85       	ldd	r25, Y+14	; 0x0e
    824a:	89 0f       	add	r24, r25
    824c:	8e 87       	std	Y+14, r24	; 0x0e
    824e:	8b 89       	ldd	r24, Y+19	; 0x13
    8250:	88 2f       	mov	r24, r24
    8252:	90 e0       	ldi	r25, 0x00	; 0
    8254:	80 72       	andi	r24, 0x20	; 32
    8256:	99 27       	eor	r25, r25
    8258:	21 e0       	ldi	r18, 0x01	; 1
    825a:	89 2b       	or	r24, r25
    825c:	09 f4       	brne	.+2      	; 0x8260 <ds3231_get_epoch+0x1ba>
    825e:	20 e0       	ldi	r18, 0x00	; 0
    8260:	2f 87       	std	Y+15, r18	; 0x0f
    8262:	8b 89       	ldd	r24, Y+19	; 0x13
    8264:	88 2f       	mov	r24, r24
    8266:	90 e0       	ldi	r25, 0x00	; 0
    8268:	95 95       	asr	r25
    826a:	87 95       	ror	r24
    826c:	95 95       	asr	r25
    826e:	87 95       	ror	r24
    8270:	95 95       	asr	r25
    8272:	87 95       	ror	r24
    8274:	95 95       	asr	r25
    8276:	87 95       	ror	r24
    8278:	81 70       	andi	r24, 0x01	; 1
    827a:	88 0f       	add	r24, r24
    827c:	98 2f       	mov	r25, r24
    827e:	99 0f       	add	r25, r25
    8280:	99 0f       	add	r25, r25
    8282:	89 0f       	add	r24, r25
    8284:	8f 83       	std	Y+7, r24	; 0x07
    8286:	8b 89       	ldd	r24, Y+19	; 0x13
    8288:	8f 70       	andi	r24, 0x0F	; 15
    828a:	9f 81       	ldd	r25, Y+7	; 0x07
    828c:	89 0f       	add	r24, r25
    828e:	8f 83       	std	Y+7, r24	; 0x07
    8290:	8b 89       	ldd	r24, Y+19	; 0x13
    8292:	88 2f       	mov	r24, r24
    8294:	90 e0       	ldi	r25, 0x00	; 0
    8296:	80 74       	andi	r24, 0x40	; 64
    8298:	99 27       	eor	r25, r25
    829a:	21 e0       	ldi	r18, 0x01	; 1
    829c:	89 2b       	or	r24, r25
    829e:	09 f4       	brne	.+2      	; 0x82a2 <ds3231_get_epoch+0x1fc>
    82a0:	20 e0       	ldi	r18, 0x00	; 0
    82a2:	28 8b       	std	Y+16, r18	; 0x10
    82a4:	88 89       	ldd	r24, Y+16	; 0x10
    82a6:	88 23       	and	r24, r24
    82a8:	39 f0       	breq	.+14     	; 0x82b8 <ds3231_get_epoch+0x212>
    82aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    82ac:	88 23       	and	r24, r24
    82ae:	51 f0       	breq	.+20     	; 0x82c4 <ds3231_get_epoch+0x21e>
    82b0:	8f 81       	ldd	r24, Y+7	; 0x07
    82b2:	84 5f       	subi	r24, 0xF4	; 244
    82b4:	8f 83       	std	Y+7, r24	; 0x07
    82b6:	06 c0       	rjmp	.+12     	; 0x82c4 <ds3231_get_epoch+0x21e>
    82b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    82ba:	88 23       	and	r24, r24
    82bc:	19 f0       	breq	.+6      	; 0x82c4 <ds3231_get_epoch+0x21e>
    82be:	8f 81       	ldd	r24, Y+7	; 0x07
    82c0:	8c 5e       	subi	r24, 0xEC	; 236
    82c2:	8f 83       	std	Y+7, r24	; 0x07
    82c4:	8f 81       	ldd	r24, Y+7	; 0x07
    82c6:	8a 8f       	std	Y+26, r24	; 0x1a
    82c8:	8e 85       	ldd	r24, Y+14	; 0x0e
    82ca:	89 8f       	std	Y+25, r24	; 0x19
    82cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    82ce:	88 8f       	std	Y+24, r24	; 0x18
    82d0:	88 8d       	ldd	r24, Y+24	; 0x18
    82d2:	28 2f       	mov	r18, r24
    82d4:	88 0f       	add	r24, r24
    82d6:	33 0b       	sbc	r19, r19
    82d8:	89 8d       	ldd	r24, Y+25	; 0x19
    82da:	48 2f       	mov	r20, r24
    82dc:	88 0f       	add	r24, r24
    82de:	55 0b       	sbc	r21, r21
    82e0:	6c e3       	ldi	r22, 0x3C	; 60
    82e2:	64 9f       	mul	r22, r20
    82e4:	c0 01       	movw	r24, r0
    82e6:	65 9f       	mul	r22, r21
    82e8:	90 0d       	add	r25, r0
    82ea:	11 24       	eor	r1, r1
    82ec:	82 0f       	add	r24, r18
    82ee:	93 1f       	adc	r25, r19
    82f0:	7c 01       	movw	r14, r24
    82f2:	99 0f       	add	r25, r25
    82f4:	00 0b       	sbc	r16, r16
    82f6:	11 0b       	sbc	r17, r17
    82f8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    82fa:	28 2f       	mov	r18, r24
    82fc:	88 0f       	add	r24, r24
    82fe:	33 0b       	sbc	r19, r19
    8300:	44 0b       	sbc	r20, r20
    8302:	55 0b       	sbc	r21, r21
    8304:	80 e1       	ldi	r24, 0x10	; 16
    8306:	9e e0       	ldi	r25, 0x0E	; 14
    8308:	dc 01       	movw	r26, r24
    830a:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    830e:	dc 01       	movw	r26, r24
    8310:	cb 01       	movw	r24, r22
    8312:	e8 0e       	add	r14, r24
    8314:	f9 1e       	adc	r15, r25
    8316:	0a 1f       	adc	r16, r26
    8318:	1b 1f       	adc	r17, r27
    831a:	88 a1       	ldd	r24, Y+32	; 0x20
    831c:	99 a1       	ldd	r25, Y+33	; 0x21
    831e:	09 2e       	mov	r0, r25
    8320:	00 0c       	add	r0, r0
    8322:	aa 0b       	sbc	r26, r26
    8324:	bb 0b       	sbc	r27, r27
    8326:	9c 01       	movw	r18, r24
    8328:	ad 01       	movw	r20, r26
    832a:	60 e8       	ldi	r22, 0x80	; 128
    832c:	71 e5       	ldi	r23, 0x51	; 81
    832e:	81 e0       	ldi	r24, 0x01	; 1
    8330:	90 e0       	ldi	r25, 0x00	; 0
    8332:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    8336:	dc 01       	movw	r26, r24
    8338:	cb 01       	movw	r24, r22
    833a:	e8 0e       	add	r14, r24
    833c:	f9 1e       	adc	r15, r25
    833e:	0a 1f       	adc	r16, r26
    8340:	1b 1f       	adc	r17, r27
    8342:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8344:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8346:	86 54       	subi	r24, 0x46	; 70
    8348:	91 09       	sbc	r25, r1
    834a:	09 2e       	mov	r0, r25
    834c:	00 0c       	add	r0, r0
    834e:	aa 0b       	sbc	r26, r26
    8350:	bb 0b       	sbc	r27, r27
    8352:	9c 01       	movw	r18, r24
    8354:	ad 01       	movw	r20, r26
    8356:	60 e8       	ldi	r22, 0x80	; 128
    8358:	73 e3       	ldi	r23, 0x33	; 51
    835a:	81 ee       	ldi	r24, 0xE1	; 225
    835c:	91 e0       	ldi	r25, 0x01	; 1
    835e:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    8362:	dc 01       	movw	r26, r24
    8364:	cb 01       	movw	r24, r22
    8366:	e8 0e       	add	r14, r24
    8368:	f9 1e       	adc	r15, r25
    836a:	0a 1f       	adc	r16, r26
    836c:	1b 1f       	adc	r17, r27
    836e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    8370:	9f 8d       	ldd	r25, Y+31	; 0x1f
    8372:	85 54       	subi	r24, 0x45	; 69
    8374:	91 09       	sbc	r25, r1
    8376:	99 23       	and	r25, r25
    8378:	0c f4       	brge	.+2      	; 0x837c <ds3231_get_epoch+0x2d6>
    837a:	03 96       	adiw	r24, 0x03	; 3
    837c:	95 95       	asr	r25
    837e:	87 95       	ror	r24
    8380:	95 95       	asr	r25
    8382:	87 95       	ror	r24
    8384:	09 2e       	mov	r0, r25
    8386:	00 0c       	add	r0, r0
    8388:	aa 0b       	sbc	r26, r26
    838a:	bb 0b       	sbc	r27, r27
    838c:	9c 01       	movw	r18, r24
    838e:	ad 01       	movw	r20, r26
    8390:	60 e8       	ldi	r22, 0x80	; 128
    8392:	71 e5       	ldi	r23, 0x51	; 81
    8394:	81 e0       	ldi	r24, 0x01	; 1
    8396:	90 e0       	ldi	r25, 0x00	; 0
    8398:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    839c:	dc 01       	movw	r26, r24
    839e:	cb 01       	movw	r24, r22
    83a0:	e8 0e       	add	r14, r24
    83a2:	f9 1e       	adc	r15, r25
    83a4:	0a 1f       	adc	r16, r26
    83a6:	1b 1f       	adc	r17, r27
    83a8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    83aa:	9f 8d       	ldd	r25, Y+31	; 0x1f
    83ac:	01 97       	sbiw	r24, 0x01	; 1
    83ae:	24 e6       	ldi	r18, 0x64	; 100
    83b0:	30 e0       	ldi	r19, 0x00	; 0
    83b2:	b9 01       	movw	r22, r18
    83b4:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
    83b8:	cb 01       	movw	r24, r22
    83ba:	09 2e       	mov	r0, r25
    83bc:	00 0c       	add	r0, r0
    83be:	aa 0b       	sbc	r26, r26
    83c0:	bb 0b       	sbc	r27, r27
    83c2:	9c 01       	movw	r18, r24
    83c4:	ad 01       	movw	r20, r26
    83c6:	60 e8       	ldi	r22, 0x80	; 128
    83c8:	7e ea       	ldi	r23, 0xAE	; 174
    83ca:	8e ef       	ldi	r24, 0xFE	; 254
    83cc:	9f ef       	ldi	r25, 0xFF	; 255
    83ce:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    83d2:	dc 01       	movw	r26, r24
    83d4:	cb 01       	movw	r24, r22
    83d6:	e8 0e       	add	r14, r24
    83d8:	f9 1e       	adc	r15, r25
    83da:	0a 1f       	adc	r16, r26
    83dc:	1b 1f       	adc	r17, r27
    83de:	8e 8d       	ldd	r24, Y+30	; 0x1e
    83e0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    83e2:	85 5d       	subi	r24, 0xD5	; 213
    83e4:	9e 4f       	sbci	r25, 0xFE	; 254
    83e6:	20 e9       	ldi	r18, 0x90	; 144
    83e8:	31 e0       	ldi	r19, 0x01	; 1
    83ea:	b9 01       	movw	r22, r18
    83ec:	0e 94 d8 79 	call	0xf3b0	; 0xf3b0 <__divmodhi4>
    83f0:	cb 01       	movw	r24, r22
    83f2:	09 2e       	mov	r0, r25
    83f4:	00 0c       	add	r0, r0
    83f6:	aa 0b       	sbc	r26, r26
    83f8:	bb 0b       	sbc	r27, r27
    83fa:	9c 01       	movw	r18, r24
    83fc:	ad 01       	movw	r20, r26
    83fe:	60 e8       	ldi	r22, 0x80	; 128
    8400:	71 e5       	ldi	r23, 0x51	; 81
    8402:	81 e0       	ldi	r24, 0x01	; 1
    8404:	90 e0       	ldi	r25, 0x00	; 0
    8406:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    840a:	dc 01       	movw	r26, r24
    840c:	cb 01       	movw	r24, r22
    840e:	8e 0d       	add	r24, r14
    8410:	9f 1d       	adc	r25, r15
    8412:	a0 1f       	adc	r26, r16
    8414:	b1 1f       	adc	r27, r17
    8416:	8a 83       	std	Y+2, r24	; 0x02
    8418:	9b 83       	std	Y+3, r25	; 0x03
    841a:	ac 83       	std	Y+4, r26	; 0x04
    841c:	bd 83       	std	Y+5, r27	; 0x05
    841e:	8c a1       	ldd	r24, Y+36	; 0x24
    8420:	9d a1       	ldd	r25, Y+37	; 0x25
    8422:	89 2b       	or	r24, r25
    8424:	51 f0       	breq	.+20     	; 0x843a <ds3231_get_epoch+0x394>
    8426:	8e 81       	ldd	r24, Y+6	; 0x06
    8428:	88 23       	and	r24, r24
    842a:	11 f0       	breq	.+4      	; 0x8430 <ds3231_get_epoch+0x38a>
    842c:	2c ef       	ldi	r18, 0xFC	; 252
    842e:	01 c0       	rjmp	.+2      	; 0x8432 <ds3231_get_epoch+0x38c>
    8430:	20 e0       	ldi	r18, 0x00	; 0
    8432:	8c a1       	ldd	r24, Y+36	; 0x24
    8434:	9d a1       	ldd	r25, Y+37	; 0x25
    8436:	fc 01       	movw	r30, r24
    8438:	20 83       	st	Z, r18
    843a:	8a 81       	ldd	r24, Y+2	; 0x02
    843c:	9b 81       	ldd	r25, Y+3	; 0x03
    843e:	ac 81       	ldd	r26, Y+4	; 0x04
    8440:	bd 81       	ldd	r27, Y+5	; 0x05
    8442:	bc 01       	movw	r22, r24
    8444:	cd 01       	movw	r24, r26
    8446:	a5 96       	adiw	r28, 0x25	; 37
    8448:	cd bf       	out	0x3d, r28	; 61
    844a:	de bf       	out	0x3e, r29	; 62
    844c:	df 91       	pop	r29
    844e:	cf 91       	pop	r28
    8450:	1f 91       	pop	r17
    8452:	0f 91       	pop	r16
    8454:	ff 90       	pop	r15
    8456:	ef 90       	pop	r14
    8458:	08 95       	ret

0000845a <ds3231_set_date_time_arducon>:
    845a:	cf 93       	push	r28
    845c:	df 93       	push	r29
    845e:	cd b7       	in	r28, 0x3d	; 61
    8460:	de b7       	in	r29, 0x3e	; 62
    8462:	2c 97       	sbiw	r28, 0x0c	; 12
    8464:	cd bf       	out	0x3d, r28	; 61
    8466:	de bf       	out	0x3e, r29	; 62
    8468:	8a 87       	std	Y+10, r24	; 0x0a
    846a:	9b 87       	std	Y+11, r25	; 0x0b
    846c:	6c 87       	std	Y+12, r22	; 0x0c
    846e:	8a e0       	ldi	r24, 0x0A	; 10
    8470:	89 83       	std	Y+1, r24	; 0x01
    8472:	81 e0       	ldi	r24, 0x01	; 1
    8474:	8a 83       	std	Y+2, r24	; 0x02
    8476:	27 e0       	ldi	r18, 0x07	; 7
    8478:	ce 01       	movw	r24, r28
    847a:	03 96       	adiw	r24, 0x03	; 3
    847c:	fc 01       	movw	r30, r24
    847e:	32 2f       	mov	r19, r18
    8480:	11 92       	st	Z+, r1
    8482:	3a 95       	dec	r19
    8484:	e9 f7       	brne	.-6      	; 0x8480 <ds3231_set_date_time_arducon+0x26>
    8486:	8a 85       	ldd	r24, Y+10	; 0x0a
    8488:	9b 85       	ldd	r25, Y+11	; 0x0b
    848a:	89 2b       	or	r24, r25
    848c:	09 f4       	brne	.+2      	; 0x8490 <ds3231_set_date_time_arducon+0x36>
    848e:	47 c0       	rjmp	.+142    	; 0x851e <ds3231_set_date_time_arducon+0xc4>
    8490:	8a 85       	ldd	r24, Y+10	; 0x0a
    8492:	9b 85       	ldd	r25, Y+11	; 0x0b
    8494:	0a 96       	adiw	r24, 0x0a	; 10
    8496:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    849a:	8b 83       	std	Y+3, r24	; 0x03
    849c:	8a 85       	ldd	r24, Y+10	; 0x0a
    849e:	9b 85       	ldd	r25, Y+11	; 0x0b
    84a0:	08 96       	adiw	r24, 0x08	; 8
    84a2:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84a6:	8c 83       	std	Y+4, r24	; 0x04
    84a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    84aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    84ac:	06 96       	adiw	r24, 0x06	; 6
    84ae:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84b2:	8d 83       	std	Y+5, r24	; 0x05
    84b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    84b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    84b8:	04 96       	adiw	r24, 0x04	; 4
    84ba:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84be:	8f 83       	std	Y+7, r24	; 0x07
    84c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    84c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    84c4:	02 96       	adiw	r24, 0x02	; 2
    84c6:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84ca:	88 87       	std	Y+8, r24	; 0x08
    84cc:	8a 85       	ldd	r24, Y+10	; 0x0a
    84ce:	9b 85       	ldd	r25, Y+11	; 0x0b
    84d0:	0e 94 83 3e 	call	0x7d06	; 0x7d06 <_Z8char2bcdPc>
    84d4:	89 87       	std	Y+9, r24	; 0x09
    84d6:	89 81       	ldd	r24, Y+1	; 0x01
    84d8:	9f ef       	ldi	r25, 0xFF	; 255
    84da:	98 0f       	add	r25, r24
    84dc:	99 83       	std	Y+1, r25	; 0x01
    84de:	88 23       	and	r24, r24
    84e0:	d1 f0       	breq	.+52     	; 0x8516 <ds3231_set_date_time_arducon+0xbc>
    84e2:	9c 85       	ldd	r25, Y+12	; 0x0c
    84e4:	89 2f       	mov	r24, r25
    84e6:	88 0f       	add	r24, r24
    84e8:	88 0f       	add	r24, r24
    84ea:	88 0f       	add	r24, r24
    84ec:	38 2f       	mov	r19, r24
    84ee:	39 1b       	sub	r19, r25
    84f0:	ce 01       	movw	r24, r28
    84f2:	03 96       	adiw	r24, 0x03	; 3
    84f4:	27 e0       	ldi	r18, 0x07	; 7
    84f6:	ac 01       	movw	r20, r24
    84f8:	63 2f       	mov	r22, r19
    84fa:	80 ed       	ldi	r24, 0xD0	; 208
    84fc:	0e 94 2b 4f 	call	0x9e56	; 0x9e56 <I2C_0_SendData>
    8500:	98 2f       	mov	r25, r24
    8502:	81 e0       	ldi	r24, 0x01	; 1
    8504:	97 30       	cpi	r25, 0x07	; 7
    8506:	09 f4       	brne	.+2      	; 0x850a <ds3231_set_date_time_arducon+0xb0>
    8508:	80 e0       	ldi	r24, 0x00	; 0
    850a:	8a 83       	std	Y+2, r24	; 0x02
    850c:	8a 81       	ldd	r24, Y+2	; 0x02
    850e:	88 23       	and	r24, r24
    8510:	11 f0       	breq	.+4      	; 0x8516 <ds3231_set_date_time_arducon+0xbc>
    8512:	81 e0       	ldi	r24, 0x01	; 1
    8514:	01 c0       	rjmp	.+2      	; 0x8518 <ds3231_set_date_time_arducon+0xbe>
    8516:	80 e0       	ldi	r24, 0x00	; 0
    8518:	88 23       	and	r24, r24
    851a:	09 f0       	breq	.+2      	; 0x851e <ds3231_set_date_time_arducon+0xc4>
    851c:	dc cf       	rjmp	.-72     	; 0x84d6 <ds3231_set_date_time_arducon+0x7c>
    851e:	8a 81       	ldd	r24, Y+2	; 0x02
    8520:	2c 96       	adiw	r28, 0x0c	; 12
    8522:	cd bf       	out	0x3d, r28	; 61
    8524:	de bf       	out	0x3e, r29	; 62
    8526:	df 91       	pop	r29
    8528:	cf 91       	pop	r28
    852a:	08 95       	ret

0000852c <ds3231_set_date_time>:
    852c:	cf 93       	push	r28
    852e:	df 93       	push	r29
    8530:	cd b7       	in	r28, 0x3d	; 61
    8532:	de b7       	in	r29, 0x3e	; 62
    8534:	63 97       	sbiw	r28, 0x13	; 19
    8536:	cd bf       	out	0x3d, r28	; 61
    8538:	de bf       	out	0x3e, r29	; 62
    853a:	89 8b       	std	Y+17, r24	; 0x11
    853c:	9a 8b       	std	Y+18, r25	; 0x12
    853e:	6b 8b       	std	Y+19, r22	; 0x13
    8540:	8a e0       	ldi	r24, 0x0A	; 10
    8542:	89 83       	std	Y+1, r24	; 0x01
    8544:	1a 86       	std	Y+10, r1	; 0x0a
    8546:	1b 86       	std	Y+11, r1	; 0x0b
    8548:	1c 86       	std	Y+12, r1	; 0x0c
    854a:	81 e0       	ldi	r24, 0x01	; 1
    854c:	8d 87       	std	Y+13, r24	; 0x0d
    854e:	1e 86       	std	Y+14, r1	; 0x0e
    8550:	1f 86       	std	Y+15, r1	; 0x0f
    8552:	18 8a       	std	Y+16, r1	; 0x10
    8554:	80 ed       	ldi	r24, 0xD0	; 208
    8556:	97 e0       	ldi	r25, 0x07	; 7
    8558:	8a 83       	std	Y+2, r24	; 0x02
    855a:	9b 83       	std	Y+3, r25	; 0x03
    855c:	89 89       	ldd	r24, Y+17	; 0x11
    855e:	9a 89       	ldd	r25, Y+18	; 0x12
    8560:	42 96       	adiw	r24, 0x12	; 18
    8562:	fc 01       	movw	r30, r24
    8564:	80 81       	ld	r24, Z
    8566:	80 53       	subi	r24, 0x30	; 48
    8568:	8a 87       	std	Y+10, r24	; 0x0a
    856a:	8a 85       	ldd	r24, Y+10	; 0x0a
    856c:	28 2f       	mov	r18, r24
    856e:	89 89       	ldd	r24, Y+17	; 0x11
    8570:	9a 89       	ldd	r25, Y+18	; 0x12
    8572:	41 96       	adiw	r24, 0x11	; 17
    8574:	fc 01       	movw	r30, r24
    8576:	80 81       	ld	r24, Z
    8578:	88 2f       	mov	r24, r24
    857a:	90 e0       	ldi	r25, 0x00	; 0
    857c:	c0 97       	sbiw	r24, 0x30	; 48
    857e:	82 95       	swap	r24
    8580:	92 95       	swap	r25
    8582:	90 7f       	andi	r25, 0xF0	; 240
    8584:	98 27       	eor	r25, r24
    8586:	80 7f       	andi	r24, 0xF0	; 240
    8588:	98 27       	eor	r25, r24
    858a:	82 2b       	or	r24, r18
    858c:	8a 87       	std	Y+10, r24	; 0x0a
    858e:	89 89       	ldd	r24, Y+17	; 0x11
    8590:	9a 89       	ldd	r25, Y+18	; 0x12
    8592:	0f 96       	adiw	r24, 0x0f	; 15
    8594:	fc 01       	movw	r30, r24
    8596:	80 81       	ld	r24, Z
    8598:	80 53       	subi	r24, 0x30	; 48
    859a:	8b 87       	std	Y+11, r24	; 0x0b
    859c:	8b 85       	ldd	r24, Y+11	; 0x0b
    859e:	28 2f       	mov	r18, r24
    85a0:	89 89       	ldd	r24, Y+17	; 0x11
    85a2:	9a 89       	ldd	r25, Y+18	; 0x12
    85a4:	0e 96       	adiw	r24, 0x0e	; 14
    85a6:	fc 01       	movw	r30, r24
    85a8:	80 81       	ld	r24, Z
    85aa:	88 2f       	mov	r24, r24
    85ac:	90 e0       	ldi	r25, 0x00	; 0
    85ae:	c0 97       	sbiw	r24, 0x30	; 48
    85b0:	82 95       	swap	r24
    85b2:	92 95       	swap	r25
    85b4:	90 7f       	andi	r25, 0xF0	; 240
    85b6:	98 27       	eor	r25, r24
    85b8:	80 7f       	andi	r24, 0xF0	; 240
    85ba:	98 27       	eor	r25, r24
    85bc:	82 2b       	or	r24, r18
    85be:	8b 87       	std	Y+11, r24	; 0x0b
    85c0:	89 89       	ldd	r24, Y+17	; 0x11
    85c2:	9a 89       	ldd	r25, Y+18	; 0x12
    85c4:	0c 96       	adiw	r24, 0x0c	; 12
    85c6:	fc 01       	movw	r30, r24
    85c8:	80 81       	ld	r24, Z
    85ca:	80 53       	subi	r24, 0x30	; 48
    85cc:	8c 87       	std	Y+12, r24	; 0x0c
    85ce:	8c 85       	ldd	r24, Y+12	; 0x0c
    85d0:	28 2f       	mov	r18, r24
    85d2:	89 89       	ldd	r24, Y+17	; 0x11
    85d4:	9a 89       	ldd	r25, Y+18	; 0x12
    85d6:	0b 96       	adiw	r24, 0x0b	; 11
    85d8:	fc 01       	movw	r30, r24
    85da:	80 81       	ld	r24, Z
    85dc:	88 2f       	mov	r24, r24
    85de:	90 e0       	ldi	r25, 0x00	; 0
    85e0:	c0 97       	sbiw	r24, 0x30	; 48
    85e2:	82 95       	swap	r24
    85e4:	92 95       	swap	r25
    85e6:	90 7f       	andi	r25, 0xF0	; 240
    85e8:	98 27       	eor	r25, r24
    85ea:	80 7f       	andi	r24, 0xF0	; 240
    85ec:	98 27       	eor	r25, r24
    85ee:	82 2b       	or	r24, r18
    85f0:	8c 87       	std	Y+12, r24	; 0x0c
    85f2:	89 89       	ldd	r24, Y+17	; 0x11
    85f4:	9a 89       	ldd	r25, Y+18	; 0x12
    85f6:	09 96       	adiw	r24, 0x09	; 9
    85f8:	fc 01       	movw	r30, r24
    85fa:	80 81       	ld	r24, Z
    85fc:	80 53       	subi	r24, 0x30	; 48
    85fe:	8e 87       	std	Y+14, r24	; 0x0e
    8600:	8f 85       	ldd	r24, Y+15	; 0x0f
    8602:	88 2f       	mov	r24, r24
    8604:	90 e0       	ldi	r25, 0x00	; 0
    8606:	8c 83       	std	Y+4, r24	; 0x04
    8608:	9d 83       	std	Y+5, r25	; 0x05
    860a:	89 89       	ldd	r24, Y+17	; 0x11
    860c:	9a 89       	ldd	r25, Y+18	; 0x12
    860e:	08 96       	adiw	r24, 0x08	; 8
    8610:	fc 01       	movw	r30, r24
    8612:	80 81       	ld	r24, Z
    8614:	88 2f       	mov	r24, r24
    8616:	90 e0       	ldi	r25, 0x00	; 0
    8618:	c0 97       	sbiw	r24, 0x30	; 48
    861a:	8e 83       	std	Y+6, r24	; 0x06
    861c:	9f 83       	std	Y+7, r25	; 0x07
    861e:	8e 81       	ldd	r24, Y+6	; 0x06
    8620:	9f 81       	ldd	r25, Y+7	; 0x07
    8622:	88 0f       	add	r24, r24
    8624:	99 1f       	adc	r25, r25
    8626:	9c 01       	movw	r18, r24
    8628:	22 0f       	add	r18, r18
    862a:	33 1f       	adc	r19, r19
    862c:	22 0f       	add	r18, r18
    862e:	33 1f       	adc	r19, r19
    8630:	82 0f       	add	r24, r18
    8632:	93 1f       	adc	r25, r19
    8634:	2c 81       	ldd	r18, Y+4	; 0x04
    8636:	3d 81       	ldd	r19, Y+5	; 0x05
    8638:	82 0f       	add	r24, r18
    863a:	93 1f       	adc	r25, r19
    863c:	8c 83       	std	Y+4, r24	; 0x04
    863e:	9d 83       	std	Y+5, r25	; 0x05
    8640:	8e 85       	ldd	r24, Y+14	; 0x0e
    8642:	28 2f       	mov	r18, r24
    8644:	8e 81       	ldd	r24, Y+6	; 0x06
    8646:	9f 81       	ldd	r25, Y+7	; 0x07
    8648:	82 95       	swap	r24
    864a:	92 95       	swap	r25
    864c:	90 7f       	andi	r25, 0xF0	; 240
    864e:	98 27       	eor	r25, r24
    8650:	80 7f       	andi	r24, 0xF0	; 240
    8652:	98 27       	eor	r25, r24
    8654:	82 2b       	or	r24, r18
    8656:	8e 87       	std	Y+14, r24	; 0x0e
    8658:	89 89       	ldd	r24, Y+17	; 0x11
    865a:	9a 89       	ldd	r25, Y+18	; 0x12
    865c:	06 96       	adiw	r24, 0x06	; 6
    865e:	fc 01       	movw	r30, r24
    8660:	80 81       	ld	r24, Z
    8662:	80 53       	subi	r24, 0x30	; 48
    8664:	8f 87       	std	Y+15, r24	; 0x0f
    8666:	88 89       	ldd	r24, Y+16	; 0x10
    8668:	88 2f       	mov	r24, r24
    866a:	90 e0       	ldi	r25, 0x00	; 0
    866c:	88 87       	std	Y+8, r24	; 0x08
    866e:	99 87       	std	Y+9, r25	; 0x09
    8670:	89 89       	ldd	r24, Y+17	; 0x11
    8672:	9a 89       	ldd	r25, Y+18	; 0x12
    8674:	05 96       	adiw	r24, 0x05	; 5
    8676:	fc 01       	movw	r30, r24
    8678:	80 81       	ld	r24, Z
    867a:	88 2f       	mov	r24, r24
    867c:	90 e0       	ldi	r25, 0x00	; 0
    867e:	c0 97       	sbiw	r24, 0x30	; 48
    8680:	8e 83       	std	Y+6, r24	; 0x06
    8682:	9f 83       	std	Y+7, r25	; 0x07
    8684:	8e 81       	ldd	r24, Y+6	; 0x06
    8686:	9f 81       	ldd	r25, Y+7	; 0x07
    8688:	88 0f       	add	r24, r24
    868a:	99 1f       	adc	r25, r25
    868c:	9c 01       	movw	r18, r24
    868e:	22 0f       	add	r18, r18
    8690:	33 1f       	adc	r19, r19
    8692:	22 0f       	add	r18, r18
    8694:	33 1f       	adc	r19, r19
    8696:	82 0f       	add	r24, r18
    8698:	93 1f       	adc	r25, r19
    869a:	28 85       	ldd	r18, Y+8	; 0x08
    869c:	39 85       	ldd	r19, Y+9	; 0x09
    869e:	82 0f       	add	r24, r18
    86a0:	93 1f       	adc	r25, r19
    86a2:	88 87       	std	Y+8, r24	; 0x08
    86a4:	99 87       	std	Y+9, r25	; 0x09
    86a6:	8f 85       	ldd	r24, Y+15	; 0x0f
    86a8:	28 2f       	mov	r18, r24
    86aa:	8e 81       	ldd	r24, Y+6	; 0x06
    86ac:	9f 81       	ldd	r25, Y+7	; 0x07
    86ae:	82 95       	swap	r24
    86b0:	92 95       	swap	r25
    86b2:	90 7f       	andi	r25, 0xF0	; 240
    86b4:	98 27       	eor	r25, r24
    86b6:	80 7f       	andi	r24, 0xF0	; 240
    86b8:	98 27       	eor	r25, r24
    86ba:	82 2b       	or	r24, r18
    86bc:	8f 87       	std	Y+15, r24	; 0x0f
    86be:	89 89       	ldd	r24, Y+17	; 0x11
    86c0:	9a 89       	ldd	r25, Y+18	; 0x12
    86c2:	03 96       	adiw	r24, 0x03	; 3
    86c4:	fc 01       	movw	r30, r24
    86c6:	80 81       	ld	r24, Z
    86c8:	80 53       	subi	r24, 0x30	; 48
    86ca:	88 8b       	std	Y+16, r24	; 0x10
    86cc:	89 89       	ldd	r24, Y+17	; 0x11
    86ce:	88 2f       	mov	r24, r24
    86d0:	90 e0       	ldi	r25, 0x00	; 0
    86d2:	2a 81       	ldd	r18, Y+2	; 0x02
    86d4:	3b 81       	ldd	r19, Y+3	; 0x03
    86d6:	82 0f       	add	r24, r18
    86d8:	93 1f       	adc	r25, r19
    86da:	8a 83       	std	Y+2, r24	; 0x02
    86dc:	9b 83       	std	Y+3, r25	; 0x03
    86de:	89 89       	ldd	r24, Y+17	; 0x11
    86e0:	9a 89       	ldd	r25, Y+18	; 0x12
    86e2:	02 96       	adiw	r24, 0x02	; 2
    86e4:	fc 01       	movw	r30, r24
    86e6:	80 81       	ld	r24, Z
    86e8:	88 2f       	mov	r24, r24
    86ea:	90 e0       	ldi	r25, 0x00	; 0
    86ec:	c0 97       	sbiw	r24, 0x30	; 48
    86ee:	8e 83       	std	Y+6, r24	; 0x06
    86f0:	9f 83       	std	Y+7, r25	; 0x07
    86f2:	8e 81       	ldd	r24, Y+6	; 0x06
    86f4:	9f 81       	ldd	r25, Y+7	; 0x07
    86f6:	88 0f       	add	r24, r24
    86f8:	99 1f       	adc	r25, r25
    86fa:	9c 01       	movw	r18, r24
    86fc:	22 0f       	add	r18, r18
    86fe:	33 1f       	adc	r19, r19
    8700:	22 0f       	add	r18, r18
    8702:	33 1f       	adc	r19, r19
    8704:	82 0f       	add	r24, r18
    8706:	93 1f       	adc	r25, r19
    8708:	2a 81       	ldd	r18, Y+2	; 0x02
    870a:	3b 81       	ldd	r19, Y+3	; 0x03
    870c:	82 0f       	add	r24, r18
    870e:	93 1f       	adc	r25, r19
    8710:	8a 83       	std	Y+2, r24	; 0x02
    8712:	9b 83       	std	Y+3, r25	; 0x03
    8714:	88 89       	ldd	r24, Y+16	; 0x10
    8716:	28 2f       	mov	r18, r24
    8718:	8e 81       	ldd	r24, Y+6	; 0x06
    871a:	9f 81       	ldd	r25, Y+7	; 0x07
    871c:	82 95       	swap	r24
    871e:	92 95       	swap	r25
    8720:	90 7f       	andi	r25, 0xF0	; 240
    8722:	98 27       	eor	r25, r24
    8724:	80 7f       	andi	r24, 0xF0	; 240
    8726:	98 27       	eor	r25, r24
    8728:	82 2b       	or	r24, r18
    872a:	88 8b       	std	Y+16, r24	; 0x10
    872c:	89 81       	ldd	r24, Y+1	; 0x01
    872e:	9f ef       	ldi	r25, 0xFF	; 255
    8730:	98 0f       	add	r25, r24
    8732:	99 83       	std	Y+1, r25	; 0x01
    8734:	88 23       	and	r24, r24
    8736:	99 f0       	breq	.+38     	; 0x875e <ds3231_set_date_time+0x232>
    8738:	9b 89       	ldd	r25, Y+19	; 0x13
    873a:	89 2f       	mov	r24, r25
    873c:	88 0f       	add	r24, r24
    873e:	88 0f       	add	r24, r24
    8740:	88 0f       	add	r24, r24
    8742:	38 2f       	mov	r19, r24
    8744:	39 1b       	sub	r19, r25
    8746:	ce 01       	movw	r24, r28
    8748:	0a 96       	adiw	r24, 0x0a	; 10
    874a:	27 e0       	ldi	r18, 0x07	; 7
    874c:	ac 01       	movw	r20, r24
    874e:	63 2f       	mov	r22, r19
    8750:	80 ed       	ldi	r24, 0xD0	; 208
    8752:	0e 94 2b 4f 	call	0x9e56	; 0x9e56 <I2C_0_SendData>
    8756:	87 30       	cpi	r24, 0x07	; 7
    8758:	11 f0       	breq	.+4      	; 0x875e <ds3231_set_date_time+0x232>
    875a:	81 e0       	ldi	r24, 0x01	; 1
    875c:	01 c0       	rjmp	.+2      	; 0x8760 <ds3231_set_date_time+0x234>
    875e:	80 e0       	ldi	r24, 0x00	; 0
    8760:	88 23       	and	r24, r24
    8762:	09 f0       	breq	.+2      	; 0x8766 <ds3231_set_date_time+0x23a>
    8764:	e3 cf       	rjmp	.-58     	; 0x872c <ds3231_set_date_time+0x200>
    8766:	00 00       	nop
    8768:	63 96       	adiw	r28, 0x13	; 19
    876a:	cd bf       	out	0x3d, r28	; 61
    876c:	de bf       	out	0x3e, r29	; 62
    876e:	df 91       	pop	r29
    8770:	cf 91       	pop	r28
    8772:	08 95       	ret

00008774 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    8774:	cf 93       	push	r28
    8776:	df 93       	push	r29
    8778:	00 d0       	rcall	.+0      	; 0x877a <ds3231_1s_sqw+0x6>
    877a:	00 d0       	rcall	.+0      	; 0x877c <ds3231_1s_sqw+0x8>
    877c:	cd b7       	in	r28, 0x3d	; 61
    877e:	de b7       	in	r29, 0x3e	; 62
    8780:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8782:	8a e0       	ldi	r24, 0x0A	; 10
    8784:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    8786:	8c 81       	ldd	r24, Y+4	; 0x04
    8788:	88 23       	and	r24, r24
    878a:	11 f0       	breq	.+4      	; 0x8790 <ds3231_1s_sqw+0x1c>
    878c:	80 e0       	ldi	r24, 0x00	; 0
    878e:	01 c0       	rjmp	.+2      	; 0x8792 <ds3231_1s_sqw+0x1e>
    8790:	84 e0       	ldi	r24, 0x04	; 4
    8792:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    8794:	89 81       	ldd	r24, Y+1	; 0x01
    8796:	9f ef       	ldi	r25, 0xFF	; 255
    8798:	98 0f       	add	r25, r24
    879a:	99 83       	std	Y+1, r25	; 0x01
    879c:	88 23       	and	r24, r24
    879e:	99 f0       	breq	.+38     	; 0x87c6 <ds3231_1s_sqw+0x52>
    87a0:	ce 01       	movw	r24, r28
    87a2:	03 96       	adiw	r24, 0x03	; 3
    87a4:	21 e0       	ldi	r18, 0x01	; 1
    87a6:	ac 01       	movw	r20, r24
    87a8:	6e e0       	ldi	r22, 0x0E	; 14
    87aa:	80 ed       	ldi	r24, 0xD0	; 208
    87ac:	0e 94 2b 4f 	call	0x9e56	; 0x9e56 <I2C_0_SendData>
    87b0:	98 2f       	mov	r25, r24
    87b2:	81 e0       	ldi	r24, 0x01	; 1
    87b4:	91 30       	cpi	r25, 0x01	; 1
    87b6:	09 f4       	brne	.+2      	; 0x87ba <ds3231_1s_sqw+0x46>
    87b8:	80 e0       	ldi	r24, 0x00	; 0
    87ba:	8a 83       	std	Y+2, r24	; 0x02
    87bc:	8a 81       	ldd	r24, Y+2	; 0x02
    87be:	88 23       	and	r24, r24
    87c0:	11 f0       	breq	.+4      	; 0x87c6 <ds3231_1s_sqw+0x52>
    87c2:	81 e0       	ldi	r24, 0x01	; 1
    87c4:	01 c0       	rjmp	.+2      	; 0x87c8 <ds3231_1s_sqw+0x54>
    87c6:	80 e0       	ldi	r24, 0x00	; 0
    87c8:	88 23       	and	r24, r24
    87ca:	09 f0       	breq	.+2      	; 0x87ce <ds3231_1s_sqw+0x5a>
    87cc:	e3 cf       	rjmp	.-58     	; 0x8794 <ds3231_1s_sqw+0x20>
		
		return(failure);
    87ce:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    87d0:	24 96       	adiw	r28, 0x04	; 4
    87d2:	cd bf       	out	0x3d, r28	; 61
    87d4:	de bf       	out	0x3e, r29	; 62
    87d6:	df 91       	pop	r29
    87d8:	cf 91       	pop	r28
    87da:	08 95       	ret

000087dc <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    87dc:	cf 93       	push	r28
    87de:	df 93       	push	r29
    87e0:	00 d0       	rcall	.+0      	; 0x87e2 <ds3231_set_aging+0x6>
    87e2:	00 d0       	rcall	.+0      	; 0x87e4 <ds3231_set_aging+0x8>
    87e4:	cd b7       	in	r28, 0x3d	; 61
    87e6:	de b7       	in	r29, 0x3e	; 62
    87e8:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    87ea:	8a e0       	ldi	r24, 0x0A	; 10
    87ec:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    87ee:	8c 81       	ldd	r24, Y+4	; 0x04
    87f0:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    87f2:	89 81       	ldd	r24, Y+1	; 0x01
    87f4:	9f ef       	ldi	r25, 0xFF	; 255
    87f6:	98 0f       	add	r25, r24
    87f8:	99 83       	std	Y+1, r25	; 0x01
    87fa:	88 23       	and	r24, r24
    87fc:	99 f0       	breq	.+38     	; 0x8824 <ds3231_set_aging+0x48>
    87fe:	ce 01       	movw	r24, r28
    8800:	03 96       	adiw	r24, 0x03	; 3
    8802:	21 e0       	ldi	r18, 0x01	; 1
    8804:	ac 01       	movw	r20, r24
    8806:	60 e1       	ldi	r22, 0x10	; 16
    8808:	80 ed       	ldi	r24, 0xD0	; 208
    880a:	0e 94 2b 4f 	call	0x9e56	; 0x9e56 <I2C_0_SendData>
    880e:	98 2f       	mov	r25, r24
    8810:	81 e0       	ldi	r24, 0x01	; 1
    8812:	91 30       	cpi	r25, 0x01	; 1
    8814:	09 f4       	brne	.+2      	; 0x8818 <ds3231_set_aging+0x3c>
    8816:	80 e0       	ldi	r24, 0x00	; 0
    8818:	8a 83       	std	Y+2, r24	; 0x02
    881a:	8a 81       	ldd	r24, Y+2	; 0x02
    881c:	88 23       	and	r24, r24
    881e:	11 f0       	breq	.+4      	; 0x8824 <ds3231_set_aging+0x48>
    8820:	81 e0       	ldi	r24, 0x01	; 1
    8822:	01 c0       	rjmp	.+2      	; 0x8826 <ds3231_set_aging+0x4a>
    8824:	80 e0       	ldi	r24, 0x00	; 0
    8826:	88 23       	and	r24, r24
    8828:	09 f0       	breq	.+2      	; 0x882c <ds3231_set_aging+0x50>
    882a:	e3 cf       	rjmp	.-58     	; 0x87f2 <ds3231_set_aging+0x16>
		return(failure);
    882c:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    882e:	24 96       	adiw	r28, 0x04	; 4
    8830:	cd bf       	out	0x3d, r28	; 61
    8832:	de bf       	out	0x3e, r29	; 62
    8834:	df 91       	pop	r29
    8836:	cf 91       	pop	r28
    8838:	08 95       	ret

0000883a <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    883a:	cf 93       	push	r28
    883c:	df 93       	push	r29
    883e:	00 d0       	rcall	.+0      	; 0x8840 <ds3231_get_aging+0x6>
    8840:	1f 92       	push	r1
    8842:	cd b7       	in	r28, 0x3d	; 61
    8844:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8846:	8a e0       	ldi	r24, 0x0A	; 10
    8848:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    884a:	89 81       	ldd	r24, Y+1	; 0x01
    884c:	9f ef       	ldi	r25, 0xFF	; 255
    884e:	98 0f       	add	r25, r24
    8850:	99 83       	std	Y+1, r25	; 0x01
    8852:	88 23       	and	r24, r24
    8854:	99 f0       	breq	.+38     	; 0x887c <ds3231_get_aging+0x42>
    8856:	ce 01       	movw	r24, r28
    8858:	03 96       	adiw	r24, 0x03	; 3
    885a:	21 e0       	ldi	r18, 0x01	; 1
    885c:	ac 01       	movw	r20, r24
    885e:	60 e1       	ldi	r22, 0x10	; 16
    8860:	80 ed       	ldi	r24, 0xD0	; 208
    8862:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <I2C_0_GetData>
    8866:	98 2f       	mov	r25, r24
    8868:	81 e0       	ldi	r24, 0x01	; 1
    886a:	91 30       	cpi	r25, 0x01	; 1
    886c:	09 f4       	brne	.+2      	; 0x8870 <ds3231_get_aging+0x36>
    886e:	80 e0       	ldi	r24, 0x00	; 0
    8870:	8a 83       	std	Y+2, r24	; 0x02
    8872:	8a 81       	ldd	r24, Y+2	; 0x02
    8874:	88 23       	and	r24, r24
    8876:	11 f0       	breq	.+4      	; 0x887c <ds3231_get_aging+0x42>
    8878:	81 e0       	ldi	r24, 0x01	; 1
    887a:	01 c0       	rjmp	.+2      	; 0x887e <ds3231_get_aging+0x44>
    887c:	80 e0       	ldi	r24, 0x00	; 0
    887e:	88 23       	and	r24, r24
    8880:	09 f0       	breq	.+2      	; 0x8884 <ds3231_get_aging+0x4a>
    8882:	e3 cf       	rjmp	.-58     	; 0x884a <ds3231_get_aging+0x10>
		return(data[0]);
    8884:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    8886:	23 96       	adiw	r28, 0x03	; 3
    8888:	cd bf       	out	0x3d, r28	; 61
    888a:	de bf       	out	0x3e, r29	; 62
    888c:	df 91       	pop	r29
    888e:	cf 91       	pop	r28
    8890:	08 95       	ret

00008892 <ds3231_responding>:

	bool ds3231_responding()
	{
    8892:	cf 93       	push	r28
    8894:	df 93       	push	r29
    8896:	00 d0       	rcall	.+0      	; 0x8898 <ds3231_responding+0x6>
    8898:	1f 92       	push	r1
    889a:	cd b7       	in	r28, 0x3d	; 61
    889c:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    889e:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 10;
    88a0:	8a e0       	ldi	r24, 0x0A	; 10
    88a2:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    88a4:	8a 81       	ldd	r24, Y+2	; 0x02
    88a6:	9f ef       	ldi	r25, 0xFF	; 255
    88a8:	98 0f       	add	r25, r24
    88aa:	9a 83       	std	Y+2, r25	; 0x02
    88ac:	88 23       	and	r24, r24
    88ae:	a9 f0       	breq	.+42     	; 0x88da <ds3231_responding+0x48>
    88b0:	ce 01       	movw	r24, r28
    88b2:	03 96       	adiw	r24, 0x03	; 3
    88b4:	21 e0       	ldi	r18, 0x01	; 1
    88b6:	ac 01       	movw	r20, r24
    88b8:	60 e1       	ldi	r22, 0x10	; 16
    88ba:	80 ed       	ldi	r24, 0xD0	; 208
    88bc:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <I2C_0_GetData>
    88c0:	98 2f       	mov	r25, r24
    88c2:	81 e0       	ldi	r24, 0x01	; 1
    88c4:	91 30       	cpi	r25, 0x01	; 1
    88c6:	09 f0       	breq	.+2      	; 0x88ca <ds3231_responding+0x38>
    88c8:	80 e0       	ldi	r24, 0x00	; 0
    88ca:	89 83       	std	Y+1, r24	; 0x01
    88cc:	99 81       	ldd	r25, Y+1	; 0x01
    88ce:	81 e0       	ldi	r24, 0x01	; 1
    88d0:	89 27       	eor	r24, r25
    88d2:	88 23       	and	r24, r24
    88d4:	11 f0       	breq	.+4      	; 0x88da <ds3231_responding+0x48>
    88d6:	81 e0       	ldi	r24, 0x01	; 1
    88d8:	01 c0       	rjmp	.+2      	; 0x88dc <ds3231_responding+0x4a>
    88da:	80 e0       	ldi	r24, 0x00	; 0
    88dc:	88 23       	and	r24, r24
    88de:	09 f0       	breq	.+2      	; 0x88e2 <ds3231_responding+0x50>
    88e0:	e1 cf       	rjmp	.-62     	; 0x88a4 <ds3231_responding+0x12>
		return(responseReceived);
    88e2:	89 81       	ldd	r24, Y+1	; 0x01
	}
    88e4:	23 96       	adiw	r28, 0x03	; 3
    88e6:	cd bf       	out	0x3d, r28	; 61
    88e8:	de bf       	out	0x3e, r29	; 62
    88ea:	df 91       	pop	r29
    88ec:	cf 91       	pop	r28
    88ee:	08 95       	ret

000088f0 <ds3231_sync2nearestMinute>:

/* This simple synchronization approach works for all times except 12 midnight. If synchronization
results in the advancement to the next day, then one day would be lost. Instead of introducing that
error, this function merely fails to synchronize at midnight. */
bool ds3231_sync2nearestMinute()
{
    88f0:	cf 93       	push	r28
    88f2:	df 93       	push	r29
    88f4:	cd b7       	in	r28, 0x3d	; 61
    88f6:	de b7       	in	r29, 0x3e	; 62
    88f8:	61 97       	sbiw	r28, 0x11	; 17
    88fa:	cd bf       	out	0x3d, r28	; 61
    88fc:	de bf       	out	0x3e, r29	; 62
	uint8_t tries = 10; /* try several times in case of transient bus issues */
    88fe:	8a e0       	ldi	r24, 0x0A	; 10
    8900:	89 83       	std	Y+1, r24	; 0x01
	bool err = false;
    8902:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t data[8] = { 0, 0, 0 };
    8904:	28 e0       	ldi	r18, 0x08	; 8
    8906:	ce 01       	movw	r24, r28
    8908:	0a 96       	adiw	r24, 0x0a	; 10
    890a:	fc 01       	movw	r30, r24
    890c:	32 2f       	mov	r19, r18
    890e:	11 92       	st	Z+, r1
    8910:	3a 95       	dec	r19
    8912:	e9 f7       	brne	.-6      	; 0x890e <ds3231_sync2nearestMinute+0x1e>
		
	while(tries-- && (err = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 3) != 3)));
    8914:	89 81       	ldd	r24, Y+1	; 0x01
    8916:	9f ef       	ldi	r25, 0xFF	; 255
    8918:	98 0f       	add	r25, r24
    891a:	99 83       	std	Y+1, r25	; 0x01
    891c:	88 23       	and	r24, r24
    891e:	99 f0       	breq	.+38     	; 0x8946 <ds3231_sync2nearestMinute+0x56>
    8920:	ce 01       	movw	r24, r28
    8922:	0a 96       	adiw	r24, 0x0a	; 10
    8924:	23 e0       	ldi	r18, 0x03	; 3
    8926:	ac 01       	movw	r20, r24
    8928:	60 e0       	ldi	r22, 0x00	; 0
    892a:	80 ed       	ldi	r24, 0xD0	; 208
    892c:	0e 94 93 4f 	call	0x9f26	; 0x9f26 <I2C_0_GetData>
    8930:	98 2f       	mov	r25, r24
    8932:	81 e0       	ldi	r24, 0x01	; 1
    8934:	93 30       	cpi	r25, 0x03	; 3
    8936:	09 f4       	brne	.+2      	; 0x893a <ds3231_sync2nearestMinute+0x4a>
    8938:	80 e0       	ldi	r24, 0x00	; 0
    893a:	8a 83       	std	Y+2, r24	; 0x02
    893c:	8a 81       	ldd	r24, Y+2	; 0x02
    893e:	88 23       	and	r24, r24
    8940:	11 f0       	breq	.+4      	; 0x8946 <ds3231_sync2nearestMinute+0x56>
    8942:	81 e0       	ldi	r24, 0x01	; 1
    8944:	01 c0       	rjmp	.+2      	; 0x8948 <ds3231_sync2nearestMinute+0x58>
    8946:	80 e0       	ldi	r24, 0x00	; 0
    8948:	88 23       	and	r24, r24
    894a:	09 f0       	breq	.+2      	; 0x894e <ds3231_sync2nearestMinute+0x5e>
    894c:	e3 cf       	rjmp	.-58     	; 0x8914 <ds3231_sync2nearestMinute+0x24>

	if(!err)
    894e:	9a 81       	ldd	r25, Y+2	; 0x02
    8950:	81 e0       	ldi	r24, 0x01	; 1
    8952:	89 27       	eor	r24, r25
    8954:	88 23       	and	r24, r24
    8956:	09 f4       	brne	.+2      	; 0x895a <ds3231_sync2nearestMinute+0x6a>
    8958:	ad c0       	rjmp	.+346    	; 0x8ab4 <ds3231_sync2nearestMinute+0x1c4>
		uint8_t hour10;
		uint8_t hour;
		bool am_pm;
		bool twelvehour;

		seconds = bcd2dec(data[0]);
    895a:	8a 85       	ldd	r24, Y+10	; 0x0a
    895c:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    8960:	8e 83       	std	Y+6, r24	; 0x06
		minutes = bcd2dec(data[1]);
    8962:	8b 85       	ldd	r24, Y+11	; 0x0b
    8964:	0e 94 32 3e 	call	0x7c64	; 0x7c64 <_Z7bcd2dech>
    8968:	8c 83       	std	Y+4, r24	; 0x04
		am_pm = ((data[2] >> 5) & 0x01);
    896a:	8c 85       	ldd	r24, Y+12	; 0x0c
    896c:	88 2f       	mov	r24, r24
    896e:	90 e0       	ldi	r25, 0x00	; 0
    8970:	80 72       	andi	r24, 0x20	; 32
    8972:	99 27       	eor	r25, r25
    8974:	21 e0       	ldi	r18, 0x01	; 1
    8976:	89 2b       	or	r24, r25
    8978:	09 f4       	brne	.+2      	; 0x897c <ds3231_sync2nearestMinute+0x8c>
    897a:	20 e0       	ldi	r18, 0x00	; 0
    897c:	2f 83       	std	Y+7, r18	; 0x07
		hour10 = ((data[2] >> 4) & 0x01);
    897e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8980:	88 2f       	mov	r24, r24
    8982:	90 e0       	ldi	r25, 0x00	; 0
    8984:	95 95       	asr	r25
    8986:	87 95       	ror	r24
    8988:	95 95       	asr	r25
    898a:	87 95       	ror	r24
    898c:	95 95       	asr	r25
    898e:	87 95       	ror	r24
    8990:	95 95       	asr	r25
    8992:	87 95       	ror	r24
    8994:	81 70       	andi	r24, 0x01	; 1
    8996:	8d 83       	std	Y+5, r24	; 0x05
		hour = (data[2] & 0x0f);
    8998:	8c 85       	ldd	r24, Y+12	; 0x0c
    899a:	8f 70       	andi	r24, 0x0F	; 15
    899c:	88 87       	std	Y+8, r24	; 0x08

		twelvehour = ((data[2] >> 6) & 0x01);
    899e:	8c 85       	ldd	r24, Y+12	; 0x0c
    89a0:	88 2f       	mov	r24, r24
    89a2:	90 e0       	ldi	r25, 0x00	; 0
    89a4:	80 74       	andi	r24, 0x40	; 64
    89a6:	99 27       	eor	r25, r25
    89a8:	21 e0       	ldi	r18, 0x01	; 1
    89aa:	89 2b       	or	r24, r25
    89ac:	09 f4       	brne	.+2      	; 0x89b0 <ds3231_sync2nearestMinute+0xc0>
    89ae:	20 e0       	ldi	r18, 0x00	; 0
    89b0:	29 87       	std	Y+9, r18	; 0x09

		if(!twelvehour && am_pm)
    89b2:	99 85       	ldd	r25, Y+9	; 0x09
    89b4:	81 e0       	ldi	r24, 0x01	; 1
    89b6:	89 27       	eor	r24, r25
    89b8:	88 23       	and	r24, r24
    89ba:	29 f0       	breq	.+10     	; 0x89c6 <ds3231_sync2nearestMinute+0xd6>
    89bc:	8f 81       	ldd	r24, Y+7	; 0x07
    89be:	88 23       	and	r24, r24
    89c0:	11 f0       	breq	.+4      	; 0x89c6 <ds3231_sync2nearestMinute+0xd6>
		{
			hour10 = 2;
    89c2:	82 e0       	ldi	r24, 0x02	; 2
    89c4:	8d 83       	std	Y+5, r24	; 0x05
		}

		hours = 10 * hour10 + hour;
    89c6:	8d 81       	ldd	r24, Y+5	; 0x05
    89c8:	88 0f       	add	r24, r24
    89ca:	98 2f       	mov	r25, r24
    89cc:	99 0f       	add	r25, r25
    89ce:	99 0f       	add	r25, r25
    89d0:	98 0f       	add	r25, r24
    89d2:	88 85       	ldd	r24, Y+8	; 0x08
    89d4:	89 0f       	add	r24, r25
    89d6:	8b 83       	std	Y+3, r24	; 0x03

		if(seconds > 30)
    89d8:	8e 81       	ldd	r24, Y+6	; 0x06
    89da:	8f 31       	cpi	r24, 0x1F	; 31
    89dc:	78 f0       	brcs	.+30     	; 0x89fc <ds3231_sync2nearestMinute+0x10c>
		{
			minutes++;
    89de:	8c 81       	ldd	r24, Y+4	; 0x04
    89e0:	8f 5f       	subi	r24, 0xFF	; 255
    89e2:	8c 83       	std	Y+4, r24	; 0x04

			if(minutes > 59)
    89e4:	8c 81       	ldd	r24, Y+4	; 0x04
    89e6:	8c 33       	cpi	r24, 0x3C	; 60
    89e8:	48 f0       	brcs	.+18     	; 0x89fc <ds3231_sync2nearestMinute+0x10c>
			{
				minutes = 0;
    89ea:	1c 82       	std	Y+4, r1	; 0x04
				hours++;
    89ec:	8b 81       	ldd	r24, Y+3	; 0x03
    89ee:	8f 5f       	subi	r24, 0xFF	; 255
    89f0:	8b 83       	std	Y+3, r24	; 0x03

				if(hours > 23) /* Don't attempt to synchronize at midnight */
    89f2:	8b 81       	ldd	r24, Y+3	; 0x03
    89f4:	88 31       	cpi	r24, 0x18	; 24
    89f6:	10 f0       	brcs	.+4      	; 0x89fc <ds3231_sync2nearestMinute+0x10c>
				{
					err = true;
    89f8:	81 e0       	ldi	r24, 0x01	; 1
    89fa:	8a 83       	std	Y+2, r24	; 0x02
				}
			}
		}

		if(!err)
    89fc:	9a 81       	ldd	r25, Y+2	; 0x02
    89fe:	81 e0       	ldi	r24, 0x01	; 1
    8a00:	89 27       	eor	r24, r25
    8a02:	88 23       	and	r24, r24
    8a04:	09 f4       	brne	.+2      	; 0x8a08 <ds3231_sync2nearestMinute+0x118>
    8a06:	56 c0       	rjmp	.+172    	; 0x8ab4 <ds3231_sync2nearestMinute+0x1c4>
		{
			data[0] = 0; /* seconds = 00 */
    8a08:	1a 86       	std	Y+10, r1	; 0x0a
			data[1] = dec2bcd(minutes);
    8a0a:	8c 81       	ldd	r24, Y+4	; 0x04
    8a0c:	0e 94 52 3e 	call	0x7ca4	; 0x7ca4 <_Z7dec2bcdh>
    8a10:	8b 87       	std	Y+11, r24	; 0x0b
			data[2] = 0;
    8a12:	1c 86       	std	Y+12, r1	; 0x0c

			if(twelvehour)
    8a14:	89 85       	ldd	r24, Y+9	; 0x09
    8a16:	88 23       	and	r24, r24
    8a18:	81 f0       	breq	.+32     	; 0x8a3a <ds3231_sync2nearestMinute+0x14a>
			{
				data[2] |= 0x40; /* set  12-hour bit */
    8a1a:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a1c:	80 64       	ori	r24, 0x40	; 64
    8a1e:	8c 87       	std	Y+12, r24	; 0x0c

				if(hours >= 12)
    8a20:	8b 81       	ldd	r24, Y+3	; 0x03
    8a22:	8c 30       	cpi	r24, 0x0C	; 12
    8a24:	18 f0       	brcs	.+6      	; 0x8a2c <ds3231_sync2nearestMinute+0x13c>
				{
					data[2] |= 0x20; /* set pm bit */
    8a26:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a28:	80 62       	ori	r24, 0x20	; 32
    8a2a:	8c 87       	std	Y+12, r24	; 0x0c
				}

				if(hours >= 10)
    8a2c:	8b 81       	ldd	r24, Y+3	; 0x03
    8a2e:	8a 30       	cpi	r24, 0x0A	; 10
    8a30:	88 f0       	brcs	.+34     	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10;
    8a32:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a34:	80 61       	ori	r24, 0x10	; 16
    8a36:	8c 87       	std	Y+12, r24	; 0x0c
    8a38:	0d c0       	rjmp	.+26     	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				}
			}
			else
			{
				if(hours >= 20)
    8a3a:	8b 81       	ldd	r24, Y+3	; 0x03
    8a3c:	84 31       	cpi	r24, 0x14	; 20
    8a3e:	20 f0       	brcs	.+8      	; 0x8a48 <ds3231_sync2nearestMinute+0x158>
				{
					data[2] |= 0x20; /* set 20 bit */
    8a40:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a42:	80 62       	ori	r24, 0x20	; 32
    8a44:	8c 87       	std	Y+12, r24	; 0x0c
    8a46:	06 c0       	rjmp	.+12     	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				}
				else if(hours >= 10)
    8a48:	8b 81       	ldd	r24, Y+3	; 0x03
    8a4a:	8a 30       	cpi	r24, 0x0A	; 10
    8a4c:	18 f0       	brcs	.+6      	; 0x8a54 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10; /* set 10 bit */
    8a4e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8a50:	80 61       	ori	r24, 0x10	; 16
    8a52:	8c 87       	std	Y+12, r24	; 0x0c
				}
			}

			data[2] |= hours % 10;
    8a54:	2c 85       	ldd	r18, Y+12	; 0x0c
    8a56:	9b 81       	ldd	r25, Y+3	; 0x03
    8a58:	8d ec       	ldi	r24, 0xCD	; 205
    8a5a:	98 9f       	mul	r25, r24
    8a5c:	81 2d       	mov	r24, r1
    8a5e:	11 24       	eor	r1, r1
    8a60:	86 95       	lsr	r24
    8a62:	86 95       	lsr	r24
    8a64:	86 95       	lsr	r24
    8a66:	88 0f       	add	r24, r24
    8a68:	38 2f       	mov	r19, r24
    8a6a:	33 0f       	add	r19, r19
    8a6c:	33 0f       	add	r19, r19
    8a6e:	83 0f       	add	r24, r19
    8a70:	e9 2f       	mov	r30, r25
    8a72:	e8 1b       	sub	r30, r24
    8a74:	8e 2f       	mov	r24, r30
    8a76:	82 2b       	or	r24, r18
    8a78:	8c 87       	std	Y+12, r24	; 0x0c
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    8a7a:	89 81       	ldd	r24, Y+1	; 0x01
    8a7c:	9f ef       	ldi	r25, 0xFF	; 255
    8a7e:	98 0f       	add	r25, r24
    8a80:	99 83       	std	Y+1, r25	; 0x01
    8a82:	88 23       	and	r24, r24
    8a84:	99 f0       	breq	.+38     	; 0x8aac <ds3231_sync2nearestMinute+0x1bc>
    8a86:	ce 01       	movw	r24, r28
    8a88:	0a 96       	adiw	r24, 0x0a	; 10
    8a8a:	24 e0       	ldi	r18, 0x04	; 4
    8a8c:	ac 01       	movw	r20, r24
    8a8e:	60 e0       	ldi	r22, 0x00	; 0
    8a90:	80 ed       	ldi	r24, 0xD0	; 208
    8a92:	0e 94 2b 4f 	call	0x9e56	; 0x9e56 <I2C_0_SendData>
    8a96:	98 2f       	mov	r25, r24
    8a98:	81 e0       	ldi	r24, 0x01	; 1
    8a9a:	94 30       	cpi	r25, 0x04	; 4
    8a9c:	09 f4       	brne	.+2      	; 0x8aa0 <ds3231_sync2nearestMinute+0x1b0>
    8a9e:	80 e0       	ldi	r24, 0x00	; 0
    8aa0:	8a 83       	std	Y+2, r24	; 0x02
    8aa2:	8a 81       	ldd	r24, Y+2	; 0x02
    8aa4:	88 23       	and	r24, r24
    8aa6:	11 f0       	breq	.+4      	; 0x8aac <ds3231_sync2nearestMinute+0x1bc>
    8aa8:	81 e0       	ldi	r24, 0x01	; 1
    8aaa:	01 c0       	rjmp	.+2      	; 0x8aae <ds3231_sync2nearestMinute+0x1be>
    8aac:	80 e0       	ldi	r24, 0x00	; 0
    8aae:	88 23       	and	r24, r24
    8ab0:	09 f0       	breq	.+2      	; 0x8ab4 <ds3231_sync2nearestMinute+0x1c4>
    8ab2:	e3 cf       	rjmp	.-58     	; 0x8a7a <ds3231_sync2nearestMinute+0x18a>
		}
	}

	return err;
    8ab4:	8a 81       	ldd	r24, Y+2	; 0x02
}
    8ab6:	61 96       	adiw	r28, 0x11	; 17
    8ab8:	cd bf       	out	0x3d, r28	; 61
    8aba:	de bf       	out	0x3e, r29	; 62
    8abc:	df 91       	pop	r29
    8abe:	cf 91       	pop	r28
    8ac0:	08 95       	ret

00008ac2 <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    8ac2:	cf 93       	push	r28
    8ac4:	df 93       	push	r29
    8ac6:	cd b7       	in	r28, 0x3d	; 61
    8ac8:	de b7       	in	r29, 0x3e	; 62
    8aca:	68 97       	sbiw	r28, 0x18	; 24
    8acc:	cd bf       	out	0x3d, r28	; 61
    8ace:	de bf       	out	0x3e, r29	; 62
    8ad0:	69 8b       	std	Y+17, r22	; 0x11
    8ad2:	7a 8b       	std	Y+18, r23	; 0x12
    8ad4:	8b 8b       	std	Y+19, r24	; 0x13
    8ad6:	9c 8b       	std	Y+20, r25	; 0x14
    8ad8:	4d 8b       	std	Y+21, r20	; 0x15
    8ada:	5e 8b       	std	Y+22, r21	; 0x16
    8adc:	2f 8b       	std	Y+23, r18	; 0x17
    8ade:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    8ae0:	89 89       	ldd	r24, Y+17	; 0x11
    8ae2:	9a 89       	ldd	r25, Y+18	; 0x12
    8ae4:	ab 89       	ldd	r26, Y+19	; 0x13
    8ae6:	bc 89       	ldd	r27, Y+20	; 0x14
    8ae8:	80 58       	subi	r24, 0x80	; 128
    8aea:	93 44       	sbci	r25, 0x43	; 67
    8aec:	ad 46       	sbci	r26, 0x6D	; 109
    8aee:	b8 43       	sbci	r27, 0x38	; 56
    8af0:	8d 87       	std	Y+13, r24	; 0x0d
    8af2:	9e 87       	std	Y+14, r25	; 0x0e
    8af4:	af 87       	std	Y+15, r26	; 0x0f
    8af6:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    8af8:	ce 01       	movw	r24, r28
    8afa:	0d 96       	adiw	r24, 0x0d	; 13
    8afc:	0e 94 1b 02 	call	0x436	; 0x436 <localtime>
    8b00:	2c e0       	ldi	r18, 0x0C	; 12
    8b02:	fc 01       	movw	r30, r24
    8b04:	ce 01       	movw	r24, r28
    8b06:	01 96       	adiw	r24, 0x01	; 1
    8b08:	dc 01       	movw	r26, r24
    8b0a:	01 90       	ld	r0, Z+
    8b0c:	0d 92       	st	X+, r0
    8b0e:	2a 95       	dec	r18
    8b10:	e1 f7       	brne	.-8      	; 0x8b0a <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    8b12:	6f 89       	ldd	r22, Y+23	; 0x17
    8b14:	78 8d       	ldd	r23, Y+24	; 0x18
    8b16:	8d 89       	ldd	r24, Y+21	; 0x15
    8b18:	9e 89       	ldd	r25, Y+22	; 0x16
    8b1a:	9e 01       	movw	r18, r28
    8b1c:	2f 5f       	subi	r18, 0xFF	; 255
    8b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    8b20:	4e e9       	ldi	r20, 0x9E	; 158
    8b22:	54 e4       	ldi	r21, 0x44	; 68
    8b24:	0e 94 c4 02 	call	0x588	; 0x588 <strftime>
   return buf;
    8b28:	8d 89       	ldd	r24, Y+21	; 0x15
    8b2a:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    8b2c:	68 96       	adiw	r28, 0x18	; 24
    8b2e:	cd bf       	out	0x3d, r28	; 61
    8b30:	de bf       	out	0x3e, r29	; 62
    8b32:	df 91       	pop	r29
    8b34:	cf 91       	pop	r28
    8b36:	08 95       	ret

00008b38 <_ZN13EepromManagerC1Ev>:
extern volatile int16_t g_intra_cycle_delay_time;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    8b38:	cf 93       	push	r28
    8b3a:	df 93       	push	r29
    8b3c:	00 d0       	rcall	.+0      	; 0x8b3e <_ZN13EepromManagerC1Ev+0x6>
    8b3e:	cd b7       	in	r28, 0x3d	; 61
    8b40:	de b7       	in	r29, 0x3e	; 62
    8b42:	89 83       	std	Y+1, r24	; 0x01
    8b44:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    8b46:	00 00       	nop
    8b48:	0f 90       	pop	r0
    8b4a:	0f 90       	pop	r0
    8b4c:	df 91       	pop	r29
    8b4e:	cf 91       	pop	r28
    8b50:	08 95       	ret

00008b52 <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    8b52:	cf 93       	push	r28
    8b54:	df 93       	push	r29
    8b56:	00 d0       	rcall	.+0      	; 0x8b58 <_ZN13EepromManagerD1Ev+0x6>
    8b58:	cd b7       	in	r28, 0x3d	; 61
    8b5a:	de b7       	in	r29, 0x3e	; 62
    8b5c:	89 83       	std	Y+1, r24	; 0x01
    8b5e:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    8b60:	00 00       	nop
    8b62:	0f 90       	pop	r0
    8b64:	0f 90       	pop	r0
    8b66:	df 91       	pop	r29
    8b68:	cf 91       	pop	r28
    8b6a:	08 95       	ret

00008b6c <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    8b6c:	cf 93       	push	r28
    8b6e:	df 93       	push	r29
    8b70:	00 d0       	rcall	.+0      	; 0x8b72 <_Z21avr_eeprom_write_bytejh+0x6>
    8b72:	1f 92       	push	r1
    8b74:	cd b7       	in	r28, 0x3d	; 61
    8b76:	de b7       	in	r29, 0x3e	; 62
    8b78:	89 83       	std	Y+1, r24	; 0x01
    8b7a:	9a 83       	std	Y+2, r25	; 0x02
    8b7c:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8b7e:	80 e0       	ldi	r24, 0x00	; 0
    8b80:	90 e1       	ldi	r25, 0x10	; 16
    8b82:	fc 01       	movw	r30, r24
    8b84:	82 81       	ldd	r24, Z+2	; 0x02
    8b86:	88 2f       	mov	r24, r24
    8b88:	90 e0       	ldi	r25, 0x00	; 0
    8b8a:	82 70       	andi	r24, 0x02	; 2
    8b8c:	99 27       	eor	r25, r25
    8b8e:	21 e0       	ldi	r18, 0x01	; 1
    8b90:	89 2b       	or	r24, r25
    8b92:	09 f4       	brne	.+2      	; 0x8b96 <_Z21avr_eeprom_write_bytejh+0x2a>
    8b94:	20 e0       	ldi	r18, 0x00	; 0
    8b96:	22 23       	and	r18, r18
    8b98:	09 f0       	breq	.+2      	; 0x8b9c <_Z21avr_eeprom_write_bytejh+0x30>
    8b9a:	f1 cf       	rjmp	.-30     	; 0x8b7e <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8b9c:	8d e9       	ldi	r24, 0x9D	; 157
    8b9e:	93 e1       	ldi	r25, 0x13	; 19
    8ba0:	84 bf       	out	0x34, r24	; 52
    8ba2:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8ba6:	89 81       	ldd	r24, Y+1	; 0x01
    8ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    8baa:	9c 5e       	subi	r25, 0xEC	; 236
    8bac:	2b 81       	ldd	r18, Y+3	; 0x03
    8bae:	fc 01       	movw	r30, r24
    8bb0:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8bb2:	8d e9       	ldi	r24, 0x9D	; 157
    8bb4:	90 e0       	ldi	r25, 0x00	; 0
    8bb6:	84 bf       	out	0x34, r24	; 52
    8bb8:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8bbc:	00 00       	nop
    8bbe:	23 96       	adiw	r28, 0x03	; 3
    8bc0:	cd bf       	out	0x3d, r28	; 61
    8bc2:	de bf       	out	0x3e, r29	; 62
    8bc4:	df 91       	pop	r29
    8bc6:	cf 91       	pop	r28
    8bc8:	08 95       	ret

00008bca <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    8bca:	cf 93       	push	r28
    8bcc:	df 93       	push	r29
    8bce:	00 d0       	rcall	.+0      	; 0x8bd0 <_Z21avr_eeprom_write_wordjj+0x6>
    8bd0:	00 d0       	rcall	.+0      	; 0x8bd2 <_Z21avr_eeprom_write_wordjj+0x8>
    8bd2:	cd b7       	in	r28, 0x3d	; 61
    8bd4:	de b7       	in	r29, 0x3e	; 62
    8bd6:	89 83       	std	Y+1, r24	; 0x01
    8bd8:	9a 83       	std	Y+2, r25	; 0x02
    8bda:	6b 83       	std	Y+3, r22	; 0x03
    8bdc:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8bde:	80 e0       	ldi	r24, 0x00	; 0
    8be0:	90 e1       	ldi	r25, 0x10	; 16
    8be2:	fc 01       	movw	r30, r24
    8be4:	82 81       	ldd	r24, Z+2	; 0x02
    8be6:	88 2f       	mov	r24, r24
    8be8:	90 e0       	ldi	r25, 0x00	; 0
    8bea:	82 70       	andi	r24, 0x02	; 2
    8bec:	99 27       	eor	r25, r25
    8bee:	21 e0       	ldi	r18, 0x01	; 1
    8bf0:	89 2b       	or	r24, r25
    8bf2:	09 f4       	brne	.+2      	; 0x8bf6 <_Z21avr_eeprom_write_wordjj+0x2c>
    8bf4:	20 e0       	ldi	r18, 0x00	; 0
    8bf6:	22 23       	and	r18, r18
    8bf8:	09 f0       	breq	.+2      	; 0x8bfc <_Z21avr_eeprom_write_wordjj+0x32>
    8bfa:	f1 cf       	rjmp	.-30     	; 0x8bde <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8bfc:	8d e9       	ldi	r24, 0x9D	; 157
    8bfe:	93 e1       	ldi	r25, 0x13	; 19
    8c00:	84 bf       	out	0x34, r24	; 52
    8c02:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8c06:	89 81       	ldd	r24, Y+1	; 0x01
    8c08:	9a 81       	ldd	r25, Y+2	; 0x02
    8c0a:	9c 5e       	subi	r25, 0xEC	; 236
    8c0c:	9c 01       	movw	r18, r24
    8c0e:	8b 81       	ldd	r24, Y+3	; 0x03
    8c10:	9c 81       	ldd	r25, Y+4	; 0x04
    8c12:	f9 01       	movw	r30, r18
    8c14:	80 83       	st	Z, r24
    8c16:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8c18:	8d e9       	ldi	r24, 0x9D	; 157
    8c1a:	90 e0       	ldi	r25, 0x00	; 0
    8c1c:	84 bf       	out	0x34, r24	; 52
    8c1e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8c22:	00 00       	nop
    8c24:	24 96       	adiw	r28, 0x04	; 4
    8c26:	cd bf       	out	0x3d, r28	; 61
    8c28:	de bf       	out	0x3e, r29	; 62
    8c2a:	df 91       	pop	r29
    8c2c:	cf 91       	pop	r28
    8c2e:	08 95       	ret

00008c30 <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    8c30:	cf 93       	push	r28
    8c32:	df 93       	push	r29
    8c34:	cd b7       	in	r28, 0x3d	; 61
    8c36:	de b7       	in	r29, 0x3e	; 62
    8c38:	26 97       	sbiw	r28, 0x06	; 6
    8c3a:	cd bf       	out	0x3d, r28	; 61
    8c3c:	de bf       	out	0x3e, r29	; 62
    8c3e:	89 83       	std	Y+1, r24	; 0x01
    8c40:	9a 83       	std	Y+2, r25	; 0x02
    8c42:	4b 83       	std	Y+3, r20	; 0x03
    8c44:	5c 83       	std	Y+4, r21	; 0x04
    8c46:	6d 83       	std	Y+5, r22	; 0x05
    8c48:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8c4a:	80 e0       	ldi	r24, 0x00	; 0
    8c4c:	90 e1       	ldi	r25, 0x10	; 16
    8c4e:	fc 01       	movw	r30, r24
    8c50:	82 81       	ldd	r24, Z+2	; 0x02
    8c52:	88 2f       	mov	r24, r24
    8c54:	90 e0       	ldi	r25, 0x00	; 0
    8c56:	82 70       	andi	r24, 0x02	; 2
    8c58:	99 27       	eor	r25, r25
    8c5a:	21 e0       	ldi	r18, 0x01	; 1
    8c5c:	89 2b       	or	r24, r25
    8c5e:	09 f4       	brne	.+2      	; 0x8c62 <_Z22avr_eeprom_write_dwordjm+0x32>
    8c60:	20 e0       	ldi	r18, 0x00	; 0
    8c62:	22 23       	and	r18, r18
    8c64:	09 f0       	breq	.+2      	; 0x8c68 <_Z22avr_eeprom_write_dwordjm+0x38>
    8c66:	f1 cf       	rjmp	.-30     	; 0x8c4a <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8c68:	8d e9       	ldi	r24, 0x9D	; 157
    8c6a:	93 e1       	ldi	r25, 0x13	; 19
    8c6c:	84 bf       	out	0x34, r24	; 52
    8c6e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8c72:	89 81       	ldd	r24, Y+1	; 0x01
    8c74:	9a 81       	ldd	r25, Y+2	; 0x02
    8c76:	9c 5e       	subi	r25, 0xEC	; 236
    8c78:	9c 01       	movw	r18, r24
    8c7a:	8b 81       	ldd	r24, Y+3	; 0x03
    8c7c:	9c 81       	ldd	r25, Y+4	; 0x04
    8c7e:	ad 81       	ldd	r26, Y+5	; 0x05
    8c80:	be 81       	ldd	r27, Y+6	; 0x06
    8c82:	f9 01       	movw	r30, r18
    8c84:	80 83       	st	Z, r24
    8c86:	91 83       	std	Z+1, r25	; 0x01
    8c88:	a2 83       	std	Z+2, r26	; 0x02
    8c8a:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8c8c:	8d e9       	ldi	r24, 0x9D	; 157
    8c8e:	90 e0       	ldi	r25, 0x00	; 0
    8c90:	84 bf       	out	0x34, r24	; 52
    8c92:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8c96:	00 00       	nop
    8c98:	26 96       	adiw	r28, 0x06	; 6
    8c9a:	cd bf       	out	0x3d, r28	; 61
    8c9c:	de bf       	out	0x3e, r29	; 62
    8c9e:	df 91       	pop	r29
    8ca0:	cf 91       	pop	r28
    8ca2:	08 95       	ret

00008ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8ca4:	cf 93       	push	r28
    8ca6:	df 93       	push	r29
    8ca8:	cd b7       	in	r28, 0x3d	; 61
    8caa:	de b7       	in	r29, 0x3e	; 62
    8cac:	65 97       	sbiw	r28, 0x15	; 21
    8cae:	cd bf       	out	0x3d, r28	; 61
    8cb0:	de bf       	out	0x3e, r29	; 62
    8cb2:	89 8b       	std	Y+17, r24	; 0x11
    8cb4:	9a 8b       	std	Y+18, r25	; 0x12
    8cb6:	6b 8b       	std	Y+19, r22	; 0x13
    8cb8:	4c 8b       	std	Y+20, r20	; 0x14
    8cba:	5d 8b       	std	Y+21, r21	; 0x15
	if(!val)
    8cbc:	8c 89       	ldd	r24, Y+20	; 0x14
    8cbe:	9d 89       	ldd	r25, Y+21	; 0x15
    8cc0:	89 2b       	or	r24, r25
    8cc2:	09 f4       	brne	.+2      	; 0x8cc6 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    8cc4:	4e c1       	rjmp	.+668    	; 0x8f62 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2be>
	{
		return;
	}

	switch(v)
    8cc6:	8b 89       	ldd	r24, Y+19	; 0x13
    8cc8:	88 2f       	mov	r24, r24
    8cca:	90 e0       	ldi	r25, 0x00	; 0
    8ccc:	09 2e       	mov	r0, r25
    8cce:	00 0c       	add	r0, r0
    8cd0:	aa 0b       	sbc	r26, r26
    8cd2:	bb 0b       	sbc	r27, r27
    8cd4:	40 e0       	ldi	r20, 0x00	; 0
    8cd6:	50 e0       	ldi	r21, 0x00	; 0
    8cd8:	21 e5       	ldi	r18, 0x51	; 81
    8cda:	30 e0       	ldi	r19, 0x00	; 0
    8cdc:	84 1b       	sub	r24, r20
    8cde:	95 0b       	sbc	r25, r21
    8ce0:	28 17       	cp	r18, r24
    8ce2:	39 07       	cpc	r19, r25
    8ce4:	08 f4       	brcc	.+2      	; 0x8ce8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    8ce6:	3f c1       	rjmp	.+638    	; 0x8f66 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c2>
    8ce8:	8b 57       	subi	r24, 0x7B	; 123
    8cea:	9f 4f       	sbci	r25, 0xFF	; 255
    8cec:	fc 01       	movw	r30, r24
    8cee:	0c 94 2d 7a 	jmp	0xf45a	; 0xf45a <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    8cf2:	8c 89       	ldd	r24, Y+20	; 0x14
    8cf4:	9d 89       	ldd	r25, Y+21	; 0x15
    8cf6:	fc 01       	movw	r30, r24
    8cf8:	80 81       	ld	r24, Z
    8cfa:	91 81       	ldd	r25, Z+1	; 0x01
    8cfc:	a2 81       	ldd	r26, Z+2	; 0x02
    8cfe:	b3 81       	ldd	r27, Z+3	; 0x03
    8d00:	ac 01       	movw	r20, r24
    8d02:	bd 01       	movw	r22, r26
    8d04:	80 e4       	ldi	r24, 0x40	; 64
    8d06:	90 e0       	ldi	r25, 0x00	; 0
    8d08:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8d0c:	2d c1       	rjmp	.+602    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    8d0e:	8c 89       	ldd	r24, Y+20	; 0x14
    8d10:	9d 89       	ldd	r25, Y+21	; 0x15
    8d12:	fc 01       	movw	r30, r24
    8d14:	80 81       	ld	r24, Z
    8d16:	91 81       	ldd	r25, Z+1	; 0x01
    8d18:	a2 81       	ldd	r26, Z+2	; 0x02
    8d1a:	b3 81       	ldd	r27, Z+3	; 0x03
    8d1c:	ac 01       	movw	r20, r24
    8d1e:	bd 01       	movw	r22, r26
    8d20:	84 e4       	ldi	r24, 0x44	; 68
    8d22:	90 e0       	ldi	r25, 0x00	; 0
    8d24:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8d28:	1f c1       	rjmp	.+574    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    8d2a:	8c 89       	ldd	r24, Y+20	; 0x14
    8d2c:	9d 89       	ldd	r25, Y+21	; 0x15
    8d2e:	fc 01       	movw	r30, r24
    8d30:	80 81       	ld	r24, Z
    8d32:	91 81       	ldd	r25, Z+1	; 0x01
    8d34:	a2 81       	ldd	r26, Z+2	; 0x02
    8d36:	b3 81       	ldd	r27, Z+3	; 0x03
    8d38:	bc 01       	movw	r22, r24
    8d3a:	88 e4       	ldi	r24, 0x48	; 72
    8d3c:	90 e0       	ldi	r25, 0x00	; 0
    8d3e:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8d42:	12 c1       	rjmp	.+548    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    8d44:	8c 89       	ldd	r24, Y+20	; 0x14
    8d46:	9d 89       	ldd	r25, Y+21	; 0x15
    8d48:	89 83       	std	Y+1, r24	; 0x01
    8d4a:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    8d4c:	89 81       	ldd	r24, Y+1	; 0x01
    8d4e:	9a 81       	ldd	r25, Y+2	; 0x02
    8d50:	9c 01       	movw	r18, r24
    8d52:	2f 5f       	subi	r18, 0xFF	; 255
    8d54:	3f 4f       	sbci	r19, 0xFF	; 255
    8d56:	29 83       	std	Y+1, r18	; 0x01
    8d58:	3a 83       	std	Y+2, r19	; 0x02
    8d5a:	fc 01       	movw	r30, r24
    8d5c:	80 81       	ld	r24, Z
    8d5e:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    8d60:	8a e0       	ldi	r24, 0x0A	; 10
    8d62:	90 e0       	ldi	r25, 0x00	; 0
    8d64:	8c 83       	std	Y+4, r24	; 0x04
    8d66:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    8d68:	8b 81       	ldd	r24, Y+3	; 0x03
    8d6a:	88 23       	and	r24, r24
    8d6c:	a9 f0       	breq	.+42     	; 0x8d98 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    8d6e:	8c 81       	ldd	r24, Y+4	; 0x04
    8d70:	9d 81       	ldd	r25, Y+5	; 0x05
    8d72:	9c 01       	movw	r18, r24
    8d74:	2f 5f       	subi	r18, 0xFF	; 255
    8d76:	3f 4f       	sbci	r19, 0xFF	; 255
    8d78:	2c 83       	std	Y+4, r18	; 0x04
    8d7a:	3d 83       	std	Y+5, r19	; 0x05
    8d7c:	6b 81       	ldd	r22, Y+3	; 0x03
    8d7e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8d82:	89 81       	ldd	r24, Y+1	; 0x01
    8d84:	9a 81       	ldd	r25, Y+2	; 0x02
    8d86:	9c 01       	movw	r18, r24
    8d88:	2f 5f       	subi	r18, 0xFF	; 255
    8d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    8d8c:	29 83       	std	Y+1, r18	; 0x01
    8d8e:	3a 83       	std	Y+2, r19	; 0x02
    8d90:	fc 01       	movw	r30, r24
    8d92:	80 81       	ld	r24, Z
    8d94:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    8d96:	e8 cf       	rjmp	.-48     	; 0x8d68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8d98:	8c 81       	ldd	r24, Y+4	; 0x04
    8d9a:	9d 81       	ldd	r25, Y+5	; 0x05
    8d9c:	60 e0       	ldi	r22, 0x00	; 0
    8d9e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8da2:	e2 c0       	rjmp	.+452    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Pattern_text:
		{
			char* char_addr = (char*)val;
    8da4:	8c 89       	ldd	r24, Y+20	; 0x14
    8da6:	9d 89       	ldd	r25, Y+21	; 0x15
    8da8:	8e 83       	std	Y+6, r24	; 0x06
    8daa:	9f 83       	std	Y+7, r25	; 0x07
			char c = *char_addr++;
    8dac:	8e 81       	ldd	r24, Y+6	; 0x06
    8dae:	9f 81       	ldd	r25, Y+7	; 0x07
    8db0:	9c 01       	movw	r18, r24
    8db2:	2f 5f       	subi	r18, 0xFF	; 255
    8db4:	3f 4f       	sbci	r19, 0xFF	; 255
    8db6:	2e 83       	std	Y+6, r18	; 0x06
    8db8:	3f 83       	std	Y+7, r19	; 0x07
    8dba:	fc 01       	movw	r30, r24
    8dbc:	80 81       	ld	r24, Z
    8dbe:	88 87       	std	Y+8, r24	; 0x08
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;
    8dc0:	8f e1       	ldi	r24, 0x1F	; 31
    8dc2:	90 e0       	ldi	r25, 0x00	; 0
    8dc4:	89 87       	std	Y+9, r24	; 0x09
    8dc6:	9a 87       	std	Y+10, r25	; 0x0a

			while(c)
    8dc8:	88 85       	ldd	r24, Y+8	; 0x08
    8dca:	88 23       	and	r24, r24
    8dcc:	a9 f0       	breq	.+42     	; 0x8df8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x154>
			{
				avr_eeprom_write_byte(j++, c);
    8dce:	89 85       	ldd	r24, Y+9	; 0x09
    8dd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    8dd2:	9c 01       	movw	r18, r24
    8dd4:	2f 5f       	subi	r18, 0xFF	; 255
    8dd6:	3f 4f       	sbci	r19, 0xFF	; 255
    8dd8:	29 87       	std	Y+9, r18	; 0x09
    8dda:	3a 87       	std	Y+10, r19	; 0x0a
    8ddc:	68 85       	ldd	r22, Y+8	; 0x08
    8dde:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    8de2:	8e 81       	ldd	r24, Y+6	; 0x06
    8de4:	9f 81       	ldd	r25, Y+7	; 0x07
    8de6:	9c 01       	movw	r18, r24
    8de8:	2f 5f       	subi	r18, 0xFF	; 255
    8dea:	3f 4f       	sbci	r19, 0xFF	; 255
    8dec:	2e 83       	std	Y+6, r18	; 0x06
    8dee:	3f 83       	std	Y+7, r19	; 0x07
    8df0:	fc 01       	movw	r30, r24
    8df2:	80 81       	ld	r24, Z
    8df4:	88 87       	std	Y+8, r24	; 0x08
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)Pattern_text;

			while(c)
    8df6:	e8 cf       	rjmp	.-48     	; 0x8dc8 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8df8:	89 85       	ldd	r24, Y+9	; 0x09
    8dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    8dfc:	60 e0       	ldi	r22, 0x00	; 0
    8dfe:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e02:	b2 c0       	rjmp	.+356    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    8e04:	8c 89       	ldd	r24, Y+20	; 0x14
    8e06:	9d 89       	ldd	r25, Y+21	; 0x15
    8e08:	8b 87       	std	Y+11, r24	; 0x0b
    8e0a:	9c 87       	std	Y+12, r25	; 0x0c
			uint8_t c = *uint8_addr++;
    8e0c:	8b 85       	ldd	r24, Y+11	; 0x0b
    8e0e:	9c 85       	ldd	r25, Y+12	; 0x0c
    8e10:	9c 01       	movw	r18, r24
    8e12:	2f 5f       	subi	r18, 0xFF	; 255
    8e14:	3f 4f       	sbci	r19, 0xFF	; 255
    8e16:	2b 87       	std	Y+11, r18	; 0x0b
    8e18:	3c 87       	std	Y+12, r19	; 0x0c
    8e1a:	fc 01       	movw	r30, r24
    8e1c:	80 81       	ld	r24, Z
    8e1e:	8d 87       	std	Y+13, r24	; 0x0d
			int i = 0;
    8e20:	1f 86       	std	Y+15, r1	; 0x0f
    8e22:	18 8a       	std	Y+16, r1	; 0x10
			uint8_t j = (uint8_t)UnlockCode;
    8e24:	84 e3       	ldi	r24, 0x34	; 52
    8e26:	8e 87       	std	Y+14, r24	; 0x0e
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8e28:	8d 85       	ldd	r24, Y+13	; 0x0d
    8e2a:	88 23       	and	r24, r24
    8e2c:	c1 f0       	breq	.+48     	; 0x8e5e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
    8e2e:	8f 85       	ldd	r24, Y+15	; 0x0f
    8e30:	98 89       	ldd	r25, Y+16	; 0x10
    8e32:	08 97       	sbiw	r24, 0x08	; 8
    8e34:	a4 f4       	brge	.+40     	; 0x8e5e <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1ba>
			{
				avr_eeprom_write_byte(j++, c);
    8e36:	8e 85       	ldd	r24, Y+14	; 0x0e
    8e38:	91 e0       	ldi	r25, 0x01	; 1
    8e3a:	98 0f       	add	r25, r24
    8e3c:	9e 87       	std	Y+14, r25	; 0x0e
    8e3e:	88 2f       	mov	r24, r24
    8e40:	90 e0       	ldi	r25, 0x00	; 0
    8e42:	6d 85       	ldd	r22, Y+13	; 0x0d
    8e44:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    8e48:	8b 85       	ldd	r24, Y+11	; 0x0b
    8e4a:	9c 85       	ldd	r25, Y+12	; 0x0c
    8e4c:	9c 01       	movw	r18, r24
    8e4e:	2f 5f       	subi	r18, 0xFF	; 255
    8e50:	3f 4f       	sbci	r19, 0xFF	; 255
    8e52:	2b 87       	std	Y+11, r18	; 0x0b
    8e54:	3c 87       	std	Y+12, r19	; 0x0c
    8e56:	fc 01       	movw	r30, r24
    8e58:	80 81       	ld	r24, Z
    8e5a:	8d 87       	std	Y+13, r24	; 0x0d
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    8e5c:	e5 cf       	rjmp	.-54     	; 0x8e28 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x184>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8e5e:	8e 85       	ldd	r24, Y+14	; 0x0e
    8e60:	88 2f       	mov	r24, r24
    8e62:	90 e0       	ldi	r25, 0x00	; 0
    8e64:	60 e0       	ldi	r22, 0x00	; 0
    8e66:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e6a:	7e c0       	rjmp	.+252    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    8e6c:	8c 89       	ldd	r24, Y+20	; 0x14
    8e6e:	9d 89       	ldd	r25, Y+21	; 0x15
    8e70:	fc 01       	movw	r30, r24
    8e72:	80 81       	ld	r24, Z
    8e74:	68 2f       	mov	r22, r24
    8e76:	8d e3       	ldi	r24, 0x3D	; 61
    8e78:	90 e0       	ldi	r25, 0x00	; 0
    8e7a:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e7e:	74 c0       	rjmp	.+232    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    8e80:	8c 89       	ldd	r24, Y+20	; 0x14
    8e82:	9d 89       	ldd	r25, Y+21	; 0x15
    8e84:	fc 01       	movw	r30, r24
    8e86:	80 81       	ld	r24, Z
    8e88:	68 2f       	mov	r22, r24
    8e8a:	8e e3       	ldi	r24, 0x3E	; 62
    8e8c:	90 e0       	ldi	r25, 0x00	; 0
    8e8e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8e92:	6a c0       	rjmp	.+212    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    8e94:	8c 89       	ldd	r24, Y+20	; 0x14
    8e96:	9d 89       	ldd	r25, Y+21	; 0x15
    8e98:	fc 01       	movw	r30, r24
    8e9a:	80 81       	ld	r24, Z
    8e9c:	91 81       	ldd	r25, Z+1	; 0x01
    8e9e:	a2 81       	ldd	r26, Z+2	; 0x02
    8ea0:	b3 81       	ldd	r27, Z+3	; 0x03
    8ea2:	ac 01       	movw	r20, r24
    8ea4:	bd 01       	movw	r22, r26
    8ea6:	82 e0       	ldi	r24, 0x02	; 2
    8ea8:	90 e0       	ldi	r25, 0x00	; 0
    8eaa:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8eae:	5c c0       	rjmp	.+184    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    8eb0:	8c 89       	ldd	r24, Y+20	; 0x14
    8eb2:	9d 89       	ldd	r25, Y+21	; 0x15
    8eb4:	fc 01       	movw	r30, r24
    8eb6:	80 81       	ld	r24, Z
    8eb8:	91 81       	ldd	r25, Z+1	; 0x01
    8eba:	a2 81       	ldd	r26, Z+2	; 0x02
    8ebc:	b3 81       	ldd	r27, Z+3	; 0x03
    8ebe:	ac 01       	movw	r20, r24
    8ec0:	bd 01       	movw	r22, r26
    8ec2:	86 e0       	ldi	r24, 0x06	; 6
    8ec4:	90 e0       	ldi	r25, 0x00	; 0
    8ec6:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8eca:	4e c0       	rjmp	.+156    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    8ecc:	8c 89       	ldd	r24, Y+20	; 0x14
    8ece:	9d 89       	ldd	r25, Y+21	; 0x15
    8ed0:	fc 01       	movw	r30, r24
    8ed2:	80 81       	ld	r24, Z
    8ed4:	68 2f       	mov	r22, r24
    8ed6:	8f e3       	ldi	r24, 0x3F	; 63
    8ed8:	90 e0       	ldi	r25, 0x00	; 0
    8eda:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8ede:	44 c0       	rjmp	.+136    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Pattern_Code_Speed:
		{
			avr_eeprom_write_byte(Pattern_Code_Speed, *(uint8_t*)val);
    8ee0:	8c 89       	ldd	r24, Y+20	; 0x14
    8ee2:	9d 89       	ldd	r25, Y+21	; 0x15
    8ee4:	fc 01       	movw	r30, r24
    8ee6:	80 81       	ld	r24, Z
    8ee8:	68 2f       	mov	r22, r24
    8eea:	8a e4       	ldi	r24, 0x4A	; 74
    8eec:	90 e0       	ldi	r25, 0x00	; 0
    8eee:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8ef2:	3a c0       	rjmp	.+116    	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Off_Air_Seconds:
		{
			avr_eeprom_write_word(Off_Air_Seconds, *(uint16_t*)val);
    8ef4:	8c 89       	ldd	r24, Y+20	; 0x14
    8ef6:	9d 89       	ldd	r25, Y+21	; 0x15
    8ef8:	fc 01       	movw	r30, r24
    8efa:	80 81       	ld	r24, Z
    8efc:	91 81       	ldd	r25, Z+1	; 0x01
    8efe:	bc 01       	movw	r22, r24
    8f00:	8b e4       	ldi	r24, 0x4B	; 75
    8f02:	90 e0       	ldi	r25, 0x00	; 0
    8f04:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f08:	2f c0       	rjmp	.+94     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case On_Air_Seconds:
		{
			avr_eeprom_write_word(On_Air_Seconds, *(uint16_t*)val);
    8f0a:	8c 89       	ldd	r24, Y+20	; 0x14
    8f0c:	9d 89       	ldd	r25, Y+21	; 0x15
    8f0e:	fc 01       	movw	r30, r24
    8f10:	80 81       	ld	r24, Z
    8f12:	91 81       	ldd	r25, Z+1	; 0x01
    8f14:	bc 01       	movw	r22, r24
    8f16:	8d e4       	ldi	r24, 0x4D	; 77
    8f18:	90 e0       	ldi	r25, 0x00	; 0
    8f1a:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f1e:	24 c0       	rjmp	.+72     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case ID_Period_Seconds:
		{
			avr_eeprom_write_word(ID_Period_Seconds, *(uint16_t*)val);
    8f20:	8c 89       	ldd	r24, Y+20	; 0x14
    8f22:	9d 89       	ldd	r25, Y+21	; 0x15
    8f24:	fc 01       	movw	r30, r24
    8f26:	80 81       	ld	r24, Z
    8f28:	91 81       	ldd	r25, Z+1	; 0x01
    8f2a:	bc 01       	movw	r22, r24
    8f2c:	8f e4       	ldi	r24, 0x4F	; 79
    8f2e:	90 e0       	ldi	r25, 0x00	; 0
    8f30:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f34:	19 c0       	rjmp	.+50     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>
		
		case Intra_Cycle_Delay_Seconds:
		{
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, *(uint16_t*)val);
    8f36:	8c 89       	ldd	r24, Y+20	; 0x14
    8f38:	9d 89       	ldd	r25, Y+21	; 0x15
    8f3a:	fc 01       	movw	r30, r24
    8f3c:	80 81       	ld	r24, Z
    8f3e:	91 81       	ldd	r25, Z+1	; 0x01
    8f40:	bc 01       	movw	r22, r24
    8f42:	81 e5       	ldi	r24, 0x51	; 81
    8f44:	90 e0       	ldi	r25, 0x00	; 0
    8f46:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f4a:	0e c0       	rjmp	.+28     	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    8f4c:	8c 89       	ldd	r24, Y+20	; 0x14
    8f4e:	9d 89       	ldd	r25, Y+21	; 0x15
    8f50:	fc 01       	movw	r30, r24
    8f52:	80 81       	ld	r24, Z
    8f54:	91 81       	ldd	r25, Z+1	; 0x01
    8f56:	bc 01       	movw	r22, r24
    8f58:	80 e0       	ldi	r24, 0x00	; 0
    8f5a:	90 e0       	ldi	r25, 0x00	; 0
    8f5c:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8f60:	03 c0       	rjmp	.+6      	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    8f62:	00 00       	nop
    8f64:	01 c0       	rjmp	.+2      	; 0x8f68 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x2c4>

		default:
		{

		}
		break;
    8f66:	00 00       	nop
	}
}
    8f68:	65 96       	adiw	r28, 0x15	; 21
    8f6a:	cd bf       	out	0x3d, r28	; 61
    8f6c:	de bf       	out	0x3e, r29	; 62
    8f6e:	df 91       	pop	r29
    8f70:	cf 91       	pop	r28
    8f72:	08 95       	ret

00008f74 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    8f74:	0f 93       	push	r16
    8f76:	1f 93       	push	r17
    8f78:	cf 93       	push	r28
    8f7a:	df 93       	push	r29
    8f7c:	00 d0       	rcall	.+0      	; 0x8f7e <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    8f7e:	00 d0       	rcall	.+0      	; 0x8f80 <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    8f80:	cd b7       	in	r28, 0x3d	; 61
    8f82:	de b7       	in	r29, 0x3e	; 62
    8f84:	8b 83       	std	Y+3, r24	; 0x03
    8f86:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    8f88:	8d e3       	ldi	r24, 0x3D	; 61
    8f8a:	90 e0       	ldi	r25, 0x00	; 0
    8f8c:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    8f90:	28 2f       	mov	r18, r24
    8f92:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    8f96:	81 e0       	ldi	r24, 0x01	; 1
    8f98:	29 17       	cp	r18, r25
    8f9a:	09 f4       	brne	.+2      	; 0x8f9e <_ZN13EepromManager13saveAllEEPROMEv+0x2a>
    8f9c:	80 e0       	ldi	r24, 0x00	; 0
    8f9e:	88 23       	and	r24, r24
    8fa0:	39 f0       	breq	.+14     	; 0x8fb0 <_ZN13EepromManager13saveAllEEPROMEv+0x3c>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    8fa2:	8b 81       	ldd	r24, Y+3	; 0x03
    8fa4:	9c 81       	ldd	r25, Y+4	; 0x04
    8fa6:	4b e0       	ldi	r20, 0x0B	; 11
    8fa8:	50 e4       	ldi	r21, 0x40	; 64
    8faa:	6d e3       	ldi	r22, 0x3D	; 61
    8fac:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    8fb0:	8e e3       	ldi	r24, 0x3E	; 62
    8fb2:	90 e0       	ldi	r25, 0x00	; 0
    8fb4:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    8fb8:	28 2f       	mov	r18, r24
    8fba:	90 91 22 40 	lds	r25, 0x4022	; 0x804022 <g_fox>
    8fbe:	81 e0       	ldi	r24, 0x01	; 1
    8fc0:	29 17       	cp	r18, r25
    8fc2:	09 f4       	brne	.+2      	; 0x8fc6 <_ZN13EepromManager13saveAllEEPROMEv+0x52>
    8fc4:	80 e0       	ldi	r24, 0x00	; 0
    8fc6:	88 23       	and	r24, r24
    8fc8:	39 f0       	breq	.+14     	; 0x8fd8 <_ZN13EepromManager13saveAllEEPROMEv+0x64>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    8fca:	8b 81       	ldd	r24, Y+3	; 0x03
    8fcc:	9c 81       	ldd	r25, Y+4	; 0x04
    8fce:	42 e2       	ldi	r20, 0x22	; 34
    8fd0:	50 e4       	ldi	r21, 0x40	; 64
    8fd2:	6e e3       	ldi	r22, 0x3E	; 62
    8fd4:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    8fd8:	82 e0       	ldi	r24, 0x02	; 2
    8fda:	90 e0       	ldi	r25, 0x00	; 0
    8fdc:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    8fe0:	9b 01       	movw	r18, r22
    8fe2:	ac 01       	movw	r20, r24
    8fe4:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    8fe8:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    8fec:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    8ff0:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    8ff4:	61 e0       	ldi	r22, 0x01	; 1
    8ff6:	28 17       	cp	r18, r24
    8ff8:	39 07       	cpc	r19, r25
    8ffa:	4a 07       	cpc	r20, r26
    8ffc:	5b 07       	cpc	r21, r27
    8ffe:	09 f4       	brne	.+2      	; 0x9002 <_ZN13EepromManager13saveAllEEPROMEv+0x8e>
    9000:	60 e0       	ldi	r22, 0x00	; 0
    9002:	66 23       	and	r22, r22
    9004:	39 f0       	breq	.+14     	; 0x9014 <_ZN13EepromManager13saveAllEEPROMEv+0xa0>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    9006:	8b 81       	ldd	r24, Y+3	; 0x03
    9008:	9c 81       	ldd	r25, Y+4	; 0x04
    900a:	4c e8       	ldi	r20, 0x8C	; 140
    900c:	57 e4       	ldi	r21, 0x47	; 71
    900e:	62 e0       	ldi	r22, 0x02	; 2
    9010:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    9014:	86 e0       	ldi	r24, 0x06	; 6
    9016:	90 e0       	ldi	r25, 0x00	; 0
    9018:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    901c:	9b 01       	movw	r18, r22
    901e:	ac 01       	movw	r20, r24
    9020:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    9024:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    9028:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    902c:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    9030:	61 e0       	ldi	r22, 0x01	; 1
    9032:	28 17       	cp	r18, r24
    9034:	39 07       	cpc	r19, r25
    9036:	4a 07       	cpc	r20, r26
    9038:	5b 07       	cpc	r21, r27
    903a:	09 f4       	brne	.+2      	; 0x903e <_ZN13EepromManager13saveAllEEPROMEv+0xca>
    903c:	60 e0       	ldi	r22, 0x00	; 0
    903e:	66 23       	and	r22, r22
    9040:	39 f0       	breq	.+14     	; 0x9050 <_ZN13EepromManager13saveAllEEPROMEv+0xdc>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    9042:	8b 81       	ldd	r24, Y+3	; 0x03
    9044:	9c 81       	ldd	r25, Y+4	; 0x04
    9046:	40 e9       	ldi	r20, 0x90	; 144
    9048:	57 e4       	ldi	r21, 0x47	; 71
    904a:	66 e0       	ldi	r22, 0x06	; 6
    904c:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    9050:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    9054:	08 2f       	mov	r16, r24
    9056:	88 0f       	add	r24, r24
    9058:	11 0b       	sbc	r17, r17
    905a:	8f e3       	ldi	r24, 0x3F	; 63
    905c:	90 e0       	ldi	r25, 0x00	; 0
    905e:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    9062:	88 2f       	mov	r24, r24
    9064:	90 e0       	ldi	r25, 0x00	; 0
    9066:	21 e0       	ldi	r18, 0x01	; 1
    9068:	08 17       	cp	r16, r24
    906a:	19 07       	cpc	r17, r25
    906c:	09 f4       	brne	.+2      	; 0x9070 <_ZN13EepromManager13saveAllEEPROMEv+0xfc>
    906e:	20 e0       	ldi	r18, 0x00	; 0
    9070:	22 23       	and	r18, r18
    9072:	39 f0       	breq	.+14     	; 0x9082 <_ZN13EepromManager13saveAllEEPROMEv+0x10e>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    9074:	8b 81       	ldd	r24, Y+3	; 0x03
    9076:	9c 81       	ldd	r25, Y+4	; 0x04
    9078:	4c ea       	ldi	r20, 0xAC	; 172
    907a:	57 e4       	ldi	r21, 0x47	; 71
    907c:	6f e3       	ldi	r22, 0x3F	; 63
    907e:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9082:	19 82       	std	Y+1, r1	; 0x01
    9084:	1a 82       	std	Y+2, r1	; 0x02
    9086:	89 81       	ldd	r24, Y+1	; 0x01
    9088:	9a 81       	ldd	r25, Y+2	; 0x02
    908a:	44 97       	sbiw	r24, 0x14	; 20
    908c:	e8 f4       	brcc	.+58     	; 0x90c8 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    908e:	89 81       	ldd	r24, Y+1	; 0x01
    9090:	9a 81       	ldd	r25, Y+2	; 0x02
    9092:	8d 58       	subi	r24, 0x8D	; 141
    9094:	98 4b       	sbci	r25, 0xB8	; 184
    9096:	fc 01       	movw	r30, r24
    9098:	10 81       	ld	r17, Z
    909a:	89 81       	ldd	r24, Y+1	; 0x01
    909c:	9a 81       	ldd	r25, Y+2	; 0x02
    909e:	0a 96       	adiw	r24, 0x0a	; 10
    90a0:	80 50       	subi	r24, 0x00	; 0
    90a2:	90 40       	sbci	r25, 0x00	; 0
    90a4:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    90a8:	18 17       	cp	r17, r24
    90aa:	41 f0       	breq	.+16     	; 0x90bc <_ZN13EepromManager13saveAllEEPROMEv+0x148>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    90ac:	8b 81       	ldd	r24, Y+3	; 0x03
    90ae:	9c 81       	ldd	r25, Y+4	; 0x04
    90b0:	43 e7       	ldi	r20, 0x73	; 115
    90b2:	57 e4       	ldi	r21, 0x47	; 71
    90b4:	6a e0       	ldi	r22, 0x0A	; 10
    90b6:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    90ba:	06 c0       	rjmp	.+12     	; 0x90c8 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    90bc:	89 81       	ldd	r24, Y+1	; 0x01
    90be:	9a 81       	ldd	r25, Y+2	; 0x02
    90c0:	01 96       	adiw	r24, 0x01	; 1
    90c2:	89 83       	std	Y+1, r24	; 0x01
    90c4:	9a 83       	std	Y+2, r25	; 0x02
    90c6:	df cf       	rjmp	.-66     	; 0x9086 <_ZN13EepromManager13saveAllEEPROMEv+0x112>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    90c8:	19 82       	std	Y+1, r1	; 0x01
    90ca:	1a 82       	std	Y+2, r1	; 0x02
    90cc:	89 81       	ldd	r24, Y+1	; 0x01
    90ce:	9a 81       	ldd	r25, Y+2	; 0x02
    90d0:	44 97       	sbiw	r24, 0x14	; 20
    90d2:	e8 f4       	brcc	.+58     	; 0x910e <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
	{
		if(g_messages_text[PATTERN_TEXT][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i]))))
    90d4:	89 81       	ldd	r24, Y+1	; 0x01
    90d6:	9a 81       	ldd	r25, Y+2	; 0x02
    90d8:	82 5a       	subi	r24, 0xA2	; 162
    90da:	98 4b       	sbci	r25, 0xB8	; 184
    90dc:	fc 01       	movw	r30, r24
    90de:	10 81       	ld	r17, Z
    90e0:	89 81       	ldd	r24, Y+1	; 0x01
    90e2:	9a 81       	ldd	r25, Y+2	; 0x02
    90e4:	4f 96       	adiw	r24, 0x1f	; 31
    90e6:	80 50       	subi	r24, 0x00	; 0
    90e8:	90 40       	sbci	r25, 0x00	; 0
    90ea:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    90ee:	18 17       	cp	r17, r24
    90f0:	41 f0       	breq	.+16     	; 0x9102 <_ZN13EepromManager13saveAllEEPROMEv+0x18e>
		{
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
    90f2:	8b 81       	ldd	r24, Y+3	; 0x03
    90f4:	9c 81       	ldd	r25, Y+4	; 0x04
    90f6:	4e e5       	ldi	r20, 0x5E	; 94
    90f8:	57 e4       	ldi	r21, 0x47	; 71
    90fa:	6f e1       	ldi	r22, 0x1F	; 31
    90fc:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    9100:	06 c0       	rjmp	.+12     	; 0x910e <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9102:	89 81       	ldd	r24, Y+1	; 0x01
    9104:	9a 81       	ldd	r25, Y+2	; 0x02
    9106:	01 96       	adiw	r24, 0x01	; 1
    9108:	89 83       	std	Y+1, r24	; 0x01
    910a:	9a 83       	std	Y+2, r25	; 0x02
    910c:	df cf       	rjmp	.-66     	; 0x90cc <_ZN13EepromManager13saveAllEEPROMEv+0x158>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    910e:	19 82       	std	Y+1, r1	; 0x01
    9110:	1a 82       	std	Y+2, r1	; 0x02
    9112:	89 81       	ldd	r24, Y+1	; 0x01
    9114:	9a 81       	ldd	r25, Y+2	; 0x02
    9116:	08 97       	sbiw	r24, 0x08	; 8
    9118:	e8 f4       	brcc	.+58     	; 0x9154 <_ZN13EepromManager13saveAllEEPROMEv+0x1e0>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    911a:	89 81       	ldd	r24, Y+1	; 0x01
    911c:	9a 81       	ldd	r25, Y+2	; 0x02
    911e:	83 55       	subi	r24, 0x53	; 83
    9120:	98 4b       	sbci	r25, 0xB8	; 184
    9122:	fc 01       	movw	r30, r24
    9124:	10 81       	ld	r17, Z
    9126:	89 81       	ldd	r24, Y+1	; 0x01
    9128:	9a 81       	ldd	r25, Y+2	; 0x02
    912a:	c4 96       	adiw	r24, 0x34	; 52
    912c:	80 50       	subi	r24, 0x00	; 0
    912e:	90 40       	sbci	r25, 0x00	; 0
    9130:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    9134:	18 17       	cp	r17, r24
    9136:	41 f0       	breq	.+16     	; 0x9148 <_ZN13EepromManager13saveAllEEPROMEv+0x1d4>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    9138:	8b 81       	ldd	r24, Y+3	; 0x03
    913a:	9c 81       	ldd	r25, Y+4	; 0x04
    913c:	4d ea       	ldi	r20, 0xAD	; 173
    913e:	57 e4       	ldi	r21, 0x47	; 71
    9140:	64 e3       	ldi	r22, 0x34	; 52
    9142:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    9146:	06 c0       	rjmp	.+12     	; 0x9154 <_ZN13EepromManager13saveAllEEPROMEv+0x1e0>
			updateEEPROMVar(Pattern_text, (void*)g_messages_text[PATTERN_TEXT]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9148:	89 81       	ldd	r24, Y+1	; 0x01
    914a:	9a 81       	ldd	r25, Y+2	; 0x02
    914c:	01 96       	adiw	r24, 0x01	; 1
    914e:	89 83       	std	Y+1, r24	; 0x01
    9150:	9a 83       	std	Y+2, r25	; 0x02
    9152:	df cf       	rjmp	.-66     	; 0x9112 <_ZN13EepromManager13saveAllEEPROMEv+0x19e>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    9154:	80 e4       	ldi	r24, 0x40	; 64
    9156:	90 e0       	ldi	r25, 0x00	; 0
    9158:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    915c:	9b 01       	movw	r18, r22
    915e:	ac 01       	movw	r20, r24
    9160:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    9164:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    9168:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    916c:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
    9170:	28 17       	cp	r18, r24
    9172:	39 07       	cpc	r19, r25
    9174:	4a 07       	cpc	r20, r26
    9176:	5b 07       	cpc	r21, r27
    9178:	39 f0       	breq	.+14     	; 0x9188 <_ZN13EepromManager13saveAllEEPROMEv+0x214>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    917a:	8b 81       	ldd	r24, Y+3	; 0x03
    917c:	9c 81       	ldd	r25, Y+4	; 0x04
    917e:	46 e3       	ldi	r20, 0x36	; 54
    9180:	50 e4       	ldi	r21, 0x40	; 64
    9182:	60 e4       	ldi	r22, 0x40	; 64
    9184:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    9188:	84 e4       	ldi	r24, 0x44	; 68
    918a:	90 e0       	ldi	r25, 0x00	; 0
    918c:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    9190:	9b 01       	movw	r18, r22
    9192:	ac 01       	movw	r20, r24
    9194:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <g_rtty_offset>
    9198:	90 91 3d 40 	lds	r25, 0x403D	; 0x80403d <g_rtty_offset+0x1>
    919c:	a0 91 3e 40 	lds	r26, 0x403E	; 0x80403e <g_rtty_offset+0x2>
    91a0:	b0 91 3f 40 	lds	r27, 0x403F	; 0x80403f <g_rtty_offset+0x3>
    91a4:	28 17       	cp	r18, r24
    91a6:	39 07       	cpc	r19, r25
    91a8:	4a 07       	cpc	r20, r26
    91aa:	5b 07       	cpc	r21, r27
    91ac:	39 f0       	breq	.+14     	; 0x91bc <_ZN13EepromManager13saveAllEEPROMEv+0x248>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    91ae:	8b 81       	ldd	r24, Y+3	; 0x03
    91b0:	9c 81       	ldd	r25, Y+4	; 0x04
    91b2:	4c e3       	ldi	r20, 0x3C	; 60
    91b4:	50 e4       	ldi	r21, 0x40	; 64
    91b6:	64 e4       	ldi	r22, 0x44	; 68
    91b8:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    91bc:	88 e4       	ldi	r24, 0x48	; 72
    91be:	90 e0       	ldi	r25, 0x00	; 0
    91c0:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    91c4:	9c 01       	movw	r18, r24
    91c6:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    91ca:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
    91ce:	28 17       	cp	r18, r24
    91d0:	39 07       	cpc	r19, r25
    91d2:	39 f0       	breq	.+14     	; 0x91e2 <_ZN13EepromManager13saveAllEEPROMEv+0x26e>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    91d4:	8b 81       	ldd	r24, Y+3	; 0x03
    91d6:	9c 81       	ldd	r25, Y+4	; 0x04
    91d8:	4a e3       	ldi	r20, 0x3A	; 58
    91da:	50 e4       	ldi	r21, 0x40	; 64
    91dc:	68 e4       	ldi	r22, 0x48	; 72
    91de:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_pattern_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.pattern_codespeed)))
    91e2:	8a e4       	ldi	r24, 0x4A	; 74
    91e4:	90 e0       	ldi	r25, 0x00	; 0
    91e6:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    91ea:	28 2f       	mov	r18, r24
    91ec:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    91f0:	81 e0       	ldi	r24, 0x01	; 1
    91f2:	29 17       	cp	r18, r25
    91f4:	09 f4       	brne	.+2      	; 0x91f8 <_ZN13EepromManager13saveAllEEPROMEv+0x284>
    91f6:	80 e0       	ldi	r24, 0x00	; 0
    91f8:	88 23       	and	r24, r24
    91fa:	39 f0       	breq	.+14     	; 0x920a <_ZN13EepromManager13saveAllEEPROMEv+0x296>
	{
		updateEEPROMVar(Pattern_Code_Speed, (void*)&g_pattern_codespeed);
    91fc:	8b 81       	ldd	r24, Y+3	; 0x03
    91fe:	9c 81       	ldd	r25, Y+4	; 0x04
    9200:	4c e0       	ldi	r20, 0x0C	; 12
    9202:	50 e4       	ldi	r21, 0x40	; 64
    9204:	6a e4       	ldi	r22, 0x4A	; 74
    9206:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}

	if(g_off_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.off_air_seconds)))
    920a:	8b e4       	ldi	r24, 0x4B	; 75
    920c:	90 e0       	ldi	r25, 0x00	; 0
    920e:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    9212:	9c 01       	movw	r18, r24
    9214:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    9218:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    921c:	41 e0       	ldi	r20, 0x01	; 1
    921e:	28 17       	cp	r18, r24
    9220:	39 07       	cpc	r19, r25
    9222:	09 f4       	brne	.+2      	; 0x9226 <_ZN13EepromManager13saveAllEEPROMEv+0x2b2>
    9224:	40 e0       	ldi	r20, 0x00	; 0
    9226:	44 23       	and	r20, r20
    9228:	39 f0       	breq	.+14     	; 0x9238 <_ZN13EepromManager13saveAllEEPROMEv+0x2c4>
	{
		updateEEPROMVar(Off_Air_Seconds, (void*)&g_off_air_seconds);
    922a:	8b 81       	ldd	r24, Y+3	; 0x03
    922c:	9c 81       	ldd	r25, Y+4	; 0x04
    922e:	4f e0       	ldi	r20, 0x0F	; 15
    9230:	50 e4       	ldi	r21, 0x40	; 64
    9232:	6b e4       	ldi	r22, 0x4B	; 75
    9234:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_on_air_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.on_air_seconds)))
    9238:	8d e4       	ldi	r24, 0x4D	; 77
    923a:	90 e0       	ldi	r25, 0x00	; 0
    923c:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    9240:	9c 01       	movw	r18, r24
    9242:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    9246:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    924a:	41 e0       	ldi	r20, 0x01	; 1
    924c:	28 17       	cp	r18, r24
    924e:	39 07       	cpc	r19, r25
    9250:	09 f4       	brne	.+2      	; 0x9254 <_ZN13EepromManager13saveAllEEPROMEv+0x2e0>
    9252:	40 e0       	ldi	r20, 0x00	; 0
    9254:	44 23       	and	r20, r20
    9256:	39 f0       	breq	.+14     	; 0x9266 <_ZN13EepromManager13saveAllEEPROMEv+0x2f2>
	{
		updateEEPROMVar(On_Air_Seconds, (void*)&g_on_air_seconds);
    9258:	8b 81       	ldd	r24, Y+3	; 0x03
    925a:	9c 81       	ldd	r25, Y+4	; 0x04
    925c:	4d e0       	ldi	r20, 0x0D	; 13
    925e:	50 e4       	ldi	r21, 0x40	; 64
    9260:	6d e4       	ldi	r22, 0x4D	; 77
    9262:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_ID_period_seconds != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.ID_period_seconds)))
    9266:	8f e4       	ldi	r24, 0x4F	; 79
    9268:	90 e0       	ldi	r25, 0x00	; 0
    926a:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    926e:	9c 01       	movw	r18, r24
    9270:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    9274:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    9278:	41 e0       	ldi	r20, 0x01	; 1
    927a:	28 17       	cp	r18, r24
    927c:	39 07       	cpc	r19, r25
    927e:	09 f4       	brne	.+2      	; 0x9282 <_ZN13EepromManager13saveAllEEPROMEv+0x30e>
    9280:	40 e0       	ldi	r20, 0x00	; 0
    9282:	44 23       	and	r20, r20
    9284:	39 f0       	breq	.+14     	; 0x9294 <_ZN13EepromManager13saveAllEEPROMEv+0x320>
	{
		updateEEPROMVar(ID_Period_Seconds, (void*)&g_ID_period_seconds);
    9286:	8b 81       	ldd	r24, Y+3	; 0x03
    9288:	9c 81       	ldd	r25, Y+4	; 0x04
    928a:	41 e1       	ldi	r20, 0x11	; 17
    928c:	50 e4       	ldi	r21, 0x40	; 64
    928e:	6f e4       	ldi	r22, 0x4F	; 79
    9290:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_intra_cycle_delay_time != (int16_t)eeprom_read_word((const uint16_t *)&(EepromManager::ee_vars.intra_cycle_delay_time)))
    9294:	81 e5       	ldi	r24, 0x51	; 81
    9296:	90 e0       	ldi	r25, 0x00	; 0
    9298:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    929c:	9c 01       	movw	r18, r24
    929e:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    92a2:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    92a6:	41 e0       	ldi	r20, 0x01	; 1
    92a8:	28 17       	cp	r18, r24
    92aa:	39 07       	cpc	r19, r25
    92ac:	09 f4       	brne	.+2      	; 0x92b0 <_ZN13EepromManager13saveAllEEPROMEv+0x33c>
    92ae:	40 e0       	ldi	r20, 0x00	; 0
    92b0:	44 23       	and	r20, r20
    92b2:	39 f0       	breq	.+14     	; 0x92c2 <_ZN13EepromManager13saveAllEEPROMEv+0x34e>
	{
		updateEEPROMVar(Intra_Cycle_Delay_Seconds, (void*)&g_intra_cycle_delay_time);
    92b4:	8b 81       	ldd	r24, Y+3	; 0x03
    92b6:	9c 81       	ldd	r25, Y+4	; 0x04
    92b8:	4a e8       	ldi	r20, 0x8A	; 138
    92ba:	57 e4       	ldi	r21, 0x47	; 71
    92bc:	61 e5       	ldi	r22, 0x51	; 81
    92be:	0e 94 52 46 	call	0x8ca4	; 0x8ca4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}	
}
    92c2:	00 00       	nop
    92c4:	24 96       	adiw	r28, 0x04	; 4
    92c6:	cd bf       	out	0x3d, r28	; 61
    92c8:	de bf       	out	0x3e, r29	; 62
    92ca:	df 91       	pop	r29
    92cc:	cf 91       	pop	r28
    92ce:	1f 91       	pop	r17
    92d0:	0f 91       	pop	r16
    92d2:	08 95       	ret

000092d4 <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    92d4:	cf 93       	push	r28
    92d6:	df 93       	push	r29
    92d8:	cd b7       	in	r28, 0x3d	; 61
    92da:	de b7       	in	r29, 0x3e	; 62
    92dc:	ec 97       	sbiw	r28, 0x3c	; 60
    92de:	cd bf       	out	0x3d, r28	; 61
    92e0:	de bf       	out	0x3e, r29	; 62
    92e2:	8b af       	std	Y+59, r24	; 0x3b
    92e4:	9c af       	std	Y+60, r25	; 0x3c
	bool failure = true;
    92e6:	81 e0       	ldi	r24, 0x01	; 1
    92e8:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    92ea:	80 e0       	ldi	r24, 0x00	; 0
    92ec:	90 e0       	ldi	r25, 0x00	; 0
    92ee:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    92f2:	8c 83       	std	Y+4, r24	; 0x04
    92f4:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    92f6:	8c 81       	ldd	r24, Y+4	; 0x04
    92f8:	9d 81       	ldd	r25, Y+5	; 0x05
    92fa:	8e 3c       	cpi	r24, 0xCE	; 206
    92fc:	91 05       	cpc	r25, r1
    92fe:	09 f0       	breq	.+2      	; 0x9302 <_ZN13EepromManager11readNonVolsEv+0x2e>
    9300:	2e c2       	rjmp	.+1116   	; 0x975e <_ZN13EepromManager11readNonVolsEv+0x48a>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    9302:	8d e3       	ldi	r24, 0x3D	; 61
    9304:	90 e0       	ldi	r25, 0x00	; 0
    9306:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    930a:	8e 83       	std	Y+6, r24	; 0x06
    930c:	85 e0       	ldi	r24, 0x05	; 5
    930e:	8f 83       	std	Y+7, r24	; 0x07
    9310:	84 e1       	ldi	r24, 0x14	; 20
    9312:	88 87       	std	Y+8, r24	; 0x08
    9314:	9e 81       	ldd	r25, Y+6	; 0x06
    9316:	88 85       	ldd	r24, Y+8	; 0x08
    9318:	89 17       	cp	r24, r25
    931a:	40 f0       	brcs	.+16     	; 0x932c <_ZN13EepromManager11readNonVolsEv+0x58>
    931c:	9e 81       	ldd	r25, Y+6	; 0x06
    931e:	8f 81       	ldd	r24, Y+7	; 0x07
    9320:	98 17       	cp	r25, r24
    9322:	10 f4       	brcc	.+4      	; 0x9328 <_ZN13EepromManager11readNonVolsEv+0x54>
    9324:	8f 81       	ldd	r24, Y+7	; 0x07
    9326:	03 c0       	rjmp	.+6      	; 0x932e <_ZN13EepromManager11readNonVolsEv+0x5a>
    9328:	8e 81       	ldd	r24, Y+6	; 0x06
    932a:	01 c0       	rjmp	.+2      	; 0x932e <_ZN13EepromManager11readNonVolsEv+0x5a>
    932c:	88 85       	ldd	r24, Y+8	; 0x08
    932e:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    9332:	8e e3       	ldi	r24, 0x3E	; 62
    9334:	90 e0       	ldi	r25, 0x00	; 0
    9336:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    933a:	89 87       	std	Y+9, r24	; 0x09
    933c:	1a 86       	std	Y+10, r1	; 0x0a
    933e:	81 e1       	ldi	r24, 0x11	; 17
    9340:	8b 87       	std	Y+11, r24	; 0x0b
    9342:	99 85       	ldd	r25, Y+9	; 0x09
    9344:	8b 85       	ldd	r24, Y+11	; 0x0b
    9346:	89 17       	cp	r24, r25
    9348:	40 f0       	brcs	.+16     	; 0x935a <_ZN13EepromManager11readNonVolsEv+0x86>
    934a:	99 85       	ldd	r25, Y+9	; 0x09
    934c:	8a 85       	ldd	r24, Y+10	; 0x0a
    934e:	98 17       	cp	r25, r24
    9350:	10 f4       	brcc	.+4      	; 0x9356 <_ZN13EepromManager11readNonVolsEv+0x82>
    9352:	8a 85       	ldd	r24, Y+10	; 0x0a
    9354:	03 c0       	rjmp	.+6      	; 0x935c <_ZN13EepromManager11readNonVolsEv+0x88>
    9356:	89 85       	ldd	r24, Y+9	; 0x09
    9358:	01 c0       	rjmp	.+2      	; 0x935c <_ZN13EepromManager11readNonVolsEv+0x88>
    935a:	8b 85       	ldd	r24, Y+11	; 0x0b
    935c:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    9360:	82 e0       	ldi	r24, 0x02	; 2
    9362:	90 e0       	ldi	r25, 0x00	; 0
    9364:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    9368:	dc 01       	movw	r26, r24
    936a:	cb 01       	movw	r24, r22
    936c:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <g_event_start_epoch>
    9370:	90 93 8d 47 	sts	0x478D, r25	; 0x80478d <g_event_start_epoch+0x1>
    9374:	a0 93 8e 47 	sts	0x478E, r26	; 0x80478e <g_event_start_epoch+0x2>
    9378:	b0 93 8f 47 	sts	0x478F, r27	; 0x80478f <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    937c:	86 e0       	ldi	r24, 0x06	; 6
    937e:	90 e0       	ldi	r25, 0x00	; 0
    9380:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    9384:	dc 01       	movw	r26, r24
    9386:	cb 01       	movw	r24, r22
    9388:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    938c:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    9390:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    9394:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    9398:	8f e3       	ldi	r24, 0x3F	; 63
    939a:	90 e0       	ldi	r25, 0x00	; 0
    939c:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    93a0:	80 93 ac 47 	sts	0x47AC, r24	; 0x8047ac <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    93a4:	1a 82       	std	Y+2, r1	; 0x02
    93a6:	1b 82       	std	Y+3, r1	; 0x03
    93a8:	8a 81       	ldd	r24, Y+2	; 0x02
    93aa:	9b 81       	ldd	r25, Y+3	; 0x03
    93ac:	44 97       	sbiw	r24, 0x14	; 20
    93ae:	e8 f4       	brcc	.+58     	; 0x93ea <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    93b0:	8a 81       	ldd	r24, Y+2	; 0x02
    93b2:	9b 81       	ldd	r25, Y+3	; 0x03
    93b4:	0a 96       	adiw	r24, 0x0a	; 10
    93b6:	80 50       	subi	r24, 0x00	; 0
    93b8:	90 40       	sbci	r25, 0x00	; 0
    93ba:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    93be:	28 2f       	mov	r18, r24
    93c0:	8a 81       	ldd	r24, Y+2	; 0x02
    93c2:	9b 81       	ldd	r25, Y+3	; 0x03
    93c4:	8d 58       	subi	r24, 0x8D	; 141
    93c6:	98 4b       	sbci	r25, 0xB8	; 184
    93c8:	fc 01       	movw	r30, r24
    93ca:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    93cc:	8a 81       	ldd	r24, Y+2	; 0x02
    93ce:	9b 81       	ldd	r25, Y+3	; 0x03
    93d0:	8d 58       	subi	r24, 0x8D	; 141
    93d2:	98 4b       	sbci	r25, 0xB8	; 184
    93d4:	fc 01       	movw	r30, r24
    93d6:	80 81       	ld	r24, Z
    93d8:	88 23       	and	r24, r24
    93da:	31 f0       	breq	.+12     	; 0x93e8 <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    93dc:	8a 81       	ldd	r24, Y+2	; 0x02
    93de:	9b 81       	ldd	r25, Y+3	; 0x03
    93e0:	01 96       	adiw	r24, 0x01	; 1
    93e2:	8a 83       	std	Y+2, r24	; 0x02
    93e4:	9b 83       	std	Y+3, r25	; 0x03
    93e6:	e0 cf       	rjmp	.-64     	; 0x93a8 <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    93e8:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    93ea:	1a 82       	std	Y+2, r1	; 0x02
    93ec:	1b 82       	std	Y+3, r1	; 0x03
    93ee:	8a 81       	ldd	r24, Y+2	; 0x02
    93f0:	9b 81       	ldd	r25, Y+3	; 0x03
    93f2:	44 97       	sbiw	r24, 0x14	; 20
    93f4:	e8 f4       	brcc	.+58     	; 0x9430 <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
    93f6:	8a 81       	ldd	r24, Y+2	; 0x02
    93f8:	9b 81       	ldd	r25, Y+3	; 0x03
    93fa:	4f 96       	adiw	r24, 0x1f	; 31
    93fc:	80 50       	subi	r24, 0x00	; 0
    93fe:	90 40       	sbci	r25, 0x00	; 0
    9400:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    9404:	28 2f       	mov	r18, r24
    9406:	8a 81       	ldd	r24, Y+2	; 0x02
    9408:	9b 81       	ldd	r25, Y+3	; 0x03
    940a:	82 5a       	subi	r24, 0xA2	; 162
    940c:	98 4b       	sbci	r25, 0xB8	; 184
    940e:	fc 01       	movw	r30, r24
    9410:	20 83       	st	Z, r18
			if(!g_messages_text[PATTERN_TEXT][i])
    9412:	8a 81       	ldd	r24, Y+2	; 0x02
    9414:	9b 81       	ldd	r25, Y+3	; 0x03
    9416:	82 5a       	subi	r24, 0xA2	; 162
    9418:	98 4b       	sbci	r25, 0xB8	; 184
    941a:	fc 01       	movw	r30, r24
    941c:	80 81       	ld	r24, Z
    941e:	88 23       	and	r24, r24
    9420:	31 f0       	breq	.+12     	; 0x942e <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    9422:	8a 81       	ldd	r24, Y+2	; 0x02
    9424:	9b 81       	ldd	r25, Y+3	; 0x03
    9426:	01 96       	adiw	r24, 0x01	; 1
    9428:	8a 83       	std	Y+2, r24	; 0x02
    942a:	9b 83       	std	Y+3, r25	; 0x03
    942c:	e0 cf       	rjmp	.-64     	; 0x93ee <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_messages_text[PATTERN_TEXT][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_text[i])));
			if(!g_messages_text[PATTERN_TEXT][i])
			{
				break;
    942e:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9430:	1a 82       	std	Y+2, r1	; 0x02
    9432:	1b 82       	std	Y+3, r1	; 0x03
    9434:	8a 81       	ldd	r24, Y+2	; 0x02
    9436:	9b 81       	ldd	r25, Y+3	; 0x03
    9438:	08 97       	sbiw	r24, 0x08	; 8
    943a:	e8 f4       	brcc	.+58     	; 0x9476 <_ZN13EepromManager11readNonVolsEv+0x1a2>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    943c:	8a 81       	ldd	r24, Y+2	; 0x02
    943e:	9b 81       	ldd	r25, Y+3	; 0x03
    9440:	c4 96       	adiw	r24, 0x34	; 52
    9442:	80 50       	subi	r24, 0x00	; 0
    9444:	90 40       	sbci	r25, 0x00	; 0
    9446:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    944a:	28 2f       	mov	r18, r24
    944c:	8a 81       	ldd	r24, Y+2	; 0x02
    944e:	9b 81       	ldd	r25, Y+3	; 0x03
    9450:	83 55       	subi	r24, 0x53	; 83
    9452:	98 4b       	sbci	r25, 0xB8	; 184
    9454:	fc 01       	movw	r30, r24
    9456:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    9458:	8a 81       	ldd	r24, Y+2	; 0x02
    945a:	9b 81       	ldd	r25, Y+3	; 0x03
    945c:	83 55       	subi	r24, 0x53	; 83
    945e:	98 4b       	sbci	r25, 0xB8	; 184
    9460:	fc 01       	movw	r30, r24
    9462:	80 81       	ld	r24, Z
    9464:	88 23       	and	r24, r24
    9466:	31 f0       	breq	.+12     	; 0x9474 <_ZN13EepromManager11readNonVolsEv+0x1a0>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    9468:	8a 81       	ldd	r24, Y+2	; 0x02
    946a:	9b 81       	ldd	r25, Y+3	; 0x03
    946c:	01 96       	adiw	r24, 0x01	; 1
    946e:	8a 83       	std	Y+2, r24	; 0x02
    9470:	9b 83       	std	Y+3, r25	; 0x03
    9472:	e0 cf       	rjmp	.-64     	; 0x9434 <_ZN13EepromManager11readNonVolsEv+0x160>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    9474:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    9476:	80 e4       	ldi	r24, 0x40	; 64
    9478:	90 e0       	ldi	r25, 0x00	; 0
    947a:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    947e:	dc 01       	movw	r26, r24
    9480:	cb 01       	movw	r24, r22
    9482:	8c 87       	std	Y+12, r24	; 0x0c
    9484:	9d 87       	std	Y+13, r25	; 0x0d
    9486:	ae 87       	std	Y+14, r26	; 0x0e
    9488:	bf 87       	std	Y+15, r27	; 0x0f
    948a:	80 ee       	ldi	r24, 0xE0	; 224
    948c:	97 e6       	ldi	r25, 0x67	; 103
    948e:	a5 e3       	ldi	r26, 0x35	; 53
    9490:	b0 e0       	ldi	r27, 0x00	; 0
    9492:	88 8b       	std	Y+16, r24	; 0x10
    9494:	99 8b       	std	Y+17, r25	; 0x11
    9496:	aa 8b       	std	Y+18, r26	; 0x12
    9498:	bb 8b       	std	Y+19, r27	; 0x13
    949a:	80 e0       	ldi	r24, 0x00	; 0
    949c:	99 e0       	ldi	r25, 0x09	; 9
    949e:	ad e3       	ldi	r26, 0x3D	; 61
    94a0:	b0 e0       	ldi	r27, 0x00	; 0
    94a2:	8c 8b       	std	Y+20, r24	; 0x14
    94a4:	9d 8b       	std	Y+21, r25	; 0x15
    94a6:	ae 8b       	std	Y+22, r26	; 0x16
    94a8:	bf 8b       	std	Y+23, r27	; 0x17
    94aa:	2c 85       	ldd	r18, Y+12	; 0x0c
    94ac:	3d 85       	ldd	r19, Y+13	; 0x0d
    94ae:	4e 85       	ldd	r20, Y+14	; 0x0e
    94b0:	5f 85       	ldd	r21, Y+15	; 0x0f
    94b2:	8c 89       	ldd	r24, Y+20	; 0x14
    94b4:	9d 89       	ldd	r25, Y+21	; 0x15
    94b6:	ae 89       	ldd	r26, Y+22	; 0x16
    94b8:	bf 89       	ldd	r27, Y+23	; 0x17
    94ba:	82 17       	cp	r24, r18
    94bc:	93 07       	cpc	r25, r19
    94be:	a4 07       	cpc	r26, r20
    94c0:	b5 07       	cpc	r27, r21
    94c2:	b8 f0       	brcs	.+46     	; 0x94f2 <_ZN13EepromManager11readNonVolsEv+0x21e>
    94c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    94c6:	3d 85       	ldd	r19, Y+13	; 0x0d
    94c8:	4e 85       	ldd	r20, Y+14	; 0x0e
    94ca:	5f 85       	ldd	r21, Y+15	; 0x0f
    94cc:	88 89       	ldd	r24, Y+16	; 0x10
    94ce:	99 89       	ldd	r25, Y+17	; 0x11
    94d0:	aa 89       	ldd	r26, Y+18	; 0x12
    94d2:	bb 89       	ldd	r27, Y+19	; 0x13
    94d4:	28 17       	cp	r18, r24
    94d6:	39 07       	cpc	r19, r25
    94d8:	4a 07       	cpc	r20, r26
    94da:	5b 07       	cpc	r21, r27
    94dc:	28 f4       	brcc	.+10     	; 0x94e8 <_ZN13EepromManager11readNonVolsEv+0x214>
    94de:	88 89       	ldd	r24, Y+16	; 0x10
    94e0:	99 89       	ldd	r25, Y+17	; 0x11
    94e2:	aa 89       	ldd	r26, Y+18	; 0x12
    94e4:	bb 89       	ldd	r27, Y+19	; 0x13
    94e6:	09 c0       	rjmp	.+18     	; 0x94fa <_ZN13EepromManager11readNonVolsEv+0x226>
    94e8:	8c 85       	ldd	r24, Y+12	; 0x0c
    94ea:	9d 85       	ldd	r25, Y+13	; 0x0d
    94ec:	ae 85       	ldd	r26, Y+14	; 0x0e
    94ee:	bf 85       	ldd	r27, Y+15	; 0x0f
    94f0:	04 c0       	rjmp	.+8      	; 0x94fa <_ZN13EepromManager11readNonVolsEv+0x226>
    94f2:	8c 89       	ldd	r24, Y+20	; 0x14
    94f4:	9d 89       	ldd	r25, Y+21	; 0x15
    94f6:	ae 89       	ldd	r26, Y+22	; 0x16
    94f8:	bf 89       	ldd	r27, Y+23	; 0x17
    94fa:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_frequency>
    94fe:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_frequency+0x1>
    9502:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_80m_frequency+0x2>
    9506:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    950a:	84 e4       	ldi	r24, 0x44	; 68
    950c:	90 e0       	ldi	r25, 0x00	; 0
    950e:	0e 94 89 80 	call	0x10112	; 0x10112 <eeprom_read_dword>
    9512:	dc 01       	movw	r26, r24
    9514:	cb 01       	movw	r24, r22
    9516:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <g_rtty_offset>
    951a:	90 93 3d 40 	sts	0x403D, r25	; 0x80403d <g_rtty_offset+0x1>
    951e:	a0 93 3e 40 	sts	0x403E, r26	; 0x80403e <g_rtty_offset+0x2>
    9522:	b0 93 3f 40 	sts	0x403F, r27	; 0x80403f <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    9526:	88 e4       	ldi	r24, 0x48	; 72
    9528:	90 e0       	ldi	r25, 0x00	; 0
    952a:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    952e:	88 8f       	std	Y+24, r24	; 0x18
    9530:	99 8f       	std	Y+25, r25	; 0x19
    9532:	1a 8e       	std	Y+26, r1	; 0x1a
    9534:	1b 8e       	std	Y+27, r1	; 0x1b
    9536:	88 e8       	ldi	r24, 0x88	; 136
    9538:	93 e1       	ldi	r25, 0x13	; 19
    953a:	8c 8f       	std	Y+28, r24	; 0x1c
    953c:	9d 8f       	std	Y+29, r25	; 0x1d
    953e:	28 8d       	ldd	r18, Y+24	; 0x18
    9540:	39 8d       	ldd	r19, Y+25	; 0x19
    9542:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9544:	9d 8d       	ldd	r25, Y+29	; 0x1d
    9546:	82 17       	cp	r24, r18
    9548:	93 07       	cpc	r25, r19
    954a:	68 f0       	brcs	.+26     	; 0x9566 <_ZN13EepromManager11readNonVolsEv+0x292>
    954c:	28 8d       	ldd	r18, Y+24	; 0x18
    954e:	39 8d       	ldd	r19, Y+25	; 0x19
    9550:	8a 8d       	ldd	r24, Y+26	; 0x1a
    9552:	9b 8d       	ldd	r25, Y+27	; 0x1b
    9554:	28 17       	cp	r18, r24
    9556:	39 07       	cpc	r19, r25
    9558:	18 f4       	brcc	.+6      	; 0x9560 <_ZN13EepromManager11readNonVolsEv+0x28c>
    955a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    955c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    955e:	05 c0       	rjmp	.+10     	; 0x956a <_ZN13EepromManager11readNonVolsEv+0x296>
    9560:	88 8d       	ldd	r24, Y+24	; 0x18
    9562:	99 8d       	ldd	r25, Y+25	; 0x19
    9564:	02 c0       	rjmp	.+4      	; 0x956a <_ZN13EepromManager11readNonVolsEv+0x296>
    9566:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9568:	9d 8d       	ldd	r25, Y+29	; 0x1d
    956a:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_80m_power_level_mW>
    956e:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    9572:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    9576:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    957a:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    957e:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    9582:	89 2b       	or	r24, r25
    9584:	8a 2b       	or	r24, r26
    9586:	8b 2b       	or	r24, r27
    9588:	b9 f0       	breq	.+46     	; 0x95b8 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    958a:	20 91 90 47 	lds	r18, 0x4790	; 0x804790 <g_event_finish_epoch>
    958e:	30 91 91 47 	lds	r19, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    9592:	40 91 92 47 	lds	r20, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    9596:	50 91 93 47 	lds	r21, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    959a:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    959e:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    95a2:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    95a6:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    95aa:	82 17       	cp	r24, r18
    95ac:	93 07       	cpc	r25, r19
    95ae:	a4 07       	cpc	r26, r20
    95b0:	b5 07       	cpc	r27, r21
    95b2:	10 f0       	brcs	.+4      	; 0x95b8 <_ZN13EepromManager11readNonVolsEv+0x2e4>
    95b4:	81 e0       	ldi	r24, 0x01	; 1
    95b6:	01 c0       	rjmp	.+2      	; 0x95ba <_ZN13EepromManager11readNonVolsEv+0x2e6>
    95b8:	80 e0       	ldi	r24, 0x00	; 0
    95ba:	88 23       	and	r24, r24
    95bc:	a1 f0       	breq	.+40     	; 0x95e6 <_ZN13EepromManager11readNonVolsEv+0x312>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    95be:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    95c2:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    95c6:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    95ca:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    95ce:	80 58       	subi	r24, 0x80	; 128
    95d0:	9e 4a       	sbci	r25, 0xAE	; 174
    95d2:	ae 4f       	sbci	r26, 0xFE	; 254
    95d4:	bf 4f       	sbci	r27, 0xFF	; 255
    95d6:	80 93 90 47 	sts	0x4790, r24	; 0x804790 <g_event_finish_epoch>
    95da:	90 93 91 47 	sts	0x4791, r25	; 0x804791 <g_event_finish_epoch+0x1>
    95de:	a0 93 92 47 	sts	0x4792, r26	; 0x804792 <g_event_finish_epoch+0x2>
    95e2:	b0 93 93 47 	sts	0x4793, r27	; 0x804793 <g_event_finish_epoch+0x3>
		}
		
		g_pattern_codespeed = CLAMP(5, eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.pattern_codespeed))), 20);
    95e6:	8a e4       	ldi	r24, 0x4A	; 74
    95e8:	90 e0       	ldi	r25, 0x00	; 0
    95ea:	0e 94 81 80 	call	0x10102	; 0x10102 <eeprom_read_byte>
    95ee:	8e 8f       	std	Y+30, r24	; 0x1e
    95f0:	85 e0       	ldi	r24, 0x05	; 5
    95f2:	90 e0       	ldi	r25, 0x00	; 0
    95f4:	8f 8f       	std	Y+31, r24	; 0x1f
    95f6:	98 a3       	std	Y+32, r25	; 0x20
    95f8:	84 e1       	ldi	r24, 0x14	; 20
    95fa:	90 e0       	ldi	r25, 0x00	; 0
    95fc:	89 a3       	std	Y+33, r24	; 0x21
    95fe:	9a a3       	std	Y+34, r25	; 0x22
    9600:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9602:	28 2f       	mov	r18, r24
    9604:	30 e0       	ldi	r19, 0x00	; 0
    9606:	89 a1       	ldd	r24, Y+33	; 0x21
    9608:	9a a1       	ldd	r25, Y+34	; 0x22
    960a:	82 17       	cp	r24, r18
    960c:	93 07       	cpc	r25, r19
    960e:	54 f0       	brlt	.+20     	; 0x9624 <_ZN13EepromManager11readNonVolsEv+0x350>
    9610:	8e 8d       	ldd	r24, Y+30	; 0x1e
    9612:	88 2f       	mov	r24, r24
    9614:	90 e0       	ldi	r25, 0x00	; 0
    9616:	2f 8d       	ldd	r18, Y+31	; 0x1f
    9618:	38 a1       	ldd	r19, Y+32	; 0x20
    961a:	82 17       	cp	r24, r18
    961c:	93 07       	cpc	r25, r19
    961e:	24 f4       	brge	.+8      	; 0x9628 <_ZN13EepromManager11readNonVolsEv+0x354>
    9620:	c9 01       	movw	r24, r18
    9622:	02 c0       	rjmp	.+4      	; 0x9628 <_ZN13EepromManager11readNonVolsEv+0x354>
    9624:	89 a1       	ldd	r24, Y+33	; 0x21
    9626:	9a a1       	ldd	r25, Y+34	; 0x22
    9628:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
		g_off_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.off_air_seconds)), 3600);
    962c:	8b e4       	ldi	r24, 0x4B	; 75
    962e:	90 e0       	ldi	r25, 0x00	; 0
    9630:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    9634:	8b a3       	std	Y+35, r24	; 0x23
    9636:	9c a3       	std	Y+36, r25	; 0x24
    9638:	1d a2       	std	Y+37, r1	; 0x25
    963a:	1e a2       	std	Y+38, r1	; 0x26
    963c:	80 e1       	ldi	r24, 0x10	; 16
    963e:	9e e0       	ldi	r25, 0x0E	; 14
    9640:	8f a3       	std	Y+39, r24	; 0x27
    9642:	98 a7       	std	Y+40, r25	; 0x28
    9644:	2b a1       	ldd	r18, Y+35	; 0x23
    9646:	3c a1       	ldd	r19, Y+36	; 0x24
    9648:	8f a1       	ldd	r24, Y+39	; 0x27
    964a:	98 a5       	ldd	r25, Y+40	; 0x28
    964c:	82 17       	cp	r24, r18
    964e:	93 07       	cpc	r25, r19
    9650:	6c f0       	brlt	.+26     	; 0x966c <_ZN13EepromManager11readNonVolsEv+0x398>
    9652:	2b a1       	ldd	r18, Y+35	; 0x23
    9654:	3c a1       	ldd	r19, Y+36	; 0x24
    9656:	8d a1       	ldd	r24, Y+37	; 0x25
    9658:	9e a1       	ldd	r25, Y+38	; 0x26
    965a:	28 17       	cp	r18, r24
    965c:	39 07       	cpc	r19, r25
    965e:	1c f4       	brge	.+6      	; 0x9666 <_ZN13EepromManager11readNonVolsEv+0x392>
    9660:	8d a1       	ldd	r24, Y+37	; 0x25
    9662:	9e a1       	ldd	r25, Y+38	; 0x26
    9664:	05 c0       	rjmp	.+10     	; 0x9670 <_ZN13EepromManager11readNonVolsEv+0x39c>
    9666:	8b a1       	ldd	r24, Y+35	; 0x23
    9668:	9c a1       	ldd	r25, Y+36	; 0x24
    966a:	02 c0       	rjmp	.+4      	; 0x9670 <_ZN13EepromManager11readNonVolsEv+0x39c>
    966c:	8f a1       	ldd	r24, Y+39	; 0x27
    966e:	98 a5       	ldd	r25, Y+40	; 0x28
    9670:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    9674:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		g_on_air_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.on_air_seconds)), 3600);
    9678:	8d e4       	ldi	r24, 0x4D	; 77
    967a:	90 e0       	ldi	r25, 0x00	; 0
    967c:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    9680:	89 a7       	std	Y+41, r24	; 0x29
    9682:	9a a7       	std	Y+42, r25	; 0x2a
    9684:	1b a6       	std	Y+43, r1	; 0x2b
    9686:	1c a6       	std	Y+44, r1	; 0x2c
    9688:	80 e1       	ldi	r24, 0x10	; 16
    968a:	9e e0       	ldi	r25, 0x0E	; 14
    968c:	8d a7       	std	Y+45, r24	; 0x2d
    968e:	9e a7       	std	Y+46, r25	; 0x2e
    9690:	29 a5       	ldd	r18, Y+41	; 0x29
    9692:	3a a5       	ldd	r19, Y+42	; 0x2a
    9694:	8d a5       	ldd	r24, Y+45	; 0x2d
    9696:	9e a5       	ldd	r25, Y+46	; 0x2e
    9698:	82 17       	cp	r24, r18
    969a:	93 07       	cpc	r25, r19
    969c:	6c f0       	brlt	.+26     	; 0x96b8 <_ZN13EepromManager11readNonVolsEv+0x3e4>
    969e:	29 a5       	ldd	r18, Y+41	; 0x29
    96a0:	3a a5       	ldd	r19, Y+42	; 0x2a
    96a2:	8b a5       	ldd	r24, Y+43	; 0x2b
    96a4:	9c a5       	ldd	r25, Y+44	; 0x2c
    96a6:	28 17       	cp	r18, r24
    96a8:	39 07       	cpc	r19, r25
    96aa:	1c f4       	brge	.+6      	; 0x96b2 <_ZN13EepromManager11readNonVolsEv+0x3de>
    96ac:	8b a5       	ldd	r24, Y+43	; 0x2b
    96ae:	9c a5       	ldd	r25, Y+44	; 0x2c
    96b0:	05 c0       	rjmp	.+10     	; 0x96bc <_ZN13EepromManager11readNonVolsEv+0x3e8>
    96b2:	89 a5       	ldd	r24, Y+41	; 0x29
    96b4:	9a a5       	ldd	r25, Y+42	; 0x2a
    96b6:	02 c0       	rjmp	.+4      	; 0x96bc <_ZN13EepromManager11readNonVolsEv+0x3e8>
    96b8:	8d a5       	ldd	r24, Y+45	; 0x2d
    96ba:	9e a5       	ldd	r25, Y+46	; 0x2e
    96bc:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    96c0:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
		g_ID_period_seconds = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.ID_period_seconds)), 3600);
    96c4:	8f e4       	ldi	r24, 0x4F	; 79
    96c6:	90 e0       	ldi	r25, 0x00	; 0
    96c8:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    96cc:	8f a7       	std	Y+47, r24	; 0x2f
    96ce:	98 ab       	std	Y+48, r25	; 0x30
    96d0:	19 aa       	std	Y+49, r1	; 0x31
    96d2:	1a aa       	std	Y+50, r1	; 0x32
    96d4:	80 e1       	ldi	r24, 0x10	; 16
    96d6:	9e e0       	ldi	r25, 0x0E	; 14
    96d8:	8b ab       	std	Y+51, r24	; 0x33
    96da:	9c ab       	std	Y+52, r25	; 0x34
    96dc:	2f a5       	ldd	r18, Y+47	; 0x2f
    96de:	38 a9       	ldd	r19, Y+48	; 0x30
    96e0:	8b a9       	ldd	r24, Y+51	; 0x33
    96e2:	9c a9       	ldd	r25, Y+52	; 0x34
    96e4:	82 17       	cp	r24, r18
    96e6:	93 07       	cpc	r25, r19
    96e8:	6c f0       	brlt	.+26     	; 0x9704 <_ZN13EepromManager11readNonVolsEv+0x430>
    96ea:	2f a5       	ldd	r18, Y+47	; 0x2f
    96ec:	38 a9       	ldd	r19, Y+48	; 0x30
    96ee:	89 a9       	ldd	r24, Y+49	; 0x31
    96f0:	9a a9       	ldd	r25, Y+50	; 0x32
    96f2:	28 17       	cp	r18, r24
    96f4:	39 07       	cpc	r19, r25
    96f6:	1c f4       	brge	.+6      	; 0x96fe <_ZN13EepromManager11readNonVolsEv+0x42a>
    96f8:	89 a9       	ldd	r24, Y+49	; 0x31
    96fa:	9a a9       	ldd	r25, Y+50	; 0x32
    96fc:	05 c0       	rjmp	.+10     	; 0x9708 <_ZN13EepromManager11readNonVolsEv+0x434>
    96fe:	8f a5       	ldd	r24, Y+47	; 0x2f
    9700:	98 a9       	ldd	r25, Y+48	; 0x30
    9702:	02 c0       	rjmp	.+4      	; 0x9708 <_ZN13EepromManager11readNonVolsEv+0x434>
    9704:	8b a9       	ldd	r24, Y+51	; 0x33
    9706:	9c a9       	ldd	r25, Y+52	; 0x34
    9708:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    970c:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
		g_intra_cycle_delay_time = CLAMP(0, (int16_t)eeprom_read_word((const uint16_t*)&(EepromManager::ee_vars.intra_cycle_delay_time)), 3600);
    9710:	81 e5       	ldi	r24, 0x51	; 81
    9712:	90 e0       	ldi	r25, 0x00	; 0
    9714:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    9718:	8d ab       	std	Y+53, r24	; 0x35
    971a:	9e ab       	std	Y+54, r25	; 0x36
    971c:	1f aa       	std	Y+55, r1	; 0x37
    971e:	18 ae       	std	Y+56, r1	; 0x38
    9720:	80 e1       	ldi	r24, 0x10	; 16
    9722:	9e e0       	ldi	r25, 0x0E	; 14
    9724:	89 af       	std	Y+57, r24	; 0x39
    9726:	9a af       	std	Y+58, r25	; 0x3a
    9728:	2d a9       	ldd	r18, Y+53	; 0x35
    972a:	3e a9       	ldd	r19, Y+54	; 0x36
    972c:	89 ad       	ldd	r24, Y+57	; 0x39
    972e:	9a ad       	ldd	r25, Y+58	; 0x3a
    9730:	82 17       	cp	r24, r18
    9732:	93 07       	cpc	r25, r19
    9734:	6c f0       	brlt	.+26     	; 0x9750 <_ZN13EepromManager11readNonVolsEv+0x47c>
    9736:	2d a9       	ldd	r18, Y+53	; 0x35
    9738:	3e a9       	ldd	r19, Y+54	; 0x36
    973a:	8f a9       	ldd	r24, Y+55	; 0x37
    973c:	98 ad       	ldd	r25, Y+56	; 0x38
    973e:	28 17       	cp	r18, r24
    9740:	39 07       	cpc	r19, r25
    9742:	1c f4       	brge	.+6      	; 0x974a <_ZN13EepromManager11readNonVolsEv+0x476>
    9744:	8f a9       	ldd	r24, Y+55	; 0x37
    9746:	98 ad       	ldd	r25, Y+56	; 0x38
    9748:	05 c0       	rjmp	.+10     	; 0x9754 <_ZN13EepromManager11readNonVolsEv+0x480>
    974a:	8d a9       	ldd	r24, Y+53	; 0x35
    974c:	9e a9       	ldd	r25, Y+54	; 0x36
    974e:	02 c0       	rjmp	.+4      	; 0x9754 <_ZN13EepromManager11readNonVolsEv+0x480>
    9750:	89 ad       	ldd	r24, Y+57	; 0x39
    9752:	9a ad       	ldd	r25, Y+58	; 0x3a
    9754:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_intra_cycle_delay_time>
    9758:	90 93 8b 47 	sts	0x478B, r25	; 0x80478b <g_intra_cycle_delay_time+0x1>

		failure = false;
    975c:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    975e:	89 81       	ldd	r24, Y+1	; 0x01
}
    9760:	ec 96       	adiw	r28, 0x3c	; 60
    9762:	cd bf       	out	0x3d, r28	; 61
    9764:	de bf       	out	0x3e, r29	; 62
    9766:	df 91       	pop	r29
    9768:	cf 91       	pop	r28
    976a:	08 95       	ret

0000976c <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    976c:	cf 93       	push	r28
    976e:	df 93       	push	r29
    9770:	cd b7       	in	r28, 0x3d	; 61
    9772:	de b7       	in	r29, 0x3e	; 62
    9774:	2b 97       	sbiw	r28, 0x0b	; 11
    9776:	cd bf       	out	0x3d, r28	; 61
    9778:	de bf       	out	0x3e, r29	; 62
    977a:	8a 87       	std	Y+10, r24	; 0x0a
    977c:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    977e:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    9780:	80 e0       	ldi	r24, 0x00	; 0
    9782:	90 e0       	ldi	r25, 0x00	; 0
    9784:	0e 94 90 80 	call	0x10120	; 0x10120 <eeprom_read_word>
    9788:	88 87       	std	Y+8, r24	; 0x08
    978a:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    978c:	88 85       	ldd	r24, Y+8	; 0x08
    978e:	99 85       	ldd	r25, Y+9	; 0x09
    9790:	8e 3c       	cpi	r24, 0xCE	; 206
    9792:	91 05       	cpc	r25, r1
    9794:	09 f4       	brne	.+2      	; 0x9798 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    9796:	2a c1       	rjmp	.+596    	; 0x99ec <_ZN13EepromManager20initializeEEPROMVarsEv+0x280>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    9798:	84 e1       	ldi	r24, 0x14	; 20
    979a:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    979e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    97a2:	68 2f       	mov	r22, r24
    97a4:	8d e3       	ldi	r24, 0x3D	; 61
    97a6:	90 e0       	ldi	r25, 0x00	; 0
    97a8:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    97ac:	81 e0       	ldi	r24, 0x01	; 1
    97ae:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    97b2:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    97b6:	68 2f       	mov	r22, r24
    97b8:	8e e3       	ldi	r24, 0x3E	; 62
    97ba:	90 e0       	ldi	r25, 0x00	; 0
    97bc:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    97c0:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <g_event_start_epoch>
    97c4:	10 92 8d 47 	sts	0x478D, r1	; 0x80478d <g_event_start_epoch+0x1>
    97c8:	10 92 8e 47 	sts	0x478E, r1	; 0x80478e <g_event_start_epoch+0x2>
    97cc:	10 92 8f 47 	sts	0x478F, r1	; 0x80478f <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    97d0:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <g_event_start_epoch>
    97d4:	90 91 8d 47 	lds	r25, 0x478D	; 0x80478d <g_event_start_epoch+0x1>
    97d8:	a0 91 8e 47 	lds	r26, 0x478E	; 0x80478e <g_event_start_epoch+0x2>
    97dc:	b0 91 8f 47 	lds	r27, 0x478F	; 0x80478f <g_event_start_epoch+0x3>
    97e0:	ac 01       	movw	r20, r24
    97e2:	bd 01       	movw	r22, r26
    97e4:	82 e0       	ldi	r24, 0x02	; 2
    97e6:	90 e0       	ldi	r25, 0x00	; 0
    97e8:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    97ec:	10 92 90 47 	sts	0x4790, r1	; 0x804790 <g_event_finish_epoch>
    97f0:	10 92 91 47 	sts	0x4791, r1	; 0x804791 <g_event_finish_epoch+0x1>
    97f4:	10 92 92 47 	sts	0x4792, r1	; 0x804792 <g_event_finish_epoch+0x2>
    97f8:	10 92 93 47 	sts	0x4793, r1	; 0x804793 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    97fc:	80 91 90 47 	lds	r24, 0x4790	; 0x804790 <g_event_finish_epoch>
    9800:	90 91 91 47 	lds	r25, 0x4791	; 0x804791 <g_event_finish_epoch+0x1>
    9804:	a0 91 92 47 	lds	r26, 0x4792	; 0x804792 <g_event_finish_epoch+0x2>
    9808:	b0 91 93 47 	lds	r27, 0x4793	; 0x804793 <g_event_finish_epoch+0x3>
    980c:	ac 01       	movw	r20, r24
    980e:	bd 01       	movw	r22, r26
    9810:	86 e0       	ldi	r24, 0x06	; 6
    9812:	90 e0       	ldi	r25, 0x00	; 0
    9814:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    9818:	10 92 ac 47 	sts	0x47AC, r1	; 0x8047ac <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    981c:	80 91 ac 47 	lds	r24, 0x47AC	; 0x8047ac <g_utc_offset>
    9820:	68 2f       	mov	r22, r24
    9822:	8f e3       	ldi	r24, 0x3F	; 63
    9824:	90 e0       	ldi	r25, 0x00	; 0
    9826:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    982a:	10 92 73 47 	sts	0x4773, r1	; 0x804773 <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    982e:	60 e0       	ldi	r22, 0x00	; 0
    9830:	8a e0       	ldi	r24, 0x0A	; 10
    9832:	90 e0       	ldi	r25, 0x00	; 0
    9834:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			g_messages_text[PATTERN_TEXT][0] = 'M';
    9838:	8d e4       	ldi	r24, 0x4D	; 77
    983a:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = 'O';
    983e:	8f e4       	ldi	r24, 0x4F	; 79
    9840:	80 93 5e 47 	sts	0x475E, r24	; 0x80475e <g_messages_text>
			g_messages_text[PATTERN_TEXT][0] = '\0';
    9844:	10 92 5e 47 	sts	0x475E, r1	; 0x80475e <g_messages_text>
			avr_eeprom_write_byte(Pattern_text, 0);
    9848:	60 e0       	ldi	r22, 0x00	; 0
    984a:	8f e1       	ldi	r24, 0x1F	; 31
    984c:	90 e0       	ldi	r25, 0x00	; 0
    984e:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    9852:	83 eb       	ldi	r24, 0xB3	; 179
    9854:	94 e4       	ldi	r25, 0x44	; 68
    9856:	8d 83       	std	Y+5, r24	; 0x05
    9858:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    985a:	84 e3       	ldi	r24, 0x34	; 52
    985c:	90 e0       	ldi	r25, 0x00	; 0
    985e:	89 83       	std	Y+1, r24	; 0x01
    9860:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9862:	1b 82       	std	Y+3, r1	; 0x03
    9864:	1c 82       	std	Y+4, r1	; 0x04
    9866:	8b 81       	ldd	r24, Y+3	; 0x03
    9868:	9c 81       	ldd	r25, Y+4	; 0x04
    986a:	04 97       	sbiw	r24, 0x04	; 4
    986c:	18 f5       	brcc	.+70     	; 0x98b4 <_ZN13EepromManager20initializeEEPROMVarsEv+0x148>
			{
				g_unlockCode[j] = *v;
    986e:	8d 81       	ldd	r24, Y+5	; 0x05
    9870:	9e 81       	ldd	r25, Y+6	; 0x06
    9872:	fc 01       	movw	r30, r24
    9874:	20 81       	ld	r18, Z
    9876:	8b 81       	ldd	r24, Y+3	; 0x03
    9878:	9c 81       	ldd	r25, Y+4	; 0x04
    987a:	83 55       	subi	r24, 0x53	; 83
    987c:	98 4b       	sbci	r25, 0xB8	; 184
    987e:	fc 01       	movw	r30, r24
    9880:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    9882:	8d 81       	ldd	r24, Y+5	; 0x05
    9884:	9e 81       	ldd	r25, Y+6	; 0x06
    9886:	9c 01       	movw	r18, r24
    9888:	2f 5f       	subi	r18, 0xFF	; 255
    988a:	3f 4f       	sbci	r19, 0xFF	; 255
    988c:	2d 83       	std	Y+5, r18	; 0x05
    988e:	3e 83       	std	Y+6, r19	; 0x06
    9890:	fc 01       	movw	r30, r24
    9892:	40 81       	ld	r20, Z
    9894:	89 81       	ldd	r24, Y+1	; 0x01
    9896:	9a 81       	ldd	r25, Y+2	; 0x02
    9898:	9c 01       	movw	r18, r24
    989a:	2f 5f       	subi	r18, 0xFF	; 255
    989c:	3f 4f       	sbci	r19, 0xFF	; 255
    989e:	29 83       	std	Y+1, r18	; 0x01
    98a0:	3a 83       	std	Y+2, r19	; 0x02
    98a2:	64 2f       	mov	r22, r20
    98a4:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
			g_messages_text[PATTERN_TEXT][0] = '\0';
			avr_eeprom_write_byte(Pattern_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    98a8:	8b 81       	ldd	r24, Y+3	; 0x03
    98aa:	9c 81       	ldd	r25, Y+4	; 0x04
    98ac:	01 96       	adiw	r24, 0x01	; 1
    98ae:	8b 83       	std	Y+3, r24	; 0x03
    98b0:	9c 83       	std	Y+4, r25	; 0x04
    98b2:	d9 cf       	rjmp	.-78     	; 0x9866 <_ZN13EepromManager20initializeEEPROMVarsEv+0xfa>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    98b4:	89 81       	ldd	r24, Y+1	; 0x01
    98b6:	9a 81       	ldd	r25, Y+2	; 0x02
    98b8:	60 e0       	ldi	r22, 0x00	; 0
    98ba:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    98be:	8b 81       	ldd	r24, Y+3	; 0x03
    98c0:	9c 81       	ldd	r25, Y+4	; 0x04
    98c2:	83 55       	subi	r24, 0x53	; 83
    98c4:	98 4b       	sbci	r25, 0xB8	; 184
    98c6:	fc 01       	movw	r30, r24
    98c8:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    98ca:	80 e2       	ldi	r24, 0x20	; 32
    98cc:	94 e0       	ldi	r25, 0x04	; 4
    98ce:	a6 e3       	ldi	r26, 0x36	; 54
    98d0:	b0 e0       	ldi	r27, 0x00	; 0
    98d2:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_frequency>
    98d6:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_frequency+0x1>
    98da:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_80m_frequency+0x2>
    98de:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    98e2:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    98e6:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    98ea:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    98ee:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
    98f2:	ac 01       	movw	r20, r24
    98f4:	bd 01       	movw	r22, r26
    98f6:	80 e4       	ldi	r24, 0x40	; 64
    98f8:	90 e0       	ldi	r25, 0x00	; 0
    98fa:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    98fe:	8a ea       	ldi	r24, 0xAA	; 170
    9900:	90 e0       	ldi	r25, 0x00	; 0
    9902:	a0 e0       	ldi	r26, 0x00	; 0
    9904:	b0 e0       	ldi	r27, 0x00	; 0
    9906:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <g_rtty_offset>
    990a:	90 93 3d 40 	sts	0x403D, r25	; 0x80403d <g_rtty_offset+0x1>
    990e:	a0 93 3e 40 	sts	0x403E, r26	; 0x80403e <g_rtty_offset+0x2>
    9912:	b0 93 3f 40 	sts	0x403F, r27	; 0x80403f <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    9916:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    991a:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    991e:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    9922:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
    9926:	ac 01       	movw	r20, r24
    9928:	bd 01       	movw	r22, r26
    992a:	80 e4       	ldi	r24, 0x40	; 64
    992c:	90 e0       	ldi	r25, 0x00	; 0
    992e:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    9932:	84 ef       	ldi	r24, 0xF4	; 244
    9934:	91 e0       	ldi	r25, 0x01	; 1
    9936:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_80m_power_level_mW>
    993a:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    993e:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    9942:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
    9946:	cc 01       	movw	r24, r24
    9948:	a0 e0       	ldi	r26, 0x00	; 0
    994a:	b0 e0       	ldi	r27, 0x00	; 0
    994c:	ac 01       	movw	r20, r24
    994e:	bd 01       	movw	r22, r26
    9950:	88 e4       	ldi	r24, 0x48	; 72
    9952:	90 e0       	ldi	r25, 0x00	; 0
    9954:	0e 94 18 46 	call	0x8c30	; 0x8c30 <_Z22avr_eeprom_write_dwordjm>
			
			g_pattern_codespeed = EEPROM_PATTERN_CODE_SPEED_DEFAULT;
    9958:	88 e0       	ldi	r24, 0x08	; 8
    995a:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			avr_eeprom_write_byte(Pattern_Code_Speed, g_pattern_codespeed);
    995e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    9962:	68 2f       	mov	r22, r24
    9964:	8a e4       	ldi	r24, 0x4A	; 74
    9966:	90 e0       	ldi	r25, 0x00	; 0
    9968:	0e 94 b6 45 	call	0x8b6c	; 0x8b6c <_Z21avr_eeprom_write_bytejh>
			
			g_off_air_seconds = EEPROM_OFF_AIR_TIME_DEFAULT;
    996c:	80 ef       	ldi	r24, 0xF0	; 240
    996e:	90 e0       	ldi	r25, 0x00	; 0
    9970:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    9974:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
			avr_eeprom_write_word(Off_Air_Seconds, g_off_air_seconds);
    9978:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    997c:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    9980:	bc 01       	movw	r22, r24
    9982:	8b e4       	ldi	r24, 0x4B	; 75
    9984:	90 e0       	ldi	r25, 0x00	; 0
    9986:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
			
			g_on_air_seconds = EEPROM_ON_AIR_TIME_DEFAULT;
    998a:	8c e3       	ldi	r24, 0x3C	; 60
    998c:	90 e0       	ldi	r25, 0x00	; 0
    998e:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    9992:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			avr_eeprom_write_word(On_Air_Seconds, g_on_air_seconds);
    9996:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    999a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    999e:	bc 01       	movw	r22, r24
    99a0:	8d e4       	ldi	r24, 0x4D	; 77
    99a2:	90 e0       	ldi	r25, 0x00	; 0
    99a4:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
			
			g_ID_period_seconds = EEPROM_ID_TIME_INTERVAL_DEFAULT;
    99a8:	8c e2       	ldi	r24, 0x2C	; 44
    99aa:	91 e0       	ldi	r25, 0x01	; 1
    99ac:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    99b0:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
			avr_eeprom_write_word(ID_Period_Seconds, g_ID_period_seconds);
    99b4:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    99b8:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    99bc:	bc 01       	movw	r22, r24
    99be:	8f e4       	ldi	r24, 0x4F	; 79
    99c0:	90 e0       	ldi	r25, 0x00	; 0
    99c2:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
			
			g_intra_cycle_delay_time = EEPROM_INTRA_CYCLE_DELAY_TIME_DEFAULT;
    99c6:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_intra_cycle_delay_time>
    99ca:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_intra_cycle_delay_time+0x1>
			avr_eeprom_write_word(Intra_Cycle_Delay_Seconds, g_intra_cycle_delay_time);
    99ce:	80 91 8a 47 	lds	r24, 0x478A	; 0x80478a <g_intra_cycle_delay_time>
    99d2:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_intra_cycle_delay_time+0x1>
    99d6:	bc 01       	movw	r22, r24
    99d8:	81 e5       	ldi	r24, 0x51	; 81
    99da:	90 e0       	ldi	r25, 0x00	; 0
    99dc:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    99e0:	6e ec       	ldi	r22, 0xCE	; 206
    99e2:	70 e0       	ldi	r23, 0x00	; 0
    99e4:	80 e0       	ldi	r24, 0x00	; 0
    99e6:	90 e0       	ldi	r25, 0x00	; 0
    99e8:	0e 94 e5 45 	call	0x8bca	; 0x8bca <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    99ec:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    99ee:	2b 96       	adiw	r28, 0x0b	; 11
    99f0:	cd bf       	out	0x3d, r28	; 61
    99f2:	de bf       	out	0x3e, r29	; 62
    99f4:	df 91       	pop	r29
    99f6:	cf 91       	pop	r28
    99f8:	08 95       	ret

000099fa <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    99fa:	0f 93       	push	r16
    99fc:	1f 93       	push	r17
    99fe:	cf 93       	push	r28
    9a00:	df 93       	push	r29
    9a02:	cd b7       	in	r28, 0x3d	; 61
    9a04:	de b7       	in	r29, 0x3e	; 62
    9a06:	62 97       	sbiw	r28, 0x12	; 18
    9a08:	cd bf       	out	0x3d, r28	; 61
    9a0a:	de bf       	out	0x3e, r29	; 62
    9a0c:	89 87       	std	Y+9, r24	; 0x09
    9a0e:	9a 87       	std	Y+10, r25	; 0x0a
    9a10:	4b 87       	std	Y+11, r20	; 0x0b
    9a12:	5c 87       	std	Y+12, r21	; 0x0c
    9a14:	6d 87       	std	Y+13, r22	; 0x0d
    9a16:	7e 87       	std	Y+14, r23	; 0x0e
    9a18:	0f 87       	std	Y+15, r16	; 0x0f
    9a1a:	18 8b       	std	Y+16, r17	; 0x10
    9a1c:	29 8b       	std	Y+17, r18	; 0x11
    9a1e:	3a 8b       	std	Y+18, r19	; 0x12
    9a20:	8f 85       	ldd	r24, Y+15	; 0x0f
    9a22:	98 89       	ldd	r25, Y+16	; 0x10
    9a24:	a9 89       	ldd	r26, Y+17	; 0x11
    9a26:	ba 89       	ldd	r27, Y+18	; 0x12
    9a28:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_SAMPLING_FREQUENCY>
    9a2c:	90 93 d1 47 	sts	0x47D1, r25	; 0x8047d1 <_SAMPLING_FREQUENCY+0x1>
    9a30:	a0 93 d2 47 	sts	0x47D2, r26	; 0x8047d2 <_SAMPLING_FREQUENCY+0x2>
    9a34:	b0 93 d3 47 	sts	0x47D3, r27	; 0x8047d3 <_SAMPLING_FREQUENCY+0x3>
    9a38:	8b 85       	ldd	r24, Y+11	; 0x0b
    9a3a:	9c 85       	ldd	r25, Y+12	; 0x0c
    9a3c:	ad 85       	ldd	r26, Y+13	; 0x0d
    9a3e:	be 85       	ldd	r27, Y+14	; 0x0e
    9a40:	89 83       	std	Y+1, r24	; 0x01
    9a42:	9a 83       	std	Y+2, r25	; 0x02
    9a44:	ab 83       	std	Y+3, r26	; 0x03
    9a46:	bc 83       	std	Y+4, r27	; 0x04
    9a48:	84 e6       	ldi	r24, 0x64	; 100
    9a4a:	90 e0       	ldi	r25, 0x00	; 0
    9a4c:	8d 83       	std	Y+5, r24	; 0x05
    9a4e:	9e 83       	std	Y+6, r25	; 0x06
    9a50:	81 ed       	ldi	r24, 0xD1	; 209
    9a52:	90 e0       	ldi	r25, 0x00	; 0
    9a54:	8f 83       	std	Y+7, r24	; 0x07
    9a56:	98 87       	std	Y+8, r25	; 0x08
    9a58:	8f 81       	ldd	r24, Y+7	; 0x07
    9a5a:	98 85       	ldd	r25, Y+8	; 0x08
    9a5c:	09 2e       	mov	r0, r25
    9a5e:	00 0c       	add	r0, r0
    9a60:	aa 0b       	sbc	r26, r26
    9a62:	bb 0b       	sbc	r27, r27
    9a64:	bc 01       	movw	r22, r24
    9a66:	cd 01       	movw	r24, r26
    9a68:	0e 94 51 78 	call	0xf0a2	; 0xf0a2 <__floatsisf>
    9a6c:	dc 01       	movw	r26, r24
    9a6e:	cb 01       	movw	r24, r22
    9a70:	29 81       	ldd	r18, Y+1	; 0x01
    9a72:	3a 81       	ldd	r19, Y+2	; 0x02
    9a74:	4b 81       	ldd	r20, Y+3	; 0x03
    9a76:	5c 81       	ldd	r21, Y+4	; 0x04
    9a78:	bc 01       	movw	r22, r24
    9a7a:	cd 01       	movw	r24, r26
    9a7c:	0e 94 a2 77 	call	0xef44	; 0xef44 <__cmpsf2>
    9a80:	88 23       	and	r24, r24
    9a82:	6c f4       	brge	.+26     	; 0x9a9e <_ZN8GoertzelC1Eff+0xa4>
    9a84:	8f 81       	ldd	r24, Y+7	; 0x07
    9a86:	98 85       	ldd	r25, Y+8	; 0x08
    9a88:	09 2e       	mov	r0, r25
    9a8a:	00 0c       	add	r0, r0
    9a8c:	aa 0b       	sbc	r26, r26
    9a8e:	bb 0b       	sbc	r27, r27
    9a90:	bc 01       	movw	r22, r24
    9a92:	cd 01       	movw	r24, r26
    9a94:	0e 94 51 78 	call	0xf0a2	; 0xf0a2 <__floatsisf>
    9a98:	dc 01       	movw	r26, r24
    9a9a:	cb 01       	movw	r24, r22
    9a9c:	27 c0       	rjmp	.+78     	; 0x9aec <_ZN8GoertzelC1Eff+0xf2>
    9a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    9aa0:	9e 81       	ldd	r25, Y+6	; 0x06
    9aa2:	09 2e       	mov	r0, r25
    9aa4:	00 0c       	add	r0, r0
    9aa6:	aa 0b       	sbc	r26, r26
    9aa8:	bb 0b       	sbc	r27, r27
    9aaa:	bc 01       	movw	r22, r24
    9aac:	cd 01       	movw	r24, r26
    9aae:	0e 94 51 78 	call	0xf0a2	; 0xf0a2 <__floatsisf>
    9ab2:	dc 01       	movw	r26, r24
    9ab4:	cb 01       	movw	r24, r22
    9ab6:	29 81       	ldd	r18, Y+1	; 0x01
    9ab8:	3a 81       	ldd	r19, Y+2	; 0x02
    9aba:	4b 81       	ldd	r20, Y+3	; 0x03
    9abc:	5c 81       	ldd	r21, Y+4	; 0x04
    9abe:	bc 01       	movw	r22, r24
    9ac0:	cd 01       	movw	r24, r26
    9ac2:	0e 94 42 79 	call	0xf284	; 0xf284 <__gesf2>
    9ac6:	18 16       	cp	r1, r24
    9ac8:	6c f4       	brge	.+26     	; 0x9ae4 <_ZN8GoertzelC1Eff+0xea>
    9aca:	8d 81       	ldd	r24, Y+5	; 0x05
    9acc:	9e 81       	ldd	r25, Y+6	; 0x06
    9ace:	09 2e       	mov	r0, r25
    9ad0:	00 0c       	add	r0, r0
    9ad2:	aa 0b       	sbc	r26, r26
    9ad4:	bb 0b       	sbc	r27, r27
    9ad6:	bc 01       	movw	r22, r24
    9ad8:	cd 01       	movw	r24, r26
    9ada:	0e 94 51 78 	call	0xf0a2	; 0xf0a2 <__floatsisf>
    9ade:	dc 01       	movw	r26, r24
    9ae0:	cb 01       	movw	r24, r22
    9ae2:	04 c0       	rjmp	.+8      	; 0x9aec <_ZN8GoertzelC1Eff+0xf2>
    9ae4:	89 81       	ldd	r24, Y+1	; 0x01
    9ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    9ae8:	ab 81       	ldd	r26, Y+3	; 0x03
    9aea:	bc 81       	ldd	r27, Y+4	; 0x04
    9aec:	bc 01       	movw	r22, r24
    9aee:	cd 01       	movw	r24, r26
    9af0:	0e 94 19 78 	call	0xf032	; 0xf032 <__fixsfsi>
    9af4:	dc 01       	movw	r26, r24
    9af6:	cb 01       	movw	r24, r22
    9af8:	80 93 d4 47 	sts	0x47D4, r24	; 0x8047d4 <_N>
    9afc:	90 93 d5 47 	sts	0x47D5, r25	; 0x8047d5 <_N+0x1>
    9b00:	80 91 d4 47 	lds	r24, 0x47D4	; 0x8047d4 <_N>
    9b04:	90 91 d5 47 	lds	r25, 0x47D5	; 0x8047d5 <_N+0x1>
    9b08:	88 0f       	add	r24, r24
    9b0a:	99 1f       	adc	r25, r25
    9b0c:	0e 94 50 7a 	call	0xf4a0	; 0xf4a0 <malloc>
    9b10:	80 93 d9 47 	sts	0x47D9, r24	; 0x8047d9 <testData>
    9b14:	90 93 da 47 	sts	0x47DA, r25	; 0x8047da <testData+0x1>
    9b18:	00 00       	nop
    9b1a:	62 96       	adiw	r28, 0x12	; 18
    9b1c:	cd bf       	out	0x3d, r28	; 61
    9b1e:	de bf       	out	0x3e, r29	; 62
    9b20:	df 91       	pop	r29
    9b22:	cf 91       	pop	r28
    9b24:	1f 91       	pop	r17
    9b26:	0f 91       	pop	r16
    9b28:	08 95       	ret

00009b2a <_ZN8GoertzelD1Ev>:
    9b2a:	cf 93       	push	r28
    9b2c:	df 93       	push	r29
    9b2e:	00 d0       	rcall	.+0      	; 0x9b30 <_ZN8GoertzelD1Ev+0x6>
    9b30:	cd b7       	in	r28, 0x3d	; 61
    9b32:	de b7       	in	r29, 0x3e	; 62
    9b34:	89 83       	std	Y+1, r24	; 0x01
    9b36:	9a 83       	std	Y+2, r25	; 0x02
    9b38:	80 91 d9 47 	lds	r24, 0x47D9	; 0x8047d9 <testData>
    9b3c:	90 91 da 47 	lds	r25, 0x47DA	; 0x8047da <testData+0x1>
    9b40:	0e 94 e8 7a 	call	0xf5d0	; 0xf5d0 <free>
    9b44:	00 00       	nop
    9b46:	0f 90       	pop	r0
    9b48:	0f 90       	pop	r0
    9b4a:	df 91       	pop	r29
    9b4c:	cf 91       	pop	r28
    9b4e:	08 95       	ret

00009b50 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    9b50:	cf 93       	push	r28
    9b52:	df 93       	push	r29
    9b54:	00 d0       	rcall	.+0      	; 0x9b56 <_ZN8Goertzel9DataPointEi+0x6>
    9b56:	00 d0       	rcall	.+0      	; 0x9b58 <_ZN8Goertzel9DataPointEi+0x8>
    9b58:	cd b7       	in	r28, 0x3d	; 61
    9b5a:	de b7       	in	r29, 0x3e	; 62
    9b5c:	89 83       	std	Y+1, r24	; 0x01
    9b5e:	9a 83       	std	Y+2, r25	; 0x02
    9b60:	6b 83       	std	Y+3, r22	; 0x03
    9b62:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    9b64:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_samplesReady>
    9b68:	88 23       	and	r24, r24
    9b6a:	19 f0       	breq	.+6      	; 0x9b72 <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    9b6c:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_samplesReady>
    9b70:	32 c0       	rjmp	.+100    	; 0x9bd6 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    9b72:	20 91 d9 47 	lds	r18, 0x47D9	; 0x8047d9 <testData>
    9b76:	30 91 da 47 	lds	r19, 0x47DA	; 0x8047da <testData+0x1>
    9b7a:	80 91 d6 47 	lds	r24, 0x47D6	; 0x8047d6 <_index>
    9b7e:	90 91 d7 47 	lds	r25, 0x47D7	; 0x8047d7 <_index+0x1>
    9b82:	88 0f       	add	r24, r24
    9b84:	99 1f       	adc	r25, r25
    9b86:	82 0f       	add	r24, r18
    9b88:	93 1f       	adc	r25, r19
    9b8a:	2b 81       	ldd	r18, Y+3	; 0x03
    9b8c:	3c 81       	ldd	r19, Y+4	; 0x04
    9b8e:	fc 01       	movw	r30, r24
    9b90:	20 83       	st	Z, r18
    9b92:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    9b94:	80 91 d6 47 	lds	r24, 0x47D6	; 0x8047d6 <_index>
    9b98:	90 91 d7 47 	lds	r25, 0x47D7	; 0x8047d7 <_index+0x1>
    9b9c:	01 96       	adiw	r24, 0x01	; 1
    9b9e:	80 93 d6 47 	sts	0x47D6, r24	; 0x8047d6 <_index>
    9ba2:	90 93 d7 47 	sts	0x47D7, r25	; 0x8047d7 <_index+0x1>
	if(_index >= _N)
    9ba6:	20 91 d6 47 	lds	r18, 0x47D6	; 0x8047d6 <_index>
    9baa:	30 91 d7 47 	lds	r19, 0x47D7	; 0x8047d7 <_index+0x1>
    9bae:	80 91 d4 47 	lds	r24, 0x47D4	; 0x8047d4 <_N>
    9bb2:	90 91 d5 47 	lds	r25, 0x47D5	; 0x8047d5 <_N+0x1>
    9bb6:	41 e0       	ldi	r20, 0x01	; 1
    9bb8:	28 17       	cp	r18, r24
    9bba:	39 07       	cpc	r19, r25
    9bbc:	0c f4       	brge	.+2      	; 0x9bc0 <_ZN8Goertzel9DataPointEi+0x70>
    9bbe:	40 e0       	ldi	r20, 0x00	; 0
    9bc0:	44 23       	and	r20, r20
    9bc2:	39 f0       	breq	.+14     	; 0x9bd2 <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    9bc4:	10 92 d6 47 	sts	0x47D6, r1	; 0x8047d6 <_index>
    9bc8:	10 92 d7 47 	sts	0x47D7, r1	; 0x8047d7 <_index+0x1>
		_samplesReady = true;
    9bcc:	81 e0       	ldi	r24, 0x01	; 1
    9bce:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_samplesReady>
	}

	return(_samplesReady);
    9bd2:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_samplesReady>
}
    9bd6:	24 96       	adiw	r28, 0x04	; 4
    9bd8:	cd bf       	out	0x3d, r28	; 61
    9bda:	de bf       	out	0x3e, r29	; 62
    9bdc:	df 91       	pop	r29
    9bde:	cf 91       	pop	r28
    9be0:	08 95       	ret

00009be2 <PORTB_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9be2:	cf 93       	push	r28
    9be4:	df 93       	push	r29
    9be6:	00 d0       	rcall	.+0      	; 0x9be8 <PORTB_set_pin_pull_mode+0x6>
    9be8:	00 d0       	rcall	.+0      	; 0x9bea <PORTB_set_pin_pull_mode+0x8>
    9bea:	cd b7       	in	r28, 0x3d	; 61
    9bec:	de b7       	in	r29, 0x3e	; 62
    9bee:	8b 83       	std	Y+3, r24	; 0x03
    9bf0:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);
    9bf2:	8b 81       	ldd	r24, Y+3	; 0x03
    9bf4:	88 2f       	mov	r24, r24
    9bf6:	90 e0       	ldi	r25, 0x00	; 0
    9bf8:	80 5d       	subi	r24, 0xD0	; 208
    9bfa:	9b 4f       	sbci	r25, 0xFB	; 251
    9bfc:	89 83       	std	Y+1, r24	; 0x01
    9bfe:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9c00:	8c 81       	ldd	r24, Y+4	; 0x04
    9c02:	81 30       	cpi	r24, 0x01	; 1
    9c04:	59 f4       	brne	.+22     	; 0x9c1c <PORTB_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9c06:	89 81       	ldd	r24, Y+1	; 0x01
    9c08:	9a 81       	ldd	r25, Y+2	; 0x02
    9c0a:	fc 01       	movw	r30, r24
    9c0c:	80 81       	ld	r24, Z
    9c0e:	28 2f       	mov	r18, r24
    9c10:	28 60       	ori	r18, 0x08	; 8
    9c12:	89 81       	ldd	r24, Y+1	; 0x01
    9c14:	9a 81       	ldd	r25, Y+2	; 0x02
    9c16:	fc 01       	movw	r30, r24
    9c18:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    9c1a:	0d c0       	rjmp	.+26     	; 0x9c36 <PORTB_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    9c1c:	8c 81       	ldd	r24, Y+4	; 0x04
    9c1e:	88 23       	and	r24, r24
    9c20:	51 f4       	brne	.+20     	; 0x9c36 <PORTB_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9c22:	89 81       	ldd	r24, Y+1	; 0x01
    9c24:	9a 81       	ldd	r25, Y+2	; 0x02
    9c26:	fc 01       	movw	r30, r24
    9c28:	80 81       	ld	r24, Z
    9c2a:	28 2f       	mov	r18, r24
    9c2c:	27 7f       	andi	r18, 0xF7	; 247
    9c2e:	89 81       	ldd	r24, Y+1	; 0x01
    9c30:	9a 81       	ldd	r25, Y+2	; 0x02
    9c32:	fc 01       	movw	r30, r24
    9c34:	20 83       	st	Z, r18
	}
}
    9c36:	00 00       	nop
    9c38:	24 96       	adiw	r28, 0x04	; 4
    9c3a:	cd bf       	out	0x3d, r28	; 61
    9c3c:	de bf       	out	0x3e, r29	; 62
    9c3e:	df 91       	pop	r29
    9c40:	cf 91       	pop	r28
    9c42:	08 95       	ret

00009c44 <PORTC_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    9c44:	cf 93       	push	r28
    9c46:	df 93       	push	r29
    9c48:	00 d0       	rcall	.+0      	; 0x9c4a <PORTC_set_pin_pull_mode+0x6>
    9c4a:	00 d0       	rcall	.+0      	; 0x9c4c <PORTC_set_pin_pull_mode+0x8>
    9c4c:	cd b7       	in	r28, 0x3d	; 61
    9c4e:	de b7       	in	r29, 0x3e	; 62
    9c50:	8b 83       	std	Y+3, r24	; 0x03
    9c52:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
    9c54:	8b 81       	ldd	r24, Y+3	; 0x03
    9c56:	88 2f       	mov	r24, r24
    9c58:	90 e0       	ldi	r25, 0x00	; 0
    9c5a:	80 5b       	subi	r24, 0xB0	; 176
    9c5c:	9b 4f       	sbci	r25, 0xFB	; 251
    9c5e:	89 83       	std	Y+1, r24	; 0x01
    9c60:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    9c62:	8c 81       	ldd	r24, Y+4	; 0x04
    9c64:	81 30       	cpi	r24, 0x01	; 1
    9c66:	59 f4       	brne	.+22     	; 0x9c7e <PORTC_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9c68:	89 81       	ldd	r24, Y+1	; 0x01
    9c6a:	9a 81       	ldd	r25, Y+2	; 0x02
    9c6c:	fc 01       	movw	r30, r24
    9c6e:	80 81       	ld	r24, Z
    9c70:	28 2f       	mov	r18, r24
    9c72:	28 60       	ori	r18, 0x08	; 8
    9c74:	89 81       	ldd	r24, Y+1	; 0x01
    9c76:	9a 81       	ldd	r25, Y+2	; 0x02
    9c78:	fc 01       	movw	r30, r24
    9c7a:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    9c7c:	0d c0       	rjmp	.+26     	; 0x9c98 <PORTC_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    9c7e:	8c 81       	ldd	r24, Y+4	; 0x04
    9c80:	88 23       	and	r24, r24
    9c82:	51 f4       	brne	.+20     	; 0x9c98 <PORTC_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9c84:	89 81       	ldd	r24, Y+1	; 0x01
    9c86:	9a 81       	ldd	r25, Y+2	; 0x02
    9c88:	fc 01       	movw	r30, r24
    9c8a:	80 81       	ld	r24, Z
    9c8c:	28 2f       	mov	r18, r24
    9c8e:	27 7f       	andi	r18, 0xF7	; 247
    9c90:	89 81       	ldd	r24, Y+1	; 0x01
    9c92:	9a 81       	ldd	r25, Y+2	; 0x02
    9c94:	fc 01       	movw	r30, r24
    9c96:	20 83       	st	Z, r18
	}
}
    9c98:	00 00       	nop
    9c9a:	24 96       	adiw	r28, 0x04	; 4
    9c9c:	cd bf       	out	0x3d, r28	; 61
    9c9e:	de bf       	out	0x3e, r29	; 62
    9ca0:	df 91       	pop	r29
    9ca2:	cf 91       	pop	r28
    9ca4:	08 95       	ret

00009ca6 <I2C_0_Init>:
/************************************************************************/
/* I2C_0                                                               */
/************************************************************************/

void I2C_0_Init(void)
{
    9ca6:	cf 93       	push	r28
    9ca8:	df 93       	push	r29
    9caa:	cd b7       	in	r28, 0x3d	; 61
    9cac:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PC2/PC3 */
	PORTMUX.TWIROUTEA &= 0x0A;
    9cae:	80 ee       	ldi	r24, 0xE0	; 224
    9cb0:	95 e0       	ldi	r25, 0x05	; 5
    9cb2:	20 ee       	ldi	r18, 0xE0	; 224
    9cb4:	35 e0       	ldi	r19, 0x05	; 5
    9cb6:	f9 01       	movw	r30, r18
    9cb8:	25 81       	ldd	r18, Z+5	; 0x05
    9cba:	2a 70       	andi	r18, 0x0A	; 10
    9cbc:	fc 01       	movw	r30, r24
    9cbe:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    9cc0:	80 ee       	ldi	r24, 0xE0	; 224
    9cc2:	95 e0       	ldi	r25, 0x05	; 5
    9cc4:	20 ee       	ldi	r18, 0xE0	; 224
    9cc6:	35 e0       	ldi	r19, 0x05	; 5
    9cc8:	f9 01       	movw	r30, r18
    9cca:	25 81       	ldd	r18, Z+5	; 0x05
    9ccc:	22 60       	ori	r18, 0x02	; 2
    9cce:	fc 01       	movw	r30, r24
    9cd0:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    9cd2:	80 e0       	ldi	r24, 0x00	; 0
    9cd4:	99 e0       	ldi	r25, 0x09	; 9
    9cd6:	23 e7       	ldi	r18, 0x73	; 115
    9cd8:	fc 01       	movw	r30, r24
    9cda:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    9cdc:	80 e0       	ldi	r24, 0x00	; 0
    9cde:	99 e0       	ldi	r25, 0x09	; 9
    9ce0:	21 e0       	ldi	r18, 0x01	; 1
    9ce2:	fc 01       	movw	r30, r24
    9ce4:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    9ce6:	80 e0       	ldi	r24, 0x00	; 0
    9ce8:	99 e0       	ldi	r25, 0x09	; 9
    9cea:	fc 01       	movw	r30, r24
    9cec:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    9cee:	80 e0       	ldi	r24, 0x00	; 0
    9cf0:	99 e0       	ldi	r25, 0x09	; 9
    9cf2:	fc 01       	movw	r30, r24
    9cf4:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    9cf6:	80 e0       	ldi	r24, 0x00	; 0
    9cf8:	99 e0       	ldi	r25, 0x09	; 9
    9cfa:	21 e0       	ldi	r18, 0x01	; 1
    9cfc:	fc 01       	movw	r30, r24
    9cfe:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
	
	PORTC_set_pin_pull_mode(2, PORT_PULL_UP);
    9d00:	61 e0       	ldi	r22, 0x01	; 1
    9d02:	82 e0       	ldi	r24, 0x02	; 2
    9d04:	0e 94 22 4e 	call	0x9c44	; 0x9c44 <PORTC_set_pin_pull_mode>
	PORTC_set_pin_pull_mode(3, PORT_PULL_UP);
    9d08:	61 e0       	ldi	r22, 0x01	; 1
    9d0a:	83 e0       	ldi	r24, 0x03	; 3
    9d0c:	0e 94 22 4e 	call	0x9c44	; 0x9c44 <PORTC_set_pin_pull_mode>
}
    9d10:	00 00       	nop
    9d12:	df 91       	pop	r29
    9d14:	cf 91       	pop	r28
    9d16:	08 95       	ret

00009d18 <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    9d18:	cf 93       	push	r28
    9d1a:	df 93       	push	r29
    9d1c:	1f 92       	push	r1
    9d1e:	cd b7       	in	r28, 0x3d	; 61
    9d20:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9d22:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 300;
    9d24:	8c e2       	ldi	r24, 0x2C	; 44
    9d26:	91 e0       	ldi	r25, 0x01	; 1
    9d28:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    9d2c:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9d30:	80 e0       	ldi	r24, 0x00	; 0
    9d32:	99 e0       	ldi	r25, 0x09	; 9
    9d34:	fc 01       	movw	r30, r24
    9d36:	85 81       	ldd	r24, Z+5	; 0x05
    9d38:	88 2f       	mov	r24, r24
    9d3a:	90 e0       	ldi	r25, 0x00	; 0
    9d3c:	80 7c       	andi	r24, 0xC0	; 192
    9d3e:	99 27       	eor	r25, r25
    9d40:	21 e0       	ldi	r18, 0x01	; 1
    9d42:	89 2b       	or	r24, r25
    9d44:	09 f4       	brne	.+2      	; 0x9d48 <_ZL11i2c_0_WaitWv+0x30>
    9d46:	20 e0       	ldi	r18, 0x00	; 0
    9d48:	22 23       	and	r18, r18
    9d4a:	a1 f0       	breq	.+40     	; 0x9d74 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    9d4c:	80 e0       	ldi	r24, 0x00	; 0
    9d4e:	99 e0       	ldi	r25, 0x09	; 9
    9d50:	fc 01       	movw	r30, r24
    9d52:	85 81       	ldd	r24, Z+5	; 0x05
    9d54:	88 2f       	mov	r24, r24
    9d56:	90 e0       	ldi	r25, 0x00	; 0
    9d58:	80 71       	andi	r24, 0x10	; 16
    9d5a:	99 27       	eor	r25, r25
    9d5c:	21 e0       	ldi	r18, 0x01	; 1
    9d5e:	89 2b       	or	r24, r25
    9d60:	09 f0       	breq	.+2      	; 0x9d64 <_ZL11i2c_0_WaitWv+0x4c>
    9d62:	20 e0       	ldi	r18, 0x00	; 0
    9d64:	22 23       	and	r18, r18
    9d66:	19 f0       	breq	.+6      	; 0x9d6e <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9d68:	81 e0       	ldi	r24, 0x01	; 1
    9d6a:	89 83       	std	Y+1, r24	; 0x01
    9d6c:	13 c0       	rjmp	.+38     	; 0x9d94 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    9d6e:	82 e0       	ldi	r24, 0x02	; 2
    9d70:	89 83       	std	Y+1, r24	; 0x01
    9d72:	10 c0       	rjmp	.+32     	; 0x9d94 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9d74:	80 e0       	ldi	r24, 0x00	; 0
    9d76:	99 e0       	ldi	r25, 0x09	; 9
    9d78:	fc 01       	movw	r30, r24
    9d7a:	85 81       	ldd	r24, Z+5	; 0x05
    9d7c:	88 2f       	mov	r24, r24
    9d7e:	90 e0       	ldi	r25, 0x00	; 0
    9d80:	8c 70       	andi	r24, 0x0C	; 12
    9d82:	99 27       	eor	r25, r25
    9d84:	21 e0       	ldi	r18, 0x01	; 1
    9d86:	89 2b       	or	r24, r25
    9d88:	09 f4       	brne	.+2      	; 0x9d8c <_ZL11i2c_0_WaitWv+0x74>
    9d8a:	20 e0       	ldi	r18, 0x00	; 0
    9d8c:	22 23       	and	r18, r18
    9d8e:	11 f0       	breq	.+4      	; 0x9d94 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9d90:	84 e0       	ldi	r24, 0x04	; 4
    9d92:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9d94:	89 81       	ldd	r24, Y+1	; 0x01
    9d96:	88 23       	and	r24, r24
    9d98:	41 f4       	brne	.+16     	; 0x9daa <_ZL11i2c_0_WaitWv+0x92>
    9d9a:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    9d9e:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    9da2:	89 2b       	or	r24, r25
    9da4:	11 f0       	breq	.+4      	; 0x9daa <_ZL11i2c_0_WaitWv+0x92>
    9da6:	81 e0       	ldi	r24, 0x01	; 1
    9da8:	01 c0       	rjmp	.+2      	; 0x9dac <_ZL11i2c_0_WaitWv+0x94>
    9daa:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 300;
	
	do
    9dac:	88 23       	and	r24, r24
    9dae:	09 f0       	breq	.+2      	; 0x9db2 <_ZL11i2c_0_WaitWv+0x9a>
    9db0:	bf cf       	rjmp	.-130    	; 0x9d30 <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    9db2:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    9db6:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    9dba:	21 e0       	ldi	r18, 0x01	; 1
    9dbc:	89 2b       	or	r24, r25
    9dbe:	09 f0       	breq	.+2      	; 0x9dc2 <_ZL11i2c_0_WaitWv+0xaa>
    9dc0:	20 e0       	ldi	r18, 0x00	; 0
    9dc2:	22 23       	and	r18, r18
    9dc4:	11 f0       	breq	.+4      	; 0x9dca <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    9dc6:	84 e0       	ldi	r24, 0x04	; 4
    9dc8:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    9dca:	89 81       	ldd	r24, Y+1	; 0x01
}
    9dcc:	0f 90       	pop	r0
    9dce:	df 91       	pop	r29
    9dd0:	cf 91       	pop	r28
    9dd2:	08 95       	ret

00009dd4 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    9dd4:	cf 93       	push	r28
    9dd6:	df 93       	push	r29
    9dd8:	1f 92       	push	r1
    9dda:	cd b7       	in	r28, 0x3d	; 61
    9ddc:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9dde:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    9de0:	88 ec       	ldi	r24, 0xC8	; 200
    9de2:	90 e0       	ldi	r25, 0x00	; 0
    9de4:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    9de8:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9dec:	80 e0       	ldi	r24, 0x00	; 0
    9dee:	99 e0       	ldi	r25, 0x09	; 9
    9df0:	fc 01       	movw	r30, r24
    9df2:	85 81       	ldd	r24, Z+5	; 0x05
    9df4:	88 2f       	mov	r24, r24
    9df6:	90 e0       	ldi	r25, 0x00	; 0
    9df8:	80 7c       	andi	r24, 0xC0	; 192
    9dfa:	99 27       	eor	r25, r25
    9dfc:	21 e0       	ldi	r18, 0x01	; 1
    9dfe:	89 2b       	or	r24, r25
    9e00:	09 f4       	brne	.+2      	; 0x9e04 <_ZL11i2c_0_WaitRv+0x30>
    9e02:	20 e0       	ldi	r18, 0x00	; 0
    9e04:	22 23       	and	r18, r18
    9e06:	19 f0       	breq	.+6      	; 0x9e0e <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    9e08:	83 e0       	ldi	r24, 0x03	; 3
    9e0a:	89 83       	std	Y+1, r24	; 0x01
    9e0c:	10 c0       	rjmp	.+32     	; 0x9e2e <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9e0e:	80 e0       	ldi	r24, 0x00	; 0
    9e10:	99 e0       	ldi	r25, 0x09	; 9
    9e12:	fc 01       	movw	r30, r24
    9e14:	85 81       	ldd	r24, Z+5	; 0x05
    9e16:	88 2f       	mov	r24, r24
    9e18:	90 e0       	ldi	r25, 0x00	; 0
    9e1a:	8c 70       	andi	r24, 0x0C	; 12
    9e1c:	99 27       	eor	r25, r25
    9e1e:	21 e0       	ldi	r18, 0x01	; 1
    9e20:	89 2b       	or	r24, r25
    9e22:	09 f4       	brne	.+2      	; 0x9e26 <_ZL11i2c_0_WaitRv+0x52>
    9e24:	20 e0       	ldi	r18, 0x00	; 0
    9e26:	22 23       	and	r18, r18
    9e28:	11 f0       	breq	.+4      	; 0x9e2e <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9e2a:	84 e0       	ldi	r24, 0x04	; 4
    9e2c:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9e2e:	89 81       	ldd	r24, Y+1	; 0x01
    9e30:	88 23       	and	r24, r24
    9e32:	41 f4       	brne	.+16     	; 0x9e44 <_ZL11i2c_0_WaitRv+0x70>
    9e34:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    9e38:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    9e3c:	89 2b       	or	r24, r25
    9e3e:	11 f0       	breq	.+4      	; 0x9e44 <_ZL11i2c_0_WaitRv+0x70>
    9e40:	81 e0       	ldi	r24, 0x01	; 1
    9e42:	01 c0       	rjmp	.+2      	; 0x9e46 <_ZL11i2c_0_WaitRv+0x72>
    9e44:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    9e46:	88 23       	and	r24, r24
    9e48:	09 f0       	breq	.+2      	; 0x9e4c <_ZL11i2c_0_WaitRv+0x78>
    9e4a:	d0 cf       	rjmp	.-96     	; 0x9dec <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    9e4c:	89 81       	ldd	r24, Y+1	; 0x01
}
    9e4e:	0f 90       	pop	r0
    9e50:	df 91       	pop	r29
    9e52:	cf 91       	pop	r28
    9e54:	08 95       	ret

00009e56 <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9e56:	cf 93       	push	r28
    9e58:	df 93       	push	r29
    9e5a:	cd b7       	in	r28, 0x3d	; 61
    9e5c:	de b7       	in	r29, 0x3e	; 62
    9e5e:	26 97       	sbiw	r28, 0x06	; 6
    9e60:	cd bf       	out	0x3d, r28	; 61
    9e62:	de bf       	out	0x3e, r29	; 62
    9e64:	8a 83       	std	Y+2, r24	; 0x02
    9e66:	6b 83       	std	Y+3, r22	; 0x03
    9e68:	4c 83       	std	Y+4, r20	; 0x04
    9e6a:	5d 83       	std	Y+5, r21	; 0x05
    9e6c:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    9e6e:	8f ef       	ldi	r24, 0xFF	; 255
    9e70:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    9e72:	80 e0       	ldi	r24, 0x00	; 0
    9e74:	99 e0       	ldi	r25, 0x09	; 9
    9e76:	2a 81       	ldd	r18, Y+2	; 0x02
    9e78:	fc 01       	movw	r30, r24
    9e7a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9e7c:	0e 94 8c 4e 	call	0x9d18	; 0x9d18 <_ZL11i2c_0_WaitWv>
    9e80:	98 2f       	mov	r25, r24
    9e82:	81 e0       	ldi	r24, 0x01	; 1
    9e84:	91 30       	cpi	r25, 0x01	; 1
    9e86:	09 f4       	brne	.+2      	; 0x9e8a <I2C_0_SendData+0x34>
    9e88:	80 e0       	ldi	r24, 0x00	; 0
    9e8a:	88 23       	and	r24, r24
    9e8c:	11 f0       	breq	.+4      	; 0x9e92 <I2C_0_SendData+0x3c>
	{
		return retVal;
    9e8e:	89 81       	ldd	r24, Y+1	; 0x01
    9e90:	44 c0       	rjmp	.+136    	; 0x9f1a <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9e92:	80 e0       	ldi	r24, 0x00	; 0
    9e94:	99 e0       	ldi	r25, 0x09	; 9
    9e96:	2b 81       	ldd	r18, Y+3	; 0x03
    9e98:	fc 01       	movw	r30, r24
    9e9a:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9e9c:	0e 94 8c 4e 	call	0x9d18	; 0x9d18 <_ZL11i2c_0_WaitWv>
    9ea0:	98 2f       	mov	r25, r24
    9ea2:	81 e0       	ldi	r24, 0x01	; 1
    9ea4:	91 30       	cpi	r25, 0x01	; 1
    9ea6:	09 f4       	brne	.+2      	; 0x9eaa <I2C_0_SendData+0x54>
    9ea8:	80 e0       	ldi	r24, 0x00	; 0
    9eaa:	88 23       	and	r24, r24
    9eac:	11 f0       	breq	.+4      	; 0x9eb2 <I2C_0_SendData+0x5c>
	{
		return retVal;
    9eae:	89 81       	ldd	r24, Y+1	; 0x01
    9eb0:	34 c0       	rjmp	.+104    	; 0x9f1a <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    9eb2:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    9eb4:	8e 81       	ldd	r24, Y+6	; 0x06
    9eb6:	88 23       	and	r24, r24
    9eb8:	79 f1       	breq	.+94     	; 0x9f18 <I2C_0_SendData+0xc2>
    9eba:	8c 81       	ldd	r24, Y+4	; 0x04
    9ebc:	9d 81       	ldd	r25, Y+5	; 0x05
    9ebe:	89 2b       	or	r24, r25
    9ec0:	59 f1       	breq	.+86     	; 0x9f18 <I2C_0_SendData+0xc2>
	{
		while(len--)
    9ec2:	8e 81       	ldd	r24, Y+6	; 0x06
    9ec4:	9f ef       	ldi	r25, 0xFF	; 255
    9ec6:	98 0f       	add	r25, r24
    9ec8:	9e 83       	std	Y+6, r25	; 0x06
    9eca:	91 e0       	ldi	r25, 0x01	; 1
    9ecc:	88 23       	and	r24, r24
    9ece:	09 f4       	brne	.+2      	; 0x9ed2 <I2C_0_SendData+0x7c>
    9ed0:	90 e0       	ldi	r25, 0x00	; 0
    9ed2:	99 23       	and	r25, r25
    9ed4:	09 f1       	breq	.+66     	; 0x9f18 <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    9ed6:	80 e0       	ldi	r24, 0x00	; 0
    9ed8:	99 e0       	ldi	r25, 0x09	; 9
    9eda:	2c 81       	ldd	r18, Y+4	; 0x04
    9edc:	3d 81       	ldd	r19, Y+5	; 0x05
    9ede:	f9 01       	movw	r30, r18
    9ee0:	20 81       	ld	r18, Z
    9ee2:	fc 01       	movw	r30, r24
    9ee4:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    9ee6:	0e 94 8c 4e 	call	0x9d18	; 0x9d18 <_ZL11i2c_0_WaitWv>
    9eea:	98 2f       	mov	r25, r24
    9eec:	81 e0       	ldi	r24, 0x01	; 1
    9eee:	91 30       	cpi	r25, 0x01	; 1
    9ef0:	09 f0       	breq	.+2      	; 0x9ef4 <I2C_0_SendData+0x9e>
    9ef2:	80 e0       	ldi	r24, 0x00	; 0
    9ef4:	88 23       	and	r24, r24
    9ef6:	79 f0       	breq	.+30     	; 0x9f16 <I2C_0_SendData+0xc0>
			{
				retVal++;
    9ef8:	89 81       	ldd	r24, Y+1	; 0x01
    9efa:	8f 5f       	subi	r24, 0xFF	; 255
    9efc:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9efe:	8c 81       	ldd	r24, Y+4	; 0x04
    9f00:	9d 81       	ldd	r25, Y+5	; 0x05
    9f02:	01 96       	adiw	r24, 0x01	; 1
    9f04:	8c 83       	std	Y+4, r24	; 0x04
    9f06:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    9f08:	8e 81       	ldd	r24, Y+6	; 0x06
    9f0a:	88 23       	and	r24, r24
    9f0c:	11 f4       	brne	.+4      	; 0x9f12 <I2C_0_SendData+0xbc>
    9f0e:	0e 94 11 50 	call	0xa022	; 0xa022 <I2C_0_EndSession>
				continue;
    9f12:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    9f14:	d6 cf       	rjmp	.-84     	; 0x9ec2 <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    9f16:	00 00       	nop
			}
		}
	}
	
	return retVal;
    9f18:	89 81       	ldd	r24, Y+1	; 0x01
}
    9f1a:	26 96       	adiw	r28, 0x06	; 6
    9f1c:	cd bf       	out	0x3d, r28	; 61
    9f1e:	de bf       	out	0x3e, r29	; 62
    9f20:	df 91       	pop	r29
    9f22:	cf 91       	pop	r28
    9f24:	08 95       	ret

00009f26 <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9f26:	cf 93       	push	r28
    9f28:	df 93       	push	r29
    9f2a:	cd b7       	in	r28, 0x3d	; 61
    9f2c:	de b7       	in	r29, 0x3e	; 62
    9f2e:	26 97       	sbiw	r28, 0x06	; 6
    9f30:	cd bf       	out	0x3d, r28	; 61
    9f32:	de bf       	out	0x3e, r29	; 62
    9f34:	8a 83       	std	Y+2, r24	; 0x02
    9f36:	6b 83       	std	Y+3, r22	; 0x03
    9f38:	4c 83       	std	Y+4, r20	; 0x04
    9f3a:	5d 83       	std	Y+5, r21	; 0x05
    9f3c:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    9f3e:	8f ef       	ldi	r24, 0xFF	; 255
    9f40:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    9f42:	80 e0       	ldi	r24, 0x00	; 0
    9f44:	99 e0       	ldi	r25, 0x09	; 9
    9f46:	2a 81       	ldd	r18, Y+2	; 0x02
    9f48:	fc 01       	movw	r30, r24
    9f4a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9f4c:	0e 94 8c 4e 	call	0x9d18	; 0x9d18 <_ZL11i2c_0_WaitWv>
    9f50:	98 2f       	mov	r25, r24
    9f52:	81 e0       	ldi	r24, 0x01	; 1
    9f54:	91 30       	cpi	r25, 0x01	; 1
    9f56:	09 f4       	brne	.+2      	; 0x9f5a <I2C_0_GetData+0x34>
    9f58:	80 e0       	ldi	r24, 0x00	; 0
    9f5a:	88 23       	and	r24, r24
    9f5c:	11 f0       	breq	.+4      	; 0x9f62 <I2C_0_GetData+0x3c>
	{
		return retVal;
    9f5e:	89 81       	ldd	r24, Y+1	; 0x01
    9f60:	5a c0       	rjmp	.+180    	; 0xa016 <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    9f62:	80 e0       	ldi	r24, 0x00	; 0
    9f64:	99 e0       	ldi	r25, 0x09	; 9
    9f66:	2b 81       	ldd	r18, Y+3	; 0x03
    9f68:	fc 01       	movw	r30, r24
    9f6a:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9f6c:	0e 94 8c 4e 	call	0x9d18	; 0x9d18 <_ZL11i2c_0_WaitWv>
    9f70:	98 2f       	mov	r25, r24
    9f72:	81 e0       	ldi	r24, 0x01	; 1
    9f74:	91 30       	cpi	r25, 0x01	; 1
    9f76:	09 f4       	brne	.+2      	; 0x9f7a <I2C_0_GetData+0x54>
    9f78:	80 e0       	ldi	r24, 0x00	; 0
    9f7a:	88 23       	and	r24, r24
    9f7c:	11 f0       	breq	.+4      	; 0x9f82 <I2C_0_GetData+0x5c>
	{
		return retVal;
    9f7e:	89 81       	ldd	r24, Y+1	; 0x01
    9f80:	4a c0       	rjmp	.+148    	; 0xa016 <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    9f82:	80 e0       	ldi	r24, 0x00	; 0
    9f84:	99 e0       	ldi	r25, 0x09	; 9
    9f86:	2a 81       	ldd	r18, Y+2	; 0x02
    9f88:	21 60       	ori	r18, 0x01	; 1
    9f8a:	fc 01       	movw	r30, r24
    9f8c:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9f8e:	0e 94 8c 4e 	call	0x9d18	; 0x9d18 <_ZL11i2c_0_WaitWv>
    9f92:	98 2f       	mov	r25, r24
    9f94:	81 e0       	ldi	r24, 0x01	; 1
    9f96:	91 30       	cpi	r25, 0x01	; 1
    9f98:	09 f4       	brne	.+2      	; 0x9f9c <I2C_0_GetData+0x76>
    9f9a:	80 e0       	ldi	r24, 0x00	; 0
    9f9c:	88 23       	and	r24, r24
    9f9e:	11 f0       	breq	.+4      	; 0x9fa4 <I2C_0_GetData+0x7e>
	{
		return retVal;
    9fa0:	89 81       	ldd	r24, Y+1	; 0x01
    9fa2:	39 c0       	rjmp	.+114    	; 0xa016 <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    9fa4:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    9fa6:	8e 81       	ldd	r24, Y+6	; 0x06
    9fa8:	88 23       	and	r24, r24
    9faa:	a1 f1       	breq	.+104    	; 0xa014 <I2C_0_GetData+0xee>
    9fac:	8c 81       	ldd	r24, Y+4	; 0x04
    9fae:	9d 81       	ldd	r25, Y+5	; 0x05
    9fb0:	89 2b       	or	r24, r25
    9fb2:	81 f1       	breq	.+96     	; 0xa014 <I2C_0_GetData+0xee>
	{
		while(len--)
    9fb4:	8e 81       	ldd	r24, Y+6	; 0x06
    9fb6:	9f ef       	ldi	r25, 0xFF	; 255
    9fb8:	98 0f       	add	r25, r24
    9fba:	9e 83       	std	Y+6, r25	; 0x06
    9fbc:	91 e0       	ldi	r25, 0x01	; 1
    9fbe:	88 23       	and	r24, r24
    9fc0:	09 f4       	brne	.+2      	; 0x9fc4 <I2C_0_GetData+0x9e>
    9fc2:	90 e0       	ldi	r25, 0x00	; 0
    9fc4:	99 23       	and	r25, r25
    9fc6:	31 f1       	breq	.+76     	; 0xa014 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    9fc8:	0e 94 ea 4e 	call	0x9dd4	; 0x9dd4 <_ZL11i2c_0_WaitRv>
    9fcc:	98 2f       	mov	r25, r24
    9fce:	81 e0       	ldi	r24, 0x01	; 1
    9fd0:	93 30       	cpi	r25, 0x03	; 3
    9fd2:	09 f0       	breq	.+2      	; 0x9fd6 <I2C_0_GetData+0xb0>
    9fd4:	80 e0       	ldi	r24, 0x00	; 0
    9fd6:	88 23       	and	r24, r24
    9fd8:	e1 f0       	breq	.+56     	; 0xa012 <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    9fda:	80 e0       	ldi	r24, 0x00	; 0
    9fdc:	99 e0       	ldi	r25, 0x09	; 9
    9fde:	fc 01       	movw	r30, r24
    9fe0:	20 85       	ldd	r18, Z+8	; 0x08
    9fe2:	8c 81       	ldd	r24, Y+4	; 0x04
    9fe4:	9d 81       	ldd	r25, Y+5	; 0x05
    9fe6:	fc 01       	movw	r30, r24
    9fe8:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    9fea:	80 e0       	ldi	r24, 0x00	; 0
    9fec:	99 e0       	ldi	r25, 0x09	; 9
    9fee:	2e 81       	ldd	r18, Y+6	; 0x06
    9ff0:	22 23       	and	r18, r18
    9ff2:	11 f4       	brne	.+4      	; 0x9ff8 <I2C_0_GetData+0xd2>
    9ff4:	27 e0       	ldi	r18, 0x07	; 7
    9ff6:	01 c0       	rjmp	.+2      	; 0x9ffa <I2C_0_GetData+0xd4>
    9ff8:	22 e0       	ldi	r18, 0x02	; 2
    9ffa:	fc 01       	movw	r30, r24
    9ffc:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    9ffe:	89 81       	ldd	r24, Y+1	; 0x01
    a000:	8f 5f       	subi	r24, 0xFF	; 255
    a002:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a004:	8c 81       	ldd	r24, Y+4	; 0x04
    a006:	9d 81       	ldd	r25, Y+5	; 0x05
    a008:	01 96       	adiw	r24, 0x01	; 1
    a00a:	8c 83       	std	Y+4, r24	; 0x04
    a00c:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a00e:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a010:	d1 cf       	rjmp	.-94     	; 0x9fb4 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a012:	00 00       	nop
		}
	}
	
	return retVal;
    a014:	89 81       	ldd	r24, Y+1	; 0x01
}
    a016:	26 96       	adiw	r28, 0x06	; 6
    a018:	cd bf       	out	0x3d, r28	; 61
    a01a:	de bf       	out	0x3e, r29	; 62
    a01c:	df 91       	pop	r29
    a01e:	cf 91       	pop	r28
    a020:	08 95       	ret

0000a022 <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    a022:	cf 93       	push	r28
    a024:	df 93       	push	r29
    a026:	cd b7       	in	r28, 0x3d	; 61
    a028:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    a02a:	80 e0       	ldi	r24, 0x00	; 0
    a02c:	99 e0       	ldi	r25, 0x09	; 9
    a02e:	23 e0       	ldi	r18, 0x03	; 3
    a030:	fc 01       	movw	r30, r24
    a032:	24 83       	std	Z+4, r18	; 0x04
}
    a034:	00 00       	nop
    a036:	df 91       	pop	r29
    a038:	cf 91       	pop	r28
    a03a:	08 95       	ret

0000a03c <I2C_1_Init>:
/* I2C_1                                                               */
/************************************************************************/


void I2C_1_Init(void)
{
    a03c:	cf 93       	push	r28
    a03e:	df 93       	push	r29
    a040:	cd b7       	in	r28, 0x3d	; 61
    a042:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    a044:	80 ee       	ldi	r24, 0xE0	; 224
    a046:	95 e0       	ldi	r25, 0x05	; 5
    a048:	20 ee       	ldi	r18, 0xE0	; 224
    a04a:	35 e0       	ldi	r19, 0x05	; 5
    a04c:	f9 01       	movw	r30, r18
    a04e:	25 81       	ldd	r18, Z+5	; 0x05
    a050:	23 70       	andi	r18, 0x03	; 3
    a052:	fc 01       	movw	r30, r24
    a054:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    a056:	80 ee       	ldi	r24, 0xE0	; 224
    a058:	95 e0       	ldi	r25, 0x05	; 5
    a05a:	20 ee       	ldi	r18, 0xE0	; 224
    a05c:	35 e0       	ldi	r19, 0x05	; 5
    a05e:	f9 01       	movw	r30, r18
    a060:	25 81       	ldd	r18, Z+5	; 0x05
    a062:	28 60       	ori	r18, 0x08	; 8
    a064:	fc 01       	movw	r30, r24
    a066:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    a068:	80 e2       	ldi	r24, 0x20	; 32
    a06a:	99 e0       	ldi	r25, 0x09	; 9
    a06c:	23 e7       	ldi	r18, 0x73	; 115
    a06e:	fc 01       	movw	r30, r24
    a070:	26 83       	std	Z+6, r18	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    a072:	80 e2       	ldi	r24, 0x20	; 32
    a074:	99 e0       	ldi	r25, 0x09	; 9
    a076:	21 e0       	ldi	r18, 0x01	; 1
    a078:	fc 01       	movw	r30, r24
    a07a:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    a07c:	80 e2       	ldi	r24, 0x20	; 32
    a07e:	99 e0       	ldi	r25, 0x09	; 9
    a080:	fc 01       	movw	r30, r24
    a082:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    a084:	80 e2       	ldi	r24, 0x20	; 32
    a086:	99 e0       	ldi	r25, 0x09	; 9
    a088:	fc 01       	movw	r30, r24
    a08a:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    a08c:	80 e2       	ldi	r24, 0x20	; 32
    a08e:	99 e0       	ldi	r25, 0x09	; 9
    a090:	21 e0       	ldi	r18, 0x01	; 1
    a092:	fc 01       	movw	r30, r24
    a094:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    a096:	61 e0       	ldi	r22, 0x01	; 1
    a098:	82 e0       	ldi	r24, 0x02	; 2
    a09a:	0e 94 f1 4d 	call	0x9be2	; 0x9be2 <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    a09e:	61 e0       	ldi	r22, 0x01	; 1
    a0a0:	83 e0       	ldi	r24, 0x03	; 3
    a0a2:	0e 94 f1 4d 	call	0x9be2	; 0x9be2 <PORTB_set_pin_pull_mode>
}
    a0a6:	00 00       	nop
    a0a8:	df 91       	pop	r29
    a0aa:	cf 91       	pop	r28
    a0ac:	08 95       	ret

0000a0ae <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    a0ae:	cf 93       	push	r28
    a0b0:	df 93       	push	r29
    a0b2:	00 d0       	rcall	.+0      	; 0xa0b4 <_ZL11i2c_1_WaitWv+0x6>
    a0b4:	cd b7       	in	r28, 0x3d	; 61
    a0b6:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a0b8:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 200;
    a0ba:	88 ec       	ldi	r24, 0xC8	; 200
    a0bc:	90 e0       	ldi	r25, 0x00	; 0
    a0be:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <g_i2c1_timeout_ticks>
    a0c2:	90 93 2b 40 	sts	0x402B, r25	; 0x80402b <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    a0c6:	80 e2       	ldi	r24, 0x20	; 32
    a0c8:	99 e0       	ldi	r25, 0x09	; 9
    a0ca:	fc 01       	movw	r30, r24
    a0cc:	85 81       	ldd	r24, Z+5	; 0x05
    a0ce:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    a0d0:	8a 81       	ldd	r24, Y+2	; 0x02
    a0d2:	88 2f       	mov	r24, r24
    a0d4:	90 e0       	ldi	r25, 0x00	; 0
    a0d6:	80 7c       	andi	r24, 0xC0	; 192
    a0d8:	99 27       	eor	r25, r25
    a0da:	89 2b       	or	r24, r25
    a0dc:	69 f0       	breq	.+26     	; 0xa0f8 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    a0de:	8a 81       	ldd	r24, Y+2	; 0x02
    a0e0:	88 2f       	mov	r24, r24
    a0e2:	90 e0       	ldi	r25, 0x00	; 0
    a0e4:	80 71       	andi	r24, 0x10	; 16
    a0e6:	99 27       	eor	r25, r25
    a0e8:	89 2b       	or	r24, r25
    a0ea:	19 f4       	brne	.+6      	; 0xa0f2 <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    a0ec:	81 e0       	ldi	r24, 0x01	; 1
    a0ee:	89 83       	std	Y+1, r24	; 0x01
    a0f0:	0c c0       	rjmp	.+24     	; 0xa10a <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    a0f2:	82 e0       	ldi	r24, 0x02	; 2
    a0f4:	89 83       	std	Y+1, r24	; 0x01
    a0f6:	09 c0       	rjmp	.+18     	; 0xa10a <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a0f8:	8a 81       	ldd	r24, Y+2	; 0x02
    a0fa:	88 2f       	mov	r24, r24
    a0fc:	90 e0       	ldi	r25, 0x00	; 0
    a0fe:	8c 70       	andi	r24, 0x0C	; 12
    a100:	99 27       	eor	r25, r25
    a102:	89 2b       	or	r24, r25
    a104:	11 f0       	breq	.+4      	; 0xa10a <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a106:	84 e0       	ldi	r24, 0x04	; 4
    a108:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    a10a:	89 81       	ldd	r24, Y+1	; 0x01
    a10c:	88 23       	and	r24, r24
    a10e:	41 f4       	brne	.+16     	; 0xa120 <_ZL11i2c_1_WaitWv+0x72>
    a110:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <g_i2c1_timeout_ticks>
    a114:	90 91 2b 40 	lds	r25, 0x402B	; 0x80402b <g_i2c1_timeout_ticks+0x1>
    a118:	89 2b       	or	r24, r25
    a11a:	11 f0       	breq	.+4      	; 0xa120 <_ZL11i2c_1_WaitWv+0x72>
    a11c:	81 e0       	ldi	r24, 0x01	; 1
    a11e:	01 c0       	rjmp	.+2      	; 0xa122 <_ZL11i2c_1_WaitWv+0x74>
    a120:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 200;
	
	do
    a122:	88 23       	and	r24, r24
    a124:	09 f0       	breq	.+2      	; 0xa128 <_ZL11i2c_1_WaitWv+0x7a>
    a126:	cf cf       	rjmp	.-98     	; 0xa0c6 <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    a128:	89 81       	ldd	r24, Y+1	; 0x01
}
    a12a:	0f 90       	pop	r0
    a12c:	0f 90       	pop	r0
    a12e:	df 91       	pop	r29
    a130:	cf 91       	pop	r28
    a132:	08 95       	ret

0000a134 <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    a134:	cf 93       	push	r28
    a136:	df 93       	push	r29
    a138:	1f 92       	push	r1
    a13a:	cd b7       	in	r28, 0x3d	; 61
    a13c:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    a13e:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    a140:	88 ec       	ldi	r24, 0xC8	; 200
    a142:	90 e0       	ldi	r25, 0x00	; 0
    a144:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <g_i2c0_timeout_ticks>
    a148:	90 93 29 40 	sts	0x4029, r25	; 0x804029 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    a14c:	80 e2       	ldi	r24, 0x20	; 32
    a14e:	99 e0       	ldi	r25, 0x09	; 9
    a150:	fc 01       	movw	r30, r24
    a152:	85 81       	ldd	r24, Z+5	; 0x05
    a154:	88 2f       	mov	r24, r24
    a156:	90 e0       	ldi	r25, 0x00	; 0
    a158:	80 7c       	andi	r24, 0xC0	; 192
    a15a:	99 27       	eor	r25, r25
    a15c:	21 e0       	ldi	r18, 0x01	; 1
    a15e:	89 2b       	or	r24, r25
    a160:	09 f4       	brne	.+2      	; 0xa164 <_ZL11I2C_1_WaitRv+0x30>
    a162:	20 e0       	ldi	r18, 0x00	; 0
    a164:	22 23       	and	r18, r18
    a166:	19 f0       	breq	.+6      	; 0xa16e <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    a168:	83 e0       	ldi	r24, 0x03	; 3
    a16a:	89 83       	std	Y+1, r24	; 0x01
    a16c:	10 c0       	rjmp	.+32     	; 0xa18e <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    a16e:	80 e2       	ldi	r24, 0x20	; 32
    a170:	99 e0       	ldi	r25, 0x09	; 9
    a172:	fc 01       	movw	r30, r24
    a174:	85 81       	ldd	r24, Z+5	; 0x05
    a176:	88 2f       	mov	r24, r24
    a178:	90 e0       	ldi	r25, 0x00	; 0
    a17a:	8c 70       	andi	r24, 0x0C	; 12
    a17c:	99 27       	eor	r25, r25
    a17e:	21 e0       	ldi	r18, 0x01	; 1
    a180:	89 2b       	or	r24, r25
    a182:	09 f4       	brne	.+2      	; 0xa186 <_ZL11I2C_1_WaitRv+0x52>
    a184:	20 e0       	ldi	r18, 0x00	; 0
    a186:	22 23       	and	r18, r18
    a188:	11 f0       	breq	.+4      	; 0xa18e <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    a18a:	84 e0       	ldi	r24, 0x04	; 4
    a18c:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    a18e:	89 81       	ldd	r24, Y+1	; 0x01
    a190:	88 23       	and	r24, r24
    a192:	41 f4       	brne	.+16     	; 0xa1a4 <_ZL11I2C_1_WaitRv+0x70>
    a194:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <g_i2c0_timeout_ticks>
    a198:	90 91 29 40 	lds	r25, 0x4029	; 0x804029 <g_i2c0_timeout_ticks+0x1>
    a19c:	89 2b       	or	r24, r25
    a19e:	11 f0       	breq	.+4      	; 0xa1a4 <_ZL11I2C_1_WaitRv+0x70>
    a1a0:	81 e0       	ldi	r24, 0x01	; 1
    a1a2:	01 c0       	rjmp	.+2      	; 0xa1a6 <_ZL11I2C_1_WaitRv+0x72>
    a1a4:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    a1a6:	88 23       	and	r24, r24
    a1a8:	09 f0       	breq	.+2      	; 0xa1ac <_ZL11I2C_1_WaitRv+0x78>
    a1aa:	d0 cf       	rjmp	.-96     	; 0xa14c <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    a1ac:	89 81       	ldd	r24, Y+1	; 0x01
}
    a1ae:	0f 90       	pop	r0
    a1b0:	df 91       	pop	r29
    a1b2:	cf 91       	pop	r28
    a1b4:	08 95       	ret

0000a1b6 <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a1b6:	cf 93       	push	r28
    a1b8:	df 93       	push	r29
    a1ba:	cd b7       	in	r28, 0x3d	; 61
    a1bc:	de b7       	in	r29, 0x3e	; 62
    a1be:	26 97       	sbiw	r28, 0x06	; 6
    a1c0:	cd bf       	out	0x3d, r28	; 61
    a1c2:	de bf       	out	0x3e, r29	; 62
    a1c4:	8a 83       	std	Y+2, r24	; 0x02
    a1c6:	6b 83       	std	Y+3, r22	; 0x03
    a1c8:	4c 83       	std	Y+4, r20	; 0x04
    a1ca:	5d 83       	std	Y+5, r21	; 0x05
    a1cc:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    a1ce:	8f ef       	ldi	r24, 0xFF	; 255
    a1d0:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    a1d2:	80 e2       	ldi	r24, 0x20	; 32
    a1d4:	99 e0       	ldi	r25, 0x09	; 9
    a1d6:	2a 81       	ldd	r18, Y+2	; 0x02
    a1d8:	2e 7f       	andi	r18, 0xFE	; 254
    a1da:	fc 01       	movw	r30, r24
    a1dc:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a1de:	0e 94 57 50 	call	0xa0ae	; 0xa0ae <_ZL11i2c_1_WaitWv>
    a1e2:	98 2f       	mov	r25, r24
    a1e4:	81 e0       	ldi	r24, 0x01	; 1
    a1e6:	91 30       	cpi	r25, 0x01	; 1
    a1e8:	09 f4       	brne	.+2      	; 0xa1ec <I2C_1_SendData+0x36>
    a1ea:	80 e0       	ldi	r24, 0x00	; 0
    a1ec:	88 23       	and	r24, r24
    a1ee:	11 f0       	breq	.+4      	; 0xa1f4 <I2C_1_SendData+0x3e>
	{
		return retVal;
    a1f0:	89 81       	ldd	r24, Y+1	; 0x01
    a1f2:	44 c0       	rjmp	.+136    	; 0xa27c <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a1f4:	80 e2       	ldi	r24, 0x20	; 32
    a1f6:	99 e0       	ldi	r25, 0x09	; 9
    a1f8:	2b 81       	ldd	r18, Y+3	; 0x03
    a1fa:	fc 01       	movw	r30, r24
    a1fc:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a1fe:	0e 94 57 50 	call	0xa0ae	; 0xa0ae <_ZL11i2c_1_WaitWv>
    a202:	98 2f       	mov	r25, r24
    a204:	81 e0       	ldi	r24, 0x01	; 1
    a206:	91 30       	cpi	r25, 0x01	; 1
    a208:	09 f4       	brne	.+2      	; 0xa20c <I2C_1_SendData+0x56>
    a20a:	80 e0       	ldi	r24, 0x00	; 0
    a20c:	88 23       	and	r24, r24
    a20e:	11 f0       	breq	.+4      	; 0xa214 <I2C_1_SendData+0x5e>
	{
		return retVal;
    a210:	89 81       	ldd	r24, Y+1	; 0x01
    a212:	34 c0       	rjmp	.+104    	; 0xa27c <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    a214:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    a216:	8e 81       	ldd	r24, Y+6	; 0x06
    a218:	88 23       	and	r24, r24
    a21a:	79 f1       	breq	.+94     	; 0xa27a <I2C_1_SendData+0xc4>
    a21c:	8c 81       	ldd	r24, Y+4	; 0x04
    a21e:	9d 81       	ldd	r25, Y+5	; 0x05
    a220:	89 2b       	or	r24, r25
    a222:	59 f1       	breq	.+86     	; 0xa27a <I2C_1_SendData+0xc4>
	{
		while(len--)
    a224:	8e 81       	ldd	r24, Y+6	; 0x06
    a226:	9f ef       	ldi	r25, 0xFF	; 255
    a228:	98 0f       	add	r25, r24
    a22a:	9e 83       	std	Y+6, r25	; 0x06
    a22c:	91 e0       	ldi	r25, 0x01	; 1
    a22e:	88 23       	and	r24, r24
    a230:	09 f4       	brne	.+2      	; 0xa234 <I2C_1_SendData+0x7e>
    a232:	90 e0       	ldi	r25, 0x00	; 0
    a234:	99 23       	and	r25, r25
    a236:	09 f1       	breq	.+66     	; 0xa27a <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    a238:	80 e2       	ldi	r24, 0x20	; 32
    a23a:	99 e0       	ldi	r25, 0x09	; 9
    a23c:	2c 81       	ldd	r18, Y+4	; 0x04
    a23e:	3d 81       	ldd	r19, Y+5	; 0x05
    a240:	f9 01       	movw	r30, r18
    a242:	20 81       	ld	r18, Z
    a244:	fc 01       	movw	r30, r24
    a246:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    a248:	0e 94 57 50 	call	0xa0ae	; 0xa0ae <_ZL11i2c_1_WaitWv>
    a24c:	98 2f       	mov	r25, r24
    a24e:	81 e0       	ldi	r24, 0x01	; 1
    a250:	91 30       	cpi	r25, 0x01	; 1
    a252:	09 f0       	breq	.+2      	; 0xa256 <I2C_1_SendData+0xa0>
    a254:	80 e0       	ldi	r24, 0x00	; 0
    a256:	88 23       	and	r24, r24
    a258:	79 f0       	breq	.+30     	; 0xa278 <I2C_1_SendData+0xc2>
			{
				retVal++;
    a25a:	89 81       	ldd	r24, Y+1	; 0x01
    a25c:	8f 5f       	subi	r24, 0xFF	; 255
    a25e:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a260:	8c 81       	ldd	r24, Y+4	; 0x04
    a262:	9d 81       	ldd	r25, Y+5	; 0x05
    a264:	01 96       	adiw	r24, 0x01	; 1
    a266:	8c 83       	std	Y+4, r24	; 0x04
    a268:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    a26a:	8e 81       	ldd	r24, Y+6	; 0x06
    a26c:	88 23       	and	r24, r24
    a26e:	11 f4       	brne	.+4      	; 0xa274 <I2C_1_SendData+0xbe>
    a270:	0e 94 c2 51 	call	0xa384	; 0xa384 <I2C_1_EndSession>
				continue;
    a274:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    a276:	d6 cf       	rjmp	.-84     	; 0xa224 <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    a278:	00 00       	nop
			}
		}
	}
	
	return retVal;
    a27a:	89 81       	ldd	r24, Y+1	; 0x01
}
    a27c:	26 96       	adiw	r28, 0x06	; 6
    a27e:	cd bf       	out	0x3d, r28	; 61
    a280:	de bf       	out	0x3e, r29	; 62
    a282:	df 91       	pop	r29
    a284:	cf 91       	pop	r28
    a286:	08 95       	ret

0000a288 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    a288:	cf 93       	push	r28
    a28a:	df 93       	push	r29
    a28c:	cd b7       	in	r28, 0x3d	; 61
    a28e:	de b7       	in	r29, 0x3e	; 62
    a290:	26 97       	sbiw	r28, 0x06	; 6
    a292:	cd bf       	out	0x3d, r28	; 61
    a294:	de bf       	out	0x3e, r29	; 62
    a296:	8a 83       	std	Y+2, r24	; 0x02
    a298:	6b 83       	std	Y+3, r22	; 0x03
    a29a:	4c 83       	std	Y+4, r20	; 0x04
    a29c:	5d 83       	std	Y+5, r21	; 0x05
    a29e:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    a2a0:	8f ef       	ldi	r24, 0xFF	; 255
    a2a2:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    a2a4:	80 e2       	ldi	r24, 0x20	; 32
    a2a6:	99 e0       	ldi	r25, 0x09	; 9
    a2a8:	2a 81       	ldd	r18, Y+2	; 0x02
    a2aa:	fc 01       	movw	r30, r24
    a2ac:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a2ae:	0e 94 57 50 	call	0xa0ae	; 0xa0ae <_ZL11i2c_1_WaitWv>
    a2b2:	98 2f       	mov	r25, r24
    a2b4:	81 e0       	ldi	r24, 0x01	; 1
    a2b6:	91 30       	cpi	r25, 0x01	; 1
    a2b8:	09 f4       	brne	.+2      	; 0xa2bc <I2C_1_GetData+0x34>
    a2ba:	80 e0       	ldi	r24, 0x00	; 0
    a2bc:	88 23       	and	r24, r24
    a2be:	11 f0       	breq	.+4      	; 0xa2c4 <I2C_1_GetData+0x3c>
	{
		return retVal;
    a2c0:	89 81       	ldd	r24, Y+1	; 0x01
    a2c2:	5a c0       	rjmp	.+180    	; 0xa378 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    a2c4:	80 e2       	ldi	r24, 0x20	; 32
    a2c6:	99 e0       	ldi	r25, 0x09	; 9
    a2c8:	2b 81       	ldd	r18, Y+3	; 0x03
    a2ca:	fc 01       	movw	r30, r24
    a2cc:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    a2ce:	0e 94 57 50 	call	0xa0ae	; 0xa0ae <_ZL11i2c_1_WaitWv>
    a2d2:	98 2f       	mov	r25, r24
    a2d4:	81 e0       	ldi	r24, 0x01	; 1
    a2d6:	91 30       	cpi	r25, 0x01	; 1
    a2d8:	09 f4       	brne	.+2      	; 0xa2dc <I2C_1_GetData+0x54>
    a2da:	80 e0       	ldi	r24, 0x00	; 0
    a2dc:	88 23       	and	r24, r24
    a2de:	11 f0       	breq	.+4      	; 0xa2e4 <I2C_1_GetData+0x5c>
	{
		return retVal;
    a2e0:	89 81       	ldd	r24, Y+1	; 0x01
    a2e2:	4a c0       	rjmp	.+148    	; 0xa378 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    a2e4:	80 e2       	ldi	r24, 0x20	; 32
    a2e6:	99 e0       	ldi	r25, 0x09	; 9
    a2e8:	2a 81       	ldd	r18, Y+2	; 0x02
    a2ea:	21 60       	ori	r18, 0x01	; 1
    a2ec:	fc 01       	movw	r30, r24
    a2ee:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    a2f0:	0e 94 57 50 	call	0xa0ae	; 0xa0ae <_ZL11i2c_1_WaitWv>
    a2f4:	98 2f       	mov	r25, r24
    a2f6:	81 e0       	ldi	r24, 0x01	; 1
    a2f8:	91 30       	cpi	r25, 0x01	; 1
    a2fa:	09 f4       	brne	.+2      	; 0xa2fe <I2C_1_GetData+0x76>
    a2fc:	80 e0       	ldi	r24, 0x00	; 0
    a2fe:	88 23       	and	r24, r24
    a300:	11 f0       	breq	.+4      	; 0xa306 <I2C_1_GetData+0x7e>
	{
		return retVal;	
    a302:	89 81       	ldd	r24, Y+1	; 0x01
    a304:	39 c0       	rjmp	.+114    	; 0xa378 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    a306:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    a308:	8e 81       	ldd	r24, Y+6	; 0x06
    a30a:	88 23       	and	r24, r24
    a30c:	a1 f1       	breq	.+104    	; 0xa376 <I2C_1_GetData+0xee>
    a30e:	8c 81       	ldd	r24, Y+4	; 0x04
    a310:	9d 81       	ldd	r25, Y+5	; 0x05
    a312:	89 2b       	or	r24, r25
    a314:	81 f1       	breq	.+96     	; 0xa376 <I2C_1_GetData+0xee>
	{
		while(len--)
    a316:	8e 81       	ldd	r24, Y+6	; 0x06
    a318:	9f ef       	ldi	r25, 0xFF	; 255
    a31a:	98 0f       	add	r25, r24
    a31c:	9e 83       	std	Y+6, r25	; 0x06
    a31e:	91 e0       	ldi	r25, 0x01	; 1
    a320:	88 23       	and	r24, r24
    a322:	09 f4       	brne	.+2      	; 0xa326 <I2C_1_GetData+0x9e>
    a324:	90 e0       	ldi	r25, 0x00	; 0
    a326:	99 23       	and	r25, r25
    a328:	31 f1       	breq	.+76     	; 0xa376 <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    a32a:	0e 94 9a 50 	call	0xa134	; 0xa134 <_ZL11I2C_1_WaitRv>
    a32e:	98 2f       	mov	r25, r24
    a330:	81 e0       	ldi	r24, 0x01	; 1
    a332:	93 30       	cpi	r25, 0x03	; 3
    a334:	09 f0       	breq	.+2      	; 0xa338 <I2C_1_GetData+0xb0>
    a336:	80 e0       	ldi	r24, 0x00	; 0
    a338:	88 23       	and	r24, r24
    a33a:	e1 f0       	breq	.+56     	; 0xa374 <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    a33c:	80 e2       	ldi	r24, 0x20	; 32
    a33e:	99 e0       	ldi	r25, 0x09	; 9
    a340:	fc 01       	movw	r30, r24
    a342:	20 85       	ldd	r18, Z+8	; 0x08
    a344:	8c 81       	ldd	r24, Y+4	; 0x04
    a346:	9d 81       	ldd	r25, Y+5	; 0x05
    a348:	fc 01       	movw	r30, r24
    a34a:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    a34c:	80 e2       	ldi	r24, 0x20	; 32
    a34e:	99 e0       	ldi	r25, 0x09	; 9
    a350:	2e 81       	ldd	r18, Y+6	; 0x06
    a352:	22 23       	and	r18, r18
    a354:	11 f4       	brne	.+4      	; 0xa35a <I2C_1_GetData+0xd2>
    a356:	27 e0       	ldi	r18, 0x07	; 7
    a358:	01 c0       	rjmp	.+2      	; 0xa35c <I2C_1_GetData+0xd4>
    a35a:	22 e0       	ldi	r18, 0x02	; 2
    a35c:	fc 01       	movw	r30, r24
    a35e:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    a360:	89 81       	ldd	r24, Y+1	; 0x01
    a362:	8f 5f       	subi	r24, 0xFF	; 255
    a364:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    a366:	8c 81       	ldd	r24, Y+4	; 0x04
    a368:	9d 81       	ldd	r25, Y+5	; 0x05
    a36a:	01 96       	adiw	r24, 0x01	; 1
    a36c:	8c 83       	std	Y+4, r24	; 0x04
    a36e:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    a370:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    a372:	d1 cf       	rjmp	.-94     	; 0xa316 <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    a374:	00 00       	nop
		}
	}
	
	return retVal;
    a376:	89 81       	ldd	r24, Y+1	; 0x01
}
    a378:	26 96       	adiw	r28, 0x06	; 6
    a37a:	cd bf       	out	0x3d, r28	; 61
    a37c:	de bf       	out	0x3e, r29	; 62
    a37e:	df 91       	pop	r29
    a380:	cf 91       	pop	r28
    a382:	08 95       	ret

0000a384 <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    a384:	cf 93       	push	r28
    a386:	df 93       	push	r29
    a388:	cd b7       	in	r28, 0x3d	; 61
    a38a:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    a38c:	80 e2       	ldi	r24, 0x20	; 32
    a38e:	99 e0       	ldi	r25, 0x09	; 9
    a390:	23 e0       	ldi	r18, 0x03	; 3
    a392:	fc 01       	movw	r30, r24
    a394:	24 83       	std	Z+4, r18	; 0x04
}
    a396:	00 00       	nop
    a398:	df 91       	pop	r29
    a39a:	cf 91       	pop	r28
    a39c:	08 95       	ret

0000a39e <PORTC_set_pin_level>:
}

Blink_t leds::setting(void)
{
	return lastBlinkSetting;
}
    a39e:	cf 93       	push	r28
    a3a0:	df 93       	push	r29
    a3a2:	00 d0       	rcall	.+0      	; 0xa3a4 <PORTC_set_pin_level+0x6>
    a3a4:	cd b7       	in	r28, 0x3d	; 61
    a3a6:	de b7       	in	r29, 0x3e	; 62
    a3a8:	89 83       	std	Y+1, r24	; 0x01
    a3aa:	6a 83       	std	Y+2, r22	; 0x02
    a3ac:	8a 81       	ldd	r24, Y+2	; 0x02
    a3ae:	88 23       	and	r24, r24
    a3b0:	a9 f0       	breq	.+42     	; 0xa3dc <PORTC_set_pin_level+0x3e>
    a3b2:	88 e0       	ldi	r24, 0x08	; 8
    a3b4:	90 e0       	ldi	r25, 0x00	; 0
    a3b6:	28 e0       	ldi	r18, 0x08	; 8
    a3b8:	30 e0       	ldi	r19, 0x00	; 0
    a3ba:	f9 01       	movw	r30, r18
    a3bc:	21 81       	ldd	r18, Z+1	; 0x01
    a3be:	62 2f       	mov	r22, r18
    a3c0:	29 81       	ldd	r18, Y+1	; 0x01
    a3c2:	42 2f       	mov	r20, r18
    a3c4:	50 e0       	ldi	r21, 0x00	; 0
    a3c6:	21 e0       	ldi	r18, 0x01	; 1
    a3c8:	30 e0       	ldi	r19, 0x00	; 0
    a3ca:	02 c0       	rjmp	.+4      	; 0xa3d0 <PORTC_set_pin_level+0x32>
    a3cc:	22 0f       	add	r18, r18
    a3ce:	33 1f       	adc	r19, r19
    a3d0:	4a 95       	dec	r20
    a3d2:	e2 f7       	brpl	.-8      	; 0xa3cc <PORTC_set_pin_level+0x2e>
    a3d4:	26 2b       	or	r18, r22
    a3d6:	fc 01       	movw	r30, r24
    a3d8:	21 83       	std	Z+1, r18	; 0x01
    a3da:	15 c0       	rjmp	.+42     	; 0xa406 <PORTC_set_pin_level+0x68>
    a3dc:	88 e0       	ldi	r24, 0x08	; 8
    a3de:	90 e0       	ldi	r25, 0x00	; 0
    a3e0:	28 e0       	ldi	r18, 0x08	; 8
    a3e2:	30 e0       	ldi	r19, 0x00	; 0
    a3e4:	f9 01       	movw	r30, r18
    a3e6:	21 81       	ldd	r18, Z+1	; 0x01
    a3e8:	62 2f       	mov	r22, r18
    a3ea:	29 81       	ldd	r18, Y+1	; 0x01
    a3ec:	42 2f       	mov	r20, r18
    a3ee:	50 e0       	ldi	r21, 0x00	; 0
    a3f0:	21 e0       	ldi	r18, 0x01	; 1
    a3f2:	30 e0       	ldi	r19, 0x00	; 0
    a3f4:	02 c0       	rjmp	.+4      	; 0xa3fa <PORTC_set_pin_level+0x5c>
    a3f6:	22 0f       	add	r18, r18
    a3f8:	33 1f       	adc	r19, r19
    a3fa:	4a 95       	dec	r20
    a3fc:	e2 f7       	brpl	.-8      	; 0xa3f6 <PORTC_set_pin_level+0x58>
    a3fe:	20 95       	com	r18
    a400:	26 23       	and	r18, r22
    a402:	fc 01       	movw	r30, r24
    a404:	21 83       	std	Z+1, r18	; 0x01
    a406:	00 00       	nop
    a408:	0f 90       	pop	r0
    a40a:	0f 90       	pop	r0
    a40c:	df 91       	pop	r29
    a40e:	cf 91       	pop	r28
    a410:	08 95       	ret

0000a412 <_ZL17LED_set_RED_levelb>:
    a412:	cf 93       	push	r28
    a414:	df 93       	push	r29
    a416:	1f 92       	push	r1
    a418:	cd b7       	in	r28, 0x3d	; 61
    a41a:	de b7       	in	r29, 0x3e	; 62
    a41c:	89 83       	std	Y+1, r24	; 0x01
    a41e:	69 81       	ldd	r22, Y+1	; 0x01
    a420:	86 e0       	ldi	r24, 0x06	; 6
    a422:	0e 94 cf 51 	call	0xa39e	; 0xa39e <PORTC_set_pin_level>
    a426:	00 00       	nop
    a428:	0f 90       	pop	r0
    a42a:	df 91       	pop	r29
    a42c:	cf 91       	pop	r28
    a42e:	08 95       	ret

0000a430 <_ZL19LED_set_GREEN_levelb>:
    a430:	cf 93       	push	r28
    a432:	df 93       	push	r29
    a434:	1f 92       	push	r1
    a436:	cd b7       	in	r28, 0x3d	; 61
    a438:	de b7       	in	r29, 0x3e	; 62
    a43a:	89 83       	std	Y+1, r24	; 0x01
    a43c:	69 81       	ldd	r22, Y+1	; 0x01
    a43e:	85 e0       	ldi	r24, 0x05	; 5
    a440:	0e 94 cf 51 	call	0xa39e	; 0xa39e <PORTC_set_pin_level>
    a444:	00 00       	nop
    a446:	0f 90       	pop	r0
    a448:	df 91       	pop	r29
    a44a:	cf 91       	pop	r28
    a44c:	08 95       	ret

0000a44e <_ZN4ledsC1Ev>:
    a44e:	cf 93       	push	r28
    a450:	df 93       	push	r29
    a452:	00 d0       	rcall	.+0      	; 0xa454 <_ZN4ledsC1Ev+0x6>
    a454:	cd b7       	in	r28, 0x3d	; 61
    a456:	de b7       	in	r29, 0x3e	; 62
    a458:	89 83       	std	Y+1, r24	; 0x01
    a45a:	9a 83       	std	Y+2, r25	; 0x02
    a45c:	00 00       	nop
    a45e:	0f 90       	pop	r0
    a460:	0f 90       	pop	r0
    a462:	df 91       	pop	r29
    a464:	cf 91       	pop	r28
    a466:	08 95       	ret

0000a468 <_ZN4ledsD1Ev>:
    a468:	cf 93       	push	r28
    a46a:	df 93       	push	r29
    a46c:	00 d0       	rcall	.+0      	; 0xa46e <_ZN4ledsD1Ev+0x6>
    a46e:	cd b7       	in	r28, 0x3d	; 61
    a470:	de b7       	in	r29, 0x3e	; 62
    a472:	89 83       	std	Y+1, r24	; 0x01
    a474:	9a 83       	std	Y+2, r25	; 0x02
    a476:	00 00       	nop
    a478:	0f 90       	pop	r0
    a47a:	0f 90       	pop	r0
    a47c:	df 91       	pop	r29
    a47e:	cf 91       	pop	r28
    a480:	08 95       	ret

0000a482 <__vector_41>:
    a482:	1f 92       	push	r1
    a484:	0f 92       	push	r0
    a486:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    a48a:	0f 92       	push	r0
    a48c:	11 24       	eor	r1, r1
    a48e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    a492:	0f 92       	push	r0
    a494:	2f 93       	push	r18
    a496:	3f 93       	push	r19
    a498:	4f 93       	push	r20
    a49a:	5f 93       	push	r21
    a49c:	6f 93       	push	r22
    a49e:	7f 93       	push	r23
    a4a0:	8f 93       	push	r24
    a4a2:	9f 93       	push	r25
    a4a4:	af 93       	push	r26
    a4a6:	bf 93       	push	r27
    a4a8:	ef 93       	push	r30
    a4aa:	ff 93       	push	r31
    a4ac:	cf 93       	push	r28
    a4ae:	df 93       	push	r29
    a4b0:	cd b7       	in	r28, 0x3d	; 61
    a4b2:	de b7       	in	r29, 0x3e	; 62
    a4b4:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL17led_timeout_count>
    a4b8:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL17led_timeout_count+0x1>
    a4bc:	a0 91 de 47 	lds	r26, 0x47DE	; 0x8047de <_ZL17led_timeout_count+0x2>
    a4c0:	b0 91 df 47 	lds	r27, 0x47DF	; 0x8047df <_ZL17led_timeout_count+0x3>
    a4c4:	21 e0       	ldi	r18, 0x01	; 1
    a4c6:	89 2b       	or	r24, r25
    a4c8:	8a 2b       	or	r24, r26
    a4ca:	8b 2b       	or	r24, r27
    a4cc:	09 f4       	brne	.+2      	; 0xa4d0 <__vector_41+0x4e>
    a4ce:	20 e0       	ldi	r18, 0x00	; 0
    a4d0:	22 23       	and	r18, r18
    a4d2:	09 f4       	brne	.+2      	; 0xa4d6 <__vector_41+0x54>
    a4d4:	1b c1       	rjmp	.+566    	; 0xa70c <__vector_41+0x28a>
    a4d6:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL17led_timeout_count>
    a4da:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL17led_timeout_count+0x1>
    a4de:	a0 91 de 47 	lds	r26, 0x47DE	; 0x8047de <_ZL17led_timeout_count+0x2>
    a4e2:	b0 91 df 47 	lds	r27, 0x47DF	; 0x8047df <_ZL17led_timeout_count+0x3>
    a4e6:	01 97       	sbiw	r24, 0x01	; 1
    a4e8:	a1 09       	sbc	r26, r1
    a4ea:	b1 09       	sbc	r27, r1
    a4ec:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL17led_timeout_count>
    a4f0:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL17led_timeout_count+0x1>
    a4f4:	a0 93 de 47 	sts	0x47DE, r26	; 0x8047de <_ZL17led_timeout_count+0x2>
    a4f8:	b0 93 df 47 	sts	0x47DF, r27	; 0x8047df <_ZL17led_timeout_count+0x3>
    a4fc:	80 e3       	ldi	r24, 0x30	; 48
    a4fe:	9b e0       	ldi	r25, 0x0B	; 11
    a500:	fc 01       	movw	r30, r24
    a502:	86 81       	ldd	r24, Z+6	; 0x06
    a504:	88 2f       	mov	r24, r24
    a506:	90 e0       	ldi	r25, 0x00	; 0
    a508:	81 70       	andi	r24, 0x01	; 1
    a50a:	99 27       	eor	r25, r25
    a50c:	21 e0       	ldi	r18, 0x01	; 1
    a50e:	89 2b       	or	r24, r25
    a510:	09 f4       	brne	.+2      	; 0xa514 <__vector_41+0x92>
    a512:	20 e0       	ldi	r18, 0x00	; 0
    a514:	22 23       	and	r18, r18
    a516:	09 f4       	brne	.+2      	; 0xa51a <__vector_41+0x98>
    a518:	0c c1       	rjmp	.+536    	; 0xa732 <__vector_41+0x2b0>
    a51a:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a51e:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a522:	21 e0       	ldi	r18, 0x01	; 1
    a524:	89 2b       	or	r24, r25
    a526:	09 f4       	brne	.+2      	; 0xa52a <__vector_41+0xa8>
    a528:	20 e0       	ldi	r18, 0x00	; 0
    a52a:	22 23       	and	r18, r18
    a52c:	09 f4       	brne	.+2      	; 0xa530 <__vector_41+0xae>
    a52e:	6a c0       	rjmp	.+212    	; 0xa604 <__vector_41+0x182>
    a530:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a534:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a538:	21 e0       	ldi	r18, 0x01	; 1
    a53a:	02 97       	sbiw	r24, 0x02	; 2
    a53c:	0c f4       	brge	.+2      	; 0xa540 <__vector_41+0xbe>
    a53e:	20 e0       	ldi	r18, 0x00	; 0
    a540:	22 23       	and	r18, r18
    a542:	69 f0       	breq	.+26     	; 0xa55e <__vector_41+0xdc>
    a544:	81 e0       	ldi	r24, 0x01	; 1
    a546:	0e 94 09 52 	call	0xa412	; 0xa412 <_ZL17LED_set_RED_levelb>
    a54a:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a54e:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a552:	01 97       	sbiw	r24, 0x01	; 1
    a554:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a558:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a55c:	17 c0       	rjmp	.+46     	; 0xa58c <__vector_41+0x10a>
    a55e:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a562:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a566:	21 e0       	ldi	r18, 0x01	; 1
    a568:	8f 3f       	cpi	r24, 0xFF	; 255
    a56a:	9f 4f       	sbci	r25, 0xFF	; 255
    a56c:	0c f0       	brlt	.+2      	; 0xa570 <__vector_41+0xee>
    a56e:	20 e0       	ldi	r18, 0x00	; 0
    a570:	22 23       	and	r18, r18
    a572:	61 f0       	breq	.+24     	; 0xa58c <__vector_41+0x10a>
    a574:	80 e0       	ldi	r24, 0x00	; 0
    a576:	0e 94 09 52 	call	0xa412	; 0xa412 <_ZL17LED_set_RED_levelb>
    a57a:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a57e:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a582:	01 96       	adiw	r24, 0x01	; 1
    a584:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a588:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a58c:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a590:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a594:	21 e0       	ldi	r18, 0x01	; 1
    a596:	01 97       	sbiw	r24, 0x01	; 1
    a598:	09 f0       	breq	.+2      	; 0xa59c <__vector_41+0x11a>
    a59a:	20 e0       	ldi	r18, 0x00	; 0
    a59c:	22 23       	and	r18, r18
    a59e:	f9 f0       	breq	.+62     	; 0xa5de <__vector_41+0x15c>
    a5a0:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL20red_blink_off_period>
    a5a4:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
    a5a8:	21 e0       	ldi	r18, 0x01	; 1
    a5aa:	89 2b       	or	r24, r25
    a5ac:	09 f4       	brne	.+2      	; 0xa5b0 <__vector_41+0x12e>
    a5ae:	20 e0       	ldi	r18, 0x00	; 0
    a5b0:	22 23       	and	r18, r18
    a5b2:	61 f0       	breq	.+24     	; 0xa5cc <__vector_41+0x14a>
    a5b4:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL20red_blink_off_period>
    a5b8:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
    a5bc:	91 95       	neg	r25
    a5be:	81 95       	neg	r24
    a5c0:	91 09       	sbc	r25, r1
    a5c2:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a5c6:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a5ca:	23 c0       	rjmp	.+70     	; 0xa612 <__vector_41+0x190>
    a5cc:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    a5d0:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    a5d4:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a5d8:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a5dc:	1a c0       	rjmp	.+52     	; 0xa612 <__vector_41+0x190>
    a5de:	80 91 e8 47 	lds	r24, 0x47E8	; 0x8047e8 <_ZL15red_blink_count>
    a5e2:	90 91 e9 47 	lds	r25, 0x47E9	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a5e6:	21 e0       	ldi	r18, 0x01	; 1
    a5e8:	01 96       	adiw	r24, 0x01	; 1
    a5ea:	09 f0       	breq	.+2      	; 0xa5ee <__vector_41+0x16c>
    a5ec:	20 e0       	ldi	r18, 0x00	; 0
    a5ee:	22 23       	and	r18, r18
    a5f0:	81 f0       	breq	.+32     	; 0xa612 <__vector_41+0x190>
    a5f2:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    a5f6:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    a5fa:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a5fe:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
    a602:	07 c0       	rjmp	.+14     	; 0xa612 <__vector_41+0x190>
    a604:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL18red_led_configured>
    a608:	88 23       	and	r24, r24
    a60a:	19 f0       	breq	.+6      	; 0xa612 <__vector_41+0x190>
    a60c:	80 e0       	ldi	r24, 0x00	; 0
    a60e:	0e 94 09 52 	call	0xa412	; 0xa412 <_ZL17LED_set_RED_levelb>
    a612:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a616:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a61a:	21 e0       	ldi	r18, 0x01	; 1
    a61c:	89 2b       	or	r24, r25
    a61e:	09 f4       	brne	.+2      	; 0xa622 <__vector_41+0x1a0>
    a620:	20 e0       	ldi	r18, 0x00	; 0
    a622:	22 23       	and	r18, r18
    a624:	09 f4       	brne	.+2      	; 0xa628 <__vector_41+0x1a6>
    a626:	6a c0       	rjmp	.+212    	; 0xa6fc <__vector_41+0x27a>
    a628:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a62c:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a630:	21 e0       	ldi	r18, 0x01	; 1
    a632:	02 97       	sbiw	r24, 0x02	; 2
    a634:	0c f4       	brge	.+2      	; 0xa638 <__vector_41+0x1b6>
    a636:	20 e0       	ldi	r18, 0x00	; 0
    a638:	22 23       	and	r18, r18
    a63a:	69 f0       	breq	.+26     	; 0xa656 <__vector_41+0x1d4>
    a63c:	81 e0       	ldi	r24, 0x01	; 1
    a63e:	0e 94 18 52 	call	0xa430	; 0xa430 <_ZL19LED_set_GREEN_levelb>
    a642:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a646:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a64a:	01 97       	sbiw	r24, 0x01	; 1
    a64c:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a650:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
    a654:	17 c0       	rjmp	.+46     	; 0xa684 <__vector_41+0x202>
    a656:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a65a:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a65e:	21 e0       	ldi	r18, 0x01	; 1
    a660:	8f 3f       	cpi	r24, 0xFF	; 255
    a662:	9f 4f       	sbci	r25, 0xFF	; 255
    a664:	0c f0       	brlt	.+2      	; 0xa668 <__vector_41+0x1e6>
    a666:	20 e0       	ldi	r18, 0x00	; 0
    a668:	22 23       	and	r18, r18
    a66a:	61 f0       	breq	.+24     	; 0xa684 <__vector_41+0x202>
    a66c:	80 e0       	ldi	r24, 0x00	; 0
    a66e:	0e 94 18 52 	call	0xa430	; 0xa430 <_ZL19LED_set_GREEN_levelb>
    a672:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a676:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a67a:	01 96       	adiw	r24, 0x01	; 1
    a67c:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a680:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
    a684:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a688:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a68c:	21 e0       	ldi	r18, 0x01	; 1
    a68e:	01 97       	sbiw	r24, 0x01	; 1
    a690:	09 f0       	breq	.+2      	; 0xa694 <__vector_41+0x212>
    a692:	20 e0       	ldi	r18, 0x00	; 0
    a694:	22 23       	and	r18, r18
    a696:	f9 f0       	breq	.+62     	; 0xa6d6 <__vector_41+0x254>
    a698:	80 91 e6 47 	lds	r24, 0x47E6	; 0x8047e6 <_ZL22green_blink_off_period>
    a69c:	90 91 e7 47 	lds	r25, 0x47E7	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
    a6a0:	21 e0       	ldi	r18, 0x01	; 1
    a6a2:	89 2b       	or	r24, r25
    a6a4:	09 f4       	brne	.+2      	; 0xa6a8 <__vector_41+0x226>
    a6a6:	20 e0       	ldi	r18, 0x00	; 0
    a6a8:	22 23       	and	r18, r18
    a6aa:	61 f0       	breq	.+24     	; 0xa6c4 <__vector_41+0x242>
    a6ac:	80 91 e6 47 	lds	r24, 0x47E6	; 0x8047e6 <_ZL22green_blink_off_period>
    a6b0:	90 91 e7 47 	lds	r25, 0x47E7	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
    a6b4:	91 95       	neg	r25
    a6b6:	81 95       	neg	r24
    a6b8:	91 09       	sbc	r25, r1
    a6ba:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a6be:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
    a6c2:	37 c0       	rjmp	.+110    	; 0xa732 <__vector_41+0x2b0>
    a6c4:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a6c8:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a6cc:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a6d0:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
    a6d4:	2e c0       	rjmp	.+92     	; 0xa732 <__vector_41+0x2b0>
    a6d6:	80 91 ea 47 	lds	r24, 0x47EA	; 0x8047ea <_ZL17green_blink_count>
    a6da:	90 91 eb 47 	lds	r25, 0x47EB	; 0x8047eb <_ZL17green_blink_count+0x1>
    a6de:	21 e0       	ldi	r18, 0x01	; 1
    a6e0:	01 96       	adiw	r24, 0x01	; 1
    a6e2:	09 f0       	breq	.+2      	; 0xa6e6 <__vector_41+0x264>
    a6e4:	20 e0       	ldi	r18, 0x00	; 0
    a6e6:	22 23       	and	r18, r18
    a6e8:	21 f1       	breq	.+72     	; 0xa732 <__vector_41+0x2b0>
    a6ea:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a6ee:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a6f2:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a6f6:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
    a6fa:	1b c0       	rjmp	.+54     	; 0xa732 <__vector_41+0x2b0>
    a6fc:	80 91 ed 47 	lds	r24, 0x47ED	; 0x8047ed <_ZL20green_led_configured>
    a700:	88 23       	and	r24, r24
    a702:	b9 f0       	breq	.+46     	; 0xa732 <__vector_41+0x2b0>
    a704:	80 e0       	ldi	r24, 0x00	; 0
    a706:	0e 94 18 52 	call	0xa430	; 0xa430 <_ZL19LED_set_GREEN_levelb>
    a70a:	13 c0       	rjmp	.+38     	; 0xa732 <__vector_41+0x2b0>
    a70c:	80 e3       	ldi	r24, 0x30	; 48
    a70e:	9b e0       	ldi	r25, 0x0B	; 11
    a710:	20 e3       	ldi	r18, 0x30	; 48
    a712:	3b e0       	ldi	r19, 0x0B	; 11
    a714:	f9 01       	movw	r30, r18
    a716:	25 81       	ldd	r18, Z+5	; 0x05
    a718:	2e 7f       	andi	r18, 0xFE	; 254
    a71a:	fc 01       	movw	r30, r24
    a71c:	25 83       	std	Z+5, r18	; 0x05
    a71e:	80 e0       	ldi	r24, 0x00	; 0
    a720:	0e 94 09 52 	call	0xa412	; 0xa412 <_ZL17LED_set_RED_levelb>
    a724:	80 e0       	ldi	r24, 0x00	; 0
    a726:	0e 94 18 52 	call	0xa430	; 0xa430 <_ZL19LED_set_GREEN_levelb>
    a72a:	10 92 ec 47 	sts	0x47EC, r1	; 0x8047ec <_ZL18red_led_configured>
    a72e:	10 92 ed 47 	sts	0x47ED, r1	; 0x8047ed <_ZL20green_led_configured>
    a732:	80 e3       	ldi	r24, 0x30	; 48
    a734:	9b e0       	ldi	r25, 0x0B	; 11
    a736:	20 e3       	ldi	r18, 0x30	; 48
    a738:	3b e0       	ldi	r19, 0x0B	; 11
    a73a:	f9 01       	movw	r30, r18
    a73c:	26 81       	ldd	r18, Z+6	; 0x06
    a73e:	21 60       	ori	r18, 0x01	; 1
    a740:	fc 01       	movw	r30, r24
    a742:	26 83       	std	Z+6, r18	; 0x06
    a744:	00 00       	nop
    a746:	df 91       	pop	r29
    a748:	cf 91       	pop	r28
    a74a:	ff 91       	pop	r31
    a74c:	ef 91       	pop	r30
    a74e:	bf 91       	pop	r27
    a750:	af 91       	pop	r26
    a752:	9f 91       	pop	r25
    a754:	8f 91       	pop	r24
    a756:	7f 91       	pop	r23
    a758:	6f 91       	pop	r22
    a75a:	5f 91       	pop	r21
    a75c:	4f 91       	pop	r20
    a75e:	3f 91       	pop	r19
    a760:	2f 91       	pop	r18
    a762:	0f 90       	pop	r0
    a764:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    a768:	0f 90       	pop	r0
    a76a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    a76e:	0f 90       	pop	r0
    a770:	1f 90       	pop	r1
    a772:	18 95       	reti

0000a774 <_ZN4leds5blinkE7Blink_t>:


void leds::blink(Blink_t blinkMode)
{
    a774:	cf 93       	push	r28
    a776:	df 93       	push	r29
    a778:	00 d0       	rcall	.+0      	; 0xa77a <_ZN4leds5blinkE7Blink_t+0x6>
    a77a:	1f 92       	push	r1
    a77c:	cd b7       	in	r28, 0x3d	; 61
    a77e:	de b7       	in	r29, 0x3e	; 62
    a780:	89 83       	std	Y+1, r24	; 0x01
    a782:	9a 83       	std	Y+2, r25	; 0x02
    a784:	6b 83       	std	Y+3, r22	; 0x03
	led_timeout_count = LED_TIMEOUT;
    a786:	80 e6       	ldi	r24, 0x60	; 96
    a788:	9a ee       	ldi	r25, 0xEA	; 234
    a78a:	a0 e0       	ldi	r26, 0x00	; 0
    a78c:	b0 e0       	ldi	r27, 0x00	; 0
    a78e:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL17led_timeout_count>
    a792:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL17led_timeout_count+0x1>
    a796:	a0 93 de 47 	sts	0x47DE, r26	; 0x8047de <_ZL17led_timeout_count+0x2>
    a79a:	b0 93 df 47 	sts	0x47DF, r27	; 0x8047df <_ZL17led_timeout_count+0x3>
	
	if(blinkMode != lastBlinkSetting)
    a79e:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL16lastBlinkSetting>
    a7a2:	81 e0       	ldi	r24, 0x01	; 1
    a7a4:	2b 81       	ldd	r18, Y+3	; 0x03
    a7a6:	29 17       	cp	r18, r25
    a7a8:	09 f4       	brne	.+2      	; 0xa7ac <_ZN4leds5blinkE7Blink_t+0x38>
    a7aa:	80 e0       	ldi	r24, 0x00	; 0
    a7ac:	88 23       	and	r24, r24
    a7ae:	09 f4       	brne	.+2      	; 0xa7b2 <_ZN4leds5blinkE7Blink_t+0x3e>
    a7b0:	ab c1       	rjmp	.+854    	; 0xab08 <_ZN4leds5blinkE7Blink_t+0x394>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    a7b2:	80 e3       	ldi	r24, 0x30	; 48
    a7b4:	9b e0       	ldi	r25, 0x0B	; 11
    a7b6:	20 e3       	ldi	r18, 0x30	; 48
    a7b8:	3b e0       	ldi	r19, 0x0B	; 11
    a7ba:	f9 01       	movw	r30, r18
    a7bc:	25 81       	ldd	r18, Z+5	; 0x05
    a7be:	2e 7f       	andi	r18, 0xFE	; 254
    a7c0:	fc 01       	movw	r30, r24
    a7c2:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    a7c4:	8b 81       	ldd	r24, Y+3	; 0x03
    a7c6:	88 2f       	mov	r24, r24
    a7c8:	90 e0       	ldi	r25, 0x00	; 0
    a7ca:	09 2e       	mov	r0, r25
    a7cc:	00 0c       	add	r0, r0
    a7ce:	aa 0b       	sbc	r26, r26
    a7d0:	bb 0b       	sbc	r27, r27
    a7d2:	40 e0       	ldi	r20, 0x00	; 0
    a7d4:	50 e0       	ldi	r21, 0x00	; 0
    a7d6:	2c e0       	ldi	r18, 0x0C	; 12
    a7d8:	30 e0       	ldi	r19, 0x00	; 0
    a7da:	84 1b       	sub	r24, r20
    a7dc:	95 0b       	sbc	r25, r21
    a7de:	28 17       	cp	r18, r24
    a7e0:	39 07       	cpc	r19, r25
    a7e2:	08 f4       	brcc	.+2      	; 0xa7e6 <_ZN4leds5blinkE7Blink_t+0x72>
    a7e4:	7a c1       	rjmp	.+756    	; 0xaada <_ZN4leds5blinkE7Blink_t+0x366>
    a7e6:	89 52       	subi	r24, 0x29	; 41
    a7e8:	9f 4f       	sbci	r25, 0xFF	; 255
    a7ea:	fc 01       	movw	r30, r24
    a7ec:	0c 94 2d 7a 	jmp	0xf45a	; 0xf45a <__tablejump2__>
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    a7f0:	10 92 e8 47 	sts	0x47E8, r1	; 0x8047e8 <_ZL15red_blink_count>
    a7f4:	10 92 e9 47 	sts	0x47E9, r1	; 0x8047e9 <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    a7f8:	10 92 ea 47 	sts	0x47EA, r1	; 0x8047ea <_ZL17green_blink_count>
    a7fc:	10 92 eb 47 	sts	0x47EB, r1	; 0x8047eb <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    a800:	80 e0       	ldi	r24, 0x00	; 0
    a802:	0e 94 09 52 	call	0xa412	; 0xa412 <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    a806:	80 e0       	ldi	r24, 0x00	; 0
    a808:	0e 94 18 52 	call	0xa430	; 0xa430 <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    a80c:	10 92 ec 47 	sts	0x47EC, r1	; 0x8047ec <_ZL18red_led_configured>
				green_led_configured = false;
    a810:	10 92 ed 47 	sts	0x47ED, r1	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    a814:	63 c1       	rjmp	.+710    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
    a816:	80 e0       	ldi	r24, 0x00	; 0
    a818:	0e 94 09 52 	call	0xa412	; 0xa412 <_ZL17LED_set_RED_levelb>
				red_blink_count = 0;
    a81c:	10 92 e8 47 	sts	0x47E8, r1	; 0x8047e8 <_ZL15red_blink_count>
    a820:	10 92 e9 47 	sts	0x47E9, r1	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    a824:	10 92 ec 47 	sts	0x47EC, r1	; 0x8047ec <_ZL18red_led_configured>
			}
			break;
    a828:	59 c1       	rjmp	.+690    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
    a82a:	80 e0       	ldi	r24, 0x00	; 0
    a82c:	0e 94 18 52 	call	0xa430	; 0xa430 <_ZL19LED_set_GREEN_levelb>
				green_blink_count = 0;
    a830:	10 92 ea 47 	sts	0x47EA, r1	; 0x8047ea <_ZL17green_blink_count>
    a834:	10 92 eb 47 	sts	0x47EB, r1	; 0x8047eb <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    a838:	10 92 ed 47 	sts	0x47ED, r1	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    a83c:	4f c1       	rjmp	.+670    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    a83e:	89 e1       	ldi	r24, 0x19	; 25
    a840:	90 e0       	ldi	r25, 0x00	; 0
    a842:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    a846:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    a84a:	86 e9       	ldi	r24, 0x96	; 150
    a84c:	90 e0       	ldi	r25, 0x00	; 0
    a84e:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL20red_blink_off_period>
    a852:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    a856:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    a85a:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    a85e:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a862:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a866:	81 e0       	ldi	r24, 0x01	; 1
    a868:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
			}
			break;
    a86c:	37 c1       	rjmp	.+622    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    a86e:	89 e1       	ldi	r24, 0x19	; 25
    a870:	90 e0       	ldi	r25, 0x00	; 0
    a872:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    a876:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    a87a:	86 e9       	ldi	r24, 0x96	; 150
    a87c:	90 e0       	ldi	r25, 0x00	; 0
    a87e:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL22green_blink_off_period>
    a882:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a886:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a88a:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a88e:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a892:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a896:	81 e0       	ldi	r24, 0x01	; 1
    a898:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    a89c:	1f c1       	rjmp	.+574    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    a89e:	84 ef       	ldi	r24, 0xF4	; 244
    a8a0:	91 e0       	ldi	r25, 0x01	; 1
    a8a2:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    a8a6:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a8aa:	84 ef       	ldi	r24, 0xF4	; 244
    a8ac:	91 e0       	ldi	r25, 0x01	; 1
    a8ae:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL20red_blink_off_period>
    a8b2:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a8b6:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    a8ba:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    a8be:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a8c2:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a8c6:	81 e0       	ldi	r24, 0x01	; 1
    a8c8:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
			}
			break;
    a8cc:	07 c1       	rjmp	.+526    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    a8ce:	84 ef       	ldi	r24, 0xF4	; 244
    a8d0:	91 e0       	ldi	r25, 0x01	; 1
    a8d2:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    a8d6:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    a8da:	84 ef       	ldi	r24, 0xF4	; 244
    a8dc:	91 e0       	ldi	r25, 0x01	; 1
    a8de:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL22green_blink_off_period>
    a8e2:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a8e6:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a8ea:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a8ee:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a8f2:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a8f6:	81 e0       	ldi	r24, 0x01	; 1
    a8f8:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    a8fc:	ef c0       	rjmp	.+478    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    a8fe:	84 ef       	ldi	r24, 0xF4	; 244
    a900:	91 e0       	ldi	r25, 0x01	; 1
    a902:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    a906:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    a90a:	84 ef       	ldi	r24, 0xF4	; 244
    a90c:	91 e0       	ldi	r25, 0x01	; 1
    a90e:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL22green_blink_off_period>
    a912:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    a916:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a91a:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a91e:	91 95       	neg	r25
    a920:	81 95       	neg	r24
    a922:	91 09       	sbc	r25, r1
    a924:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a928:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    a92c:	84 ef       	ldi	r24, 0xF4	; 244
    a92e:	91 e0       	ldi	r25, 0x01	; 1
    a930:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    a934:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a938:	84 ef       	ldi	r24, 0xF4	; 244
    a93a:	91 e0       	ldi	r25, 0x01	; 1
    a93c:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL20red_blink_off_period>
    a940:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a944:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    a948:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    a94c:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a950:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a954:	81 e0       	ldi	r24, 0x01	; 1
    a956:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
				green_led_configured = true;			
    a95a:	81 e0       	ldi	r24, 0x01	; 1
    a95c:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    a960:	bd c0       	rjmp	.+378    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    a962:	89 e1       	ldi	r24, 0x19	; 25
    a964:	90 e0       	ldi	r25, 0x00	; 0
    a966:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    a96a:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    a96e:	89 e1       	ldi	r24, 0x19	; 25
    a970:	90 e0       	ldi	r25, 0x00	; 0
    a972:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL22green_blink_off_period>
    a976:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    a97a:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a97e:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a982:	91 95       	neg	r25
    a984:	81 95       	neg	r24
    a986:	91 09       	sbc	r25, r1
    a988:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a98c:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    a990:	89 e1       	ldi	r24, 0x19	; 25
    a992:	90 e0       	ldi	r25, 0x00	; 0
    a994:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    a998:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    a99c:	89 e1       	ldi	r24, 0x19	; 25
    a99e:	90 e0       	ldi	r25, 0x00	; 0
    a9a0:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL20red_blink_off_period>
    a9a4:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a9a8:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    a9ac:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    a9b0:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    a9b4:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a9b8:	81 e0       	ldi	r24, 0x01	; 1
    a9ba:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
				green_led_configured = true;			
    a9be:	81 e0       	ldi	r24, 0x01	; 1
    a9c0:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    a9c4:	8b c0       	rjmp	.+278    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    a9c6:	84 ef       	ldi	r24, 0xF4	; 244
    a9c8:	91 e0       	ldi	r25, 0x01	; 1
    a9ca:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    a9ce:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    a9d2:	84 ef       	ldi	r24, 0xF4	; 244
    a9d4:	91 e0       	ldi	r25, 0x01	; 1
    a9d6:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL22green_blink_off_period>
    a9da:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a9de:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    a9e2:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    a9e6:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    a9ea:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    a9ee:	84 ef       	ldi	r24, 0xF4	; 244
    a9f0:	91 e0       	ldi	r25, 0x01	; 1
    a9f2:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    a9f6:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a9fa:	84 ef       	ldi	r24, 0xF4	; 244
    a9fc:	91 e0       	ldi	r25, 0x01	; 1
    a9fe:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL20red_blink_off_period>
    aa02:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    aa06:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    aa0a:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    aa0e:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    aa12:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aa16:	81 e0       	ldi	r24, 0x01	; 1
    aa18:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
				green_led_configured = true;			
    aa1c:	81 e0       	ldi	r24, 0x01	; 1
    aa1e:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    aa22:	5c c0       	rjmp	.+184    	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    aa24:	89 e1       	ldi	r24, 0x19	; 25
    aa26:	90 e0       	ldi	r25, 0x00	; 0
    aa28:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    aa2c:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    aa30:	89 e1       	ldi	r24, 0x19	; 25
    aa32:	90 e0       	ldi	r25, 0x00	; 0
    aa34:	80 93 e6 47 	sts	0x47E6, r24	; 0x8047e6 <_ZL22green_blink_off_period>
    aa38:	90 93 e7 47 	sts	0x47E7, r25	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    aa3c:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    aa40:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    aa44:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    aa48:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    aa4c:	89 e1       	ldi	r24, 0x19	; 25
    aa4e:	90 e0       	ldi	r25, 0x00	; 0
    aa50:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    aa54:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    aa58:	89 e1       	ldi	r24, 0x19	; 25
    aa5a:	90 e0       	ldi	r25, 0x00	; 0
    aa5c:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL20red_blink_off_period>
    aa60:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    aa64:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    aa68:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    aa6c:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    aa70:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aa74:	81 e0       	ldi	r24, 0x01	; 1
    aa76:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
				green_led_configured = true;			
    aa7a:	81 e0       	ldi	r24, 0x01	; 1
    aa7c:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    aa80:	2d c0       	rjmp	.+90     	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    aa82:	84 ef       	ldi	r24, 0xF4	; 244
    aa84:	91 e0       	ldi	r25, 0x01	; 1
    aa86:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL19red_blink_on_period>
    aa8a:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    aa8e:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <_ZL20red_blink_off_period>
    aa92:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    aa96:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL19red_blink_on_period>
    aa9a:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL19red_blink_on_period+0x1>
    aa9e:	80 93 e8 47 	sts	0x47E8, r24	; 0x8047e8 <_ZL15red_blink_count>
    aaa2:	90 93 e9 47 	sts	0x47E9, r25	; 0x8047e9 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    aaa6:	81 e0       	ldi	r24, 0x01	; 1
    aaa8:	80 93 ec 47 	sts	0x47EC, r24	; 0x8047ec <_ZL18red_led_configured>
			}
			break;
    aaac:	17 c0       	rjmp	.+46     	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    aaae:	84 ef       	ldi	r24, 0xF4	; 244
    aab0:	91 e0       	ldi	r25, 0x01	; 1
    aab2:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL21green_blink_on_period>
    aab6:	90 93 e5 47 	sts	0x47E5, r25	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    aaba:	10 92 e6 47 	sts	0x47E6, r1	; 0x8047e6 <_ZL22green_blink_off_period>
    aabe:	10 92 e7 47 	sts	0x47E7, r1	; 0x8047e7 <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    aac2:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL21green_blink_on_period>
    aac6:	90 91 e5 47 	lds	r25, 0x47E5	; 0x8047e5 <_ZL21green_blink_on_period+0x1>
    aaca:	80 93 ea 47 	sts	0x47EA, r24	; 0x8047ea <_ZL17green_blink_count>
    aace:	90 93 eb 47 	sts	0x47EB, r25	; 0x8047eb <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    aad2:	81 e0       	ldi	r24, 0x01	; 1
    aad4:	80 93 ed 47 	sts	0x47ED, r24	; 0x8047ed <_ZL20green_led_configured>
			}
			break;
    aad8:	01 c0       	rjmp	.+2      	; 0xaadc <_ZN4leds5blinkE7Blink_t+0x368>
			
			default:
			{
				
			}
			break;
    aada:	00 00       	nop
		}
		
		if(red_led_configured || green_led_configured) 
    aadc:	80 91 ec 47 	lds	r24, 0x47EC	; 0x8047ec <_ZL18red_led_configured>
    aae0:	88 23       	and	r24, r24
    aae2:	21 f4       	brne	.+8      	; 0xaaec <_ZN4leds5blinkE7Blink_t+0x378>
    aae4:	80 91 ed 47 	lds	r24, 0x47ED	; 0x8047ed <_ZL20green_led_configured>
    aae8:	88 23       	and	r24, r24
    aaea:	11 f0       	breq	.+4      	; 0xaaf0 <_ZN4leds5blinkE7Blink_t+0x37c>
    aaec:	81 e0       	ldi	r24, 0x01	; 1
    aaee:	01 c0       	rjmp	.+2      	; 0xaaf2 <_ZN4leds5blinkE7Blink_t+0x37e>
    aaf0:	80 e0       	ldi	r24, 0x00	; 0
    aaf2:	88 23       	and	r24, r24
    aaf4:	49 f0       	breq	.+18     	; 0xab08 <_ZN4leds5blinkE7Blink_t+0x394>
		{
			TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    aaf6:	80 e3       	ldi	r24, 0x30	; 48
    aaf8:	9b e0       	ldi	r25, 0x0B	; 11
    aafa:	20 e3       	ldi	r18, 0x30	; 48
    aafc:	3b e0       	ldi	r19, 0x0B	; 11
    aafe:	f9 01       	movw	r30, r18
    ab00:	25 81       	ldd	r18, Z+5	; 0x05
    ab02:	21 60       	ori	r18, 0x01	; 1
    ab04:	fc 01       	movw	r30, r24
    ab06:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	lastBlinkSetting = blinkMode;
    ab08:	8b 81       	ldd	r24, Y+3	; 0x03
    ab0a:	80 93 db 47 	sts	0x47DB, r24	; 0x8047db <_ZL16lastBlinkSetting>
}
    ab0e:	00 00       	nop
    ab10:	23 96       	adiw	r28, 0x03	; 3
    ab12:	cd bf       	out	0x3d, r28	; 61
    ab14:	de bf       	out	0x3e, r29	; 62
    ab16:	df 91       	pop	r29
    ab18:	cf 91       	pop	r28
    ab1a:	08 95       	ret

0000ab1c <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    ab1c:	cf 93       	push	r28
    ab1e:	df 93       	push	r29
    ab20:	00 d0       	rcall	.+0      	; 0xab22 <PORTC_set_pin_pull_mode+0x6>
    ab22:	00 d0       	rcall	.+0      	; 0xab24 <PORTC_set_pin_pull_mode+0x8>
    ab24:	cd b7       	in	r28, 0x3d	; 61
    ab26:	de b7       	in	r29, 0x3e	; 62
    ab28:	8b 83       	std	Y+3, r24	; 0x03
    ab2a:	6c 83       	std	Y+4, r22	; 0x04
    ab2c:	8b 81       	ldd	r24, Y+3	; 0x03
    ab2e:	88 2f       	mov	r24, r24
    ab30:	90 e0       	ldi	r25, 0x00	; 0
    ab32:	80 5b       	subi	r24, 0xB0	; 176
    ab34:	9b 4f       	sbci	r25, 0xFB	; 251
    ab36:	89 83       	std	Y+1, r24	; 0x01
    ab38:	9a 83       	std	Y+2, r25	; 0x02
    ab3a:	8c 81       	ldd	r24, Y+4	; 0x04
    ab3c:	81 30       	cpi	r24, 0x01	; 1
    ab3e:	59 f4       	brne	.+22     	; 0xab56 <PORTC_set_pin_pull_mode+0x3a>
    ab40:	89 81       	ldd	r24, Y+1	; 0x01
    ab42:	9a 81       	ldd	r25, Y+2	; 0x02
    ab44:	fc 01       	movw	r30, r24
    ab46:	80 81       	ld	r24, Z
    ab48:	28 2f       	mov	r18, r24
    ab4a:	28 60       	ori	r18, 0x08	; 8
    ab4c:	89 81       	ldd	r24, Y+1	; 0x01
    ab4e:	9a 81       	ldd	r25, Y+2	; 0x02
    ab50:	fc 01       	movw	r30, r24
    ab52:	20 83       	st	Z, r18
    ab54:	0d c0       	rjmp	.+26     	; 0xab70 <PORTC_set_pin_pull_mode+0x54>
    ab56:	8c 81       	ldd	r24, Y+4	; 0x04
    ab58:	88 23       	and	r24, r24
    ab5a:	51 f4       	brne	.+20     	; 0xab70 <PORTC_set_pin_pull_mode+0x54>
    ab5c:	89 81       	ldd	r24, Y+1	; 0x01
    ab5e:	9a 81       	ldd	r25, Y+2	; 0x02
    ab60:	fc 01       	movw	r30, r24
    ab62:	80 81       	ld	r24, Z
    ab64:	28 2f       	mov	r18, r24
    ab66:	27 7f       	andi	r18, 0xF7	; 247
    ab68:	89 81       	ldd	r24, Y+1	; 0x01
    ab6a:	9a 81       	ldd	r25, Y+2	; 0x02
    ab6c:	fc 01       	movw	r30, r24
    ab6e:	20 83       	st	Z, r18
    ab70:	00 00       	nop
    ab72:	24 96       	adiw	r28, 0x04	; 4
    ab74:	cd bf       	out	0x3d, r28	; 61
    ab76:	de bf       	out	0x3e, r29	; 62
    ab78:	df 91       	pop	r29
    ab7a:	cf 91       	pop	r28
    ab7c:	08 95       	ret

0000ab7e <PORTC_set_pin_dir>:
    ab7e:	cf 93       	push	r28
    ab80:	df 93       	push	r29
    ab82:	00 d0       	rcall	.+0      	; 0xab84 <PORTC_set_pin_dir+0x6>
    ab84:	cd b7       	in	r28, 0x3d	; 61
    ab86:	de b7       	in	r29, 0x3e	; 62
    ab88:	89 83       	std	Y+1, r24	; 0x01
    ab8a:	6a 83       	std	Y+2, r22	; 0x02
    ab8c:	8a 81       	ldd	r24, Y+2	; 0x02
    ab8e:	88 2f       	mov	r24, r24
    ab90:	90 e0       	ldi	r25, 0x00	; 0
    ab92:	81 30       	cpi	r24, 0x01	; 1
    ab94:	91 05       	cpc	r25, r1
    ab96:	e1 f0       	breq	.+56     	; 0xabd0 <PORTC_set_pin_dir+0x52>
    ab98:	82 30       	cpi	r24, 0x02	; 2
    ab9a:	91 05       	cpc	r25, r1
    ab9c:	71 f1       	breq	.+92     	; 0xabfa <PORTC_set_pin_dir+0x7c>
    ab9e:	89 2b       	or	r24, r25
    aba0:	09 f0       	breq	.+2      	; 0xaba4 <PORTC_set_pin_dir+0x26>
    aba2:	3b c0       	rjmp	.+118    	; 0xac1a <PORTC_set_pin_dir+0x9c>
    aba4:	88 e0       	ldi	r24, 0x08	; 8
    aba6:	90 e0       	ldi	r25, 0x00	; 0
    aba8:	28 e0       	ldi	r18, 0x08	; 8
    abaa:	30 e0       	ldi	r19, 0x00	; 0
    abac:	f9 01       	movw	r30, r18
    abae:	20 81       	ld	r18, Z
    abb0:	62 2f       	mov	r22, r18
    abb2:	29 81       	ldd	r18, Y+1	; 0x01
    abb4:	42 2f       	mov	r20, r18
    abb6:	50 e0       	ldi	r21, 0x00	; 0
    abb8:	21 e0       	ldi	r18, 0x01	; 1
    abba:	30 e0       	ldi	r19, 0x00	; 0
    abbc:	02 c0       	rjmp	.+4      	; 0xabc2 <PORTC_set_pin_dir+0x44>
    abbe:	22 0f       	add	r18, r18
    abc0:	33 1f       	adc	r19, r19
    abc2:	4a 95       	dec	r20
    abc4:	e2 f7       	brpl	.-8      	; 0xabbe <PORTC_set_pin_dir+0x40>
    abc6:	20 95       	com	r18
    abc8:	26 23       	and	r18, r22
    abca:	fc 01       	movw	r30, r24
    abcc:	20 83       	st	Z, r18
    abce:	25 c0       	rjmp	.+74     	; 0xac1a <PORTC_set_pin_dir+0x9c>
    abd0:	88 e0       	ldi	r24, 0x08	; 8
    abd2:	90 e0       	ldi	r25, 0x00	; 0
    abd4:	28 e0       	ldi	r18, 0x08	; 8
    abd6:	30 e0       	ldi	r19, 0x00	; 0
    abd8:	f9 01       	movw	r30, r18
    abda:	20 81       	ld	r18, Z
    abdc:	62 2f       	mov	r22, r18
    abde:	29 81       	ldd	r18, Y+1	; 0x01
    abe0:	42 2f       	mov	r20, r18
    abe2:	50 e0       	ldi	r21, 0x00	; 0
    abe4:	21 e0       	ldi	r18, 0x01	; 1
    abe6:	30 e0       	ldi	r19, 0x00	; 0
    abe8:	02 c0       	rjmp	.+4      	; 0xabee <PORTC_set_pin_dir+0x70>
    abea:	22 0f       	add	r18, r18
    abec:	33 1f       	adc	r19, r19
    abee:	4a 95       	dec	r20
    abf0:	e2 f7       	brpl	.-8      	; 0xabea <PORTC_set_pin_dir+0x6c>
    abf2:	26 2b       	or	r18, r22
    abf4:	fc 01       	movw	r30, r24
    abf6:	20 83       	st	Z, r18
    abf8:	10 c0       	rjmp	.+32     	; 0xac1a <PORTC_set_pin_dir+0x9c>
    abfa:	89 81       	ldd	r24, Y+1	; 0x01
    abfc:	88 2f       	mov	r24, r24
    abfe:	90 e0       	ldi	r25, 0x00	; 0
    ac00:	80 5b       	subi	r24, 0xB0	; 176
    ac02:	9b 4f       	sbci	r25, 0xFB	; 251
    ac04:	29 81       	ldd	r18, Y+1	; 0x01
    ac06:	22 2f       	mov	r18, r18
    ac08:	30 e0       	ldi	r19, 0x00	; 0
    ac0a:	20 5b       	subi	r18, 0xB0	; 176
    ac0c:	3b 4f       	sbci	r19, 0xFB	; 251
    ac0e:	f9 01       	movw	r30, r18
    ac10:	20 81       	ld	r18, Z
    ac12:	28 60       	ori	r18, 0x08	; 8
    ac14:	fc 01       	movw	r30, r24
    ac16:	20 83       	st	Z, r18
    ac18:	00 00       	nop
    ac1a:	00 00       	nop
    ac1c:	0f 90       	pop	r0
    ac1e:	0f 90       	pop	r0
    ac20:	df 91       	pop	r29
    ac22:	cf 91       	pop	r28
    ac24:	08 95       	ret

0000ac26 <PORTC_set_pin_level>:
    ac26:	cf 93       	push	r28
    ac28:	df 93       	push	r29
    ac2a:	00 d0       	rcall	.+0      	; 0xac2c <PORTC_set_pin_level+0x6>
    ac2c:	cd b7       	in	r28, 0x3d	; 61
    ac2e:	de b7       	in	r29, 0x3e	; 62
    ac30:	89 83       	std	Y+1, r24	; 0x01
    ac32:	6a 83       	std	Y+2, r22	; 0x02
    ac34:	8a 81       	ldd	r24, Y+2	; 0x02
    ac36:	88 23       	and	r24, r24
    ac38:	a9 f0       	breq	.+42     	; 0xac64 <PORTC_set_pin_level+0x3e>
    ac3a:	88 e0       	ldi	r24, 0x08	; 8
    ac3c:	90 e0       	ldi	r25, 0x00	; 0
    ac3e:	28 e0       	ldi	r18, 0x08	; 8
    ac40:	30 e0       	ldi	r19, 0x00	; 0
    ac42:	f9 01       	movw	r30, r18
    ac44:	21 81       	ldd	r18, Z+1	; 0x01
    ac46:	62 2f       	mov	r22, r18
    ac48:	29 81       	ldd	r18, Y+1	; 0x01
    ac4a:	42 2f       	mov	r20, r18
    ac4c:	50 e0       	ldi	r21, 0x00	; 0
    ac4e:	21 e0       	ldi	r18, 0x01	; 1
    ac50:	30 e0       	ldi	r19, 0x00	; 0
    ac52:	02 c0       	rjmp	.+4      	; 0xac58 <PORTC_set_pin_level+0x32>
    ac54:	22 0f       	add	r18, r18
    ac56:	33 1f       	adc	r19, r19
    ac58:	4a 95       	dec	r20
    ac5a:	e2 f7       	brpl	.-8      	; 0xac54 <PORTC_set_pin_level+0x2e>
    ac5c:	26 2b       	or	r18, r22
    ac5e:	fc 01       	movw	r30, r24
    ac60:	21 83       	std	Z+1, r18	; 0x01
    ac62:	15 c0       	rjmp	.+42     	; 0xac8e <PORTC_set_pin_level+0x68>
    ac64:	88 e0       	ldi	r24, 0x08	; 8
    ac66:	90 e0       	ldi	r25, 0x00	; 0
    ac68:	28 e0       	ldi	r18, 0x08	; 8
    ac6a:	30 e0       	ldi	r19, 0x00	; 0
    ac6c:	f9 01       	movw	r30, r18
    ac6e:	21 81       	ldd	r18, Z+1	; 0x01
    ac70:	62 2f       	mov	r22, r18
    ac72:	29 81       	ldd	r18, Y+1	; 0x01
    ac74:	42 2f       	mov	r20, r18
    ac76:	50 e0       	ldi	r21, 0x00	; 0
    ac78:	21 e0       	ldi	r18, 0x01	; 1
    ac7a:	30 e0       	ldi	r19, 0x00	; 0
    ac7c:	02 c0       	rjmp	.+4      	; 0xac82 <PORTC_set_pin_level+0x5c>
    ac7e:	22 0f       	add	r18, r18
    ac80:	33 1f       	adc	r19, r19
    ac82:	4a 95       	dec	r20
    ac84:	e2 f7       	brpl	.-8      	; 0xac7e <PORTC_set_pin_level+0x58>
    ac86:	20 95       	com	r18
    ac88:	26 23       	and	r18, r22
    ac8a:	fc 01       	movw	r30, r24
    ac8c:	21 83       	std	Z+1, r18	; 0x01
    ac8e:	00 00       	nop
    ac90:	0f 90       	pop	r0
    ac92:	0f 90       	pop	r0
    ac94:	df 91       	pop	r29
    ac96:	cf 91       	pop	r28
    ac98:	08 95       	ret

0000ac9a <PORTE_set_pin_pull_mode>:
    ac9a:	cf 93       	push	r28
    ac9c:	df 93       	push	r29
    ac9e:	00 d0       	rcall	.+0      	; 0xaca0 <PORTE_set_pin_pull_mode+0x6>
    aca0:	00 d0       	rcall	.+0      	; 0xaca2 <PORTE_set_pin_pull_mode+0x8>
    aca2:	cd b7       	in	r28, 0x3d	; 61
    aca4:	de b7       	in	r29, 0x3e	; 62
    aca6:	8b 83       	std	Y+3, r24	; 0x03
    aca8:	6c 83       	std	Y+4, r22	; 0x04
    acaa:	8b 81       	ldd	r24, Y+3	; 0x03
    acac:	88 2f       	mov	r24, r24
    acae:	90 e0       	ldi	r25, 0x00	; 0
    acb0:	80 57       	subi	r24, 0x70	; 112
    acb2:	9b 4f       	sbci	r25, 0xFB	; 251
    acb4:	89 83       	std	Y+1, r24	; 0x01
    acb6:	9a 83       	std	Y+2, r25	; 0x02
    acb8:	8c 81       	ldd	r24, Y+4	; 0x04
    acba:	81 30       	cpi	r24, 0x01	; 1
    acbc:	59 f4       	brne	.+22     	; 0xacd4 <PORTE_set_pin_pull_mode+0x3a>
    acbe:	89 81       	ldd	r24, Y+1	; 0x01
    acc0:	9a 81       	ldd	r25, Y+2	; 0x02
    acc2:	fc 01       	movw	r30, r24
    acc4:	80 81       	ld	r24, Z
    acc6:	28 2f       	mov	r18, r24
    acc8:	28 60       	ori	r18, 0x08	; 8
    acca:	89 81       	ldd	r24, Y+1	; 0x01
    accc:	9a 81       	ldd	r25, Y+2	; 0x02
    acce:	fc 01       	movw	r30, r24
    acd0:	20 83       	st	Z, r18
    acd2:	0d c0       	rjmp	.+26     	; 0xacee <PORTE_set_pin_pull_mode+0x54>
    acd4:	8c 81       	ldd	r24, Y+4	; 0x04
    acd6:	88 23       	and	r24, r24
    acd8:	51 f4       	brne	.+20     	; 0xacee <PORTE_set_pin_pull_mode+0x54>
    acda:	89 81       	ldd	r24, Y+1	; 0x01
    acdc:	9a 81       	ldd	r25, Y+2	; 0x02
    acde:	fc 01       	movw	r30, r24
    ace0:	80 81       	ld	r24, Z
    ace2:	28 2f       	mov	r18, r24
    ace4:	27 7f       	andi	r18, 0xF7	; 247
    ace6:	89 81       	ldd	r24, Y+1	; 0x01
    ace8:	9a 81       	ldd	r25, Y+2	; 0x02
    acea:	fc 01       	movw	r30, r24
    acec:	20 83       	st	Z, r18
    acee:	00 00       	nop
    acf0:	24 96       	adiw	r28, 0x04	; 4
    acf2:	cd bf       	out	0x3d, r28	; 61
    acf4:	de bf       	out	0x3e, r29	; 62
    acf6:	df 91       	pop	r29
    acf8:	cf 91       	pop	r28
    acfa:	08 95       	ret

0000acfc <PORTE_set_pin_dir>:
    acfc:	cf 93       	push	r28
    acfe:	df 93       	push	r29
    ad00:	00 d0       	rcall	.+0      	; 0xad02 <PORTE_set_pin_dir+0x6>
    ad02:	cd b7       	in	r28, 0x3d	; 61
    ad04:	de b7       	in	r29, 0x3e	; 62
    ad06:	89 83       	std	Y+1, r24	; 0x01
    ad08:	6a 83       	std	Y+2, r22	; 0x02
    ad0a:	8a 81       	ldd	r24, Y+2	; 0x02
    ad0c:	88 2f       	mov	r24, r24
    ad0e:	90 e0       	ldi	r25, 0x00	; 0
    ad10:	81 30       	cpi	r24, 0x01	; 1
    ad12:	91 05       	cpc	r25, r1
    ad14:	e1 f0       	breq	.+56     	; 0xad4e <PORTE_set_pin_dir+0x52>
    ad16:	82 30       	cpi	r24, 0x02	; 2
    ad18:	91 05       	cpc	r25, r1
    ad1a:	71 f1       	breq	.+92     	; 0xad78 <PORTE_set_pin_dir+0x7c>
    ad1c:	89 2b       	or	r24, r25
    ad1e:	09 f0       	breq	.+2      	; 0xad22 <PORTE_set_pin_dir+0x26>
    ad20:	3b c0       	rjmp	.+118    	; 0xad98 <PORTE_set_pin_dir+0x9c>
    ad22:	80 e1       	ldi	r24, 0x10	; 16
    ad24:	90 e0       	ldi	r25, 0x00	; 0
    ad26:	20 e1       	ldi	r18, 0x10	; 16
    ad28:	30 e0       	ldi	r19, 0x00	; 0
    ad2a:	f9 01       	movw	r30, r18
    ad2c:	20 81       	ld	r18, Z
    ad2e:	62 2f       	mov	r22, r18
    ad30:	29 81       	ldd	r18, Y+1	; 0x01
    ad32:	42 2f       	mov	r20, r18
    ad34:	50 e0       	ldi	r21, 0x00	; 0
    ad36:	21 e0       	ldi	r18, 0x01	; 1
    ad38:	30 e0       	ldi	r19, 0x00	; 0
    ad3a:	02 c0       	rjmp	.+4      	; 0xad40 <PORTE_set_pin_dir+0x44>
    ad3c:	22 0f       	add	r18, r18
    ad3e:	33 1f       	adc	r19, r19
    ad40:	4a 95       	dec	r20
    ad42:	e2 f7       	brpl	.-8      	; 0xad3c <PORTE_set_pin_dir+0x40>
    ad44:	20 95       	com	r18
    ad46:	26 23       	and	r18, r22
    ad48:	fc 01       	movw	r30, r24
    ad4a:	20 83       	st	Z, r18
    ad4c:	25 c0       	rjmp	.+74     	; 0xad98 <PORTE_set_pin_dir+0x9c>
    ad4e:	80 e1       	ldi	r24, 0x10	; 16
    ad50:	90 e0       	ldi	r25, 0x00	; 0
    ad52:	20 e1       	ldi	r18, 0x10	; 16
    ad54:	30 e0       	ldi	r19, 0x00	; 0
    ad56:	f9 01       	movw	r30, r18
    ad58:	20 81       	ld	r18, Z
    ad5a:	62 2f       	mov	r22, r18
    ad5c:	29 81       	ldd	r18, Y+1	; 0x01
    ad5e:	42 2f       	mov	r20, r18
    ad60:	50 e0       	ldi	r21, 0x00	; 0
    ad62:	21 e0       	ldi	r18, 0x01	; 1
    ad64:	30 e0       	ldi	r19, 0x00	; 0
    ad66:	02 c0       	rjmp	.+4      	; 0xad6c <PORTE_set_pin_dir+0x70>
    ad68:	22 0f       	add	r18, r18
    ad6a:	33 1f       	adc	r19, r19
    ad6c:	4a 95       	dec	r20
    ad6e:	e2 f7       	brpl	.-8      	; 0xad68 <PORTE_set_pin_dir+0x6c>
    ad70:	26 2b       	or	r18, r22
    ad72:	fc 01       	movw	r30, r24
    ad74:	20 83       	st	Z, r18
    ad76:	10 c0       	rjmp	.+32     	; 0xad98 <PORTE_set_pin_dir+0x9c>
    ad78:	89 81       	ldd	r24, Y+1	; 0x01
    ad7a:	88 2f       	mov	r24, r24
    ad7c:	90 e0       	ldi	r25, 0x00	; 0
    ad7e:	80 57       	subi	r24, 0x70	; 112
    ad80:	9b 4f       	sbci	r25, 0xFB	; 251
    ad82:	29 81       	ldd	r18, Y+1	; 0x01
    ad84:	22 2f       	mov	r18, r18
    ad86:	30 e0       	ldi	r19, 0x00	; 0
    ad88:	20 57       	subi	r18, 0x70	; 112
    ad8a:	3b 4f       	sbci	r19, 0xFB	; 251
    ad8c:	f9 01       	movw	r30, r18
    ad8e:	20 81       	ld	r18, Z
    ad90:	28 60       	ori	r18, 0x08	; 8
    ad92:	fc 01       	movw	r30, r24
    ad94:	20 83       	st	Z, r18
    ad96:	00 00       	nop
    ad98:	00 00       	nop
    ad9a:	0f 90       	pop	r0
    ad9c:	0f 90       	pop	r0
    ad9e:	df 91       	pop	r29
    ada0:	cf 91       	pop	r28
    ada2:	08 95       	ret

0000ada4 <PORTE_set_pin_level>:
    ada4:	cf 93       	push	r28
    ada6:	df 93       	push	r29
    ada8:	00 d0       	rcall	.+0      	; 0xadaa <PORTE_set_pin_level+0x6>
    adaa:	cd b7       	in	r28, 0x3d	; 61
    adac:	de b7       	in	r29, 0x3e	; 62
    adae:	89 83       	std	Y+1, r24	; 0x01
    adb0:	6a 83       	std	Y+2, r22	; 0x02
    adb2:	8a 81       	ldd	r24, Y+2	; 0x02
    adb4:	88 23       	and	r24, r24
    adb6:	a9 f0       	breq	.+42     	; 0xade2 <PORTE_set_pin_level+0x3e>
    adb8:	80 e1       	ldi	r24, 0x10	; 16
    adba:	90 e0       	ldi	r25, 0x00	; 0
    adbc:	20 e1       	ldi	r18, 0x10	; 16
    adbe:	30 e0       	ldi	r19, 0x00	; 0
    adc0:	f9 01       	movw	r30, r18
    adc2:	21 81       	ldd	r18, Z+1	; 0x01
    adc4:	62 2f       	mov	r22, r18
    adc6:	29 81       	ldd	r18, Y+1	; 0x01
    adc8:	42 2f       	mov	r20, r18
    adca:	50 e0       	ldi	r21, 0x00	; 0
    adcc:	21 e0       	ldi	r18, 0x01	; 1
    adce:	30 e0       	ldi	r19, 0x00	; 0
    add0:	02 c0       	rjmp	.+4      	; 0xadd6 <PORTE_set_pin_level+0x32>
    add2:	22 0f       	add	r18, r18
    add4:	33 1f       	adc	r19, r19
    add6:	4a 95       	dec	r20
    add8:	e2 f7       	brpl	.-8      	; 0xadd2 <PORTE_set_pin_level+0x2e>
    adda:	26 2b       	or	r18, r22
    addc:	fc 01       	movw	r30, r24
    adde:	21 83       	std	Z+1, r18	; 0x01
    ade0:	15 c0       	rjmp	.+42     	; 0xae0c <PORTE_set_pin_level+0x68>
    ade2:	80 e1       	ldi	r24, 0x10	; 16
    ade4:	90 e0       	ldi	r25, 0x00	; 0
    ade6:	20 e1       	ldi	r18, 0x10	; 16
    ade8:	30 e0       	ldi	r19, 0x00	; 0
    adea:	f9 01       	movw	r30, r18
    adec:	21 81       	ldd	r18, Z+1	; 0x01
    adee:	62 2f       	mov	r22, r18
    adf0:	29 81       	ldd	r18, Y+1	; 0x01
    adf2:	42 2f       	mov	r20, r18
    adf4:	50 e0       	ldi	r21, 0x00	; 0
    adf6:	21 e0       	ldi	r18, 0x01	; 1
    adf8:	30 e0       	ldi	r19, 0x00	; 0
    adfa:	02 c0       	rjmp	.+4      	; 0xae00 <PORTE_set_pin_level+0x5c>
    adfc:	22 0f       	add	r18, r18
    adfe:	33 1f       	adc	r19, r19
    ae00:	4a 95       	dec	r20
    ae02:	e2 f7       	brpl	.-8      	; 0xadfc <PORTE_set_pin_level+0x58>
    ae04:	20 95       	com	r18
    ae06:	26 23       	and	r18, r22
    ae08:	fc 01       	movw	r30, r24
    ae0a:	21 83       	std	Z+1, r18	; 0x01
    ae0c:	00 00       	nop
    ae0e:	0f 90       	pop	r0
    ae10:	0f 90       	pop	r0
    ae12:	df 91       	pop	r29
    ae14:	cf 91       	pop	r28
    ae16:	08 95       	ret

0000ae18 <PC0_set_dir>:
    ae18:	cf 93       	push	r28
    ae1a:	df 93       	push	r29
    ae1c:	1f 92       	push	r1
    ae1e:	cd b7       	in	r28, 0x3d	; 61
    ae20:	de b7       	in	r29, 0x3e	; 62
    ae22:	89 83       	std	Y+1, r24	; 0x01
    ae24:	69 81       	ldd	r22, Y+1	; 0x01
    ae26:	80 e0       	ldi	r24, 0x00	; 0
    ae28:	0e 94 bf 55 	call	0xab7e	; 0xab7e <PORTC_set_pin_dir>
    ae2c:	00 00       	nop
    ae2e:	0f 90       	pop	r0
    ae30:	df 91       	pop	r29
    ae32:	cf 91       	pop	r28
    ae34:	08 95       	ret

0000ae36 <PC0_set_level>:
    ae36:	cf 93       	push	r28
    ae38:	df 93       	push	r29
    ae3a:	1f 92       	push	r1
    ae3c:	cd b7       	in	r28, 0x3d	; 61
    ae3e:	de b7       	in	r29, 0x3e	; 62
    ae40:	89 83       	std	Y+1, r24	; 0x01
    ae42:	69 81       	ldd	r22, Y+1	; 0x01
    ae44:	80 e0       	ldi	r24, 0x00	; 0
    ae46:	0e 94 13 56 	call	0xac26	; 0xac26 <PORTC_set_pin_level>
    ae4a:	00 00       	nop
    ae4c:	0f 90       	pop	r0
    ae4e:	df 91       	pop	r29
    ae50:	cf 91       	pop	r28
    ae52:	08 95       	ret

0000ae54 <PC1_set_pull_mode>:
    ae54:	cf 93       	push	r28
    ae56:	df 93       	push	r29
    ae58:	1f 92       	push	r1
    ae5a:	cd b7       	in	r28, 0x3d	; 61
    ae5c:	de b7       	in	r29, 0x3e	; 62
    ae5e:	89 83       	std	Y+1, r24	; 0x01
    ae60:	69 81       	ldd	r22, Y+1	; 0x01
    ae62:	81 e0       	ldi	r24, 0x01	; 1
    ae64:	0e 94 8e 55 	call	0xab1c	; 0xab1c <PORTC_set_pin_pull_mode>
    ae68:	00 00       	nop
    ae6a:	0f 90       	pop	r0
    ae6c:	df 91       	pop	r29
    ae6e:	cf 91       	pop	r28
    ae70:	08 95       	ret

0000ae72 <PC1_set_dir>:
    ae72:	cf 93       	push	r28
    ae74:	df 93       	push	r29
    ae76:	1f 92       	push	r1
    ae78:	cd b7       	in	r28, 0x3d	; 61
    ae7a:	de b7       	in	r29, 0x3e	; 62
    ae7c:	89 83       	std	Y+1, r24	; 0x01
    ae7e:	69 81       	ldd	r22, Y+1	; 0x01
    ae80:	81 e0       	ldi	r24, 0x01	; 1
    ae82:	0e 94 bf 55 	call	0xab7e	; 0xab7e <PORTC_set_pin_dir>
    ae86:	00 00       	nop
    ae88:	0f 90       	pop	r0
    ae8a:	df 91       	pop	r29
    ae8c:	cf 91       	pop	r28
    ae8e:	08 95       	ret

0000ae90 <PE0_set_dir>:
    ae90:	cf 93       	push	r28
    ae92:	df 93       	push	r29
    ae94:	1f 92       	push	r1
    ae96:	cd b7       	in	r28, 0x3d	; 61
    ae98:	de b7       	in	r29, 0x3e	; 62
    ae9a:	89 83       	std	Y+1, r24	; 0x01
    ae9c:	69 81       	ldd	r22, Y+1	; 0x01
    ae9e:	80 e0       	ldi	r24, 0x00	; 0
    aea0:	0e 94 7e 56 	call	0xacfc	; 0xacfc <PORTE_set_pin_dir>
    aea4:	00 00       	nop
    aea6:	0f 90       	pop	r0
    aea8:	df 91       	pop	r29
    aeaa:	cf 91       	pop	r28
    aeac:	08 95       	ret

0000aeae <PE0_set_level>:
    aeae:	cf 93       	push	r28
    aeb0:	df 93       	push	r29
    aeb2:	1f 92       	push	r1
    aeb4:	cd b7       	in	r28, 0x3d	; 61
    aeb6:	de b7       	in	r29, 0x3e	; 62
    aeb8:	89 83       	std	Y+1, r24	; 0x01
    aeba:	69 81       	ldd	r22, Y+1	; 0x01
    aebc:	80 e0       	ldi	r24, 0x00	; 0
    aebe:	0e 94 d2 56 	call	0xada4	; 0xada4 <PORTE_set_pin_level>
    aec2:	00 00       	nop
    aec4:	0f 90       	pop	r0
    aec6:	df 91       	pop	r29
    aec8:	cf 91       	pop	r28
    aeca:	08 95       	ret

0000aecc <PE1_set_pull_mode>:
    aecc:	cf 93       	push	r28
    aece:	df 93       	push	r29
    aed0:	1f 92       	push	r1
    aed2:	cd b7       	in	r28, 0x3d	; 61
    aed4:	de b7       	in	r29, 0x3e	; 62
    aed6:	89 83       	std	Y+1, r24	; 0x01
    aed8:	69 81       	ldd	r22, Y+1	; 0x01
    aeda:	81 e0       	ldi	r24, 0x01	; 1
    aedc:	0e 94 4d 56 	call	0xac9a	; 0xac9a <PORTE_set_pin_pull_mode>
    aee0:	00 00       	nop
    aee2:	0f 90       	pop	r0
    aee4:	df 91       	pop	r29
    aee6:	cf 91       	pop	r28
    aee8:	08 95       	ret

0000aeea <PE1_set_dir>:
    aeea:	cf 93       	push	r28
    aeec:	df 93       	push	r29
    aeee:	1f 92       	push	r1
    aef0:	cd b7       	in	r28, 0x3d	; 61
    aef2:	de b7       	in	r29, 0x3e	; 62
    aef4:	89 83       	std	Y+1, r24	; 0x01
    aef6:	69 81       	ldd	r22, Y+1	; 0x01
    aef8:	81 e0       	ldi	r24, 0x01	; 1
    aefa:	0e 94 7e 56 	call	0xacfc	; 0xacfc <PORTE_set_pin_dir>
    aefe:	00 00       	nop
    af00:	0f 90       	pop	r0
    af02:	df 91       	pop	r29
    af04:	cf 91       	pop	r28
    af06:	08 95       	ret

0000af08 <_Z18nextFullLBTxBufferv>:
    af08:	cf 93       	push	r28
    af0a:	df 93       	push	r29
    af0c:	00 d0       	rcall	.+0      	; 0xaf0e <_Z18nextFullLBTxBufferv+0x6>
    af0e:	cd b7       	in	r28, 0x3d	; 61
    af10:	de b7       	in	r29, 0x3e	; 62
    af12:	81 e0       	ldi	r24, 0x01	; 1
    af14:	89 83       	std	Y+1, r24	; 0x01
    af16:	1a 82       	std	Y+2, r1	; 0x02
    af18:	80 91 6d 49 	lds	r24, 0x496D	; 0x80496d <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    af1c:	28 2f       	mov	r18, r24
    af1e:	30 e0       	ldi	r19, 0x00	; 0
    af20:	42 e3       	ldi	r20, 0x32	; 50
    af22:	42 9f       	mul	r20, r18
    af24:	c0 01       	movw	r24, r0
    af26:	43 9f       	mul	r20, r19
    af28:	90 0d       	add	r25, r0
    af2a:	11 24       	eor	r1, r1
    af2c:	8f 5d       	subi	r24, 0xDF	; 223
    af2e:	97 4b       	sbci	r25, 0xB7	; 183
    af30:	fc 01       	movw	r30, r24
    af32:	80 81       	ld	r24, Z
    af34:	88 23       	and	r24, r24
    af36:	c1 f4       	brne	.+48     	; 0xaf68 <_Z18nextFullLBTxBufferv+0x60>
    af38:	8a 81       	ldd	r24, Y+2	; 0x02
    af3a:	8f 5f       	subi	r24, 0xFF	; 255
    af3c:	8a 83       	std	Y+2, r24	; 0x02
    af3e:	81 e0       	ldi	r24, 0x01	; 1
    af40:	9a 81       	ldd	r25, Y+2	; 0x02
    af42:	94 30       	cpi	r25, 0x04	; 4
    af44:	08 f4       	brcc	.+2      	; 0xaf48 <_Z18nextFullLBTxBufferv+0x40>
    af46:	80 e0       	ldi	r24, 0x00	; 0
    af48:	88 23       	and	r24, r24
    af4a:	11 f0       	breq	.+4      	; 0xaf50 <_Z18nextFullLBTxBufferv+0x48>
    af4c:	19 82       	std	Y+1, r1	; 0x01
    af4e:	0c c0       	rjmp	.+24     	; 0xaf68 <_Z18nextFullLBTxBufferv+0x60>
    af50:	80 91 6d 49 	lds	r24, 0x496D	; 0x80496d <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    af54:	8f 5f       	subi	r24, 0xFF	; 255
    af56:	80 93 6d 49 	sts	0x496D, r24	; 0x80496d <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    af5a:	80 91 6d 49 	lds	r24, 0x496D	; 0x80496d <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    af5e:	84 30       	cpi	r24, 0x04	; 4
    af60:	d8 f2       	brcs	.-74     	; 0xaf18 <_Z18nextFullLBTxBufferv+0x10>
    af62:	10 92 6d 49 	sts	0x496D, r1	; 0x80496d <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    af66:	d8 cf       	rjmp	.-80     	; 0xaf18 <_Z18nextFullLBTxBufferv+0x10>
    af68:	89 81       	ldd	r24, Y+1	; 0x01
    af6a:	88 23       	and	r24, r24
    af6c:	69 f0       	breq	.+26     	; 0xaf88 <_Z18nextFullLBTxBufferv+0x80>
    af6e:	80 91 6d 49 	lds	r24, 0x496D	; 0x80496d <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    af72:	28 2f       	mov	r18, r24
    af74:	30 e0       	ldi	r19, 0x00	; 0
    af76:	42 e3       	ldi	r20, 0x32	; 50
    af78:	42 9f       	mul	r20, r18
    af7a:	c0 01       	movw	r24, r0
    af7c:	43 9f       	mul	r20, r19
    af7e:	90 0d       	add	r25, r0
    af80:	11 24       	eor	r1, r1
    af82:	8f 5d       	subi	r24, 0xDF	; 223
    af84:	97 4b       	sbci	r25, 0xB7	; 183
    af86:	02 c0       	rjmp	.+4      	; 0xaf8c <_Z18nextFullLBTxBufferv+0x84>
    af88:	80 e0       	ldi	r24, 0x00	; 0
    af8a:	90 e0       	ldi	r25, 0x00	; 0
    af8c:	0f 90       	pop	r0
    af8e:	0f 90       	pop	r0
    af90:	df 91       	pop	r29
    af92:	cf 91       	pop	r28
    af94:	08 95       	ret

0000af96 <_Z19nextEmptyLBTxBufferv>:
    af96:	cf 93       	push	r28
    af98:	df 93       	push	r29
    af9a:	00 d0       	rcall	.+0      	; 0xaf9c <_Z19nextEmptyLBTxBufferv+0x6>
    af9c:	cd b7       	in	r28, 0x3d	; 61
    af9e:	de b7       	in	r29, 0x3e	; 62
    afa0:	81 e0       	ldi	r24, 0x01	; 1
    afa2:	89 83       	std	Y+1, r24	; 0x01
    afa4:	1a 82       	std	Y+2, r1	; 0x02
    afa6:	80 91 6e 49 	lds	r24, 0x496E	; 0x80496e <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    afaa:	28 2f       	mov	r18, r24
    afac:	30 e0       	ldi	r19, 0x00	; 0
    afae:	42 e3       	ldi	r20, 0x32	; 50
    afb0:	42 9f       	mul	r20, r18
    afb2:	c0 01       	movw	r24, r0
    afb4:	43 9f       	mul	r20, r19
    afb6:	90 0d       	add	r25, r0
    afb8:	11 24       	eor	r1, r1
    afba:	8f 5d       	subi	r24, 0xDF	; 223
    afbc:	97 4b       	sbci	r25, 0xB7	; 183
    afbe:	fc 01       	movw	r30, r24
    afc0:	80 81       	ld	r24, Z
    afc2:	88 23       	and	r24, r24
    afc4:	c1 f0       	breq	.+48     	; 0xaff6 <_Z19nextEmptyLBTxBufferv+0x60>
    afc6:	8a 81       	ldd	r24, Y+2	; 0x02
    afc8:	8f 5f       	subi	r24, 0xFF	; 255
    afca:	8a 83       	std	Y+2, r24	; 0x02
    afcc:	81 e0       	ldi	r24, 0x01	; 1
    afce:	9a 81       	ldd	r25, Y+2	; 0x02
    afd0:	94 30       	cpi	r25, 0x04	; 4
    afd2:	08 f4       	brcc	.+2      	; 0xafd6 <_Z19nextEmptyLBTxBufferv+0x40>
    afd4:	80 e0       	ldi	r24, 0x00	; 0
    afd6:	88 23       	and	r24, r24
    afd8:	11 f0       	breq	.+4      	; 0xafde <_Z19nextEmptyLBTxBufferv+0x48>
    afda:	19 82       	std	Y+1, r1	; 0x01
    afdc:	0c c0       	rjmp	.+24     	; 0xaff6 <_Z19nextEmptyLBTxBufferv+0x60>
    afde:	80 91 6e 49 	lds	r24, 0x496E	; 0x80496e <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    afe2:	8f 5f       	subi	r24, 0xFF	; 255
    afe4:	80 93 6e 49 	sts	0x496E, r24	; 0x80496e <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    afe8:	80 91 6e 49 	lds	r24, 0x496E	; 0x80496e <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    afec:	84 30       	cpi	r24, 0x04	; 4
    afee:	d8 f2       	brcs	.-74     	; 0xafa6 <_Z19nextEmptyLBTxBufferv+0x10>
    aff0:	10 92 6e 49 	sts	0x496E, r1	; 0x80496e <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    aff4:	d8 cf       	rjmp	.-80     	; 0xafa6 <_Z19nextEmptyLBTxBufferv+0x10>
    aff6:	89 81       	ldd	r24, Y+1	; 0x01
    aff8:	88 23       	and	r24, r24
    affa:	69 f0       	breq	.+26     	; 0xb016 <_Z19nextEmptyLBTxBufferv+0x80>
    affc:	80 91 6e 49 	lds	r24, 0x496E	; 0x80496e <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    b000:	28 2f       	mov	r18, r24
    b002:	30 e0       	ldi	r19, 0x00	; 0
    b004:	42 e3       	ldi	r20, 0x32	; 50
    b006:	42 9f       	mul	r20, r18
    b008:	c0 01       	movw	r24, r0
    b00a:	43 9f       	mul	r20, r19
    b00c:	90 0d       	add	r25, r0
    b00e:	11 24       	eor	r1, r1
    b010:	8f 5d       	subi	r24, 0xDF	; 223
    b012:	97 4b       	sbci	r25, 0xB7	; 183
    b014:	02 c0       	rjmp	.+4      	; 0xb01a <_Z19nextEmptyLBTxBufferv+0x84>
    b016:	80 e0       	ldi	r24, 0x00	; 0
    b018:	90 e0       	ldi	r25, 0x00	; 0
    b01a:	0f 90       	pop	r0
    b01c:	0f 90       	pop	r0
    b01e:	df 91       	pop	r29
    b020:	cf 91       	pop	r28
    b022:	08 95       	ret

0000b024 <_Z19nextEmptyLBRxBufferv>:
    b024:	cf 93       	push	r28
    b026:	df 93       	push	r29
    b028:	00 d0       	rcall	.+0      	; 0xb02a <_Z19nextEmptyLBRxBufferv+0x6>
    b02a:	cd b7       	in	r28, 0x3d	; 61
    b02c:	de b7       	in	r29, 0x3e	; 62
    b02e:	81 e0       	ldi	r24, 0x01	; 1
    b030:	89 83       	std	Y+1, r24	; 0x01
    b032:	1a 82       	std	Y+2, r1	; 0x02
    b034:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b038:	28 2f       	mov	r18, r24
    b03a:	30 e0       	ldi	r19, 0x00	; 0
    b03c:	42 e4       	ldi	r20, 0x42	; 66
    b03e:	42 9f       	mul	r20, r18
    b040:	c0 01       	movw	r24, r0
    b042:	43 9f       	mul	r20, r19
    b044:	90 0d       	add	r25, r0
    b046:	11 24       	eor	r1, r1
    b048:	86 51       	subi	r24, 0x16	; 22
    b04a:	97 4b       	sbci	r25, 0xB7	; 183
    b04c:	fc 01       	movw	r30, r24
    b04e:	80 81       	ld	r24, Z
    b050:	91 81       	ldd	r25, Z+1	; 0x01
    b052:	89 2b       	or	r24, r25
    b054:	c1 f0       	breq	.+48     	; 0xb086 <_Z19nextEmptyLBRxBufferv+0x62>
    b056:	8a 81       	ldd	r24, Y+2	; 0x02
    b058:	8f 5f       	subi	r24, 0xFF	; 255
    b05a:	8a 83       	std	Y+2, r24	; 0x02
    b05c:	81 e0       	ldi	r24, 0x01	; 1
    b05e:	9a 81       	ldd	r25, Y+2	; 0x02
    b060:	92 30       	cpi	r25, 0x02	; 2
    b062:	08 f4       	brcc	.+2      	; 0xb066 <_Z19nextEmptyLBRxBufferv+0x42>
    b064:	80 e0       	ldi	r24, 0x00	; 0
    b066:	88 23       	and	r24, r24
    b068:	11 f0       	breq	.+4      	; 0xb06e <_Z19nextEmptyLBRxBufferv+0x4a>
    b06a:	19 82       	std	Y+1, r1	; 0x01
    b06c:	0c c0       	rjmp	.+24     	; 0xb086 <_Z19nextEmptyLBRxBufferv+0x62>
    b06e:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b072:	8f 5f       	subi	r24, 0xFF	; 255
    b074:	80 93 6f 49 	sts	0x496F, r24	; 0x80496f <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b078:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b07c:	82 30       	cpi	r24, 0x02	; 2
    b07e:	d0 f2       	brcs	.-76     	; 0xb034 <_Z19nextEmptyLBRxBufferv+0x10>
    b080:	10 92 6f 49 	sts	0x496F, r1	; 0x80496f <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b084:	d7 cf       	rjmp	.-82     	; 0xb034 <_Z19nextEmptyLBRxBufferv+0x10>
    b086:	89 81       	ldd	r24, Y+1	; 0x01
    b088:	88 23       	and	r24, r24
    b08a:	69 f0       	breq	.+26     	; 0xb0a6 <_Z19nextEmptyLBRxBufferv+0x82>
    b08c:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    b090:	28 2f       	mov	r18, r24
    b092:	30 e0       	ldi	r19, 0x00	; 0
    b094:	42 e4       	ldi	r20, 0x42	; 66
    b096:	42 9f       	mul	r20, r18
    b098:	c0 01       	movw	r24, r0
    b09a:	43 9f       	mul	r20, r19
    b09c:	90 0d       	add	r25, r0
    b09e:	11 24       	eor	r1, r1
    b0a0:	87 51       	subi	r24, 0x17	; 23
    b0a2:	97 4b       	sbci	r25, 0xB7	; 183
    b0a4:	02 c0       	rjmp	.+4      	; 0xb0aa <_Z19nextEmptyLBRxBufferv+0x86>
    b0a6:	80 e0       	ldi	r24, 0x00	; 0
    b0a8:	90 e0       	ldi	r25, 0x00	; 0
    b0aa:	0f 90       	pop	r0
    b0ac:	0f 90       	pop	r0
    b0ae:	df 91       	pop	r29
    b0b0:	cf 91       	pop	r28
    b0b2:	08 95       	ret

0000b0b4 <_Z18nextFullLBRxBufferv>:
    b0b4:	cf 93       	push	r28
    b0b6:	df 93       	push	r29
    b0b8:	00 d0       	rcall	.+0      	; 0xb0ba <_Z18nextFullLBRxBufferv+0x6>
    b0ba:	cd b7       	in	r28, 0x3d	; 61
    b0bc:	de b7       	in	r29, 0x3e	; 62
    b0be:	81 e0       	ldi	r24, 0x01	; 1
    b0c0:	89 83       	std	Y+1, r24	; 0x01
    b0c2:	1a 82       	std	Y+2, r1	; 0x02
    b0c4:	80 91 70 49 	lds	r24, 0x4970	; 0x804970 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b0c8:	28 2f       	mov	r18, r24
    b0ca:	30 e0       	ldi	r19, 0x00	; 0
    b0cc:	42 e4       	ldi	r20, 0x42	; 66
    b0ce:	42 9f       	mul	r20, r18
    b0d0:	c0 01       	movw	r24, r0
    b0d2:	43 9f       	mul	r20, r19
    b0d4:	90 0d       	add	r25, r0
    b0d6:	11 24       	eor	r1, r1
    b0d8:	86 51       	subi	r24, 0x16	; 22
    b0da:	97 4b       	sbci	r25, 0xB7	; 183
    b0dc:	fc 01       	movw	r30, r24
    b0de:	80 81       	ld	r24, Z
    b0e0:	91 81       	ldd	r25, Z+1	; 0x01
    b0e2:	89 2b       	or	r24, r25
    b0e4:	c1 f4       	brne	.+48     	; 0xb116 <_Z18nextFullLBRxBufferv+0x62>
    b0e6:	8a 81       	ldd	r24, Y+2	; 0x02
    b0e8:	8f 5f       	subi	r24, 0xFF	; 255
    b0ea:	8a 83       	std	Y+2, r24	; 0x02
    b0ec:	81 e0       	ldi	r24, 0x01	; 1
    b0ee:	9a 81       	ldd	r25, Y+2	; 0x02
    b0f0:	92 30       	cpi	r25, 0x02	; 2
    b0f2:	08 f4       	brcc	.+2      	; 0xb0f6 <_Z18nextFullLBRxBufferv+0x42>
    b0f4:	80 e0       	ldi	r24, 0x00	; 0
    b0f6:	88 23       	and	r24, r24
    b0f8:	11 f0       	breq	.+4      	; 0xb0fe <_Z18nextFullLBRxBufferv+0x4a>
    b0fa:	19 82       	std	Y+1, r1	; 0x01
    b0fc:	0c c0       	rjmp	.+24     	; 0xb116 <_Z18nextFullLBRxBufferv+0x62>
    b0fe:	80 91 70 49 	lds	r24, 0x4970	; 0x804970 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b102:	8f 5f       	subi	r24, 0xFF	; 255
    b104:	80 93 70 49 	sts	0x4970, r24	; 0x804970 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b108:	80 91 70 49 	lds	r24, 0x4970	; 0x804970 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b10c:	82 30       	cpi	r24, 0x02	; 2
    b10e:	d0 f2       	brcs	.-76     	; 0xb0c4 <_Z18nextFullLBRxBufferv+0x10>
    b110:	10 92 70 49 	sts	0x4970, r1	; 0x804970 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b114:	d7 cf       	rjmp	.-82     	; 0xb0c4 <_Z18nextFullLBRxBufferv+0x10>
    b116:	89 81       	ldd	r24, Y+1	; 0x01
    b118:	88 23       	and	r24, r24
    b11a:	69 f0       	breq	.+26     	; 0xb136 <_Z18nextFullLBRxBufferv+0x82>
    b11c:	80 91 70 49 	lds	r24, 0x4970	; 0x804970 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    b120:	28 2f       	mov	r18, r24
    b122:	30 e0       	ldi	r19, 0x00	; 0
    b124:	42 e4       	ldi	r20, 0x42	; 66
    b126:	42 9f       	mul	r20, r18
    b128:	c0 01       	movw	r24, r0
    b12a:	43 9f       	mul	r20, r19
    b12c:	90 0d       	add	r25, r0
    b12e:	11 24       	eor	r1, r1
    b130:	87 51       	subi	r24, 0x17	; 23
    b132:	97 4b       	sbci	r25, 0xB7	; 183
    b134:	02 c0       	rjmp	.+4      	; 0xb13a <_Z18nextFullLBRxBufferv+0x86>
    b136:	80 e0       	ldi	r24, 0x00	; 0
    b138:	90 e0       	ldi	r25, 0x00	; 0
    b13a:	0f 90       	pop	r0
    b13c:	0f 90       	pop	r0
    b13e:	df 91       	pop	r29
    b140:	cf 91       	pop	r28
    b142:	08 95       	ret

0000b144 <_Z19linkbusTxInProgressv>:
    b144:	cf 93       	push	r28
    b146:	df 93       	push	r29
    b148:	cd b7       	in	r28, 0x3d	; 61
    b14a:	de b7       	in	r29, 0x3e	; 62
    b14c:	80 91 20 48 	lds	r24, 0x4820	; 0x804820 <_ZL17linkbus_tx_active>
    b150:	df 91       	pop	r29
    b152:	cf 91       	pop	r28
    b154:	08 95       	ret

0000b156 <_ZL16linkbus_start_txv>:
    b156:	cf 93       	push	r28
    b158:	df 93       	push	r29
    b15a:	1f 92       	push	r1
    b15c:	cd b7       	in	r28, 0x3d	; 61
    b15e:	de b7       	in	r29, 0x3e	; 62
    b160:	90 91 20 48 	lds	r25, 0x4820	; 0x804820 <_ZL17linkbus_tx_active>
    b164:	81 e0       	ldi	r24, 0x01	; 1
    b166:	89 27       	eor	r24, r25
    b168:	89 83       	std	Y+1, r24	; 0x01
    b16a:	89 81       	ldd	r24, Y+1	; 0x01
    b16c:	88 23       	and	r24, r24
    b16e:	61 f0       	breq	.+24     	; 0xb188 <_ZL16linkbus_start_txv+0x32>
    b170:	81 e0       	ldi	r24, 0x01	; 1
    b172:	80 93 20 48 	sts	0x4820, r24	; 0x804820 <_ZL17linkbus_tx_active>
    b176:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b17a:	84 30       	cpi	r24, 0x04	; 4
    b17c:	19 f4       	brne	.+6      	; 0xb184 <_ZL16linkbus_start_txv+0x2e>
    b17e:	0e 94 37 73 	call	0xe66e	; 0xe66e <USART4_enable_tx>
    b182:	02 c0       	rjmp	.+4      	; 0xb188 <_ZL16linkbus_start_txv+0x32>
    b184:	0e 94 b1 72 	call	0xe562	; 0xe562 <USART1_enable_tx>
    b188:	89 81       	ldd	r24, Y+1	; 0x01
    b18a:	0f 90       	pop	r0
    b18c:	df 91       	pop	r29
    b18e:	cf 91       	pop	r28
    b190:	08 95       	ret

0000b192 <_Z14linkbus_end_txv>:
    b192:	cf 93       	push	r28
    b194:	df 93       	push	r29
    b196:	cd b7       	in	r28, 0x3d	; 61
    b198:	de b7       	in	r29, 0x3e	; 62
    b19a:	80 91 20 48 	lds	r24, 0x4820	; 0x804820 <_ZL17linkbus_tx_active>
    b19e:	88 23       	and	r24, r24
    b1a0:	c9 f0       	breq	.+50     	; 0xb1d4 <_Z14linkbus_end_txv+0x42>
    b1a2:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b1a6:	88 23       	and	r24, r24
    b1a8:	51 f4       	brne	.+20     	; 0xb1be <_Z14linkbus_end_txv+0x2c>
    b1aa:	80 e8       	ldi	r24, 0x80	; 128
    b1ac:	98 e0       	ldi	r25, 0x08	; 8
    b1ae:	20 e8       	ldi	r18, 0x80	; 128
    b1b0:	38 e0       	ldi	r19, 0x08	; 8
    b1b2:	f9 01       	movw	r30, r18
    b1b4:	25 81       	ldd	r18, Z+5	; 0x05
    b1b6:	2f 7d       	andi	r18, 0xDF	; 223
    b1b8:	fc 01       	movw	r30, r24
    b1ba:	25 83       	std	Z+5, r18	; 0x05
    b1bc:	09 c0       	rjmp	.+18     	; 0xb1d0 <_Z14linkbus_end_txv+0x3e>
    b1be:	80 e2       	ldi	r24, 0x20	; 32
    b1c0:	98 e0       	ldi	r25, 0x08	; 8
    b1c2:	20 e2       	ldi	r18, 0x20	; 32
    b1c4:	38 e0       	ldi	r19, 0x08	; 8
    b1c6:	f9 01       	movw	r30, r18
    b1c8:	25 81       	ldd	r18, Z+5	; 0x05
    b1ca:	2f 7d       	andi	r18, 0xDF	; 223
    b1cc:	fc 01       	movw	r30, r24
    b1ce:	25 83       	std	Z+5, r18	; 0x05
    b1d0:	10 92 20 48 	sts	0x4820, r1	; 0x804820 <_ZL17linkbus_tx_active>
    b1d4:	00 00       	nop
    b1d6:	df 91       	pop	r29
    b1d8:	cf 91       	pop	r28
    b1da:	08 95       	ret

0000b1dc <_ZL21USART1_initializationm>:
    b1dc:	cf 93       	push	r28
    b1de:	df 93       	push	r29
    b1e0:	00 d0       	rcall	.+0      	; 0xb1e2 <_ZL21USART1_initializationm+0x6>
    b1e2:	00 d0       	rcall	.+0      	; 0xb1e4 <_ZL21USART1_initializationm+0x8>
    b1e4:	cd b7       	in	r28, 0x3d	; 61
    b1e6:	de b7       	in	r29, 0x3e	; 62
    b1e8:	69 83       	std	Y+1, r22	; 0x01
    b1ea:	7a 83       	std	Y+2, r23	; 0x02
    b1ec:	8b 83       	std	Y+3, r24	; 0x03
    b1ee:	9c 83       	std	Y+4, r25	; 0x04
    b1f0:	80 e0       	ldi	r24, 0x00	; 0
    b1f2:	0e 94 39 57 	call	0xae72	; 0xae72 <PC1_set_dir>
    b1f6:	80 e0       	ldi	r24, 0x00	; 0
    b1f8:	0e 94 2a 57 	call	0xae54	; 0xae54 <PC1_set_pull_mode>
    b1fc:	81 e0       	ldi	r24, 0x01	; 1
    b1fe:	0e 94 0c 57 	call	0xae18	; 0xae18 <PC0_set_dir>
    b202:	81 e0       	ldi	r24, 0x01	; 1
    b204:	0e 94 1b 57 	call	0xae36	; 0xae36 <PC0_set_level>
    b208:	89 81       	ldd	r24, Y+1	; 0x01
    b20a:	9a 81       	ldd	r25, Y+2	; 0x02
    b20c:	ab 81       	ldd	r26, Y+3	; 0x03
    b20e:	bc 81       	ldd	r27, Y+4	; 0x04
    b210:	bc 01       	movw	r22, r24
    b212:	cd 01       	movw	r24, r26
    b214:	0e 94 5a 72 	call	0xe4b4	; 0xe4b4 <USART1_init>
    b218:	00 00       	nop
    b21a:	24 96       	adiw	r28, 0x04	; 4
    b21c:	cd bf       	out	0x3d, r28	; 61
    b21e:	de bf       	out	0x3e, r29	; 62
    b220:	df 91       	pop	r29
    b222:	cf 91       	pop	r28
    b224:	08 95       	ret

0000b226 <_ZL21USART4_initializationm>:
    b226:	cf 93       	push	r28
    b228:	df 93       	push	r29
    b22a:	00 d0       	rcall	.+0      	; 0xb22c <_ZL21USART4_initializationm+0x6>
    b22c:	00 d0       	rcall	.+0      	; 0xb22e <_ZL21USART4_initializationm+0x8>
    b22e:	cd b7       	in	r28, 0x3d	; 61
    b230:	de b7       	in	r29, 0x3e	; 62
    b232:	69 83       	std	Y+1, r22	; 0x01
    b234:	7a 83       	std	Y+2, r23	; 0x02
    b236:	8b 83       	std	Y+3, r24	; 0x03
    b238:	9c 83       	std	Y+4, r25	; 0x04
    b23a:	80 e0       	ldi	r24, 0x00	; 0
    b23c:	0e 94 75 57 	call	0xaeea	; 0xaeea <PE1_set_dir>
    b240:	80 e0       	ldi	r24, 0x00	; 0
    b242:	0e 94 66 57 	call	0xaecc	; 0xaecc <PE1_set_pull_mode>
    b246:	81 e0       	ldi	r24, 0x01	; 1
    b248:	0e 94 48 57 	call	0xae90	; 0xae90 <PE0_set_dir>
    b24c:	81 e0       	ldi	r24, 0x01	; 1
    b24e:	0e 94 57 57 	call	0xaeae	; 0xaeae <PE0_set_level>
    b252:	89 81       	ldd	r24, Y+1	; 0x01
    b254:	9a 81       	ldd	r25, Y+2	; 0x02
    b256:	ab 81       	ldd	r26, Y+3	; 0x03
    b258:	bc 81       	ldd	r27, Y+4	; 0x04
    b25a:	bc 01       	movw	r22, r24
    b25c:	cd 01       	movw	r24, r26
    b25e:	0e 94 e7 72 	call	0xe5ce	; 0xe5ce <USART4_init>
    b262:	00 00       	nop
    b264:	24 96       	adiw	r28, 0x04	; 4
    b266:	cd bf       	out	0x3d, r28	; 61
    b268:	de bf       	out	0x3e, r29	; 62
    b26a:	df 91       	pop	r29
    b26c:	cf 91       	pop	r28
    b26e:	08 95       	ret

0000b270 <_Z12linkbus_initm14USART_Number_t>:
    b270:	cf 93       	push	r28
    b272:	df 93       	push	r29
    b274:	cd b7       	in	r28, 0x3d	; 61
    b276:	de b7       	in	r29, 0x3e	; 62
    b278:	27 97       	sbiw	r28, 0x07	; 7
    b27a:	cd bf       	out	0x3d, r28	; 61
    b27c:	de bf       	out	0x3e, r29	; 62
    b27e:	6b 83       	std	Y+3, r22	; 0x03
    b280:	7c 83       	std	Y+4, r23	; 0x04
    b282:	8d 83       	std	Y+5, r24	; 0x05
    b284:	9e 83       	std	Y+6, r25	; 0x06
    b286:	4f 83       	std	Y+7, r20	; 0x07
    b288:	44 e8       	ldi	r20, 0x84	; 132
    b28a:	50 e0       	ldi	r21, 0x00	; 0
    b28c:	60 e0       	ldi	r22, 0x00	; 0
    b28e:	70 e0       	ldi	r23, 0x00	; 0
    b290:	89 ee       	ldi	r24, 0xE9	; 233
    b292:	98 e4       	ldi	r25, 0x48	; 72
    b294:	0e 94 c2 7b 	call	0xf784	; 0xf784 <memset>
    b298:	19 82       	std	Y+1, r1	; 0x01
    b29a:	1a 82       	std	Y+2, r1	; 0x02
    b29c:	89 81       	ldd	r24, Y+1	; 0x01
    b29e:	9a 81       	ldd	r25, Y+2	; 0x02
    b2a0:	04 97       	sbiw	r24, 0x04	; 4
    b2a2:	94 f4       	brge	.+36     	; 0xb2c8 <_Z12linkbus_initm14USART_Number_t+0x58>
    b2a4:	29 81       	ldd	r18, Y+1	; 0x01
    b2a6:	3a 81       	ldd	r19, Y+2	; 0x02
    b2a8:	42 e3       	ldi	r20, 0x32	; 50
    b2aa:	42 9f       	mul	r20, r18
    b2ac:	c0 01       	movw	r24, r0
    b2ae:	43 9f       	mul	r20, r19
    b2b0:	90 0d       	add	r25, r0
    b2b2:	11 24       	eor	r1, r1
    b2b4:	8f 5d       	subi	r24, 0xDF	; 223
    b2b6:	97 4b       	sbci	r25, 0xB7	; 183
    b2b8:	fc 01       	movw	r30, r24
    b2ba:	10 82       	st	Z, r1
    b2bc:	89 81       	ldd	r24, Y+1	; 0x01
    b2be:	9a 81       	ldd	r25, Y+2	; 0x02
    b2c0:	01 96       	adiw	r24, 0x01	; 1
    b2c2:	89 83       	std	Y+1, r24	; 0x01
    b2c4:	9a 83       	std	Y+2, r25	; 0x02
    b2c6:	ea cf       	rjmp	.-44     	; 0xb29c <_Z12linkbus_initm14USART_Number_t+0x2c>
    b2c8:	8f 81       	ldd	r24, Y+7	; 0x07
    b2ca:	86 30       	cpi	r24, 0x06	; 6
    b2cc:	21 f4       	brne	.+8      	; 0xb2d6 <_Z12linkbus_initm14USART_Number_t+0x66>
    b2ce:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b2d2:	87 30       	cpi	r24, 0x07	; 7
    b2d4:	b9 f4       	brne	.+46     	; 0xb304 <_Z12linkbus_initm14USART_Number_t+0x94>
    b2d6:	8f 81       	ldd	r24, Y+7	; 0x07
    b2d8:	84 30       	cpi	r24, 0x04	; 4
    b2da:	49 f4       	brne	.+18     	; 0xb2ee <_Z12linkbus_initm14USART_Number_t+0x7e>
    b2dc:	8b 81       	ldd	r24, Y+3	; 0x03
    b2de:	9c 81       	ldd	r25, Y+4	; 0x04
    b2e0:	ad 81       	ldd	r26, Y+5	; 0x05
    b2e2:	be 81       	ldd	r27, Y+6	; 0x06
    b2e4:	bc 01       	movw	r22, r24
    b2e6:	cd 01       	movw	r24, r26
    b2e8:	0e 94 13 59 	call	0xb226	; 0xb226 <_ZL21USART4_initializationm>
    b2ec:	08 c0       	rjmp	.+16     	; 0xb2fe <_Z12linkbus_initm14USART_Number_t+0x8e>
    b2ee:	8b 81       	ldd	r24, Y+3	; 0x03
    b2f0:	9c 81       	ldd	r25, Y+4	; 0x04
    b2f2:	ad 81       	ldd	r26, Y+5	; 0x05
    b2f4:	be 81       	ldd	r27, Y+6	; 0x06
    b2f6:	bc 01       	movw	r22, r24
    b2f8:	cd 01       	movw	r24, r26
    b2fa:	0e 94 ee 58 	call	0xb1dc	; 0xb1dc <_ZL21USART1_initializationm>
    b2fe:	8f 81       	ldd	r24, Y+7	; 0x07
    b300:	80 93 2d 40 	sts	0x402D, r24	; 0x80402d <g_linkbus_usart_number>
    b304:	10 92 2c 40 	sts	0x402C, r1	; 0x80402c <_ZL14g_bus_disabled>
    b308:	00 00       	nop
    b30a:	27 96       	adiw	r28, 0x07	; 7
    b30c:	cd bf       	out	0x3d, r28	; 61
    b30e:	de bf       	out	0x3e, r29	; 62
    b310:	df 91       	pop	r29
    b312:	cf 91       	pop	r28
    b314:	08 95       	ret

0000b316 <_Z15linkbus_disablev>:
    b316:	cf 93       	push	r28
    b318:	df 93       	push	r29
    b31a:	1f 92       	push	r1
    b31c:	cd b7       	in	r28, 0x3d	; 61
    b31e:	de b7       	in	r29, 0x3e	; 62
    b320:	81 e0       	ldi	r24, 0x01	; 1
    b322:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <_ZL14g_bus_disabled>
    b326:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <g_linkbus_usart_number>
    b32a:	84 30       	cpi	r24, 0x04	; 4
    b32c:	19 f4       	brne	.+6      	; 0xb334 <_Z15linkbus_disablev+0x1e>
    b32e:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <USART4_disable>
    b332:	02 c0       	rjmp	.+4      	; 0xb338 <_Z15linkbus_disablev+0x22>
    b334:	0e 94 cb 72 	call	0xe596	; 0xe596 <USART1_disable>
    b338:	0e 94 c9 58 	call	0xb192	; 0xb192 <_Z14linkbus_end_txv>
    b33c:	44 e8       	ldi	r20, 0x84	; 132
    b33e:	50 e0       	ldi	r21, 0x00	; 0
    b340:	60 e0       	ldi	r22, 0x00	; 0
    b342:	70 e0       	ldi	r23, 0x00	; 0
    b344:	89 ee       	ldi	r24, 0xE9	; 233
    b346:	98 e4       	ldi	r25, 0x48	; 72
    b348:	0e 94 c2 7b 	call	0xf784	; 0xf784 <memset>
    b34c:	19 82       	std	Y+1, r1	; 0x01
    b34e:	89 81       	ldd	r24, Y+1	; 0x01
    b350:	84 30       	cpi	r24, 0x04	; 4
    b352:	88 f4       	brcc	.+34     	; 0xb376 <_Z15linkbus_disablev+0x60>
    b354:	89 81       	ldd	r24, Y+1	; 0x01
    b356:	28 2f       	mov	r18, r24
    b358:	30 e0       	ldi	r19, 0x00	; 0
    b35a:	42 e3       	ldi	r20, 0x32	; 50
    b35c:	42 9f       	mul	r20, r18
    b35e:	c0 01       	movw	r24, r0
    b360:	43 9f       	mul	r20, r19
    b362:	90 0d       	add	r25, r0
    b364:	11 24       	eor	r1, r1
    b366:	8f 5d       	subi	r24, 0xDF	; 223
    b368:	97 4b       	sbci	r25, 0xB7	; 183
    b36a:	fc 01       	movw	r30, r24
    b36c:	10 82       	st	Z, r1
    b36e:	89 81       	ldd	r24, Y+1	; 0x01
    b370:	8f 5f       	subi	r24, 0xFF	; 255
    b372:	89 83       	std	Y+1, r24	; 0x01
    b374:	ec cf       	rjmp	.-40     	; 0xb34e <_Z15linkbus_disablev+0x38>
    b376:	00 00       	nop
    b378:	0f 90       	pop	r0
    b37a:	df 91       	pop	r29
    b37c:	cf 91       	pop	r28
    b37e:	08 95       	ret

0000b380 <_Z12lb_send_textPc>:
    b380:	cf 93       	push	r28
    b382:	df 93       	push	r29
    b384:	cd b7       	in	r28, 0x3d	; 61
    b386:	de b7       	in	r29, 0x3e	; 62
    b388:	27 97       	sbiw	r28, 0x07	; 7
    b38a:	cd bf       	out	0x3d, r28	; 61
    b38c:	de bf       	out	0x3e, r29	; 62
    b38e:	8e 83       	std	Y+6, r24	; 0x06
    b390:	9f 83       	std	Y+7, r25	; 0x07
    b392:	81 e0       	ldi	r24, 0x01	; 1
    b394:	89 83       	std	Y+1, r24	; 0x01
    b396:	88 ec       	ldi	r24, 0xC8	; 200
    b398:	90 e0       	ldi	r25, 0x00	; 0
    b39a:	8a 83       	std	Y+2, r24	; 0x02
    b39c:	9b 83       	std	Y+3, r25	; 0x03
    b39e:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <_ZL14g_bus_disabled>
    b3a2:	88 23       	and	r24, r24
    b3a4:	11 f0       	breq	.+4      	; 0xb3aa <_Z12lb_send_textPc+0x2a>
    b3a6:	89 81       	ldd	r24, Y+1	; 0x01
    b3a8:	42 c0       	rjmp	.+132    	; 0xb42e <_Z12lb_send_textPc+0xae>
    b3aa:	8e 81       	ldd	r24, Y+6	; 0x06
    b3ac:	9f 81       	ldd	r25, Y+7	; 0x07
    b3ae:	89 2b       	or	r24, r25
    b3b0:	e9 f1       	breq	.+122    	; 0xb42c <_Z12lb_send_textPc+0xac>
    b3b2:	0e 94 cb 57 	call	0xaf96	; 0xaf96 <_Z19nextEmptyLBTxBufferv>
    b3b6:	8c 83       	std	Y+4, r24	; 0x04
    b3b8:	9d 83       	std	Y+5, r25	; 0x05
    b3ba:	8c 81       	ldd	r24, Y+4	; 0x04
    b3bc:	9d 81       	ldd	r25, Y+5	; 0x05
    b3be:	89 2b       	or	r24, r25
    b3c0:	01 f5       	brne	.+64     	; 0xb402 <_Z12lb_send_textPc+0x82>
    b3c2:	8a 81       	ldd	r24, Y+2	; 0x02
    b3c4:	9b 81       	ldd	r25, Y+3	; 0x03
    b3c6:	89 2b       	or	r24, r25
    b3c8:	e1 f0       	breq	.+56     	; 0xb402 <_Z12lb_send_textPc+0x82>
    b3ca:	0e 94 a2 58 	call	0xb144	; 0xb144 <_Z19linkbusTxInProgressv>
    b3ce:	88 23       	and	r24, r24
    b3d0:	31 f0       	breq	.+12     	; 0xb3de <_Z12lb_send_textPc+0x5e>
    b3d2:	8a 81       	ldd	r24, Y+2	; 0x02
    b3d4:	9b 81       	ldd	r25, Y+3	; 0x03
    b3d6:	89 2b       	or	r24, r25
    b3d8:	11 f0       	breq	.+4      	; 0xb3de <_Z12lb_send_textPc+0x5e>
    b3da:	81 e0       	ldi	r24, 0x01	; 1
    b3dc:	01 c0       	rjmp	.+2      	; 0xb3e0 <_Z12lb_send_textPc+0x60>
    b3de:	80 e0       	ldi	r24, 0x00	; 0
    b3e0:	88 23       	and	r24, r24
    b3e2:	51 f0       	breq	.+20     	; 0xb3f8 <_Z12lb_send_textPc+0x78>
    b3e4:	8a 81       	ldd	r24, Y+2	; 0x02
    b3e6:	9b 81       	ldd	r25, Y+3	; 0x03
    b3e8:	89 2b       	or	r24, r25
    b3ea:	79 f3       	breq	.-34     	; 0xb3ca <_Z12lb_send_textPc+0x4a>
    b3ec:	8a 81       	ldd	r24, Y+2	; 0x02
    b3ee:	9b 81       	ldd	r25, Y+3	; 0x03
    b3f0:	01 97       	sbiw	r24, 0x01	; 1
    b3f2:	8a 83       	std	Y+2, r24	; 0x02
    b3f4:	9b 83       	std	Y+3, r25	; 0x03
    b3f6:	e9 cf       	rjmp	.-46     	; 0xb3ca <_Z12lb_send_textPc+0x4a>
    b3f8:	0e 94 cb 57 	call	0xaf96	; 0xaf96 <_Z19nextEmptyLBTxBufferv>
    b3fc:	8c 83       	std	Y+4, r24	; 0x04
    b3fe:	9d 83       	std	Y+5, r25	; 0x05
    b400:	dc cf       	rjmp	.-72     	; 0xb3ba <_Z12lb_send_textPc+0x3a>
    b402:	8c 81       	ldd	r24, Y+4	; 0x04
    b404:	9d 81       	ldd	r25, Y+5	; 0x05
    b406:	89 2b       	or	r24, r25
    b408:	89 f0       	breq	.+34     	; 0xb42c <_Z12lb_send_textPc+0xac>
    b40a:	8f 81       	ldd	r24, Y+7	; 0x07
    b40c:	8f 93       	push	r24
    b40e:	8e 81       	ldd	r24, Y+6	; 0x06
    b410:	8f 93       	push	r24
    b412:	8d 81       	ldd	r24, Y+5	; 0x05
    b414:	8f 93       	push	r24
    b416:	8c 81       	ldd	r24, Y+4	; 0x04
    b418:	8f 93       	push	r24
    b41a:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    b41e:	0f 90       	pop	r0
    b420:	0f 90       	pop	r0
    b422:	0f 90       	pop	r0
    b424:	0f 90       	pop	r0
    b426:	0e 94 ab 58 	call	0xb156	; 0xb156 <_ZL16linkbus_start_txv>
    b42a:	19 82       	std	Y+1, r1	; 0x01
    b42c:	89 81       	ldd	r24, Y+1	; 0x01
    b42e:	27 96       	adiw	r28, 0x07	; 7
    b430:	cd bf       	out	0x3d, r28	; 61
    b432:	de bf       	out	0x3e, r29	; 62
    b434:	df 91       	pop	r29
    b436:	cf 91       	pop	r28
    b438:	08 95       	ret

0000b43a <_Z11lb_send_msg13LBMessageTypePKcPc>:
    b43a:	cf 93       	push	r28
    b43c:	df 93       	push	r29
    b43e:	cd b7       	in	r28, 0x3d	; 61
    b440:	de b7       	in	r29, 0x3e	; 62
    b442:	27 97       	sbiw	r28, 0x07	; 7
    b444:	cd bf       	out	0x3d, r28	; 61
    b446:	de bf       	out	0x3e, r29	; 62
    b448:	8b 83       	std	Y+3, r24	; 0x03
    b44a:	6c 83       	std	Y+4, r22	; 0x04
    b44c:	7d 83       	std	Y+5, r23	; 0x05
    b44e:	4e 83       	std	Y+6, r20	; 0x06
    b450:	5f 83       	std	Y+7, r21	; 0x07
    b452:	84 e2       	ldi	r24, 0x24	; 36
    b454:	89 83       	std	Y+1, r24	; 0x01
    b456:	8b e3       	ldi	r24, 0x3B	; 59
    b458:	8a 83       	std	Y+2, r24	; 0x02
    b45a:	8b 81       	ldd	r24, Y+3	; 0x03
    b45c:	83 30       	cpi	r24, 0x03	; 3
    b45e:	19 f4       	brne	.+6      	; 0xb466 <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    b460:	81 e2       	ldi	r24, 0x21	; 33
    b462:	89 83       	std	Y+1, r24	; 0x01
    b464:	05 c0       	rjmp	.+10     	; 0xb470 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    b466:	8b 81       	ldd	r24, Y+3	; 0x03
    b468:	82 30       	cpi	r24, 0x02	; 2
    b46a:	11 f4       	brne	.+4      	; 0xb470 <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    b46c:	8f e3       	ldi	r24, 0x3F	; 63
    b46e:	8a 83       	std	Y+2, r24	; 0x02
    b470:	8a 81       	ldd	r24, Y+2	; 0x02
    b472:	28 2f       	mov	r18, r24
    b474:	30 e0       	ldi	r19, 0x00	; 0
    b476:	89 81       	ldd	r24, Y+1	; 0x01
    b478:	88 2f       	mov	r24, r24
    b47a:	90 e0       	ldi	r25, 0x00	; 0
    b47c:	43 2f       	mov	r20, r19
    b47e:	4f 93       	push	r20
    b480:	2f 93       	push	r18
    b482:	2f 81       	ldd	r18, Y+7	; 0x07
    b484:	2f 93       	push	r18
    b486:	2e 81       	ldd	r18, Y+6	; 0x06
    b488:	2f 93       	push	r18
    b48a:	2d 81       	ldd	r18, Y+5	; 0x05
    b48c:	2f 93       	push	r18
    b48e:	2c 81       	ldd	r18, Y+4	; 0x04
    b490:	2f 93       	push	r18
    b492:	29 2f       	mov	r18, r25
    b494:	2f 93       	push	r18
    b496:	8f 93       	push	r24
    b498:	88 eb       	ldi	r24, 0xB8	; 184
    b49a:	94 e4       	ldi	r25, 0x44	; 68
    b49c:	89 2f       	mov	r24, r25
    b49e:	8f 93       	push	r24
    b4a0:	88 eb       	ldi	r24, 0xB8	; 184
    b4a2:	94 e4       	ldi	r25, 0x44	; 68
    b4a4:	8f 93       	push	r24
    b4a6:	8e ee       	ldi	r24, 0xEE	; 238
    b4a8:	97 e4       	ldi	r25, 0x47	; 71
    b4aa:	89 2f       	mov	r24, r25
    b4ac:	8f 93       	push	r24
    b4ae:	8e ee       	ldi	r24, 0xEE	; 238
    b4b0:	97 e4       	ldi	r25, 0x47	; 71
    b4b2:	8f 93       	push	r24
    b4b4:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    b4b8:	8d b7       	in	r24, 0x3d	; 61
    b4ba:	9e b7       	in	r25, 0x3e	; 62
    b4bc:	0c 96       	adiw	r24, 0x0c	; 12
    b4be:	cd bf       	out	0x3d, r28	; 61
    b4c0:	de bf       	out	0x3e, r29	; 62
    b4c2:	8e ee       	ldi	r24, 0xEE	; 238
    b4c4:	97 e4       	ldi	r25, 0x47	; 71
    b4c6:	0e 94 c0 59 	call	0xb380	; 0xb380 <_Z12lb_send_textPc>
    b4ca:	00 00       	nop
    b4cc:	27 96       	adiw	r28, 0x07	; 7
    b4ce:	cd bf       	out	0x3d, r28	; 61
    b4d0:	de bf       	out	0x3e, r29	; 62
    b4d2:	df 91       	pop	r29
    b4d4:	cf 91       	pop	r28
    b4d6:	08 95       	ret

0000b4d8 <_Z16lb_broadcast_numjPKc>:


void lb_broadcast_num(uint16_t data, const char* str)
{
    b4d8:	cf 93       	push	r28
    b4da:	df 93       	push	r29
    b4dc:	cd b7       	in	r28, 0x3d	; 61
    b4de:	de b7       	in	r29, 0x3e	; 62
    b4e0:	2a 97       	sbiw	r28, 0x0a	; 10
    b4e2:	cd bf       	out	0x3d, r28	; 61
    b4e4:	de bf       	out	0x3e, r29	; 62
    b4e6:	8f 83       	std	Y+7, r24	; 0x07
    b4e8:	98 87       	std	Y+8, r25	; 0x08
    b4ea:	69 87       	std	Y+9, r22	; 0x09
    b4ec:	7a 87       	std	Y+10, r23	; 0x0a
	char t[6] = "\0";
    b4ee:	80 91 d2 44 	lds	r24, 0x44D2	; 0x8044d2 <g_80m_power_table+0x491>
    b4f2:	90 91 d3 44 	lds	r25, 0x44D3	; 0x8044d3 <g_80m_power_table+0x492>
    b4f6:	89 83       	std	Y+1, r24	; 0x01
    b4f8:	9a 83       	std	Y+2, r25	; 0x02
    b4fa:	24 e0       	ldi	r18, 0x04	; 4
    b4fc:	ce 01       	movw	r24, r28
    b4fe:	03 96       	adiw	r24, 0x03	; 3
    b500:	fc 01       	movw	r30, r24
    b502:	32 2f       	mov	r19, r18
    b504:	11 92       	st	Z+, r1
    b506:	3a 95       	dec	r19
    b508:	e9 f7       	brne	.-6      	; 0xb504 <_Z16lb_broadcast_numjPKc+0x2c>

	sprintf(t, "%u", data);
    b50a:	88 85       	ldd	r24, Y+8	; 0x08
    b50c:	8f 93       	push	r24
    b50e:	8f 81       	ldd	r24, Y+7	; 0x07
    b510:	8f 93       	push	r24
    b512:	88 ec       	ldi	r24, 0xC8	; 200
    b514:	94 e4       	ldi	r25, 0x44	; 68
    b516:	89 2f       	mov	r24, r25
    b518:	8f 93       	push	r24
    b51a:	88 ec       	ldi	r24, 0xC8	; 200
    b51c:	94 e4       	ldi	r25, 0x44	; 68
    b51e:	8f 93       	push	r24
    b520:	ce 01       	movw	r24, r28
    b522:	01 96       	adiw	r24, 0x01	; 1
    b524:	9f 93       	push	r25
    b526:	8f 93       	push	r24
    b528:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    b52c:	0f 90       	pop	r0
    b52e:	0f 90       	pop	r0
    b530:	0f 90       	pop	r0
    b532:	0f 90       	pop	r0
    b534:	0f 90       	pop	r0
    b536:	0f 90       	pop	r0
	g_tempMsgBuff[0] = '\0';
    b538:	10 92 ee 47 	sts	0x47EE, r1	; 0x8047ee <_ZL13g_tempMsgBuff>

	if(str)
    b53c:	89 85       	ldd	r24, Y+9	; 0x09
    b53e:	9a 85       	ldd	r25, Y+10	; 0x0a
    b540:	89 2b       	or	r24, r25
    b542:	e9 f0       	breq	.+58     	; 0xb57e <_Z16lb_broadcast_numjPKc+0xa6>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    b544:	ce 01       	movw	r24, r28
    b546:	01 96       	adiw	r24, 0x01	; 1
    b548:	9f 93       	push	r25
    b54a:	8f 93       	push	r24
    b54c:	8a 85       	ldd	r24, Y+10	; 0x0a
    b54e:	8f 93       	push	r24
    b550:	89 85       	ldd	r24, Y+9	; 0x09
    b552:	8f 93       	push	r24
    b554:	8b ec       	ldi	r24, 0xCB	; 203
    b556:	94 e4       	ldi	r25, 0x44	; 68
    b558:	89 2f       	mov	r24, r25
    b55a:	8f 93       	push	r24
    b55c:	8b ec       	ldi	r24, 0xCB	; 203
    b55e:	94 e4       	ldi	r25, 0x44	; 68
    b560:	8f 93       	push	r24
    b562:	8e ee       	ldi	r24, 0xEE	; 238
    b564:	97 e4       	ldi	r25, 0x47	; 71
    b566:	89 2f       	mov	r24, r25
    b568:	8f 93       	push	r24
    b56a:	8e ee       	ldi	r24, 0xEE	; 238
    b56c:	97 e4       	ldi	r25, 0x47	; 71
    b56e:	8f 93       	push	r24
    b570:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    b574:	8d b7       	in	r24, 0x3d	; 61
    b576:	9e b7       	in	r25, 0x3e	; 62
    b578:	08 96       	adiw	r24, 0x08	; 8
    b57a:	cd bf       	out	0x3d, r28	; 61
    b57c:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    b57e:	80 91 ee 47 	lds	r24, 0x47EE	; 0x8047ee <_ZL13g_tempMsgBuff>
    b582:	88 23       	and	r24, r24
    b584:	21 f0       	breq	.+8      	; 0xb58e <_Z16lb_broadcast_numjPKc+0xb6>
    b586:	8e ee       	ldi	r24, 0xEE	; 238
    b588:	97 e4       	ldi	r25, 0x47	; 71
    b58a:	0e 94 c0 59 	call	0xb380	; 0xb380 <_Z12lb_send_textPc>
}
    b58e:	00 00       	nop
    b590:	2a 96       	adiw	r28, 0x0a	; 10
    b592:	cd bf       	out	0x3d, r28	; 61
    b594:	de bf       	out	0x3e, r29	; 62
    b596:	df 91       	pop	r29
    b598:	cf 91       	pop	r28
    b59a:	08 95       	ret

0000b59c <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    b59c:	cf 93       	push	r28
    b59e:	df 93       	push	r29
    b5a0:	cd b7       	in	r28, 0x3d	; 61
    b5a2:	de b7       	in	r29, 0x3e	; 62
    b5a4:	28 97       	sbiw	r28, 0x08	; 8
    b5a6:	cd bf       	out	0x3d, r28	; 61
    b5a8:	de bf       	out	0x3e, r29	; 62
    b5aa:	8b 83       	std	Y+3, r24	; 0x03
    b5ac:	9c 83       	std	Y+4, r25	; 0x04
    b5ae:	6d 83       	std	Y+5, r22	; 0x05
    b5b0:	7e 83       	std	Y+6, r23	; 0x06
    b5b2:	4f 83       	std	Y+7, r20	; 0x07
    b5b4:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = false;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    b5b6:	8b 81       	ldd	r24, Y+3	; 0x03
    b5b8:	9c 81       	ldd	r25, Y+4	; 0x04
    b5ba:	89 2b       	or	r24, r25
    b5bc:	09 f4       	brne	.+2      	; 0xb5c0 <_Z9makeMorsePcPbS0_+0x24>
    b5be:	4a c0       	rjmp	.+148    	; 0xb654 <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    b5c0:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    b5c4:	8d 81       	ldd	r24, Y+5	; 0x05
    b5c6:	9e 81       	ldd	r25, Y+6	; 0x06
    b5c8:	89 2b       	or	r24, r25
    b5ca:	31 f0       	breq	.+12     	; 0xb5d8 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    b5cc:	8d 81       	ldd	r24, Y+5	; 0x05
    b5ce:	9e 81       	ldd	r25, Y+6	; 0x06
    b5d0:	fc 01       	movw	r30, r24
    b5d2:	80 81       	ld	r24, Z
    b5d4:	80 93 2e 40 	sts	0x402E, r24	; 0x80402e <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    b5d8:	8b 81       	ldd	r24, Y+3	; 0x03
    b5da:	9c 81       	ldd	r25, Y+4	; 0x04
    b5dc:	fc 01       	movw	r30, r24
    b5de:	80 81       	ld	r24, Z
    b5e0:	88 23       	and	r24, r24
    b5e2:	21 f1       	breq	.+72     	; 0xb62c <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    b5e4:	8b 81       	ldd	r24, Y+3	; 0x03
    b5e6:	9c 81       	ldd	r25, Y+4	; 0x04
    b5e8:	80 93 72 49 	sts	0x4972, r24	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b5ec:	90 93 73 49 	sts	0x4973, r25	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    b5f0:	80 e2       	ldi	r24, 0x20	; 32
    b5f2:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    b5f6:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b5fa:	90 91 73 49 	lds	r25, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b5fe:	fc 01       	movw	r30, r24
    b600:	80 81       	ld	r24, Z
    b602:	0e 94 76 5c 	call	0xb8ec	; 0xb8ec <_Z12getMorseCharc>
    b606:	a8 2f       	mov	r26, r24
    b608:	cb 01       	movw	r24, r22
    b60a:	80 93 74 49 	sts	0x4974, r24	; 0x804974 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b60e:	90 93 75 49 	sts	0x4975, r25	; 0x804975 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b612:	a0 93 76 49 	sts	0x4976, r26	; 0x804976 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    b616:	10 92 77 49 	sts	0x4977, r1	; 0x804977 <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    b61a:	10 92 78 49 	sts	0x4978, r1	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    b61e:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    b622:	10 92 7a 49 	sts	0x497A, r1	; 0x80497a <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    b626:	10 92 7b 49 	sts	0x497B, r1	; 0x80497b <_ZZ9makeMorsePcPbS0_E15completedString>
    b62a:	10 c0       	rjmp	.+32     	; 0xb64c <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    b62c:	10 92 72 49 	sts	0x4972, r1	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b630:	10 92 73 49 	sts	0x4973, r1	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    b634:	81 e0       	ldi	r24, 0x01	; 1
    b636:	80 93 7b 49 	sts	0x497B, r24	; 0x80497b <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    b63a:	8f 81       	ldd	r24, Y+7	; 0x07
    b63c:	98 85       	ldd	r25, Y+8	; 0x08
    b63e:	89 2b       	or	r24, r25
    b640:	29 f0       	breq	.+10     	; 0xb64c <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    b642:	8f 81       	ldd	r24, Y+7	; 0x07
    b644:	98 85       	ldd	r25, Y+8	; 0x08
    b646:	21 e0       	ldi	r18, 0x01	; 1
    b648:	fc 01       	movw	r30, r24
    b64a:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    b64c:	10 92 7c 49 	sts	0x497C, r1	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    b650:	80 e0       	ldi	r24, 0x00	; 0
    b652:	f6 c0       	rjmp	.+492    	; 0xb840 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    b654:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b658:	90 91 73 49 	lds	r25, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b65c:	89 2b       	or	r24, r25
    b65e:	09 f4       	brne	.+2      	; 0xb662 <_Z9makeMorsePcPbS0_+0xc6>
    b660:	dd c0       	rjmp	.+442    	; 0xb81c <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    b662:	8d 81       	ldd	r24, Y+5	; 0x05
    b664:	9e 81       	ldd	r25, Y+6	; 0x06
    b666:	89 2b       	or	r24, r25
    b668:	31 f0       	breq	.+12     	; 0xb676 <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    b66a:	20 91 2e 40 	lds	r18, 0x402E	; 0x80402e <_ZZ9makeMorsePcPbS0_E6repeat>
    b66e:	8d 81       	ldd	r24, Y+5	; 0x05
    b670:	9e 81       	ldd	r25, Y+6	; 0x06
    b672:	fc 01       	movw	r30, r24
    b674:	20 83       	st	Z, r18
		}

		if(completedString)
    b676:	80 91 7b 49 	lds	r24, 0x497B	; 0x80497b <_ZZ9makeMorsePcPbS0_E15completedString>
    b67a:	88 23       	and	r24, r24
    b67c:	69 f0       	breq	.+26     	; 0xb698 <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    b67e:	8f 81       	ldd	r24, Y+7	; 0x07
    b680:	98 85       	ldd	r25, Y+8	; 0x08
    b682:	89 2b       	or	r24, r25
    b684:	39 f0       	breq	.+14     	; 0xb694 <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    b686:	8f 81       	ldd	r24, Y+7	; 0x07
    b688:	98 85       	ldd	r25, Y+8	; 0x08
    b68a:	21 e0       	ldi	r18, 0x01	; 1
    b68c:	fc 01       	movw	r30, r24
    b68e:	20 83       	st	Z, r18
				holdKeyDown = false;
    b690:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    b694:	80 e0       	ldi	r24, 0x00	; 0
    b696:	d4 c0       	rjmp	.+424    	; 0xb840 <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    b698:	80 91 79 49 	lds	r24, 0x4979	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b69c:	88 23       	and	r24, r24
    b69e:	31 f0       	breq	.+12     	; 0xb6ac <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    b6a0:	80 91 79 49 	lds	r24, 0x4979	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b6a4:	81 50       	subi	r24, 0x01	; 1
    b6a6:	80 93 79 49 	sts	0x4979, r24	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b6aa:	ae c0       	rjmp	.+348    	; 0xb808 <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    b6ac:	80 91 7c 49 	lds	r24, 0x497C	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>
    b6b0:	88 23       	and	r24, r24
    b6b2:	a1 f0       	breq	.+40     	; 0xb6dc <_Z9makeMorsePcPbS0_+0x140>
    b6b4:	90 91 71 49 	lds	r25, 0x4971	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b6b8:	81 e0       	ldi	r24, 0x01	; 1
    b6ba:	89 27       	eor	r24, r25
    b6bc:	88 23       	and	r24, r24
    b6be:	71 f0       	breq	.+28     	; 0xb6dc <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    b6c0:	10 92 7c 49 	sts	0x497C, r1	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b6c4:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b6c8:	88 23       	and	r24, r24
    b6ca:	09 f4       	brne	.+2      	; 0xb6ce <_Z9makeMorsePcPbS0_+0x132>
    b6cc:	9d c0       	rjmp	.+314    	; 0xb808 <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    b6ce:	80 91 7a 49 	lds	r24, 0x497A	; 0x80497a <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b6d2:	80 93 79 49 	sts	0x4979, r24	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    b6d6:	10 92 7a 49 	sts	0x497A, r1	; 0x80497a <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    b6da:	96 c0       	rjmp	.+300    	; 0xb808 <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    b6dc:	90 91 75 49 	lds	r25, 0x4975	; 0x804975 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b6e0:	80 91 78 49 	lds	r24, 0x4978	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b6e4:	89 17       	cp	r24, r25
    b6e6:	08 f4       	brcc	.+2      	; 0xb6ea <_Z9makeMorsePcPbS0_+0x14e>
    b6e8:	4a c0       	rjmp	.+148    	; 0xb77e <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    b6ea:	20 91 72 49 	lds	r18, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b6ee:	30 91 73 49 	lds	r19, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b6f2:	80 91 77 49 	lds	r24, 0x4977	; 0x804977 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b6f6:	8f 5f       	subi	r24, 0xFF	; 255
    b6f8:	80 93 77 49 	sts	0x4977, r24	; 0x804977 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b6fc:	80 91 77 49 	lds	r24, 0x4977	; 0x804977 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b700:	88 2f       	mov	r24, r24
    b702:	90 e0       	ldi	r25, 0x00	; 0
    b704:	82 0f       	add	r24, r18
    b706:	93 1f       	adc	r25, r19
    b708:	fc 01       	movw	r30, r24
    b70a:	80 81       	ld	r24, Z
    b70c:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    b710:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
    b714:	88 23       	and	r24, r24
    b716:	29 f5       	brne	.+74     	; 0xb762 <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    b718:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZZ9makeMorsePcPbS0_E6repeat>
    b71c:	88 23       	and	r24, r24
    b71e:	59 f0       	breq	.+22     	; 0xb736 <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    b720:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b724:	90 91 73 49 	lds	r25, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
    b728:	fc 01       	movw	r30, r24
    b72a:	80 81       	ld	r24, Z
    b72c:	80 93 2f 40 	sts	0x402F, r24	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    b730:	10 92 77 49 	sts	0x4977, r1	; 0x804977 <_ZZ9makeMorsePcPbS0_E9charIndex>
    b734:	16 c0       	rjmp	.+44     	; 0xb762 <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    b736:	10 92 72 49 	sts	0x4972, r1	; 0x804972 <_ZZ9makeMorsePcPbS0_E3str>
    b73a:	10 92 73 49 	sts	0x4973, r1	; 0x804973 <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    b73e:	10 92 7c 49 	sts	0x497C, r1	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    b742:	81 e0       	ldi	r24, 0x01	; 1
    b744:	80 93 7b 49 	sts	0x497B, r24	; 0x80497b <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    b748:	8f 81       	ldd	r24, Y+7	; 0x07
    b74a:	98 85       	ldd	r25, Y+8	; 0x08
    b74c:	89 2b       	or	r24, r25
    b74e:	29 f0       	breq	.+10     	; 0xb75a <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    b750:	8f 81       	ldd	r24, Y+7	; 0x07
    b752:	98 85       	ldd	r25, Y+8	; 0x08
    b754:	21 e0       	ldi	r18, 0x01	; 1
    b756:	fc 01       	movw	r30, r24
    b758:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    b75a:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    b75e:	80 e0       	ldi	r24, 0x00	; 0
    b760:	6f c0       	rjmp	.+222    	; 0xb840 <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    b762:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
    b766:	0e 94 76 5c 	call	0xb8ec	; 0xb8ec <_Z12getMorseCharc>
    b76a:	a8 2f       	mov	r26, r24
    b76c:	cb 01       	movw	r24, r22
    b76e:	80 93 74 49 	sts	0x4974, r24	; 0x804974 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b772:	90 93 75 49 	sts	0x4975, r25	; 0x804975 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b776:	a0 93 76 49 	sts	0x4976, r26	; 0x804976 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    b77a:	10 92 78 49 	sts	0x4978, r1	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    b77e:	80 91 74 49 	lds	r24, 0x4974	; 0x804974 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b782:	8d 3f       	cpi	r24, 0xFD	; 253
    b784:	70 f5       	brcc	.+92     	; 0xb7e2 <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    b786:	80 91 74 49 	lds	r24, 0x4974	; 0x804974 <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    b78a:	88 2f       	mov	r24, r24
    b78c:	90 e0       	ldi	r25, 0x00	; 0
    b78e:	20 91 78 49 	lds	r18, 0x4978	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b792:	31 e0       	ldi	r19, 0x01	; 1
    b794:	32 0f       	add	r19, r18
    b796:	30 93 78 49 	sts	0x4978, r19	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b79a:	22 2f       	mov	r18, r18
    b79c:	30 e0       	ldi	r19, 0x00	; 0
    b79e:	02 c0       	rjmp	.+4      	; 0xb7a4 <_Z9makeMorsePcPbS0_+0x208>
    b7a0:	95 95       	asr	r25
    b7a2:	87 95       	ror	r24
    b7a4:	2a 95       	dec	r18
    b7a6:	e2 f7       	brpl	.-8      	; 0xb7a0 <_Z9makeMorsePcPbS0_+0x204>
    b7a8:	81 70       	andi	r24, 0x01	; 1
    b7aa:	99 27       	eor	r25, r25
    b7ac:	21 e0       	ldi	r18, 0x01	; 1
    b7ae:	89 2b       	or	r24, r25
    b7b0:	09 f4       	brne	.+2      	; 0xb7b4 <_Z9makeMorsePcPbS0_+0x218>
    b7b2:	20 e0       	ldi	r18, 0x00	; 0
    b7b4:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    b7b6:	89 81       	ldd	r24, Y+1	; 0x01
    b7b8:	88 23       	and	r24, r24
    b7ba:	21 f0       	breq	.+8      	; 0xb7c4 <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    b7bc:	82 e0       	ldi	r24, 0x02	; 2
    b7be:	80 93 79 49 	sts	0x4979, r24	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b7c2:	02 c0       	rjmp	.+4      	; 0xb7c8 <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    b7c4:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    b7c8:	81 e0       	ldi	r24, 0x01	; 1
    b7ca:	80 93 7c 49 	sts	0x497C, r24	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    b7ce:	90 91 75 49 	lds	r25, 0x4975	; 0x804975 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b7d2:	80 91 78 49 	lds	r24, 0x4978	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    b7d6:	89 17       	cp	r24, r25
    b7d8:	b8 f0       	brcs	.+46     	; 0xb808 <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    b7da:	82 e0       	ldi	r24, 0x02	; 2
    b7dc:	80 93 7a 49 	sts	0x497A, r24	; 0x80497a <_ZZ9makeMorsePcPbS0_E10addedSpace>
    b7e0:	13 c0       	rjmp	.+38     	; 0xb808 <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    b7e2:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b7e6:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    b7e8:	8f ef       	ldi	r24, 0xFF	; 255
    b7ea:	80 93 78 49 	sts	0x4978, r24	; 0x804978 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    b7ee:	10 92 7c 49 	sts	0x497C, r1	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    b7f2:	8a 81       	ldd	r24, Y+2	; 0x02
    b7f4:	84 30       	cpi	r24, 0x04	; 4
    b7f6:	30 f0       	brcs	.+12     	; 0xb804 <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    b7f8:	80 91 75 49 	lds	r24, 0x4975	; 0x804975 <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    b7fc:	84 50       	subi	r24, 0x04	; 4
    b7fe:	80 93 79 49 	sts	0x4979, r24	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    b802:	02 c0       	rjmp	.+4      	; 0xb808 <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    b804:	10 92 79 49 	sts	0x4979, r1	; 0x804979 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    b808:	80 91 2f 40 	lds	r24, 0x402F	; 0x80402f <_ZZ9makeMorsePcPbS0_E1c>
    b80c:	8c 33       	cpi	r24, 0x3C	; 60
    b80e:	21 f4       	brne	.+8      	; 0xb818 <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    b810:	81 e0       	ldi	r24, 0x01	; 1
    b812:	80 93 71 49 	sts	0x4971, r24	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b816:	02 c0       	rjmp	.+4      	; 0xb81c <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    b818:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    b81c:	8f 81       	ldd	r24, Y+7	; 0x07
    b81e:	98 85       	ldd	r25, Y+8	; 0x08
    b820:	89 2b       	or	r24, r25
    b822:	31 f0       	breq	.+12     	; 0xb830 <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    b824:	20 91 7b 49 	lds	r18, 0x497B	; 0x80497b <_ZZ9makeMorsePcPbS0_E15completedString>
    b828:	8f 81       	ldd	r24, Y+7	; 0x07
    b82a:	98 85       	ldd	r25, Y+8	; 0x08
    b82c:	fc 01       	movw	r30, r24
    b82e:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    b830:	80 91 71 49 	lds	r24, 0x4971	; 0x804971 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    b834:	88 23       	and	r24, r24
    b836:	11 f0       	breq	.+4      	; 0xb83c <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    b838:	81 e0       	ldi	r24, 0x01	; 1
    b83a:	02 c0       	rjmp	.+4      	; 0xb840 <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    b83c:	80 91 7c 49 	lds	r24, 0x497C	; 0x80497c <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    b840:	28 96       	adiw	r28, 0x08	; 8
    b842:	cd bf       	out	0x3d, r28	; 61
    b844:	de bf       	out	0x3e, r29	; 62
    b846:	df 91       	pop	r29
    b848:	cf 91       	pop	r28
    b84a:	08 95       	ret

0000b84c <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    b84c:	cf 93       	push	r28
    b84e:	df 93       	push	r29
    b850:	cd b7       	in	r28, 0x3d	; 61
    b852:	de b7       	in	r29, 0x3e	; 62
    b854:	2b 97       	sbiw	r28, 0x0b	; 11
    b856:	cd bf       	out	0x3d, r28	; 61
    b858:	de bf       	out	0x3e, r29	; 62
    b85a:	88 87       	std	Y+8, r24	; 0x08
    b85c:	99 87       	std	Y+9, r25	; 0x09
    b85e:	6a 87       	std	Y+10, r22	; 0x0a
    b860:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    b862:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b864:	1a 82       	std	Y+2, r1	; 0x02
    b866:	1b 82       	std	Y+3, r1	; 0x03
    b868:	8a 81       	ldd	r24, Y+2	; 0x02
    b86a:	9b 81       	ldd	r25, Y+3	; 0x03
    b86c:	44 97       	sbiw	r24, 0x14	; 20
    b86e:	2c f5       	brge	.+74     	; 0xb8ba <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    b870:	8a 81       	ldd	r24, Y+2	; 0x02
    b872:	9b 81       	ldd	r25, Y+3	; 0x03
    b874:	28 85       	ldd	r18, Y+8	; 0x08
    b876:	39 85       	ldd	r19, Y+9	; 0x09
    b878:	82 0f       	add	r24, r18
    b87a:	93 1f       	adc	r25, r19
    b87c:	fc 01       	movw	r30, r24
    b87e:	80 81       	ld	r24, Z
    b880:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    b882:	8c 81       	ldd	r24, Y+4	; 0x04
    b884:	88 23       	and	r24, r24
    b886:	c1 f0       	breq	.+48     	; 0xb8b8 <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    b888:	8c 81       	ldd	r24, Y+4	; 0x04
    b88a:	0e 94 76 5c 	call	0xb8ec	; 0xb8ec <_Z12getMorseCharc>
    b88e:	a8 2f       	mov	r26, r24
    b890:	cb 01       	movw	r24, r22
    b892:	8d 83       	std	Y+5, r24	; 0x05
    b894:	9e 83       	std	Y+6, r25	; 0x06
    b896:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    b898:	8d 81       	ldd	r24, Y+5	; 0x05
    b89a:	8d 3f       	cpi	r24, 0xFD	; 253
    b89c:	18 f4       	brcc	.+6      	; 0xb8a4 <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    b89e:	89 81       	ldd	r24, Y+1	; 0x01
    b8a0:	8d 5f       	subi	r24, 0xFD	; 253
    b8a2:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    b8a4:	8f 81       	ldd	r24, Y+7	; 0x07
    b8a6:	99 81       	ldd	r25, Y+1	; 0x01
    b8a8:	89 0f       	add	r24, r25
    b8aa:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b8ac:	8a 81       	ldd	r24, Y+2	; 0x02
    b8ae:	9b 81       	ldd	r25, Y+3	; 0x03
    b8b0:	01 96       	adiw	r24, 0x01	; 1
    b8b2:	8a 83       	std	Y+2, r24	; 0x02
    b8b4:	9b 83       	std	Y+3, r25	; 0x03
    b8b6:	d8 cf       	rjmp	.-80     	; 0xb868 <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    b8b8:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    b8ba:	89 81       	ldd	r24, Y+1	; 0x01
    b8bc:	28 2f       	mov	r18, r24
    b8be:	30 e0       	ldi	r19, 0x00	; 0
    b8c0:	80 eb       	ldi	r24, 0xB0	; 176
    b8c2:	94 e0       	ldi	r25, 0x04	; 4
    b8c4:	4a 85       	ldd	r20, Y+10	; 0x0a
    b8c6:	5b 85       	ldd	r21, Y+11	; 0x0b
    b8c8:	ba 01       	movw	r22, r20
    b8ca:	0e 94 c4 79 	call	0xf388	; 0xf388 <__udivmodhi4>
    b8ce:	cb 01       	movw	r24, r22
    b8d0:	ac 01       	movw	r20, r24
    b8d2:	24 9f       	mul	r18, r20
    b8d4:	c0 01       	movw	r24, r0
    b8d6:	25 9f       	mul	r18, r21
    b8d8:	90 0d       	add	r25, r0
    b8da:	34 9f       	mul	r19, r20
    b8dc:	90 0d       	add	r25, r0
    b8de:	11 24       	eor	r1, r1
}
    b8e0:	2b 96       	adiw	r28, 0x0b	; 11
    b8e2:	cd bf       	out	0x3d, r28	; 61
    b8e4:	de bf       	out	0x3e, r29	; 62
    b8e6:	df 91       	pop	r29
    b8e8:	cf 91       	pop	r28
    b8ea:	08 95       	ret

0000b8ec <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    b8ec:	cf 93       	push	r28
    b8ee:	df 93       	push	r29
    b8f0:	00 d0       	rcall	.+0      	; 0xb8f2 <_Z12getMorseCharc+0x6>
    b8f2:	00 d0       	rcall	.+0      	; 0xb8f4 <_Z12getMorseCharc+0x8>
    b8f4:	cd b7       	in	r28, 0x3d	; 61
    b8f6:	de b7       	in	r29, 0x3e	; 62
    b8f8:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    b8fa:	8c 81       	ldd	r24, Y+4	; 0x04
    b8fc:	88 2f       	mov	r24, r24
    b8fe:	90 e0       	ldi	r25, 0x00	; 0
    b900:	09 2e       	mov	r0, r25
    b902:	00 0c       	add	r0, r0
    b904:	aa 0b       	sbc	r26, r26
    b906:	bb 0b       	sbc	r27, r27
    b908:	40 e2       	ldi	r20, 0x20	; 32
    b90a:	50 e0       	ldi	r21, 0x00	; 0
    b90c:	2c e5       	ldi	r18, 0x5C	; 92
    b90e:	30 e0       	ldi	r19, 0x00	; 0
    b910:	84 1b       	sub	r24, r20
    b912:	95 0b       	sbc	r25, r21
    b914:	28 17       	cp	r18, r24
    b916:	39 07       	cpc	r19, r25
    b918:	08 f4       	brcc	.+2      	; 0xb91c <_Z12getMorseCharc+0x30>
    b91a:	8f c1       	rjmp	.+798    	; 0xbc3a <_Z12getMorseCharc+0x34e>
    b91c:	8c 51       	subi	r24, 0x1C	; 28
    b91e:	9f 4f       	sbci	r25, 0xFF	; 255
    b920:	fc 01       	movw	r30, r24
    b922:	0c 94 2d 7a 	jmp	0xf45a	; 0xf45a <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b926:	82 e0       	ldi	r24, 0x02	; 2
    b928:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b92a:	82 e0       	ldi	r24, 0x02	; 2
    b92c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b92e:	85 e0       	ldi	r24, 0x05	; 5
    b930:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b932:	87 c1       	rjmp	.+782    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b934:	81 e0       	ldi	r24, 0x01	; 1
    b936:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b938:	84 e0       	ldi	r24, 0x04	; 4
    b93a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b93c:	89 e0       	ldi	r24, 0x09	; 9
    b93e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b940:	80 c1       	rjmp	.+768    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    b942:	85 e0       	ldi	r24, 0x05	; 5
    b944:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b946:	84 e0       	ldi	r24, 0x04	; 4
    b948:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b94a:	8b e0       	ldi	r24, 0x0B	; 11
    b94c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b94e:	79 c1       	rjmp	.+754    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b950:	81 e0       	ldi	r24, 0x01	; 1
    b952:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b954:	83 e0       	ldi	r24, 0x03	; 3
    b956:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b958:	87 e0       	ldi	r24, 0x07	; 7
    b95a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b95c:	72 c1       	rjmp	.+740    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b95e:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    b960:	81 e0       	ldi	r24, 0x01	; 1
    b962:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    b964:	81 e0       	ldi	r24, 0x01	; 1
    b966:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b968:	6c c1       	rjmp	.+728    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    b96a:	84 e0       	ldi	r24, 0x04	; 4
    b96c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b96e:	84 e0       	ldi	r24, 0x04	; 4
    b970:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b972:	89 e0       	ldi	r24, 0x09	; 9
    b974:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b976:	65 c1       	rjmp	.+714    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b978:	83 e0       	ldi	r24, 0x03	; 3
    b97a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b97c:	83 e0       	ldi	r24, 0x03	; 3
    b97e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b980:	89 e0       	ldi	r24, 0x09	; 9
    b982:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b984:	5e c1       	rjmp	.+700    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b986:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    b988:	84 e0       	ldi	r24, 0x04	; 4
    b98a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b98c:	87 e0       	ldi	r24, 0x07	; 7
    b98e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b990:	58 c1       	rjmp	.+688    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b992:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    b994:	82 e0       	ldi	r24, 0x02	; 2
    b996:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    b998:	83 e0       	ldi	r24, 0x03	; 3
    b99a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b99c:	52 c1       	rjmp	.+676    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    b99e:	8e e0       	ldi	r24, 0x0E	; 14
    b9a0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b9a2:	84 e0       	ldi	r24, 0x04	; 4
    b9a4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b9a6:	8d e0       	ldi	r24, 0x0D	; 13
    b9a8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9aa:	4b c1       	rjmp	.+662    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    b9ac:	85 e0       	ldi	r24, 0x05	; 5
    b9ae:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b9b0:	83 e0       	ldi	r24, 0x03	; 3
    b9b2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b9b4:	89 e0       	ldi	r24, 0x09	; 9
    b9b6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9b8:	44 c1       	rjmp	.+648    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b9ba:	82 e0       	ldi	r24, 0x02	; 2
    b9bc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b9be:	84 e0       	ldi	r24, 0x04	; 4
    b9c0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b9c2:	89 e0       	ldi	r24, 0x09	; 9
    b9c4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9c6:	3d c1       	rjmp	.+634    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b9c8:	83 e0       	ldi	r24, 0x03	; 3
    b9ca:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b9cc:	82 e0       	ldi	r24, 0x02	; 2
    b9ce:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b9d0:	87 e0       	ldi	r24, 0x07	; 7
    b9d2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9d4:	36 c1       	rjmp	.+620    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b9d6:	81 e0       	ldi	r24, 0x01	; 1
    b9d8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b9da:	82 e0       	ldi	r24, 0x02	; 2
    b9dc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b9de:	85 e0       	ldi	r24, 0x05	; 5
    b9e0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9e2:	2f c1       	rjmp	.+606    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b9e4:	87 e0       	ldi	r24, 0x07	; 7
    b9e6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b9e8:	83 e0       	ldi	r24, 0x03	; 3
    b9ea:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b9ec:	8b e0       	ldi	r24, 0x0B	; 11
    b9ee:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9f0:	28 c1       	rjmp	.+592    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    b9f2:	86 e0       	ldi	r24, 0x06	; 6
    b9f4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b9f6:	84 e0       	ldi	r24, 0x04	; 4
    b9f8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b9fa:	8b e0       	ldi	r24, 0x0B	; 11
    b9fc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b9fe:	21 c1       	rjmp	.+578    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    ba00:	8b e0       	ldi	r24, 0x0B	; 11
    ba02:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba04:	84 e0       	ldi	r24, 0x04	; 4
    ba06:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ba08:	8d e0       	ldi	r24, 0x0D	; 13
    ba0a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba0c:	1a c1       	rjmp	.+564    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    ba0e:	82 e0       	ldi	r24, 0x02	; 2
    ba10:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    ba12:	83 e0       	ldi	r24, 0x03	; 3
    ba14:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    ba16:	87 e0       	ldi	r24, 0x07	; 7
    ba18:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba1a:	13 c1       	rjmp	.+550    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    ba1c:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    ba1e:	83 e0       	ldi	r24, 0x03	; 3
    ba20:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    ba22:	85 e0       	ldi	r24, 0x05	; 5
    ba24:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba26:	0d c1       	rjmp	.+538    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    ba28:	81 e0       	ldi	r24, 0x01	; 1
    ba2a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    ba2c:	81 e0       	ldi	r24, 0x01	; 1
    ba2e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    ba30:	83 e0       	ldi	r24, 0x03	; 3
    ba32:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba34:	06 c1       	rjmp	.+524    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    ba36:	84 e0       	ldi	r24, 0x04	; 4
    ba38:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    ba3a:	83 e0       	ldi	r24, 0x03	; 3
    ba3c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    ba3e:	87 e0       	ldi	r24, 0x07	; 7
    ba40:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba42:	ff c0       	rjmp	.+510    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    ba44:	88 e0       	ldi	r24, 0x08	; 8
    ba46:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba48:	84 e0       	ldi	r24, 0x04	; 4
    ba4a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    ba4c:	89 e0       	ldi	r24, 0x09	; 9
    ba4e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba50:	f8 c0       	rjmp	.+496    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    ba52:	86 e0       	ldi	r24, 0x06	; 6
    ba54:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    ba56:	83 e0       	ldi	r24, 0x03	; 3
    ba58:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    ba5a:	89 e0       	ldi	r24, 0x09	; 9
    ba5c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba5e:	f1 c0       	rjmp	.+482    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    ba60:	89 e0       	ldi	r24, 0x09	; 9
    ba62:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba64:	84 e0       	ldi	r24, 0x04	; 4
    ba66:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    ba68:	8b e0       	ldi	r24, 0x0B	; 11
    ba6a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba6c:	ea c0       	rjmp	.+468    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    ba6e:	8d e0       	ldi	r24, 0x0D	; 13
    ba70:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba72:	84 e0       	ldi	r24, 0x04	; 4
    ba74:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    ba76:	8d e0       	ldi	r24, 0x0D	; 13
    ba78:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba7a:	e3 c0       	rjmp	.+454    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    ba7c:	83 e0       	ldi	r24, 0x03	; 3
    ba7e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    ba80:	84 e0       	ldi	r24, 0x04	; 4
    ba82:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    ba84:	8b e0       	ldi	r24, 0x0B	; 11
    ba86:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba88:	dc c0       	rjmp	.+440    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    ba8a:	8f e1       	ldi	r24, 0x1F	; 31
    ba8c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ba8e:	85 e0       	ldi	r24, 0x05	; 5
    ba90:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    ba92:	83 e1       	ldi	r24, 0x13	; 19
    ba94:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    ba96:	d5 c0       	rjmp	.+426    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    ba98:	8e e1       	ldi	r24, 0x1E	; 30
    ba9a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    ba9c:	85 e0       	ldi	r24, 0x05	; 5
    ba9e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    baa0:	81 e1       	ldi	r24, 0x11	; 17
    baa2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    baa4:	ce c0       	rjmp	.+412    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    baa6:	8c e1       	ldi	r24, 0x1C	; 28
    baa8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    baaa:	85 e0       	ldi	r24, 0x05	; 5
    baac:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    baae:	8f e0       	ldi	r24, 0x0F	; 15
    bab0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bab2:	c7 c0       	rjmp	.+398    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    bab4:	88 e1       	ldi	r24, 0x18	; 24
    bab6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bab8:	85 e0       	ldi	r24, 0x05	; 5
    baba:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    babc:	8d e0       	ldi	r24, 0x0D	; 13
    babe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bac0:	c0 c0       	rjmp	.+384    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    bac2:	80 e1       	ldi	r24, 0x10	; 16
    bac4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bac6:	85 e0       	ldi	r24, 0x05	; 5
    bac8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    baca:	8b e0       	ldi	r24, 0x0B	; 11
    bacc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bace:	b9 c0       	rjmp	.+370    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    bad0:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    bad2:	85 e0       	ldi	r24, 0x05	; 5
    bad4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    bad6:	89 e0       	ldi	r24, 0x09	; 9
    bad8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bada:	b3 c0       	rjmp	.+358    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    badc:	81 e0       	ldi	r24, 0x01	; 1
    bade:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bae0:	85 e0       	ldi	r24, 0x05	; 5
    bae2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bae4:	8b e0       	ldi	r24, 0x0B	; 11
    bae6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bae8:	ac c0       	rjmp	.+344    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    baea:	83 e0       	ldi	r24, 0x03	; 3
    baec:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    baee:	85 e0       	ldi	r24, 0x05	; 5
    baf0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    baf2:	8d e0       	ldi	r24, 0x0D	; 13
    baf4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    baf6:	a5 c0       	rjmp	.+330    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    baf8:	87 e0       	ldi	r24, 0x07	; 7
    bafa:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bafc:	85 e0       	ldi	r24, 0x05	; 5
    bafe:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bb00:	8f e0       	ldi	r24, 0x0F	; 15
    bb02:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb04:	9e c0       	rjmp	.+316    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    bb06:	8f e0       	ldi	r24, 0x0F	; 15
    bb08:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb0a:	85 e0       	ldi	r24, 0x05	; 5
    bb0c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bb0e:	81 e1       	ldi	r24, 0x11	; 17
    bb10:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb12:	97 c0       	rjmp	.+302    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    bb14:	8a e2       	ldi	r24, 0x2A	; 42
    bb16:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb18:	86 e0       	ldi	r24, 0x06	; 6
    bb1a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bb1c:	81 e1       	ldi	r24, 0x11	; 17
    bb1e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb20:	90 c0       	rjmp	.+288    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    bb22:	83 e3       	ldi	r24, 0x33	; 51
    bb24:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb26:	86 e0       	ldi	r24, 0x06	; 6
    bb28:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bb2a:	83 e1       	ldi	r24, 0x13	; 19
    bb2c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb2e:	89 c0       	rjmp	.+274    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    bb30:	8c e0       	ldi	r24, 0x0C	; 12
    bb32:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb34:	86 e0       	ldi	r24, 0x06	; 6
    bb36:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bb38:	8f e0       	ldi	r24, 0x0F	; 15
    bb3a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb3c:	82 c0       	rjmp	.+260    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    bb3e:	8e e1       	ldi	r24, 0x1E	; 30
    bb40:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb42:	86 e0       	ldi	r24, 0x06	; 6
    bb44:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bb46:	83 e1       	ldi	r24, 0x13	; 19
    bb48:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb4a:	7b c0       	rjmp	.+246    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    bb4c:	85 e3       	ldi	r24, 0x35	; 53
    bb4e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb50:	86 e0       	ldi	r24, 0x06	; 6
    bb52:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bb54:	83 e1       	ldi	r24, 0x13	; 19
    bb56:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb58:	74 c0       	rjmp	.+232    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    bb5a:	89 e0       	ldi	r24, 0x09	; 9
    bb5c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb5e:	85 e0       	ldi	r24, 0x05	; 5
    bb60:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bb62:	8d e0       	ldi	r24, 0x0D	; 13
    bb64:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb66:	6d c0       	rjmp	.+218    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    bb68:	8d e0       	ldi	r24, 0x0D	; 13
    bb6a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb6c:	85 e0       	ldi	r24, 0x05	; 5
    bb6e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bb70:	8f e0       	ldi	r24, 0x0F	; 15
    bb72:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb74:	66 c0       	rjmp	.+204    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    bb76:	8d e2       	ldi	r24, 0x2D	; 45
    bb78:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb7a:	86 e0       	ldi	r24, 0x06	; 6
    bb7c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bb7e:	83 e1       	ldi	r24, 0x13	; 19
    bb80:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb82:	5f c0       	rjmp	.+190    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    bb84:	82 e0       	ldi	r24, 0x02	; 2
    bb86:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bb88:	85 e0       	ldi	r24, 0x05	; 5
    bb8a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    bb8c:	8b e0       	ldi	r24, 0x0B	; 11
    bb8e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb90:	58 c0       	rjmp	.+176    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    bb92:	87 e0       	ldi	r24, 0x07	; 7
    bb94:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bb96:	86 e0       	ldi	r24, 0x06	; 6
    bb98:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bb9a:	81 e1       	ldi	r24, 0x11	; 17
    bb9c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bb9e:	51 c0       	rjmp	.+162    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    bba0:	85 e1       	ldi	r24, 0x15	; 21
    bba2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bba4:	86 e0       	ldi	r24, 0x06	; 6
    bba6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    bba8:	8c e0       	ldi	r24, 0x0C	; 12
    bbaa:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbac:	4a c0       	rjmp	.+148    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    bbae:	81 e1       	ldi	r24, 0x11	; 17
    bbb0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbb2:	85 e0       	ldi	r24, 0x05	; 5
    bbb4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bbb6:	8d e0       	ldi	r24, 0x0D	; 13
    bbb8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbba:	43 c0       	rjmp	.+134    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    bbbc:	8a e0       	ldi	r24, 0x0A	; 10
    bbbe:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bbc0:	85 e0       	ldi	r24, 0x05	; 5
    bbc2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    bbc4:	8d e0       	ldi	r24, 0x0D	; 13
    bbc6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbc8:	3c c0       	rjmp	.+120    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    bbca:	81 e2       	ldi	r24, 0x21	; 33
    bbcc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bbce:	86 e0       	ldi	r24, 0x06	; 6
    bbd0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bbd2:	8f e0       	ldi	r24, 0x0F	; 15
    bbd4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbd6:	35 c0       	rjmp	.+106    	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    bbd8:	8c e2       	ldi	r24, 0x2C	; 44
    bbda:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bbdc:	86 e0       	ldi	r24, 0x06	; 6
    bbde:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bbe0:	81 e1       	ldi	r24, 0x11	; 17
    bbe2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbe4:	2e c0       	rjmp	.+92     	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    bbe6:	82 e1       	ldi	r24, 0x12	; 18
    bbe8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bbea:	86 e0       	ldi	r24, 0x06	; 6
    bbec:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    bbee:	8f e0       	ldi	r24, 0x0F	; 15
    bbf0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bbf2:	27 c0       	rjmp	.+78     	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    bbf4:	88 e4       	ldi	r24, 0x48	; 72
    bbf6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    bbf8:	87 e0       	ldi	r24, 0x07	; 7
    bbfa:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bbfc:	81 e1       	ldi	r24, 0x11	; 17
    bbfe:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc00:	20 c0       	rjmp	.+64     	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    bc02:	86 e1       	ldi	r24, 0x16	; 22
    bc04:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    bc06:	86 e0       	ldi	r24, 0x06	; 6
    bc08:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    bc0a:	81 e1       	ldi	r24, 0x11	; 17
    bc0c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc0e:	19 c0       	rjmp	.+50     	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    bc10:	8f ef       	ldi	r24, 0xFF	; 255
    bc12:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    bc14:	87 e0       	ldi	r24, 0x07	; 7
    bc16:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    bc18:	84 e0       	ldi	r24, 0x04	; 4
    bc1a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc1c:	12 c0       	rjmp	.+36     	; 0xbc42 <_Z12getMorseCharc+0x356>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    bc1e:	8e ef       	ldi	r24, 0xFE	; 254
    bc20:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    bc22:	87 e0       	ldi	r24, 0x07	; 7
    bc24:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    bc26:	87 e0       	ldi	r24, 0x07	; 7
    bc28:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc2a:	0b c0       	rjmp	.+22     	; 0xbc42 <_Z12getMorseCharc+0x356>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    bc2c:	8f e1       	ldi	r24, 0x1F	; 31
    bc2e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    bc30:	85 e0       	ldi	r24, 0x05	; 5
    bc32:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    bc34:	83 e1       	ldi	r24, 0x13	; 19
    bc36:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    bc38:	04 c0       	rjmp	.+8      	; 0xbc42 <_Z12getMorseCharc+0x356>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    bc3a:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    bc3c:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    bc3e:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    bc40:	00 00       	nop
	}

	return( morse);
    bc42:	89 81       	ldd	r24, Y+1	; 0x01
    bc44:	9a 81       	ldd	r25, Y+2	; 0x02
    bc46:	ab 81       	ldd	r26, Y+3	; 0x03
}
    bc48:	bc 01       	movw	r22, r24
    bc4a:	8a 2f       	mov	r24, r26
    bc4c:	24 96       	adiw	r28, 0x04	; 4
    bc4e:	cd bf       	out	0x3d, r28	; 61
    bc50:	de bf       	out	0x3e, r29	; 62
    bc52:	df 91       	pop	r29
    bc54:	cf 91       	pop	r28
    bc56:	08 95       	ret

0000bc58 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    bc58:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    bc5a:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    bc5c:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    bc5e:	40 83       	st	Z, r20
	ret                             // Return to caller
    bc60:	08 95       	ret

0000bc62 <PORTC_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    bc62:	cf 93       	push	r28
    bc64:	df 93       	push	r29
    bc66:	00 d0       	rcall	.+0      	; 0xbc68 <PORTC_set_pin_pull_mode+0x6>
    bc68:	00 d0       	rcall	.+0      	; 0xbc6a <PORTC_set_pin_pull_mode+0x8>
    bc6a:	cd b7       	in	r28, 0x3d	; 61
    bc6c:	de b7       	in	r29, 0x3e	; 62
    bc6e:	8b 83       	std	Y+3, r24	; 0x03
    bc70:	6c 83       	std	Y+4, r22	; 0x04
    bc72:	8b 81       	ldd	r24, Y+3	; 0x03
    bc74:	88 2f       	mov	r24, r24
    bc76:	90 e0       	ldi	r25, 0x00	; 0
    bc78:	80 5b       	subi	r24, 0xB0	; 176
    bc7a:	9b 4f       	sbci	r25, 0xFB	; 251
    bc7c:	89 83       	std	Y+1, r24	; 0x01
    bc7e:	9a 83       	std	Y+2, r25	; 0x02
    bc80:	8c 81       	ldd	r24, Y+4	; 0x04
    bc82:	81 30       	cpi	r24, 0x01	; 1
    bc84:	59 f4       	brne	.+22     	; 0xbc9c <PORTC_set_pin_pull_mode+0x3a>
    bc86:	89 81       	ldd	r24, Y+1	; 0x01
    bc88:	9a 81       	ldd	r25, Y+2	; 0x02
    bc8a:	fc 01       	movw	r30, r24
    bc8c:	80 81       	ld	r24, Z
    bc8e:	28 2f       	mov	r18, r24
    bc90:	28 60       	ori	r18, 0x08	; 8
    bc92:	89 81       	ldd	r24, Y+1	; 0x01
    bc94:	9a 81       	ldd	r25, Y+2	; 0x02
    bc96:	fc 01       	movw	r30, r24
    bc98:	20 83       	st	Z, r18
    bc9a:	0d c0       	rjmp	.+26     	; 0xbcb6 <PORTC_set_pin_pull_mode+0x54>
    bc9c:	8c 81       	ldd	r24, Y+4	; 0x04
    bc9e:	88 23       	and	r24, r24
    bca0:	51 f4       	brne	.+20     	; 0xbcb6 <PORTC_set_pin_pull_mode+0x54>
    bca2:	89 81       	ldd	r24, Y+1	; 0x01
    bca4:	9a 81       	ldd	r25, Y+2	; 0x02
    bca6:	fc 01       	movw	r30, r24
    bca8:	80 81       	ld	r24, Z
    bcaa:	28 2f       	mov	r18, r24
    bcac:	27 7f       	andi	r18, 0xF7	; 247
    bcae:	89 81       	ldd	r24, Y+1	; 0x01
    bcb0:	9a 81       	ldd	r25, Y+2	; 0x02
    bcb2:	fc 01       	movw	r30, r24
    bcb4:	20 83       	st	Z, r18
    bcb6:	00 00       	nop
    bcb8:	24 96       	adiw	r28, 0x04	; 4
    bcba:	cd bf       	out	0x3d, r28	; 61
    bcbc:	de bf       	out	0x3e, r29	; 62
    bcbe:	df 91       	pop	r29
    bcc0:	cf 91       	pop	r28
    bcc2:	08 95       	ret

0000bcc4 <PORTC_set_pin_dir>:
    bcc4:	cf 93       	push	r28
    bcc6:	df 93       	push	r29
    bcc8:	00 d0       	rcall	.+0      	; 0xbcca <PORTC_set_pin_dir+0x6>
    bcca:	cd b7       	in	r28, 0x3d	; 61
    bccc:	de b7       	in	r29, 0x3e	; 62
    bcce:	89 83       	std	Y+1, r24	; 0x01
    bcd0:	6a 83       	std	Y+2, r22	; 0x02
    bcd2:	8a 81       	ldd	r24, Y+2	; 0x02
    bcd4:	88 2f       	mov	r24, r24
    bcd6:	90 e0       	ldi	r25, 0x00	; 0
    bcd8:	81 30       	cpi	r24, 0x01	; 1
    bcda:	91 05       	cpc	r25, r1
    bcdc:	e1 f0       	breq	.+56     	; 0xbd16 <PORTC_set_pin_dir+0x52>
    bcde:	82 30       	cpi	r24, 0x02	; 2
    bce0:	91 05       	cpc	r25, r1
    bce2:	71 f1       	breq	.+92     	; 0xbd40 <PORTC_set_pin_dir+0x7c>
    bce4:	89 2b       	or	r24, r25
    bce6:	09 f0       	breq	.+2      	; 0xbcea <PORTC_set_pin_dir+0x26>
    bce8:	3b c0       	rjmp	.+118    	; 0xbd60 <PORTC_set_pin_dir+0x9c>
    bcea:	88 e0       	ldi	r24, 0x08	; 8
    bcec:	90 e0       	ldi	r25, 0x00	; 0
    bcee:	28 e0       	ldi	r18, 0x08	; 8
    bcf0:	30 e0       	ldi	r19, 0x00	; 0
    bcf2:	f9 01       	movw	r30, r18
    bcf4:	20 81       	ld	r18, Z
    bcf6:	62 2f       	mov	r22, r18
    bcf8:	29 81       	ldd	r18, Y+1	; 0x01
    bcfa:	42 2f       	mov	r20, r18
    bcfc:	50 e0       	ldi	r21, 0x00	; 0
    bcfe:	21 e0       	ldi	r18, 0x01	; 1
    bd00:	30 e0       	ldi	r19, 0x00	; 0
    bd02:	02 c0       	rjmp	.+4      	; 0xbd08 <PORTC_set_pin_dir+0x44>
    bd04:	22 0f       	add	r18, r18
    bd06:	33 1f       	adc	r19, r19
    bd08:	4a 95       	dec	r20
    bd0a:	e2 f7       	brpl	.-8      	; 0xbd04 <PORTC_set_pin_dir+0x40>
    bd0c:	20 95       	com	r18
    bd0e:	26 23       	and	r18, r22
    bd10:	fc 01       	movw	r30, r24
    bd12:	20 83       	st	Z, r18
    bd14:	25 c0       	rjmp	.+74     	; 0xbd60 <PORTC_set_pin_dir+0x9c>
    bd16:	88 e0       	ldi	r24, 0x08	; 8
    bd18:	90 e0       	ldi	r25, 0x00	; 0
    bd1a:	28 e0       	ldi	r18, 0x08	; 8
    bd1c:	30 e0       	ldi	r19, 0x00	; 0
    bd1e:	f9 01       	movw	r30, r18
    bd20:	20 81       	ld	r18, Z
    bd22:	62 2f       	mov	r22, r18
    bd24:	29 81       	ldd	r18, Y+1	; 0x01
    bd26:	42 2f       	mov	r20, r18
    bd28:	50 e0       	ldi	r21, 0x00	; 0
    bd2a:	21 e0       	ldi	r18, 0x01	; 1
    bd2c:	30 e0       	ldi	r19, 0x00	; 0
    bd2e:	02 c0       	rjmp	.+4      	; 0xbd34 <PORTC_set_pin_dir+0x70>
    bd30:	22 0f       	add	r18, r18
    bd32:	33 1f       	adc	r19, r19
    bd34:	4a 95       	dec	r20
    bd36:	e2 f7       	brpl	.-8      	; 0xbd30 <PORTC_set_pin_dir+0x6c>
    bd38:	26 2b       	or	r18, r22
    bd3a:	fc 01       	movw	r30, r24
    bd3c:	20 83       	st	Z, r18
    bd3e:	10 c0       	rjmp	.+32     	; 0xbd60 <PORTC_set_pin_dir+0x9c>
    bd40:	89 81       	ldd	r24, Y+1	; 0x01
    bd42:	88 2f       	mov	r24, r24
    bd44:	90 e0       	ldi	r25, 0x00	; 0
    bd46:	80 5b       	subi	r24, 0xB0	; 176
    bd48:	9b 4f       	sbci	r25, 0xFB	; 251
    bd4a:	29 81       	ldd	r18, Y+1	; 0x01
    bd4c:	22 2f       	mov	r18, r18
    bd4e:	30 e0       	ldi	r19, 0x00	; 0
    bd50:	20 5b       	subi	r18, 0xB0	; 176
    bd52:	3b 4f       	sbci	r19, 0xFB	; 251
    bd54:	f9 01       	movw	r30, r18
    bd56:	20 81       	ld	r18, Z
    bd58:	28 60       	ori	r18, 0x08	; 8
    bd5a:	fc 01       	movw	r30, r24
    bd5c:	20 83       	st	Z, r18
    bd5e:	00 00       	nop
    bd60:	00 00       	nop
    bd62:	0f 90       	pop	r0
    bd64:	0f 90       	pop	r0
    bd66:	df 91       	pop	r29
    bd68:	cf 91       	pop	r28
    bd6a:	08 95       	ret

0000bd6c <PORTC_set_pin_level>:
    bd6c:	cf 93       	push	r28
    bd6e:	df 93       	push	r29
    bd70:	00 d0       	rcall	.+0      	; 0xbd72 <PORTC_set_pin_level+0x6>
    bd72:	cd b7       	in	r28, 0x3d	; 61
    bd74:	de b7       	in	r29, 0x3e	; 62
    bd76:	89 83       	std	Y+1, r24	; 0x01
    bd78:	6a 83       	std	Y+2, r22	; 0x02
    bd7a:	8a 81       	ldd	r24, Y+2	; 0x02
    bd7c:	88 23       	and	r24, r24
    bd7e:	a9 f0       	breq	.+42     	; 0xbdaa <PORTC_set_pin_level+0x3e>
    bd80:	88 e0       	ldi	r24, 0x08	; 8
    bd82:	90 e0       	ldi	r25, 0x00	; 0
    bd84:	28 e0       	ldi	r18, 0x08	; 8
    bd86:	30 e0       	ldi	r19, 0x00	; 0
    bd88:	f9 01       	movw	r30, r18
    bd8a:	21 81       	ldd	r18, Z+1	; 0x01
    bd8c:	62 2f       	mov	r22, r18
    bd8e:	29 81       	ldd	r18, Y+1	; 0x01
    bd90:	42 2f       	mov	r20, r18
    bd92:	50 e0       	ldi	r21, 0x00	; 0
    bd94:	21 e0       	ldi	r18, 0x01	; 1
    bd96:	30 e0       	ldi	r19, 0x00	; 0
    bd98:	02 c0       	rjmp	.+4      	; 0xbd9e <PORTC_set_pin_level+0x32>
    bd9a:	22 0f       	add	r18, r18
    bd9c:	33 1f       	adc	r19, r19
    bd9e:	4a 95       	dec	r20
    bda0:	e2 f7       	brpl	.-8      	; 0xbd9a <PORTC_set_pin_level+0x2e>
    bda2:	26 2b       	or	r18, r22
    bda4:	fc 01       	movw	r30, r24
    bda6:	21 83       	std	Z+1, r18	; 0x01
    bda8:	15 c0       	rjmp	.+42     	; 0xbdd4 <PORTC_set_pin_level+0x68>
    bdaa:	88 e0       	ldi	r24, 0x08	; 8
    bdac:	90 e0       	ldi	r25, 0x00	; 0
    bdae:	28 e0       	ldi	r18, 0x08	; 8
    bdb0:	30 e0       	ldi	r19, 0x00	; 0
    bdb2:	f9 01       	movw	r30, r18
    bdb4:	21 81       	ldd	r18, Z+1	; 0x01
    bdb6:	62 2f       	mov	r22, r18
    bdb8:	29 81       	ldd	r18, Y+1	; 0x01
    bdba:	42 2f       	mov	r20, r18
    bdbc:	50 e0       	ldi	r21, 0x00	; 0
    bdbe:	21 e0       	ldi	r18, 0x01	; 1
    bdc0:	30 e0       	ldi	r19, 0x00	; 0
    bdc2:	02 c0       	rjmp	.+4      	; 0xbdc8 <PORTC_set_pin_level+0x5c>
    bdc4:	22 0f       	add	r18, r18
    bdc6:	33 1f       	adc	r19, r19
    bdc8:	4a 95       	dec	r20
    bdca:	e2 f7       	brpl	.-8      	; 0xbdc4 <PORTC_set_pin_level+0x58>
    bdcc:	20 95       	com	r18
    bdce:	26 23       	and	r18, r22
    bdd0:	fc 01       	movw	r30, r24
    bdd2:	21 83       	std	Z+1, r18	; 0x01
    bdd4:	00 00       	nop
    bdd6:	0f 90       	pop	r0
    bdd8:	0f 90       	pop	r0
    bdda:	df 91       	pop	r29
    bddc:	cf 91       	pop	r28
    bdde:	08 95       	ret

0000bde0 <PORTE_set_pin_pull_mode>:
    bde0:	cf 93       	push	r28
    bde2:	df 93       	push	r29
    bde4:	00 d0       	rcall	.+0      	; 0xbde6 <PORTE_set_pin_pull_mode+0x6>
    bde6:	00 d0       	rcall	.+0      	; 0xbde8 <PORTE_set_pin_pull_mode+0x8>
    bde8:	cd b7       	in	r28, 0x3d	; 61
    bdea:	de b7       	in	r29, 0x3e	; 62
    bdec:	8b 83       	std	Y+3, r24	; 0x03
    bdee:	6c 83       	std	Y+4, r22	; 0x04
    bdf0:	8b 81       	ldd	r24, Y+3	; 0x03
    bdf2:	88 2f       	mov	r24, r24
    bdf4:	90 e0       	ldi	r25, 0x00	; 0
    bdf6:	80 57       	subi	r24, 0x70	; 112
    bdf8:	9b 4f       	sbci	r25, 0xFB	; 251
    bdfa:	89 83       	std	Y+1, r24	; 0x01
    bdfc:	9a 83       	std	Y+2, r25	; 0x02
    bdfe:	8c 81       	ldd	r24, Y+4	; 0x04
    be00:	81 30       	cpi	r24, 0x01	; 1
    be02:	59 f4       	brne	.+22     	; 0xbe1a <PORTE_set_pin_pull_mode+0x3a>
    be04:	89 81       	ldd	r24, Y+1	; 0x01
    be06:	9a 81       	ldd	r25, Y+2	; 0x02
    be08:	fc 01       	movw	r30, r24
    be0a:	80 81       	ld	r24, Z
    be0c:	28 2f       	mov	r18, r24
    be0e:	28 60       	ori	r18, 0x08	; 8
    be10:	89 81       	ldd	r24, Y+1	; 0x01
    be12:	9a 81       	ldd	r25, Y+2	; 0x02
    be14:	fc 01       	movw	r30, r24
    be16:	20 83       	st	Z, r18
    be18:	0d c0       	rjmp	.+26     	; 0xbe34 <PORTE_set_pin_pull_mode+0x54>
    be1a:	8c 81       	ldd	r24, Y+4	; 0x04
    be1c:	88 23       	and	r24, r24
    be1e:	51 f4       	brne	.+20     	; 0xbe34 <PORTE_set_pin_pull_mode+0x54>
    be20:	89 81       	ldd	r24, Y+1	; 0x01
    be22:	9a 81       	ldd	r25, Y+2	; 0x02
    be24:	fc 01       	movw	r30, r24
    be26:	80 81       	ld	r24, Z
    be28:	28 2f       	mov	r18, r24
    be2a:	27 7f       	andi	r18, 0xF7	; 247
    be2c:	89 81       	ldd	r24, Y+1	; 0x01
    be2e:	9a 81       	ldd	r25, Y+2	; 0x02
    be30:	fc 01       	movw	r30, r24
    be32:	20 83       	st	Z, r18
    be34:	00 00       	nop
    be36:	24 96       	adiw	r28, 0x04	; 4
    be38:	cd bf       	out	0x3d, r28	; 61
    be3a:	de bf       	out	0x3e, r29	; 62
    be3c:	df 91       	pop	r29
    be3e:	cf 91       	pop	r28
    be40:	08 95       	ret

0000be42 <PORTE_set_pin_dir>:
    be42:	cf 93       	push	r28
    be44:	df 93       	push	r29
    be46:	00 d0       	rcall	.+0      	; 0xbe48 <PORTE_set_pin_dir+0x6>
    be48:	cd b7       	in	r28, 0x3d	; 61
    be4a:	de b7       	in	r29, 0x3e	; 62
    be4c:	89 83       	std	Y+1, r24	; 0x01
    be4e:	6a 83       	std	Y+2, r22	; 0x02
    be50:	8a 81       	ldd	r24, Y+2	; 0x02
    be52:	88 2f       	mov	r24, r24
    be54:	90 e0       	ldi	r25, 0x00	; 0
    be56:	81 30       	cpi	r24, 0x01	; 1
    be58:	91 05       	cpc	r25, r1
    be5a:	e1 f0       	breq	.+56     	; 0xbe94 <PORTE_set_pin_dir+0x52>
    be5c:	82 30       	cpi	r24, 0x02	; 2
    be5e:	91 05       	cpc	r25, r1
    be60:	71 f1       	breq	.+92     	; 0xbebe <PORTE_set_pin_dir+0x7c>
    be62:	89 2b       	or	r24, r25
    be64:	09 f0       	breq	.+2      	; 0xbe68 <PORTE_set_pin_dir+0x26>
    be66:	3b c0       	rjmp	.+118    	; 0xbede <PORTE_set_pin_dir+0x9c>
    be68:	80 e1       	ldi	r24, 0x10	; 16
    be6a:	90 e0       	ldi	r25, 0x00	; 0
    be6c:	20 e1       	ldi	r18, 0x10	; 16
    be6e:	30 e0       	ldi	r19, 0x00	; 0
    be70:	f9 01       	movw	r30, r18
    be72:	20 81       	ld	r18, Z
    be74:	62 2f       	mov	r22, r18
    be76:	29 81       	ldd	r18, Y+1	; 0x01
    be78:	42 2f       	mov	r20, r18
    be7a:	50 e0       	ldi	r21, 0x00	; 0
    be7c:	21 e0       	ldi	r18, 0x01	; 1
    be7e:	30 e0       	ldi	r19, 0x00	; 0
    be80:	02 c0       	rjmp	.+4      	; 0xbe86 <PORTE_set_pin_dir+0x44>
    be82:	22 0f       	add	r18, r18
    be84:	33 1f       	adc	r19, r19
    be86:	4a 95       	dec	r20
    be88:	e2 f7       	brpl	.-8      	; 0xbe82 <PORTE_set_pin_dir+0x40>
    be8a:	20 95       	com	r18
    be8c:	26 23       	and	r18, r22
    be8e:	fc 01       	movw	r30, r24
    be90:	20 83       	st	Z, r18
    be92:	25 c0       	rjmp	.+74     	; 0xbede <PORTE_set_pin_dir+0x9c>
    be94:	80 e1       	ldi	r24, 0x10	; 16
    be96:	90 e0       	ldi	r25, 0x00	; 0
    be98:	20 e1       	ldi	r18, 0x10	; 16
    be9a:	30 e0       	ldi	r19, 0x00	; 0
    be9c:	f9 01       	movw	r30, r18
    be9e:	20 81       	ld	r18, Z
    bea0:	62 2f       	mov	r22, r18
    bea2:	29 81       	ldd	r18, Y+1	; 0x01
    bea4:	42 2f       	mov	r20, r18
    bea6:	50 e0       	ldi	r21, 0x00	; 0
    bea8:	21 e0       	ldi	r18, 0x01	; 1
    beaa:	30 e0       	ldi	r19, 0x00	; 0
    beac:	02 c0       	rjmp	.+4      	; 0xbeb2 <PORTE_set_pin_dir+0x70>
    beae:	22 0f       	add	r18, r18
    beb0:	33 1f       	adc	r19, r19
    beb2:	4a 95       	dec	r20
    beb4:	e2 f7       	brpl	.-8      	; 0xbeae <PORTE_set_pin_dir+0x6c>
    beb6:	26 2b       	or	r18, r22
    beb8:	fc 01       	movw	r30, r24
    beba:	20 83       	st	Z, r18
    bebc:	10 c0       	rjmp	.+32     	; 0xbede <PORTE_set_pin_dir+0x9c>
    bebe:	89 81       	ldd	r24, Y+1	; 0x01
    bec0:	88 2f       	mov	r24, r24
    bec2:	90 e0       	ldi	r25, 0x00	; 0
    bec4:	80 57       	subi	r24, 0x70	; 112
    bec6:	9b 4f       	sbci	r25, 0xFB	; 251
    bec8:	29 81       	ldd	r18, Y+1	; 0x01
    beca:	22 2f       	mov	r18, r18
    becc:	30 e0       	ldi	r19, 0x00	; 0
    bece:	20 57       	subi	r18, 0x70	; 112
    bed0:	3b 4f       	sbci	r19, 0xFB	; 251
    bed2:	f9 01       	movw	r30, r18
    bed4:	20 81       	ld	r18, Z
    bed6:	28 60       	ori	r18, 0x08	; 8
    bed8:	fc 01       	movw	r30, r24
    beda:	20 83       	st	Z, r18
    bedc:	00 00       	nop
    bede:	00 00       	nop
    bee0:	0f 90       	pop	r0
    bee2:	0f 90       	pop	r0
    bee4:	df 91       	pop	r29
    bee6:	cf 91       	pop	r28
    bee8:	08 95       	ret

0000beea <PORTE_set_pin_level>:
    beea:	cf 93       	push	r28
    beec:	df 93       	push	r29
    beee:	00 d0       	rcall	.+0      	; 0xbef0 <PORTE_set_pin_level+0x6>
    bef0:	cd b7       	in	r28, 0x3d	; 61
    bef2:	de b7       	in	r29, 0x3e	; 62
    bef4:	89 83       	std	Y+1, r24	; 0x01
    bef6:	6a 83       	std	Y+2, r22	; 0x02
    bef8:	8a 81       	ldd	r24, Y+2	; 0x02
    befa:	88 23       	and	r24, r24
    befc:	a9 f0       	breq	.+42     	; 0xbf28 <PORTE_set_pin_level+0x3e>
    befe:	80 e1       	ldi	r24, 0x10	; 16
    bf00:	90 e0       	ldi	r25, 0x00	; 0
    bf02:	20 e1       	ldi	r18, 0x10	; 16
    bf04:	30 e0       	ldi	r19, 0x00	; 0
    bf06:	f9 01       	movw	r30, r18
    bf08:	21 81       	ldd	r18, Z+1	; 0x01
    bf0a:	62 2f       	mov	r22, r18
    bf0c:	29 81       	ldd	r18, Y+1	; 0x01
    bf0e:	42 2f       	mov	r20, r18
    bf10:	50 e0       	ldi	r21, 0x00	; 0
    bf12:	21 e0       	ldi	r18, 0x01	; 1
    bf14:	30 e0       	ldi	r19, 0x00	; 0
    bf16:	02 c0       	rjmp	.+4      	; 0xbf1c <PORTE_set_pin_level+0x32>
    bf18:	22 0f       	add	r18, r18
    bf1a:	33 1f       	adc	r19, r19
    bf1c:	4a 95       	dec	r20
    bf1e:	e2 f7       	brpl	.-8      	; 0xbf18 <PORTE_set_pin_level+0x2e>
    bf20:	26 2b       	or	r18, r22
    bf22:	fc 01       	movw	r30, r24
    bf24:	21 83       	std	Z+1, r18	; 0x01
    bf26:	15 c0       	rjmp	.+42     	; 0xbf52 <PORTE_set_pin_level+0x68>
    bf28:	80 e1       	ldi	r24, 0x10	; 16
    bf2a:	90 e0       	ldi	r25, 0x00	; 0
    bf2c:	20 e1       	ldi	r18, 0x10	; 16
    bf2e:	30 e0       	ldi	r19, 0x00	; 0
    bf30:	f9 01       	movw	r30, r18
    bf32:	21 81       	ldd	r18, Z+1	; 0x01
    bf34:	62 2f       	mov	r22, r18
    bf36:	29 81       	ldd	r18, Y+1	; 0x01
    bf38:	42 2f       	mov	r20, r18
    bf3a:	50 e0       	ldi	r21, 0x00	; 0
    bf3c:	21 e0       	ldi	r18, 0x01	; 1
    bf3e:	30 e0       	ldi	r19, 0x00	; 0
    bf40:	02 c0       	rjmp	.+4      	; 0xbf46 <PORTE_set_pin_level+0x5c>
    bf42:	22 0f       	add	r18, r18
    bf44:	33 1f       	adc	r19, r19
    bf46:	4a 95       	dec	r20
    bf48:	e2 f7       	brpl	.-8      	; 0xbf42 <PORTE_set_pin_level+0x58>
    bf4a:	20 95       	com	r18
    bf4c:	26 23       	and	r18, r22
    bf4e:	fc 01       	movw	r30, r24
    bf50:	21 83       	std	Z+1, r18	; 0x01
    bf52:	00 00       	nop
    bf54:	0f 90       	pop	r0
    bf56:	0f 90       	pop	r0
    bf58:	df 91       	pop	r29
    bf5a:	cf 91       	pop	r28
    bf5c:	08 95       	ret

0000bf5e <PC0_set_dir>:
    bf5e:	cf 93       	push	r28
    bf60:	df 93       	push	r29
    bf62:	1f 92       	push	r1
    bf64:	cd b7       	in	r28, 0x3d	; 61
    bf66:	de b7       	in	r29, 0x3e	; 62
    bf68:	89 83       	std	Y+1, r24	; 0x01
    bf6a:	69 81       	ldd	r22, Y+1	; 0x01
    bf6c:	80 e0       	ldi	r24, 0x00	; 0
    bf6e:	0e 94 62 5e 	call	0xbcc4	; 0xbcc4 <PORTC_set_pin_dir>
    bf72:	00 00       	nop
    bf74:	0f 90       	pop	r0
    bf76:	df 91       	pop	r29
    bf78:	cf 91       	pop	r28
    bf7a:	08 95       	ret

0000bf7c <PC0_set_level>:
    bf7c:	cf 93       	push	r28
    bf7e:	df 93       	push	r29
    bf80:	1f 92       	push	r1
    bf82:	cd b7       	in	r28, 0x3d	; 61
    bf84:	de b7       	in	r29, 0x3e	; 62
    bf86:	89 83       	std	Y+1, r24	; 0x01
    bf88:	69 81       	ldd	r22, Y+1	; 0x01
    bf8a:	80 e0       	ldi	r24, 0x00	; 0
    bf8c:	0e 94 b6 5e 	call	0xbd6c	; 0xbd6c <PORTC_set_pin_level>
    bf90:	00 00       	nop
    bf92:	0f 90       	pop	r0
    bf94:	df 91       	pop	r29
    bf96:	cf 91       	pop	r28
    bf98:	08 95       	ret

0000bf9a <PC1_set_pull_mode>:
    bf9a:	cf 93       	push	r28
    bf9c:	df 93       	push	r29
    bf9e:	1f 92       	push	r1
    bfa0:	cd b7       	in	r28, 0x3d	; 61
    bfa2:	de b7       	in	r29, 0x3e	; 62
    bfa4:	89 83       	std	Y+1, r24	; 0x01
    bfa6:	69 81       	ldd	r22, Y+1	; 0x01
    bfa8:	81 e0       	ldi	r24, 0x01	; 1
    bfaa:	0e 94 31 5e 	call	0xbc62	; 0xbc62 <PORTC_set_pin_pull_mode>
    bfae:	00 00       	nop
    bfb0:	0f 90       	pop	r0
    bfb2:	df 91       	pop	r29
    bfb4:	cf 91       	pop	r28
    bfb6:	08 95       	ret

0000bfb8 <PC1_set_dir>:
    bfb8:	cf 93       	push	r28
    bfba:	df 93       	push	r29
    bfbc:	1f 92       	push	r1
    bfbe:	cd b7       	in	r28, 0x3d	; 61
    bfc0:	de b7       	in	r29, 0x3e	; 62
    bfc2:	89 83       	std	Y+1, r24	; 0x01
    bfc4:	69 81       	ldd	r22, Y+1	; 0x01
    bfc6:	81 e0       	ldi	r24, 0x01	; 1
    bfc8:	0e 94 62 5e 	call	0xbcc4	; 0xbcc4 <PORTC_set_pin_dir>
    bfcc:	00 00       	nop
    bfce:	0f 90       	pop	r0
    bfd0:	df 91       	pop	r29
    bfd2:	cf 91       	pop	r28
    bfd4:	08 95       	ret

0000bfd6 <PE0_set_dir>:
    bfd6:	cf 93       	push	r28
    bfd8:	df 93       	push	r29
    bfda:	1f 92       	push	r1
    bfdc:	cd b7       	in	r28, 0x3d	; 61
    bfde:	de b7       	in	r29, 0x3e	; 62
    bfe0:	89 83       	std	Y+1, r24	; 0x01
    bfe2:	69 81       	ldd	r22, Y+1	; 0x01
    bfe4:	80 e0       	ldi	r24, 0x00	; 0
    bfe6:	0e 94 21 5f 	call	0xbe42	; 0xbe42 <PORTE_set_pin_dir>
    bfea:	00 00       	nop
    bfec:	0f 90       	pop	r0
    bfee:	df 91       	pop	r29
    bff0:	cf 91       	pop	r28
    bff2:	08 95       	ret

0000bff4 <PE0_set_level>:
    bff4:	cf 93       	push	r28
    bff6:	df 93       	push	r29
    bff8:	1f 92       	push	r1
    bffa:	cd b7       	in	r28, 0x3d	; 61
    bffc:	de b7       	in	r29, 0x3e	; 62
    bffe:	89 83       	std	Y+1, r24	; 0x01
    c000:	69 81       	ldd	r22, Y+1	; 0x01
    c002:	80 e0       	ldi	r24, 0x00	; 0
    c004:	0e 94 75 5f 	call	0xbeea	; 0xbeea <PORTE_set_pin_level>
    c008:	00 00       	nop
    c00a:	0f 90       	pop	r0
    c00c:	df 91       	pop	r29
    c00e:	cf 91       	pop	r28
    c010:	08 95       	ret

0000c012 <PE1_set_pull_mode>:
    c012:	cf 93       	push	r28
    c014:	df 93       	push	r29
    c016:	1f 92       	push	r1
    c018:	cd b7       	in	r28, 0x3d	; 61
    c01a:	de b7       	in	r29, 0x3e	; 62
    c01c:	89 83       	std	Y+1, r24	; 0x01
    c01e:	69 81       	ldd	r22, Y+1	; 0x01
    c020:	81 e0       	ldi	r24, 0x01	; 1
    c022:	0e 94 f0 5e 	call	0xbde0	; 0xbde0 <PORTE_set_pin_pull_mode>
    c026:	00 00       	nop
    c028:	0f 90       	pop	r0
    c02a:	df 91       	pop	r29
    c02c:	cf 91       	pop	r28
    c02e:	08 95       	ret

0000c030 <PE1_set_dir>:
    c030:	cf 93       	push	r28
    c032:	df 93       	push	r29
    c034:	1f 92       	push	r1
    c036:	cd b7       	in	r28, 0x3d	; 61
    c038:	de b7       	in	r29, 0x3e	; 62
    c03a:	89 83       	std	Y+1, r24	; 0x01
    c03c:	69 81       	ldd	r22, Y+1	; 0x01
    c03e:	81 e0       	ldi	r24, 0x01	; 1
    c040:	0e 94 21 5f 	call	0xbe42	; 0xbe42 <PORTE_set_pin_dir>
    c044:	00 00       	nop
    c046:	0f 90       	pop	r0
    c048:	df 91       	pop	r29
    c04a:	cf 91       	pop	r28
    c04c:	08 95       	ret

0000c04e <nextFullSBTxBuffer>:
    c04e:	cf 93       	push	r28
    c050:	df 93       	push	r29
    c052:	00 d0       	rcall	.+0      	; 0xc054 <nextFullSBTxBuffer+0x6>
    c054:	cd b7       	in	r28, 0x3d	; 61
    c056:	de b7       	in	r29, 0x3e	; 62
    c058:	81 e0       	ldi	r24, 0x01	; 1
    c05a:	89 83       	std	Y+1, r24	; 0x01
    c05c:	1a 82       	std	Y+2, r1	; 0x02
    c05e:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c062:	28 2f       	mov	r18, r24
    c064:	30 e0       	ldi	r19, 0x00	; 0
    c066:	49 e2       	ldi	r20, 0x29	; 41
    c068:	42 9f       	mul	r20, r18
    c06a:	c0 01       	movw	r24, r0
    c06c:	43 9f       	mul	r20, r19
    c06e:	90 0d       	add	r25, r0
    c070:	11 24       	eor	r1, r1
    c072:	80 55       	subi	r24, 0x50	; 80
    c074:	96 4b       	sbci	r25, 0xB6	; 182
    c076:	fc 01       	movw	r30, r24
    c078:	90 81       	ld	r25, Z
    c07a:	81 e0       	ldi	r24, 0x01	; 1
    c07c:	99 23       	and	r25, r25
    c07e:	09 f0       	breq	.+2      	; 0xc082 <nextFullSBTxBuffer+0x34>
    c080:	80 e0       	ldi	r24, 0x00	; 0
    c082:	88 23       	and	r24, r24
    c084:	c1 f0       	breq	.+48     	; 0xc0b6 <nextFullSBTxBuffer+0x68>
    c086:	8a 81       	ldd	r24, Y+2	; 0x02
    c088:	8f 5f       	subi	r24, 0xFF	; 255
    c08a:	8a 83       	std	Y+2, r24	; 0x02
    c08c:	81 e0       	ldi	r24, 0x01	; 1
    c08e:	9a 81       	ldd	r25, Y+2	; 0x02
    c090:	93 30       	cpi	r25, 0x03	; 3
    c092:	08 f4       	brcc	.+2      	; 0xc096 <nextFullSBTxBuffer+0x48>
    c094:	80 e0       	ldi	r24, 0x00	; 0
    c096:	88 23       	and	r24, r24
    c098:	11 f0       	breq	.+4      	; 0xc09e <nextFullSBTxBuffer+0x50>
    c09a:	19 82       	std	Y+1, r1	; 0x01
    c09c:	0c c0       	rjmp	.+24     	; 0xc0b6 <nextFullSBTxBuffer+0x68>
    c09e:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c0a2:	8f 5f       	subi	r24, 0xFF	; 255
    c0a4:	80 93 a9 4a 	sts	0x4AA9, r24	; 0x804aa9 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c0a8:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c0ac:	83 30       	cpi	r24, 0x03	; 3
    c0ae:	b8 f2       	brcs	.-82     	; 0xc05e <nextFullSBTxBuffer+0x10>
    c0b0:	10 92 a9 4a 	sts	0x4AA9, r1	; 0x804aa9 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c0b4:	d4 cf       	rjmp	.-88     	; 0xc05e <nextFullSBTxBuffer+0x10>
    c0b6:	89 81       	ldd	r24, Y+1	; 0x01
    c0b8:	88 23       	and	r24, r24
    c0ba:	69 f0       	breq	.+26     	; 0xc0d6 <nextFullSBTxBuffer+0x88>
    c0bc:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    c0c0:	28 2f       	mov	r18, r24
    c0c2:	30 e0       	ldi	r19, 0x00	; 0
    c0c4:	49 e2       	ldi	r20, 0x29	; 41
    c0c6:	42 9f       	mul	r20, r18
    c0c8:	c0 01       	movw	r24, r0
    c0ca:	43 9f       	mul	r20, r19
    c0cc:	90 0d       	add	r25, r0
    c0ce:	11 24       	eor	r1, r1
    c0d0:	80 55       	subi	r24, 0x50	; 80
    c0d2:	96 4b       	sbci	r25, 0xB6	; 182
    c0d4:	02 c0       	rjmp	.+4      	; 0xc0da <nextFullSBTxBuffer+0x8c>
    c0d6:	80 e0       	ldi	r24, 0x00	; 0
    c0d8:	90 e0       	ldi	r25, 0x00	; 0
    c0da:	0f 90       	pop	r0
    c0dc:	0f 90       	pop	r0
    c0de:	df 91       	pop	r29
    c0e0:	cf 91       	pop	r28
    c0e2:	08 95       	ret

0000c0e4 <nextEmptySBTxBuffer>:
    c0e4:	cf 93       	push	r28
    c0e6:	df 93       	push	r29
    c0e8:	00 d0       	rcall	.+0      	; 0xc0ea <nextEmptySBTxBuffer+0x6>
    c0ea:	cd b7       	in	r28, 0x3d	; 61
    c0ec:	de b7       	in	r29, 0x3e	; 62
    c0ee:	81 e0       	ldi	r24, 0x01	; 1
    c0f0:	89 83       	std	Y+1, r24	; 0x01
    c0f2:	1a 82       	std	Y+2, r1	; 0x02
    c0f4:	80 91 aa 4a 	lds	r24, 0x4AAA	; 0x804aaa <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c0f8:	28 2f       	mov	r18, r24
    c0fa:	30 e0       	ldi	r19, 0x00	; 0
    c0fc:	49 e2       	ldi	r20, 0x29	; 41
    c0fe:	42 9f       	mul	r20, r18
    c100:	c0 01       	movw	r24, r0
    c102:	43 9f       	mul	r20, r19
    c104:	90 0d       	add	r25, r0
    c106:	11 24       	eor	r1, r1
    c108:	80 55       	subi	r24, 0x50	; 80
    c10a:	96 4b       	sbci	r25, 0xB6	; 182
    c10c:	fc 01       	movw	r30, r24
    c10e:	90 81       	ld	r25, Z
    c110:	81 e0       	ldi	r24, 0x01	; 1
    c112:	99 23       	and	r25, r25
    c114:	09 f4       	brne	.+2      	; 0xc118 <nextEmptySBTxBuffer+0x34>
    c116:	80 e0       	ldi	r24, 0x00	; 0
    c118:	88 23       	and	r24, r24
    c11a:	c1 f0       	breq	.+48     	; 0xc14c <nextEmptySBTxBuffer+0x68>
    c11c:	8a 81       	ldd	r24, Y+2	; 0x02
    c11e:	8f 5f       	subi	r24, 0xFF	; 255
    c120:	8a 83       	std	Y+2, r24	; 0x02
    c122:	81 e0       	ldi	r24, 0x01	; 1
    c124:	9a 81       	ldd	r25, Y+2	; 0x02
    c126:	93 30       	cpi	r25, 0x03	; 3
    c128:	08 f4       	brcc	.+2      	; 0xc12c <nextEmptySBTxBuffer+0x48>
    c12a:	80 e0       	ldi	r24, 0x00	; 0
    c12c:	88 23       	and	r24, r24
    c12e:	11 f0       	breq	.+4      	; 0xc134 <nextEmptySBTxBuffer+0x50>
    c130:	19 82       	std	Y+1, r1	; 0x01
    c132:	0c c0       	rjmp	.+24     	; 0xc14c <nextEmptySBTxBuffer+0x68>
    c134:	80 91 aa 4a 	lds	r24, 0x4AAA	; 0x804aaa <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c138:	8f 5f       	subi	r24, 0xFF	; 255
    c13a:	80 93 aa 4a 	sts	0x4AAA, r24	; 0x804aaa <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c13e:	80 91 aa 4a 	lds	r24, 0x4AAA	; 0x804aaa <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c142:	83 30       	cpi	r24, 0x03	; 3
    c144:	b8 f2       	brcs	.-82     	; 0xc0f4 <nextEmptySBTxBuffer+0x10>
    c146:	10 92 aa 4a 	sts	0x4AAA, r1	; 0x804aaa <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c14a:	d4 cf       	rjmp	.-88     	; 0xc0f4 <nextEmptySBTxBuffer+0x10>
    c14c:	89 81       	ldd	r24, Y+1	; 0x01
    c14e:	88 23       	and	r24, r24
    c150:	69 f0       	breq	.+26     	; 0xc16c <nextEmptySBTxBuffer+0x88>
    c152:	80 91 aa 4a 	lds	r24, 0x4AAA	; 0x804aaa <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    c156:	28 2f       	mov	r18, r24
    c158:	30 e0       	ldi	r19, 0x00	; 0
    c15a:	49 e2       	ldi	r20, 0x29	; 41
    c15c:	42 9f       	mul	r20, r18
    c15e:	c0 01       	movw	r24, r0
    c160:	43 9f       	mul	r20, r19
    c162:	90 0d       	add	r25, r0
    c164:	11 24       	eor	r1, r1
    c166:	80 55       	subi	r24, 0x50	; 80
    c168:	96 4b       	sbci	r25, 0xB6	; 182
    c16a:	02 c0       	rjmp	.+4      	; 0xc170 <nextEmptySBTxBuffer+0x8c>
    c16c:	80 e0       	ldi	r24, 0x00	; 0
    c16e:	90 e0       	ldi	r25, 0x00	; 0
    c170:	0f 90       	pop	r0
    c172:	0f 90       	pop	r0
    c174:	df 91       	pop	r29
    c176:	cf 91       	pop	r28
    c178:	08 95       	ret

0000c17a <nextEmptySBRxBuffer>:
    c17a:	cf 93       	push	r28
    c17c:	df 93       	push	r29
    c17e:	00 d0       	rcall	.+0      	; 0xc180 <nextEmptySBRxBuffer+0x6>
    c180:	cd b7       	in	r28, 0x3d	; 61
    c182:	de b7       	in	r29, 0x3e	; 62
    c184:	81 e0       	ldi	r24, 0x01	; 1
    c186:	89 83       	std	Y+1, r24	; 0x01
    c188:	1a 82       	std	Y+2, r1	; 0x02
    c18a:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c18e:	28 2f       	mov	r18, r24
    c190:	30 e0       	ldi	r19, 0x00	; 0
    c192:	4f e3       	ldi	r20, 0x3F	; 63
    c194:	42 9f       	mul	r20, r18
    c196:	c0 01       	movw	r24, r0
    c198:	43 9f       	mul	r20, r19
    c19a:	90 0d       	add	r25, r0
    c19c:	11 24       	eor	r1, r1
    c19e:	84 5d       	subi	r24, 0xD4	; 212
    c1a0:	95 4b       	sbci	r25, 0xB5	; 181
    c1a2:	fc 01       	movw	r30, r24
    c1a4:	80 81       	ld	r24, Z
    c1a6:	91 81       	ldd	r25, Z+1	; 0x01
    c1a8:	21 e0       	ldi	r18, 0x01	; 1
    c1aa:	89 2b       	or	r24, r25
    c1ac:	09 f4       	brne	.+2      	; 0xc1b0 <nextEmptySBRxBuffer+0x36>
    c1ae:	20 e0       	ldi	r18, 0x00	; 0
    c1b0:	22 23       	and	r18, r18
    c1b2:	c1 f0       	breq	.+48     	; 0xc1e4 <nextEmptySBRxBuffer+0x6a>
    c1b4:	8a 81       	ldd	r24, Y+2	; 0x02
    c1b6:	8f 5f       	subi	r24, 0xFF	; 255
    c1b8:	8a 83       	std	Y+2, r24	; 0x02
    c1ba:	81 e0       	ldi	r24, 0x01	; 1
    c1bc:	9a 81       	ldd	r25, Y+2	; 0x02
    c1be:	92 30       	cpi	r25, 0x02	; 2
    c1c0:	08 f4       	brcc	.+2      	; 0xc1c4 <nextEmptySBRxBuffer+0x4a>
    c1c2:	80 e0       	ldi	r24, 0x00	; 0
    c1c4:	88 23       	and	r24, r24
    c1c6:	11 f0       	breq	.+4      	; 0xc1cc <nextEmptySBRxBuffer+0x52>
    c1c8:	19 82       	std	Y+1, r1	; 0x01
    c1ca:	0c c0       	rjmp	.+24     	; 0xc1e4 <nextEmptySBRxBuffer+0x6a>
    c1cc:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c1d0:	8f 5f       	subi	r24, 0xFF	; 255
    c1d2:	80 93 ab 4a 	sts	0x4AAB, r24	; 0x804aab <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c1d6:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c1da:	82 30       	cpi	r24, 0x02	; 2
    c1dc:	b0 f2       	brcs	.-84     	; 0xc18a <nextEmptySBRxBuffer+0x10>
    c1de:	10 92 ab 4a 	sts	0x4AAB, r1	; 0x804aab <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c1e2:	d3 cf       	rjmp	.-90     	; 0xc18a <nextEmptySBRxBuffer+0x10>
    c1e4:	89 81       	ldd	r24, Y+1	; 0x01
    c1e6:	88 23       	and	r24, r24
    c1e8:	69 f0       	breq	.+26     	; 0xc204 <nextEmptySBRxBuffer+0x8a>
    c1ea:	80 91 ab 4a 	lds	r24, 0x4AAB	; 0x804aab <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    c1ee:	28 2f       	mov	r18, r24
    c1f0:	30 e0       	ldi	r19, 0x00	; 0
    c1f2:	4f e3       	ldi	r20, 0x3F	; 63
    c1f4:	42 9f       	mul	r20, r18
    c1f6:	c0 01       	movw	r24, r0
    c1f8:	43 9f       	mul	r20, r19
    c1fa:	90 0d       	add	r25, r0
    c1fc:	11 24       	eor	r1, r1
    c1fe:	85 5d       	subi	r24, 0xD5	; 213
    c200:	95 4b       	sbci	r25, 0xB5	; 181
    c202:	02 c0       	rjmp	.+4      	; 0xc208 <nextEmptySBRxBuffer+0x8e>
    c204:	80 e0       	ldi	r24, 0x00	; 0
    c206:	90 e0       	ldi	r25, 0x00	; 0
    c208:	0f 90       	pop	r0
    c20a:	0f 90       	pop	r0
    c20c:	df 91       	pop	r29
    c20e:	cf 91       	pop	r28
    c210:	08 95       	ret

0000c212 <nextFullSBRxBuffer>:
    c212:	cf 93       	push	r28
    c214:	df 93       	push	r29
    c216:	00 d0       	rcall	.+0      	; 0xc218 <nextFullSBRxBuffer+0x6>
    c218:	cd b7       	in	r28, 0x3d	; 61
    c21a:	de b7       	in	r29, 0x3e	; 62
    c21c:	81 e0       	ldi	r24, 0x01	; 1
    c21e:	89 83       	std	Y+1, r24	; 0x01
    c220:	1a 82       	std	Y+2, r1	; 0x02
    c222:	80 91 ac 4a 	lds	r24, 0x4AAC	; 0x804aac <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c226:	28 2f       	mov	r18, r24
    c228:	30 e0       	ldi	r19, 0x00	; 0
    c22a:	4f e3       	ldi	r20, 0x3F	; 63
    c22c:	42 9f       	mul	r20, r18
    c22e:	c0 01       	movw	r24, r0
    c230:	43 9f       	mul	r20, r19
    c232:	90 0d       	add	r25, r0
    c234:	11 24       	eor	r1, r1
    c236:	84 5d       	subi	r24, 0xD4	; 212
    c238:	95 4b       	sbci	r25, 0xB5	; 181
    c23a:	fc 01       	movw	r30, r24
    c23c:	80 81       	ld	r24, Z
    c23e:	91 81       	ldd	r25, Z+1	; 0x01
    c240:	21 e0       	ldi	r18, 0x01	; 1
    c242:	89 2b       	or	r24, r25
    c244:	09 f0       	breq	.+2      	; 0xc248 <nextFullSBRxBuffer+0x36>
    c246:	20 e0       	ldi	r18, 0x00	; 0
    c248:	22 23       	and	r18, r18
    c24a:	c1 f0       	breq	.+48     	; 0xc27c <nextFullSBRxBuffer+0x6a>
    c24c:	8a 81       	ldd	r24, Y+2	; 0x02
    c24e:	8f 5f       	subi	r24, 0xFF	; 255
    c250:	8a 83       	std	Y+2, r24	; 0x02
    c252:	81 e0       	ldi	r24, 0x01	; 1
    c254:	9a 81       	ldd	r25, Y+2	; 0x02
    c256:	92 30       	cpi	r25, 0x02	; 2
    c258:	08 f4       	brcc	.+2      	; 0xc25c <nextFullSBRxBuffer+0x4a>
    c25a:	80 e0       	ldi	r24, 0x00	; 0
    c25c:	88 23       	and	r24, r24
    c25e:	11 f0       	breq	.+4      	; 0xc264 <nextFullSBRxBuffer+0x52>
    c260:	19 82       	std	Y+1, r1	; 0x01
    c262:	0c c0       	rjmp	.+24     	; 0xc27c <nextFullSBRxBuffer+0x6a>
    c264:	80 91 ac 4a 	lds	r24, 0x4AAC	; 0x804aac <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c268:	8f 5f       	subi	r24, 0xFF	; 255
    c26a:	80 93 ac 4a 	sts	0x4AAC, r24	; 0x804aac <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c26e:	80 91 ac 4a 	lds	r24, 0x4AAC	; 0x804aac <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c272:	82 30       	cpi	r24, 0x02	; 2
    c274:	b0 f2       	brcs	.-84     	; 0xc222 <nextFullSBRxBuffer+0x10>
    c276:	10 92 ac 4a 	sts	0x4AAC, r1	; 0x804aac <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c27a:	d3 cf       	rjmp	.-90     	; 0xc222 <nextFullSBRxBuffer+0x10>
    c27c:	89 81       	ldd	r24, Y+1	; 0x01
    c27e:	88 23       	and	r24, r24
    c280:	69 f0       	breq	.+26     	; 0xc29c <nextFullSBRxBuffer+0x8a>
    c282:	80 91 ac 4a 	lds	r24, 0x4AAC	; 0x804aac <_ZZ18nextFullSBRxBufferE11bufferIndex>
    c286:	28 2f       	mov	r18, r24
    c288:	30 e0       	ldi	r19, 0x00	; 0
    c28a:	4f e3       	ldi	r20, 0x3F	; 63
    c28c:	42 9f       	mul	r20, r18
    c28e:	c0 01       	movw	r24, r0
    c290:	43 9f       	mul	r20, r19
    c292:	90 0d       	add	r25, r0
    c294:	11 24       	eor	r1, r1
    c296:	85 5d       	subi	r24, 0xD5	; 213
    c298:	95 4b       	sbci	r25, 0xB5	; 181
    c29a:	02 c0       	rjmp	.+4      	; 0xc2a0 <nextFullSBRxBuffer+0x8e>
    c29c:	80 e0       	ldi	r24, 0x00	; 0
    c29e:	90 e0       	ldi	r25, 0x00	; 0
    c2a0:	0f 90       	pop	r0
    c2a2:	0f 90       	pop	r0
    c2a4:	df 91       	pop	r29
    c2a6:	cf 91       	pop	r28
    c2a8:	08 95       	ret

0000c2aa <serialbusTxInProgress>:
    c2aa:	cf 93       	push	r28
    c2ac:	df 93       	push	r29
    c2ae:	cd b7       	in	r28, 0x3d	; 61
    c2b0:	de b7       	in	r29, 0x3e	; 62
    c2b2:	80 91 af 49 	lds	r24, 0x49AF	; 0x8049af <_ZL19serialbus_tx_active>
    c2b6:	df 91       	pop	r29
    c2b8:	cf 91       	pop	r28
    c2ba:	08 95       	ret

0000c2bc <_Z18serialbus_start_txv>:
    c2bc:	cf 93       	push	r28
    c2be:	df 93       	push	r29
    c2c0:	1f 92       	push	r1
    c2c2:	cd b7       	in	r28, 0x3d	; 61
    c2c4:	de b7       	in	r29, 0x3e	; 62
    c2c6:	90 91 af 49 	lds	r25, 0x49AF	; 0x8049af <_ZL19serialbus_tx_active>
    c2ca:	81 e0       	ldi	r24, 0x01	; 1
    c2cc:	89 27       	eor	r24, r25
    c2ce:	89 83       	std	Y+1, r24	; 0x01
    c2d0:	89 81       	ldd	r24, Y+1	; 0x01
    c2d2:	88 23       	and	r24, r24
    c2d4:	61 f0       	breq	.+24     	; 0xc2ee <_Z18serialbus_start_txv+0x32>
    c2d6:	81 e0       	ldi	r24, 0x01	; 1
    c2d8:	80 93 af 49 	sts	0x49AF, r24	; 0x8049af <_ZL19serialbus_tx_active>
    c2dc:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    c2e0:	88 23       	and	r24, r24
    c2e2:	19 f4       	brne	.+6      	; 0xc2ea <_Z18serialbus_start_txv+0x2e>
    c2e4:	0e 94 37 73 	call	0xe66e	; 0xe66e <USART4_enable_tx>
    c2e8:	02 c0       	rjmp	.+4      	; 0xc2ee <_Z18serialbus_start_txv+0x32>
    c2ea:	0e 94 b1 72 	call	0xe562	; 0xe562 <USART1_enable_tx>
    c2ee:	89 81       	ldd	r24, Y+1	; 0x01
    c2f0:	0f 90       	pop	r0
    c2f2:	df 91       	pop	r29
    c2f4:	cf 91       	pop	r28
    c2f6:	08 95       	ret

0000c2f8 <serialbus_end_tx>:
    c2f8:	cf 93       	push	r28
    c2fa:	df 93       	push	r29
    c2fc:	cd b7       	in	r28, 0x3d	; 61
    c2fe:	de b7       	in	r29, 0x3e	; 62
    c300:	80 91 af 49 	lds	r24, 0x49AF	; 0x8049af <_ZL19serialbus_tx_active>
    c304:	88 23       	and	r24, r24
    c306:	c9 f0       	breq	.+50     	; 0xc33a <serialbus_end_tx+0x42>
    c308:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    c30c:	84 30       	cpi	r24, 0x04	; 4
    c30e:	51 f4       	brne	.+20     	; 0xc324 <serialbus_end_tx+0x2c>
    c310:	80 e8       	ldi	r24, 0x80	; 128
    c312:	98 e0       	ldi	r25, 0x08	; 8
    c314:	20 e8       	ldi	r18, 0x80	; 128
    c316:	38 e0       	ldi	r19, 0x08	; 8
    c318:	f9 01       	movw	r30, r18
    c31a:	25 81       	ldd	r18, Z+5	; 0x05
    c31c:	2f 7d       	andi	r18, 0xDF	; 223
    c31e:	fc 01       	movw	r30, r24
    c320:	25 83       	std	Z+5, r18	; 0x05
    c322:	09 c0       	rjmp	.+18     	; 0xc336 <serialbus_end_tx+0x3e>
    c324:	80 e2       	ldi	r24, 0x20	; 32
    c326:	98 e0       	ldi	r25, 0x08	; 8
    c328:	20 e2       	ldi	r18, 0x20	; 32
    c32a:	38 e0       	ldi	r19, 0x08	; 8
    c32c:	f9 01       	movw	r30, r18
    c32e:	25 81       	ldd	r18, Z+5	; 0x05
    c330:	2f 7d       	andi	r18, 0xDF	; 223
    c332:	fc 01       	movw	r30, r24
    c334:	25 83       	std	Z+5, r18	; 0x05
    c336:	10 92 af 49 	sts	0x49AF, r1	; 0x8049af <_ZL19serialbus_tx_active>
    c33a:	00 00       	nop
    c33c:	df 91       	pop	r29
    c33e:	cf 91       	pop	r28
    c340:	08 95       	ret

0000c342 <_ZL21USART1_initializationm>:
    c342:	cf 93       	push	r28
    c344:	df 93       	push	r29
    c346:	00 d0       	rcall	.+0      	; 0xc348 <_ZL21USART1_initializationm+0x6>
    c348:	00 d0       	rcall	.+0      	; 0xc34a <_ZL21USART1_initializationm+0x8>
    c34a:	cd b7       	in	r28, 0x3d	; 61
    c34c:	de b7       	in	r29, 0x3e	; 62
    c34e:	69 83       	std	Y+1, r22	; 0x01
    c350:	7a 83       	std	Y+2, r23	; 0x02
    c352:	8b 83       	std	Y+3, r24	; 0x03
    c354:	9c 83       	std	Y+4, r25	; 0x04
    c356:	80 e0       	ldi	r24, 0x00	; 0
    c358:	0e 94 dc 5f 	call	0xbfb8	; 0xbfb8 <PC1_set_dir>
    c35c:	80 e0       	ldi	r24, 0x00	; 0
    c35e:	0e 94 cd 5f 	call	0xbf9a	; 0xbf9a <PC1_set_pull_mode>
    c362:	81 e0       	ldi	r24, 0x01	; 1
    c364:	0e 94 af 5f 	call	0xbf5e	; 0xbf5e <PC0_set_dir>
    c368:	81 e0       	ldi	r24, 0x01	; 1
    c36a:	0e 94 be 5f 	call	0xbf7c	; 0xbf7c <PC0_set_level>
    c36e:	89 81       	ldd	r24, Y+1	; 0x01
    c370:	9a 81       	ldd	r25, Y+2	; 0x02
    c372:	ab 81       	ldd	r26, Y+3	; 0x03
    c374:	bc 81       	ldd	r27, Y+4	; 0x04
    c376:	bc 01       	movw	r22, r24
    c378:	cd 01       	movw	r24, r26
    c37a:	0e 94 5a 72 	call	0xe4b4	; 0xe4b4 <USART1_init>
    c37e:	00 00       	nop
    c380:	24 96       	adiw	r28, 0x04	; 4
    c382:	cd bf       	out	0x3d, r28	; 61
    c384:	de bf       	out	0x3e, r29	; 62
    c386:	df 91       	pop	r29
    c388:	cf 91       	pop	r28
    c38a:	08 95       	ret

0000c38c <_ZL21USART4_initializationm>:
    c38c:	cf 93       	push	r28
    c38e:	df 93       	push	r29
    c390:	00 d0       	rcall	.+0      	; 0xc392 <_ZL21USART4_initializationm+0x6>
    c392:	00 d0       	rcall	.+0      	; 0xc394 <_ZL21USART4_initializationm+0x8>
    c394:	cd b7       	in	r28, 0x3d	; 61
    c396:	de b7       	in	r29, 0x3e	; 62
    c398:	69 83       	std	Y+1, r22	; 0x01
    c39a:	7a 83       	std	Y+2, r23	; 0x02
    c39c:	8b 83       	std	Y+3, r24	; 0x03
    c39e:	9c 83       	std	Y+4, r25	; 0x04
    c3a0:	80 e0       	ldi	r24, 0x00	; 0
    c3a2:	0e 94 18 60 	call	0xc030	; 0xc030 <PE1_set_dir>
    c3a6:	80 e0       	ldi	r24, 0x00	; 0
    c3a8:	0e 94 09 60 	call	0xc012	; 0xc012 <PE1_set_pull_mode>
    c3ac:	81 e0       	ldi	r24, 0x01	; 1
    c3ae:	0e 94 eb 5f 	call	0xbfd6	; 0xbfd6 <PE0_set_dir>
    c3b2:	81 e0       	ldi	r24, 0x01	; 1
    c3b4:	0e 94 fa 5f 	call	0xbff4	; 0xbff4 <PE0_set_level>
    c3b8:	89 81       	ldd	r24, Y+1	; 0x01
    c3ba:	9a 81       	ldd	r25, Y+2	; 0x02
    c3bc:	ab 81       	ldd	r26, Y+3	; 0x03
    c3be:	bc 81       	ldd	r27, Y+4	; 0x04
    c3c0:	bc 01       	movw	r22, r24
    c3c2:	cd 01       	movw	r24, r26
    c3c4:	0e 94 e7 72 	call	0xe5ce	; 0xe5ce <USART4_init>
    c3c8:	00 00       	nop
    c3ca:	24 96       	adiw	r28, 0x04	; 4
    c3cc:	cd bf       	out	0x3d, r28	; 61
    c3ce:	de bf       	out	0x3e, r29	; 62
    c3d0:	df 91       	pop	r29
    c3d2:	cf 91       	pop	r28
    c3d4:	08 95       	ret

0000c3d6 <serialbus_init>:
    c3d6:	cf 93       	push	r28
    c3d8:	df 93       	push	r29
    c3da:	cd b7       	in	r28, 0x3d	; 61
    c3dc:	de b7       	in	r29, 0x3e	; 62
    c3de:	27 97       	sbiw	r28, 0x07	; 7
    c3e0:	cd bf       	out	0x3d, r28	; 61
    c3e2:	de bf       	out	0x3e, r29	; 62
    c3e4:	6b 83       	std	Y+3, r22	; 0x03
    c3e6:	7c 83       	std	Y+4, r23	; 0x04
    c3e8:	8d 83       	std	Y+5, r24	; 0x05
    c3ea:	9e 83       	std	Y+6, r25	; 0x06
    c3ec:	4f 83       	std	Y+7, r20	; 0x07
    c3ee:	4f e3       	ldi	r20, 0x3F	; 63
    c3f0:	50 e0       	ldi	r21, 0x00	; 0
    c3f2:	60 e0       	ldi	r22, 0x00	; 0
    c3f4:	70 e0       	ldi	r23, 0x00	; 0
    c3f6:	8b e2       	ldi	r24, 0x2B	; 43
    c3f8:	9a e4       	ldi	r25, 0x4A	; 74
    c3fa:	0e 94 c2 7b 	call	0xf784	; 0xf784 <memset>
    c3fe:	19 82       	std	Y+1, r1	; 0x01
    c400:	1a 82       	std	Y+2, r1	; 0x02
    c402:	89 81       	ldd	r24, Y+1	; 0x01
    c404:	9a 81       	ldd	r25, Y+2	; 0x02
    c406:	03 97       	sbiw	r24, 0x03	; 3
    c408:	94 f4       	brge	.+36     	; 0xc42e <serialbus_init+0x58>
    c40a:	29 81       	ldd	r18, Y+1	; 0x01
    c40c:	3a 81       	ldd	r19, Y+2	; 0x02
    c40e:	49 e2       	ldi	r20, 0x29	; 41
    c410:	42 9f       	mul	r20, r18
    c412:	c0 01       	movw	r24, r0
    c414:	43 9f       	mul	r20, r19
    c416:	90 0d       	add	r25, r0
    c418:	11 24       	eor	r1, r1
    c41a:	80 55       	subi	r24, 0x50	; 80
    c41c:	96 4b       	sbci	r25, 0xB6	; 182
    c41e:	fc 01       	movw	r30, r24
    c420:	10 82       	st	Z, r1
    c422:	89 81       	ldd	r24, Y+1	; 0x01
    c424:	9a 81       	ldd	r25, Y+2	; 0x02
    c426:	01 96       	adiw	r24, 0x01	; 1
    c428:	89 83       	std	Y+1, r24	; 0x01
    c42a:	9a 83       	std	Y+2, r25	; 0x02
    c42c:	ea cf       	rjmp	.-44     	; 0xc402 <serialbus_init+0x2c>
    c42e:	8f 81       	ldd	r24, Y+7	; 0x07
    c430:	86 30       	cpi	r24, 0x06	; 6
    c432:	21 f4       	brne	.+8      	; 0xc43c <serialbus_init+0x66>
    c434:	80 91 30 40 	lds	r24, 0x4030	; 0x804030 <g_serialbus_usart_number>
    c438:	87 30       	cpi	r24, 0x07	; 7
    c43a:	b9 f4       	brne	.+46     	; 0xc46a <serialbus_init+0x94>
    c43c:	8f 81       	ldd	r24, Y+7	; 0x07
    c43e:	84 30       	cpi	r24, 0x04	; 4
    c440:	49 f4       	brne	.+18     	; 0xc454 <serialbus_init+0x7e>
    c442:	8b 81       	ldd	r24, Y+3	; 0x03
    c444:	9c 81       	ldd	r25, Y+4	; 0x04
    c446:	ad 81       	ldd	r26, Y+5	; 0x05
    c448:	be 81       	ldd	r27, Y+6	; 0x06
    c44a:	bc 01       	movw	r22, r24
    c44c:	cd 01       	movw	r24, r26
    c44e:	0e 94 c6 61 	call	0xc38c	; 0xc38c <_ZL21USART4_initializationm>
    c452:	08 c0       	rjmp	.+16     	; 0xc464 <serialbus_init+0x8e>
    c454:	8b 81       	ldd	r24, Y+3	; 0x03
    c456:	9c 81       	ldd	r25, Y+4	; 0x04
    c458:	ad 81       	ldd	r26, Y+5	; 0x05
    c45a:	be 81       	ldd	r27, Y+6	; 0x06
    c45c:	bc 01       	movw	r22, r24
    c45e:	cd 01       	movw	r24, r26
    c460:	0e 94 a1 61 	call	0xc342	; 0xc342 <_ZL21USART1_initializationm>
    c464:	8f 81       	ldd	r24, Y+7	; 0x07
    c466:	80 93 30 40 	sts	0x4030, r24	; 0x804030 <g_serialbus_usart_number>
    c46a:	10 92 31 40 	sts	0x4031, r1	; 0x804031 <_ZL14g_bus_disabled>
    c46e:	00 00       	nop
    c470:	27 96       	adiw	r28, 0x07	; 7
    c472:	cd bf       	out	0x3d, r28	; 61
    c474:	de bf       	out	0x3e, r29	; 62
    c476:	df 91       	pop	r29
    c478:	cf 91       	pop	r28
    c47a:	08 95       	ret

0000c47c <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    c47c:	cf 93       	push	r28
    c47e:	df 93       	push	r29
    c480:	cd b7       	in	r28, 0x3d	; 61
    c482:	de b7       	in	r29, 0x3e	; 62
    c484:	27 97       	sbiw	r28, 0x07	; 7
    c486:	cd bf       	out	0x3d, r28	; 61
    c488:	de bf       	out	0x3e, r29	; 62
    c48a:	8e 83       	std	Y+6, r24	; 0x06
    c48c:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    c48e:	81 e0       	ldi	r24, 0x01	; 1
    c490:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    c492:	88 ec       	ldi	r24, 0xC8	; 200
    c494:	90 e0       	ldi	r25, 0x00	; 0
    c496:	8a 83       	std	Y+2, r24	; 0x02
    c498:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    c49a:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c49e:	88 23       	and	r24, r24
    c4a0:	11 f0       	breq	.+4      	; 0xc4a6 <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    c4a2:	89 81       	ldd	r24, Y+1	; 0x01
    c4a4:	42 c0       	rjmp	.+132    	; 0xc52a <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    c4a6:	8e 81       	ldd	r24, Y+6	; 0x06
    c4a8:	9f 81       	ldd	r25, Y+7	; 0x07
    c4aa:	89 2b       	or	r24, r25
    c4ac:	e9 f1       	breq	.+122    	; 0xc528 <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    c4ae:	0e 94 72 60 	call	0xc0e4	; 0xc0e4 <nextEmptySBTxBuffer>
    c4b2:	8c 83       	std	Y+4, r24	; 0x04
    c4b4:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    c4b6:	8c 81       	ldd	r24, Y+4	; 0x04
    c4b8:	9d 81       	ldd	r25, Y+5	; 0x05
    c4ba:	89 2b       	or	r24, r25
    c4bc:	01 f5       	brne	.+64     	; 0xc4fe <_Z19serialbus_send_textPc+0x82>
    c4be:	8a 81       	ldd	r24, Y+2	; 0x02
    c4c0:	9b 81       	ldd	r25, Y+3	; 0x03
    c4c2:	89 2b       	or	r24, r25
    c4c4:	e1 f0       	breq	.+56     	; 0xc4fe <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    c4c6:	0e 94 55 61 	call	0xc2aa	; 0xc2aa <serialbusTxInProgress>
    c4ca:	88 23       	and	r24, r24
    c4cc:	31 f0       	breq	.+12     	; 0xc4da <_Z19serialbus_send_textPc+0x5e>
    c4ce:	8a 81       	ldd	r24, Y+2	; 0x02
    c4d0:	9b 81       	ldd	r25, Y+3	; 0x03
    c4d2:	89 2b       	or	r24, r25
    c4d4:	11 f0       	breq	.+4      	; 0xc4da <_Z19serialbus_send_textPc+0x5e>
    c4d6:	81 e0       	ldi	r24, 0x01	; 1
    c4d8:	01 c0       	rjmp	.+2      	; 0xc4dc <_Z19serialbus_send_textPc+0x60>
    c4da:	80 e0       	ldi	r24, 0x00	; 0
    c4dc:	88 23       	and	r24, r24
    c4de:	51 f0       	breq	.+20     	; 0xc4f4 <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    c4e0:	8a 81       	ldd	r24, Y+2	; 0x02
    c4e2:	9b 81       	ldd	r25, Y+3	; 0x03
    c4e4:	89 2b       	or	r24, r25
    c4e6:	79 f3       	breq	.-34     	; 0xc4c6 <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    c4e8:	8a 81       	ldd	r24, Y+2	; 0x02
    c4ea:	9b 81       	ldd	r25, Y+3	; 0x03
    c4ec:	01 97       	sbiw	r24, 0x01	; 1
    c4ee:	8a 83       	std	Y+2, r24	; 0x02
    c4f0:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    c4f2:	e9 cf       	rjmp	.-46     	; 0xc4c6 <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    c4f4:	0e 94 72 60 	call	0xc0e4	; 0xc0e4 <nextEmptySBTxBuffer>
    c4f8:	8c 83       	std	Y+4, r24	; 0x04
    c4fa:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    c4fc:	dc cf       	rjmp	.-72     	; 0xc4b6 <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    c4fe:	8c 81       	ldd	r24, Y+4	; 0x04
    c500:	9d 81       	ldd	r25, Y+5	; 0x05
    c502:	89 2b       	or	r24, r25
    c504:	89 f0       	breq	.+34     	; 0xc528 <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    c506:	8f 81       	ldd	r24, Y+7	; 0x07
    c508:	8f 93       	push	r24
    c50a:	8e 81       	ldd	r24, Y+6	; 0x06
    c50c:	8f 93       	push	r24
    c50e:	8d 81       	ldd	r24, Y+5	; 0x05
    c510:	8f 93       	push	r24
    c512:	8c 81       	ldd	r24, Y+4	; 0x04
    c514:	8f 93       	push	r24
    c516:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    c51a:	0f 90       	pop	r0
    c51c:	0f 90       	pop	r0
    c51e:	0f 90       	pop	r0
    c520:	0f 90       	pop	r0

			serialbus_start_tx();
    c522:	0e 94 5e 61 	call	0xc2bc	; 0xc2bc <_Z18serialbus_start_txv>
			err = false;
    c526:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    c528:	89 81       	ldd	r24, Y+1	; 0x01
}
    c52a:	27 96       	adiw	r28, 0x07	; 7
    c52c:	cd bf       	out	0x3d, r28	; 61
    c52e:	de bf       	out	0x3e, r29	; 62
    c530:	df 91       	pop	r29
    c532:	cf 91       	pop	r28
    c534:	08 95       	ret

0000c536 <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    c536:	cf 93       	push	r28
    c538:	df 93       	push	r29
    c53a:	cd b7       	in	r28, 0x3d	; 61
    c53c:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    c53e:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c542:	88 23       	and	r24, r24
    c544:	39 f4       	brne	.+14     	; 0xc554 <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    c546:	84 e5       	ldi	r24, 0x54	; 84
    c548:	96 e4       	ldi	r25, 0x46	; 70
    c54a:	0e 94 3e 62 	call	0xc47c	; 0xc47c <_Z19serialbus_send_textPc>
    c54e:	88 23       	and	r24, r24
    c550:	11 f0       	breq	.+4      	; 0xc556 <sb_send_NewPrompt+0x20>
    c552:	f9 cf       	rjmp	.-14     	; 0xc546 <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    c554:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    c556:	df 91       	pop	r29
    c558:	cf 91       	pop	r28
    c55a:	08 95       	ret

0000c55c <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    c55c:	cf 93       	push	r28
    c55e:	df 93       	push	r29
    c560:	cd b7       	in	r28, 0x3d	; 61
    c562:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    c564:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c568:	88 23       	and	r24, r24
    c56a:	29 f4       	brne	.+10     	; 0xc576 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    c56c:	82 e5       	ldi	r24, 0x52	; 82
    c56e:	96 e4       	ldi	r25, 0x46	; 70
    c570:	0e 94 3e 62 	call	0xc47c	; 0xc47c <_Z19serialbus_send_textPc>
    c574:	01 c0       	rjmp	.+2      	; 0xc578 <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    c576:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    c578:	df 91       	pop	r29
    c57a:	cf 91       	pop	r28
    c57c:	08 95       	ret

0000c57e <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    c57e:	cf 93       	push	r28
    c580:	df 93       	push	r29
    c582:	1f 92       	push	r1
    c584:	cd b7       	in	r28, 0x3d	; 61
    c586:	de b7       	in	r29, 0x3e	; 62
    c588:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    c58a:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c58e:	88 23       	and	r24, r24
    c590:	51 f4       	brne	.+20     	; 0xc5a6 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    c592:	89 81       	ldd	r24, Y+1	; 0x01
    c594:	80 93 7d 49 	sts	0x497D, r24	; 0x80497d <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    c598:	10 92 7e 49 	sts	0x497E, r1	; 0x80497e <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    c59c:	8d e7       	ldi	r24, 0x7D	; 125
    c59e:	99 e4       	ldi	r25, 0x49	; 73
    c5a0:	0e 94 3e 62 	call	0xc47c	; 0xc47c <_Z19serialbus_send_textPc>
    c5a4:	01 c0       	rjmp	.+2      	; 0xc5a8 <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    c5a6:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    c5a8:	0f 90       	pop	r0
    c5aa:	df 91       	pop	r29
    c5ac:	cf 91       	pop	r28
    c5ae:	08 95       	ret

0000c5b0 <sb_send_string>:

bool sb_send_string(char* str)
{
    c5b0:	cf 93       	push	r28
    c5b2:	df 93       	push	r29
    c5b4:	cd b7       	in	r28, 0x3d	; 61
    c5b6:	de b7       	in	r29, 0x3e	; 62
    c5b8:	e8 97       	sbiw	r28, 0x38	; 56
    c5ba:	cd bf       	out	0x3d, r28	; 61
    c5bc:	de bf       	out	0x3e, r29	; 62
    c5be:	8f ab       	std	Y+55, r24	; 0x37
    c5c0:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    c5c2:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    c5c4:	19 82       	std	Y+1, r1	; 0x01
    c5c6:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    c5c8:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    c5ca:	80 91 31 40 	lds	r24, 0x4031	; 0x804031 <_ZL14g_bus_disabled>
    c5ce:	88 23       	and	r24, r24
    c5d0:	11 f0       	breq	.+4      	; 0xc5d6 <sb_send_string+0x26>
	{
		return( true);
    c5d2:	81 e0       	ldi	r24, 0x01	; 1
    c5d4:	70 c0       	rjmp	.+224    	; 0xc6b6 <sb_send_string+0x106>
	}

	if(str == NULL)
    c5d6:	8f a9       	ldd	r24, Y+55	; 0x37
    c5d8:	98 ad       	ldd	r25, Y+56	; 0x38
    c5da:	89 2b       	or	r24, r25
    c5dc:	11 f4       	brne	.+4      	; 0xc5e2 <sb_send_string+0x32>
	{
		return( true);
    c5de:	81 e0       	ldi	r24, 0x01	; 1
    c5e0:	6a c0       	rjmp	.+212    	; 0xc6b6 <sb_send_string+0x106>
	}

	if(!*str)
    c5e2:	8f a9       	ldd	r24, Y+55	; 0x37
    c5e4:	98 ad       	ldd	r25, Y+56	; 0x38
    c5e6:	fc 01       	movw	r30, r24
    c5e8:	80 81       	ld	r24, Z
    c5ea:	88 23       	and	r24, r24
    c5ec:	11 f4       	brne	.+4      	; 0xc5f2 <sb_send_string+0x42>
	{
		return(true);
    c5ee:	81 e0       	ldi	r24, 0x01	; 1
    c5f0:	62 c0       	rjmp	.+196    	; 0xc6b6 <sb_send_string+0x106>
	}

	length = strlen(str);
    c5f2:	8f a9       	ldd	r24, Y+55	; 0x37
    c5f4:	98 ad       	ldd	r25, Y+56	; 0x38
    c5f6:	0e 94 ef 7b 	call	0xf7de	; 0xf7de <strlen>
    c5fa:	8d 83       	std	Y+5, r24	; 0x05
    c5fc:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    c5fe:	2d 81       	ldd	r18, Y+5	; 0x05
    c600:	3e 81       	ldd	r19, Y+6	; 0x06
    c602:	89 81       	ldd	r24, Y+1	; 0x01
    c604:	9a 81       	ldd	r25, Y+2	; 0x02
    c606:	a9 01       	movw	r20, r18
    c608:	48 1b       	sub	r20, r24
    c60a:	59 0b       	sbc	r21, r25
    c60c:	ca 01       	movw	r24, r20
    c60e:	8f 83       	std	Y+7, r24	; 0x07
    c610:	98 87       	std	Y+8, r25	; 0x08
    c612:	89 e2       	ldi	r24, 0x29	; 41
    c614:	90 e0       	ldi	r25, 0x00	; 0
    c616:	89 87       	std	Y+9, r24	; 0x09
    c618:	9a 87       	std	Y+10, r25	; 0x0a
    c61a:	2f 81       	ldd	r18, Y+7	; 0x07
    c61c:	38 85       	ldd	r19, Y+8	; 0x08
    c61e:	89 85       	ldd	r24, Y+9	; 0x09
    c620:	9a 85       	ldd	r25, Y+10	; 0x0a
    c622:	28 17       	cp	r18, r24
    c624:	39 07       	cpc	r19, r25
    c626:	18 f4       	brcc	.+6      	; 0xc62e <sb_send_string+0x7e>
    c628:	8f 81       	ldd	r24, Y+7	; 0x07
    c62a:	98 85       	ldd	r25, Y+8	; 0x08
    c62c:	02 c0       	rjmp	.+4      	; 0xc632 <sb_send_string+0x82>
    c62e:	89 85       	ldd	r24, Y+9	; 0x09
    c630:	9a 85       	ldd	r25, Y+10	; 0x0a
    c632:	8b 87       	std	Y+11, r24	; 0x0b
    c634:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    c636:	2f a9       	ldd	r18, Y+55	; 0x37
    c638:	38 ad       	ldd	r19, Y+56	; 0x38
    c63a:	89 81       	ldd	r24, Y+1	; 0x01
    c63c:	9a 81       	ldd	r25, Y+2	; 0x02
    c63e:	28 0f       	add	r18, r24
    c640:	39 1f       	adc	r19, r25
    c642:	4b 85       	ldd	r20, Y+11	; 0x0b
    c644:	5c 85       	ldd	r21, Y+12	; 0x0c
    c646:	ce 01       	movw	r24, r28
    c648:	0d 96       	adiw	r24, 0x0d	; 13
    c64a:	b9 01       	movw	r22, r18
    c64c:	0e 94 f8 7b 	call	0xf7f0	; 0xf7f0 <strncpy>

		buf[lengthToSend] = '\0';
    c650:	9e 01       	movw	r18, r28
    c652:	23 5f       	subi	r18, 0xF3	; 243
    c654:	3f 4f       	sbci	r19, 0xFF	; 255
    c656:	8b 85       	ldd	r24, Y+11	; 0x0b
    c658:	9c 85       	ldd	r25, Y+12	; 0x0c
    c65a:	82 0f       	add	r24, r18
    c65c:	93 1f       	adc	r25, r19
    c65e:	fc 01       	movw	r30, r24
    c660:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    c662:	ce 01       	movw	r24, r28
    c664:	0d 96       	adiw	r24, 0x0d	; 13
    c666:	0e 94 3e 62 	call	0xc47c	; 0xc47c <_Z19serialbus_send_textPc>
    c66a:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    c66c:	9b 81       	ldd	r25, Y+3	; 0x03
    c66e:	81 e0       	ldi	r24, 0x01	; 1
    c670:	89 27       	eor	r24, r25
    c672:	88 23       	and	r24, r24
    c674:	29 f0       	breq	.+10     	; 0xc680 <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    c676:	0e 94 55 61 	call	0xc2aa	; 0xc2aa <serialbusTxInProgress>
    c67a:	88 23       	and	r24, r24
    c67c:	09 f0       	breq	.+2      	; 0xc680 <sb_send_string+0xd0>
    c67e:	fb cf       	rjmp	.-10     	; 0xc676 <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    c680:	29 81       	ldd	r18, Y+1	; 0x01
    c682:	3a 81       	ldd	r19, Y+2	; 0x02
    c684:	8b 85       	ldd	r24, Y+11	; 0x0b
    c686:	9c 85       	ldd	r25, Y+12	; 0x0c
    c688:	82 0f       	add	r24, r18
    c68a:	93 1f       	adc	r25, r19
    c68c:	89 83       	std	Y+1, r24	; 0x01
    c68e:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    c690:	8b 81       	ldd	r24, Y+3	; 0x03
    c692:	88 23       	and	r24, r24
    c694:	39 f4       	brne	.+14     	; 0xc6a4 <sb_send_string+0xf4>
    c696:	29 81       	ldd	r18, Y+1	; 0x01
    c698:	3a 81       	ldd	r19, Y+2	; 0x02
    c69a:	8d 81       	ldd	r24, Y+5	; 0x05
    c69c:	9e 81       	ldd	r25, Y+6	; 0x06
    c69e:	28 17       	cp	r18, r24
    c6a0:	39 07       	cpc	r19, r25
    c6a2:	10 f0       	brcs	.+4      	; 0xc6a8 <sb_send_string+0xf8>
    c6a4:	81 e0       	ldi	r24, 0x01	; 1
    c6a6:	01 c0       	rjmp	.+2      	; 0xc6aa <sb_send_string+0xfa>
    c6a8:	80 e0       	ldi	r24, 0x00	; 0
    c6aa:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    c6ac:	8c 81       	ldd	r24, Y+4	; 0x04
    c6ae:	88 23       	and	r24, r24
    c6b0:	09 f4       	brne	.+2      	; 0xc6b4 <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    c6b2:	a5 cf       	rjmp	.-182    	; 0xc5fe <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    c6b4:	8b 81       	ldd	r24, Y+3	; 0x03
}
    c6b6:	e8 96       	adiw	r28, 0x38	; 56
    c6b8:	cd bf       	out	0x3d, r28	; 61
    c6ba:	de bf       	out	0x3e, r29	; 62
    c6bc:	df 91       	pop	r29
    c6be:	cf 91       	pop	r28
    c6c0:	08 95       	ret

0000c6c2 <si5351_init>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    c6c2:	cf 93       	push	r28
    c6c4:	df 93       	push	r29
    c6c6:	cd b7       	in	r28, 0x3d	; 61
    c6c8:	de b7       	in	r29, 0x3e	; 62
    c6ca:	28 97       	sbiw	r28, 0x08	; 8
    c6cc:	cd bf       	out	0x3d, r28	; 61
    c6ce:	de bf       	out	0x3e, r29	; 62
    c6d0:	8c 83       	std	Y+4, r24	; 0x04
    c6d2:	4d 83       	std	Y+5, r20	; 0x05
    c6d4:	5e 83       	std	Y+6, r21	; 0x06
    c6d6:	6f 83       	std	Y+7, r22	; 0x07
    c6d8:	78 87       	std	Y+8, r23	; 0x08
    c6da:	0e 94 1e 50 	call	0xa03c	; 0xa03c <I2C_1_Init>
    c6de:	10 92 ad 4a 	sts	0x4AAD, r1	; 0x804aad <_ZL8freqVCOB>
    c6e2:	10 92 ae 4a 	sts	0x4AAE, r1	; 0x804aae <_ZL8freqVCOB+0x1>
    c6e6:	10 92 af 4a 	sts	0x4AAF, r1	; 0x804aaf <_ZL8freqVCOB+0x2>
    c6ea:	10 92 b0 4a 	sts	0x4AB0, r1	; 0x804ab0 <_ZL8freqVCOB+0x3>
    c6ee:	80 e4       	ldi	r24, 0x40	; 64
    c6f0:	98 e7       	ldi	r25, 0x78	; 120
    c6f2:	ad e7       	ldi	r26, 0x7D	; 125
    c6f4:	b1 e0       	ldi	r27, 0x01	; 1
    c6f6:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <_ZL9xtal_freq>
    c6fa:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <_ZL9xtal_freq+0x1>
    c6fe:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <_ZL9xtal_freq+0x2>
    c702:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <_ZL9xtal_freq+0x3>
    c706:	10 92 b1 4a 	sts	0x4AB1, r1	; 0x804ab1 <_ZL17enabledClocksMask>
    c70a:	8f ef       	ldi	r24, 0xFF	; 255
    c70c:	8a 83       	std	Y+2, r24	; 0x02
    c70e:	ce 01       	movw	r24, r28
    c710:	02 96       	adiw	r24, 0x02	; 2
    c712:	41 e0       	ldi	r20, 0x01	; 1
    c714:	bc 01       	movw	r22, r24
    c716:	83 e0       	ldi	r24, 0x03	; 3
    c718:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c71c:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ11si5351_initE3err>
    c720:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c724:	88 23       	and	r24, r24
    c726:	19 f0       	breq	.+6      	; 0xc72e <si5351_init+0x6c>
    c728:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c72c:	92 c0       	rjmp	.+292    	; 0xc852 <si5351_init+0x190>
    c72e:	8c ec       	ldi	r24, 0xCC	; 204
    c730:	8a 83       	std	Y+2, r24	; 0x02
    c732:	ce 01       	movw	r24, r28
    c734:	02 96       	adiw	r24, 0x02	; 2
    c736:	41 e0       	ldi	r20, 0x01	; 1
    c738:	bc 01       	movw	r22, r24
    c73a:	80 e1       	ldi	r24, 0x10	; 16
    c73c:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c740:	98 2f       	mov	r25, r24
    c742:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c746:	89 2b       	or	r24, r25
    c748:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ11si5351_initE3err>
    c74c:	ce 01       	movw	r24, r28
    c74e:	02 96       	adiw	r24, 0x02	; 2
    c750:	41 e0       	ldi	r20, 0x01	; 1
    c752:	bc 01       	movw	r22, r24
    c754:	81 e1       	ldi	r24, 0x11	; 17
    c756:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c75a:	98 2f       	mov	r25, r24
    c75c:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c760:	89 2b       	or	r24, r25
    c762:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ11si5351_initE3err>
    c766:	ce 01       	movw	r24, r28
    c768:	02 96       	adiw	r24, 0x02	; 2
    c76a:	41 e0       	ldi	r20, 0x01	; 1
    c76c:	bc 01       	movw	r22, r24
    c76e:	82 e1       	ldi	r24, 0x12	; 18
    c770:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c774:	98 2f       	mov	r25, r24
    c776:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c77a:	89 2b       	or	r24, r25
    c77c:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ11si5351_initE3err>
    c780:	82 e1       	ldi	r24, 0x12	; 18
    c782:	89 83       	std	Y+1, r24	; 0x01
    c784:	99 81       	ldd	r25, Y+1	; 0x01
    c786:	8c 81       	ldd	r24, Y+4	; 0x04
    c788:	89 2b       	or	r24, r25
    c78a:	89 83       	std	Y+1, r24	; 0x01
    c78c:	89 81       	ldd	r24, Y+1	; 0x01
    c78e:	8a 83       	std	Y+2, r24	; 0x02
    c790:	ce 01       	movw	r24, r28
    c792:	02 96       	adiw	r24, 0x02	; 2
    c794:	41 e0       	ldi	r20, 0x01	; 1
    c796:	bc 01       	movw	r22, r24
    c798:	87 eb       	ldi	r24, 0xB7	; 183
    c79a:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c79e:	98 2f       	mov	r25, r24
    c7a0:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c7a4:	89 2b       	or	r24, r25
    c7a6:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ11si5351_initE3err>
    c7aa:	8d 81       	ldd	r24, Y+5	; 0x05
    c7ac:	9e 81       	ldd	r25, Y+6	; 0x06
    c7ae:	af 81       	ldd	r26, Y+7	; 0x07
    c7b0:	b8 85       	ldd	r27, Y+8	; 0x08
    c7b2:	89 2b       	or	r24, r25
    c7b4:	8a 2b       	or	r24, r26
    c7b6:	8b 2b       	or	r24, r27
    c7b8:	41 f4       	brne	.+16     	; 0xc7ca <si5351_init+0x108>
    c7ba:	80 e4       	ldi	r24, 0x40	; 64
    c7bc:	98 e7       	ldi	r25, 0x78	; 120
    c7be:	ad e7       	ldi	r26, 0x7D	; 125
    c7c0:	b1 e0       	ldi	r27, 0x01	; 1
    c7c2:	8d 83       	std	Y+5, r24	; 0x05
    c7c4:	9e 83       	std	Y+6, r25	; 0x06
    c7c6:	af 83       	std	Y+7, r26	; 0x07
    c7c8:	b8 87       	std	Y+8, r27	; 0x08
    c7ca:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <_ZL9xtal_freq>
    c7ce:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <_ZL9xtal_freq+0x1>
    c7d2:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <_ZL9xtal_freq+0x2>
    c7d6:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <_ZL9xtal_freq+0x3>
    c7da:	2d 81       	ldd	r18, Y+5	; 0x05
    c7dc:	3e 81       	ldd	r19, Y+6	; 0x06
    c7de:	4f 81       	ldd	r20, Y+7	; 0x07
    c7e0:	58 85       	ldd	r21, Y+8	; 0x08
    c7e2:	28 17       	cp	r18, r24
    c7e4:	39 07       	cpc	r19, r25
    c7e6:	4a 07       	cpc	r20, r26
    c7e8:	5b 07       	cpc	r21, r27
    c7ea:	59 f1       	breq	.+86     	; 0xc842 <si5351_init+0x180>
    c7ec:	ce 01       	movw	r24, r28
    c7ee:	02 96       	adiw	r24, 0x02	; 2
    c7f0:	41 e0       	ldi	r20, 0x01	; 1
    c7f2:	bc 01       	movw	r22, r24
    c7f4:	8f e0       	ldi	r24, 0x0F	; 15
    c7f6:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    c7fa:	88 23       	and	r24, r24
    c7fc:	11 f0       	breq	.+4      	; 0xc802 <si5351_init+0x140>
    c7fe:	81 e0       	ldi	r24, 0x01	; 1
    c800:	28 c0       	rjmp	.+80     	; 0xc852 <si5351_init+0x190>
    c802:	8a 81       	ldd	r24, Y+2	; 0x02
    c804:	89 83       	std	Y+1, r24	; 0x01
    c806:	89 81       	ldd	r24, Y+1	; 0x01
    c808:	8f 73       	andi	r24, 0x3F	; 63
    c80a:	89 83       	std	Y+1, r24	; 0x01
    c80c:	8d 81       	ldd	r24, Y+5	; 0x05
    c80e:	9e 81       	ldd	r25, Y+6	; 0x06
    c810:	af 81       	ldd	r26, Y+7	; 0x07
    c812:	b8 85       	ldd	r27, Y+8	; 0x08
    c814:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <_ZL9xtal_freq>
    c818:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <_ZL9xtal_freq+0x1>
    c81c:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <_ZL9xtal_freq+0x2>
    c820:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <_ZL9xtal_freq+0x3>
    c824:	89 81       	ldd	r24, Y+1	; 0x01
    c826:	8a 83       	std	Y+2, r24	; 0x02
    c828:	ce 01       	movw	r24, r28
    c82a:	02 96       	adiw	r24, 0x02	; 2
    c82c:	41 e0       	ldi	r20, 0x01	; 1
    c82e:	bc 01       	movw	r22, r24
    c830:	8f e0       	ldi	r24, 0x0F	; 15
    c832:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c836:	98 2f       	mov	r25, r24
    c838:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c83c:	89 2b       	or	r24, r25
    c83e:	80 93 bf 4a 	sts	0x4ABF, r24	; 0x804abf <_ZZ11si5351_initE3err>
    c842:	90 91 bf 4a 	lds	r25, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c846:	81 e0       	ldi	r24, 0x01	; 1
    c848:	89 27       	eor	r24, r25
    c84a:	80 93 be 4a 	sts	0x4ABE, r24	; 0x804abe <g_si5351_initialized>
    c84e:	80 91 bf 4a 	lds	r24, 0x4ABF	; 0x804abf <_ZZ11si5351_initE3err>
    c852:	28 96       	adiw	r28, 0x08	; 8
    c854:	cd bf       	out	0x3d, r28	; 61
    c856:	de bf       	out	0x3e, r29	; 62
    c858:	df 91       	pop	r29
    c85a:	cf 91       	pop	r28
    c85c:	08 95       	ret

0000c85e <si5351_set_freq>:
    c85e:	8f 92       	push	r8
    c860:	af 92       	push	r10
    c862:	cf 92       	push	r12
    c864:	df 92       	push	r13
    c866:	ef 92       	push	r14
    c868:	ff 92       	push	r15
    c86a:	0f 93       	push	r16
    c86c:	1f 93       	push	r17
    c86e:	cf 93       	push	r28
    c870:	df 93       	push	r29
    c872:	cd b7       	in	r28, 0x3d	; 61
    c874:	de b7       	in	r29, 0x3e	; 62
    c876:	6d 97       	sbiw	r28, 0x1d	; 29
    c878:	cd bf       	out	0x3d, r28	; 61
    c87a:	de bf       	out	0x3e, r29	; 62
    c87c:	68 8f       	std	Y+24, r22	; 0x18
    c87e:	79 8f       	std	Y+25, r23	; 0x19
    c880:	8a 8f       	std	Y+26, r24	; 0x1a
    c882:	9b 8f       	std	Y+27, r25	; 0x1b
    c884:	4c 8f       	std	Y+28, r20	; 0x1c
    c886:	2d 8f       	std	Y+29, r18	; 0x1d
    c888:	19 82       	std	Y+1, r1	; 0x01
    c88a:	1a 82       	std	Y+2, r1	; 0x02
    c88c:	1b 82       	std	Y+3, r1	; 0x03
    c88e:	1c 82       	std	Y+4, r1	; 0x04
    c890:	1f 82       	std	Y+7, r1	; 0x07
    c892:	1c 8a       	std	Y+20, r1	; 0x14
    c894:	1d 8a       	std	Y+21, r1	; 0x15
    c896:	90 91 be 4a 	lds	r25, 0x4ABE	; 0x804abe <g_si5351_initialized>
    c89a:	81 e0       	ldi	r24, 0x01	; 1
    c89c:	89 27       	eor	r24, r25
    c89e:	88 23       	and	r24, r24
    c8a0:	11 f0       	breq	.+4      	; 0xc8a6 <si5351_set_freq+0x48>
    c8a2:	81 e0       	ldi	r24, 0x01	; 1
    c8a4:	6f c1       	rjmp	.+734    	; 0xcb84 <si5351_set_freq+0x326>
    c8a6:	88 8d       	ldd	r24, Y+24	; 0x18
    c8a8:	99 8d       	ldd	r25, Y+25	; 0x19
    c8aa:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c8ac:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c8ae:	80 34       	cpi	r24, 0x40	; 64
    c8b0:	92 44       	sbci	r25, 0x42	; 66
    c8b2:	af 40       	sbci	r26, 0x0F	; 15
    c8b4:	b1 05       	cpc	r27, r1
    c8b6:	08 f1       	brcs	.+66     	; 0xc8fa <si5351_set_freq+0x9c>
    c8b8:	88 8d       	ldd	r24, Y+24	; 0x18
    c8ba:	99 8d       	ldd	r25, Y+25	; 0x19
    c8bc:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c8be:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c8c0:	24 e6       	ldi	r18, 0x64	; 100
    c8c2:	30 e0       	ldi	r19, 0x00	; 0
    c8c4:	40 e0       	ldi	r20, 0x00	; 0
    c8c6:	50 e0       	ldi	r21, 0x00	; 0
    c8c8:	bc 01       	movw	r22, r24
    c8ca:	cd 01       	movw	r24, r26
    c8cc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    c8d0:	da 01       	movw	r26, r20
    c8d2:	c9 01       	movw	r24, r18
    c8d4:	88 8f       	std	Y+24, r24	; 0x18
    c8d6:	99 8f       	std	Y+25, r25	; 0x19
    c8d8:	aa 8f       	std	Y+26, r26	; 0x1a
    c8da:	bb 8f       	std	Y+27, r27	; 0x1b
    c8dc:	28 8d       	ldd	r18, Y+24	; 0x18
    c8de:	39 8d       	ldd	r19, Y+25	; 0x19
    c8e0:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c8e2:	5b 8d       	ldd	r21, Y+27	; 0x1b
    c8e4:	84 e6       	ldi	r24, 0x64	; 100
    c8e6:	90 e0       	ldi	r25, 0x00	; 0
    c8e8:	dc 01       	movw	r26, r24
    c8ea:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    c8ee:	dc 01       	movw	r26, r24
    c8f0:	cb 01       	movw	r24, r22
    c8f2:	88 8f       	std	Y+24, r24	; 0x18
    c8f4:	99 8f       	std	Y+25, r25	; 0x19
    c8f6:	aa 8f       	std	Y+26, r26	; 0x1a
    c8f8:	bb 8f       	std	Y+27, r27	; 0x1b
    c8fa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c8fc:	88 2f       	mov	r24, r24
    c8fe:	90 e0       	ldi	r25, 0x00	; 0
    c900:	81 30       	cpi	r24, 0x01	; 1
    c902:	91 05       	cpc	r25, r1
    c904:	e9 f0       	breq	.+58     	; 0xc940 <si5351_set_freq+0xe2>
    c906:	82 30       	cpi	r24, 0x02	; 2
    c908:	91 05       	cpc	r25, r1
    c90a:	09 f4       	brne	.+2      	; 0xc90e <si5351_set_freq+0xb0>
    c90c:	3f c0       	rjmp	.+126    	; 0xc98c <si5351_set_freq+0x12e>
    c90e:	89 2b       	or	r24, r25
    c910:	09 f0       	breq	.+2      	; 0xc914 <si5351_set_freq+0xb6>
    c912:	62 c0       	rjmp	.+196    	; 0xc9d8 <si5351_set_freq+0x17a>
    c914:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    c918:	81 60       	ori	r24, 0x01	; 1
    c91a:	80 93 b1 4a 	sts	0x4AB1, r24	; 0x804ab1 <_ZL17enabledClocksMask>
    c91e:	80 e1       	ldi	r24, 0x10	; 16
    c920:	8e 83       	std	Y+6, r24	; 0x06
    c922:	81 e0       	ldi	r24, 0x01	; 1
    c924:	8d 83       	std	Y+5, r24	; 0x05
    c926:	88 8d       	ldd	r24, Y+24	; 0x18
    c928:	99 8d       	ldd	r25, Y+25	; 0x19
    c92a:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c92c:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c92e:	80 93 b2 4a 	sts	0x4AB2, r24	; 0x804ab2 <_ZL9clock_out>
    c932:	90 93 b3 4a 	sts	0x4AB3, r25	; 0x804ab3 <_ZL9clock_out+0x1>
    c936:	a0 93 b4 4a 	sts	0x4AB4, r26	; 0x804ab4 <_ZL9clock_out+0x2>
    c93a:	b0 93 b5 4a 	sts	0x4AB5, r27	; 0x804ab5 <_ZL9clock_out+0x3>
    c93e:	4e c0       	rjmp	.+156    	; 0xc9dc <si5351_set_freq+0x17e>
    c940:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    c944:	82 60       	ori	r24, 0x02	; 2
    c946:	80 93 b1 4a 	sts	0x4AB1, r24	; 0x804ab1 <_ZL17enabledClocksMask>
    c94a:	81 e1       	ldi	r24, 0x11	; 17
    c94c:	8e 83       	std	Y+6, r24	; 0x06
    c94e:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    c952:	80 95       	com	r24
    c954:	8a 6f       	ori	r24, 0xFA	; 250
    c956:	8e 8b       	std	Y+22, r24	; 0x16
    c958:	ce 01       	movw	r24, r28
    c95a:	46 96       	adiw	r24, 0x16	; 22
    c95c:	41 e0       	ldi	r20, 0x01	; 1
    c95e:	bc 01       	movw	r22, r24
    c960:	83 e0       	ldi	r24, 0x03	; 3
    c962:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c966:	88 23       	and	r24, r24
    c968:	11 f0       	breq	.+4      	; 0xc96e <si5351_set_freq+0x110>
    c96a:	81 e0       	ldi	r24, 0x01	; 1
    c96c:	0b c1       	rjmp	.+534    	; 0xcb84 <si5351_set_freq+0x326>
    c96e:	82 e0       	ldi	r24, 0x02	; 2
    c970:	8d 83       	std	Y+5, r24	; 0x05
    c972:	88 8d       	ldd	r24, Y+24	; 0x18
    c974:	99 8d       	ldd	r25, Y+25	; 0x19
    c976:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c978:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c97a:	80 93 b6 4a 	sts	0x4AB6, r24	; 0x804ab6 <_ZL9clock_out+0x4>
    c97e:	90 93 b7 4a 	sts	0x4AB7, r25	; 0x804ab7 <_ZL9clock_out+0x5>
    c982:	a0 93 b8 4a 	sts	0x4AB8, r26	; 0x804ab8 <_ZL9clock_out+0x6>
    c986:	b0 93 b9 4a 	sts	0x4AB9, r27	; 0x804ab9 <_ZL9clock_out+0x7>
    c98a:	28 c0       	rjmp	.+80     	; 0xc9dc <si5351_set_freq+0x17e>
    c98c:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    c990:	84 60       	ori	r24, 0x04	; 4
    c992:	80 93 b1 4a 	sts	0x4AB1, r24	; 0x804ab1 <_ZL17enabledClocksMask>
    c996:	82 e1       	ldi	r24, 0x12	; 18
    c998:	8e 83       	std	Y+6, r24	; 0x06
    c99a:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    c99e:	80 95       	com	r24
    c9a0:	8c 6f       	ori	r24, 0xFC	; 252
    c9a2:	8e 8b       	std	Y+22, r24	; 0x16
    c9a4:	ce 01       	movw	r24, r28
    c9a6:	46 96       	adiw	r24, 0x16	; 22
    c9a8:	41 e0       	ldi	r20, 0x01	; 1
    c9aa:	bc 01       	movw	r22, r24
    c9ac:	83 e0       	ldi	r24, 0x03	; 3
    c9ae:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    c9b2:	88 23       	and	r24, r24
    c9b4:	11 f0       	breq	.+4      	; 0xc9ba <si5351_set_freq+0x15c>
    c9b6:	81 e0       	ldi	r24, 0x01	; 1
    c9b8:	e5 c0       	rjmp	.+458    	; 0xcb84 <si5351_set_freq+0x326>
    c9ba:	82 e0       	ldi	r24, 0x02	; 2
    c9bc:	8d 83       	std	Y+5, r24	; 0x05
    c9be:	88 8d       	ldd	r24, Y+24	; 0x18
    c9c0:	99 8d       	ldd	r25, Y+25	; 0x19
    c9c2:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c9c4:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c9c6:	80 93 ba 4a 	sts	0x4ABA, r24	; 0x804aba <_ZL9clock_out+0x8>
    c9ca:	90 93 bb 4a 	sts	0x4ABB, r25	; 0x804abb <_ZL9clock_out+0x9>
    c9ce:	a0 93 bc 4a 	sts	0x4ABC, r26	; 0x804abc <_ZL9clock_out+0xa>
    c9d2:	b0 93 bd 4a 	sts	0x4ABD, r27	; 0x804abd <_ZL9clock_out+0xb>
    c9d6:	02 c0       	rjmp	.+4      	; 0xc9dc <si5351_set_freq+0x17e>
    c9d8:	81 e0       	ldi	r24, 0x01	; 1
    c9da:	d4 c0       	rjmp	.+424    	; 0xcb84 <si5351_set_freq+0x326>
    c9dc:	8d 81       	ldd	r24, Y+5	; 0x05
    c9de:	81 30       	cpi	r24, 0x01	; 1
    c9e0:	61 f0       	breq	.+24     	; 0xc9fa <si5351_set_freq+0x19c>
    c9e2:	80 91 ad 4a 	lds	r24, 0x4AAD	; 0x804aad <_ZL8freqVCOB>
    c9e6:	90 91 ae 4a 	lds	r25, 0x4AAE	; 0x804aae <_ZL8freqVCOB+0x1>
    c9ea:	a0 91 af 4a 	lds	r26, 0x4AAF	; 0x804aaf <_ZL8freqVCOB+0x2>
    c9ee:	b0 91 b0 4a 	lds	r27, 0x4AB0	; 0x804ab0 <_ZL8freqVCOB+0x3>
    c9f2:	89 2b       	or	r24, r25
    c9f4:	8a 2b       	or	r24, r26
    c9f6:	8b 2b       	or	r24, r27
    c9f8:	c9 f4       	brne	.+50     	; 0xca2c <si5351_set_freq+0x1ce>
    c9fa:	be 01       	movw	r22, r28
    c9fc:	6b 5e       	subi	r22, 0xEB	; 235
    c9fe:	7f 4f       	sbci	r23, 0xFF	; 255
    ca00:	9e 01       	movw	r18, r28
    ca02:	2c 5e       	subi	r18, 0xEC	; 236
    ca04:	3f 4f       	sbci	r19, 0xFF	; 255
    ca06:	ae 01       	movw	r20, r28
    ca08:	48 5f       	subi	r20, 0xF8	; 248
    ca0a:	5f 4f       	sbci	r21, 0xFF	; 255
    ca0c:	88 8d       	ldd	r24, Y+24	; 0x18
    ca0e:	99 8d       	ldd	r25, Y+25	; 0x19
    ca10:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ca12:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ca14:	8b 01       	movw	r16, r22
    ca16:	bc 01       	movw	r22, r24
    ca18:	cd 01       	movw	r24, r26
    ca1a:	0e 94 da 68 	call	0xd1b4	; 0xd1b4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    ca1e:	dc 01       	movw	r26, r24
    ca20:	cb 01       	movw	r24, r22
    ca22:	89 83       	std	Y+1, r24	; 0x01
    ca24:	9a 83       	std	Y+2, r25	; 0x02
    ca26:	ab 83       	std	Y+3, r26	; 0x03
    ca28:	bc 83       	std	Y+4, r27	; 0x04
    ca2a:	18 c0       	rjmp	.+48     	; 0xca5c <si5351_set_freq+0x1fe>
    ca2c:	be 01       	movw	r22, r28
    ca2e:	6b 5e       	subi	r22, 0xEB	; 235
    ca30:	7f 4f       	sbci	r23, 0xFF	; 255
    ca32:	9e 01       	movw	r18, r28
    ca34:	2c 5e       	subi	r18, 0xEC	; 236
    ca36:	3f 4f       	sbci	r19, 0xFF	; 255
    ca38:	ae 01       	movw	r20, r28
    ca3a:	48 5f       	subi	r20, 0xF8	; 248
    ca3c:	5f 4f       	sbci	r21, 0xFF	; 255
    ca3e:	88 8d       	ldd	r24, Y+24	; 0x18
    ca40:	99 8d       	ldd	r25, Y+25	; 0x19
    ca42:	aa 8d       	ldd	r26, Y+26	; 0x1a
    ca44:	bb 8d       	ldd	r27, Y+27	; 0x1b
    ca46:	8b 01       	movw	r16, r22
    ca48:	bc 01       	movw	r22, r24
    ca4a:	cd 01       	movw	r24, r26
    ca4c:	0e 94 e4 69 	call	0xd3c8	; 0xd3c8 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    ca50:	dc 01       	movw	r26, r24
    ca52:	cb 01       	movw	r24, r22
    ca54:	88 8f       	std	Y+24, r24	; 0x18
    ca56:	99 8f       	std	Y+25, r25	; 0x19
    ca58:	aa 8f       	std	Y+26, r26	; 0x1a
    ca5a:	bb 8f       	std	Y+27, r27	; 0x1b
    ca5c:	6d 81       	ldd	r22, Y+5	; 0x05
    ca5e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    ca60:	0e 94 c9 6b 	call	0xd792	; 0xd792 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    ca64:	88 23       	and	r24, r24
    ca66:	11 f0       	breq	.+4      	; 0xca6c <si5351_set_freq+0x20e>
    ca68:	81 e0       	ldi	r24, 0x01	; 1
    ca6a:	8c c0       	rjmp	.+280    	; 0xcb84 <si5351_set_freq+0x326>
    ca6c:	8d 89       	ldd	r24, Y+21	; 0x15
    ca6e:	9c 89       	ldd	r25, Y+20	; 0x14
    ca70:	8f 93       	push	r24
    ca72:	8f 80       	ldd	r8, Y+7	; 0x07
    ca74:	a9 2e       	mov	r10, r25
    ca76:	c8 84       	ldd	r12, Y+8	; 0x08
    ca78:	d9 84       	ldd	r13, Y+9	; 0x09
    ca7a:	ea 84       	ldd	r14, Y+10	; 0x0a
    ca7c:	fb 84       	ldd	r15, Y+11	; 0x0b
    ca7e:	0c 85       	ldd	r16, Y+12	; 0x0c
    ca80:	1d 85       	ldd	r17, Y+13	; 0x0d
    ca82:	2e 85       	ldd	r18, Y+14	; 0x0e
    ca84:	3f 85       	ldd	r19, Y+15	; 0x0f
    ca86:	48 89       	ldd	r20, Y+16	; 0x10
    ca88:	59 89       	ldd	r21, Y+17	; 0x11
    ca8a:	6a 89       	ldd	r22, Y+18	; 0x12
    ca8c:	7b 89       	ldd	r23, Y+19	; 0x13
    ca8e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    ca90:	0e 94 06 6c 	call	0xd80c	; 0xd80c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    ca94:	0f 90       	pop	r0
    ca96:	88 23       	and	r24, r24
    ca98:	11 f0       	breq	.+4      	; 0xca9e <si5351_set_freq+0x240>
    ca9a:	81 e0       	ldi	r24, 0x01	; 1
    ca9c:	73 c0       	rjmp	.+230    	; 0xcb84 <si5351_set_freq+0x326>
    ca9e:	89 81       	ldd	r24, Y+1	; 0x01
    caa0:	9a 81       	ldd	r25, Y+2	; 0x02
    caa2:	ab 81       	ldd	r26, Y+3	; 0x03
    caa4:	bc 81       	ldd	r27, Y+4	; 0x04
    caa6:	89 2b       	or	r24, r25
    caa8:	8a 2b       	or	r24, r26
    caaa:	8b 2b       	or	r24, r27
    caac:	49 f0       	breq	.+18     	; 0xcac0 <si5351_set_freq+0x262>
    caae:	89 81       	ldd	r24, Y+1	; 0x01
    cab0:	9a 81       	ldd	r25, Y+2	; 0x02
    cab2:	ab 81       	ldd	r26, Y+3	; 0x03
    cab4:	bc 81       	ldd	r27, Y+4	; 0x04
    cab6:	4d 81       	ldd	r20, Y+5	; 0x05
    cab8:	bc 01       	movw	r22, r24
    caba:	cd 01       	movw	r24, r26
    cabc:	0e 94 78 66 	call	0xccf0	; 0xccf0 <_Z7set_pllm10si5351_pll>
    cac0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cac2:	88 23       	and	r24, r24
    cac4:	71 f0       	breq	.+28     	; 0xcae2 <si5351_set_freq+0x284>
    cac6:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    caca:	8e 8b       	std	Y+22, r24	; 0x16
    cacc:	ce 01       	movw	r24, r28
    cace:	46 96       	adiw	r24, 0x16	; 22
    cad0:	41 e0       	ldi	r20, 0x01	; 1
    cad2:	bc 01       	movw	r22, r24
    cad4:	83 e0       	ldi	r24, 0x03	; 3
    cad6:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    cada:	88 23       	and	r24, r24
    cadc:	89 f0       	breq	.+34     	; 0xcb00 <si5351_set_freq+0x2a2>
    cade:	81 e0       	ldi	r24, 0x01	; 1
    cae0:	51 c0       	rjmp	.+162    	; 0xcb84 <si5351_set_freq+0x326>
    cae2:	80 91 b1 4a 	lds	r24, 0x4AB1	; 0x804ab1 <_ZL17enabledClocksMask>
    cae6:	80 95       	com	r24
    cae8:	8e 8b       	std	Y+22, r24	; 0x16
    caea:	ce 01       	movw	r24, r28
    caec:	46 96       	adiw	r24, 0x16	; 22
    caee:	41 e0       	ldi	r20, 0x01	; 1
    caf0:	bc 01       	movw	r22, r24
    caf2:	83 e0       	ldi	r24, 0x03	; 3
    caf4:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    caf8:	88 23       	and	r24, r24
    cafa:	11 f0       	breq	.+4      	; 0xcb00 <si5351_set_freq+0x2a2>
    cafc:	81 e0       	ldi	r24, 0x01	; 1
    cafe:	42 c0       	rjmp	.+132    	; 0xcb84 <si5351_set_freq+0x326>
    cb00:	8d 81       	ldd	r24, Y+5	; 0x05
    cb02:	81 30       	cpi	r24, 0x01	; 1
    cb04:	69 f4       	brne	.+26     	; 0xcb20 <si5351_set_freq+0x2c2>
    cb06:	8c e4       	ldi	r24, 0x4C	; 76
    cb08:	8e 8b       	std	Y+22, r24	; 0x16
    cb0a:	ce 01       	movw	r24, r28
    cb0c:	46 96       	adiw	r24, 0x16	; 22
    cb0e:	41 e0       	ldi	r20, 0x01	; 1
    cb10:	bc 01       	movw	r22, r24
    cb12:	8e 81       	ldd	r24, Y+6	; 0x06
    cb14:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    cb18:	88 23       	and	r24, r24
    cb1a:	99 f1       	breq	.+102    	; 0xcb82 <si5351_set_freq+0x324>
    cb1c:	81 e0       	ldi	r24, 0x01	; 1
    cb1e:	32 c0       	rjmp	.+100    	; 0xcb84 <si5351_set_freq+0x326>
    cb20:	8c 89       	ldd	r24, Y+20	; 0x14
    cb22:	88 23       	and	r24, r24
    cb24:	69 f0       	breq	.+26     	; 0xcb40 <si5351_set_freq+0x2e2>
    cb26:	8c e6       	ldi	r24, 0x6C	; 108
    cb28:	8e 8b       	std	Y+22, r24	; 0x16
    cb2a:	ce 01       	movw	r24, r28
    cb2c:	46 96       	adiw	r24, 0x16	; 22
    cb2e:	41 e0       	ldi	r20, 0x01	; 1
    cb30:	bc 01       	movw	r22, r24
    cb32:	8e 81       	ldd	r24, Y+6	; 0x06
    cb34:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    cb38:	88 23       	and	r24, r24
    cb3a:	79 f0       	breq	.+30     	; 0xcb5a <si5351_set_freq+0x2fc>
    cb3c:	81 e0       	ldi	r24, 0x01	; 1
    cb3e:	22 c0       	rjmp	.+68     	; 0xcb84 <si5351_set_freq+0x326>
    cb40:	8c e2       	ldi	r24, 0x2C	; 44
    cb42:	8e 8b       	std	Y+22, r24	; 0x16
    cb44:	ce 01       	movw	r24, r28
    cb46:	46 96       	adiw	r24, 0x16	; 22
    cb48:	41 e0       	ldi	r20, 0x01	; 1
    cb4a:	bc 01       	movw	r22, r24
    cb4c:	8e 81       	ldd	r24, Y+6	; 0x06
    cb4e:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    cb52:	88 23       	and	r24, r24
    cb54:	11 f0       	breq	.+4      	; 0xcb5a <si5351_set_freq+0x2fc>
    cb56:	81 e0       	ldi	r24, 0x01	; 1
    cb58:	15 c0       	rjmp	.+42     	; 0xcb84 <si5351_set_freq+0x326>
    cb5a:	89 81       	ldd	r24, Y+1	; 0x01
    cb5c:	9a 81       	ldd	r25, Y+2	; 0x02
    cb5e:	ab 81       	ldd	r26, Y+3	; 0x03
    cb60:	bc 81       	ldd	r27, Y+4	; 0x04
    cb62:	89 2b       	or	r24, r25
    cb64:	8a 2b       	or	r24, r26
    cb66:	8b 2b       	or	r24, r27
    cb68:	61 f0       	breq	.+24     	; 0xcb82 <si5351_set_freq+0x324>
    cb6a:	89 81       	ldd	r24, Y+1	; 0x01
    cb6c:	9a 81       	ldd	r25, Y+2	; 0x02
    cb6e:	ab 81       	ldd	r26, Y+3	; 0x03
    cb70:	bc 81       	ldd	r27, Y+4	; 0x04
    cb72:	80 93 ad 4a 	sts	0x4AAD, r24	; 0x804aad <_ZL8freqVCOB>
    cb76:	90 93 ae 4a 	sts	0x4AAE, r25	; 0x804aae <_ZL8freqVCOB+0x1>
    cb7a:	a0 93 af 4a 	sts	0x4AAF, r26	; 0x804aaf <_ZL8freqVCOB+0x2>
    cb7e:	b0 93 b0 4a 	sts	0x4AB0, r27	; 0x804ab0 <_ZL8freqVCOB+0x3>
    cb82:	80 e0       	ldi	r24, 0x00	; 0
    cb84:	6d 96       	adiw	r28, 0x1d	; 29
    cb86:	cd bf       	out	0x3d, r28	; 61
    cb88:	de bf       	out	0x3e, r29	; 62
    cb8a:	df 91       	pop	r29
    cb8c:	cf 91       	pop	r28
    cb8e:	1f 91       	pop	r17
    cb90:	0f 91       	pop	r16
    cb92:	ff 90       	pop	r15
    cb94:	ef 90       	pop	r14
    cb96:	df 90       	pop	r13
    cb98:	cf 90       	pop	r12
    cb9a:	af 90       	pop	r10
    cb9c:	8f 90       	pop	r8
    cb9e:	08 95       	ret

0000cba0 <si5351_clock_enable>:
    cba0:	cf 93       	push	r28
    cba2:	df 93       	push	r29
    cba4:	cd b7       	in	r28, 0x3d	; 61
    cba6:	de b7       	in	r29, 0x3e	; 62
    cba8:	25 97       	sbiw	r28, 0x05	; 5
    cbaa:	cd bf       	out	0x3d, r28	; 61
    cbac:	de bf       	out	0x3e, r29	; 62
    cbae:	8c 83       	std	Y+4, r24	; 0x04
    cbb0:	6d 83       	std	Y+5, r22	; 0x05
    cbb2:	ce 01       	movw	r24, r28
    cbb4:	02 96       	adiw	r24, 0x02	; 2
    cbb6:	41 e0       	ldi	r20, 0x01	; 1
    cbb8:	bc 01       	movw	r22, r24
    cbba:	83 e0       	ldi	r24, 0x03	; 3
    cbbc:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    cbc0:	88 23       	and	r24, r24
    cbc2:	11 f0       	breq	.+4      	; 0xcbc8 <si5351_clock_enable+0x28>
    cbc4:	8c ef       	ldi	r24, 0xFC	; 252
    cbc6:	31 c0       	rjmp	.+98     	; 0xcc2a <si5351_clock_enable+0x8a>
    cbc8:	8a 81       	ldd	r24, Y+2	; 0x02
    cbca:	89 83       	std	Y+1, r24	; 0x01
    cbcc:	8d 81       	ldd	r24, Y+5	; 0x05
    cbce:	88 23       	and	r24, r24
    cbd0:	81 f0       	breq	.+32     	; 0xcbf2 <si5351_clock_enable+0x52>
    cbd2:	8c 81       	ldd	r24, Y+4	; 0x04
    cbd4:	28 2f       	mov	r18, r24
    cbd6:	30 e0       	ldi	r19, 0x00	; 0
    cbd8:	81 e0       	ldi	r24, 0x01	; 1
    cbda:	90 e0       	ldi	r25, 0x00	; 0
    cbdc:	02 c0       	rjmp	.+4      	; 0xcbe2 <si5351_clock_enable+0x42>
    cbde:	88 0f       	add	r24, r24
    cbe0:	99 1f       	adc	r25, r25
    cbe2:	2a 95       	dec	r18
    cbe4:	e2 f7       	brpl	.-8      	; 0xcbde <si5351_clock_enable+0x3e>
    cbe6:	98 2f       	mov	r25, r24
    cbe8:	90 95       	com	r25
    cbea:	89 81       	ldd	r24, Y+1	; 0x01
    cbec:	89 23       	and	r24, r25
    cbee:	89 83       	std	Y+1, r24	; 0x01
    cbf0:	0e c0       	rjmp	.+28     	; 0xcc0e <si5351_clock_enable+0x6e>
    cbf2:	8c 81       	ldd	r24, Y+4	; 0x04
    cbf4:	28 2f       	mov	r18, r24
    cbf6:	30 e0       	ldi	r19, 0x00	; 0
    cbf8:	81 e0       	ldi	r24, 0x01	; 1
    cbfa:	90 e0       	ldi	r25, 0x00	; 0
    cbfc:	02 c0       	rjmp	.+4      	; 0xcc02 <si5351_clock_enable+0x62>
    cbfe:	88 0f       	add	r24, r24
    cc00:	99 1f       	adc	r25, r25
    cc02:	2a 95       	dec	r18
    cc04:	e2 f7       	brpl	.-8      	; 0xcbfe <si5351_clock_enable+0x5e>
    cc06:	98 2f       	mov	r25, r24
    cc08:	89 81       	ldd	r24, Y+1	; 0x01
    cc0a:	89 2b       	or	r24, r25
    cc0c:	89 83       	std	Y+1, r24	; 0x01
    cc0e:	89 81       	ldd	r24, Y+1	; 0x01
    cc10:	8a 83       	std	Y+2, r24	; 0x02
    cc12:	ce 01       	movw	r24, r28
    cc14:	02 96       	adiw	r24, 0x02	; 2
    cc16:	41 e0       	ldi	r20, 0x01	; 1
    cc18:	bc 01       	movw	r22, r24
    cc1a:	83 e0       	ldi	r24, 0x03	; 3
    cc1c:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    cc20:	88 23       	and	r24, r24
    cc22:	11 f0       	breq	.+4      	; 0xcc28 <si5351_clock_enable+0x88>
    cc24:	8c ef       	ldi	r24, 0xFC	; 252
    cc26:	01 c0       	rjmp	.+2      	; 0xcc2a <si5351_clock_enable+0x8a>
    cc28:	80 e0       	ldi	r24, 0x00	; 0
    cc2a:	25 96       	adiw	r28, 0x05	; 5
    cc2c:	cd bf       	out	0x3d, r28	; 61
    cc2e:	de bf       	out	0x3e, r29	; 62
    cc30:	df 91       	pop	r29
    cc32:	cf 91       	pop	r28
    cc34:	08 95       	ret

0000cc36 <si5351_drive_strength>:
    cc36:	cf 93       	push	r28
    cc38:	df 93       	push	r29
    cc3a:	cd b7       	in	r28, 0x3d	; 61
    cc3c:	de b7       	in	r29, 0x3e	; 62
    cc3e:	26 97       	sbiw	r28, 0x06	; 6
    cc40:	cd bf       	out	0x3d, r28	; 61
    cc42:	de bf       	out	0x3e, r29	; 62
    cc44:	8d 83       	std	Y+5, r24	; 0x05
    cc46:	6e 83       	std	Y+6, r22	; 0x06
    cc48:	83 e0       	ldi	r24, 0x03	; 3
    cc4a:	8a 83       	std	Y+2, r24	; 0x02
    cc4c:	8d 81       	ldd	r24, Y+5	; 0x05
    cc4e:	20 e1       	ldi	r18, 0x10	; 16
    cc50:	28 0f       	add	r18, r24
    cc52:	ce 01       	movw	r24, r28
    cc54:	03 96       	adiw	r24, 0x03	; 3
    cc56:	41 e0       	ldi	r20, 0x01	; 1
    cc58:	bc 01       	movw	r22, r24
    cc5a:	82 2f       	mov	r24, r18
    cc5c:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    cc60:	88 23       	and	r24, r24
    cc62:	11 f0       	breq	.+4      	; 0xcc68 <si5351_drive_strength+0x32>
    cc64:	8b ef       	ldi	r24, 0xFB	; 251
    cc66:	3e c0       	rjmp	.+124    	; 0xcce4 <si5351_drive_strength+0xae>
    cc68:	8b 81       	ldd	r24, Y+3	; 0x03
    cc6a:	89 83       	std	Y+1, r24	; 0x01
    cc6c:	8e 81       	ldd	r24, Y+6	; 0x06
    cc6e:	88 2f       	mov	r24, r24
    cc70:	90 e0       	ldi	r25, 0x00	; 0
    cc72:	81 30       	cpi	r24, 0x01	; 1
    cc74:	91 05       	cpc	r25, r1
    cc76:	81 f0       	breq	.+32     	; 0xcc98 <si5351_drive_strength+0x62>
    cc78:	82 30       	cpi	r24, 0x02	; 2
    cc7a:	91 05       	cpc	r25, r1
    cc7c:	1c f4       	brge	.+6      	; 0xcc84 <si5351_drive_strength+0x4e>
    cc7e:	89 2b       	or	r24, r25
    cc80:	39 f0       	breq	.+14     	; 0xcc90 <si5351_drive_strength+0x5a>
    cc82:	1f c0       	rjmp	.+62     	; 0xccc2 <si5351_drive_strength+0x8c>
    cc84:	82 30       	cpi	r24, 0x02	; 2
    cc86:	91 05       	cpc	r25, r1
    cc88:	71 f0       	breq	.+28     	; 0xcca6 <si5351_drive_strength+0x70>
    cc8a:	03 97       	sbiw	r24, 0x03	; 3
    cc8c:	99 f0       	breq	.+38     	; 0xccb4 <si5351_drive_strength+0x7e>
    cc8e:	19 c0       	rjmp	.+50     	; 0xccc2 <si5351_drive_strength+0x8c>
    cc90:	89 81       	ldd	r24, Y+1	; 0x01
    cc92:	8c 7f       	andi	r24, 0xFC	; 252
    cc94:	89 83       	std	Y+1, r24	; 0x01
    cc96:	15 c0       	rjmp	.+42     	; 0xccc2 <si5351_drive_strength+0x8c>
    cc98:	89 81       	ldd	r24, Y+1	; 0x01
    cc9a:	8c 7f       	andi	r24, 0xFC	; 252
    cc9c:	89 83       	std	Y+1, r24	; 0x01
    cc9e:	89 81       	ldd	r24, Y+1	; 0x01
    cca0:	81 60       	ori	r24, 0x01	; 1
    cca2:	89 83       	std	Y+1, r24	; 0x01
    cca4:	0e c0       	rjmp	.+28     	; 0xccc2 <si5351_drive_strength+0x8c>
    cca6:	89 81       	ldd	r24, Y+1	; 0x01
    cca8:	8c 7f       	andi	r24, 0xFC	; 252
    ccaa:	89 83       	std	Y+1, r24	; 0x01
    ccac:	89 81       	ldd	r24, Y+1	; 0x01
    ccae:	82 60       	ori	r24, 0x02	; 2
    ccb0:	89 83       	std	Y+1, r24	; 0x01
    ccb2:	07 c0       	rjmp	.+14     	; 0xccc2 <si5351_drive_strength+0x8c>
    ccb4:	89 81       	ldd	r24, Y+1	; 0x01
    ccb6:	8c 7f       	andi	r24, 0xFC	; 252
    ccb8:	89 83       	std	Y+1, r24	; 0x01
    ccba:	89 81       	ldd	r24, Y+1	; 0x01
    ccbc:	83 60       	ori	r24, 0x03	; 3
    ccbe:	89 83       	std	Y+1, r24	; 0x01
    ccc0:	00 00       	nop
    ccc2:	89 81       	ldd	r24, Y+1	; 0x01
    ccc4:	8b 83       	std	Y+3, r24	; 0x03
    ccc6:	8d 81       	ldd	r24, Y+5	; 0x05
    ccc8:	20 e1       	ldi	r18, 0x10	; 16
    ccca:	28 0f       	add	r18, r24
    cccc:	ce 01       	movw	r24, r28
    ccce:	03 96       	adiw	r24, 0x03	; 3
    ccd0:	41 e0       	ldi	r20, 0x01	; 1
    ccd2:	bc 01       	movw	r22, r24
    ccd4:	82 2f       	mov	r24, r18
    ccd6:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    ccda:	88 23       	and	r24, r24
    ccdc:	11 f0       	breq	.+4      	; 0xcce2 <si5351_drive_strength+0xac>
    ccde:	8b ef       	ldi	r24, 0xFB	; 251
    cce0:	01 c0       	rjmp	.+2      	; 0xcce4 <si5351_drive_strength+0xae>
    cce2:	80 e0       	ldi	r24, 0x00	; 0
    cce4:	26 96       	adiw	r28, 0x06	; 6
    cce6:	cd bf       	out	0x3d, r28	; 61
    cce8:	de bf       	out	0x3e, r29	; 62
    ccea:	df 91       	pop	r29
    ccec:	cf 91       	pop	r28
    ccee:	08 95       	ret

0000ccf0 <_Z7set_pllm10si5351_pll>:
    ccf0:	cf 93       	push	r28
    ccf2:	df 93       	push	r29
    ccf4:	cd b7       	in	r28, 0x3d	; 61
    ccf6:	de b7       	in	r29, 0x3e	; 62
    ccf8:	6c 97       	sbiw	r28, 0x1c	; 28
    ccfa:	cd bf       	out	0x3d, r28	; 61
    ccfc:	de bf       	out	0x3e, r29	; 62
    ccfe:	68 8f       	std	Y+24, r22	; 0x18
    cd00:	79 8f       	std	Y+25, r23	; 0x19
    cd02:	8a 8f       	std	Y+26, r24	; 0x1a
    cd04:	9b 8f       	std	Y+27, r25	; 0x1b
    cd06:	4c 8f       	std	Y+28, r20	; 0x1c
    cd08:	9e 01       	movw	r18, r28
    cd0a:	2e 5f       	subi	r18, 0xFE	; 254
    cd0c:	3f 4f       	sbci	r19, 0xFF	; 255
    cd0e:	88 8d       	ldd	r24, Y+24	; 0x18
    cd10:	99 8d       	ldd	r25, Y+25	; 0x19
    cd12:	aa 8d       	ldd	r26, Y+26	; 0x1a
    cd14:	bb 8d       	ldd	r27, Y+27	; 0x1b
    cd16:	a9 01       	movw	r20, r18
    cd18:	bc 01       	movw	r22, r24
    cd1a:	cd 01       	movw	r24, r26
    cd1c:	0e 94 41 67 	call	0xce82	; 0xce82 <_Z8pll_calcmP13u_si5351_regs>
    cd20:	88 23       	and	r24, r24
    cd22:	11 f0       	breq	.+4      	; 0xcd28 <_Z7set_pllm10si5351_pll+0x38>
    cd24:	81 e0       	ldi	r24, 0x01	; 1
    cd26:	a7 c0       	rjmp	.+334    	; 0xce76 <_Z7set_pllm10si5351_pll+0x186>
    cd28:	19 82       	std	Y+1, r1	; 0x01
    cd2a:	89 81       	ldd	r24, Y+1	; 0x01
    cd2c:	91 e0       	ldi	r25, 0x01	; 1
    cd2e:	98 0f       	add	r25, r24
    cd30:	99 83       	std	Y+1, r25	; 0x01
    cd32:	88 2f       	mov	r24, r24
    cd34:	90 e0       	ldi	r25, 0x00	; 0
    cd36:	4b 85       	ldd	r20, Y+11	; 0x0b
    cd38:	9e 01       	movw	r18, r28
    cd3a:	22 5f       	subi	r18, 0xF2	; 242
    cd3c:	3f 4f       	sbci	r19, 0xFF	; 255
    cd3e:	82 0f       	add	r24, r18
    cd40:	93 1f       	adc	r25, r19
    cd42:	fc 01       	movw	r30, r24
    cd44:	40 83       	st	Z, r20
    cd46:	89 81       	ldd	r24, Y+1	; 0x01
    cd48:	91 e0       	ldi	r25, 0x01	; 1
    cd4a:	98 0f       	add	r25, r24
    cd4c:	99 83       	std	Y+1, r25	; 0x01
    cd4e:	88 2f       	mov	r24, r24
    cd50:	90 e0       	ldi	r25, 0x00	; 0
    cd52:	4a 85       	ldd	r20, Y+10	; 0x0a
    cd54:	9e 01       	movw	r18, r28
    cd56:	22 5f       	subi	r18, 0xF2	; 242
    cd58:	3f 4f       	sbci	r19, 0xFF	; 255
    cd5a:	82 0f       	add	r24, r18
    cd5c:	93 1f       	adc	r25, r19
    cd5e:	fc 01       	movw	r30, r24
    cd60:	40 83       	st	Z, r20
    cd62:	89 81       	ldd	r24, Y+1	; 0x01
    cd64:	91 e0       	ldi	r25, 0x01	; 1
    cd66:	98 0f       	add	r25, r24
    cd68:	99 83       	std	Y+1, r25	; 0x01
    cd6a:	88 2f       	mov	r24, r24
    cd6c:	90 e0       	ldi	r25, 0x00	; 0
    cd6e:	2c 81       	ldd	r18, Y+4	; 0x04
    cd70:	42 2f       	mov	r20, r18
    cd72:	43 70       	andi	r20, 0x03	; 3
    cd74:	9e 01       	movw	r18, r28
    cd76:	22 5f       	subi	r18, 0xF2	; 242
    cd78:	3f 4f       	sbci	r19, 0xFF	; 255
    cd7a:	82 0f       	add	r24, r18
    cd7c:	93 1f       	adc	r25, r19
    cd7e:	fc 01       	movw	r30, r24
    cd80:	40 83       	st	Z, r20
    cd82:	89 81       	ldd	r24, Y+1	; 0x01
    cd84:	91 e0       	ldi	r25, 0x01	; 1
    cd86:	98 0f       	add	r25, r24
    cd88:	99 83       	std	Y+1, r25	; 0x01
    cd8a:	88 2f       	mov	r24, r24
    cd8c:	90 e0       	ldi	r25, 0x00	; 0
    cd8e:	4b 81       	ldd	r20, Y+3	; 0x03
    cd90:	9e 01       	movw	r18, r28
    cd92:	22 5f       	subi	r18, 0xF2	; 242
    cd94:	3f 4f       	sbci	r19, 0xFF	; 255
    cd96:	82 0f       	add	r24, r18
    cd98:	93 1f       	adc	r25, r19
    cd9a:	fc 01       	movw	r30, r24
    cd9c:	40 83       	st	Z, r20
    cd9e:	89 81       	ldd	r24, Y+1	; 0x01
    cda0:	91 e0       	ldi	r25, 0x01	; 1
    cda2:	98 0f       	add	r25, r24
    cda4:	99 83       	std	Y+1, r25	; 0x01
    cda6:	88 2f       	mov	r24, r24
    cda8:	90 e0       	ldi	r25, 0x00	; 0
    cdaa:	4a 81       	ldd	r20, Y+2	; 0x02
    cdac:	9e 01       	movw	r18, r28
    cdae:	22 5f       	subi	r18, 0xF2	; 242
    cdb0:	3f 4f       	sbci	r19, 0xFF	; 255
    cdb2:	82 0f       	add	r24, r18
    cdb4:	93 1f       	adc	r25, r19
    cdb6:	fc 01       	movw	r30, r24
    cdb8:	40 83       	st	Z, r20
    cdba:	89 81       	ldd	r24, Y+1	; 0x01
    cdbc:	88 2f       	mov	r24, r24
    cdbe:	90 e0       	ldi	r25, 0x00	; 0
    cdc0:	2c 85       	ldd	r18, Y+12	; 0x0c
    cdc2:	42 2f       	mov	r20, r18
    cdc4:	42 95       	swap	r20
    cdc6:	40 7f       	andi	r20, 0xF0	; 240
    cdc8:	9e 01       	movw	r18, r28
    cdca:	22 5f       	subi	r18, 0xF2	; 242
    cdcc:	3f 4f       	sbci	r19, 0xFF	; 255
    cdce:	82 0f       	add	r24, r18
    cdd0:	93 1f       	adc	r25, r19
    cdd2:	fc 01       	movw	r30, r24
    cdd4:	40 83       	st	Z, r20
    cdd6:	29 81       	ldd	r18, Y+1	; 0x01
    cdd8:	81 e0       	ldi	r24, 0x01	; 1
    cdda:	82 0f       	add	r24, r18
    cddc:	89 83       	std	Y+1, r24	; 0x01
    cdde:	82 2f       	mov	r24, r18
    cde0:	90 e0       	ldi	r25, 0x00	; 0
    cde2:	22 2f       	mov	r18, r18
    cde4:	30 e0       	ldi	r19, 0x00	; 0
    cde6:	ae 01       	movw	r20, r28
    cde8:	42 5f       	subi	r20, 0xF2	; 242
    cdea:	5f 4f       	sbci	r21, 0xFF	; 255
    cdec:	24 0f       	add	r18, r20
    cdee:	35 1f       	adc	r19, r21
    cdf0:	f9 01       	movw	r30, r18
    cdf2:	30 81       	ld	r19, Z
    cdf4:	28 85       	ldd	r18, Y+8	; 0x08
    cdf6:	2f 70       	andi	r18, 0x0F	; 15
    cdf8:	43 2f       	mov	r20, r19
    cdfa:	42 0f       	add	r20, r18
    cdfc:	9e 01       	movw	r18, r28
    cdfe:	22 5f       	subi	r18, 0xF2	; 242
    ce00:	3f 4f       	sbci	r19, 0xFF	; 255
    ce02:	82 0f       	add	r24, r18
    ce04:	93 1f       	adc	r25, r19
    ce06:	fc 01       	movw	r30, r24
    ce08:	40 83       	st	Z, r20
    ce0a:	89 81       	ldd	r24, Y+1	; 0x01
    ce0c:	91 e0       	ldi	r25, 0x01	; 1
    ce0e:	98 0f       	add	r25, r24
    ce10:	99 83       	std	Y+1, r25	; 0x01
    ce12:	88 2f       	mov	r24, r24
    ce14:	90 e0       	ldi	r25, 0x00	; 0
    ce16:	4f 81       	ldd	r20, Y+7	; 0x07
    ce18:	9e 01       	movw	r18, r28
    ce1a:	22 5f       	subi	r18, 0xF2	; 242
    ce1c:	3f 4f       	sbci	r19, 0xFF	; 255
    ce1e:	82 0f       	add	r24, r18
    ce20:	93 1f       	adc	r25, r19
    ce22:	fc 01       	movw	r30, r24
    ce24:	40 83       	st	Z, r20
    ce26:	89 81       	ldd	r24, Y+1	; 0x01
    ce28:	91 e0       	ldi	r25, 0x01	; 1
    ce2a:	98 0f       	add	r25, r24
    ce2c:	99 83       	std	Y+1, r25	; 0x01
    ce2e:	88 2f       	mov	r24, r24
    ce30:	90 e0       	ldi	r25, 0x00	; 0
    ce32:	4e 81       	ldd	r20, Y+6	; 0x06
    ce34:	9e 01       	movw	r18, r28
    ce36:	22 5f       	subi	r18, 0xF2	; 242
    ce38:	3f 4f       	sbci	r19, 0xFF	; 255
    ce3a:	82 0f       	add	r24, r18
    ce3c:	93 1f       	adc	r25, r19
    ce3e:	fc 01       	movw	r30, r24
    ce40:	40 83       	st	Z, r20
    ce42:	8c 8d       	ldd	r24, Y+28	; 0x1c
    ce44:	81 30       	cpi	r24, 0x01	; 1
    ce46:	59 f4       	brne	.+22     	; 0xce5e <_Z7set_pllm10si5351_pll+0x16e>
    ce48:	ce 01       	movw	r24, r28
    ce4a:	0e 96       	adiw	r24, 0x0e	; 14
    ce4c:	49 81       	ldd	r20, Y+1	; 0x01
    ce4e:	bc 01       	movw	r22, r24
    ce50:	8a e1       	ldi	r24, 0x1A	; 26
    ce52:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    ce56:	88 23       	and	r24, r24
    ce58:	69 f0       	breq	.+26     	; 0xce74 <_Z7set_pllm10si5351_pll+0x184>
    ce5a:	81 e0       	ldi	r24, 0x01	; 1
    ce5c:	0c c0       	rjmp	.+24     	; 0xce76 <_Z7set_pllm10si5351_pll+0x186>
    ce5e:	ce 01       	movw	r24, r28
    ce60:	0e 96       	adiw	r24, 0x0e	; 14
    ce62:	49 81       	ldd	r20, Y+1	; 0x01
    ce64:	bc 01       	movw	r22, r24
    ce66:	82 e2       	ldi	r24, 0x22	; 34
    ce68:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    ce6c:	88 23       	and	r24, r24
    ce6e:	11 f0       	breq	.+4      	; 0xce74 <_Z7set_pllm10si5351_pll+0x184>
    ce70:	81 e0       	ldi	r24, 0x01	; 1
    ce72:	01 c0       	rjmp	.+2      	; 0xce76 <_Z7set_pllm10si5351_pll+0x186>
    ce74:	80 e0       	ldi	r24, 0x00	; 0
    ce76:	6c 96       	adiw	r28, 0x1c	; 28
    ce78:	cd bf       	out	0x3d, r28	; 61
    ce7a:	de bf       	out	0x3e, r29	; 62
    ce7c:	df 91       	pop	r29
    ce7e:	cf 91       	pop	r28
    ce80:	08 95       	ret

0000ce82 <_Z8pll_calcmP13u_si5351_regs>:
    ce82:	cf 93       	push	r28
    ce84:	df 93       	push	r29
    ce86:	cd b7       	in	r28, 0x3d	; 61
    ce88:	de b7       	in	r29, 0x3e	; 62
    ce8a:	6e 97       	sbiw	r28, 0x1e	; 30
    ce8c:	cd bf       	out	0x3d, r28	; 61
    ce8e:	de bf       	out	0x3e, r29	; 62
    ce90:	69 8f       	std	Y+25, r22	; 0x19
    ce92:	7a 8f       	std	Y+26, r23	; 0x1a
    ce94:	8b 8f       	std	Y+27, r24	; 0x1b
    ce96:	9c 8f       	std	Y+28, r25	; 0x1c
    ce98:	4d 8f       	std	Y+29, r20	; 0x1d
    ce9a:	5e 8f       	std	Y+30, r21	; 0x1e
    ce9c:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <_ZL9xtal_freq>
    cea0:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <_ZL9xtal_freq+0x1>
    cea4:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <_ZL9xtal_freq+0x2>
    cea8:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <_ZL9xtal_freq+0x3>
    ceac:	89 83       	std	Y+1, r24	; 0x01
    ceae:	9a 83       	std	Y+2, r25	; 0x02
    ceb0:	ab 83       	std	Y+3, r26	; 0x03
    ceb2:	bc 83       	std	Y+4, r27	; 0x04
    ceb4:	89 8d       	ldd	r24, Y+25	; 0x19
    ceb6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    ceb8:	ab 8d       	ldd	r26, Y+27	; 0x1b
    ceba:	bc 8d       	ldd	r27, Y+28	; 0x1c
    cebc:	29 81       	ldd	r18, Y+1	; 0x01
    cebe:	3a 81       	ldd	r19, Y+2	; 0x02
    cec0:	4b 81       	ldd	r20, Y+3	; 0x03
    cec2:	5c 81       	ldd	r21, Y+4	; 0x04
    cec4:	bc 01       	movw	r22, r24
    cec6:	cd 01       	movw	r24, r26
    cec8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    cecc:	da 01       	movw	r26, r20
    cece:	c9 01       	movw	r24, r18
    ced0:	8d 83       	std	Y+5, r24	; 0x05
    ced2:	9e 83       	std	Y+6, r25	; 0x06
    ced4:	af 83       	std	Y+7, r26	; 0x07
    ced6:	b8 87       	std	Y+8, r27	; 0x08
    ced8:	89 8d       	ldd	r24, Y+25	; 0x19
    ceda:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cedc:	ab 8d       	ldd	r26, Y+27	; 0x1b
    cede:	bc 8d       	ldd	r27, Y+28	; 0x1c
    cee0:	29 81       	ldd	r18, Y+1	; 0x01
    cee2:	3a 81       	ldd	r19, Y+2	; 0x02
    cee4:	4b 81       	ldd	r20, Y+3	; 0x03
    cee6:	5c 81       	ldd	r21, Y+4	; 0x04
    cee8:	bc 01       	movw	r22, r24
    ceea:	cd 01       	movw	r24, r26
    ceec:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    cef0:	dc 01       	movw	r26, r24
    cef2:	cb 01       	movw	r24, r22
    cef4:	89 8b       	std	Y+17, r24	; 0x11
    cef6:	9a 8b       	std	Y+18, r25	; 0x12
    cef8:	ab 8b       	std	Y+19, r26	; 0x13
    cefa:	bc 8b       	std	Y+20, r27	; 0x14
    cefc:	89 81       	ldd	r24, Y+1	; 0x01
    cefe:	9a 81       	ldd	r25, Y+2	; 0x02
    cf00:	ab 81       	ldd	r26, Y+3	; 0x03
    cf02:	bc 81       	ldd	r27, Y+4	; 0x04
    cf04:	8d 8b       	std	Y+21, r24	; 0x15
    cf06:	9e 8b       	std	Y+22, r25	; 0x16
    cf08:	af 8b       	std	Y+23, r26	; 0x17
    cf0a:	b8 8f       	std	Y+24, r27	; 0x18
    cf0c:	9e 01       	movw	r18, r28
    cf0e:	2b 5e       	subi	r18, 0xEB	; 235
    cf10:	3f 4f       	sbci	r19, 0xFF	; 255
    cf12:	ce 01       	movw	r24, r28
    cf14:	41 96       	adiw	r24, 0x11	; 17
    cf16:	b9 01       	movw	r22, r18
    cf18:	0e 94 27 68 	call	0xd04e	; 0xd04e <_Z13reduce_by_gcdPmS_>
    cf1c:	89 89       	ldd	r24, Y+17	; 0x11
    cf1e:	9a 89       	ldd	r25, Y+18	; 0x12
    cf20:	ab 89       	ldd	r26, Y+19	; 0x13
    cf22:	bc 89       	ldd	r27, Y+20	; 0x14
    cf24:	88 0f       	add	r24, r24
    cf26:	99 1f       	adc	r25, r25
    cf28:	aa 1f       	adc	r26, r26
    cf2a:	bb 1f       	adc	r27, r27
    cf2c:	88 0f       	add	r24, r24
    cf2e:	99 1f       	adc	r25, r25
    cf30:	aa 1f       	adc	r26, r26
    cf32:	bb 1f       	adc	r27, r27
    cf34:	88 0f       	add	r24, r24
    cf36:	99 1f       	adc	r25, r25
    cf38:	aa 1f       	adc	r26, r26
    cf3a:	bb 1f       	adc	r27, r27
    cf3c:	88 0f       	add	r24, r24
    cf3e:	99 1f       	adc	r25, r25
    cf40:	aa 1f       	adc	r26, r26
    cf42:	bb 1f       	adc	r27, r27
    cf44:	88 0f       	add	r24, r24
    cf46:	99 1f       	adc	r25, r25
    cf48:	aa 1f       	adc	r26, r26
    cf4a:	bb 1f       	adc	r27, r27
    cf4c:	88 0f       	add	r24, r24
    cf4e:	99 1f       	adc	r25, r25
    cf50:	aa 1f       	adc	r26, r26
    cf52:	bb 1f       	adc	r27, r27
    cf54:	88 0f       	add	r24, r24
    cf56:	99 1f       	adc	r25, r25
    cf58:	aa 1f       	adc	r26, r26
    cf5a:	bb 1f       	adc	r27, r27
    cf5c:	89 87       	std	Y+9, r24	; 0x09
    cf5e:	9a 87       	std	Y+10, r25	; 0x0a
    cf60:	ab 87       	std	Y+11, r26	; 0x0b
    cf62:	bc 87       	std	Y+12, r27	; 0x0c
    cf64:	2d 89       	ldd	r18, Y+21	; 0x15
    cf66:	3e 89       	ldd	r19, Y+22	; 0x16
    cf68:	4f 89       	ldd	r20, Y+23	; 0x17
    cf6a:	58 8d       	ldd	r21, Y+24	; 0x18
    cf6c:	89 85       	ldd	r24, Y+9	; 0x09
    cf6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    cf70:	ab 85       	ldd	r26, Y+11	; 0x0b
    cf72:	bc 85       	ldd	r27, Y+12	; 0x0c
    cf74:	bc 01       	movw	r22, r24
    cf76:	cd 01       	movw	r24, r26
    cf78:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    cf7c:	da 01       	movw	r26, r20
    cf7e:	c9 01       	movw	r24, r18
    cf80:	8d 87       	std	Y+13, r24	; 0x0d
    cf82:	9e 87       	std	Y+14, r25	; 0x0e
    cf84:	af 87       	std	Y+15, r26	; 0x0f
    cf86:	b8 8b       	std	Y+16, r27	; 0x10
    cf88:	8d 81       	ldd	r24, Y+5	; 0x05
    cf8a:	9e 81       	ldd	r25, Y+6	; 0x06
    cf8c:	af 81       	ldd	r26, Y+7	; 0x07
    cf8e:	b8 85       	ldd	r27, Y+8	; 0x08
    cf90:	88 0f       	add	r24, r24
    cf92:	99 1f       	adc	r25, r25
    cf94:	aa 1f       	adc	r26, r26
    cf96:	bb 1f       	adc	r27, r27
    cf98:	88 0f       	add	r24, r24
    cf9a:	99 1f       	adc	r25, r25
    cf9c:	aa 1f       	adc	r26, r26
    cf9e:	bb 1f       	adc	r27, r27
    cfa0:	88 0f       	add	r24, r24
    cfa2:	99 1f       	adc	r25, r25
    cfa4:	aa 1f       	adc	r26, r26
    cfa6:	bb 1f       	adc	r27, r27
    cfa8:	88 0f       	add	r24, r24
    cfaa:	99 1f       	adc	r25, r25
    cfac:	aa 1f       	adc	r26, r26
    cfae:	bb 1f       	adc	r27, r27
    cfb0:	88 0f       	add	r24, r24
    cfb2:	99 1f       	adc	r25, r25
    cfb4:	aa 1f       	adc	r26, r26
    cfb6:	bb 1f       	adc	r27, r27
    cfb8:	88 0f       	add	r24, r24
    cfba:	99 1f       	adc	r25, r25
    cfbc:	aa 1f       	adc	r26, r26
    cfbe:	bb 1f       	adc	r27, r27
    cfc0:	88 0f       	add	r24, r24
    cfc2:	99 1f       	adc	r25, r25
    cfc4:	aa 1f       	adc	r26, r26
    cfc6:	bb 1f       	adc	r27, r27
    cfc8:	9c 01       	movw	r18, r24
    cfca:	ad 01       	movw	r20, r26
    cfcc:	8d 85       	ldd	r24, Y+13	; 0x0d
    cfce:	9e 85       	ldd	r25, Y+14	; 0x0e
    cfd0:	af 85       	ldd	r26, Y+15	; 0x0f
    cfd2:	b8 89       	ldd	r27, Y+16	; 0x10
    cfd4:	82 0f       	add	r24, r18
    cfd6:	93 1f       	adc	r25, r19
    cfd8:	a4 1f       	adc	r26, r20
    cfda:	b5 1f       	adc	r27, r21
    cfdc:	92 50       	subi	r25, 0x02	; 2
    cfde:	a1 09       	sbc	r26, r1
    cfe0:	b1 09       	sbc	r27, r1
    cfe2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    cfe4:	3e 8d       	ldd	r19, Y+30	; 0x1e
    cfe6:	f9 01       	movw	r30, r18
    cfe8:	80 83       	st	Z, r24
    cfea:	91 83       	std	Z+1, r25	; 0x01
    cfec:	a2 83       	std	Z+2, r26	; 0x02
    cfee:	b3 83       	std	Z+3, r27	; 0x03
    cff0:	2d 89       	ldd	r18, Y+21	; 0x15
    cff2:	3e 89       	ldd	r19, Y+22	; 0x16
    cff4:	4f 89       	ldd	r20, Y+23	; 0x17
    cff6:	58 8d       	ldd	r21, Y+24	; 0x18
    cff8:	8d 85       	ldd	r24, Y+13	; 0x0d
    cffa:	9e 85       	ldd	r25, Y+14	; 0x0e
    cffc:	af 85       	ldd	r26, Y+15	; 0x0f
    cffe:	b8 89       	ldd	r27, Y+16	; 0x10
    d000:	bc 01       	movw	r22, r24
    d002:	cd 01       	movw	r24, r26
    d004:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d008:	9b 01       	movw	r18, r22
    d00a:	ac 01       	movw	r20, r24
    d00c:	89 85       	ldd	r24, Y+9	; 0x09
    d00e:	9a 85       	ldd	r25, Y+10	; 0x0a
    d010:	ab 85       	ldd	r26, Y+11	; 0x0b
    d012:	bc 85       	ldd	r27, Y+12	; 0x0c
    d014:	82 1b       	sub	r24, r18
    d016:	93 0b       	sbc	r25, r19
    d018:	a4 0b       	sbc	r26, r20
    d01a:	b5 0b       	sbc	r27, r21
    d01c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d01e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d020:	f9 01       	movw	r30, r18
    d022:	84 83       	std	Z+4, r24	; 0x04
    d024:	95 83       	std	Z+5, r25	; 0x05
    d026:	a6 83       	std	Z+6, r26	; 0x06
    d028:	b7 83       	std	Z+7, r27	; 0x07
    d02a:	8d 89       	ldd	r24, Y+21	; 0x15
    d02c:	9e 89       	ldd	r25, Y+22	; 0x16
    d02e:	af 89       	ldd	r26, Y+23	; 0x17
    d030:	b8 8d       	ldd	r27, Y+24	; 0x18
    d032:	2d 8d       	ldd	r18, Y+29	; 0x1d
    d034:	3e 8d       	ldd	r19, Y+30	; 0x1e
    d036:	f9 01       	movw	r30, r18
    d038:	80 87       	std	Z+8, r24	; 0x08
    d03a:	91 87       	std	Z+9, r25	; 0x09
    d03c:	a2 87       	std	Z+10, r26	; 0x0a
    d03e:	b3 87       	std	Z+11, r27	; 0x0b
    d040:	80 e0       	ldi	r24, 0x00	; 0
    d042:	6e 96       	adiw	r28, 0x1e	; 30
    d044:	cd bf       	out	0x3d, r28	; 61
    d046:	de bf       	out	0x3e, r29	; 62
    d048:	df 91       	pop	r29
    d04a:	cf 91       	pop	r28
    d04c:	08 95       	ret

0000d04e <_Z13reduce_by_gcdPmS_>:
    d04e:	cf 93       	push	r28
    d050:	df 93       	push	r29
    d052:	cd b7       	in	r28, 0x3d	; 61
    d054:	de b7       	in	r29, 0x3e	; 62
    d056:	60 97       	sbiw	r28, 0x10	; 16
    d058:	cd bf       	out	0x3d, r28	; 61
    d05a:	de bf       	out	0x3e, r29	; 62
    d05c:	8d 87       	std	Y+13, r24	; 0x0d
    d05e:	9e 87       	std	Y+14, r25	; 0x0e
    d060:	6f 87       	std	Y+15, r22	; 0x0f
    d062:	78 8b       	std	Y+16, r23	; 0x10
    d064:	8d 85       	ldd	r24, Y+13	; 0x0d
    d066:	9e 85       	ldd	r25, Y+14	; 0x0e
    d068:	fc 01       	movw	r30, r24
    d06a:	80 81       	ld	r24, Z
    d06c:	91 81       	ldd	r25, Z+1	; 0x01
    d06e:	a2 81       	ldd	r26, Z+2	; 0x02
    d070:	b3 81       	ldd	r27, Z+3	; 0x03
    d072:	89 87       	std	Y+9, r24	; 0x09
    d074:	9a 87       	std	Y+10, r25	; 0x0a
    d076:	ab 87       	std	Y+11, r26	; 0x0b
    d078:	bc 87       	std	Y+12, r27	; 0x0c
    d07a:	8f 85       	ldd	r24, Y+15	; 0x0f
    d07c:	98 89       	ldd	r25, Y+16	; 0x10
    d07e:	fc 01       	movw	r30, r24
    d080:	80 81       	ld	r24, Z
    d082:	91 81       	ldd	r25, Z+1	; 0x01
    d084:	a2 81       	ldd	r26, Z+2	; 0x02
    d086:	b3 81       	ldd	r27, Z+3	; 0x03
    d088:	8d 83       	std	Y+5, r24	; 0x05
    d08a:	9e 83       	std	Y+6, r25	; 0x06
    d08c:	af 83       	std	Y+7, r26	; 0x07
    d08e:	b8 87       	std	Y+8, r27	; 0x08
    d090:	89 85       	ldd	r24, Y+9	; 0x09
    d092:	9a 85       	ldd	r25, Y+10	; 0x0a
    d094:	ab 85       	ldd	r26, Y+11	; 0x0b
    d096:	bc 85       	ldd	r27, Y+12	; 0x0c
    d098:	89 2b       	or	r24, r25
    d09a:	8a 2b       	or	r24, r26
    d09c:	8b 2b       	or	r24, r27
    d09e:	09 f4       	brne	.+2      	; 0xd0a2 <_Z13reduce_by_gcdPmS_+0x54>
    d0a0:	80 c0       	rjmp	.+256    	; 0xd1a2 <_Z13reduce_by_gcdPmS_+0x154>
    d0a2:	8d 81       	ldd	r24, Y+5	; 0x05
    d0a4:	9e 81       	ldd	r25, Y+6	; 0x06
    d0a6:	af 81       	ldd	r26, Y+7	; 0x07
    d0a8:	b8 85       	ldd	r27, Y+8	; 0x08
    d0aa:	89 2b       	or	r24, r25
    d0ac:	8a 2b       	or	r24, r26
    d0ae:	8b 2b       	or	r24, r27
    d0b0:	09 f4       	brne	.+2      	; 0xd0b4 <_Z13reduce_by_gcdPmS_+0x66>
    d0b2:	77 c0       	rjmp	.+238    	; 0xd1a2 <_Z13reduce_by_gcdPmS_+0x154>
    d0b4:	89 85       	ldd	r24, Y+9	; 0x09
    d0b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    d0b8:	ab 85       	ldd	r26, Y+11	; 0x0b
    d0ba:	bc 85       	ldd	r27, Y+12	; 0x0c
    d0bc:	2d 81       	ldd	r18, Y+5	; 0x05
    d0be:	3e 81       	ldd	r19, Y+6	; 0x06
    d0c0:	4f 81       	ldd	r20, Y+7	; 0x07
    d0c2:	58 85       	ldd	r21, Y+8	; 0x08
    d0c4:	bc 01       	movw	r22, r24
    d0c6:	cd 01       	movw	r24, r26
    d0c8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d0cc:	dc 01       	movw	r26, r24
    d0ce:	cb 01       	movw	r24, r22
    d0d0:	89 83       	std	Y+1, r24	; 0x01
    d0d2:	9a 83       	std	Y+2, r25	; 0x02
    d0d4:	ab 83       	std	Y+3, r26	; 0x03
    d0d6:	bc 83       	std	Y+4, r27	; 0x04
    d0d8:	89 81       	ldd	r24, Y+1	; 0x01
    d0da:	9a 81       	ldd	r25, Y+2	; 0x02
    d0dc:	ab 81       	ldd	r26, Y+3	; 0x03
    d0de:	bc 81       	ldd	r27, Y+4	; 0x04
    d0e0:	89 2b       	or	r24, r25
    d0e2:	8a 2b       	or	r24, r26
    d0e4:	8b 2b       	or	r24, r27
    d0e6:	19 f1       	breq	.+70     	; 0xd12e <_Z13reduce_by_gcdPmS_+0xe0>
    d0e8:	8d 81       	ldd	r24, Y+5	; 0x05
    d0ea:	9e 81       	ldd	r25, Y+6	; 0x06
    d0ec:	af 81       	ldd	r26, Y+7	; 0x07
    d0ee:	b8 85       	ldd	r27, Y+8	; 0x08
    d0f0:	89 87       	std	Y+9, r24	; 0x09
    d0f2:	9a 87       	std	Y+10, r25	; 0x0a
    d0f4:	ab 87       	std	Y+11, r26	; 0x0b
    d0f6:	bc 87       	std	Y+12, r27	; 0x0c
    d0f8:	89 81       	ldd	r24, Y+1	; 0x01
    d0fa:	9a 81       	ldd	r25, Y+2	; 0x02
    d0fc:	ab 81       	ldd	r26, Y+3	; 0x03
    d0fe:	bc 81       	ldd	r27, Y+4	; 0x04
    d100:	8d 83       	std	Y+5, r24	; 0x05
    d102:	9e 83       	std	Y+6, r25	; 0x06
    d104:	af 83       	std	Y+7, r26	; 0x07
    d106:	b8 87       	std	Y+8, r27	; 0x08
    d108:	89 85       	ldd	r24, Y+9	; 0x09
    d10a:	9a 85       	ldd	r25, Y+10	; 0x0a
    d10c:	ab 85       	ldd	r26, Y+11	; 0x0b
    d10e:	bc 85       	ldd	r27, Y+12	; 0x0c
    d110:	2d 81       	ldd	r18, Y+5	; 0x05
    d112:	3e 81       	ldd	r19, Y+6	; 0x06
    d114:	4f 81       	ldd	r20, Y+7	; 0x07
    d116:	58 85       	ldd	r21, Y+8	; 0x08
    d118:	bc 01       	movw	r22, r24
    d11a:	cd 01       	movw	r24, r26
    d11c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d120:	dc 01       	movw	r26, r24
    d122:	cb 01       	movw	r24, r22
    d124:	89 83       	std	Y+1, r24	; 0x01
    d126:	9a 83       	std	Y+2, r25	; 0x02
    d128:	ab 83       	std	Y+3, r26	; 0x03
    d12a:	bc 83       	std	Y+4, r27	; 0x04
    d12c:	d5 cf       	rjmp	.-86     	; 0xd0d8 <_Z13reduce_by_gcdPmS_+0x8a>
    d12e:	8d 81       	ldd	r24, Y+5	; 0x05
    d130:	9e 81       	ldd	r25, Y+6	; 0x06
    d132:	af 81       	ldd	r26, Y+7	; 0x07
    d134:	b8 85       	ldd	r27, Y+8	; 0x08
    d136:	02 97       	sbiw	r24, 0x02	; 2
    d138:	a1 05       	cpc	r26, r1
    d13a:	b1 05       	cpc	r27, r1
    d13c:	a0 f1       	brcs	.+104    	; 0xd1a6 <_Z13reduce_by_gcdPmS_+0x158>
    d13e:	8d 85       	ldd	r24, Y+13	; 0x0d
    d140:	9e 85       	ldd	r25, Y+14	; 0x0e
    d142:	fc 01       	movw	r30, r24
    d144:	80 81       	ld	r24, Z
    d146:	91 81       	ldd	r25, Z+1	; 0x01
    d148:	a2 81       	ldd	r26, Z+2	; 0x02
    d14a:	b3 81       	ldd	r27, Z+3	; 0x03
    d14c:	2d 81       	ldd	r18, Y+5	; 0x05
    d14e:	3e 81       	ldd	r19, Y+6	; 0x06
    d150:	4f 81       	ldd	r20, Y+7	; 0x07
    d152:	58 85       	ldd	r21, Y+8	; 0x08
    d154:	bc 01       	movw	r22, r24
    d156:	cd 01       	movw	r24, r26
    d158:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d15c:	da 01       	movw	r26, r20
    d15e:	c9 01       	movw	r24, r18
    d160:	2d 85       	ldd	r18, Y+13	; 0x0d
    d162:	3e 85       	ldd	r19, Y+14	; 0x0e
    d164:	f9 01       	movw	r30, r18
    d166:	80 83       	st	Z, r24
    d168:	91 83       	std	Z+1, r25	; 0x01
    d16a:	a2 83       	std	Z+2, r26	; 0x02
    d16c:	b3 83       	std	Z+3, r27	; 0x03
    d16e:	8f 85       	ldd	r24, Y+15	; 0x0f
    d170:	98 89       	ldd	r25, Y+16	; 0x10
    d172:	fc 01       	movw	r30, r24
    d174:	80 81       	ld	r24, Z
    d176:	91 81       	ldd	r25, Z+1	; 0x01
    d178:	a2 81       	ldd	r26, Z+2	; 0x02
    d17a:	b3 81       	ldd	r27, Z+3	; 0x03
    d17c:	2d 81       	ldd	r18, Y+5	; 0x05
    d17e:	3e 81       	ldd	r19, Y+6	; 0x06
    d180:	4f 81       	ldd	r20, Y+7	; 0x07
    d182:	58 85       	ldd	r21, Y+8	; 0x08
    d184:	bc 01       	movw	r22, r24
    d186:	cd 01       	movw	r24, r26
    d188:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d18c:	da 01       	movw	r26, r20
    d18e:	c9 01       	movw	r24, r18
    d190:	2f 85       	ldd	r18, Y+15	; 0x0f
    d192:	38 89       	ldd	r19, Y+16	; 0x10
    d194:	f9 01       	movw	r30, r18
    d196:	80 83       	st	Z, r24
    d198:	91 83       	std	Z+1, r25	; 0x01
    d19a:	a2 83       	std	Z+2, r26	; 0x02
    d19c:	b3 83       	std	Z+3, r27	; 0x03
    d19e:	00 00       	nop
    d1a0:	02 c0       	rjmp	.+4      	; 0xd1a6 <_Z13reduce_by_gcdPmS_+0x158>
    d1a2:	00 00       	nop
    d1a4:	01 c0       	rjmp	.+2      	; 0xd1a8 <_Z13reduce_by_gcdPmS_+0x15a>
    d1a6:	00 00       	nop
    d1a8:	60 96       	adiw	r28, 0x10	; 16
    d1aa:	cd bf       	out	0x3d, r28	; 61
    d1ac:	de bf       	out	0x3e, r29	; 62
    d1ae:	df 91       	pop	r29
    d1b0:	cf 91       	pop	r28
    d1b2:	08 95       	ret

0000d1b4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    d1b4:	0f 93       	push	r16
    d1b6:	1f 93       	push	r17
    d1b8:	cf 93       	push	r28
    d1ba:	df 93       	push	r29
    d1bc:	cd b7       	in	r28, 0x3d	; 61
    d1be:	de b7       	in	r29, 0x3e	; 62
    d1c0:	69 97       	sbiw	r28, 0x19	; 25
    d1c2:	cd bf       	out	0x3d, r28	; 61
    d1c4:	de bf       	out	0x3e, r29	; 62
    d1c6:	68 8b       	std	Y+16, r22	; 0x10
    d1c8:	79 8b       	std	Y+17, r23	; 0x11
    d1ca:	8a 8b       	std	Y+18, r24	; 0x12
    d1cc:	9b 8b       	std	Y+19, r25	; 0x13
    d1ce:	4c 8b       	std	Y+20, r20	; 0x14
    d1d0:	5d 8b       	std	Y+21, r21	; 0x15
    d1d2:	2e 8b       	std	Y+22, r18	; 0x16
    d1d4:	3f 8b       	std	Y+23, r19	; 0x17
    d1d6:	08 8f       	std	Y+24, r16	; 0x18
    d1d8:	19 8f       	std	Y+25, r17	; 0x19
    d1da:	19 82       	std	Y+1, r1	; 0x01
    d1dc:	1a 82       	std	Y+2, r1	; 0x02
    d1de:	1b 82       	std	Y+3, r1	; 0x03
    d1e0:	1c 82       	std	Y+4, r1	; 0x04
    d1e2:	1d 82       	std	Y+5, r1	; 0x05
    d1e4:	1e 82       	std	Y+6, r1	; 0x06
    d1e6:	1f 82       	std	Y+7, r1	; 0x07
    d1e8:	18 86       	std	Y+8, r1	; 0x08
    d1ea:	8e 89       	ldd	r24, Y+22	; 0x16
    d1ec:	9f 89       	ldd	r25, Y+23	; 0x17
    d1ee:	21 e0       	ldi	r18, 0x01	; 1
    d1f0:	fc 01       	movw	r30, r24
    d1f2:	20 83       	st	Z, r18
    d1f4:	88 89       	ldd	r24, Y+16	; 0x10
    d1f6:	99 89       	ldd	r25, Y+17	; 0x11
    d1f8:	aa 89       	ldd	r26, Y+18	; 0x12
    d1fa:	bb 89       	ldd	r27, Y+19	; 0x13
    d1fc:	80 38       	cpi	r24, 0x80	; 128
    d1fe:	91 4d       	sbci	r25, 0xD1	; 209
    d200:	a0 4f       	sbci	r26, 0xF0	; 240
    d202:	b8 40       	sbci	r27, 0x08	; 8
    d204:	d8 f0       	brcs	.+54     	; 0xd23c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    d206:	84 e0       	ldi	r24, 0x04	; 4
    d208:	90 e0       	ldi	r25, 0x00	; 0
    d20a:	a0 e0       	ldi	r26, 0x00	; 0
    d20c:	b0 e0       	ldi	r27, 0x00	; 0
    d20e:	89 83       	std	Y+1, r24	; 0x01
    d210:	9a 83       	std	Y+2, r25	; 0x02
    d212:	ab 83       	std	Y+3, r26	; 0x03
    d214:	bc 83       	std	Y+4, r27	; 0x04
    d216:	29 81       	ldd	r18, Y+1	; 0x01
    d218:	3a 81       	ldd	r19, Y+2	; 0x02
    d21a:	4b 81       	ldd	r20, Y+3	; 0x03
    d21c:	5c 81       	ldd	r21, Y+4	; 0x04
    d21e:	88 89       	ldd	r24, Y+16	; 0x10
    d220:	99 89       	ldd	r25, Y+17	; 0x11
    d222:	aa 89       	ldd	r26, Y+18	; 0x12
    d224:	bb 89       	ldd	r27, Y+19	; 0x13
    d226:	bc 01       	movw	r22, r24
    d228:	cd 01       	movw	r24, r26
    d22a:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d22e:	dc 01       	movw	r26, r24
    d230:	cb 01       	movw	r24, r22
    d232:	8d 83       	std	Y+5, r24	; 0x05
    d234:	9e 83       	std	Y+6, r25	; 0x06
    d236:	af 83       	std	Y+7, r26	; 0x07
    d238:	b8 87       	std	Y+8, r27	; 0x08
    d23a:	6e c0       	rjmp	.+220    	; 0xd318 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    d23c:	19 86       	std	Y+9, r1	; 0x09
    d23e:	1a 86       	std	Y+10, r1	; 0x0a
    d240:	1b 86       	std	Y+11, r1	; 0x0b
    d242:	89 85       	ldd	r24, Y+9	; 0x09
    d244:	88 23       	and	r24, r24
    d246:	09 f0       	breq	.+2      	; 0xd24a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    d248:	52 c0       	rjmp	.+164    	; 0xd2ee <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    d24a:	8b 85       	ldd	r24, Y+11	; 0x0b
    d24c:	28 2f       	mov	r18, r24
    d24e:	30 e0       	ldi	r19, 0x00	; 0
    d250:	40 e0       	ldi	r20, 0x00	; 0
    d252:	50 e0       	ldi	r21, 0x00	; 0
    d254:	88 89       	ldd	r24, Y+16	; 0x10
    d256:	99 89       	ldd	r25, Y+17	; 0x11
    d258:	aa 89       	ldd	r26, Y+18	; 0x12
    d25a:	bb 89       	ldd	r27, Y+19	; 0x13
    d25c:	bc 01       	movw	r22, r24
    d25e:	cd 01       	movw	r24, r26
    d260:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d264:	9b 01       	movw	r18, r22
    d266:	ac 01       	movw	r20, r24
    d268:	80 e0       	ldi	r24, 0x00	; 0
    d26a:	99 ee       	ldi	r25, 0xE9	; 233
    d26c:	a4 ea       	ldi	r26, 0xA4	; 164
    d26e:	b5 e3       	ldi	r27, 0x35	; 53
    d270:	82 1b       	sub	r24, r18
    d272:	93 0b       	sbc	r25, r19
    d274:	a4 0b       	sbc	r26, r20
    d276:	b5 0b       	sbc	r27, r21
    d278:	8c 87       	std	Y+12, r24	; 0x0c
    d27a:	9d 87       	std	Y+13, r25	; 0x0d
    d27c:	ae 87       	std	Y+14, r26	; 0x0e
    d27e:	bf 87       	std	Y+15, r27	; 0x0f
    d280:	8b 85       	ldd	r24, Y+11	; 0x0b
    d282:	8e 5f       	subi	r24, 0xFE	; 254
    d284:	8b 87       	std	Y+11, r24	; 0x0b
    d286:	8c 85       	ldd	r24, Y+12	; 0x0c
    d288:	9d 85       	ldd	r25, Y+13	; 0x0d
    d28a:	ae 85       	ldd	r26, Y+14	; 0x0e
    d28c:	bf 85       	ldd	r27, Y+15	; 0x0f
    d28e:	81 15       	cp	r24, r1
    d290:	96 44       	sbci	r25, 0x46	; 70
    d292:	a3 4c       	sbci	r26, 0xC3	; 195
    d294:	b3 42       	sbci	r27, 0x23	; 35
    d296:	40 f1       	brcs	.+80     	; 0xd2e8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    d298:	8c 85       	ldd	r24, Y+12	; 0x0c
    d29a:	9d 85       	ldd	r25, Y+13	; 0x0d
    d29c:	ae 85       	ldd	r26, Y+14	; 0x0e
    d29e:	bf 85       	ldd	r27, Y+15	; 0x0f
    d2a0:	28 89       	ldd	r18, Y+16	; 0x10
    d2a2:	39 89       	ldd	r19, Y+17	; 0x11
    d2a4:	4a 89       	ldd	r20, Y+18	; 0x12
    d2a6:	5b 89       	ldd	r21, Y+19	; 0x13
    d2a8:	bc 01       	movw	r22, r24
    d2aa:	cd 01       	movw	r24, r26
    d2ac:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d2b0:	da 01       	movw	r26, r20
    d2b2:	c9 01       	movw	r24, r18
    d2b4:	8c 87       	std	Y+12, r24	; 0x0c
    d2b6:	9d 87       	std	Y+13, r25	; 0x0d
    d2b8:	ae 87       	std	Y+14, r26	; 0x0e
    d2ba:	bf 87       	std	Y+15, r27	; 0x0f
    d2bc:	8c 85       	ldd	r24, Y+12	; 0x0c
    d2be:	9d 85       	ldd	r25, Y+13	; 0x0d
    d2c0:	ae 85       	ldd	r26, Y+14	; 0x0e
    d2c2:	bf 85       	ldd	r27, Y+15	; 0x0f
    d2c4:	04 97       	sbiw	r24, 0x04	; 4
    d2c6:	a1 05       	cpc	r26, r1
    d2c8:	b1 05       	cpc	r27, r1
    d2ca:	08 f4       	brcc	.+2      	; 0xd2ce <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    d2cc:	ba cf       	rjmp	.-140    	; 0xd242 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d2ce:	81 e0       	ldi	r24, 0x01	; 1
    d2d0:	89 87       	std	Y+9, r24	; 0x09
    d2d2:	81 e0       	ldi	r24, 0x01	; 1
    d2d4:	8a 87       	std	Y+10, r24	; 0x0a
    d2d6:	8c 85       	ldd	r24, Y+12	; 0x0c
    d2d8:	9d 85       	ldd	r25, Y+13	; 0x0d
    d2da:	ae 85       	ldd	r26, Y+14	; 0x0e
    d2dc:	bf 85       	ldd	r27, Y+15	; 0x0f
    d2de:	89 83       	std	Y+1, r24	; 0x01
    d2e0:	9a 83       	std	Y+2, r25	; 0x02
    d2e2:	ab 83       	std	Y+3, r26	; 0x03
    d2e4:	bc 83       	std	Y+4, r27	; 0x04
    d2e6:	ad cf       	rjmp	.-166    	; 0xd242 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d2e8:	81 e0       	ldi	r24, 0x01	; 1
    d2ea:	89 87       	std	Y+9, r24	; 0x09
    d2ec:	aa cf       	rjmp	.-172    	; 0xd242 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    d2ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    d2f0:	88 23       	and	r24, r24
    d2f2:	91 f0       	breq	.+36     	; 0xd318 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    d2f4:	29 81       	ldd	r18, Y+1	; 0x01
    d2f6:	3a 81       	ldd	r19, Y+2	; 0x02
    d2f8:	4b 81       	ldd	r20, Y+3	; 0x03
    d2fa:	5c 81       	ldd	r21, Y+4	; 0x04
    d2fc:	88 89       	ldd	r24, Y+16	; 0x10
    d2fe:	99 89       	ldd	r25, Y+17	; 0x11
    d300:	aa 89       	ldd	r26, Y+18	; 0x12
    d302:	bb 89       	ldd	r27, Y+19	; 0x13
    d304:	bc 01       	movw	r22, r24
    d306:	cd 01       	movw	r24, r26
    d308:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d30c:	dc 01       	movw	r26, r24
    d30e:	cb 01       	movw	r24, r22
    d310:	8d 83       	std	Y+5, r24	; 0x05
    d312:	9e 83       	std	Y+6, r25	; 0x06
    d314:	af 83       	std	Y+7, r26	; 0x07
    d316:	b8 87       	std	Y+8, r27	; 0x08
    d318:	21 e0       	ldi	r18, 0x01	; 1
    d31a:	89 81       	ldd	r24, Y+1	; 0x01
    d31c:	9a 81       	ldd	r25, Y+2	; 0x02
    d31e:	ab 81       	ldd	r26, Y+3	; 0x03
    d320:	bc 81       	ldd	r27, Y+4	; 0x04
    d322:	04 97       	sbiw	r24, 0x04	; 4
    d324:	a1 05       	cpc	r26, r1
    d326:	b1 05       	cpc	r27, r1
    d328:	09 f0       	breq	.+2      	; 0xd32c <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    d32a:	20 e0       	ldi	r18, 0x00	; 0
    d32c:	88 8d       	ldd	r24, Y+24	; 0x18
    d32e:	99 8d       	ldd	r25, Y+25	; 0x19
    d330:	fc 01       	movw	r30, r24
    d332:	20 83       	st	Z, r18
    d334:	89 81       	ldd	r24, Y+1	; 0x01
    d336:	9a 81       	ldd	r25, Y+2	; 0x02
    d338:	ab 81       	ldd	r26, Y+3	; 0x03
    d33a:	bc 81       	ldd	r27, Y+4	; 0x04
    d33c:	88 0f       	add	r24, r24
    d33e:	99 1f       	adc	r25, r25
    d340:	aa 1f       	adc	r26, r26
    d342:	bb 1f       	adc	r27, r27
    d344:	88 0f       	add	r24, r24
    d346:	99 1f       	adc	r25, r25
    d348:	aa 1f       	adc	r26, r26
    d34a:	bb 1f       	adc	r27, r27
    d34c:	88 0f       	add	r24, r24
    d34e:	99 1f       	adc	r25, r25
    d350:	aa 1f       	adc	r26, r26
    d352:	bb 1f       	adc	r27, r27
    d354:	88 0f       	add	r24, r24
    d356:	99 1f       	adc	r25, r25
    d358:	aa 1f       	adc	r26, r26
    d35a:	bb 1f       	adc	r27, r27
    d35c:	88 0f       	add	r24, r24
    d35e:	99 1f       	adc	r25, r25
    d360:	aa 1f       	adc	r26, r26
    d362:	bb 1f       	adc	r27, r27
    d364:	88 0f       	add	r24, r24
    d366:	99 1f       	adc	r25, r25
    d368:	aa 1f       	adc	r26, r26
    d36a:	bb 1f       	adc	r27, r27
    d36c:	88 0f       	add	r24, r24
    d36e:	99 1f       	adc	r25, r25
    d370:	aa 1f       	adc	r26, r26
    d372:	bb 1f       	adc	r27, r27
    d374:	92 50       	subi	r25, 0x02	; 2
    d376:	a1 09       	sbc	r26, r1
    d378:	b1 09       	sbc	r27, r1
    d37a:	2c 89       	ldd	r18, Y+20	; 0x14
    d37c:	3d 89       	ldd	r19, Y+21	; 0x15
    d37e:	f9 01       	movw	r30, r18
    d380:	80 83       	st	Z, r24
    d382:	91 83       	std	Z+1, r25	; 0x01
    d384:	a2 83       	std	Z+2, r26	; 0x02
    d386:	b3 83       	std	Z+3, r27	; 0x03
    d388:	8c 89       	ldd	r24, Y+20	; 0x14
    d38a:	9d 89       	ldd	r25, Y+21	; 0x15
    d38c:	fc 01       	movw	r30, r24
    d38e:	14 82       	std	Z+4, r1	; 0x04
    d390:	15 82       	std	Z+5, r1	; 0x05
    d392:	16 82       	std	Z+6, r1	; 0x06
    d394:	17 82       	std	Z+7, r1	; 0x07
    d396:	2c 89       	ldd	r18, Y+20	; 0x14
    d398:	3d 89       	ldd	r19, Y+21	; 0x15
    d39a:	81 e0       	ldi	r24, 0x01	; 1
    d39c:	90 e0       	ldi	r25, 0x00	; 0
    d39e:	a0 e0       	ldi	r26, 0x00	; 0
    d3a0:	b0 e0       	ldi	r27, 0x00	; 0
    d3a2:	f9 01       	movw	r30, r18
    d3a4:	80 87       	std	Z+8, r24	; 0x08
    d3a6:	91 87       	std	Z+9, r25	; 0x09
    d3a8:	a2 87       	std	Z+10, r26	; 0x0a
    d3aa:	b3 87       	std	Z+11, r27	; 0x0b
    d3ac:	8d 81       	ldd	r24, Y+5	; 0x05
    d3ae:	9e 81       	ldd	r25, Y+6	; 0x06
    d3b0:	af 81       	ldd	r26, Y+7	; 0x07
    d3b2:	b8 85       	ldd	r27, Y+8	; 0x08
    d3b4:	bc 01       	movw	r22, r24
    d3b6:	cd 01       	movw	r24, r26
    d3b8:	69 96       	adiw	r28, 0x19	; 25
    d3ba:	cd bf       	out	0x3d, r28	; 61
    d3bc:	de bf       	out	0x3e, r29	; 62
    d3be:	df 91       	pop	r29
    d3c0:	cf 91       	pop	r28
    d3c2:	1f 91       	pop	r17
    d3c4:	0f 91       	pop	r16
    d3c6:	08 95       	ret

0000d3c8 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    d3c8:	0f 93       	push	r16
    d3ca:	1f 93       	push	r17
    d3cc:	cf 93       	push	r28
    d3ce:	df 93       	push	r29
    d3d0:	cd b7       	in	r28, 0x3d	; 61
    d3d2:	de b7       	in	r29, 0x3e	; 62
    d3d4:	6e 97       	sbiw	r28, 0x1e	; 30
    d3d6:	cd bf       	out	0x3d, r28	; 61
    d3d8:	de bf       	out	0x3e, r29	; 62
    d3da:	6d 8b       	std	Y+21, r22	; 0x15
    d3dc:	7e 8b       	std	Y+22, r23	; 0x16
    d3de:	8f 8b       	std	Y+23, r24	; 0x17
    d3e0:	98 8f       	std	Y+24, r25	; 0x18
    d3e2:	49 8f       	std	Y+25, r20	; 0x19
    d3e4:	5a 8f       	std	Y+26, r21	; 0x1a
    d3e6:	2b 8f       	std	Y+27, r18	; 0x1b
    d3e8:	3c 8f       	std	Y+28, r19	; 0x1c
    d3ea:	0d 8f       	std	Y+29, r16	; 0x1d
    d3ec:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    d3ee:	80 91 ad 4a 	lds	r24, 0x4AAD	; 0x804aad <_ZL8freqVCOB>
    d3f2:	90 91 ae 4a 	lds	r25, 0x4AAE	; 0x804aae <_ZL8freqVCOB+0x1>
    d3f6:	a0 91 af 4a 	lds	r26, 0x4AAF	; 0x804aaf <_ZL8freqVCOB+0x2>
    d3fa:	b0 91 b0 4a 	lds	r27, 0x4AB0	; 0x804ab0 <_ZL8freqVCOB+0x3>
    d3fe:	2d 89       	ldd	r18, Y+21	; 0x15
    d400:	3e 89       	ldd	r19, Y+22	; 0x16
    d402:	4f 89       	ldd	r20, Y+23	; 0x17
    d404:	58 8d       	ldd	r21, Y+24	; 0x18
    d406:	bc 01       	movw	r22, r24
    d408:	cd 01       	movw	r24, r26
    d40a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d40e:	da 01       	movw	r26, r20
    d410:	c9 01       	movw	r24, r18
    d412:	89 83       	std	Y+1, r24	; 0x01
    d414:	9a 83       	std	Y+2, r25	; 0x02
    d416:	ab 83       	std	Y+3, r26	; 0x03
    d418:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    d41a:	80 91 ad 4a 	lds	r24, 0x4AAD	; 0x804aad <_ZL8freqVCOB>
    d41e:	90 91 ae 4a 	lds	r25, 0x4AAE	; 0x804aae <_ZL8freqVCOB+0x1>
    d422:	a0 91 af 4a 	lds	r26, 0x4AAF	; 0x804aaf <_ZL8freqVCOB+0x2>
    d426:	b0 91 b0 4a 	lds	r27, 0x4AB0	; 0x804ab0 <_ZL8freqVCOB+0x3>
    d42a:	2d 89       	ldd	r18, Y+21	; 0x15
    d42c:	3e 89       	ldd	r19, Y+22	; 0x16
    d42e:	4f 89       	ldd	r20, Y+23	; 0x17
    d430:	58 8d       	ldd	r21, Y+24	; 0x18
    d432:	bc 01       	movw	r22, r24
    d434:	cd 01       	movw	r24, r26
    d436:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d43a:	dc 01       	movw	r26, r24
    d43c:	cb 01       	movw	r24, r22
    d43e:	8d 87       	std	Y+13, r24	; 0x0d
    d440:	9e 87       	std	Y+14, r25	; 0x0e
    d442:	af 87       	std	Y+15, r26	; 0x0f
    d444:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    d446:	8d 89       	ldd	r24, Y+21	; 0x15
    d448:	9e 89       	ldd	r25, Y+22	; 0x16
    d44a:	af 89       	ldd	r26, Y+23	; 0x17
    d44c:	b8 8d       	ldd	r27, Y+24	; 0x18
    d44e:	89 8b       	std	Y+17, r24	; 0x11
    d450:	9a 8b       	std	Y+18, r25	; 0x12
    d452:	ab 8b       	std	Y+19, r26	; 0x13
    d454:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    d456:	9e 01       	movw	r18, r28
    d458:	2f 5e       	subi	r18, 0xEF	; 239
    d45a:	3f 4f       	sbci	r19, 0xFF	; 255
    d45c:	ce 01       	movw	r24, r28
    d45e:	0d 96       	adiw	r24, 0x0d	; 13
    d460:	b9 01       	movw	r22, r18
    d462:	0e 94 27 68 	call	0xd04e	; 0xd04e <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    d466:	80 91 ad 4a 	lds	r24, 0x4AAD	; 0x804aad <_ZL8freqVCOB>
    d46a:	90 91 ae 4a 	lds	r25, 0x4AAE	; 0x804aae <_ZL8freqVCOB+0x1>
    d46e:	a0 91 af 4a 	lds	r26, 0x4AAF	; 0x804aaf <_ZL8freqVCOB+0x2>
    d472:	b0 91 b0 4a 	lds	r27, 0x4AB0	; 0x804ab0 <_ZL8freqVCOB+0x3>
    d476:	8d 8b       	std	Y+21, r24	; 0x15
    d478:	9e 8b       	std	Y+22, r25	; 0x16
    d47a:	af 8b       	std	Y+23, r26	; 0x17
    d47c:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    d47e:	29 89       	ldd	r18, Y+17	; 0x11
    d480:	3a 89       	ldd	r19, Y+18	; 0x12
    d482:	4b 89       	ldd	r20, Y+19	; 0x13
    d484:	5c 89       	ldd	r21, Y+20	; 0x14
    d486:	89 81       	ldd	r24, Y+1	; 0x01
    d488:	9a 81       	ldd	r25, Y+2	; 0x02
    d48a:	ab 81       	ldd	r26, Y+3	; 0x03
    d48c:	bc 81       	ldd	r27, Y+4	; 0x04
    d48e:	bc 01       	movw	r22, r24
    d490:	cd 01       	movw	r24, r26
    d492:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d496:	9b 01       	movw	r18, r22
    d498:	ac 01       	movw	r20, r24
    d49a:	8d 85       	ldd	r24, Y+13	; 0x0d
    d49c:	9e 85       	ldd	r25, Y+14	; 0x0e
    d49e:	af 85       	ldd	r26, Y+15	; 0x0f
    d4a0:	b8 89       	ldd	r27, Y+16	; 0x10
    d4a2:	28 0f       	add	r18, r24
    d4a4:	39 1f       	adc	r19, r25
    d4a6:	4a 1f       	adc	r20, r26
    d4a8:	5b 1f       	adc	r21, r27
    d4aa:	8d 89       	ldd	r24, Y+21	; 0x15
    d4ac:	9e 89       	ldd	r25, Y+22	; 0x16
    d4ae:	af 89       	ldd	r26, Y+23	; 0x17
    d4b0:	b8 8d       	ldd	r27, Y+24	; 0x18
    d4b2:	bc 01       	movw	r22, r24
    d4b4:	cd 01       	movw	r24, r26
    d4b6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d4ba:	da 01       	movw	r26, r20
    d4bc:	c9 01       	movw	r24, r18
    d4be:	8d 8b       	std	Y+21, r24	; 0x15
    d4c0:	9e 8b       	std	Y+22, r25	; 0x16
    d4c2:	af 8b       	std	Y+23, r26	; 0x17
    d4c4:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    d4c6:	89 89       	ldd	r24, Y+17	; 0x11
    d4c8:	9a 89       	ldd	r25, Y+18	; 0x12
    d4ca:	ab 89       	ldd	r26, Y+19	; 0x13
    d4cc:	bc 89       	ldd	r27, Y+20	; 0x14
    d4ce:	2d 89       	ldd	r18, Y+21	; 0x15
    d4d0:	3e 89       	ldd	r19, Y+22	; 0x16
    d4d2:	4f 89       	ldd	r20, Y+23	; 0x17
    d4d4:	58 8d       	ldd	r21, Y+24	; 0x18
    d4d6:	bc 01       	movw	r22, r24
    d4d8:	cd 01       	movw	r24, r26
    d4da:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d4de:	dc 01       	movw	r26, r24
    d4e0:	cb 01       	movw	r24, r22
    d4e2:	8d 8b       	std	Y+21, r24	; 0x15
    d4e4:	9e 8b       	std	Y+22, r25	; 0x16
    d4e6:	af 8b       	std	Y+23, r26	; 0x17
    d4e8:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    d4ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    d4ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    d4ee:	af 85       	ldd	r26, Y+15	; 0x0f
    d4f0:	b8 89       	ldd	r27, Y+16	; 0x10
    d4f2:	89 2b       	or	r24, r25
    d4f4:	8a 2b       	or	r24, r26
    d4f6:	8b 2b       	or	r24, r27
    d4f8:	71 f4       	brne	.+28     	; 0xd516 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    d4fa:	89 81       	ldd	r24, Y+1	; 0x01
    d4fc:	9a 81       	ldd	r25, Y+2	; 0x02
    d4fe:	ab 81       	ldd	r26, Y+3	; 0x03
    d500:	bc 81       	ldd	r27, Y+4	; 0x04
    d502:	81 70       	andi	r24, 0x01	; 1
    d504:	99 27       	eor	r25, r25
    d506:	aa 27       	eor	r26, r26
    d508:	bb 27       	eor	r27, r27
    d50a:	89 2b       	or	r24, r25
    d50c:	8a 2b       	or	r24, r26
    d50e:	8b 2b       	or	r24, r27
    d510:	11 f4       	brne	.+4      	; 0xd516 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    d512:	21 e0       	ldi	r18, 0x01	; 1
    d514:	01 c0       	rjmp	.+2      	; 0xd518 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    d516:	20 e0       	ldi	r18, 0x00	; 0
    d518:	8b 8d       	ldd	r24, Y+27	; 0x1b
    d51a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    d51c:	fc 01       	movw	r30, r24
    d51e:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    d520:	89 81       	ldd	r24, Y+1	; 0x01
    d522:	9a 81       	ldd	r25, Y+2	; 0x02
    d524:	ab 81       	ldd	r26, Y+3	; 0x03
    d526:	bc 81       	ldd	r27, Y+4	; 0x04
    d528:	04 97       	sbiw	r24, 0x04	; 4
    d52a:	a1 05       	cpc	r26, r1
    d52c:	b1 05       	cpc	r27, r1
    d52e:	41 f4       	brne	.+16     	; 0xd540 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    d530:	8b 8d       	ldd	r24, Y+27	; 0x1b
    d532:	9c 8d       	ldd	r25, Y+28	; 0x1c
    d534:	fc 01       	movw	r30, r24
    d536:	80 81       	ld	r24, Z
    d538:	88 23       	and	r24, r24
    d53a:	11 f0       	breq	.+4      	; 0xd540 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    d53c:	21 e0       	ldi	r18, 0x01	; 1
    d53e:	01 c0       	rjmp	.+2      	; 0xd542 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    d540:	20 e0       	ldi	r18, 0x00	; 0
    d542:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d544:	9e 8d       	ldd	r25, Y+30	; 0x1e
    d546:	fc 01       	movw	r30, r24
    d548:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    d54a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    d54c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    d54e:	fc 01       	movw	r30, r24
    d550:	80 81       	ld	r24, Z
    d552:	88 23       	and	r24, r24
    d554:	d1 f0       	breq	.+52     	; 0xd58a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    d556:	89 8d       	ldd	r24, Y+25	; 0x19
    d558:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d55a:	fc 01       	movw	r30, r24
    d55c:	10 82       	st	Z, r1
    d55e:	11 82       	std	Z+1, r1	; 0x01
    d560:	12 82       	std	Z+2, r1	; 0x02
    d562:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    d564:	89 8d       	ldd	r24, Y+25	; 0x19
    d566:	9a 8d       	ldd	r25, Y+26	; 0x1a
    d568:	fc 01       	movw	r30, r24
    d56a:	14 82       	std	Z+4, r1	; 0x04
    d56c:	15 82       	std	Z+5, r1	; 0x05
    d56e:	16 82       	std	Z+6, r1	; 0x06
    d570:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    d572:	29 8d       	ldd	r18, Y+25	; 0x19
    d574:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d576:	81 e0       	ldi	r24, 0x01	; 1
    d578:	90 e0       	ldi	r25, 0x00	; 0
    d57a:	a0 e0       	ldi	r26, 0x00	; 0
    d57c:	b0 e0       	ldi	r27, 0x00	; 0
    d57e:	f9 01       	movw	r30, r18
    d580:	80 87       	std	Z+8, r24	; 0x08
    d582:	91 87       	std	Z+9, r25	; 0x09
    d584:	a2 87       	std	Z+10, r26	; 0x0a
    d586:	b3 87       	std	Z+11, r27	; 0x0b
    d588:	92 c0       	rjmp	.+292    	; 0xd6ae <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    d58a:	8d 85       	ldd	r24, Y+13	; 0x0d
    d58c:	9e 85       	ldd	r25, Y+14	; 0x0e
    d58e:	af 85       	ldd	r26, Y+15	; 0x0f
    d590:	b8 89       	ldd	r27, Y+16	; 0x10
    d592:	88 0f       	add	r24, r24
    d594:	99 1f       	adc	r25, r25
    d596:	aa 1f       	adc	r26, r26
    d598:	bb 1f       	adc	r27, r27
    d59a:	88 0f       	add	r24, r24
    d59c:	99 1f       	adc	r25, r25
    d59e:	aa 1f       	adc	r26, r26
    d5a0:	bb 1f       	adc	r27, r27
    d5a2:	88 0f       	add	r24, r24
    d5a4:	99 1f       	adc	r25, r25
    d5a6:	aa 1f       	adc	r26, r26
    d5a8:	bb 1f       	adc	r27, r27
    d5aa:	88 0f       	add	r24, r24
    d5ac:	99 1f       	adc	r25, r25
    d5ae:	aa 1f       	adc	r26, r26
    d5b0:	bb 1f       	adc	r27, r27
    d5b2:	88 0f       	add	r24, r24
    d5b4:	99 1f       	adc	r25, r25
    d5b6:	aa 1f       	adc	r26, r26
    d5b8:	bb 1f       	adc	r27, r27
    d5ba:	88 0f       	add	r24, r24
    d5bc:	99 1f       	adc	r25, r25
    d5be:	aa 1f       	adc	r26, r26
    d5c0:	bb 1f       	adc	r27, r27
    d5c2:	88 0f       	add	r24, r24
    d5c4:	99 1f       	adc	r25, r25
    d5c6:	aa 1f       	adc	r26, r26
    d5c8:	bb 1f       	adc	r27, r27
    d5ca:	8d 83       	std	Y+5, r24	; 0x05
    d5cc:	9e 83       	std	Y+6, r25	; 0x06
    d5ce:	af 83       	std	Y+7, r26	; 0x07
    d5d0:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    d5d2:	29 89       	ldd	r18, Y+17	; 0x11
    d5d4:	3a 89       	ldd	r19, Y+18	; 0x12
    d5d6:	4b 89       	ldd	r20, Y+19	; 0x13
    d5d8:	5c 89       	ldd	r21, Y+20	; 0x14
    d5da:	8d 81       	ldd	r24, Y+5	; 0x05
    d5dc:	9e 81       	ldd	r25, Y+6	; 0x06
    d5de:	af 81       	ldd	r26, Y+7	; 0x07
    d5e0:	b8 85       	ldd	r27, Y+8	; 0x08
    d5e2:	bc 01       	movw	r22, r24
    d5e4:	cd 01       	movw	r24, r26
    d5e6:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    d5ea:	da 01       	movw	r26, r20
    d5ec:	c9 01       	movw	r24, r18
    d5ee:	89 87       	std	Y+9, r24	; 0x09
    d5f0:	9a 87       	std	Y+10, r25	; 0x0a
    d5f2:	ab 87       	std	Y+11, r26	; 0x0b
    d5f4:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    d5f6:	89 81       	ldd	r24, Y+1	; 0x01
    d5f8:	9a 81       	ldd	r25, Y+2	; 0x02
    d5fa:	ab 81       	ldd	r26, Y+3	; 0x03
    d5fc:	bc 81       	ldd	r27, Y+4	; 0x04
    d5fe:	88 0f       	add	r24, r24
    d600:	99 1f       	adc	r25, r25
    d602:	aa 1f       	adc	r26, r26
    d604:	bb 1f       	adc	r27, r27
    d606:	88 0f       	add	r24, r24
    d608:	99 1f       	adc	r25, r25
    d60a:	aa 1f       	adc	r26, r26
    d60c:	bb 1f       	adc	r27, r27
    d60e:	88 0f       	add	r24, r24
    d610:	99 1f       	adc	r25, r25
    d612:	aa 1f       	adc	r26, r26
    d614:	bb 1f       	adc	r27, r27
    d616:	88 0f       	add	r24, r24
    d618:	99 1f       	adc	r25, r25
    d61a:	aa 1f       	adc	r26, r26
    d61c:	bb 1f       	adc	r27, r27
    d61e:	88 0f       	add	r24, r24
    d620:	99 1f       	adc	r25, r25
    d622:	aa 1f       	adc	r26, r26
    d624:	bb 1f       	adc	r27, r27
    d626:	88 0f       	add	r24, r24
    d628:	99 1f       	adc	r25, r25
    d62a:	aa 1f       	adc	r26, r26
    d62c:	bb 1f       	adc	r27, r27
    d62e:	88 0f       	add	r24, r24
    d630:	99 1f       	adc	r25, r25
    d632:	aa 1f       	adc	r26, r26
    d634:	bb 1f       	adc	r27, r27
    d636:	9c 01       	movw	r18, r24
    d638:	ad 01       	movw	r20, r26
    d63a:	89 85       	ldd	r24, Y+9	; 0x09
    d63c:	9a 85       	ldd	r25, Y+10	; 0x0a
    d63e:	ab 85       	ldd	r26, Y+11	; 0x0b
    d640:	bc 85       	ldd	r27, Y+12	; 0x0c
    d642:	82 0f       	add	r24, r18
    d644:	93 1f       	adc	r25, r19
    d646:	a4 1f       	adc	r26, r20
    d648:	b5 1f       	adc	r27, r21
    d64a:	92 50       	subi	r25, 0x02	; 2
    d64c:	a1 09       	sbc	r26, r1
    d64e:	b1 09       	sbc	r27, r1
    d650:	29 8d       	ldd	r18, Y+25	; 0x19
    d652:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d654:	f9 01       	movw	r30, r18
    d656:	80 83       	st	Z, r24
    d658:	91 83       	std	Z+1, r25	; 0x01
    d65a:	a2 83       	std	Z+2, r26	; 0x02
    d65c:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    d65e:	29 89       	ldd	r18, Y+17	; 0x11
    d660:	3a 89       	ldd	r19, Y+18	; 0x12
    d662:	4b 89       	ldd	r20, Y+19	; 0x13
    d664:	5c 89       	ldd	r21, Y+20	; 0x14
    d666:	89 85       	ldd	r24, Y+9	; 0x09
    d668:	9a 85       	ldd	r25, Y+10	; 0x0a
    d66a:	ab 85       	ldd	r26, Y+11	; 0x0b
    d66c:	bc 85       	ldd	r27, Y+12	; 0x0c
    d66e:	bc 01       	movw	r22, r24
    d670:	cd 01       	movw	r24, r26
    d672:	0e 94 b4 79 	call	0xf368	; 0xf368 <__mulsi3>
    d676:	9b 01       	movw	r18, r22
    d678:	ac 01       	movw	r20, r24
    d67a:	8d 81       	ldd	r24, Y+5	; 0x05
    d67c:	9e 81       	ldd	r25, Y+6	; 0x06
    d67e:	af 81       	ldd	r26, Y+7	; 0x07
    d680:	b8 85       	ldd	r27, Y+8	; 0x08
    d682:	82 1b       	sub	r24, r18
    d684:	93 0b       	sbc	r25, r19
    d686:	a4 0b       	sbc	r26, r20
    d688:	b5 0b       	sbc	r27, r21
    d68a:	29 8d       	ldd	r18, Y+25	; 0x19
    d68c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d68e:	f9 01       	movw	r30, r18
    d690:	84 83       	std	Z+4, r24	; 0x04
    d692:	95 83       	std	Z+5, r25	; 0x05
    d694:	a6 83       	std	Z+6, r26	; 0x06
    d696:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    d698:	89 89       	ldd	r24, Y+17	; 0x11
    d69a:	9a 89       	ldd	r25, Y+18	; 0x12
    d69c:	ab 89       	ldd	r26, Y+19	; 0x13
    d69e:	bc 89       	ldd	r27, Y+20	; 0x14
    d6a0:	29 8d       	ldd	r18, Y+25	; 0x19
    d6a2:	3a 8d       	ldd	r19, Y+26	; 0x1a
    d6a4:	f9 01       	movw	r30, r18
    d6a6:	80 87       	std	Z+8, r24	; 0x08
    d6a8:	91 87       	std	Z+9, r25	; 0x09
    d6aa:	a2 87       	std	Z+10, r26	; 0x0a
    d6ac:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    d6ae:	8d 89       	ldd	r24, Y+21	; 0x15
    d6b0:	9e 89       	ldd	r25, Y+22	; 0x16
    d6b2:	af 89       	ldd	r26, Y+23	; 0x17
    d6b4:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    d6b6:	bc 01       	movw	r22, r24
    d6b8:	cd 01       	movw	r24, r26
    d6ba:	6e 96       	adiw	r28, 0x1e	; 30
    d6bc:	cd bf       	out	0x3d, r28	; 61
    d6be:	de bf       	out	0x3e, r29	; 62
    d6c0:	df 91       	pop	r29
    d6c2:	cf 91       	pop	r28
    d6c4:	1f 91       	pop	r17
    d6c6:	0f 91       	pop	r16
    d6c8:	08 95       	ret

0000d6ca <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    d6ca:	cf 93       	push	r28
    d6cc:	df 93       	push	r29
    d6ce:	cd b7       	in	r28, 0x3d	; 61
    d6d0:	de b7       	in	r29, 0x3e	; 62
    d6d2:	26 97       	sbiw	r28, 0x06	; 6
    d6d4:	cd bf       	out	0x3d, r28	; 61
    d6d6:	de bf       	out	0x3e, r29	; 62
    d6d8:	8b 83       	std	Y+3, r24	; 0x03
    d6da:	6c 83       	std	Y+4, r22	; 0x04
    d6dc:	7d 83       	std	Y+5, r23	; 0x05
    d6de:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    d6e0:	8a e0       	ldi	r24, 0x0A	; 10
    d6e2:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    d6e4:	89 81       	ldd	r24, Y+1	; 0x01
    d6e6:	9f ef       	ldi	r25, 0xFF	; 255
    d6e8:	98 0f       	add	r25, r24
    d6ea:	99 83       	std	Y+1, r25	; 0x01
    d6ec:	88 23       	and	r24, r24
    d6ee:	a1 f0       	breq	.+40     	; 0xd718 <_Z17si5351_write_bulkhPhh+0x4e>
    d6f0:	8c 81       	ldd	r24, Y+4	; 0x04
    d6f2:	9d 81       	ldd	r25, Y+5	; 0x05
    d6f4:	2e 81       	ldd	r18, Y+6	; 0x06
    d6f6:	ac 01       	movw	r20, r24
    d6f8:	6b 81       	ldd	r22, Y+3	; 0x03
    d6fa:	80 ec       	ldi	r24, 0xC0	; 192
    d6fc:	0e 94 db 50 	call	0xa1b6	; 0xa1b6 <I2C_1_SendData>
    d700:	28 2f       	mov	r18, r24
    d702:	81 e0       	ldi	r24, 0x01	; 1
    d704:	9e 81       	ldd	r25, Y+6	; 0x06
    d706:	29 17       	cp	r18, r25
    d708:	09 f4       	brne	.+2      	; 0xd70c <_Z17si5351_write_bulkhPhh+0x42>
    d70a:	80 e0       	ldi	r24, 0x00	; 0
    d70c:	8a 83       	std	Y+2, r24	; 0x02
    d70e:	8a 81       	ldd	r24, Y+2	; 0x02
    d710:	88 23       	and	r24, r24
    d712:	11 f0       	breq	.+4      	; 0xd718 <_Z17si5351_write_bulkhPhh+0x4e>
    d714:	81 e0       	ldi	r24, 0x01	; 1
    d716:	01 c0       	rjmp	.+2      	; 0xd71a <_Z17si5351_write_bulkhPhh+0x50>
    d718:	80 e0       	ldi	r24, 0x00	; 0
    d71a:	88 23       	and	r24, r24
    d71c:	09 f0       	breq	.+2      	; 0xd720 <_Z17si5351_write_bulkhPhh+0x56>
    d71e:	e2 cf       	rjmp	.-60     	; 0xd6e4 <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    d720:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d722:	26 96       	adiw	r28, 0x06	; 6
    d724:	cd bf       	out	0x3d, r28	; 61
    d726:	de bf       	out	0x3e, r29	; 62
    d728:	df 91       	pop	r29
    d72a:	cf 91       	pop	r28
    d72c:	08 95       	ret

0000d72e <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    d72e:	cf 93       	push	r28
    d730:	df 93       	push	r29
    d732:	cd b7       	in	r28, 0x3d	; 61
    d734:	de b7       	in	r29, 0x3e	; 62
    d736:	26 97       	sbiw	r28, 0x06	; 6
    d738:	cd bf       	out	0x3d, r28	; 61
    d73a:	de bf       	out	0x3e, r29	; 62
    d73c:	8b 83       	std	Y+3, r24	; 0x03
    d73e:	6c 83       	std	Y+4, r22	; 0x04
    d740:	7d 83       	std	Y+5, r23	; 0x05
    d742:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    d744:	8a e0       	ldi	r24, 0x0A	; 10
    d746:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    d748:	89 81       	ldd	r24, Y+1	; 0x01
    d74a:	9f ef       	ldi	r25, 0xFF	; 255
    d74c:	98 0f       	add	r25, r24
    d74e:	99 83       	std	Y+1, r25	; 0x01
    d750:	88 23       	and	r24, r24
    d752:	a1 f0       	breq	.+40     	; 0xd77c <_Z16si5351_read_bulkhPhh+0x4e>
    d754:	8c 81       	ldd	r24, Y+4	; 0x04
    d756:	9d 81       	ldd	r25, Y+5	; 0x05
    d758:	2e 81       	ldd	r18, Y+6	; 0x06
    d75a:	ac 01       	movw	r20, r24
    d75c:	6b 81       	ldd	r22, Y+3	; 0x03
    d75e:	80 ec       	ldi	r24, 0xC0	; 192
    d760:	0e 94 44 51 	call	0xa288	; 0xa288 <I2C_1_GetData>
    d764:	28 2f       	mov	r18, r24
    d766:	81 e0       	ldi	r24, 0x01	; 1
    d768:	9e 81       	ldd	r25, Y+6	; 0x06
    d76a:	29 17       	cp	r18, r25
    d76c:	09 f4       	brne	.+2      	; 0xd770 <_Z16si5351_read_bulkhPhh+0x42>
    d76e:	80 e0       	ldi	r24, 0x00	; 0
    d770:	8a 83       	std	Y+2, r24	; 0x02
    d772:	8a 81       	ldd	r24, Y+2	; 0x02
    d774:	88 23       	and	r24, r24
    d776:	11 f0       	breq	.+4      	; 0xd77c <_Z16si5351_read_bulkhPhh+0x4e>
    d778:	81 e0       	ldi	r24, 0x01	; 1
    d77a:	01 c0       	rjmp	.+2      	; 0xd77e <_Z16si5351_read_bulkhPhh+0x50>
    d77c:	80 e0       	ldi	r24, 0x00	; 0
    d77e:	88 23       	and	r24, r24
    d780:	09 f0       	breq	.+2      	; 0xd784 <_Z16si5351_read_bulkhPhh+0x56>
    d782:	e2 cf       	rjmp	.-60     	; 0xd748 <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    d784:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d786:	26 96       	adiw	r28, 0x06	; 6
    d788:	cd bf       	out	0x3d, r28	; 61
    d78a:	de bf       	out	0x3e, r29	; 62
    d78c:	df 91       	pop	r29
    d78e:	cf 91       	pop	r28
    d790:	08 95       	ret

0000d792 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    d792:	cf 93       	push	r28
    d794:	df 93       	push	r29
    d796:	cd b7       	in	r28, 0x3d	; 61
    d798:	de b7       	in	r29, 0x3e	; 62
    d79a:	25 97       	sbiw	r28, 0x05	; 5
    d79c:	cd bf       	out	0x3d, r28	; 61
    d79e:	de bf       	out	0x3e, r29	; 62
    d7a0:	8c 83       	std	Y+4, r24	; 0x04
    d7a2:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d7a4:	8c 81       	ldd	r24, Y+4	; 0x04
    d7a6:	20 e1       	ldi	r18, 0x10	; 16
    d7a8:	28 0f       	add	r18, r24
    d7aa:	ce 01       	movw	r24, r28
    d7ac:	02 96       	adiw	r24, 0x02	; 2
    d7ae:	41 e0       	ldi	r20, 0x01	; 1
    d7b0:	bc 01       	movw	r22, r24
    d7b2:	82 2f       	mov	r24, r18
    d7b4:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    d7b8:	88 23       	and	r24, r24
    d7ba:	11 f0       	breq	.+4      	; 0xd7c0 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    d7bc:	81 e0       	ldi	r24, 0x01	; 1
    d7be:	20 c0       	rjmp	.+64     	; 0xd800 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    d7c0:	8a 81       	ldd	r24, Y+2	; 0x02
    d7c2:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    d7c4:	8d 81       	ldd	r24, Y+5	; 0x05
    d7c6:	81 30       	cpi	r24, 0x01	; 1
    d7c8:	21 f4       	brne	.+8      	; 0xd7d2 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    d7ca:	89 81       	ldd	r24, Y+1	; 0x01
    d7cc:	8f 7d       	andi	r24, 0xDF	; 223
    d7ce:	89 83       	std	Y+1, r24	; 0x01
    d7d0:	06 c0       	rjmp	.+12     	; 0xd7de <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    d7d2:	8d 81       	ldd	r24, Y+5	; 0x05
    d7d4:	82 30       	cpi	r24, 0x02	; 2
    d7d6:	19 f4       	brne	.+6      	; 0xd7de <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    d7d8:	89 81       	ldd	r24, Y+1	; 0x01
    d7da:	80 62       	ori	r24, 0x20	; 32
    d7dc:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d7de:	89 81       	ldd	r24, Y+1	; 0x01
    d7e0:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d7e2:	8c 81       	ldd	r24, Y+4	; 0x04
    d7e4:	20 e1       	ldi	r18, 0x10	; 16
    d7e6:	28 0f       	add	r18, r24
    d7e8:	ce 01       	movw	r24, r28
    d7ea:	02 96       	adiw	r24, 0x02	; 2
    d7ec:	41 e0       	ldi	r20, 0x01	; 1
    d7ee:	bc 01       	movw	r22, r24
    d7f0:	82 2f       	mov	r24, r18
    d7f2:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    d7f6:	88 23       	and	r24, r24
    d7f8:	11 f0       	breq	.+4      	; 0xd7fe <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    d7fa:	81 e0       	ldi	r24, 0x01	; 1
    d7fc:	01 c0       	rjmp	.+2      	; 0xd800 <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    d7fe:	80 e0       	ldi	r24, 0x00	; 0
	}
    d800:	25 96       	adiw	r28, 0x05	; 5
    d802:	cd bf       	out	0x3d, r28	; 61
    d804:	de bf       	out	0x3e, r29	; 62
    d806:	df 91       	pop	r29
    d808:	cf 91       	pop	r28
    d80a:	08 95       	ret

0000d80c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    d80c:	8f 92       	push	r8
    d80e:	af 92       	push	r10
    d810:	cf 92       	push	r12
    d812:	df 92       	push	r13
    d814:	ef 92       	push	r14
    d816:	ff 92       	push	r15
    d818:	0f 93       	push	r16
    d81a:	1f 93       	push	r17
    d81c:	cf 93       	push	r28
    d81e:	df 93       	push	r29
    d820:	cd b7       	in	r28, 0x3d	; 61
    d822:	de b7       	in	r29, 0x3e	; 62
    d824:	6e 97       	sbiw	r28, 0x1e	; 30
    d826:	cd bf       	out	0x3d, r28	; 61
    d828:	de bf       	out	0x3e, r29	; 62
    d82a:	88 8b       	std	Y+16, r24	; 0x10
    d82c:	c9 8a       	std	Y+17, r12	; 0x11
    d82e:	da 8a       	std	Y+18, r13	; 0x12
    d830:	eb 8a       	std	Y+19, r14	; 0x13
    d832:	fc 8a       	std	Y+20, r15	; 0x14
    d834:	0d 8b       	std	Y+21, r16	; 0x15
    d836:	1e 8b       	std	Y+22, r17	; 0x16
    d838:	2f 8b       	std	Y+23, r18	; 0x17
    d83a:	38 8f       	std	Y+24, r19	; 0x18
    d83c:	49 8f       	std	Y+25, r20	; 0x19
    d83e:	5a 8f       	std	Y+26, r21	; 0x1a
    d840:	6b 8f       	std	Y+27, r22	; 0x1b
    d842:	7c 8f       	std	Y+28, r23	; 0x1c
    d844:	ad 8e       	std	Y+29, r10	; 0x1d
    d846:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    d848:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    d84a:	89 81       	ldd	r24, Y+1	; 0x01
    d84c:	91 e0       	ldi	r25, 0x01	; 1
    d84e:	98 0f       	add	r25, r24
    d850:	99 83       	std	Y+1, r25	; 0x01
    d852:	88 2f       	mov	r24, r24
    d854:	90 e0       	ldi	r25, 0x00	; 0
    d856:	4a 8d       	ldd	r20, Y+26	; 0x1a
    d858:	9e 01       	movw	r18, r28
    d85a:	2d 5f       	subi	r18, 0xFD	; 253
    d85c:	3f 4f       	sbci	r19, 0xFF	; 255
    d85e:	82 0f       	add	r24, r18
    d860:	93 1f       	adc	r25, r19
    d862:	fc 01       	movw	r30, r24
    d864:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    d866:	89 81       	ldd	r24, Y+1	; 0x01
    d868:	91 e0       	ldi	r25, 0x01	; 1
    d86a:	98 0f       	add	r25, r24
    d86c:	99 83       	std	Y+1, r25	; 0x01
    d86e:	88 2f       	mov	r24, r24
    d870:	90 e0       	ldi	r25, 0x00	; 0
    d872:	49 8d       	ldd	r20, Y+25	; 0x19
    d874:	9e 01       	movw	r18, r28
    d876:	2d 5f       	subi	r18, 0xFD	; 253
    d878:	3f 4f       	sbci	r19, 0xFF	; 255
    d87a:	82 0f       	add	r24, r18
    d87c:	93 1f       	adc	r25, r19
    d87e:	fc 01       	movw	r30, r24
    d880:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    d882:	88 89       	ldd	r24, Y+16	; 0x10
    d884:	88 0f       	add	r24, r24
    d886:	88 0f       	add	r24, r24
    d888:	88 0f       	add	r24, r24
    d88a:	2c e2       	ldi	r18, 0x2C	; 44
    d88c:	28 0f       	add	r18, r24
    d88e:	ce 01       	movw	r24, r28
    d890:	0e 96       	adiw	r24, 0x0e	; 14
    d892:	41 e0       	ldi	r20, 0x01	; 1
    d894:	bc 01       	movw	r22, r24
    d896:	82 2f       	mov	r24, r18
    d898:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    d89c:	88 23       	and	r24, r24
    d89e:	11 f0       	breq	.+4      	; 0xd8a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    d8a0:	81 e0       	ldi	r24, 0x01	; 1
    d8a2:	bc c0       	rjmp	.+376    	; 0xda1c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    d8a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d8a6:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    d8a8:	8a 81       	ldd	r24, Y+2	; 0x02
    d8aa:	8c 7f       	andi	r24, 0xFC	; 252
    d8ac:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    d8ae:	89 81       	ldd	r24, Y+1	; 0x01
    d8b0:	91 e0       	ldi	r25, 0x01	; 1
    d8b2:	98 0f       	add	r25, r24
    d8b4:	99 83       	std	Y+1, r25	; 0x01
    d8b6:	88 2f       	mov	r24, r24
    d8b8:	90 e0       	ldi	r25, 0x00	; 0
    d8ba:	2b 89       	ldd	r18, Y+19	; 0x13
    d8bc:	32 2f       	mov	r19, r18
    d8be:	33 70       	andi	r19, 0x03	; 3
    d8c0:	2a 81       	ldd	r18, Y+2	; 0x02
    d8c2:	23 2b       	or	r18, r19
    d8c4:	42 2f       	mov	r20, r18
    d8c6:	9e 01       	movw	r18, r28
    d8c8:	2d 5f       	subi	r18, 0xFD	; 253
    d8ca:	3f 4f       	sbci	r19, 0xFF	; 255
    d8cc:	82 0f       	add	r24, r18
    d8ce:	93 1f       	adc	r25, r19
    d8d0:	fc 01       	movw	r30, r24
    d8d2:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    d8d4:	89 81       	ldd	r24, Y+1	; 0x01
    d8d6:	91 e0       	ldi	r25, 0x01	; 1
    d8d8:	98 0f       	add	r25, r24
    d8da:	99 83       	std	Y+1, r25	; 0x01
    d8dc:	88 2f       	mov	r24, r24
    d8de:	90 e0       	ldi	r25, 0x00	; 0
    d8e0:	4a 89       	ldd	r20, Y+18	; 0x12
    d8e2:	9e 01       	movw	r18, r28
    d8e4:	2d 5f       	subi	r18, 0xFD	; 253
    d8e6:	3f 4f       	sbci	r19, 0xFF	; 255
    d8e8:	82 0f       	add	r24, r18
    d8ea:	93 1f       	adc	r25, r19
    d8ec:	fc 01       	movw	r30, r24
    d8ee:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    d8f0:	89 81       	ldd	r24, Y+1	; 0x01
    d8f2:	91 e0       	ldi	r25, 0x01	; 1
    d8f4:	98 0f       	add	r25, r24
    d8f6:	99 83       	std	Y+1, r25	; 0x01
    d8f8:	88 2f       	mov	r24, r24
    d8fa:	90 e0       	ldi	r25, 0x00	; 0
    d8fc:	49 89       	ldd	r20, Y+17	; 0x11
    d8fe:	9e 01       	movw	r18, r28
    d900:	2d 5f       	subi	r18, 0xFD	; 253
    d902:	3f 4f       	sbci	r19, 0xFF	; 255
    d904:	82 0f       	add	r24, r18
    d906:	93 1f       	adc	r25, r19
    d908:	fc 01       	movw	r30, r24
    d90a:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    d90c:	89 81       	ldd	r24, Y+1	; 0x01
    d90e:	88 2f       	mov	r24, r24
    d910:	90 e0       	ldi	r25, 0x00	; 0
    d912:	2b 8d       	ldd	r18, Y+27	; 0x1b
    d914:	42 2f       	mov	r20, r18
    d916:	42 95       	swap	r20
    d918:	40 7f       	andi	r20, 0xF0	; 240
    d91a:	9e 01       	movw	r18, r28
    d91c:	2d 5f       	subi	r18, 0xFD	; 253
    d91e:	3f 4f       	sbci	r19, 0xFF	; 255
    d920:	82 0f       	add	r24, r18
    d922:	93 1f       	adc	r25, r19
    d924:	fc 01       	movw	r30, r24
    d926:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    d928:	29 81       	ldd	r18, Y+1	; 0x01
    d92a:	81 e0       	ldi	r24, 0x01	; 1
    d92c:	82 0f       	add	r24, r18
    d92e:	89 83       	std	Y+1, r24	; 0x01
    d930:	82 2f       	mov	r24, r18
    d932:	90 e0       	ldi	r25, 0x00	; 0
    d934:	22 2f       	mov	r18, r18
    d936:	30 e0       	ldi	r19, 0x00	; 0
    d938:	ae 01       	movw	r20, r28
    d93a:	4d 5f       	subi	r20, 0xFD	; 253
    d93c:	5f 4f       	sbci	r21, 0xFF	; 255
    d93e:	24 0f       	add	r18, r20
    d940:	35 1f       	adc	r19, r21
    d942:	f9 01       	movw	r30, r18
    d944:	30 81       	ld	r19, Z
    d946:	2f 89       	ldd	r18, Y+23	; 0x17
    d948:	2f 70       	andi	r18, 0x0F	; 15
    d94a:	43 2f       	mov	r20, r19
    d94c:	42 0f       	add	r20, r18
    d94e:	9e 01       	movw	r18, r28
    d950:	2d 5f       	subi	r18, 0xFD	; 253
    d952:	3f 4f       	sbci	r19, 0xFF	; 255
    d954:	82 0f       	add	r24, r18
    d956:	93 1f       	adc	r25, r19
    d958:	fc 01       	movw	r30, r24
    d95a:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    d95c:	89 81       	ldd	r24, Y+1	; 0x01
    d95e:	91 e0       	ldi	r25, 0x01	; 1
    d960:	98 0f       	add	r25, r24
    d962:	99 83       	std	Y+1, r25	; 0x01
    d964:	88 2f       	mov	r24, r24
    d966:	90 e0       	ldi	r25, 0x00	; 0
    d968:	4e 89       	ldd	r20, Y+22	; 0x16
    d96a:	9e 01       	movw	r18, r28
    d96c:	2d 5f       	subi	r18, 0xFD	; 253
    d96e:	3f 4f       	sbci	r19, 0xFF	; 255
    d970:	82 0f       	add	r24, r18
    d972:	93 1f       	adc	r25, r19
    d974:	fc 01       	movw	r30, r24
    d976:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    d978:	89 81       	ldd	r24, Y+1	; 0x01
    d97a:	91 e0       	ldi	r25, 0x01	; 1
    d97c:	98 0f       	add	r25, r24
    d97e:	99 83       	std	Y+1, r25	; 0x01
    d980:	88 2f       	mov	r24, r24
    d982:	90 e0       	ldi	r25, 0x00	; 0
    d984:	4d 89       	ldd	r20, Y+21	; 0x15
    d986:	9e 01       	movw	r18, r28
    d988:	2d 5f       	subi	r18, 0xFD	; 253
    d98a:	3f 4f       	sbci	r19, 0xFF	; 255
    d98c:	82 0f       	add	r24, r18
    d98e:	93 1f       	adc	r25, r19
    d990:	fc 01       	movw	r30, r24
    d992:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    d994:	88 89       	ldd	r24, Y+16	; 0x10
    d996:	88 2f       	mov	r24, r24
    d998:	90 e0       	ldi	r25, 0x00	; 0
    d99a:	81 30       	cpi	r24, 0x01	; 1
    d99c:	91 05       	cpc	r25, r1
    d99e:	89 f0       	breq	.+34     	; 0xd9c2 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    d9a0:	82 30       	cpi	r24, 0x02	; 2
    d9a2:	91 05       	cpc	r25, r1
    d9a4:	c9 f0       	breq	.+50     	; 0xd9d8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    d9a6:	89 2b       	or	r24, r25
    d9a8:	09 f0       	breq	.+2      	; 0xd9ac <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    d9aa:	26 c0       	rjmp	.+76     	; 0xd9f8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    d9ac:	ce 01       	movw	r24, r28
    d9ae:	03 96       	adiw	r24, 0x03	; 3
    d9b0:	49 81       	ldd	r20, Y+1	; 0x01
    d9b2:	bc 01       	movw	r22, r24
    d9b4:	8a e2       	ldi	r24, 0x2A	; 42
    d9b6:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    d9ba:	88 23       	and	r24, r24
    d9bc:	c1 f0       	breq	.+48     	; 0xd9ee <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    d9be:	81 e0       	ldi	r24, 0x01	; 1
    d9c0:	2d c0       	rjmp	.+90     	; 0xda1c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    d9c2:	ce 01       	movw	r24, r28
    d9c4:	03 96       	adiw	r24, 0x03	; 3
    d9c6:	49 81       	ldd	r20, Y+1	; 0x01
    d9c8:	bc 01       	movw	r22, r24
    d9ca:	82 e3       	ldi	r24, 0x32	; 50
    d9cc:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    d9d0:	88 23       	and	r24, r24
    d9d2:	79 f0       	breq	.+30     	; 0xd9f2 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    d9d4:	81 e0       	ldi	r24, 0x01	; 1
    d9d6:	22 c0       	rjmp	.+68     	; 0xda1c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    d9d8:	ce 01       	movw	r24, r28
    d9da:	03 96       	adiw	r24, 0x03	; 3
    d9dc:	49 81       	ldd	r20, Y+1	; 0x01
    d9de:	bc 01       	movw	r22, r24
    d9e0:	8a e3       	ldi	r24, 0x3A	; 58
    d9e2:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
    d9e6:	88 23       	and	r24, r24
    d9e8:	31 f0       	breq	.+12     	; 0xd9f6 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    d9ea:	81 e0       	ldi	r24, 0x01	; 1
    d9ec:	17 c0       	rjmp	.+46     	; 0xda1c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d9ee:	00 00       	nop
    d9f0:	03 c0       	rjmp	.+6      	; 0xd9f8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d9f2:	00 00       	nop
    d9f4:	01 c0       	rjmp	.+2      	; 0xd9f8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d9f6:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    d9f8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    d9fa:	88 89       	ldd	r24, Y+16	; 0x10
    d9fc:	0e 94 1c 6d 	call	0xda38	; 0xda38 <_Z16set_integer_mode12si5351_clockb>
    da00:	88 23       	and	r24, r24
    da02:	11 f0       	breq	.+4      	; 0xda08 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    da04:	81 e0       	ldi	r24, 0x01	; 1
    da06:	0a c0       	rjmp	.+20     	; 0xda1c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    da08:	4b a5       	ldd	r20, Y+43	; 0x2b
    da0a:	6e 8d       	ldd	r22, Y+30	; 0x1e
    da0c:	88 89       	ldd	r24, Y+16	; 0x10
    da0e:	0e 94 51 6d 	call	0xdaa2	; 0xdaa2 <_Z6ms_div12si5351_clockhb>
    da12:	88 23       	and	r24, r24
    da14:	11 f0       	breq	.+4      	; 0xda1a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    da16:	81 e0       	ldi	r24, 0x01	; 1
    da18:	01 c0       	rjmp	.+2      	; 0xda1c <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    da1a:	80 e0       	ldi	r24, 0x00	; 0
	}
    da1c:	6e 96       	adiw	r28, 0x1e	; 30
    da1e:	cd bf       	out	0x3d, r28	; 61
    da20:	de bf       	out	0x3e, r29	; 62
    da22:	df 91       	pop	r29
    da24:	cf 91       	pop	r28
    da26:	1f 91       	pop	r17
    da28:	0f 91       	pop	r16
    da2a:	ff 90       	pop	r15
    da2c:	ef 90       	pop	r14
    da2e:	df 90       	pop	r13
    da30:	cf 90       	pop	r12
    da32:	af 90       	pop	r10
    da34:	8f 90       	pop	r8
    da36:	08 95       	ret

0000da38 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    da38:	cf 93       	push	r28
    da3a:	df 93       	push	r29
    da3c:	cd b7       	in	r28, 0x3d	; 61
    da3e:	de b7       	in	r29, 0x3e	; 62
    da40:	25 97       	sbiw	r28, 0x05	; 5
    da42:	cd bf       	out	0x3d, r28	; 61
    da44:	de bf       	out	0x3e, r29	; 62
    da46:	8c 83       	std	Y+4, r24	; 0x04
    da48:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    da4a:	8c 81       	ldd	r24, Y+4	; 0x04
    da4c:	20 e1       	ldi	r18, 0x10	; 16
    da4e:	28 0f       	add	r18, r24
    da50:	ce 01       	movw	r24, r28
    da52:	02 96       	adiw	r24, 0x02	; 2
    da54:	41 e0       	ldi	r20, 0x01	; 1
    da56:	bc 01       	movw	r22, r24
    da58:	82 2f       	mov	r24, r18
    da5a:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    da5e:	88 23       	and	r24, r24
    da60:	11 f0       	breq	.+4      	; 0xda66 <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    da62:	81 e0       	ldi	r24, 0x01	; 1
    da64:	18 c0       	rjmp	.+48     	; 0xda96 <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    da66:	8a 81       	ldd	r24, Y+2	; 0x02
    da68:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    da6a:	8d 81       	ldd	r24, Y+5	; 0x05
    da6c:	88 23       	and	r24, r24
    da6e:	21 f0       	breq	.+8      	; 0xda78 <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    da70:	89 81       	ldd	r24, Y+1	; 0x01
    da72:	80 64       	ori	r24, 0x40	; 64
    da74:	89 83       	std	Y+1, r24	; 0x01
    da76:	03 c0       	rjmp	.+6      	; 0xda7e <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    da78:	89 81       	ldd	r24, Y+1	; 0x01
    da7a:	8f 7b       	andi	r24, 0xBF	; 191
    da7c:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    da7e:	89 81       	ldd	r24, Y+1	; 0x01
    da80:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    da82:	8c 81       	ldd	r24, Y+4	; 0x04
    da84:	20 e1       	ldi	r18, 0x10	; 16
    da86:	28 0f       	add	r18, r24
    da88:	ce 01       	movw	r24, r28
    da8a:	02 96       	adiw	r24, 0x02	; 2
    da8c:	41 e0       	ldi	r20, 0x01	; 1
    da8e:	bc 01       	movw	r22, r24
    da90:	82 2f       	mov	r24, r18
    da92:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
	}
    da96:	25 96       	adiw	r28, 0x05	; 5
    da98:	cd bf       	out	0x3d, r28	; 61
    da9a:	de bf       	out	0x3e, r29	; 62
    da9c:	df 91       	pop	r29
    da9e:	cf 91       	pop	r28
    daa0:	08 95       	ret

0000daa2 <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    daa2:	cf 93       	push	r28
    daa4:	df 93       	push	r29
    daa6:	cd b7       	in	r28, 0x3d	; 61
    daa8:	de b7       	in	r29, 0x3e	; 62
    daaa:	27 97       	sbiw	r28, 0x07	; 7
    daac:	cd bf       	out	0x3d, r28	; 61
    daae:	de bf       	out	0x3e, r29	; 62
    dab0:	8d 83       	std	Y+5, r24	; 0x05
    dab2:	6e 83       	std	Y+6, r22	; 0x06
    dab4:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    dab6:	8d 81       	ldd	r24, Y+5	; 0x05
    dab8:	88 2f       	mov	r24, r24
    daba:	90 e0       	ldi	r25, 0x00	; 0
    dabc:	81 30       	cpi	r24, 0x01	; 1
    dabe:	91 05       	cpc	r25, r1
    dac0:	41 f0       	breq	.+16     	; 0xdad2 <_Z6ms_div12si5351_clockhb+0x30>
    dac2:	82 30       	cpi	r24, 0x02	; 2
    dac4:	91 05       	cpc	r25, r1
    dac6:	41 f0       	breq	.+16     	; 0xdad8 <_Z6ms_div12si5351_clockhb+0x36>
    dac8:	89 2b       	or	r24, r25
    daca:	49 f4       	brne	.+18     	; 0xdade <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    dacc:	8c e2       	ldi	r24, 0x2C	; 44
    dace:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    dad0:	08 c0       	rjmp	.+16     	; 0xdae2 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    dad2:	84 e3       	ldi	r24, 0x34	; 52
    dad4:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    dad6:	05 c0       	rjmp	.+10     	; 0xdae2 <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    dad8:	8c e3       	ldi	r24, 0x3C	; 60
    dada:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    dadc:	02 c0       	rjmp	.+4      	; 0xdae2 <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    dade:	81 e0       	ldi	r24, 0x01	; 1
    dae0:	30 c0       	rjmp	.+96     	; 0xdb42 <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    dae2:	ce 01       	movw	r24, r28
    dae4:	03 96       	adiw	r24, 0x03	; 3
    dae6:	41 e0       	ldi	r20, 0x01	; 1
    dae8:	bc 01       	movw	r22, r24
    daea:	8a 81       	ldd	r24, Y+2	; 0x02
    daec:	0e 94 97 6b 	call	0xd72e	; 0xd72e <_Z16si5351_read_bulkhPhh>
    daf0:	88 23       	and	r24, r24
    daf2:	11 f0       	breq	.+4      	; 0xdaf8 <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    daf4:	81 e0       	ldi	r24, 0x01	; 1
    daf6:	25 c0       	rjmp	.+74     	; 0xdb42 <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    daf8:	8b 81       	ldd	r24, Y+3	; 0x03
    dafa:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    dafc:	89 81       	ldd	r24, Y+1	; 0x01
    dafe:	83 78       	andi	r24, 0x83	; 131
    db00:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    db02:	8f 81       	ldd	r24, Y+7	; 0x07
    db04:	88 23       	and	r24, r24
    db06:	21 f0       	breq	.+8      	; 0xdb10 <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    db08:	89 81       	ldd	r24, Y+1	; 0x01
    db0a:	8c 60       	ori	r24, 0x0C	; 12
    db0c:	89 83       	std	Y+1, r24	; 0x01
    db0e:	03 c0       	rjmp	.+6      	; 0xdb16 <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    db10:	89 81       	ldd	r24, Y+1	; 0x01
    db12:	83 7f       	andi	r24, 0xF3	; 243
    db14:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    db16:	8e 81       	ldd	r24, Y+6	; 0x06
    db18:	88 2f       	mov	r24, r24
    db1a:	90 e0       	ldi	r25, 0x00	; 0
    db1c:	82 95       	swap	r24
    db1e:	92 95       	swap	r25
    db20:	90 7f       	andi	r25, 0xF0	; 240
    db22:	98 27       	eor	r25, r24
    db24:	80 7f       	andi	r24, 0xF0	; 240
    db26:	98 27       	eor	r25, r24
    db28:	98 2f       	mov	r25, r24
    db2a:	89 81       	ldd	r24, Y+1	; 0x01
    db2c:	89 2b       	or	r24, r25
    db2e:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    db30:	89 81       	ldd	r24, Y+1	; 0x01
    db32:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    db34:	ce 01       	movw	r24, r28
    db36:	03 96       	adiw	r24, 0x03	; 3
    db38:	41 e0       	ldi	r20, 0x01	; 1
    db3a:	bc 01       	movw	r22, r24
    db3c:	8a 81       	ldd	r24, Y+2	; 0x02
    db3e:	0e 94 65 6b 	call	0xd6ca	; 0xd6ca <_Z17si5351_write_bulkhPhh>
	}
    db42:	27 96       	adiw	r28, 0x07	; 7
    db44:	cd bf       	out	0x3d, r28	; 61
    db46:	de bf       	out	0x3e, r29	; 62
    db48:	df 91       	pop	r29
    db4a:	cf 91       	pop	r28
    db4c:	08 95       	ret

0000db4e <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    db4e:	cf 93       	push	r28
    db50:	df 93       	push	r29
    db52:	cd b7       	in	r28, 0x3d	; 61
    db54:	de b7       	in	r29, 0x3e	; 62

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
    db56:	80 e0       	ldi	r24, 0x00	; 0
}
    db58:	df 91       	pop	r29
    db5a:	cf 91       	pop	r28
    db5c:	08 95       	ret

0000db5e <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    db5e:	cf 93       	push	r28
    db60:	df 93       	push	r29
    db62:	cd b7       	in	r28, 0x3d	; 61
    db64:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    db66:	80 e0       	ldi	r24, 0x00	; 0
    db68:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    db6a:	21 e0       	ldi	r18, 0x01	; 1
    db6c:	fc 01       	movw	r30, r24
    db6e:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    db70:	80 e0       	ldi	r24, 0x00	; 0
    db72:	9b e0       	ldi	r25, 0x0B	; 11
    db74:	20 e4       	ldi	r18, 0x40	; 64
    db76:	3c e9       	ldi	r19, 0x9C	; 156
    db78:	fc 01       	movw	r30, r24
    db7a:	24 87       	std	Z+12, r18	; 0x0c
    db7c:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    db7e:	80 e0       	ldi	r24, 0x00	; 0
    db80:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    db82:	23 e0       	ldi	r18, 0x03	; 3
    db84:	fc 01       	movw	r30, r24
    db86:	20 83       	st	Z, r18

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    db88:	80 e0       	ldi	r24, 0x00	; 0
    db8a:	9b e0       	ldi	r25, 0x0B	; 11
    db8c:	21 e0       	ldi	r18, 0x01	; 1
    db8e:	fc 01       	movw	r30, r24
    db90:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    db92:	80 e1       	ldi	r24, 0x10	; 16
    db94:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    db96:	21 e0       	ldi	r18, 0x01	; 1
    db98:	fc 01       	movw	r30, r24
    db9a:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    db9c:	80 e1       	ldi	r24, 0x10	; 16
    db9e:	9b e0       	ldi	r25, 0x0B	; 11
    dba0:	20 ec       	ldi	r18, 0xC0	; 192
    dba2:	3d e5       	ldi	r19, 0x5D	; 93
    dba4:	fc 01       	movw	r30, r24
    dba6:	24 87       	std	Z+12, r18	; 0x0c
    dba8:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    dbaa:	80 e1       	ldi	r24, 0x10	; 16
    dbac:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dbae:	21 e0       	ldi	r18, 0x01	; 1
    dbb0:	fc 01       	movw	r30, r24
    dbb2:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dbb4:	80 e1       	ldi	r24, 0x10	; 16
    dbb6:	9b e0       	ldi	r25, 0x0B	; 11
    dbb8:	21 e0       	ldi	r18, 0x01	; 1
    dbba:	fc 01       	movw	r30, r24
    dbbc:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dbbe:	80 e3       	ldi	r24, 0x30	; 48
    dbc0:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dbc2:	21 e0       	ldi	r18, 0x01	; 1
    dbc4:	fc 01       	movw	r30, r24
    dbc6:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    dbc8:	80 e3       	ldi	r24, 0x30	; 48
    dbca:	9b e0       	ldi	r25, 0x0B	; 11
    dbcc:	20 e4       	ldi	r18, 0x40	; 64
    dbce:	3c e9       	ldi	r19, 0x9C	; 156
    dbd0:	fc 01       	movw	r30, r24
    dbd2:	24 87       	std	Z+12, r18	; 0x0c
    dbd4:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    dbd6:	80 e3       	ldi	r24, 0x30	; 48
    dbd8:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    dbda:	23 e0       	ldi	r18, 0x03	; 3
    dbdc:	fc 01       	movw	r30, r24
    dbde:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    dbe0:	80 e3       	ldi	r24, 0x30	; 48
    dbe2:	9b e0       	ldi	r25, 0x0B	; 11
    dbe4:	21 e0       	ldi	r18, 0x01	; 1
    dbe6:	fc 01       	movw	r30, r24
    dbe8:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    dbea:	80 e0       	ldi	r24, 0x00	; 0
}
    dbec:	df 91       	pop	r29
    dbee:	cf 91       	pop	r28
    dbf0:	08 95       	ret

0000dbf2 <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    dbf2:	cf 93       	push	r28
    dbf4:	df 93       	push	r29
    dbf6:	00 d0       	rcall	.+0      	; 0xdbf8 <util_delay_ms+0x6>
    dbf8:	00 d0       	rcall	.+0      	; 0xdbfa <util_delay_ms+0x8>
    dbfa:	cd b7       	in	r28, 0x3d	; 61
    dbfc:	de b7       	in	r29, 0x3e	; 62
    dbfe:	69 83       	std	Y+1, r22	; 0x01
    dc00:	7a 83       	std	Y+2, r23	; 0x02
    dc02:	8b 83       	std	Y+3, r24	; 0x03
    dc04:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    dc06:	89 81       	ldd	r24, Y+1	; 0x01
    dc08:	9a 81       	ldd	r25, Y+2	; 0x02
    dc0a:	ab 81       	ldd	r26, Y+3	; 0x03
    dc0c:	bc 81       	ldd	r27, Y+4	; 0x04
    dc0e:	89 2b       	or	r24, r25
    dc10:	8a 2b       	or	r24, r26
    dc12:	8b 2b       	or	r24, r27
    dc14:	09 f4       	brne	.+2      	; 0xdc18 <util_delay_ms+0x26>
    dc16:	84 c0       	rjmp	.+264    	; 0xdd20 <util_delay_ms+0x12e>
	{
		if(counting)
    dc18:	80 91 c4 4a 	lds	r24, 0x4AC4	; 0x804ac4 <_ZZ13util_delay_msE8counting>
    dc1c:	88 23       	and	r24, r24
    dc1e:	09 f4       	brne	.+2      	; 0xdc22 <util_delay_ms+0x30>
    dc20:	4d c0       	rjmp	.+154    	; 0xdcbc <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    dc22:	80 91 c0 4a 	lds	r24, 0x4AC0	; 0x804ac0 <_ZL12g_ms_counter>
    dc26:	90 91 c1 4a 	lds	r25, 0x4AC1	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    dc2a:	a0 91 c2 4a 	lds	r26, 0x4AC2	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    dc2e:	b0 91 c3 4a 	lds	r27, 0x4AC3	; 0x804ac3 <_ZL12g_ms_counter+0x3>
    dc32:	89 2b       	or	r24, r25
    dc34:	8a 2b       	or	r24, r26
    dc36:	8b 2b       	or	r24, r27
    dc38:	81 f4       	brne	.+32     	; 0xdc5a <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    dc3a:	80 e1       	ldi	r24, 0x10	; 16
    dc3c:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dc3e:	fc 01       	movw	r30, r24
    dc40:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    dc42:	10 92 c4 4a 	sts	0x4AC4, r1	; 0x804ac4 <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    dc46:	10 92 c5 4a 	sts	0x4AC5, r1	; 0x804ac5 <_ZZ13util_delay_msE14countdownValue>
    dc4a:	10 92 c6 4a 	sts	0x4AC6, r1	; 0x804ac6 <_ZZ13util_delay_msE14countdownValue+0x1>
    dc4e:	10 92 c7 4a 	sts	0x4AC7, r1	; 0x804ac7 <_ZZ13util_delay_msE14countdownValue+0x2>
    dc52:	10 92 c8 4a 	sts	0x4AC8, r1	; 0x804ac8 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    dc56:	80 e0       	ldi	r24, 0x00	; 0
    dc58:	81 c0       	rjmp	.+258    	; 0xdd5c <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    dc5a:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <_ZZ13util_delay_msE14countdownValue>
    dc5e:	90 91 c6 4a 	lds	r25, 0x4AC6	; 0x804ac6 <_ZZ13util_delay_msE14countdownValue+0x1>
    dc62:	a0 91 c7 4a 	lds	r26, 0x4AC7	; 0x804ac7 <_ZZ13util_delay_msE14countdownValue+0x2>
    dc66:	b0 91 c8 4a 	lds	r27, 0x4AC8	; 0x804ac8 <_ZZ13util_delay_msE14countdownValue+0x3>
    dc6a:	29 81       	ldd	r18, Y+1	; 0x01
    dc6c:	3a 81       	ldd	r19, Y+2	; 0x02
    dc6e:	4b 81       	ldd	r20, Y+3	; 0x03
    dc70:	5c 81       	ldd	r21, Y+4	; 0x04
    dc72:	28 17       	cp	r18, r24
    dc74:	39 07       	cpc	r19, r25
    dc76:	4a 07       	cpc	r20, r26
    dc78:	5b 07       	cpc	r21, r27
    dc7a:	09 f4       	brne	.+2      	; 0xdc7e <util_delay_ms+0x8c>
    dc7c:	69 c0       	rjmp	.+210    	; 0xdd50 <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    dc7e:	80 e1       	ldi	r24, 0x10	; 16
    dc80:	9b e0       	ldi	r25, 0x0B	; 11
    dc82:	fc 01       	movw	r30, r24
    dc84:	12 86       	std	Z+10, r1	; 0x0a
    dc86:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    dc88:	89 81       	ldd	r24, Y+1	; 0x01
    dc8a:	9a 81       	ldd	r25, Y+2	; 0x02
    dc8c:	ab 81       	ldd	r26, Y+3	; 0x03
    dc8e:	bc 81       	ldd	r27, Y+4	; 0x04
    dc90:	80 93 c5 4a 	sts	0x4AC5, r24	; 0x804ac5 <_ZZ13util_delay_msE14countdownValue>
    dc94:	90 93 c6 4a 	sts	0x4AC6, r25	; 0x804ac6 <_ZZ13util_delay_msE14countdownValue+0x1>
    dc98:	a0 93 c7 4a 	sts	0x4AC7, r26	; 0x804ac7 <_ZZ13util_delay_msE14countdownValue+0x2>
    dc9c:	b0 93 c8 4a 	sts	0x4AC8, r27	; 0x804ac8 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    dca0:	89 81       	ldd	r24, Y+1	; 0x01
    dca2:	9a 81       	ldd	r25, Y+2	; 0x02
    dca4:	ab 81       	ldd	r26, Y+3	; 0x03
    dca6:	bc 81       	ldd	r27, Y+4	; 0x04
    dca8:	80 93 c0 4a 	sts	0x4AC0, r24	; 0x804ac0 <_ZL12g_ms_counter>
    dcac:	90 93 c1 4a 	sts	0x4AC1, r25	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    dcb0:	a0 93 c2 4a 	sts	0x4AC2, r26	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    dcb4:	b0 93 c3 4a 	sts	0x4AC3, r27	; 0x804ac3 <_ZL12g_ms_counter+0x3>
				return(false);
    dcb8:	80 e0       	ldi	r24, 0x00	; 0
    dcba:	50 c0       	rjmp	.+160    	; 0xdd5c <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    dcbc:	80 91 c5 4a 	lds	r24, 0x4AC5	; 0x804ac5 <_ZZ13util_delay_msE14countdownValue>
    dcc0:	90 91 c6 4a 	lds	r25, 0x4AC6	; 0x804ac6 <_ZZ13util_delay_msE14countdownValue+0x1>
    dcc4:	a0 91 c7 4a 	lds	r26, 0x4AC7	; 0x804ac7 <_ZZ13util_delay_msE14countdownValue+0x2>
    dcc8:	b0 91 c8 4a 	lds	r27, 0x4AC8	; 0x804ac8 <_ZZ13util_delay_msE14countdownValue+0x3>
    dccc:	29 81       	ldd	r18, Y+1	; 0x01
    dcce:	3a 81       	ldd	r19, Y+2	; 0x02
    dcd0:	4b 81       	ldd	r20, Y+3	; 0x03
    dcd2:	5c 81       	ldd	r21, Y+4	; 0x04
    dcd4:	28 17       	cp	r18, r24
    dcd6:	39 07       	cpc	r19, r25
    dcd8:	4a 07       	cpc	r20, r26
    dcda:	5b 07       	cpc	r21, r27
    dcdc:	c9 f1       	breq	.+114    	; 0xdd50 <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    dcde:	80 e1       	ldi	r24, 0x10	; 16
    dce0:	9b e0       	ldi	r25, 0x0B	; 11
    dce2:	fc 01       	movw	r30, r24
    dce4:	12 86       	std	Z+10, r1	; 0x0a
    dce6:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    dce8:	89 81       	ldd	r24, Y+1	; 0x01
    dcea:	9a 81       	ldd	r25, Y+2	; 0x02
    dcec:	ab 81       	ldd	r26, Y+3	; 0x03
    dcee:	bc 81       	ldd	r27, Y+4	; 0x04
    dcf0:	80 93 c5 4a 	sts	0x4AC5, r24	; 0x804ac5 <_ZZ13util_delay_msE14countdownValue>
    dcf4:	90 93 c6 4a 	sts	0x4AC6, r25	; 0x804ac6 <_ZZ13util_delay_msE14countdownValue+0x1>
    dcf8:	a0 93 c7 4a 	sts	0x4AC7, r26	; 0x804ac7 <_ZZ13util_delay_msE14countdownValue+0x2>
    dcfc:	b0 93 c8 4a 	sts	0x4AC8, r27	; 0x804ac8 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    dd00:	89 81       	ldd	r24, Y+1	; 0x01
    dd02:	9a 81       	ldd	r25, Y+2	; 0x02
    dd04:	ab 81       	ldd	r26, Y+3	; 0x03
    dd06:	bc 81       	ldd	r27, Y+4	; 0x04
    dd08:	80 93 c0 4a 	sts	0x4AC0, r24	; 0x804ac0 <_ZL12g_ms_counter>
    dd0c:	90 93 c1 4a 	sts	0x4AC1, r25	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    dd10:	a0 93 c2 4a 	sts	0x4AC2, r26	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    dd14:	b0 93 c3 4a 	sts	0x4AC3, r27	; 0x804ac3 <_ZL12g_ms_counter+0x3>
			counting = true;
    dd18:	81 e0       	ldi	r24, 0x01	; 1
    dd1a:	80 93 c4 4a 	sts	0x4AC4, r24	; 0x804ac4 <_ZZ13util_delay_msE8counting>
    dd1e:	18 c0       	rjmp	.+48     	; 0xdd50 <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    dd20:	80 e1       	ldi	r24, 0x10	; 16
    dd22:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dd24:	fc 01       	movw	r30, r24
    dd26:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    dd28:	10 92 c4 4a 	sts	0x4AC4, r1	; 0x804ac4 <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    dd2c:	10 92 c5 4a 	sts	0x4AC5, r1	; 0x804ac5 <_ZZ13util_delay_msE14countdownValue>
    dd30:	10 92 c6 4a 	sts	0x4AC6, r1	; 0x804ac6 <_ZZ13util_delay_msE14countdownValue+0x1>
    dd34:	10 92 c7 4a 	sts	0x4AC7, r1	; 0x804ac7 <_ZZ13util_delay_msE14countdownValue+0x2>
    dd38:	10 92 c8 4a 	sts	0x4AC8, r1	; 0x804ac8 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    dd3c:	10 92 c0 4a 	sts	0x4AC0, r1	; 0x804ac0 <_ZL12g_ms_counter>
    dd40:	10 92 c1 4a 	sts	0x4AC1, r1	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    dd44:	10 92 c2 4a 	sts	0x4AC2, r1	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    dd48:	10 92 c3 4a 	sts	0x4AC3, r1	; 0x804ac3 <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    dd4c:	80 e0       	ldi	r24, 0x00	; 0
    dd4e:	06 c0       	rjmp	.+12     	; 0xdd5c <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    dd50:	80 e1       	ldi	r24, 0x10	; 16
    dd52:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    dd54:	21 e0       	ldi	r18, 0x01	; 1
    dd56:	fc 01       	movw	r30, r24
    dd58:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    dd5a:	81 e0       	ldi	r24, 0x01	; 1
}
    dd5c:	24 96       	adiw	r28, 0x04	; 4
    dd5e:	cd bf       	out	0x3d, r28	; 61
    dd60:	de bf       	out	0x3e, r29	; 62
    dd62:	df 91       	pop	r29
    dd64:	cf 91       	pop	r28
    dd66:	08 95       	ret

0000dd68 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    dd68:	1f 92       	push	r1
    dd6a:	0f 92       	push	r0
    dd6c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    dd70:	0f 92       	push	r0
    dd72:	11 24       	eor	r1, r1
    dd74:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    dd78:	0f 92       	push	r0
    dd7a:	2f 93       	push	r18
    dd7c:	8f 93       	push	r24
    dd7e:	9f 93       	push	r25
    dd80:	af 93       	push	r26
    dd82:	bf 93       	push	r27
    dd84:	ef 93       	push	r30
    dd86:	ff 93       	push	r31
    dd88:	cf 93       	push	r28
    dd8a:	df 93       	push	r29
    dd8c:	cd b7       	in	r28, 0x3d	; 61
    dd8e:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    dd90:	80 e1       	ldi	r24, 0x10	; 16
    dd92:	9b e0       	ldi	r25, 0x0B	; 11
    dd94:	fc 01       	movw	r30, r24
    dd96:	86 81       	ldd	r24, Z+6	; 0x06
    dd98:	88 2f       	mov	r24, r24
    dd9a:	90 e0       	ldi	r25, 0x00	; 0
    dd9c:	81 70       	andi	r24, 0x01	; 1
    dd9e:	99 27       	eor	r25, r25
    dda0:	21 e0       	ldi	r18, 0x01	; 1
    dda2:	89 2b       	or	r24, r25
    dda4:	09 f4       	brne	.+2      	; 0xdda8 <__vector_13+0x40>
    dda6:	20 e0       	ldi	r18, 0x00	; 0
    dda8:	22 23       	and	r18, r18
    ddaa:	49 f1       	breq	.+82     	; 0xddfe <__vector_13+0x96>
    {
		if(g_ms_counter) /* check for 1-second interval */
    ddac:	80 91 c0 4a 	lds	r24, 0x4AC0	; 0x804ac0 <_ZL12g_ms_counter>
    ddb0:	90 91 c1 4a 	lds	r25, 0x4AC1	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    ddb4:	a0 91 c2 4a 	lds	r26, 0x4AC2	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    ddb8:	b0 91 c3 4a 	lds	r27, 0x4AC3	; 0x804ac3 <_ZL12g_ms_counter+0x3>
    ddbc:	89 2b       	or	r24, r25
    ddbe:	8a 2b       	or	r24, r26
    ddc0:	8b 2b       	or	r24, r27
    ddc2:	a1 f0       	breq	.+40     	; 0xddec <__vector_13+0x84>
		{
			g_ms_counter--;	
    ddc4:	80 91 c0 4a 	lds	r24, 0x4AC0	; 0x804ac0 <_ZL12g_ms_counter>
    ddc8:	90 91 c1 4a 	lds	r25, 0x4AC1	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    ddcc:	a0 91 c2 4a 	lds	r26, 0x4AC2	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    ddd0:	b0 91 c3 4a 	lds	r27, 0x4AC3	; 0x804ac3 <_ZL12g_ms_counter+0x3>
    ddd4:	01 97       	sbiw	r24, 0x01	; 1
    ddd6:	a1 09       	sbc	r26, r1
    ddd8:	b1 09       	sbc	r27, r1
    ddda:	80 93 c0 4a 	sts	0x4AC0, r24	; 0x804ac0 <_ZL12g_ms_counter>
    ddde:	90 93 c1 4a 	sts	0x4AC1, r25	; 0x804ac1 <_ZL12g_ms_counter+0x1>
    dde2:	a0 93 c2 4a 	sts	0x4AC2, r26	; 0x804ac2 <_ZL12g_ms_counter+0x2>
    dde6:	b0 93 c3 4a 	sts	0x4AC3, r27	; 0x804ac3 <_ZL12g_ms_counter+0x3>
    ddea:	04 c0       	rjmp	.+8      	; 0xddf4 <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    ddec:	80 e1       	ldi	r24, 0x10	; 16
    ddee:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    ddf0:	fc 01       	movw	r30, r24
    ddf2:	15 82       	std	Z+5, r1	; 0x05
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    ddf4:	80 e1       	ldi	r24, 0x10	; 16
    ddf6:	9b e0       	ldi	r25, 0x0B	; 11
    ddf8:	21 e0       	ldi	r18, 0x01	; 1
    ddfa:	fc 01       	movw	r30, r24
    ddfc:	26 83       	std	Z+6, r18	; 0x06
    }
}
    ddfe:	00 00       	nop
    de00:	df 91       	pop	r29
    de02:	cf 91       	pop	r28
    de04:	ff 91       	pop	r31
    de06:	ef 91       	pop	r30
    de08:	bf 91       	pop	r27
    de0a:	af 91       	pop	r26
    de0c:	9f 91       	pop	r25
    de0e:	8f 91       	pop	r24
    de10:	2f 91       	pop	r18
    de12:	0f 90       	pop	r0
    de14:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    de18:	0f 90       	pop	r0
    de1a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    de1e:	0f 90       	pop	r0
    de20:	1f 90       	pop	r1
    de22:	18 95       	reti

0000de24 <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    de24:	cf 93       	push	r28
    de26:	df 93       	push	r29
    de28:	00 d0       	rcall	.+0      	; 0xde2a <_Z14txSetFrequencyPmb+0x6>
    de2a:	00 d0       	rcall	.+0      	; 0xde2c <_Z14txSetFrequencyPmb+0x8>
    de2c:	cd b7       	in	r28, 0x3d	; 61
    de2e:	de b7       	in	r29, 0x3e	; 62
    de30:	8a 83       	std	Y+2, r24	; 0x02
    de32:	9b 83       	std	Y+3, r25	; 0x03
    de34:	6c 83       	std	Y+4, r22	; 0x04
		bool err = true;
    de36:	81 e0       	ldi	r24, 0x01	; 1
    de38:	89 83       	std	Y+1, r24	; 0x01

		if(!freq) return(err);
    de3a:	8a 81       	ldd	r24, Y+2	; 0x02
    de3c:	9b 81       	ldd	r25, Y+3	; 0x03
    de3e:	89 2b       	or	r24, r25
    de40:	11 f4       	brne	.+4      	; 0xde46 <_Z14txSetFrequencyPmb+0x22>
    de42:	89 81       	ldd	r24, Y+1	; 0x01
    de44:	3b c0       	rjmp	.+118    	; 0xdebc <_Z14txSetFrequencyPmb+0x98>
		
		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    de46:	8a 81       	ldd	r24, Y+2	; 0x02
    de48:	9b 81       	ldd	r25, Y+3	; 0x03
    de4a:	fc 01       	movw	r30, r24
    de4c:	80 81       	ld	r24, Z
    de4e:	91 81       	ldd	r25, Z+1	; 0x01
    de50:	a2 81       	ldd	r26, Z+2	; 0x02
    de52:	b3 81       	ldd	r27, Z+3	; 0x03
    de54:	81 15       	cp	r24, r1
    de56:	99 40       	sbci	r25, 0x09	; 9
    de58:	ad 43       	sbci	r26, 0x3D	; 61
    de5a:	b1 05       	cpc	r27, r1
    de5c:	70 f5       	brcc	.+92     	; 0xdeba <_Z14txSetFrequencyPmb+0x96>
    de5e:	8a 81       	ldd	r24, Y+2	; 0x02
    de60:	9b 81       	ldd	r25, Y+3	; 0x03
    de62:	fc 01       	movw	r30, r24
    de64:	80 81       	ld	r24, Z
    de66:	91 81       	ldd	r25, Z+1	; 0x01
    de68:	a2 81       	ldd	r26, Z+2	; 0x02
    de6a:	b3 81       	ldd	r27, Z+3	; 0x03
    de6c:	81 3e       	cpi	r24, 0xE1	; 225
    de6e:	97 46       	sbci	r25, 0x67	; 103
    de70:	a5 43       	sbci	r26, 0x35	; 53
    de72:	b1 05       	cpc	r27, r1
    de74:	10 f1       	brcs	.+68     	; 0xdeba <_Z14txSetFrequencyPmb+0x96>
		{
			if(!si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    de76:	8a 81       	ldd	r24, Y+2	; 0x02
    de78:	9b 81       	ldd	r25, Y+3	; 0x03
    de7a:	fc 01       	movw	r30, r24
    de7c:	80 81       	ld	r24, Z
    de7e:	91 81       	ldd	r25, Z+1	; 0x01
    de80:	a2 81       	ldd	r26, Z+2	; 0x02
    de82:	b3 81       	ldd	r27, Z+3	; 0x03
    de84:	2c 81       	ldd	r18, Y+4	; 0x04
    de86:	41 e0       	ldi	r20, 0x01	; 1
    de88:	bc 01       	movw	r22, r24
    de8a:	cd 01       	movw	r24, r26
    de8c:	0e 94 2f 64 	call	0xc85e	; 0xc85e <si5351_set_freq>
    de90:	98 2f       	mov	r25, r24
    de92:	81 e0       	ldi	r24, 0x01	; 1
    de94:	89 27       	eor	r24, r25
    de96:	88 23       	and	r24, r24
    de98:	81 f0       	breq	.+32     	; 0xdeba <_Z14txSetFrequencyPmb+0x96>
			{
				g_80m_frequency = *freq;
    de9a:	8a 81       	ldd	r24, Y+2	; 0x02
    de9c:	9b 81       	ldd	r25, Y+3	; 0x03
    de9e:	fc 01       	movw	r30, r24
    dea0:	80 81       	ld	r24, Z
    dea2:	91 81       	ldd	r25, Z+1	; 0x01
    dea4:	a2 81       	ldd	r26, Z+2	; 0x02
    dea6:	b3 81       	ldd	r27, Z+3	; 0x03
    dea8:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_frequency>
    deac:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_frequency+0x1>
    deb0:	a0 93 38 40 	sts	0x4038, r26	; 0x804038 <g_80m_frequency+0x2>
    deb4:	b0 93 39 40 	sts	0x4039, r27	; 0x804039 <g_80m_frequency+0x3>
				err = false;
    deb8:	19 82       	std	Y+1, r1	; 0x01
			}
		}

		return(err);
    deba:	89 81       	ldd	r24, Y+1	; 0x01
	}
    debc:	24 96       	adiw	r28, 0x04	; 4
    debe:	cd bf       	out	0x3d, r28	; 61
    dec0:	de bf       	out	0x3e, r29	; 62
    dec2:	df 91       	pop	r29
    dec4:	cf 91       	pop	r28
    dec6:	08 95       	ret

0000dec8 <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    dec8:	cf 93       	push	r28
    deca:	df 93       	push	r29
    decc:	cd b7       	in	r28, 0x3d	; 61
    dece:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    ded0:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_frequency>
    ded4:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_frequency+0x1>
    ded8:	a0 91 38 40 	lds	r26, 0x4038	; 0x804038 <g_80m_frequency+0x2>
    dedc:	b0 91 39 40 	lds	r27, 0x4039	; 0x804039 <g_80m_frequency+0x3>
	}
    dee0:	bc 01       	movw	r22, r24
    dee2:	cd 01       	movw	r24, r26
    dee4:	df 91       	pop	r29
    dee6:	cf 91       	pop	r28
    dee8:	08 95       	ret

0000deea <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool on)
	{
    deea:	cf 93       	push	r28
    deec:	df 93       	push	r29
    deee:	1f 92       	push	r1
    def0:	cd b7       	in	r28, 0x3d	; 61
    def2:	de b7       	in	r29, 0x3e	; 62
    def4:	89 83       	std	Y+1, r24	; 0x01
		fet_driver(on);
    def6:	89 81       	ldd	r24, Y+1	; 0x01
    def8:	0e 94 e3 3a 	call	0x75c6	; 0x75c6 <_Z10fet_driverb>

		return(ERROR_CODE_NO_ERROR);
    defc:	80 e0       	ldi	r24, 0x00	; 0
	}
    defe:	0f 90       	pop	r0
    df00:	df 91       	pop	r29
    df02:	cf 91       	pop	r28
    df04:	08 95       	ret

0000df06 <_Z14keyTransmitterb>:

	void keyTransmitter(bool on)
	{
    df06:	cf 93       	push	r28
    df08:	df 93       	push	r29
    df0a:	1f 92       	push	r1
    df0c:	cd b7       	in	r28, 0x3d	; 61
    df0e:	de b7       	in	r29, 0x3e	; 62
    df10:	89 83       	std	Y+1, r24	; 0x01
		if(g_tx_initialized)
    df12:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <_ZL16g_tx_initialized>
    df16:	88 23       	and	r24, r24
    df18:	29 f1       	breq	.+74     	; 0xdf64 <_Z14keyTransmitterb+0x5e>
		{			
			if(on)
    df1a:	89 81       	ldd	r24, Y+1	; 0x01
    df1c:	88 23       	and	r24, r24
    df1e:	a9 f0       	breq	.+42     	; 0xdf4a <_Z14keyTransmitterb+0x44>
			{
				if(!g_transmitter_keyed)
    df20:	90 91 ca 4a 	lds	r25, 0x4ACA	; 0x804aca <_ZL19g_transmitter_keyed>
    df24:	81 e0       	ldi	r24, 0x01	; 1
    df26:	89 27       	eor	r24, r25
    df28:	88 23       	and	r24, r24
    df2a:	e1 f0       	breq	.+56     	; 0xdf64 <_Z14keyTransmitterb+0x5e>
				{
					if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) == ERROR_CODE_NO_ERROR)
    df2c:	61 e0       	ldi	r22, 0x01	; 1
    df2e:	81 e0       	ldi	r24, 0x01	; 1
    df30:	0e 94 d0 65 	call	0xcba0	; 0xcba0 <si5351_clock_enable>
    df34:	98 2f       	mov	r25, r24
    df36:	81 e0       	ldi	r24, 0x01	; 1
    df38:	99 23       	and	r25, r25
    df3a:	09 f0       	breq	.+2      	; 0xdf3e <_Z14keyTransmitterb+0x38>
    df3c:	80 e0       	ldi	r24, 0x00	; 0
    df3e:	88 23       	and	r24, r24
    df40:	89 f0       	breq	.+34     	; 0xdf64 <_Z14keyTransmitterb+0x5e>
					{
						g_transmitter_keyed = true;
    df42:	81 e0       	ldi	r24, 0x01	; 1
    df44:	80 93 ca 4a 	sts	0x4ACA, r24	; 0x804aca <_ZL19g_transmitter_keyed>
				{
					g_transmitter_keyed = false;
				}
			}
		}
	}
    df48:	0d c0       	rjmp	.+26     	; 0xdf64 <_Z14keyTransmitterb+0x5e>
					}
				}
			}
			else
			{
				if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) == ERROR_CODE_NO_ERROR)
    df4a:	60 e0       	ldi	r22, 0x00	; 0
    df4c:	81 e0       	ldi	r24, 0x01	; 1
    df4e:	0e 94 d0 65 	call	0xcba0	; 0xcba0 <si5351_clock_enable>
    df52:	98 2f       	mov	r25, r24
    df54:	81 e0       	ldi	r24, 0x01	; 1
    df56:	99 23       	and	r25, r25
    df58:	09 f0       	breq	.+2      	; 0xdf5c <_Z14keyTransmitterb+0x56>
    df5a:	80 e0       	ldi	r24, 0x00	; 0
    df5c:	88 23       	and	r24, r24
    df5e:	11 f0       	breq	.+4      	; 0xdf64 <_Z14keyTransmitterb+0x5e>
				{
					g_transmitter_keyed = false;
    df60:	10 92 ca 4a 	sts	0x4ACA, r1	; 0x804aca <_ZL19g_transmitter_keyed>
				}
			}
		}
	}
    df64:	00 00       	nop
    df66:	0f 90       	pop	r0
    df68:	df 91       	pop	r29
    df6a:	cf 91       	pop	r28
    df6c:	08 95       	ret

0000df6e <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    df6e:	cf 93       	push	r28
    df70:	df 93       	push	r29
    df72:	cd b7       	in	r28, 0x3d	; 61
    df74:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    df76:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    df7a:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
	}
    df7e:	df 91       	pop	r29
    df80:	cf 91       	pop	r28
    df82:	08 95       	ret

0000df84 <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* enableDriverPwr)
/*	EC txSetParameters(uint16_t* power_mW, bool* enableDriverPwr) */
	{
    df84:	cf 93       	push	r28
    df86:	df 93       	push	r29
    df88:	cd b7       	in	r28, 0x3d	; 61
    df8a:	de b7       	in	r29, 0x3e	; 62
    df8c:	2b 97       	sbiw	r28, 0x0b	; 11
    df8e:	cd bf       	out	0x3d, r28	; 61
    df90:	de bf       	out	0x3e, r29	; 62
    df92:	88 87       	std	Y+8, r24	; 0x08
    df94:	99 87       	std	Y+9, r25	; 0x09
    df96:	6a 87       	std	Y+10, r22	; 0x0a
    df98:	7b 87       	std	Y+11, r23	; 0x0b
		bool err = false;
    df9a:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    df9c:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    df9e:	1b 82       	std	Y+3, r1	; 0x03
    dfa0:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    dfa2:	88 85       	ldd	r24, Y+8	; 0x08
    dfa4:	99 85       	ldd	r25, Y+9	; 0x09
    dfa6:	89 2b       	or	r24, r25
    dfa8:	09 f4       	brne	.+2      	; 0xdfac <_Z15txSetParametersPjPb+0x28>
    dfaa:	68 c0       	rjmp	.+208    	; 0xe07c <_Z15txSetParametersPjPb+0xf8>
		{
			power = *power_mW;
    dfac:	88 85       	ldd	r24, Y+8	; 0x08
    dfae:	99 85       	ldd	r25, Y+9	; 0x09
    dfb0:	fc 01       	movw	r30, r24
    dfb2:	80 81       	ld	r24, Z
    dfb4:	91 81       	ldd	r25, Z+1	; 0x01
    dfb6:	8b 83       	std	Y+3, r24	; 0x03
    dfb8:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    dfba:	8b 81       	ldd	r24, Y+3	; 0x03
    dfbc:	9c 81       	ldd	r25, Y+4	; 0x04
    dfbe:	89 38       	cpi	r24, 0x89	; 137
    dfc0:	93 41       	sbci	r25, 0x13	; 19
    dfc2:	08 f0       	brcs	.+2      	; 0xdfc6 <_Z15txSetParametersPjPb+0x42>
    dfc4:	57 c0       	rjmp	.+174    	; 0xe074 <_Z15txSetParametersPjPb+0xf0>
			{
				uint8_t drainVoltageDAC, modLevelHigh, modLevelLow;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC, &modLevelHigh, &modLevelLow);
    dfc6:	9e 01       	movw	r18, r28
    dfc8:	29 5f       	subi	r18, 0xF9	; 249
    dfca:	3f 4f       	sbci	r19, 0xFF	; 255
    dfcc:	ae 01       	movw	r20, r28
    dfce:	4a 5f       	subi	r20, 0xFA	; 250
    dfd0:	5f 4f       	sbci	r21, 0xFF	; 255
    dfd2:	be 01       	movw	r22, r28
    dfd4:	6b 5f       	subi	r22, 0xFB	; 251
    dfd6:	7f 4f       	sbci	r23, 0xFF	; 255
    dfd8:	ce 01       	movw	r24, r28
    dfda:	03 96       	adiw	r24, 0x03	; 3
    dfdc:	0e 94 bc 70 	call	0xe178	; 0xe178 <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    dfe0:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    dfe2:	81 e0       	ldi	r24, 0x01	; 1
    dfe4:	9a 81       	ldd	r25, Y+2	; 0x02
    dfe6:	9f 3c       	cpi	r25, 0xCF	; 207
    dfe8:	09 f0       	breq	.+2      	; 0xdfec <_Z15txSetParametersPjPb+0x68>
    dfea:	80 e0       	ldi	r24, 0x00	; 0
    dfec:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    dfee:	8b 81       	ldd	r24, Y+3	; 0x03
    dff0:	9c 81       	ldd	r25, Y+4	; 0x04
    dff2:	21 e0       	ldi	r18, 0x01	; 1
    dff4:	89 2b       	or	r24, r25
    dff6:	09 f0       	breq	.+2      	; 0xdffa <_Z15txSetParametersPjPb+0x76>
    dff8:	20 e0       	ldi	r18, 0x00	; 0
    dffa:	20 93 40 40 	sts	0x4040, r18	; 0x804040 <g_tx_power_is_zero>

				if(!err)
    dffe:	99 81       	ldd	r25, Y+1	; 0x01
    e000:	81 e0       	ldi	r24, 0x01	; 1
    e002:	89 27       	eor	r24, r25
    e004:	88 23       	and	r24, r24
    e006:	71 f1       	breq	.+92     	; 0xe064 <_Z15txSetParametersPjPb+0xe0>
				{
					g_80m_power_level_mW = power;
    e008:	8b 81       	ldd	r24, Y+3	; 0x03
    e00a:	9c 81       	ldd	r25, Y+4	; 0x04
    e00c:	80 93 3a 40 	sts	0x403A, r24	; 0x80403a <g_80m_power_level_mW>
    e010:	90 93 3b 40 	sts	0x403B, r25	; 0x80403b <g_80m_power_level_mW+0x1>

					if(g_antenna_connect_state == ANT_CONNECTED)
    e014:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <g_antenna_connect_state>
    e018:	81 e0       	ldi	r24, 0x01	; 1
    e01a:	92 30       	cpi	r25, 0x02	; 2
    e01c:	09 f0       	breq	.+2      	; 0xe020 <_Z15txSetParametersPjPb+0x9c>
    e01e:	80 e0       	ldi	r24, 0x00	; 0
    e020:	88 23       	and	r24, r24
    e022:	31 f0       	breq	.+12     	; 0xe030 <_Z15txSetParametersPjPb+0xac>
					{
						DAC0_setVal(drainVoltageDAC);
    e024:	8d 81       	ldd	r24, Y+5	; 0x05
    e026:	88 2f       	mov	r24, r24
    e028:	90 e0       	ldi	r25, 0x00	; 0
    e02a:	0e 94 70 3c 	call	0x78e0	; 0x78e0 <_Z11DAC0_setValj>
    e02e:	07 c0       	rjmp	.+14     	; 0xe03e <_Z15txSetParametersPjPb+0xba>
					}
					else
					{
						g_tx_power_is_zero = true;
    e030:	81 e0       	ldi	r24, 0x01	; 1
    e032:	80 93 40 40 	sts	0x4040, r24	; 0x804040 <g_tx_power_is_zero>
						err = true;
    e036:	81 e0       	ldi	r24, 0x01	; 1
    e038:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    e03a:	86 ef       	ldi	r24, 0xF6	; 246
    e03c:	8a 83       	std	Y+2, r24	; 0x02
					}

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    e03e:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <g_tx_power_is_zero>
    e042:	88 23       	and	r24, r24
    e044:	19 f4       	brne	.+6      	; 0xe04c <_Z15txSetParametersPjPb+0xc8>
    e046:	8d 81       	ldd	r24, Y+5	; 0x05
    e048:	88 23       	and	r24, r24
    e04a:	11 f4       	brne	.+4      	; 0xe050 <_Z15txSetParametersPjPb+0xcc>
    e04c:	81 e0       	ldi	r24, 0x01	; 1
    e04e:	01 c0       	rjmp	.+2      	; 0xe052 <_Z15txSetParametersPjPb+0xce>
    e050:	80 e0       	ldi	r24, 0x00	; 0
    e052:	88 23       	and	r24, r24
    e054:	21 f0       	breq	.+8      	; 0xe05e <_Z15txSetParametersPjPb+0xda>
					{
						powerToTransmitter(OFF); /* Turn off FET driver */
    e056:	80 e0       	ldi	r24, 0x00	; 0
    e058:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
    e05c:	03 c0       	rjmp	.+6      	; 0xe064 <_Z15txSetParametersPjPb+0xe0>
					}
					else
					{
						powerToTransmitter(ON); /* Turn on FET driver */
    e05e:	81 e0       	ldi	r24, 0x01	; 1
    e060:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
					}
				}

				*power_mW = power;
    e064:	2b 81       	ldd	r18, Y+3	; 0x03
    e066:	3c 81       	ldd	r19, Y+4	; 0x04
    e068:	88 85       	ldd	r24, Y+8	; 0x08
    e06a:	99 85       	ldd	r25, Y+9	; 0x09
    e06c:	fc 01       	movw	r30, r24
    e06e:	20 83       	st	Z, r18
    e070:	31 83       	std	Z+1, r19	; 0x01
    e072:	04 c0       	rjmp	.+8      	; 0xe07c <_Z15txSetParametersPjPb+0xf8>
			}
			else
			{
				err = true;
    e074:	81 e0       	ldi	r24, 0x01	; 1
    e076:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    e078:	85 ef       	ldi	r24, 0xF5	; 245
    e07a:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    e07c:	99 81       	ldd	r25, Y+1	; 0x01
    e07e:	81 e0       	ldi	r24, 0x01	; 1
    e080:	89 27       	eor	r24, r25
    e082:	88 23       	and	r24, r24
    e084:	51 f0       	breq	.+20     	; 0xe09a <_Z15txSetParametersPjPb+0x116>
		{
			if(enableDriverPwr != NULL)
    e086:	8a 85       	ldd	r24, Y+10	; 0x0a
    e088:	9b 85       	ldd	r25, Y+11	; 0x0b
    e08a:	89 2b       	or	r24, r25
    e08c:	31 f0       	breq	.+12     	; 0xe09a <_Z15txSetParametersPjPb+0x116>
			{
				powerToTransmitter(*enableDriverPwr);
    e08e:	8a 85       	ldd	r24, Y+10	; 0x0a
    e090:	9b 85       	ldd	r25, Y+11	; 0x0b
    e092:	fc 01       	movw	r30, r24
    e094:	80 81       	ld	r24, Z
    e096:	0e 94 75 6f 	call	0xdeea	; 0xdeea <_Z18powerToTransmitterb>
			}
		}

		return(code);
    e09a:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    e09c:	2b 96       	adiw	r28, 0x0b	; 11
    e09e:	cd bf       	out	0x3d, r28	; 61
    e0a0:	de bf       	out	0x3e, r29	; 62
    e0a2:	df 91       	pop	r29
    e0a4:	cf 91       	pop	r28
    e0a6:	08 95       	ret

0000e0a8 <_Z16init_transmitterv>:


	EC init_transmitter(void)
	{
    e0a8:	cf 93       	push	r28
    e0aa:	df 93       	push	r29
    e0ac:	00 d0       	rcall	.+0      	; 0xe0ae <_Z16init_transmitterv+0x6>
    e0ae:	00 d0       	rcall	.+0      	; 0xe0b0 <_Z16init_transmitterv+0x8>
    e0b0:	cd b7       	in	r28, 0x3d	; 61
    e0b2:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		DAC0_init();
    e0b4:	0e 94 42 3c 	call	0x7884	; 0x7884 <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    e0b8:	40 e0       	ldi	r20, 0x00	; 0
    e0ba:	50 e0       	ldi	r21, 0x00	; 0
    e0bc:	ba 01       	movw	r22, r20
    e0be:	80 e4       	ldi	r24, 0x40	; 64
    e0c0:	0e 94 61 63 	call	0xc6c2	; 0xc6c2 <si5351_init>
    e0c4:	8a 83       	std	Y+2, r24	; 0x02
    e0c6:	8a 81       	ldd	r24, Y+2	; 0x02
    e0c8:	88 23       	and	r24, r24
    e0ca:	11 f0       	breq	.+4      	; 0xe0d0 <_Z16init_transmitterv+0x28>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    e0cc:	82 ed       	ldi	r24, 0xD2	; 210
    e0ce:	4e c0       	rjmp	.+156    	; 0xe16c <_Z16init_transmitterv+0xc4>
		}

		if((code = txSetParameters(NULL, NULL)))
    e0d0:	60 e0       	ldi	r22, 0x00	; 0
    e0d2:	70 e0       	ldi	r23, 0x00	; 0
    e0d4:	80 e0       	ldi	r24, 0x00	; 0
    e0d6:	90 e0       	ldi	r25, 0x00	; 0
    e0d8:	0e 94 c2 6f 	call	0xdf84	; 0xdf84 <_Z15txSetParametersPjPb>
    e0dc:	89 83       	std	Y+1, r24	; 0x01
    e0de:	81 e0       	ldi	r24, 0x01	; 1
    e0e0:	99 81       	ldd	r25, Y+1	; 0x01
    e0e2:	99 23       	and	r25, r25
    e0e4:	09 f4       	brne	.+2      	; 0xe0e8 <_Z16init_transmitterv+0x40>
    e0e6:	80 e0       	ldi	r24, 0x00	; 0
    e0e8:	88 23       	and	r24, r24
    e0ea:	11 f0       	breq	.+4      	; 0xe0f0 <_Z16init_transmitterv+0x48>
		{
			return( code);
    e0ec:	89 81       	ldd	r24, Y+1	; 0x01
    e0ee:	3e c0       	rjmp	.+124    	; 0xe16c <_Z16init_transmitterv+0xc4>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    e0f0:	63 e0       	ldi	r22, 0x03	; 3
    e0f2:	81 e0       	ldi	r24, 0x01	; 1
    e0f4:	0e 94 1b 66 	call	0xcc36	; 0xcc36 <si5351_drive_strength>
    e0f8:	89 83       	std	Y+1, r24	; 0x01
    e0fa:	81 e0       	ldi	r24, 0x01	; 1
    e0fc:	99 81       	ldd	r25, Y+1	; 0x01
    e0fe:	99 23       	and	r25, r25
    e100:	09 f4       	brne	.+2      	; 0xe104 <_Z16init_transmitterv+0x5c>
    e102:	80 e0       	ldi	r24, 0x00	; 0
    e104:	88 23       	and	r24, r24
    e106:	11 f0       	breq	.+4      	; 0xe10c <_Z16init_transmitterv+0x64>
		{
			return( code);
    e108:	89 81       	ldd	r24, Y+1	; 0x01
    e10a:	30 c0       	rjmp	.+96     	; 0xe16c <_Z16init_transmitterv+0xc4>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    e10c:	60 e0       	ldi	r22, 0x00	; 0
    e10e:	81 e0       	ldi	r24, 0x01	; 1
    e110:	0e 94 d0 65 	call	0xcba0	; 0xcba0 <si5351_clock_enable>
    e114:	89 83       	std	Y+1, r24	; 0x01
    e116:	81 e0       	ldi	r24, 0x01	; 1
    e118:	99 81       	ldd	r25, Y+1	; 0x01
    e11a:	99 23       	and	r25, r25
    e11c:	09 f4       	brne	.+2      	; 0xe120 <_Z16init_transmitterv+0x78>
    e11e:	80 e0       	ldi	r24, 0x00	; 0
    e120:	88 23       	and	r24, r24
    e122:	11 f0       	breq	.+4      	; 0xe128 <_Z16init_transmitterv+0x80>
		{
			return( code);
    e124:	89 81       	ldd	r24, Y+1	; 0x01
    e126:	22 c0       	rjmp	.+68     	; 0xe16c <_Z16init_transmitterv+0xc4>
// 		if((code = si5351_clock_enable(TX_CLOCK_VHF_FM, SI5351_CLK_DISABLED)))
// 		{
// 			return( code);
// 		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    e128:	80 91 3a 40 	lds	r24, 0x403A	; 0x80403a <g_80m_power_level_mW>
    e12c:	90 91 3b 40 	lds	r25, 0x403B	; 0x80403b <g_80m_power_level_mW+0x1>
    e130:	8b 83       	std	Y+3, r24	; 0x03
    e132:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    e134:	61 e0       	ldi	r22, 0x01	; 1
    e136:	86 e3       	ldi	r24, 0x36	; 54
    e138:	90 e4       	ldi	r25, 0x40	; 64
    e13a:	0e 94 12 6f 	call	0xde24	; 0xde24 <_Z14txSetFrequencyPmb>
    e13e:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    e140:	9a 81       	ldd	r25, Y+2	; 0x02
    e142:	81 e0       	ldi	r24, 0x01	; 1
    e144:	89 27       	eor	r24, r25
    e146:	88 23       	and	r24, r24
    e148:	81 f0       	breq	.+32     	; 0xe16a <_Z16init_transmitterv+0xc2>
		{
			code = txSetParameters(&pwr_mW, NULL);
    e14a:	ce 01       	movw	r24, r28
    e14c:	03 96       	adiw	r24, 0x03	; 3
    e14e:	60 e0       	ldi	r22, 0x00	; 0
    e150:	70 e0       	ldi	r23, 0x00	; 0
    e152:	0e 94 c2 6f 	call	0xdf84	; 0xdf84 <_Z15txSetParametersPjPb>
    e156:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    e158:	89 81       	ldd	r24, Y+1	; 0x01
    e15a:	88 23       	and	r24, r24
    e15c:	19 f0       	breq	.+6      	; 0xe164 <_Z16init_transmitterv+0xbc>
    e15e:	89 81       	ldd	r24, Y+1	; 0x01
    e160:	86 3f       	cpi	r24, 0xF6	; 246
    e162:	19 f4       	brne	.+6      	; 0xe16a <_Z16init_transmitterv+0xc2>
			{
				g_tx_initialized = true;
    e164:	81 e0       	ldi	r24, 0x01	; 1
    e166:	80 93 c9 4a 	sts	0x4AC9, r24	; 0x804ac9 <_ZL16g_tx_initialized>
			}
		}

		return( code);
    e16a:	89 81       	ldd	r24, Y+1	; 0x01
	}
    e16c:	24 96       	adiw	r28, 0x04	; 4
    e16e:	cd bf       	out	0x3d, r28	; 61
    e170:	de bf       	out	0x3e, r29	; 62
    e172:	df 91       	pop	r29
    e174:	cf 91       	pop	r28
    e176:	08 95       	ret

0000e178 <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    e178:	cf 93       	push	r28
    e17a:	df 93       	push	r29
    e17c:	cd b7       	in	r28, 0x3d	; 61
    e17e:	de b7       	in	r29, 0x3e	; 62
    e180:	65 97       	sbiw	r28, 0x15	; 21
    e182:	cd bf       	out	0x3d, r28	; 61
    e184:	de bf       	out	0x3e, r29	; 62
    e186:	8e 87       	std	Y+14, r24	; 0x0e
    e188:	9f 87       	std	Y+15, r25	; 0x0f
    e18a:	68 8b       	std	Y+16, r22	; 0x10
    e18c:	79 8b       	std	Y+17, r23	; 0x11
    e18e:	4a 8b       	std	Y+18, r20	; 0x12
    e190:	5b 8b       	std	Y+19, r21	; 0x13
    e192:	2c 8b       	std	Y+20, r18	; 0x14
    e194:	3d 8b       	std	Y+21, r19	; 0x15
	EC ec = ERROR_CODE_NO_ERROR;
    e196:	19 82       	std	Y+1, r1	; 0x01
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    e198:	8e 85       	ldd	r24, Y+14	; 0x0e
    e19a:	9f 85       	ldd	r25, Y+15	; 0x0f
    e19c:	89 2b       	or	r24, r25
    e19e:	11 f4       	brne	.+4      	; 0xe1a4 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    e1a0:	8f ec       	ldi	r24, 0xCF	; 207
    e1a2:	77 c1       	rjmp	.+750    	; 0xe492 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x31a>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    e1a4:	88 e8       	ldi	r24, 0x88	; 136
    e1a6:	93 e1       	ldi	r25, 0x13	; 19
    e1a8:	8b 83       	std	Y+3, r24	; 0x03
    e1aa:	9c 83       	std	Y+4, r25	; 0x04

	if((int16_t)*powerMW > maxPwr)
    e1ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    e1ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    e1b0:	fc 01       	movw	r30, r24
    e1b2:	80 81       	ld	r24, Z
    e1b4:	91 81       	ldd	r25, Z+1	; 0x01
    e1b6:	9c 01       	movw	r18, r24
    e1b8:	8b 81       	ldd	r24, Y+3	; 0x03
    e1ba:	9c 81       	ldd	r25, Y+4	; 0x04
    e1bc:	82 17       	cp	r24, r18
    e1be:	93 07       	cpc	r25, r19
    e1c0:	14 f4       	brge	.+4      	; 0xe1c6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4e>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    e1c2:	85 ef       	ldi	r24, 0xF5	; 245
    e1c4:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    e1c6:	8e 85       	ldd	r24, Y+14	; 0x0e
    e1c8:	9f 85       	ldd	r25, Y+15	; 0x0f
    e1ca:	fc 01       	movw	r30, r24
    e1cc:	80 81       	ld	r24, Z
    e1ce:	91 81       	ldd	r25, Z+1	; 0x01
    e1d0:	8d 83       	std	Y+5, r24	; 0x05
    e1d2:	9e 83       	std	Y+6, r25	; 0x06
    e1d4:	1f 82       	std	Y+7, r1	; 0x07
    e1d6:	18 86       	std	Y+8, r1	; 0x08
    e1d8:	8b 81       	ldd	r24, Y+3	; 0x03
    e1da:	9c 81       	ldd	r25, Y+4	; 0x04
    e1dc:	89 87       	std	Y+9, r24	; 0x09
    e1de:	9a 87       	std	Y+10, r25	; 0x0a
    e1e0:	2d 81       	ldd	r18, Y+5	; 0x05
    e1e2:	3e 81       	ldd	r19, Y+6	; 0x06
    e1e4:	89 85       	ldd	r24, Y+9	; 0x09
    e1e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    e1e8:	82 17       	cp	r24, r18
    e1ea:	93 07       	cpc	r25, r19
    e1ec:	6c f0       	brlt	.+26     	; 0xe208 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x90>
    e1ee:	2d 81       	ldd	r18, Y+5	; 0x05
    e1f0:	3e 81       	ldd	r19, Y+6	; 0x06
    e1f2:	8f 81       	ldd	r24, Y+7	; 0x07
    e1f4:	98 85       	ldd	r25, Y+8	; 0x08
    e1f6:	28 17       	cp	r18, r24
    e1f8:	39 07       	cpc	r19, r25
    e1fa:	1c f4       	brge	.+6      	; 0xe202 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x8a>
    e1fc:	8f 81       	ldd	r24, Y+7	; 0x07
    e1fe:	98 85       	ldd	r25, Y+8	; 0x08
    e200:	05 c0       	rjmp	.+10     	; 0xe20c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    e202:	8d 81       	ldd	r24, Y+5	; 0x05
    e204:	9e 81       	ldd	r25, Y+6	; 0x06
    e206:	02 c0       	rjmp	.+4      	; 0xe20c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    e208:	89 85       	ldd	r24, Y+9	; 0x09
    e20a:	9a 85       	ldd	r25, Y+10	; 0x0a
    e20c:	9c 01       	movw	r18, r24
    e20e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e210:	9f 85       	ldd	r25, Y+15	; 0x0f
    e212:	fc 01       	movw	r30, r24
    e214:	20 83       	st	Z, r18
    e216:	31 83       	std	Z+1, r19	; 0x01

	if(*powerMW < 5)
    e218:	8e 85       	ldd	r24, Y+14	; 0x0e
    e21a:	9f 85       	ldd	r25, Y+15	; 0x0f
    e21c:	fc 01       	movw	r30, r24
    e21e:	80 81       	ld	r24, Z
    e220:	91 81       	ldd	r25, Z+1	; 0x01
    e222:	05 97       	sbiw	r24, 0x05	; 5
    e224:	38 f4       	brcc	.+14     	; 0xe234 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xbc>
	{
		index = 0;
    e226:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    e228:	8e 85       	ldd	r24, Y+14	; 0x0e
    e22a:	9f 85       	ldd	r25, Y+15	; 0x0f
    e22c:	fc 01       	movw	r30, r24
    e22e:	10 82       	st	Z, r1
    e230:	11 82       	std	Z+1, r1	; 0x01
    e232:	04 c1       	rjmp	.+520    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 50)
    e234:	8e 85       	ldd	r24, Y+14	; 0x0e
    e236:	9f 85       	ldd	r25, Y+15	; 0x0f
    e238:	fc 01       	movw	r30, r24
    e23a:	80 81       	ld	r24, Z
    e23c:	91 81       	ldd	r25, Z+1	; 0x01
    e23e:	c2 97       	sbiw	r24, 0x32	; 50
    e240:	50 f4       	brcc	.+20     	; 0xe256 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xde>
	{
		index = 1;
    e242:	81 e0       	ldi	r24, 0x01	; 1
    e244:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    e246:	8e 85       	ldd	r24, Y+14	; 0x0e
    e248:	9f 85       	ldd	r25, Y+15	; 0x0f
    e24a:	2a e0       	ldi	r18, 0x0A	; 10
    e24c:	30 e0       	ldi	r19, 0x00	; 0
    e24e:	fc 01       	movw	r30, r24
    e250:	20 83       	st	Z, r18
    e252:	31 83       	std	Z+1, r19	; 0x01
    e254:	f3 c0       	rjmp	.+486    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 150)
    e256:	8e 85       	ldd	r24, Y+14	; 0x0e
    e258:	9f 85       	ldd	r25, Y+15	; 0x0f
    e25a:	fc 01       	movw	r30, r24
    e25c:	80 81       	ld	r24, Z
    e25e:	91 81       	ldd	r25, Z+1	; 0x01
    e260:	86 39       	cpi	r24, 0x96	; 150
    e262:	91 05       	cpc	r25, r1
    e264:	50 f4       	brcc	.+20     	; 0xe27a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x102>
	{
		index = 2;
    e266:	82 e0       	ldi	r24, 0x02	; 2
    e268:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    e26a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e26c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e26e:	24 e6       	ldi	r18, 0x64	; 100
    e270:	30 e0       	ldi	r19, 0x00	; 0
    e272:	fc 01       	movw	r30, r24
    e274:	20 83       	st	Z, r18
    e276:	31 83       	std	Z+1, r19	; 0x01
    e278:	e1 c0       	rjmp	.+450    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 250)
    e27a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e27c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e27e:	fc 01       	movw	r30, r24
    e280:	80 81       	ld	r24, Z
    e282:	91 81       	ldd	r25, Z+1	; 0x01
    e284:	8a 3f       	cpi	r24, 0xFA	; 250
    e286:	91 05       	cpc	r25, r1
    e288:	50 f4       	brcc	.+20     	; 0xe29e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x126>
	{
		index = 3;
    e28a:	83 e0       	ldi	r24, 0x03	; 3
    e28c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    e28e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e290:	9f 85       	ldd	r25, Y+15	; 0x0f
    e292:	28 ec       	ldi	r18, 0xC8	; 200
    e294:	30 e0       	ldi	r19, 0x00	; 0
    e296:	fc 01       	movw	r30, r24
    e298:	20 83       	st	Z, r18
    e29a:	31 83       	std	Z+1, r19	; 0x01
    e29c:	cf c0       	rjmp	.+414    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 350)
    e29e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2a0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2a2:	fc 01       	movw	r30, r24
    e2a4:	80 81       	ld	r24, Z
    e2a6:	91 81       	ldd	r25, Z+1	; 0x01
    e2a8:	8e 35       	cpi	r24, 0x5E	; 94
    e2aa:	91 40       	sbci	r25, 0x01	; 1
    e2ac:	50 f4       	brcc	.+20     	; 0xe2c2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14a>
	{
		index = 4;
    e2ae:	84 e0       	ldi	r24, 0x04	; 4
    e2b0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    e2b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2b4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2b6:	2c e2       	ldi	r18, 0x2C	; 44
    e2b8:	31 e0       	ldi	r19, 0x01	; 1
    e2ba:	fc 01       	movw	r30, r24
    e2bc:	20 83       	st	Z, r18
    e2be:	31 83       	std	Z+1, r19	; 0x01
    e2c0:	bd c0       	rjmp	.+378    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 450)
    e2c2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2c4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2c6:	fc 01       	movw	r30, r24
    e2c8:	80 81       	ld	r24, Z
    e2ca:	91 81       	ldd	r25, Z+1	; 0x01
    e2cc:	82 3c       	cpi	r24, 0xC2	; 194
    e2ce:	91 40       	sbci	r25, 0x01	; 1
    e2d0:	50 f4       	brcc	.+20     	; 0xe2e6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16e>
	{
		index = 5;
    e2d2:	85 e0       	ldi	r24, 0x05	; 5
    e2d4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    e2d6:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2d8:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2da:	20 e9       	ldi	r18, 0x90	; 144
    e2dc:	31 e0       	ldi	r19, 0x01	; 1
    e2de:	fc 01       	movw	r30, r24
    e2e0:	20 83       	st	Z, r18
    e2e2:	31 83       	std	Z+1, r19	; 0x01
    e2e4:	ab c0       	rjmp	.+342    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 550)
    e2e6:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2e8:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2ea:	fc 01       	movw	r30, r24
    e2ec:	80 81       	ld	r24, Z
    e2ee:	91 81       	ldd	r25, Z+1	; 0x01
    e2f0:	86 32       	cpi	r24, 0x26	; 38
    e2f2:	92 40       	sbci	r25, 0x02	; 2
    e2f4:	50 f4       	brcc	.+20     	; 0xe30a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x192>
	{
		index = 6;
    e2f6:	86 e0       	ldi	r24, 0x06	; 6
    e2f8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    e2fa:	8e 85       	ldd	r24, Y+14	; 0x0e
    e2fc:	9f 85       	ldd	r25, Y+15	; 0x0f
    e2fe:	24 ef       	ldi	r18, 0xF4	; 244
    e300:	31 e0       	ldi	r19, 0x01	; 1
    e302:	fc 01       	movw	r30, r24
    e304:	20 83       	st	Z, r18
    e306:	31 83       	std	Z+1, r19	; 0x01
    e308:	99 c0       	rjmp	.+306    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 650)
    e30a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e30c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e30e:	fc 01       	movw	r30, r24
    e310:	80 81       	ld	r24, Z
    e312:	91 81       	ldd	r25, Z+1	; 0x01
    e314:	8a 38       	cpi	r24, 0x8A	; 138
    e316:	92 40       	sbci	r25, 0x02	; 2
    e318:	50 f4       	brcc	.+20     	; 0xe32e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1b6>
	{
		index = 7;
    e31a:	87 e0       	ldi	r24, 0x07	; 7
    e31c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    e31e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e320:	9f 85       	ldd	r25, Y+15	; 0x0f
    e322:	28 e5       	ldi	r18, 0x58	; 88
    e324:	32 e0       	ldi	r19, 0x02	; 2
    e326:	fc 01       	movw	r30, r24
    e328:	20 83       	st	Z, r18
    e32a:	31 83       	std	Z+1, r19	; 0x01
    e32c:	87 c0       	rjmp	.+270    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 900)
    e32e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e330:	9f 85       	ldd	r25, Y+15	; 0x0f
    e332:	fc 01       	movw	r30, r24
    e334:	80 81       	ld	r24, Z
    e336:	91 81       	ldd	r25, Z+1	; 0x01
    e338:	84 38       	cpi	r24, 0x84	; 132
    e33a:	93 40       	sbci	r25, 0x03	; 3
    e33c:	50 f4       	brcc	.+20     	; 0xe352 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1da>
	{
		index = 8;
    e33e:	88 e0       	ldi	r24, 0x08	; 8
    e340:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    e342:	8e 85       	ldd	r24, Y+14	; 0x0e
    e344:	9f 85       	ldd	r25, Y+15	; 0x0f
    e346:	20 e2       	ldi	r18, 0x20	; 32
    e348:	33 e0       	ldi	r19, 0x03	; 3
    e34a:	fc 01       	movw	r30, r24
    e34c:	20 83       	st	Z, r18
    e34e:	31 83       	std	Z+1, r19	; 0x01
    e350:	75 c0       	rjmp	.+234    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1250)
    e352:	8e 85       	ldd	r24, Y+14	; 0x0e
    e354:	9f 85       	ldd	r25, Y+15	; 0x0f
    e356:	fc 01       	movw	r30, r24
    e358:	80 81       	ld	r24, Z
    e35a:	91 81       	ldd	r25, Z+1	; 0x01
    e35c:	82 3e       	cpi	r24, 0xE2	; 226
    e35e:	94 40       	sbci	r25, 0x04	; 4
    e360:	50 f4       	brcc	.+20     	; 0xe376 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1fe>
	{
		index = 9;
    e362:	89 e0       	ldi	r24, 0x09	; 9
    e364:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    e366:	8e 85       	ldd	r24, Y+14	; 0x0e
    e368:	9f 85       	ldd	r25, Y+15	; 0x0f
    e36a:	28 ee       	ldi	r18, 0xE8	; 232
    e36c:	33 e0       	ldi	r19, 0x03	; 3
    e36e:	fc 01       	movw	r30, r24
    e370:	20 83       	st	Z, r18
    e372:	31 83       	std	Z+1, r19	; 0x01
    e374:	63 c0       	rjmp	.+198    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1750)
    e376:	8e 85       	ldd	r24, Y+14	; 0x0e
    e378:	9f 85       	ldd	r25, Y+15	; 0x0f
    e37a:	fc 01       	movw	r30, r24
    e37c:	80 81       	ld	r24, Z
    e37e:	91 81       	ldd	r25, Z+1	; 0x01
    e380:	86 3d       	cpi	r24, 0xD6	; 214
    e382:	96 40       	sbci	r25, 0x06	; 6
    e384:	50 f4       	brcc	.+20     	; 0xe39a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x222>
	{
		index = 10;
    e386:	8a e0       	ldi	r24, 0x0A	; 10
    e388:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    e38a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e38c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e38e:	2c ed       	ldi	r18, 0xDC	; 220
    e390:	35 e0       	ldi	r19, 0x05	; 5
    e392:	fc 01       	movw	r30, r24
    e394:	20 83       	st	Z, r18
    e396:	31 83       	std	Z+1, r19	; 0x01
    e398:	51 c0       	rjmp	.+162    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2250)
    e39a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e39c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e39e:	fc 01       	movw	r30, r24
    e3a0:	80 81       	ld	r24, Z
    e3a2:	91 81       	ldd	r25, Z+1	; 0x01
    e3a4:	8a 3c       	cpi	r24, 0xCA	; 202
    e3a6:	98 40       	sbci	r25, 0x08	; 8
    e3a8:	50 f4       	brcc	.+20     	; 0xe3be <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x246>
	{
		index = 11;
    e3aa:	8b e0       	ldi	r24, 0x0B	; 11
    e3ac:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    e3ae:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3b0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3b2:	20 ed       	ldi	r18, 0xD0	; 208
    e3b4:	37 e0       	ldi	r19, 0x07	; 7
    e3b6:	fc 01       	movw	r30, r24
    e3b8:	20 83       	st	Z, r18
    e3ba:	31 83       	std	Z+1, r19	; 0x01
    e3bc:	3f c0       	rjmp	.+126    	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2750)
    e3be:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3c0:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3c2:	fc 01       	movw	r30, r24
    e3c4:	80 81       	ld	r24, Z
    e3c6:	91 81       	ldd	r25, Z+1	; 0x01
    e3c8:	8e 3b       	cpi	r24, 0xBE	; 190
    e3ca:	9a 40       	sbci	r25, 0x0A	; 10
    e3cc:	50 f4       	brcc	.+20     	; 0xe3e2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x26a>
	{
		index = 12;
    e3ce:	8c e0       	ldi	r24, 0x0C	; 12
    e3d0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    e3d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3d6:	24 ec       	ldi	r18, 0xC4	; 196
    e3d8:	39 e0       	ldi	r19, 0x09	; 9
    e3da:	fc 01       	movw	r30, r24
    e3dc:	20 83       	st	Z, r18
    e3de:	31 83       	std	Z+1, r19	; 0x01
    e3e0:	2d c0       	rjmp	.+90     	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 3500)
    e3e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3e6:	fc 01       	movw	r30, r24
    e3e8:	80 81       	ld	r24, Z
    e3ea:	91 81       	ldd	r25, Z+1	; 0x01
    e3ec:	8c 3a       	cpi	r24, 0xAC	; 172
    e3ee:	9d 40       	sbci	r25, 0x0D	; 13
    e3f0:	50 f4       	brcc	.+20     	; 0xe406 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28e>
	{
		index = 13;
    e3f2:	8d e0       	ldi	r24, 0x0D	; 13
    e3f4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    e3f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    e3f8:	9f 85       	ldd	r25, Y+15	; 0x0f
    e3fa:	28 eb       	ldi	r18, 0xB8	; 184
    e3fc:	3b e0       	ldi	r19, 0x0B	; 11
    e3fe:	fc 01       	movw	r30, r24
    e400:	20 83       	st	Z, r18
    e402:	31 83       	std	Z+1, r19	; 0x01
    e404:	1b c0       	rjmp	.+54     	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 4500)
    e406:	8e 85       	ldd	r24, Y+14	; 0x0e
    e408:	9f 85       	ldd	r25, Y+15	; 0x0f
    e40a:	fc 01       	movw	r30, r24
    e40c:	80 81       	ld	r24, Z
    e40e:	91 81       	ldd	r25, Z+1	; 0x01
    e410:	84 39       	cpi	r24, 0x94	; 148
    e412:	91 41       	sbci	r25, 0x11	; 17
    e414:	50 f4       	brcc	.+20     	; 0xe42a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2b2>
	{
		index = 14;
    e416:	8e e0       	ldi	r24, 0x0E	; 14
    e418:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    e41a:	8e 85       	ldd	r24, Y+14	; 0x0e
    e41c:	9f 85       	ldd	r25, Y+15	; 0x0f
    e41e:	20 ea       	ldi	r18, 0xA0	; 160
    e420:	3f e0       	ldi	r19, 0x0F	; 15
    e422:	fc 01       	movw	r30, r24
    e424:	20 83       	st	Z, r18
    e426:	31 83       	std	Z+1, r19	; 0x01
    e428:	09 c0       	rjmp	.+18     	; 0xe43c <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else
	{
		index = 15;
    e42a:	8f e0       	ldi	r24, 0x0F	; 15
    e42c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    e42e:	8e 85       	ldd	r24, Y+14	; 0x0e
    e430:	9f 85       	ldd	r25, Y+15	; 0x0f
    e432:	28 e8       	ldi	r18, 0x88	; 136
    e434:	33 e1       	ldi	r19, 0x13	; 19
    e436:	fc 01       	movw	r30, r24
    e438:	20 83       	st	Z, r18
    e43a:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    e43c:	8a 81       	ldd	r24, Y+2	; 0x02
    e43e:	88 2f       	mov	r24, r24
    e440:	90 e0       	ldi	r25, 0x00	; 0
    e442:	8f 5b       	subi	r24, 0xBF	; 191
    e444:	9f 4b       	sbci	r25, 0xBF	; 191
    e446:	fc 01       	movw	r30, r24
    e448:	20 81       	ld	r18, Z
    e44a:	88 89       	ldd	r24, Y+16	; 0x10
    e44c:	99 89       	ldd	r25, Y+17	; 0x11
    e44e:	fc 01       	movw	r30, r24
    e450:	20 83       	st	Z, r18
	*modLevelHigh = 0;
    e452:	8a 89       	ldd	r24, Y+18	; 0x12
    e454:	9b 89       	ldd	r25, Y+19	; 0x13
    e456:	fc 01       	movw	r30, r24
    e458:	10 82       	st	Z, r1
	*modLevelLow = 0;
    e45a:	8c 89       	ldd	r24, Y+20	; 0x14
    e45c:	9d 89       	ldd	r25, Y+21	; 0x15
    e45e:	fc 01       	movw	r30, r24
    e460:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    e462:	88 89       	ldd	r24, Y+16	; 0x10
    e464:	99 89       	ldd	r25, Y+17	; 0x11
    e466:	fc 01       	movw	r30, r24
    e468:	80 81       	ld	r24, Z
    e46a:	8b 87       	std	Y+11, r24	; 0x0b
    e46c:	8f ef       	ldi	r24, 0xFF	; 255
    e46e:	90 e0       	ldi	r25, 0x00	; 0
    e470:	8c 87       	std	Y+12, r24	; 0x0c
    e472:	9d 87       	std	Y+13, r25	; 0x0d
    e474:	8b 85       	ldd	r24, Y+11	; 0x0b
    e476:	88 2f       	mov	r24, r24
    e478:	90 e0       	ldi	r25, 0x00	; 0
    e47a:	2c 85       	ldd	r18, Y+12	; 0x0c
    e47c:	3d 85       	ldd	r19, Y+13	; 0x0d
    e47e:	28 17       	cp	r18, r24
    e480:	39 07       	cpc	r19, r25
    e482:	0c f4       	brge	.+2      	; 0xe486 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x30e>
    e484:	c9 01       	movw	r24, r18
    e486:	28 2f       	mov	r18, r24
    e488:	88 89       	ldd	r24, Y+16	; 0x10
    e48a:	99 89       	ldd	r25, Y+17	; 0x11
    e48c:	fc 01       	movw	r30, r24
    e48e:	20 83       	st	Z, r18

	return(ec);
    e490:	89 81       	ldd	r24, Y+1	; 0x01
    e492:	65 96       	adiw	r28, 0x15	; 21
    e494:	cd bf       	out	0x3d, r28	; 61
    e496:	de bf       	out	0x3e, r29	; 62
    e498:	df 91       	pop	r29
    e49a:	cf 91       	pop	r28
    e49c:	08 95       	ret

0000e49e <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    e49e:	cf 93       	push	r28
    e4a0:	df 93       	push	r29
    e4a2:	cd b7       	in	r28, 0x3d	; 61
    e4a4:	de b7       	in	r29, 0x3e	; 62
    e4a6:	80 e0       	ldi	r24, 0x00	; 0
    e4a8:	98 e0       	ldi	r25, 0x08	; 8
    e4aa:	fc 01       	movw	r30, r24
    e4ac:	80 81       	ld	r24, Z
    e4ae:	df 91       	pop	r29
    e4b0:	cf 91       	pop	r28
    e4b2:	08 95       	ret

0000e4b4 <USART1_init>:
    e4b4:	0f 93       	push	r16
    e4b6:	1f 93       	push	r17
    e4b8:	cf 93       	push	r28
    e4ba:	df 93       	push	r29
    e4bc:	00 d0       	rcall	.+0      	; 0xe4be <USART1_init+0xa>
    e4be:	00 d0       	rcall	.+0      	; 0xe4c0 <USART1_init+0xc>
    e4c0:	cd b7       	in	r28, 0x3d	; 61
    e4c2:	de b7       	in	r29, 0x3e	; 62
    e4c4:	69 83       	std	Y+1, r22	; 0x01
    e4c6:	7a 83       	std	Y+2, r23	; 0x02
    e4c8:	8b 83       	std	Y+3, r24	; 0x03
    e4ca:	9c 83       	std	Y+4, r25	; 0x04
    e4cc:	f8 94       	cli
    e4ce:	00 e2       	ldi	r16, 0x20	; 32
    e4d0:	18 e0       	ldi	r17, 0x08	; 8
    e4d2:	69 81       	ldd	r22, Y+1	; 0x01
    e4d4:	7a 81       	ldd	r23, Y+2	; 0x02
    e4d6:	8b 81       	ldd	r24, Y+3	; 0x03
    e4d8:	9c 81       	ldd	r25, Y+4	; 0x04
    e4da:	0e 94 4f 78 	call	0xf09e	; 0xf09e <__floatunsisf>
    e4de:	dc 01       	movw	r26, r24
    e4e0:	cb 01       	movw	r24, r22
    e4e2:	20 e0       	ldi	r18, 0x00	; 0
    e4e4:	30 e0       	ldi	r19, 0x00	; 0
    e4e6:	40 e8       	ldi	r20, 0x80	; 128
    e4e8:	51 e4       	ldi	r21, 0x41	; 65
    e4ea:	bc 01       	movw	r22, r24
    e4ec:	cd 01       	movw	r24, r26
    e4ee:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    e4f2:	dc 01       	movw	r26, r24
    e4f4:	cb 01       	movw	r24, r22
    e4f6:	9c 01       	movw	r18, r24
    e4f8:	ad 01       	movw	r20, r26
    e4fa:	60 e0       	ldi	r22, 0x00	; 0
    e4fc:	7b e1       	ldi	r23, 0x1B	; 27
    e4fe:	87 eb       	ldi	r24, 0xB7	; 183
    e500:	9e e4       	ldi	r25, 0x4E	; 78
    e502:	0e 94 a7 77 	call	0xef4e	; 0xef4e <__divsf3>
    e506:	dc 01       	movw	r26, r24
    e508:	cb 01       	movw	r24, r22
    e50a:	20 e0       	ldi	r18, 0x00	; 0
    e50c:	30 e0       	ldi	r19, 0x00	; 0
    e50e:	40 e0       	ldi	r20, 0x00	; 0
    e510:	5f e3       	ldi	r21, 0x3F	; 63
    e512:	bc 01       	movw	r22, r24
    e514:	cd 01       	movw	r24, r26
    e516:	0e 94 1f 77 	call	0xee3e	; 0xee3e <__addsf3>
    e51a:	dc 01       	movw	r26, r24
    e51c:	cb 01       	movw	r24, r22
    e51e:	bc 01       	movw	r22, r24
    e520:	cd 01       	movw	r24, r26
    e522:	0e 94 20 78 	call	0xf040	; 0xf040 <__fixunssfsi>
    e526:	dc 01       	movw	r26, r24
    e528:	cb 01       	movw	r24, r22
    e52a:	f8 01       	movw	r30, r16
    e52c:	80 87       	std	Z+8, r24	; 0x08
    e52e:	91 87       	std	Z+9, r25	; 0x09
    e530:	80 e2       	ldi	r24, 0x20	; 32
    e532:	98 e0       	ldi	r25, 0x08	; 8
    e534:	20 e8       	ldi	r18, 0x80	; 128
    e536:	fc 01       	movw	r30, r24
    e538:	25 83       	std	Z+5, r18	; 0x05
    e53a:	80 e2       	ldi	r24, 0x20	; 32
    e53c:	98 e0       	ldi	r25, 0x08	; 8
    e53e:	23 e0       	ldi	r18, 0x03	; 3
    e540:	fc 01       	movw	r30, r24
    e542:	27 83       	std	Z+7, r18	; 0x07
    e544:	80 e2       	ldi	r24, 0x20	; 32
    e546:	98 e0       	ldi	r25, 0x08	; 8
    e548:	20 ec       	ldi	r18, 0xC0	; 192
    e54a:	fc 01       	movw	r30, r24
    e54c:	26 83       	std	Z+6, r18	; 0x06
    e54e:	78 94       	sei
    e550:	80 e0       	ldi	r24, 0x00	; 0
    e552:	24 96       	adiw	r28, 0x04	; 4
    e554:	cd bf       	out	0x3d, r28	; 61
    e556:	de bf       	out	0x3e, r29	; 62
    e558:	df 91       	pop	r29
    e55a:	cf 91       	pop	r28
    e55c:	1f 91       	pop	r17
    e55e:	0f 91       	pop	r16
    e560:	08 95       	ret

0000e562 <USART1_enable_tx>:
    e562:	cf 93       	push	r28
    e564:	df 93       	push	r29
    e566:	cd b7       	in	r28, 0x3d	; 61
    e568:	de b7       	in	r29, 0x3e	; 62
    e56a:	80 e2       	ldi	r24, 0x20	; 32
    e56c:	98 e0       	ldi	r25, 0x08	; 8
    e56e:	20 e2       	ldi	r18, 0x20	; 32
    e570:	38 e0       	ldi	r19, 0x08	; 8
    e572:	f9 01       	movw	r30, r18
    e574:	26 81       	ldd	r18, Z+6	; 0x06
    e576:	20 64       	ori	r18, 0x40	; 64
    e578:	fc 01       	movw	r30, r24
    e57a:	26 83       	std	Z+6, r18	; 0x06
    e57c:	80 e2       	ldi	r24, 0x20	; 32
    e57e:	98 e0       	ldi	r25, 0x08	; 8
    e580:	20 e2       	ldi	r18, 0x20	; 32
    e582:	38 e0       	ldi	r19, 0x08	; 8
    e584:	f9 01       	movw	r30, r18
    e586:	25 81       	ldd	r18, Z+5	; 0x05
    e588:	20 62       	ori	r18, 0x20	; 32
    e58a:	fc 01       	movw	r30, r24
    e58c:	25 83       	std	Z+5, r18	; 0x05
    e58e:	00 00       	nop
    e590:	df 91       	pop	r29
    e592:	cf 91       	pop	r28
    e594:	08 95       	ret

0000e596 <USART1_disable>:
    e596:	cf 93       	push	r28
    e598:	df 93       	push	r29
    e59a:	cd b7       	in	r28, 0x3d	; 61
    e59c:	de b7       	in	r29, 0x3e	; 62
    e59e:	80 e2       	ldi	r24, 0x20	; 32
    e5a0:	98 e0       	ldi	r25, 0x08	; 8
    e5a2:	20 e2       	ldi	r18, 0x20	; 32
    e5a4:	38 e0       	ldi	r19, 0x08	; 8
    e5a6:	f9 01       	movw	r30, r18
    e5a8:	26 81       	ldd	r18, Z+6	; 0x06
    e5aa:	2f 73       	andi	r18, 0x3F	; 63
    e5ac:	fc 01       	movw	r30, r24
    e5ae:	26 83       	std	Z+6, r18	; 0x06
    e5b0:	00 00       	nop
    e5b2:	df 91       	pop	r29
    e5b4:	cf 91       	pop	r28
    e5b6:	08 95       	ret

0000e5b8 <USART1_get_data>:
    e5b8:	cf 93       	push	r28
    e5ba:	df 93       	push	r29
    e5bc:	cd b7       	in	r28, 0x3d	; 61
    e5be:	de b7       	in	r29, 0x3e	; 62
    e5c0:	80 e2       	ldi	r24, 0x20	; 32
    e5c2:	98 e0       	ldi	r25, 0x08	; 8
    e5c4:	fc 01       	movw	r30, r24
    e5c6:	80 81       	ld	r24, Z
    e5c8:	df 91       	pop	r29
    e5ca:	cf 91       	pop	r28
    e5cc:	08 95       	ret

0000e5ce <USART4_init>:
    e5ce:	0f 93       	push	r16
    e5d0:	1f 93       	push	r17
    e5d2:	cf 93       	push	r28
    e5d4:	df 93       	push	r29
    e5d6:	00 d0       	rcall	.+0      	; 0xe5d8 <USART4_init+0xa>
    e5d8:	00 d0       	rcall	.+0      	; 0xe5da <USART4_init+0xc>
    e5da:	cd b7       	in	r28, 0x3d	; 61
    e5dc:	de b7       	in	r29, 0x3e	; 62
    e5de:	69 83       	std	Y+1, r22	; 0x01
    e5e0:	7a 83       	std	Y+2, r23	; 0x02
    e5e2:	8b 83       	std	Y+3, r24	; 0x03
    e5e4:	9c 83       	std	Y+4, r25	; 0x04
    e5e6:	00 e8       	ldi	r16, 0x80	; 128
    e5e8:	18 e0       	ldi	r17, 0x08	; 8
    e5ea:	69 81       	ldd	r22, Y+1	; 0x01
    e5ec:	7a 81       	ldd	r23, Y+2	; 0x02
    e5ee:	8b 81       	ldd	r24, Y+3	; 0x03
    e5f0:	9c 81       	ldd	r25, Y+4	; 0x04
    e5f2:	0e 94 4f 78 	call	0xf09e	; 0xf09e <__floatunsisf>
    e5f6:	dc 01       	movw	r26, r24
    e5f8:	cb 01       	movw	r24, r22
    e5fa:	20 e0       	ldi	r18, 0x00	; 0
    e5fc:	30 e0       	ldi	r19, 0x00	; 0
    e5fe:	40 e8       	ldi	r20, 0x80	; 128
    e600:	51 e4       	ldi	r21, 0x41	; 65
    e602:	bc 01       	movw	r22, r24
    e604:	cd 01       	movw	r24, r26
    e606:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    e60a:	dc 01       	movw	r26, r24
    e60c:	cb 01       	movw	r24, r22
    e60e:	9c 01       	movw	r18, r24
    e610:	ad 01       	movw	r20, r26
    e612:	60 e0       	ldi	r22, 0x00	; 0
    e614:	7b e1       	ldi	r23, 0x1B	; 27
    e616:	87 eb       	ldi	r24, 0xB7	; 183
    e618:	9e e4       	ldi	r25, 0x4E	; 78
    e61a:	0e 94 a7 77 	call	0xef4e	; 0xef4e <__divsf3>
    e61e:	dc 01       	movw	r26, r24
    e620:	cb 01       	movw	r24, r22
    e622:	20 e0       	ldi	r18, 0x00	; 0
    e624:	30 e0       	ldi	r19, 0x00	; 0
    e626:	40 e0       	ldi	r20, 0x00	; 0
    e628:	5f e3       	ldi	r21, 0x3F	; 63
    e62a:	bc 01       	movw	r22, r24
    e62c:	cd 01       	movw	r24, r26
    e62e:	0e 94 1f 77 	call	0xee3e	; 0xee3e <__addsf3>
    e632:	dc 01       	movw	r26, r24
    e634:	cb 01       	movw	r24, r22
    e636:	bc 01       	movw	r22, r24
    e638:	cd 01       	movw	r24, r26
    e63a:	0e 94 20 78 	call	0xf040	; 0xf040 <__fixunssfsi>
    e63e:	dc 01       	movw	r26, r24
    e640:	cb 01       	movw	r24, r22
    e642:	f8 01       	movw	r30, r16
    e644:	80 87       	std	Z+8, r24	; 0x08
    e646:	91 87       	std	Z+9, r25	; 0x09
    e648:	80 e8       	ldi	r24, 0x80	; 128
    e64a:	98 e0       	ldi	r25, 0x08	; 8
    e64c:	20 e8       	ldi	r18, 0x80	; 128
    e64e:	fc 01       	movw	r30, r24
    e650:	25 83       	std	Z+5, r18	; 0x05
    e652:	80 e8       	ldi	r24, 0x80	; 128
    e654:	98 e0       	ldi	r25, 0x08	; 8
    e656:	20 ec       	ldi	r18, 0xC0	; 192
    e658:	fc 01       	movw	r30, r24
    e65a:	26 83       	std	Z+6, r18	; 0x06
    e65c:	80 e0       	ldi	r24, 0x00	; 0
    e65e:	24 96       	adiw	r28, 0x04	; 4
    e660:	cd bf       	out	0x3d, r28	; 61
    e662:	de bf       	out	0x3e, r29	; 62
    e664:	df 91       	pop	r29
    e666:	cf 91       	pop	r28
    e668:	1f 91       	pop	r17
    e66a:	0f 91       	pop	r16
    e66c:	08 95       	ret

0000e66e <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    e66e:	cf 93       	push	r28
    e670:	df 93       	push	r29
    e672:	cd b7       	in	r28, 0x3d	; 61
    e674:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    e676:	80 e8       	ldi	r24, 0x80	; 128
    e678:	98 e0       	ldi	r25, 0x08	; 8
    e67a:	20 e8       	ldi	r18, 0x80	; 128
    e67c:	38 e0       	ldi	r19, 0x08	; 8
    e67e:	f9 01       	movw	r30, r18
    e680:	26 81       	ldd	r18, Z+6	; 0x06
    e682:	20 64       	ori	r18, 0x40	; 64
    e684:	fc 01       	movw	r30, r24
    e686:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    e688:	80 e8       	ldi	r24, 0x80	; 128
    e68a:	98 e0       	ldi	r25, 0x08	; 8
    e68c:	20 e8       	ldi	r18, 0x80	; 128
    e68e:	38 e0       	ldi	r19, 0x08	; 8
    e690:	f9 01       	movw	r30, r18
    e692:	25 81       	ldd	r18, Z+5	; 0x05
    e694:	20 62       	ori	r18, 0x20	; 32
    e696:	fc 01       	movw	r30, r24
    e698:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    e69a:	00 00       	nop
    e69c:	df 91       	pop	r29
    e69e:	cf 91       	pop	r28
    e6a0:	08 95       	ret

0000e6a2 <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    e6a2:	cf 93       	push	r28
    e6a4:	df 93       	push	r29
    e6a6:	cd b7       	in	r28, 0x3d	; 61
    e6a8:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    e6aa:	80 e8       	ldi	r24, 0x80	; 128
    e6ac:	98 e0       	ldi	r25, 0x08	; 8
    e6ae:	20 e8       	ldi	r18, 0x80	; 128
    e6b0:	38 e0       	ldi	r19, 0x08	; 8
    e6b2:	f9 01       	movw	r30, r18
    e6b4:	26 81       	ldd	r18, Z+6	; 0x06
    e6b6:	2f 73       	andi	r18, 0x3F	; 63
    e6b8:	fc 01       	movw	r30, r24
    e6ba:	26 83       	std	Z+6, r18	; 0x06
}
    e6bc:	00 00       	nop
    e6be:	df 91       	pop	r29
    e6c0:	cf 91       	pop	r28
    e6c2:	08 95       	ret

0000e6c4 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    e6c4:	cf 93       	push	r28
    e6c6:	df 93       	push	r29
    e6c8:	cd b7       	in	r28, 0x3d	; 61
    e6ca:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    e6cc:	80 e8       	ldi	r24, 0x80	; 128
    e6ce:	98 e0       	ldi	r25, 0x08	; 8
    e6d0:	fc 01       	movw	r30, r24
    e6d2:	80 81       	ld	r24, Z
}
    e6d4:	df 91       	pop	r29
    e6d6:	cf 91       	pop	r28
    e6d8:	08 95       	ret

0000e6da <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    e6da:	ef 92       	push	r14
    e6dc:	ff 92       	push	r15
    e6de:	0f 93       	push	r16
    e6e0:	1f 93       	push	r17
    e6e2:	cf 93       	push	r28
    e6e4:	df 93       	push	r29
    e6e6:	cd b7       	in	r28, 0x3d	; 61
    e6e8:	de b7       	in	r29, 0x3e	; 62
    e6ea:	2c 97       	sbiw	r28, 0x0c	; 12
    e6ec:	cd bf       	out	0x3d, r28	; 61
    e6ee:	de bf       	out	0x3e, r29	; 62
    e6f0:	6d 83       	std	Y+5, r22	; 0x05
    e6f2:	7e 83       	std	Y+6, r23	; 0x06
    e6f4:	8f 83       	std	Y+7, r24	; 0x07
    e6f6:	98 87       	std	Y+8, r25	; 0x08
    e6f8:	29 87       	std	Y+9, r18	; 0x09
    e6fa:	3a 87       	std	Y+10, r19	; 0x0a
    e6fc:	4b 87       	std	Y+11, r20	; 0x0b
    e6fe:	5c 87       	std	Y+12, r21	; 0x0c
    e700:	2d 81       	ldd	r18, Y+5	; 0x05
    e702:	3e 81       	ldd	r19, Y+6	; 0x06
    e704:	4f 81       	ldd	r20, Y+7	; 0x07
    e706:	58 85       	ldd	r21, Y+8	; 0x08
    e708:	89 85       	ldd	r24, Y+9	; 0x09
    e70a:	9a 85       	ldd	r25, Y+10	; 0x0a
    e70c:	ab 85       	ldd	r26, Y+11	; 0x0b
    e70e:	bc 85       	ldd	r27, Y+12	; 0x0c
    e710:	82 17       	cp	r24, r18
    e712:	93 07       	cpc	r25, r19
    e714:	a4 07       	cpc	r26, r20
    e716:	b5 07       	cpc	r27, r21
    e718:	a8 f4       	brcc	.+42     	; 0xe744 <_Z7timeDifmm+0x6a>
    e71a:	2d 81       	ldd	r18, Y+5	; 0x05
    e71c:	3e 81       	ldd	r19, Y+6	; 0x06
    e71e:	4f 81       	ldd	r20, Y+7	; 0x07
    e720:	58 85       	ldd	r21, Y+8	; 0x08
    e722:	89 85       	ldd	r24, Y+9	; 0x09
    e724:	9a 85       	ldd	r25, Y+10	; 0x0a
    e726:	ab 85       	ldd	r26, Y+11	; 0x0b
    e728:	bc 85       	ldd	r27, Y+12	; 0x0c
    e72a:	79 01       	movw	r14, r18
    e72c:	8a 01       	movw	r16, r20
    e72e:	e8 1a       	sub	r14, r24
    e730:	f9 0a       	sbc	r15, r25
    e732:	0a 0b       	sbc	r16, r26
    e734:	1b 0b       	sbc	r17, r27
    e736:	d8 01       	movw	r26, r16
    e738:	c7 01       	movw	r24, r14
    e73a:	89 83       	std	Y+1, r24	; 0x01
    e73c:	9a 83       	std	Y+2, r25	; 0x02
    e73e:	ab 83       	std	Y+3, r26	; 0x03
    e740:	bc 83       	std	Y+4, r27	; 0x04
    e742:	14 c0       	rjmp	.+40     	; 0xe76c <_Z7timeDifmm+0x92>
    e744:	2d 81       	ldd	r18, Y+5	; 0x05
    e746:	3e 81       	ldd	r19, Y+6	; 0x06
    e748:	4f 81       	ldd	r20, Y+7	; 0x07
    e74a:	58 85       	ldd	r21, Y+8	; 0x08
    e74c:	89 85       	ldd	r24, Y+9	; 0x09
    e74e:	9a 85       	ldd	r25, Y+10	; 0x0a
    e750:	ab 85       	ldd	r26, Y+11	; 0x0b
    e752:	bc 85       	ldd	r27, Y+12	; 0x0c
    e754:	79 01       	movw	r14, r18
    e756:	8a 01       	movw	r16, r20
    e758:	e8 1a       	sub	r14, r24
    e75a:	f9 0a       	sbc	r15, r25
    e75c:	0a 0b       	sbc	r16, r26
    e75e:	1b 0b       	sbc	r17, r27
    e760:	d8 01       	movw	r26, r16
    e762:	c7 01       	movw	r24, r14
    e764:	89 83       	std	Y+1, r24	; 0x01
    e766:	9a 83       	std	Y+2, r25	; 0x02
    e768:	ab 83       	std	Y+3, r26	; 0x03
    e76a:	bc 83       	std	Y+4, r27	; 0x04
    e76c:	89 81       	ldd	r24, Y+1	; 0x01
    e76e:	9a 81       	ldd	r25, Y+2	; 0x02
    e770:	ab 81       	ldd	r26, Y+3	; 0x03
    e772:	bc 81       	ldd	r27, Y+4	; 0x04
    e774:	bc 01       	movw	r22, r24
    e776:	cd 01       	movw	r24, r26
    e778:	2c 96       	adiw	r28, 0x0c	; 12
    e77a:	cd bf       	out	0x3d, r28	; 61
    e77c:	de bf       	out	0x3e, r29	; 62
    e77e:	df 91       	pop	r29
    e780:	cf 91       	pop	r28
    e782:	1f 91       	pop	r17
    e784:	0f 91       	pop	r16
    e786:	ff 90       	pop	r15
    e788:	ef 90       	pop	r14
    e78a:	08 95       	ret

0000e78c <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    e78c:	cf 93       	push	r28
    e78e:	df 93       	push	r29
    e790:	00 d0       	rcall	.+0      	; 0xe792 <_Z11only_digitsPc+0x6>
    e792:	cd b7       	in	r28, 0x3d	; 61
    e794:	de b7       	in	r29, 0x3e	; 62
    e796:	89 83       	std	Y+1, r24	; 0x01
    e798:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    e79a:	89 81       	ldd	r24, Y+1	; 0x01
    e79c:	9a 81       	ldd	r25, Y+2	; 0x02
    e79e:	fc 01       	movw	r30, r24
    e7a0:	80 81       	ld	r24, Z
    e7a2:	88 23       	and	r24, r24
    e7a4:	a1 f0       	breq	.+40     	; 0xe7ce <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    e7a6:	89 81       	ldd	r24, Y+1	; 0x01
    e7a8:	9a 81       	ldd	r25, Y+2	; 0x02
    e7aa:	9c 01       	movw	r18, r24
    e7ac:	2f 5f       	subi	r18, 0xFF	; 255
    e7ae:	3f 4f       	sbci	r19, 0xFF	; 255
    e7b0:	29 83       	std	Y+1, r18	; 0x01
    e7b2:	3a 83       	std	Y+2, r19	; 0x02
    e7b4:	fc 01       	movw	r30, r24
    e7b6:	80 81       	ld	r24, Z
    e7b8:	88 2f       	mov	r24, r24
    e7ba:	90 e0       	ldi	r25, 0x00	; 0
    e7bc:	c0 97       	sbiw	r24, 0x30	; 48
    e7be:	21 e0       	ldi	r18, 0x01	; 1
    e7c0:	0a 97       	sbiw	r24, 0x0a	; 10
    e7c2:	08 f4       	brcc	.+2      	; 0xe7c6 <_Z11only_digitsPc+0x3a>
    e7c4:	20 e0       	ldi	r18, 0x00	; 0
    e7c6:	22 23       	and	r18, r18
    e7c8:	41 f3       	breq	.-48     	; 0xe79a <_Z11only_digitsPc+0xe>
		{
			return( false);
    e7ca:	80 e0       	ldi	r24, 0x00	; 0
    e7cc:	01 c0       	rjmp	.+2      	; 0xe7d0 <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    e7ce:	81 e0       	ldi	r24, 0x01	; 1
}
    e7d0:	0f 90       	pop	r0
    e7d2:	0f 90       	pop	r0
    e7d4:	df 91       	pop	r29
    e7d6:	cf 91       	pop	r28
    e7d8:	08 95       	ret

0000e7da <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    e7da:	cf 93       	push	r28
    e7dc:	df 93       	push	r29
    e7de:	cd b7       	in	r28, 0x3d	; 61
    e7e0:	de b7       	in	r29, 0x3e	; 62
    e7e2:	2b 97       	sbiw	r28, 0x0b	; 11
    e7e4:	cd bf       	out	0x3d, r28	; 61
    e7e6:	de bf       	out	0x3e, r29	; 62
    e7e8:	8e 83       	std	Y+6, r24	; 0x06
    e7ea:	9f 83       	std	Y+7, r25	; 0x07
    e7ec:	48 87       	std	Y+8, r20	; 0x08
    e7ee:	59 87       	std	Y+9, r21	; 0x09
    e7f0:	6a 87       	std	Y+10, r22	; 0x0a
    e7f2:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    e7f4:	81 e0       	ldi	r24, 0x01	; 1
    e7f6:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    e7f8:	8e 81       	ldd	r24, Y+6	; 0x06
    e7fa:	9f 81       	ldd	r25, Y+7	; 0x07
    e7fc:	89 2b       	or	r24, r25
    e7fe:	11 f4       	brne	.+4      	; 0xe804 <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    e800:	89 81       	ldd	r24, Y+1	; 0x01
    e802:	61 c0       	rjmp	.+194    	; 0xe8c6 <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    e804:	88 85       	ldd	r24, Y+8	; 0x08
    e806:	99 85       	ldd	r25, Y+9	; 0x09
    e808:	aa 85       	ldd	r26, Y+10	; 0x0a
    e80a:	bb 85       	ldd	r27, Y+11	; 0x0b
    e80c:	81 3e       	cpi	r24, 0xE1	; 225
    e80e:	97 46       	sbci	r25, 0x67	; 103
    e810:	a5 43       	sbci	r26, 0x35	; 53
    e812:	b1 05       	cpc	r27, r1
    e814:	08 f4       	brcc	.+2      	; 0xe818 <_Z15frequencyStringPcm+0x3e>
    e816:	56 c0       	rjmp	.+172    	; 0xe8c4 <_Z15frequencyStringPcm+0xea>
    e818:	88 85       	ldd	r24, Y+8	; 0x08
    e81a:	99 85       	ldd	r25, Y+9	; 0x09
    e81c:	aa 85       	ldd	r26, Y+10	; 0x0a
    e81e:	bb 85       	ldd	r27, Y+11	; 0x0b
    e820:	81 15       	cp	r24, r1
    e822:	99 40       	sbci	r25, 0x09	; 9
    e824:	ad 43       	sbci	r26, 0x3D	; 61
    e826:	b1 05       	cpc	r27, r1
    e828:	08 f0       	brcs	.+2      	; 0xe82c <_Z15frequencyStringPcm+0x52>
    e82a:	4c c0       	rjmp	.+152    	; 0xe8c4 <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    e82c:	88 85       	ldd	r24, Y+8	; 0x08
    e82e:	99 85       	ldd	r25, Y+9	; 0x09
    e830:	aa 85       	ldd	r26, Y+10	; 0x0a
    e832:	bb 85       	ldd	r27, Y+11	; 0x0b
    e834:	28 ee       	ldi	r18, 0xE8	; 232
    e836:	33 e0       	ldi	r19, 0x03	; 3
    e838:	40 e0       	ldi	r20, 0x00	; 0
    e83a:	50 e0       	ldi	r21, 0x00	; 0
    e83c:	bc 01       	movw	r22, r24
    e83e:	cd 01       	movw	r24, r26
    e840:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    e844:	dc 01       	movw	r26, r24
    e846:	cb 01       	movw	r24, r22
    e848:	24 e6       	ldi	r18, 0x64	; 100
    e84a:	30 e0       	ldi	r19, 0x00	; 0
    e84c:	40 e0       	ldi	r20, 0x00	; 0
    e84e:	50 e0       	ldi	r21, 0x00	; 0
    e850:	bc 01       	movw	r22, r24
    e852:	cd 01       	movw	r24, r26
    e854:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    e858:	da 01       	movw	r26, r20
    e85a:	c9 01       	movw	r24, r18
    e85c:	8a 83       	std	Y+2, r24	; 0x02
    e85e:	9b 83       	std	Y+3, r25	; 0x03
    e860:	ac 83       	std	Y+4, r26	; 0x04
    e862:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    e864:	88 85       	ldd	r24, Y+8	; 0x08
    e866:	99 85       	ldd	r25, Y+9	; 0x09
    e868:	aa 85       	ldd	r26, Y+10	; 0x0a
    e86a:	bb 85       	ldd	r27, Y+11	; 0x0b
    e86c:	28 ee       	ldi	r18, 0xE8	; 232
    e86e:	33 e0       	ldi	r19, 0x03	; 3
    e870:	40 e0       	ldi	r20, 0x00	; 0
    e872:	50 e0       	ldi	r21, 0x00	; 0
    e874:	bc 01       	movw	r22, r24
    e876:	cd 01       	movw	r24, r26
    e878:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    e87c:	da 01       	movw	r26, r20
    e87e:	c9 01       	movw	r24, r18
    e880:	2d 81       	ldd	r18, Y+5	; 0x05
    e882:	2f 93       	push	r18
    e884:	2c 81       	ldd	r18, Y+4	; 0x04
    e886:	2f 93       	push	r18
    e888:	2b 81       	ldd	r18, Y+3	; 0x03
    e88a:	2f 93       	push	r18
    e88c:	2a 81       	ldd	r18, Y+2	; 0x02
    e88e:	2f 93       	push	r18
    e890:	2b 2f       	mov	r18, r27
    e892:	2f 93       	push	r18
    e894:	2a 2f       	mov	r18, r26
    e896:	2f 93       	push	r18
    e898:	29 2f       	mov	r18, r25
    e89a:	2f 93       	push	r18
    e89c:	8f 93       	push	r24
    e89e:	80 ef       	ldi	r24, 0xF0	; 240
    e8a0:	94 e4       	ldi	r25, 0x44	; 68
    e8a2:	89 2f       	mov	r24, r25
    e8a4:	8f 93       	push	r24
    e8a6:	80 ef       	ldi	r24, 0xF0	; 240
    e8a8:	94 e4       	ldi	r25, 0x44	; 68
    e8aa:	8f 93       	push	r24
    e8ac:	8f 81       	ldd	r24, Y+7	; 0x07
    e8ae:	8f 93       	push	r24
    e8b0:	8e 81       	ldd	r24, Y+6	; 0x06
    e8b2:	8f 93       	push	r24
    e8b4:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    e8b8:	8d b7       	in	r24, 0x3d	; 61
    e8ba:	9e b7       	in	r25, 0x3e	; 62
    e8bc:	0c 96       	adiw	r24, 0x0c	; 12
    e8be:	cd bf       	out	0x3d, r28	; 61
    e8c0:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    e8c2:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    e8c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    e8c6:	2b 96       	adiw	r28, 0x0b	; 11
    e8c8:	cd bf       	out	0x3d, r28	; 61
    e8ca:	de bf       	out	0x3e, r29	; 62
    e8cc:	df 91       	pop	r29
    e8ce:	cf 91       	pop	r28
    e8d0:	08 95       	ret

0000e8d2 <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    e8d2:	ef 92       	push	r14
    e8d4:	ff 92       	push	r15
    e8d6:	0f 93       	push	r16
    e8d8:	1f 93       	push	r17
    e8da:	cf 93       	push	r28
    e8dc:	df 93       	push	r29
    e8de:	cd b7       	in	r28, 0x3d	; 61
    e8e0:	de b7       	in	r29, 0x3e	; 62
    e8e2:	65 97       	sbiw	r28, 0x15	; 21
    e8e4:	cd bf       	out	0x3d, r28	; 61
    e8e6:	de bf       	out	0x3e, r29	; 62
    e8e8:	8a 8b       	std	Y+18, r24	; 0x12
    e8ea:	9b 8b       	std	Y+19, r25	; 0x13
    e8ec:	6c 8b       	std	Y+20, r22	; 0x14
    e8ee:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    e8f0:	81 e0       	ldi	r24, 0x01	; 1
    e8f2:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    e8f4:	8a 89       	ldd	r24, Y+18	; 0x12
    e8f6:	9b 89       	ldd	r25, Y+19	; 0x13
    e8f8:	89 2b       	or	r24, r25
    e8fa:	11 f4       	brne	.+4      	; 0xe900 <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    e8fc:	89 81       	ldd	r24, Y+1	; 0x01
    e8fe:	a4 c1       	rjmp	.+840    	; 0xec48 <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    e900:	8e e2       	ldi	r24, 0x2E	; 46
    e902:	90 e0       	ldi	r25, 0x00	; 0
    e904:	8a 87       	std	Y+10, r24	; 0x0a
    e906:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    e908:	2a 85       	ldd	r18, Y+10	; 0x0a
    e90a:	3b 85       	ldd	r19, Y+11	; 0x0b
    e90c:	8a 89       	ldd	r24, Y+18	; 0x12
    e90e:	9b 89       	ldd	r25, Y+19	; 0x13
    e910:	b9 01       	movw	r22, r18
    e912:	0e 94 d4 7b 	call	0xf7a8	; 0xf7a8 <strchr>
    e916:	8c 87       	std	Y+12, r24	; 0x0c
    e918:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    e91a:	8c 85       	ldd	r24, Y+12	; 0x0c
    e91c:	9d 85       	ldd	r25, Y+13	; 0x0d
    e91e:	89 2b       	or	r24, r25
    e920:	09 f4       	brne	.+2      	; 0xe924 <_Z12frequencyValPcPm+0x52>
    e922:	d7 c0       	rjmp	.+430    	; 0xead2 <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    e924:	8a 89       	ldd	r24, Y+18	; 0x12
    e926:	9b 89       	ldd	r25, Y+19	; 0x13
    e928:	0e 94 71 7b 	call	0xf6e2	; 0xf6e2 <atof>
    e92c:	dc 01       	movw	r26, r24
    e92e:	cb 01       	movw	r24, r22
    e930:	8a 83       	std	Y+2, r24	; 0x02
    e932:	9b 83       	std	Y+3, r25	; 0x03
    e934:	ac 83       	std	Y+4, r26	; 0x04
    e936:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    e938:	20 e0       	ldi	r18, 0x00	; 0
    e93a:	30 e0       	ldi	r19, 0x00	; 0
    e93c:	40 e6       	ldi	r20, 0x60	; 96
    e93e:	50 e4       	ldi	r21, 0x40	; 64
    e940:	6a 81       	ldd	r22, Y+2	; 0x02
    e942:	7b 81       	ldd	r23, Y+3	; 0x03
    e944:	8c 81       	ldd	r24, Y+4	; 0x04
    e946:	9d 81       	ldd	r25, Y+5	; 0x05
    e948:	0e 94 42 79 	call	0xf284	; 0xf284 <__gesf2>
    e94c:	18 16       	cp	r1, r24
    e94e:	f4 f4       	brge	.+60     	; 0xe98c <_Z12frequencyValPcPm+0xba>
    e950:	20 e0       	ldi	r18, 0x00	; 0
    e952:	30 e0       	ldi	r19, 0x00	; 0
    e954:	40 e8       	ldi	r20, 0x80	; 128
    e956:	50 e4       	ldi	r21, 0x40	; 64
    e958:	6a 81       	ldd	r22, Y+2	; 0x02
    e95a:	7b 81       	ldd	r23, Y+3	; 0x03
    e95c:	8c 81       	ldd	r24, Y+4	; 0x04
    e95e:	9d 81       	ldd	r25, Y+5	; 0x05
    e960:	0e 94 a2 77 	call	0xef44	; 0xef44 <__cmpsf2>
    e964:	88 23       	and	r24, r24
    e966:	94 f4       	brge	.+36     	; 0xe98c <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    e968:	20 e0       	ldi	r18, 0x00	; 0
    e96a:	34 e2       	ldi	r19, 0x24	; 36
    e96c:	44 e7       	ldi	r20, 0x74	; 116
    e96e:	59 e4       	ldi	r21, 0x49	; 73
    e970:	6a 81       	ldd	r22, Y+2	; 0x02
    e972:	7b 81       	ldd	r23, Y+3	; 0x03
    e974:	8c 81       	ldd	r24, Y+4	; 0x04
    e976:	9d 81       	ldd	r25, Y+5	; 0x05
    e978:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    e97c:	dc 01       	movw	r26, r24
    e97e:	cb 01       	movw	r24, r22
    e980:	8a 83       	std	Y+2, r24	; 0x02
    e982:	9b 83       	std	Y+3, r25	; 0x03
    e984:	ac 83       	std	Y+4, r26	; 0x04
    e986:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    e988:	19 82       	std	Y+1, r1	; 0x01
    e98a:	43 c0       	rjmp	.+134    	; 0xea12 <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    e98c:	20 e0       	ldi	r18, 0x00	; 0
    e98e:	30 ec       	ldi	r19, 0xC0	; 192
    e990:	4a e5       	ldi	r20, 0x5A	; 90
    e992:	55 e4       	ldi	r21, 0x45	; 69
    e994:	6a 81       	ldd	r22, Y+2	; 0x02
    e996:	7b 81       	ldd	r23, Y+3	; 0x03
    e998:	8c 81       	ldd	r24, Y+4	; 0x04
    e99a:	9d 81       	ldd	r25, Y+5	; 0x05
    e99c:	0e 94 42 79 	call	0xf284	; 0xf284 <__gesf2>
    e9a0:	18 16       	cp	r1, r24
    e9a2:	f4 f4       	brge	.+60     	; 0xe9e0 <_Z12frequencyValPcPm+0x10e>
    e9a4:	20 e0       	ldi	r18, 0x00	; 0
    e9a6:	30 e0       	ldi	r19, 0x00	; 0
    e9a8:	4a e7       	ldi	r20, 0x7A	; 122
    e9aa:	55 e4       	ldi	r21, 0x45	; 69
    e9ac:	6a 81       	ldd	r22, Y+2	; 0x02
    e9ae:	7b 81       	ldd	r23, Y+3	; 0x03
    e9b0:	8c 81       	ldd	r24, Y+4	; 0x04
    e9b2:	9d 81       	ldd	r25, Y+5	; 0x05
    e9b4:	0e 94 a2 77 	call	0xef44	; 0xef44 <__cmpsf2>
    e9b8:	88 23       	and	r24, r24
    e9ba:	94 f4       	brge	.+36     	; 0xe9e0 <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    e9bc:	20 e0       	ldi	r18, 0x00	; 0
    e9be:	30 e0       	ldi	r19, 0x00	; 0
    e9c0:	4a e7       	ldi	r20, 0x7A	; 122
    e9c2:	54 e4       	ldi	r21, 0x44	; 68
    e9c4:	6a 81       	ldd	r22, Y+2	; 0x02
    e9c6:	7b 81       	ldd	r23, Y+3	; 0x03
    e9c8:	8c 81       	ldd	r24, Y+4	; 0x04
    e9ca:	9d 81       	ldd	r25, Y+5	; 0x05
    e9cc:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    e9d0:	dc 01       	movw	r26, r24
    e9d2:	cb 01       	movw	r24, r22
    e9d4:	8a 83       	std	Y+2, r24	; 0x02
    e9d6:	9b 83       	std	Y+3, r25	; 0x03
    e9d8:	ac 83       	std	Y+4, r26	; 0x04
    e9da:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    e9dc:	19 82       	std	Y+1, r1	; 0x01
    e9de:	19 c0       	rjmp	.+50     	; 0xea12 <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    e9e0:	20 e8       	ldi	r18, 0x80	; 128
    e9e2:	3f e9       	ldi	r19, 0x9F	; 159
    e9e4:	45 e5       	ldi	r20, 0x55	; 85
    e9e6:	5a e4       	ldi	r21, 0x4A	; 74
    e9e8:	6a 81       	ldd	r22, Y+2	; 0x02
    e9ea:	7b 81       	ldd	r23, Y+3	; 0x03
    e9ec:	8c 81       	ldd	r24, Y+4	; 0x04
    e9ee:	9d 81       	ldd	r25, Y+5	; 0x05
    e9f0:	0e 94 42 79 	call	0xf284	; 0xf284 <__gesf2>
    e9f4:	18 16       	cp	r1, r24
    e9f6:	6c f4       	brge	.+26     	; 0xea12 <_Z12frequencyValPcPm+0x140>
    e9f8:	20 e0       	ldi	r18, 0x00	; 0
    e9fa:	34 e2       	ldi	r19, 0x24	; 36
    e9fc:	44 e7       	ldi	r20, 0x74	; 116
    e9fe:	5a e4       	ldi	r21, 0x4A	; 74
    ea00:	6a 81       	ldd	r22, Y+2	; 0x02
    ea02:	7b 81       	ldd	r23, Y+3	; 0x03
    ea04:	8c 81       	ldd	r24, Y+4	; 0x04
    ea06:	9d 81       	ldd	r25, Y+5	; 0x05
    ea08:	0e 94 a2 77 	call	0xef44	; 0xef44 <__cmpsf2>
    ea0c:	88 23       	and	r24, r24
    ea0e:	0c f4       	brge	.+2      	; 0xea12 <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    ea10:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    ea12:	99 81       	ldd	r25, Y+1	; 0x01
    ea14:	81 e0       	ldi	r24, 0x01	; 1
    ea16:	89 27       	eor	r24, r25
    ea18:	88 23       	and	r24, r24
    ea1a:	09 f4       	brne	.+2      	; 0xea1e <_Z12frequencyValPcPm+0x14c>
    ea1c:	14 c1       	rjmp	.+552    	; 0xec46 <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    ea1e:	8a 81       	ldd	r24, Y+2	; 0x02
    ea20:	9b 81       	ldd	r25, Y+3	; 0x03
    ea22:	ac 81       	ldd	r26, Y+4	; 0x04
    ea24:	bd 81       	ldd	r27, Y+5	; 0x05
    ea26:	bc 01       	movw	r22, r24
    ea28:	cd 01       	movw	r24, r26
    ea2a:	0e 94 8b 77 	call	0xef16	; 0xef16 <ceil>
    ea2e:	dc 01       	movw	r26, r24
    ea30:	cb 01       	movw	r24, r22
    ea32:	bc 01       	movw	r22, r24
    ea34:	cd 01       	movw	r24, r26
    ea36:	0e 94 20 78 	call	0xf040	; 0xf040 <__fixunssfsi>
    ea3a:	dc 01       	movw	r26, r24
    ea3c:	cb 01       	movw	r24, r22
    ea3e:	8e 87       	std	Y+14, r24	; 0x0e
    ea40:	9f 87       	std	Y+15, r25	; 0x0f
    ea42:	a8 8b       	std	Y+16, r26	; 0x10
    ea44:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    ea46:	8e 85       	ldd	r24, Y+14	; 0x0e
    ea48:	9f 85       	ldd	r25, Y+15	; 0x0f
    ea4a:	a8 89       	ldd	r26, Y+16	; 0x10
    ea4c:	b9 89       	ldd	r27, Y+17	; 0x11
    ea4e:	24 e6       	ldi	r18, 0x64	; 100
    ea50:	30 e0       	ldi	r19, 0x00	; 0
    ea52:	40 e0       	ldi	r20, 0x00	; 0
    ea54:	50 e0       	ldi	r21, 0x00	; 0
    ea56:	bc 01       	movw	r22, r24
    ea58:	cd 01       	movw	r24, r26
    ea5a:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    ea5e:	dc 01       	movw	r26, r24
    ea60:	cb 01       	movw	r24, r22
    ea62:	9c 01       	movw	r18, r24
    ea64:	ad 01       	movw	r20, r26
    ea66:	8e 85       	ldd	r24, Y+14	; 0x0e
    ea68:	9f 85       	ldd	r25, Y+15	; 0x0f
    ea6a:	a8 89       	ldd	r26, Y+16	; 0x10
    ea6c:	b9 89       	ldd	r27, Y+17	; 0x11
    ea6e:	82 1b       	sub	r24, r18
    ea70:	93 0b       	sbc	r25, r19
    ea72:	a4 0b       	sbc	r26, r20
    ea74:	b5 0b       	sbc	r27, r21
    ea76:	8e 87       	std	Y+14, r24	; 0x0e
    ea78:	9f 87       	std	Y+15, r25	; 0x0f
    ea7a:	a8 8b       	std	Y+16, r26	; 0x10
    ea7c:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    ea7e:	8c 89       	ldd	r24, Y+20	; 0x14
    ea80:	9d 89       	ldd	r25, Y+21	; 0x15
    ea82:	89 2b       	or	r24, r25
    ea84:	59 f0       	breq	.+22     	; 0xea9c <_Z12frequencyValPcPm+0x1ca>
    ea86:	2c 89       	ldd	r18, Y+20	; 0x14
    ea88:	3d 89       	ldd	r19, Y+21	; 0x15
    ea8a:	8e 85       	ldd	r24, Y+14	; 0x0e
    ea8c:	9f 85       	ldd	r25, Y+15	; 0x0f
    ea8e:	a8 89       	ldd	r26, Y+16	; 0x10
    ea90:	b9 89       	ldd	r27, Y+17	; 0x11
    ea92:	f9 01       	movw	r30, r18
    ea94:	80 83       	st	Z, r24
    ea96:	91 83       	std	Z+1, r25	; 0x01
    ea98:	a2 83       	std	Z+2, r26	; 0x02
    ea9a:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    ea9c:	8d 81       	ldd	r24, Y+5	; 0x05
    ea9e:	8f 93       	push	r24
    eaa0:	8c 81       	ldd	r24, Y+4	; 0x04
    eaa2:	8f 93       	push	r24
    eaa4:	8b 81       	ldd	r24, Y+3	; 0x03
    eaa6:	8f 93       	push	r24
    eaa8:	8a 81       	ldd	r24, Y+2	; 0x02
    eaaa:	8f 93       	push	r24
    eaac:	8d ef       	ldi	r24, 0xFD	; 253
    eaae:	94 e4       	ldi	r25, 0x44	; 68
    eab0:	89 2f       	mov	r24, r25
    eab2:	8f 93       	push	r24
    eab4:	8d ef       	ldi	r24, 0xFD	; 253
    eab6:	94 e4       	ldi	r25, 0x44	; 68
    eab8:	8f 93       	push	r24
    eaba:	8b 89       	ldd	r24, Y+19	; 0x13
    eabc:	8f 93       	push	r24
    eabe:	8a 89       	ldd	r24, Y+18	; 0x12
    eac0:	8f 93       	push	r24
    eac2:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    eac6:	8d b7       	in	r24, 0x3d	; 61
    eac8:	9e b7       	in	r25, 0x3e	; 62
    eaca:	08 96       	adiw	r24, 0x08	; 8
    eacc:	cd bf       	out	0x3d, r28	; 61
    eace:	de bf       	out	0x3e, r29	; 62
    ead0:	ba c0       	rjmp	.+372    	; 0xec46 <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    ead2:	8a 89       	ldd	r24, Y+18	; 0x12
    ead4:	9b 89       	ldd	r25, Y+19	; 0x13
    ead6:	0e 94 93 7b 	call	0xf726	; 0xf726 <atol>
    eada:	dc 01       	movw	r26, r24
    eadc:	cb 01       	movw	r24, r22
    eade:	8e 83       	std	Y+6, r24	; 0x06
    eae0:	9f 83       	std	Y+7, r25	; 0x07
    eae2:	a8 87       	std	Y+8, r26	; 0x08
    eae4:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    eae6:	8e 81       	ldd	r24, Y+6	; 0x06
    eae8:	9f 81       	ldd	r25, Y+7	; 0x07
    eaea:	a8 85       	ldd	r26, Y+8	; 0x08
    eaec:	b9 85       	ldd	r27, Y+9	; 0x09
    eaee:	8d 3a       	cpi	r24, 0xAD	; 173
    eaf0:	9d 40       	sbci	r25, 0x0D	; 13
    eaf2:	a1 05       	cpc	r26, r1
    eaf4:	b1 05       	cpc	r27, r1
    eaf6:	d0 f0       	brcs	.+52     	; 0xeb2c <_Z12frequencyValPcPm+0x25a>
    eaf8:	8e 81       	ldd	r24, Y+6	; 0x06
    eafa:	9f 81       	ldd	r25, Y+7	; 0x07
    eafc:	a8 85       	ldd	r26, Y+8	; 0x08
    eafe:	b9 85       	ldd	r27, Y+9	; 0x09
    eb00:	80 3a       	cpi	r24, 0xA0	; 160
    eb02:	9f 40       	sbci	r25, 0x0F	; 15
    eb04:	a1 05       	cpc	r26, r1
    eb06:	b1 05       	cpc	r27, r1
    eb08:	88 f4       	brcc	.+34     	; 0xeb2c <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    eb0a:	2e 81       	ldd	r18, Y+6	; 0x06
    eb0c:	3f 81       	ldd	r19, Y+7	; 0x07
    eb0e:	48 85       	ldd	r20, Y+8	; 0x08
    eb10:	59 85       	ldd	r21, Y+9	; 0x09
    eb12:	88 ee       	ldi	r24, 0xE8	; 232
    eb14:	93 e0       	ldi	r25, 0x03	; 3
    eb16:	dc 01       	movw	r26, r24
    eb18:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    eb1c:	dc 01       	movw	r26, r24
    eb1e:	cb 01       	movw	r24, r22
    eb20:	8e 83       	std	Y+6, r24	; 0x06
    eb22:	9f 83       	std	Y+7, r25	; 0x07
    eb24:	a8 87       	std	Y+8, r26	; 0x08
    eb26:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    eb28:	19 82       	std	Y+1, r1	; 0x01
    eb2a:	2f c0       	rjmp	.+94     	; 0xeb8a <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    eb2c:	8e 81       	ldd	r24, Y+6	; 0x06
    eb2e:	9f 81       	ldd	r25, Y+7	; 0x07
    eb30:	a8 85       	ldd	r26, Y+8	; 0x08
    eb32:	b9 85       	ldd	r27, Y+9	; 0x09
    eb34:	81 3e       	cpi	r24, 0xE1	; 225
    eb36:	97 46       	sbci	r25, 0x67	; 103
    eb38:	a5 43       	sbci	r26, 0x35	; 53
    eb3a:	b1 05       	cpc	r27, r1
    eb3c:	30 f1       	brcs	.+76     	; 0xeb8a <_Z12frequencyValPcPm+0x2b8>
    eb3e:	8e 81       	ldd	r24, Y+6	; 0x06
    eb40:	9f 81       	ldd	r25, Y+7	; 0x07
    eb42:	a8 85       	ldd	r26, Y+8	; 0x08
    eb44:	b9 85       	ldd	r27, Y+9	; 0x09
    eb46:	81 15       	cp	r24, r1
    eb48:	99 40       	sbci	r25, 0x09	; 9
    eb4a:	ad 43       	sbci	r26, 0x3D	; 61
    eb4c:	b1 05       	cpc	r27, r1
    eb4e:	e8 f4       	brcc	.+58     	; 0xeb8a <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    eb50:	8e 81       	ldd	r24, Y+6	; 0x06
    eb52:	9f 81       	ldd	r25, Y+7	; 0x07
    eb54:	a8 85       	ldd	r26, Y+8	; 0x08
    eb56:	b9 85       	ldd	r27, Y+9	; 0x09
    eb58:	24 e6       	ldi	r18, 0x64	; 100
    eb5a:	30 e0       	ldi	r19, 0x00	; 0
    eb5c:	40 e0       	ldi	r20, 0x00	; 0
    eb5e:	50 e0       	ldi	r21, 0x00	; 0
    eb60:	bc 01       	movw	r22, r24
    eb62:	cd 01       	movw	r24, r26
    eb64:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    eb68:	dc 01       	movw	r26, r24
    eb6a:	cb 01       	movw	r24, r22
    eb6c:	9c 01       	movw	r18, r24
    eb6e:	ad 01       	movw	r20, r26
    eb70:	8e 81       	ldd	r24, Y+6	; 0x06
    eb72:	9f 81       	ldd	r25, Y+7	; 0x07
    eb74:	a8 85       	ldd	r26, Y+8	; 0x08
    eb76:	b9 85       	ldd	r27, Y+9	; 0x09
    eb78:	82 1b       	sub	r24, r18
    eb7a:	93 0b       	sbc	r25, r19
    eb7c:	a4 0b       	sbc	r26, r20
    eb7e:	b5 0b       	sbc	r27, r21
    eb80:	8e 83       	std	Y+6, r24	; 0x06
    eb82:	9f 83       	std	Y+7, r25	; 0x07
    eb84:	a8 87       	std	Y+8, r26	; 0x08
    eb86:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    eb88:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    eb8a:	99 81       	ldd	r25, Y+1	; 0x01
    eb8c:	81 e0       	ldi	r24, 0x01	; 1
    eb8e:	89 27       	eor	r24, r25
    eb90:	88 23       	and	r24, r24
    eb92:	09 f4       	brne	.+2      	; 0xeb96 <_Z12frequencyValPcPm+0x2c4>
    eb94:	58 c0       	rjmp	.+176    	; 0xec46 <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    eb96:	8c 89       	ldd	r24, Y+20	; 0x14
    eb98:	9d 89       	ldd	r25, Y+21	; 0x15
    eb9a:	89 2b       	or	r24, r25
    eb9c:	59 f0       	breq	.+22     	; 0xebb4 <_Z12frequencyValPcPm+0x2e2>
    eb9e:	2c 89       	ldd	r18, Y+20	; 0x14
    eba0:	3d 89       	ldd	r19, Y+21	; 0x15
    eba2:	8e 81       	ldd	r24, Y+6	; 0x06
    eba4:	9f 81       	ldd	r25, Y+7	; 0x07
    eba6:	a8 85       	ldd	r26, Y+8	; 0x08
    eba8:	b9 85       	ldd	r27, Y+9	; 0x09
    ebaa:	f9 01       	movw	r30, r18
    ebac:	80 83       	st	Z, r24
    ebae:	91 83       	std	Z+1, r25	; 0x01
    ebb0:	a2 83       	std	Z+2, r26	; 0x02
    ebb2:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    ebb4:	8e 81       	ldd	r24, Y+6	; 0x06
    ebb6:	9f 81       	ldd	r25, Y+7	; 0x07
    ebb8:	a8 85       	ldd	r26, Y+8	; 0x08
    ebba:	b9 85       	ldd	r27, Y+9	; 0x09
    ebbc:	28 ee       	ldi	r18, 0xE8	; 232
    ebbe:	33 e0       	ldi	r19, 0x03	; 3
    ebc0:	40 e0       	ldi	r20, 0x00	; 0
    ebc2:	50 e0       	ldi	r21, 0x00	; 0
    ebc4:	bc 01       	movw	r22, r24
    ebc6:	cd 01       	movw	r24, r26
    ebc8:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    ebcc:	dc 01       	movw	r26, r24
    ebce:	cb 01       	movw	r24, r22
    ebd0:	24 e6       	ldi	r18, 0x64	; 100
    ebd2:	30 e0       	ldi	r19, 0x00	; 0
    ebd4:	40 e0       	ldi	r20, 0x00	; 0
    ebd6:	50 e0       	ldi	r21, 0x00	; 0
    ebd8:	bc 01       	movw	r22, r24
    ebda:	cd 01       	movw	r24, r26
    ebdc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    ebe0:	da 01       	movw	r26, r20
    ebe2:	c9 01       	movw	r24, r18
    ebe4:	7c 01       	movw	r14, r24
    ebe6:	8d 01       	movw	r16, r26
    ebe8:	8e 81       	ldd	r24, Y+6	; 0x06
    ebea:	9f 81       	ldd	r25, Y+7	; 0x07
    ebec:	a8 85       	ldd	r26, Y+8	; 0x08
    ebee:	b9 85       	ldd	r27, Y+9	; 0x09
    ebf0:	28 ee       	ldi	r18, 0xE8	; 232
    ebf2:	33 e0       	ldi	r19, 0x03	; 3
    ebf4:	40 e0       	ldi	r20, 0x00	; 0
    ebf6:	50 e0       	ldi	r21, 0x00	; 0
    ebf8:	bc 01       	movw	r22, r24
    ebfa:	cd 01       	movw	r24, r26
    ebfc:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    ec00:	da 01       	movw	r26, r20
    ec02:	c9 01       	movw	r24, r18
    ec04:	21 2f       	mov	r18, r17
    ec06:	2f 93       	push	r18
    ec08:	20 2f       	mov	r18, r16
    ec0a:	2f 93       	push	r18
    ec0c:	2f 2d       	mov	r18, r15
    ec0e:	2f 93       	push	r18
    ec10:	2e 2d       	mov	r18, r14
    ec12:	2f 93       	push	r18
    ec14:	2b 2f       	mov	r18, r27
    ec16:	2f 93       	push	r18
    ec18:	2a 2f       	mov	r18, r26
    ec1a:	2f 93       	push	r18
    ec1c:	29 2f       	mov	r18, r25
    ec1e:	2f 93       	push	r18
    ec20:	8f 93       	push	r24
    ec22:	80 ef       	ldi	r24, 0xF0	; 240
    ec24:	94 e4       	ldi	r25, 0x44	; 68
    ec26:	89 2f       	mov	r24, r25
    ec28:	8f 93       	push	r24
    ec2a:	80 ef       	ldi	r24, 0xF0	; 240
    ec2c:	94 e4       	ldi	r25, 0x44	; 68
    ec2e:	8f 93       	push	r24
    ec30:	8b 89       	ldd	r24, Y+19	; 0x13
    ec32:	8f 93       	push	r24
    ec34:	8a 89       	ldd	r24, Y+18	; 0x12
    ec36:	8f 93       	push	r24
    ec38:	0e 94 24 7c 	call	0xf848	; 0xf848 <sprintf>
    ec3c:	8d b7       	in	r24, 0x3d	; 61
    ec3e:	9e b7       	in	r25, 0x3e	; 62
    ec40:	0c 96       	adiw	r24, 0x0c	; 12
    ec42:	cd bf       	out	0x3d, r28	; 61
    ec44:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    ec46:	89 81       	ldd	r24, Y+1	; 0x01
}
    ec48:	65 96       	adiw	r28, 0x15	; 21
    ec4a:	cd bf       	out	0x3d, r28	; 61
    ec4c:	de bf       	out	0x3e, r29	; 62
    ec4e:	df 91       	pop	r29
    ec50:	cf 91       	pop	r28
    ec52:	1f 91       	pop	r17
    ec54:	0f 91       	pop	r16
    ec56:	ff 90       	pop	r15
    ec58:	ef 90       	pop	r14
    ec5a:	08 95       	ret

0000ec5c <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    ec5c:	cf 93       	push	r28
    ec5e:	df 93       	push	r29
    ec60:	00 d0       	rcall	.+0      	; 0xec62 <_Z8fox2TextPc5Fox_t+0x6>
    ec62:	00 d0       	rcall	.+0      	; 0xec64 <_Z8fox2TextPc5Fox_t+0x8>
    ec64:	cd b7       	in	r28, 0x3d	; 61
    ec66:	de b7       	in	r29, 0x3e	; 62
    ec68:	8a 83       	std	Y+2, r24	; 0x02
    ec6a:	9b 83       	std	Y+3, r25	; 0x03
    ec6c:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    ec6e:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    ec70:	8c 81       	ldd	r24, Y+4	; 0x04
    ec72:	88 2f       	mov	r24, r24
    ec74:	90 e0       	ldi	r25, 0x00	; 0
    ec76:	09 2e       	mov	r0, r25
    ec78:	00 0c       	add	r0, r0
    ec7a:	aa 0b       	sbc	r26, r26
    ec7c:	bb 0b       	sbc	r27, r27
    ec7e:	40 e0       	ldi	r20, 0x00	; 0
    ec80:	50 e0       	ldi	r21, 0x00	; 0
    ec82:	21 e1       	ldi	r18, 0x11	; 17
    ec84:	30 e0       	ldi	r19, 0x00	; 0
    ec86:	84 1b       	sub	r24, r20
    ec88:	95 0b       	sbc	r25, r21
    ec8a:	28 17       	cp	r18, r24
    ec8c:	39 07       	cpc	r19, r25
    ec8e:	08 f4       	brcc	.+2      	; 0xec92 <_Z8fox2TextPc5Fox_t+0x36>
    ec90:	cb c0       	rjmp	.+406    	; 0xee28 <_Z8fox2TextPc5Fox_t+0x1cc>
    ec92:	8f 5b       	subi	r24, 0xBF	; 191
    ec94:	9e 4f       	sbci	r25, 0xFE	; 254
    ec96:	fc 01       	movw	r30, r24
    ec98:	0c 94 2d 7a 	jmp	0xf45a	; 0xf45a <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    ec9c:	8a 81       	ldd	r24, Y+2	; 0x02
    ec9e:	9b 81       	ldd	r25, Y+3	; 0x03
    eca0:	2c e0       	ldi	r18, 0x0C	; 12
    eca2:	e7 e0       	ldi	r30, 0x07	; 7
    eca4:	f5 e4       	ldi	r31, 0x45	; 69
    eca6:	dc 01       	movw	r26, r24
    eca8:	01 90       	ld	r0, Z+
    ecaa:	0d 92       	st	X+, r0
    ecac:	2a 95       	dec	r18
    ecae:	e1 f7       	brne	.-8      	; 0xeca8 <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    ecb0:	be c0       	rjmp	.+380    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    ecb2:	8a 81       	ldd	r24, Y+2	; 0x02
    ecb4:	9b 81       	ldd	r25, Y+3	; 0x03
    ecb6:	24 e1       	ldi	r18, 0x14	; 20
    ecb8:	e3 e1       	ldi	r30, 0x13	; 19
    ecba:	f5 e4       	ldi	r31, 0x45	; 69
    ecbc:	dc 01       	movw	r26, r24
    ecbe:	01 90       	ld	r0, Z+
    ecc0:	0d 92       	st	X+, r0
    ecc2:	2a 95       	dec	r18
    ecc4:	e1 f7       	brne	.-8      	; 0xecbe <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    ecc6:	b3 c0       	rjmp	.+358    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    ecc8:	8a 81       	ldd	r24, Y+2	; 0x02
    ecca:	9b 81       	ldd	r25, Y+3	; 0x03
    eccc:	24 e1       	ldi	r18, 0x14	; 20
    ecce:	e7 e2       	ldi	r30, 0x27	; 39
    ecd0:	f5 e4       	ldi	r31, 0x45	; 69
    ecd2:	dc 01       	movw	r26, r24
    ecd4:	01 90       	ld	r0, Z+
    ecd6:	0d 92       	st	X+, r0
    ecd8:	2a 95       	dec	r18
    ecda:	e1 f7       	brne	.-8      	; 0xecd4 <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    ecdc:	a8 c0       	rjmp	.+336    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    ecde:	8a 81       	ldd	r24, Y+2	; 0x02
    ece0:	9b 81       	ldd	r25, Y+3	; 0x03
    ece2:	24 e1       	ldi	r18, 0x14	; 20
    ece4:	eb e3       	ldi	r30, 0x3B	; 59
    ece6:	f5 e4       	ldi	r31, 0x45	; 69
    ece8:	dc 01       	movw	r26, r24
    ecea:	01 90       	ld	r0, Z+
    ecec:	0d 92       	st	X+, r0
    ecee:	2a 95       	dec	r18
    ecf0:	e1 f7       	brne	.-8      	; 0xecea <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    ecf2:	9d c0       	rjmp	.+314    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    ecf4:	8a 81       	ldd	r24, Y+2	; 0x02
    ecf6:	9b 81       	ldd	r25, Y+3	; 0x03
    ecf8:	24 e1       	ldi	r18, 0x14	; 20
    ecfa:	ef e4       	ldi	r30, 0x4F	; 79
    ecfc:	f5 e4       	ldi	r31, 0x45	; 69
    ecfe:	dc 01       	movw	r26, r24
    ed00:	01 90       	ld	r0, Z+
    ed02:	0d 92       	st	X+, r0
    ed04:	2a 95       	dec	r18
    ed06:	e1 f7       	brne	.-8      	; 0xed00 <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    ed08:	92 c0       	rjmp	.+292    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    ed0a:	8a 81       	ldd	r24, Y+2	; 0x02
    ed0c:	9b 81       	ldd	r25, Y+3	; 0x03
    ed0e:	24 e1       	ldi	r18, 0x14	; 20
    ed10:	e3 e6       	ldi	r30, 0x63	; 99
    ed12:	f5 e4       	ldi	r31, 0x45	; 69
    ed14:	dc 01       	movw	r26, r24
    ed16:	01 90       	ld	r0, Z+
    ed18:	0d 92       	st	X+, r0
    ed1a:	2a 95       	dec	r18
    ed1c:	e1 f7       	brne	.-8      	; 0xed16 <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    ed1e:	87 c0       	rjmp	.+270    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    ed20:	8a 81       	ldd	r24, Y+2	; 0x02
    ed22:	9b 81       	ldd	r25, Y+3	; 0x03
    ed24:	29 e0       	ldi	r18, 0x09	; 9
    ed26:	e7 e7       	ldi	r30, 0x77	; 119
    ed28:	f5 e4       	ldi	r31, 0x45	; 69
    ed2a:	dc 01       	movw	r26, r24
    ed2c:	01 90       	ld	r0, Z+
    ed2e:	0d 92       	st	X+, r0
    ed30:	2a 95       	dec	r18
    ed32:	e1 f7       	brne	.-8      	; 0xed2c <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    ed34:	7c c0       	rjmp	.+248    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    ed36:	8a 81       	ldd	r24, Y+2	; 0x02
    ed38:	9b 81       	ldd	r25, Y+3	; 0x03
    ed3a:	2e e0       	ldi	r18, 0x0E	; 14
    ed3c:	e0 e8       	ldi	r30, 0x80	; 128
    ed3e:	f5 e4       	ldi	r31, 0x45	; 69
    ed40:	dc 01       	movw	r26, r24
    ed42:	01 90       	ld	r0, Z+
    ed44:	0d 92       	st	X+, r0
    ed46:	2a 95       	dec	r18
    ed48:	e1 f7       	brne	.-8      	; 0xed42 <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    ed4a:	71 c0       	rjmp	.+226    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    ed4c:	8a 81       	ldd	r24, Y+2	; 0x02
    ed4e:	9b 81       	ldd	r25, Y+3	; 0x03
    ed50:	23 e1       	ldi	r18, 0x13	; 19
    ed52:	ee e8       	ldi	r30, 0x8E	; 142
    ed54:	f5 e4       	ldi	r31, 0x45	; 69
    ed56:	dc 01       	movw	r26, r24
    ed58:	01 90       	ld	r0, Z+
    ed5a:	0d 92       	st	X+, r0
    ed5c:	2a 95       	dec	r18
    ed5e:	e1 f7       	brne	.-8      	; 0xed58 <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    ed60:	66 c0       	rjmp	.+204    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    ed62:	8a 81       	ldd	r24, Y+2	; 0x02
    ed64:	9b 81       	ldd	r25, Y+3	; 0x03
    ed66:	23 e1       	ldi	r18, 0x13	; 19
    ed68:	e1 ea       	ldi	r30, 0xA1	; 161
    ed6a:	f5 e4       	ldi	r31, 0x45	; 69
    ed6c:	dc 01       	movw	r26, r24
    ed6e:	01 90       	ld	r0, Z+
    ed70:	0d 92       	st	X+, r0
    ed72:	2a 95       	dec	r18
    ed74:	e1 f7       	brne	.-8      	; 0xed6e <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    ed76:	5b c0       	rjmp	.+182    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    ed78:	8a 81       	ldd	r24, Y+2	; 0x02
    ed7a:	9b 81       	ldd	r25, Y+3	; 0x03
    ed7c:	23 e1       	ldi	r18, 0x13	; 19
    ed7e:	e4 eb       	ldi	r30, 0xB4	; 180
    ed80:	f5 e4       	ldi	r31, 0x45	; 69
    ed82:	dc 01       	movw	r26, r24
    ed84:	01 90       	ld	r0, Z+
    ed86:	0d 92       	st	X+, r0
    ed88:	2a 95       	dec	r18
    ed8a:	e1 f7       	brne	.-8      	; 0xed84 <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    ed8c:	50 c0       	rjmp	.+160    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    ed8e:	8a 81       	ldd	r24, Y+2	; 0x02
    ed90:	9b 81       	ldd	r25, Y+3	; 0x03
    ed92:	23 e1       	ldi	r18, 0x13	; 19
    ed94:	e7 ec       	ldi	r30, 0xC7	; 199
    ed96:	f5 e4       	ldi	r31, 0x45	; 69
    ed98:	dc 01       	movw	r26, r24
    ed9a:	01 90       	ld	r0, Z+
    ed9c:	0d 92       	st	X+, r0
    ed9e:	2a 95       	dec	r18
    eda0:	e1 f7       	brne	.-8      	; 0xed9a <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    eda2:	45 c0       	rjmp	.+138    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    eda4:	8a 81       	ldd	r24, Y+2	; 0x02
    eda6:	9b 81       	ldd	r25, Y+3	; 0x03
    eda8:	23 e1       	ldi	r18, 0x13	; 19
    edaa:	ea ed       	ldi	r30, 0xDA	; 218
    edac:	f5 e4       	ldi	r31, 0x45	; 69
    edae:	dc 01       	movw	r26, r24
    edb0:	01 90       	ld	r0, Z+
    edb2:	0d 92       	st	X+, r0
    edb4:	2a 95       	dec	r18
    edb6:	e1 f7       	brne	.-8      	; 0xedb0 <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    edb8:	3a c0       	rjmp	.+116    	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    edba:	8a 81       	ldd	r24, Y+2	; 0x02
    edbc:	9b 81       	ldd	r25, Y+3	; 0x03
    edbe:	23 e1       	ldi	r18, 0x13	; 19
    edc0:	ed ee       	ldi	r30, 0xED	; 237
    edc2:	f5 e4       	ldi	r31, 0x45	; 69
    edc4:	dc 01       	movw	r26, r24
    edc6:	01 90       	ld	r0, Z+
    edc8:	0d 92       	st	X+, r0
    edca:	2a 95       	dec	r18
    edcc:	e1 f7       	brne	.-8      	; 0xedc6 <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    edce:	2f c0       	rjmp	.+94     	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    edd0:	8a 81       	ldd	r24, Y+2	; 0x02
    edd2:	9b 81       	ldd	r25, Y+3	; 0x03
    edd4:	23 e1       	ldi	r18, 0x13	; 19
    edd6:	e0 e0       	ldi	r30, 0x00	; 0
    edd8:	f6 e4       	ldi	r31, 0x46	; 70
    edda:	dc 01       	movw	r26, r24
    eddc:	01 90       	ld	r0, Z+
    edde:	0d 92       	st	X+, r0
    ede0:	2a 95       	dec	r18
    ede2:	e1 f7       	brne	.-8      	; 0xeddc <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    ede4:	24 c0       	rjmp	.+72     	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    ede6:	8a 81       	ldd	r24, Y+2	; 0x02
    ede8:	9b 81       	ldd	r25, Y+3	; 0x03
    edea:	23 e1       	ldi	r18, 0x13	; 19
    edec:	e3 e1       	ldi	r30, 0x13	; 19
    edee:	f6 e4       	ldi	r31, 0x46	; 70
    edf0:	dc 01       	movw	r26, r24
    edf2:	01 90       	ld	r0, Z+
    edf4:	0d 92       	st	X+, r0
    edf6:	2a 95       	dec	r18
    edf8:	e1 f7       	brne	.-8      	; 0xedf2 <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    edfa:	19 c0       	rjmp	.+50     	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    edfc:	8a 81       	ldd	r24, Y+2	; 0x02
    edfe:	9b 81       	ldd	r25, Y+3	; 0x03
    ee00:	23 e1       	ldi	r18, 0x13	; 19
    ee02:	e6 e2       	ldi	r30, 0x26	; 38
    ee04:	f6 e4       	ldi	r31, 0x46	; 70
    ee06:	dc 01       	movw	r26, r24
    ee08:	01 90       	ld	r0, Z+
    ee0a:	0d 92       	st	X+, r0
    ee0c:	2a 95       	dec	r18
    ee0e:	e1 f7       	brne	.-8      	; 0xee08 <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    ee10:	0e c0       	rjmp	.+28     	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    ee12:	8a 81       	ldd	r24, Y+2	; 0x02
    ee14:	9b 81       	ldd	r25, Y+3	; 0x03
    ee16:	23 e1       	ldi	r18, 0x13	; 19
    ee18:	e9 e3       	ldi	r30, 0x39	; 57
    ee1a:	f6 e4       	ldi	r31, 0x46	; 70
    ee1c:	dc 01       	movw	r26, r24
    ee1e:	01 90       	ld	r0, Z+
    ee20:	0d 92       	st	X+, r0
    ee22:	2a 95       	dec	r18
    ee24:	e1 f7       	brne	.-8      	; 0xee1e <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    ee26:	03 c0       	rjmp	.+6      	; 0xee2e <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    ee28:	81 e0       	ldi	r24, 0x01	; 1
    ee2a:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    ee2c:	00 00       	nop
	}
	
	return(failure);
    ee2e:	89 81       	ldd	r24, Y+1	; 0x01
    ee30:	24 96       	adiw	r28, 0x04	; 4
    ee32:	cd bf       	out	0x3d, r28	; 61
    ee34:	de bf       	out	0x3e, r29	; 62
    ee36:	df 91       	pop	r29
    ee38:	cf 91       	pop	r28
    ee3a:	08 95       	ret

0000ee3c <__subsf3>:
    ee3c:	50 58       	subi	r21, 0x80	; 128

0000ee3e <__addsf3>:
    ee3e:	bb 27       	eor	r27, r27
    ee40:	aa 27       	eor	r26, r26
    ee42:	0e 94 36 77 	call	0xee6c	; 0xee6c <__addsf3x>
    ee46:	0c 94 f0 78 	jmp	0xf1e0	; 0xf1e0 <__fp_round>
    ee4a:	0e 94 e2 78 	call	0xf1c4	; 0xf1c4 <__fp_pscA>
    ee4e:	38 f0       	brcs	.+14     	; 0xee5e <__addsf3+0x20>
    ee50:	0e 94 e9 78 	call	0xf1d2	; 0xf1d2 <__fp_pscB>
    ee54:	20 f0       	brcs	.+8      	; 0xee5e <__addsf3+0x20>
    ee56:	39 f4       	brne	.+14     	; 0xee66 <__addsf3+0x28>
    ee58:	9f 3f       	cpi	r25, 0xFF	; 255
    ee5a:	19 f4       	brne	.+6      	; 0xee62 <__addsf3+0x24>
    ee5c:	26 f4       	brtc	.+8      	; 0xee66 <__addsf3+0x28>
    ee5e:	0c 94 df 78 	jmp	0xf1be	; 0xf1be <__fp_nan>
    ee62:	0e f4       	brtc	.+2      	; 0xee66 <__addsf3+0x28>
    ee64:	e0 95       	com	r30
    ee66:	e7 fb       	bst	r30, 7
    ee68:	0c 94 b0 78 	jmp	0xf160	; 0xf160 <__fp_inf>

0000ee6c <__addsf3x>:
    ee6c:	e9 2f       	mov	r30, r25
    ee6e:	0e 94 01 79 	call	0xf202	; 0xf202 <__fp_split3>
    ee72:	58 f3       	brcs	.-42     	; 0xee4a <__addsf3+0xc>
    ee74:	ba 17       	cp	r27, r26
    ee76:	62 07       	cpc	r22, r18
    ee78:	73 07       	cpc	r23, r19
    ee7a:	84 07       	cpc	r24, r20
    ee7c:	95 07       	cpc	r25, r21
    ee7e:	20 f0       	brcs	.+8      	; 0xee88 <__addsf3x+0x1c>
    ee80:	79 f4       	brne	.+30     	; 0xeea0 <__addsf3x+0x34>
    ee82:	a6 f5       	brtc	.+104    	; 0xeeec <__addsf3x+0x80>
    ee84:	0c 94 3b 79 	jmp	0xf276	; 0xf276 <__fp_zero>
    ee88:	0e f4       	brtc	.+2      	; 0xee8c <__addsf3x+0x20>
    ee8a:	e0 95       	com	r30
    ee8c:	0b 2e       	mov	r0, r27
    ee8e:	ba 2f       	mov	r27, r26
    ee90:	a0 2d       	mov	r26, r0
    ee92:	0b 01       	movw	r0, r22
    ee94:	b9 01       	movw	r22, r18
    ee96:	90 01       	movw	r18, r0
    ee98:	0c 01       	movw	r0, r24
    ee9a:	ca 01       	movw	r24, r20
    ee9c:	a0 01       	movw	r20, r0
    ee9e:	11 24       	eor	r1, r1
    eea0:	ff 27       	eor	r31, r31
    eea2:	59 1b       	sub	r21, r25
    eea4:	99 f0       	breq	.+38     	; 0xeecc <__addsf3x+0x60>
    eea6:	59 3f       	cpi	r21, 0xF9	; 249
    eea8:	50 f4       	brcc	.+20     	; 0xeebe <__addsf3x+0x52>
    eeaa:	50 3e       	cpi	r21, 0xE0	; 224
    eeac:	68 f1       	brcs	.+90     	; 0xef08 <__addsf3x+0x9c>
    eeae:	1a 16       	cp	r1, r26
    eeb0:	f0 40       	sbci	r31, 0x00	; 0
    eeb2:	a2 2f       	mov	r26, r18
    eeb4:	23 2f       	mov	r18, r19
    eeb6:	34 2f       	mov	r19, r20
    eeb8:	44 27       	eor	r20, r20
    eeba:	58 5f       	subi	r21, 0xF8	; 248
    eebc:	f3 cf       	rjmp	.-26     	; 0xeea4 <__addsf3x+0x38>
    eebe:	46 95       	lsr	r20
    eec0:	37 95       	ror	r19
    eec2:	27 95       	ror	r18
    eec4:	a7 95       	ror	r26
    eec6:	f0 40       	sbci	r31, 0x00	; 0
    eec8:	53 95       	inc	r21
    eeca:	c9 f7       	brne	.-14     	; 0xeebe <__addsf3x+0x52>
    eecc:	7e f4       	brtc	.+30     	; 0xeeec <__addsf3x+0x80>
    eece:	1f 16       	cp	r1, r31
    eed0:	ba 0b       	sbc	r27, r26
    eed2:	62 0b       	sbc	r22, r18
    eed4:	73 0b       	sbc	r23, r19
    eed6:	84 0b       	sbc	r24, r20
    eed8:	ba f0       	brmi	.+46     	; 0xef08 <__addsf3x+0x9c>
    eeda:	91 50       	subi	r25, 0x01	; 1
    eedc:	a1 f0       	breq	.+40     	; 0xef06 <__addsf3x+0x9a>
    eede:	ff 0f       	add	r31, r31
    eee0:	bb 1f       	adc	r27, r27
    eee2:	66 1f       	adc	r22, r22
    eee4:	77 1f       	adc	r23, r23
    eee6:	88 1f       	adc	r24, r24
    eee8:	c2 f7       	brpl	.-16     	; 0xeeda <__addsf3x+0x6e>
    eeea:	0e c0       	rjmp	.+28     	; 0xef08 <__addsf3x+0x9c>
    eeec:	ba 0f       	add	r27, r26
    eeee:	62 1f       	adc	r22, r18
    eef0:	73 1f       	adc	r23, r19
    eef2:	84 1f       	adc	r24, r20
    eef4:	48 f4       	brcc	.+18     	; 0xef08 <__addsf3x+0x9c>
    eef6:	87 95       	ror	r24
    eef8:	77 95       	ror	r23
    eefa:	67 95       	ror	r22
    eefc:	b7 95       	ror	r27
    eefe:	f7 95       	ror	r31
    ef00:	9e 3f       	cpi	r25, 0xFE	; 254
    ef02:	08 f0       	brcs	.+2      	; 0xef06 <__addsf3x+0x9a>
    ef04:	b0 cf       	rjmp	.-160    	; 0xee66 <__addsf3+0x28>
    ef06:	93 95       	inc	r25
    ef08:	88 0f       	add	r24, r24
    ef0a:	08 f0       	brcs	.+2      	; 0xef0e <__addsf3x+0xa2>
    ef0c:	99 27       	eor	r25, r25
    ef0e:	ee 0f       	add	r30, r30
    ef10:	97 95       	ror	r25
    ef12:	87 95       	ror	r24
    ef14:	08 95       	ret

0000ef16 <ceil>:
    ef16:	0e 94 23 79 	call	0xf246	; 0xf246 <__fp_trunc>
    ef1a:	90 f0       	brcs	.+36     	; 0xef40 <ceil+0x2a>
    ef1c:	9f 37       	cpi	r25, 0x7F	; 127
    ef1e:	48 f4       	brcc	.+18     	; 0xef32 <ceil+0x1c>
    ef20:	91 11       	cpse	r25, r1
    ef22:	16 f4       	brtc	.+4      	; 0xef28 <ceil+0x12>
    ef24:	0c 94 3c 79 	jmp	0xf278	; 0xf278 <__fp_szero>
    ef28:	60 e0       	ldi	r22, 0x00	; 0
    ef2a:	70 e0       	ldi	r23, 0x00	; 0
    ef2c:	80 e8       	ldi	r24, 0x80	; 128
    ef2e:	9f e3       	ldi	r25, 0x3F	; 63
    ef30:	08 95       	ret
    ef32:	26 f0       	brts	.+8      	; 0xef3c <ceil+0x26>
    ef34:	1b 16       	cp	r1, r27
    ef36:	61 1d       	adc	r22, r1
    ef38:	71 1d       	adc	r23, r1
    ef3a:	81 1d       	adc	r24, r1
    ef3c:	0c 94 b6 78 	jmp	0xf16c	; 0xf16c <__fp_mintl>
    ef40:	0c 94 d1 78 	jmp	0xf1a2	; 0xf1a2 <__fp_mpack>

0000ef44 <__cmpsf2>:
    ef44:	0e 94 8c 78 	call	0xf118	; 0xf118 <__fp_cmp>
    ef48:	08 f4       	brcc	.+2      	; 0xef4c <__cmpsf2+0x8>
    ef4a:	81 e0       	ldi	r24, 0x01	; 1
    ef4c:	08 95       	ret

0000ef4e <__divsf3>:
    ef4e:	0e 94 bb 77 	call	0xef76	; 0xef76 <__divsf3x>
    ef52:	0c 94 f0 78 	jmp	0xf1e0	; 0xf1e0 <__fp_round>
    ef56:	0e 94 e9 78 	call	0xf1d2	; 0xf1d2 <__fp_pscB>
    ef5a:	58 f0       	brcs	.+22     	; 0xef72 <__divsf3+0x24>
    ef5c:	0e 94 e2 78 	call	0xf1c4	; 0xf1c4 <__fp_pscA>
    ef60:	40 f0       	brcs	.+16     	; 0xef72 <__divsf3+0x24>
    ef62:	29 f4       	brne	.+10     	; 0xef6e <__divsf3+0x20>
    ef64:	5f 3f       	cpi	r21, 0xFF	; 255
    ef66:	29 f0       	breq	.+10     	; 0xef72 <__divsf3+0x24>
    ef68:	0c 94 b0 78 	jmp	0xf160	; 0xf160 <__fp_inf>
    ef6c:	51 11       	cpse	r21, r1
    ef6e:	0c 94 3c 79 	jmp	0xf278	; 0xf278 <__fp_szero>
    ef72:	0c 94 df 78 	jmp	0xf1be	; 0xf1be <__fp_nan>

0000ef76 <__divsf3x>:
    ef76:	0e 94 01 79 	call	0xf202	; 0xf202 <__fp_split3>
    ef7a:	68 f3       	brcs	.-38     	; 0xef56 <__divsf3+0x8>

0000ef7c <__divsf3_pse>:
    ef7c:	99 23       	and	r25, r25
    ef7e:	b1 f3       	breq	.-20     	; 0xef6c <__divsf3+0x1e>
    ef80:	55 23       	and	r21, r21
    ef82:	91 f3       	breq	.-28     	; 0xef68 <__divsf3+0x1a>
    ef84:	95 1b       	sub	r25, r21
    ef86:	55 0b       	sbc	r21, r21
    ef88:	bb 27       	eor	r27, r27
    ef8a:	aa 27       	eor	r26, r26
    ef8c:	62 17       	cp	r22, r18
    ef8e:	73 07       	cpc	r23, r19
    ef90:	84 07       	cpc	r24, r20
    ef92:	38 f0       	brcs	.+14     	; 0xefa2 <__divsf3_pse+0x26>
    ef94:	9f 5f       	subi	r25, 0xFF	; 255
    ef96:	5f 4f       	sbci	r21, 0xFF	; 255
    ef98:	22 0f       	add	r18, r18
    ef9a:	33 1f       	adc	r19, r19
    ef9c:	44 1f       	adc	r20, r20
    ef9e:	aa 1f       	adc	r26, r26
    efa0:	a9 f3       	breq	.-22     	; 0xef8c <__divsf3_pse+0x10>
    efa2:	35 d0       	rcall	.+106    	; 0xf00e <__divsf3_pse+0x92>
    efa4:	0e 2e       	mov	r0, r30
    efa6:	3a f0       	brmi	.+14     	; 0xefb6 <__divsf3_pse+0x3a>
    efa8:	e0 e8       	ldi	r30, 0x80	; 128
    efaa:	32 d0       	rcall	.+100    	; 0xf010 <__divsf3_pse+0x94>
    efac:	91 50       	subi	r25, 0x01	; 1
    efae:	50 40       	sbci	r21, 0x00	; 0
    efb0:	e6 95       	lsr	r30
    efb2:	00 1c       	adc	r0, r0
    efb4:	ca f7       	brpl	.-14     	; 0xefa8 <__divsf3_pse+0x2c>
    efb6:	2b d0       	rcall	.+86     	; 0xf00e <__divsf3_pse+0x92>
    efb8:	fe 2f       	mov	r31, r30
    efba:	29 d0       	rcall	.+82     	; 0xf00e <__divsf3_pse+0x92>
    efbc:	66 0f       	add	r22, r22
    efbe:	77 1f       	adc	r23, r23
    efc0:	88 1f       	adc	r24, r24
    efc2:	bb 1f       	adc	r27, r27
    efc4:	26 17       	cp	r18, r22
    efc6:	37 07       	cpc	r19, r23
    efc8:	48 07       	cpc	r20, r24
    efca:	ab 07       	cpc	r26, r27
    efcc:	b0 e8       	ldi	r27, 0x80	; 128
    efce:	09 f0       	breq	.+2      	; 0xefd2 <__divsf3_pse+0x56>
    efd0:	bb 0b       	sbc	r27, r27
    efd2:	80 2d       	mov	r24, r0
    efd4:	bf 01       	movw	r22, r30
    efd6:	ff 27       	eor	r31, r31
    efd8:	93 58       	subi	r25, 0x83	; 131
    efda:	5f 4f       	sbci	r21, 0xFF	; 255
    efdc:	3a f0       	brmi	.+14     	; 0xefec <__divsf3_pse+0x70>
    efde:	9e 3f       	cpi	r25, 0xFE	; 254
    efe0:	51 05       	cpc	r21, r1
    efe2:	78 f0       	brcs	.+30     	; 0xf002 <__divsf3_pse+0x86>
    efe4:	0c 94 b0 78 	jmp	0xf160	; 0xf160 <__fp_inf>
    efe8:	0c 94 3c 79 	jmp	0xf278	; 0xf278 <__fp_szero>
    efec:	5f 3f       	cpi	r21, 0xFF	; 255
    efee:	e4 f3       	brlt	.-8      	; 0xefe8 <__divsf3_pse+0x6c>
    eff0:	98 3e       	cpi	r25, 0xE8	; 232
    eff2:	d4 f3       	brlt	.-12     	; 0xefe8 <__divsf3_pse+0x6c>
    eff4:	86 95       	lsr	r24
    eff6:	77 95       	ror	r23
    eff8:	67 95       	ror	r22
    effa:	b7 95       	ror	r27
    effc:	f7 95       	ror	r31
    effe:	9f 5f       	subi	r25, 0xFF	; 255
    f000:	c9 f7       	brne	.-14     	; 0xeff4 <__divsf3_pse+0x78>
    f002:	88 0f       	add	r24, r24
    f004:	91 1d       	adc	r25, r1
    f006:	96 95       	lsr	r25
    f008:	87 95       	ror	r24
    f00a:	97 f9       	bld	r25, 7
    f00c:	08 95       	ret
    f00e:	e1 e0       	ldi	r30, 0x01	; 1
    f010:	66 0f       	add	r22, r22
    f012:	77 1f       	adc	r23, r23
    f014:	88 1f       	adc	r24, r24
    f016:	bb 1f       	adc	r27, r27
    f018:	62 17       	cp	r22, r18
    f01a:	73 07       	cpc	r23, r19
    f01c:	84 07       	cpc	r24, r20
    f01e:	ba 07       	cpc	r27, r26
    f020:	20 f0       	brcs	.+8      	; 0xf02a <__divsf3_pse+0xae>
    f022:	62 1b       	sub	r22, r18
    f024:	73 0b       	sbc	r23, r19
    f026:	84 0b       	sbc	r24, r20
    f028:	ba 0b       	sbc	r27, r26
    f02a:	ee 1f       	adc	r30, r30
    f02c:	88 f7       	brcc	.-30     	; 0xf010 <__divsf3_pse+0x94>
    f02e:	e0 95       	com	r30
    f030:	08 95       	ret

0000f032 <__fixsfsi>:
    f032:	0e 94 20 78 	call	0xf040	; 0xf040 <__fixunssfsi>
    f036:	68 94       	set
    f038:	b1 11       	cpse	r27, r1
    f03a:	0c 94 3c 79 	jmp	0xf278	; 0xf278 <__fp_szero>
    f03e:	08 95       	ret

0000f040 <__fixunssfsi>:
    f040:	0e 94 09 79 	call	0xf212	; 0xf212 <__fp_splitA>
    f044:	88 f0       	brcs	.+34     	; 0xf068 <__fixunssfsi+0x28>
    f046:	9f 57       	subi	r25, 0x7F	; 127
    f048:	98 f0       	brcs	.+38     	; 0xf070 <__fixunssfsi+0x30>
    f04a:	b9 2f       	mov	r27, r25
    f04c:	99 27       	eor	r25, r25
    f04e:	b7 51       	subi	r27, 0x17	; 23
    f050:	b0 f0       	brcs	.+44     	; 0xf07e <__fixunssfsi+0x3e>
    f052:	e1 f0       	breq	.+56     	; 0xf08c <__fixunssfsi+0x4c>
    f054:	66 0f       	add	r22, r22
    f056:	77 1f       	adc	r23, r23
    f058:	88 1f       	adc	r24, r24
    f05a:	99 1f       	adc	r25, r25
    f05c:	1a f0       	brmi	.+6      	; 0xf064 <__fixunssfsi+0x24>
    f05e:	ba 95       	dec	r27
    f060:	c9 f7       	brne	.-14     	; 0xf054 <__fixunssfsi+0x14>
    f062:	14 c0       	rjmp	.+40     	; 0xf08c <__fixunssfsi+0x4c>
    f064:	b1 30       	cpi	r27, 0x01	; 1
    f066:	91 f0       	breq	.+36     	; 0xf08c <__fixunssfsi+0x4c>
    f068:	0e 94 3b 79 	call	0xf276	; 0xf276 <__fp_zero>
    f06c:	b1 e0       	ldi	r27, 0x01	; 1
    f06e:	08 95       	ret
    f070:	0c 94 3b 79 	jmp	0xf276	; 0xf276 <__fp_zero>
    f074:	67 2f       	mov	r22, r23
    f076:	78 2f       	mov	r23, r24
    f078:	88 27       	eor	r24, r24
    f07a:	b8 5f       	subi	r27, 0xF8	; 248
    f07c:	39 f0       	breq	.+14     	; 0xf08c <__fixunssfsi+0x4c>
    f07e:	b9 3f       	cpi	r27, 0xF9	; 249
    f080:	cc f3       	brlt	.-14     	; 0xf074 <__fixunssfsi+0x34>
    f082:	86 95       	lsr	r24
    f084:	77 95       	ror	r23
    f086:	67 95       	ror	r22
    f088:	b3 95       	inc	r27
    f08a:	d9 f7       	brne	.-10     	; 0xf082 <__fixunssfsi+0x42>
    f08c:	3e f4       	brtc	.+14     	; 0xf09c <__fixunssfsi+0x5c>
    f08e:	90 95       	com	r25
    f090:	80 95       	com	r24
    f092:	70 95       	com	r23
    f094:	61 95       	neg	r22
    f096:	7f 4f       	sbci	r23, 0xFF	; 255
    f098:	8f 4f       	sbci	r24, 0xFF	; 255
    f09a:	9f 4f       	sbci	r25, 0xFF	; 255
    f09c:	08 95       	ret

0000f09e <__floatunsisf>:
    f09e:	e8 94       	clt
    f0a0:	09 c0       	rjmp	.+18     	; 0xf0b4 <__floatsisf+0x12>

0000f0a2 <__floatsisf>:
    f0a2:	97 fb       	bst	r25, 7
    f0a4:	3e f4       	brtc	.+14     	; 0xf0b4 <__floatsisf+0x12>
    f0a6:	90 95       	com	r25
    f0a8:	80 95       	com	r24
    f0aa:	70 95       	com	r23
    f0ac:	61 95       	neg	r22
    f0ae:	7f 4f       	sbci	r23, 0xFF	; 255
    f0b0:	8f 4f       	sbci	r24, 0xFF	; 255
    f0b2:	9f 4f       	sbci	r25, 0xFF	; 255
    f0b4:	99 23       	and	r25, r25
    f0b6:	a9 f0       	breq	.+42     	; 0xf0e2 <__floatsisf+0x40>
    f0b8:	f9 2f       	mov	r31, r25
    f0ba:	96 e9       	ldi	r25, 0x96	; 150
    f0bc:	bb 27       	eor	r27, r27
    f0be:	93 95       	inc	r25
    f0c0:	f6 95       	lsr	r31
    f0c2:	87 95       	ror	r24
    f0c4:	77 95       	ror	r23
    f0c6:	67 95       	ror	r22
    f0c8:	b7 95       	ror	r27
    f0ca:	f1 11       	cpse	r31, r1
    f0cc:	f8 cf       	rjmp	.-16     	; 0xf0be <__floatsisf+0x1c>
    f0ce:	fa f4       	brpl	.+62     	; 0xf10e <__floatsisf+0x6c>
    f0d0:	bb 0f       	add	r27, r27
    f0d2:	11 f4       	brne	.+4      	; 0xf0d8 <__floatsisf+0x36>
    f0d4:	60 ff       	sbrs	r22, 0
    f0d6:	1b c0       	rjmp	.+54     	; 0xf10e <__floatsisf+0x6c>
    f0d8:	6f 5f       	subi	r22, 0xFF	; 255
    f0da:	7f 4f       	sbci	r23, 0xFF	; 255
    f0dc:	8f 4f       	sbci	r24, 0xFF	; 255
    f0de:	9f 4f       	sbci	r25, 0xFF	; 255
    f0e0:	16 c0       	rjmp	.+44     	; 0xf10e <__floatsisf+0x6c>
    f0e2:	88 23       	and	r24, r24
    f0e4:	11 f0       	breq	.+4      	; 0xf0ea <__floatsisf+0x48>
    f0e6:	96 e9       	ldi	r25, 0x96	; 150
    f0e8:	11 c0       	rjmp	.+34     	; 0xf10c <__floatsisf+0x6a>
    f0ea:	77 23       	and	r23, r23
    f0ec:	21 f0       	breq	.+8      	; 0xf0f6 <__floatsisf+0x54>
    f0ee:	9e e8       	ldi	r25, 0x8E	; 142
    f0f0:	87 2f       	mov	r24, r23
    f0f2:	76 2f       	mov	r23, r22
    f0f4:	05 c0       	rjmp	.+10     	; 0xf100 <__floatsisf+0x5e>
    f0f6:	66 23       	and	r22, r22
    f0f8:	71 f0       	breq	.+28     	; 0xf116 <__floatsisf+0x74>
    f0fa:	96 e8       	ldi	r25, 0x86	; 134
    f0fc:	86 2f       	mov	r24, r22
    f0fe:	70 e0       	ldi	r23, 0x00	; 0
    f100:	60 e0       	ldi	r22, 0x00	; 0
    f102:	2a f0       	brmi	.+10     	; 0xf10e <__floatsisf+0x6c>
    f104:	9a 95       	dec	r25
    f106:	66 0f       	add	r22, r22
    f108:	77 1f       	adc	r23, r23
    f10a:	88 1f       	adc	r24, r24
    f10c:	da f7       	brpl	.-10     	; 0xf104 <__floatsisf+0x62>
    f10e:	88 0f       	add	r24, r24
    f110:	96 95       	lsr	r25
    f112:	87 95       	ror	r24
    f114:	97 f9       	bld	r25, 7
    f116:	08 95       	ret

0000f118 <__fp_cmp>:
    f118:	99 0f       	add	r25, r25
    f11a:	00 08       	sbc	r0, r0
    f11c:	55 0f       	add	r21, r21
    f11e:	aa 0b       	sbc	r26, r26
    f120:	e0 e8       	ldi	r30, 0x80	; 128
    f122:	fe ef       	ldi	r31, 0xFE	; 254
    f124:	16 16       	cp	r1, r22
    f126:	17 06       	cpc	r1, r23
    f128:	e8 07       	cpc	r30, r24
    f12a:	f9 07       	cpc	r31, r25
    f12c:	c0 f0       	brcs	.+48     	; 0xf15e <__fp_cmp+0x46>
    f12e:	12 16       	cp	r1, r18
    f130:	13 06       	cpc	r1, r19
    f132:	e4 07       	cpc	r30, r20
    f134:	f5 07       	cpc	r31, r21
    f136:	98 f0       	brcs	.+38     	; 0xf15e <__fp_cmp+0x46>
    f138:	62 1b       	sub	r22, r18
    f13a:	73 0b       	sbc	r23, r19
    f13c:	84 0b       	sbc	r24, r20
    f13e:	95 0b       	sbc	r25, r21
    f140:	39 f4       	brne	.+14     	; 0xf150 <__fp_cmp+0x38>
    f142:	0a 26       	eor	r0, r26
    f144:	61 f0       	breq	.+24     	; 0xf15e <__fp_cmp+0x46>
    f146:	23 2b       	or	r18, r19
    f148:	24 2b       	or	r18, r20
    f14a:	25 2b       	or	r18, r21
    f14c:	21 f4       	brne	.+8      	; 0xf156 <__fp_cmp+0x3e>
    f14e:	08 95       	ret
    f150:	0a 26       	eor	r0, r26
    f152:	09 f4       	brne	.+2      	; 0xf156 <__fp_cmp+0x3e>
    f154:	a1 40       	sbci	r26, 0x01	; 1
    f156:	a6 95       	lsr	r26
    f158:	8f ef       	ldi	r24, 0xFF	; 255
    f15a:	81 1d       	adc	r24, r1
    f15c:	81 1d       	adc	r24, r1
    f15e:	08 95       	ret

0000f160 <__fp_inf>:
    f160:	97 f9       	bld	r25, 7
    f162:	9f 67       	ori	r25, 0x7F	; 127
    f164:	80 e8       	ldi	r24, 0x80	; 128
    f166:	70 e0       	ldi	r23, 0x00	; 0
    f168:	60 e0       	ldi	r22, 0x00	; 0
    f16a:	08 95       	ret

0000f16c <__fp_mintl>:
    f16c:	88 23       	and	r24, r24
    f16e:	71 f4       	brne	.+28     	; 0xf18c <__fp_mintl+0x20>
    f170:	77 23       	and	r23, r23
    f172:	21 f0       	breq	.+8      	; 0xf17c <__fp_mintl+0x10>
    f174:	98 50       	subi	r25, 0x08	; 8
    f176:	87 2b       	or	r24, r23
    f178:	76 2f       	mov	r23, r22
    f17a:	07 c0       	rjmp	.+14     	; 0xf18a <__fp_mintl+0x1e>
    f17c:	66 23       	and	r22, r22
    f17e:	11 f4       	brne	.+4      	; 0xf184 <__fp_mintl+0x18>
    f180:	99 27       	eor	r25, r25
    f182:	0d c0       	rjmp	.+26     	; 0xf19e <__fp_mintl+0x32>
    f184:	90 51       	subi	r25, 0x10	; 16
    f186:	86 2b       	or	r24, r22
    f188:	70 e0       	ldi	r23, 0x00	; 0
    f18a:	60 e0       	ldi	r22, 0x00	; 0
    f18c:	2a f0       	brmi	.+10     	; 0xf198 <__fp_mintl+0x2c>
    f18e:	9a 95       	dec	r25
    f190:	66 0f       	add	r22, r22
    f192:	77 1f       	adc	r23, r23
    f194:	88 1f       	adc	r24, r24
    f196:	da f7       	brpl	.-10     	; 0xf18e <__fp_mintl+0x22>
    f198:	88 0f       	add	r24, r24
    f19a:	96 95       	lsr	r25
    f19c:	87 95       	ror	r24
    f19e:	97 f9       	bld	r25, 7
    f1a0:	08 95       	ret

0000f1a2 <__fp_mpack>:
    f1a2:	9f 3f       	cpi	r25, 0xFF	; 255
    f1a4:	31 f0       	breq	.+12     	; 0xf1b2 <__fp_mpack_finite+0xc>

0000f1a6 <__fp_mpack_finite>:
    f1a6:	91 50       	subi	r25, 0x01	; 1
    f1a8:	20 f4       	brcc	.+8      	; 0xf1b2 <__fp_mpack_finite+0xc>
    f1aa:	87 95       	ror	r24
    f1ac:	77 95       	ror	r23
    f1ae:	67 95       	ror	r22
    f1b0:	b7 95       	ror	r27
    f1b2:	88 0f       	add	r24, r24
    f1b4:	91 1d       	adc	r25, r1
    f1b6:	96 95       	lsr	r25
    f1b8:	87 95       	ror	r24
    f1ba:	97 f9       	bld	r25, 7
    f1bc:	08 95       	ret

0000f1be <__fp_nan>:
    f1be:	9f ef       	ldi	r25, 0xFF	; 255
    f1c0:	80 ec       	ldi	r24, 0xC0	; 192
    f1c2:	08 95       	ret

0000f1c4 <__fp_pscA>:
    f1c4:	00 24       	eor	r0, r0
    f1c6:	0a 94       	dec	r0
    f1c8:	16 16       	cp	r1, r22
    f1ca:	17 06       	cpc	r1, r23
    f1cc:	18 06       	cpc	r1, r24
    f1ce:	09 06       	cpc	r0, r25
    f1d0:	08 95       	ret

0000f1d2 <__fp_pscB>:
    f1d2:	00 24       	eor	r0, r0
    f1d4:	0a 94       	dec	r0
    f1d6:	12 16       	cp	r1, r18
    f1d8:	13 06       	cpc	r1, r19
    f1da:	14 06       	cpc	r1, r20
    f1dc:	05 06       	cpc	r0, r21
    f1de:	08 95       	ret

0000f1e0 <__fp_round>:
    f1e0:	09 2e       	mov	r0, r25
    f1e2:	03 94       	inc	r0
    f1e4:	00 0c       	add	r0, r0
    f1e6:	11 f4       	brne	.+4      	; 0xf1ec <__fp_round+0xc>
    f1e8:	88 23       	and	r24, r24
    f1ea:	52 f0       	brmi	.+20     	; 0xf200 <__fp_round+0x20>
    f1ec:	bb 0f       	add	r27, r27
    f1ee:	40 f4       	brcc	.+16     	; 0xf200 <__fp_round+0x20>
    f1f0:	bf 2b       	or	r27, r31
    f1f2:	11 f4       	brne	.+4      	; 0xf1f8 <__fp_round+0x18>
    f1f4:	60 ff       	sbrs	r22, 0
    f1f6:	04 c0       	rjmp	.+8      	; 0xf200 <__fp_round+0x20>
    f1f8:	6f 5f       	subi	r22, 0xFF	; 255
    f1fa:	7f 4f       	sbci	r23, 0xFF	; 255
    f1fc:	8f 4f       	sbci	r24, 0xFF	; 255
    f1fe:	9f 4f       	sbci	r25, 0xFF	; 255
    f200:	08 95       	ret

0000f202 <__fp_split3>:
    f202:	57 fd       	sbrc	r21, 7
    f204:	90 58       	subi	r25, 0x80	; 128
    f206:	44 0f       	add	r20, r20
    f208:	55 1f       	adc	r21, r21
    f20a:	59 f0       	breq	.+22     	; 0xf222 <__fp_splitA+0x10>
    f20c:	5f 3f       	cpi	r21, 0xFF	; 255
    f20e:	71 f0       	breq	.+28     	; 0xf22c <__fp_splitA+0x1a>
    f210:	47 95       	ror	r20

0000f212 <__fp_splitA>:
    f212:	88 0f       	add	r24, r24
    f214:	97 fb       	bst	r25, 7
    f216:	99 1f       	adc	r25, r25
    f218:	61 f0       	breq	.+24     	; 0xf232 <__fp_splitA+0x20>
    f21a:	9f 3f       	cpi	r25, 0xFF	; 255
    f21c:	79 f0       	breq	.+30     	; 0xf23c <__fp_splitA+0x2a>
    f21e:	87 95       	ror	r24
    f220:	08 95       	ret
    f222:	12 16       	cp	r1, r18
    f224:	13 06       	cpc	r1, r19
    f226:	14 06       	cpc	r1, r20
    f228:	55 1f       	adc	r21, r21
    f22a:	f2 cf       	rjmp	.-28     	; 0xf210 <__fp_split3+0xe>
    f22c:	46 95       	lsr	r20
    f22e:	f1 df       	rcall	.-30     	; 0xf212 <__fp_splitA>
    f230:	08 c0       	rjmp	.+16     	; 0xf242 <__fp_splitA+0x30>
    f232:	16 16       	cp	r1, r22
    f234:	17 06       	cpc	r1, r23
    f236:	18 06       	cpc	r1, r24
    f238:	99 1f       	adc	r25, r25
    f23a:	f1 cf       	rjmp	.-30     	; 0xf21e <__fp_splitA+0xc>
    f23c:	86 95       	lsr	r24
    f23e:	71 05       	cpc	r23, r1
    f240:	61 05       	cpc	r22, r1
    f242:	08 94       	sec
    f244:	08 95       	ret

0000f246 <__fp_trunc>:
    f246:	0e 94 09 79 	call	0xf212	; 0xf212 <__fp_splitA>
    f24a:	a0 f0       	brcs	.+40     	; 0xf274 <__fp_trunc+0x2e>
    f24c:	be e7       	ldi	r27, 0x7E	; 126
    f24e:	b9 17       	cp	r27, r25
    f250:	88 f4       	brcc	.+34     	; 0xf274 <__fp_trunc+0x2e>
    f252:	bb 27       	eor	r27, r27
    f254:	9f 38       	cpi	r25, 0x8F	; 143
    f256:	60 f4       	brcc	.+24     	; 0xf270 <__fp_trunc+0x2a>
    f258:	16 16       	cp	r1, r22
    f25a:	b1 1d       	adc	r27, r1
    f25c:	67 2f       	mov	r22, r23
    f25e:	78 2f       	mov	r23, r24
    f260:	88 27       	eor	r24, r24
    f262:	98 5f       	subi	r25, 0xF8	; 248
    f264:	f7 cf       	rjmp	.-18     	; 0xf254 <__fp_trunc+0xe>
    f266:	86 95       	lsr	r24
    f268:	77 95       	ror	r23
    f26a:	67 95       	ror	r22
    f26c:	b1 1d       	adc	r27, r1
    f26e:	93 95       	inc	r25
    f270:	96 39       	cpi	r25, 0x96	; 150
    f272:	c8 f3       	brcs	.-14     	; 0xf266 <__fp_trunc+0x20>
    f274:	08 95       	ret

0000f276 <__fp_zero>:
    f276:	e8 94       	clt

0000f278 <__fp_szero>:
    f278:	bb 27       	eor	r27, r27
    f27a:	66 27       	eor	r22, r22
    f27c:	77 27       	eor	r23, r23
    f27e:	cb 01       	movw	r24, r22
    f280:	97 f9       	bld	r25, 7
    f282:	08 95       	ret

0000f284 <__gesf2>:
    f284:	0e 94 8c 78 	call	0xf118	; 0xf118 <__fp_cmp>
    f288:	08 f4       	brcc	.+2      	; 0xf28c <__gesf2+0x8>
    f28a:	8f ef       	ldi	r24, 0xFF	; 255
    f28c:	08 95       	ret

0000f28e <__mulsf3>:
    f28e:	0e 94 5a 79 	call	0xf2b4	; 0xf2b4 <__mulsf3x>
    f292:	0c 94 f0 78 	jmp	0xf1e0	; 0xf1e0 <__fp_round>
    f296:	0e 94 e2 78 	call	0xf1c4	; 0xf1c4 <__fp_pscA>
    f29a:	38 f0       	brcs	.+14     	; 0xf2aa <__mulsf3+0x1c>
    f29c:	0e 94 e9 78 	call	0xf1d2	; 0xf1d2 <__fp_pscB>
    f2a0:	20 f0       	brcs	.+8      	; 0xf2aa <__mulsf3+0x1c>
    f2a2:	95 23       	and	r25, r21
    f2a4:	11 f0       	breq	.+4      	; 0xf2aa <__mulsf3+0x1c>
    f2a6:	0c 94 b0 78 	jmp	0xf160	; 0xf160 <__fp_inf>
    f2aa:	0c 94 df 78 	jmp	0xf1be	; 0xf1be <__fp_nan>
    f2ae:	11 24       	eor	r1, r1
    f2b0:	0c 94 3c 79 	jmp	0xf278	; 0xf278 <__fp_szero>

0000f2b4 <__mulsf3x>:
    f2b4:	0e 94 01 79 	call	0xf202	; 0xf202 <__fp_split3>
    f2b8:	70 f3       	brcs	.-36     	; 0xf296 <__mulsf3+0x8>

0000f2ba <__mulsf3_pse>:
    f2ba:	95 9f       	mul	r25, r21
    f2bc:	c1 f3       	breq	.-16     	; 0xf2ae <__mulsf3+0x20>
    f2be:	95 0f       	add	r25, r21
    f2c0:	50 e0       	ldi	r21, 0x00	; 0
    f2c2:	55 1f       	adc	r21, r21
    f2c4:	62 9f       	mul	r22, r18
    f2c6:	f0 01       	movw	r30, r0
    f2c8:	72 9f       	mul	r23, r18
    f2ca:	bb 27       	eor	r27, r27
    f2cc:	f0 0d       	add	r31, r0
    f2ce:	b1 1d       	adc	r27, r1
    f2d0:	63 9f       	mul	r22, r19
    f2d2:	aa 27       	eor	r26, r26
    f2d4:	f0 0d       	add	r31, r0
    f2d6:	b1 1d       	adc	r27, r1
    f2d8:	aa 1f       	adc	r26, r26
    f2da:	64 9f       	mul	r22, r20
    f2dc:	66 27       	eor	r22, r22
    f2de:	b0 0d       	add	r27, r0
    f2e0:	a1 1d       	adc	r26, r1
    f2e2:	66 1f       	adc	r22, r22
    f2e4:	82 9f       	mul	r24, r18
    f2e6:	22 27       	eor	r18, r18
    f2e8:	b0 0d       	add	r27, r0
    f2ea:	a1 1d       	adc	r26, r1
    f2ec:	62 1f       	adc	r22, r18
    f2ee:	73 9f       	mul	r23, r19
    f2f0:	b0 0d       	add	r27, r0
    f2f2:	a1 1d       	adc	r26, r1
    f2f4:	62 1f       	adc	r22, r18
    f2f6:	83 9f       	mul	r24, r19
    f2f8:	a0 0d       	add	r26, r0
    f2fa:	61 1d       	adc	r22, r1
    f2fc:	22 1f       	adc	r18, r18
    f2fe:	74 9f       	mul	r23, r20
    f300:	33 27       	eor	r19, r19
    f302:	a0 0d       	add	r26, r0
    f304:	61 1d       	adc	r22, r1
    f306:	23 1f       	adc	r18, r19
    f308:	84 9f       	mul	r24, r20
    f30a:	60 0d       	add	r22, r0
    f30c:	21 1d       	adc	r18, r1
    f30e:	82 2f       	mov	r24, r18
    f310:	76 2f       	mov	r23, r22
    f312:	6a 2f       	mov	r22, r26
    f314:	11 24       	eor	r1, r1
    f316:	9f 57       	subi	r25, 0x7F	; 127
    f318:	50 40       	sbci	r21, 0x00	; 0
    f31a:	9a f0       	brmi	.+38     	; 0xf342 <__mulsf3_pse+0x88>
    f31c:	f1 f0       	breq	.+60     	; 0xf35a <__mulsf3_pse+0xa0>
    f31e:	88 23       	and	r24, r24
    f320:	4a f0       	brmi	.+18     	; 0xf334 <__mulsf3_pse+0x7a>
    f322:	ee 0f       	add	r30, r30
    f324:	ff 1f       	adc	r31, r31
    f326:	bb 1f       	adc	r27, r27
    f328:	66 1f       	adc	r22, r22
    f32a:	77 1f       	adc	r23, r23
    f32c:	88 1f       	adc	r24, r24
    f32e:	91 50       	subi	r25, 0x01	; 1
    f330:	50 40       	sbci	r21, 0x00	; 0
    f332:	a9 f7       	brne	.-22     	; 0xf31e <__mulsf3_pse+0x64>
    f334:	9e 3f       	cpi	r25, 0xFE	; 254
    f336:	51 05       	cpc	r21, r1
    f338:	80 f0       	brcs	.+32     	; 0xf35a <__mulsf3_pse+0xa0>
    f33a:	0c 94 b0 78 	jmp	0xf160	; 0xf160 <__fp_inf>
    f33e:	0c 94 3c 79 	jmp	0xf278	; 0xf278 <__fp_szero>
    f342:	5f 3f       	cpi	r21, 0xFF	; 255
    f344:	e4 f3       	brlt	.-8      	; 0xf33e <__mulsf3_pse+0x84>
    f346:	98 3e       	cpi	r25, 0xE8	; 232
    f348:	d4 f3       	brlt	.-12     	; 0xf33e <__mulsf3_pse+0x84>
    f34a:	86 95       	lsr	r24
    f34c:	77 95       	ror	r23
    f34e:	67 95       	ror	r22
    f350:	b7 95       	ror	r27
    f352:	f7 95       	ror	r31
    f354:	e7 95       	ror	r30
    f356:	9f 5f       	subi	r25, 0xFF	; 255
    f358:	c1 f7       	brne	.-16     	; 0xf34a <__mulsf3_pse+0x90>
    f35a:	fe 2b       	or	r31, r30
    f35c:	88 0f       	add	r24, r24
    f35e:	91 1d       	adc	r25, r1
    f360:	96 95       	lsr	r25
    f362:	87 95       	ror	r24
    f364:	97 f9       	bld	r25, 7
    f366:	08 95       	ret

0000f368 <__mulsi3>:
    f368:	db 01       	movw	r26, r22
    f36a:	8f 93       	push	r24
    f36c:	9f 93       	push	r25
    f36e:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    f372:	bf 91       	pop	r27
    f374:	af 91       	pop	r26
    f376:	a2 9f       	mul	r26, r18
    f378:	80 0d       	add	r24, r0
    f37a:	91 1d       	adc	r25, r1
    f37c:	a3 9f       	mul	r26, r19
    f37e:	90 0d       	add	r25, r0
    f380:	b2 9f       	mul	r27, r18
    f382:	90 0d       	add	r25, r0
    f384:	11 24       	eor	r1, r1
    f386:	08 95       	ret

0000f388 <__udivmodhi4>:
    f388:	aa 1b       	sub	r26, r26
    f38a:	bb 1b       	sub	r27, r27
    f38c:	51 e1       	ldi	r21, 0x11	; 17
    f38e:	07 c0       	rjmp	.+14     	; 0xf39e <__udivmodhi4_ep>

0000f390 <__udivmodhi4_loop>:
    f390:	aa 1f       	adc	r26, r26
    f392:	bb 1f       	adc	r27, r27
    f394:	a6 17       	cp	r26, r22
    f396:	b7 07       	cpc	r27, r23
    f398:	10 f0       	brcs	.+4      	; 0xf39e <__udivmodhi4_ep>
    f39a:	a6 1b       	sub	r26, r22
    f39c:	b7 0b       	sbc	r27, r23

0000f39e <__udivmodhi4_ep>:
    f39e:	88 1f       	adc	r24, r24
    f3a0:	99 1f       	adc	r25, r25
    f3a2:	5a 95       	dec	r21
    f3a4:	a9 f7       	brne	.-22     	; 0xf390 <__udivmodhi4_loop>
    f3a6:	80 95       	com	r24
    f3a8:	90 95       	com	r25
    f3aa:	bc 01       	movw	r22, r24
    f3ac:	cd 01       	movw	r24, r26
    f3ae:	08 95       	ret

0000f3b0 <__divmodhi4>:
    f3b0:	97 fb       	bst	r25, 7
    f3b2:	07 2e       	mov	r0, r23
    f3b4:	16 f4       	brtc	.+4      	; 0xf3ba <__divmodhi4+0xa>
    f3b6:	00 94       	com	r0
    f3b8:	07 d0       	rcall	.+14     	; 0xf3c8 <__divmodhi4_neg1>
    f3ba:	77 fd       	sbrc	r23, 7
    f3bc:	09 d0       	rcall	.+18     	; 0xf3d0 <__divmodhi4_neg2>
    f3be:	0e 94 c4 79 	call	0xf388	; 0xf388 <__udivmodhi4>
    f3c2:	07 fc       	sbrc	r0, 7
    f3c4:	05 d0       	rcall	.+10     	; 0xf3d0 <__divmodhi4_neg2>
    f3c6:	3e f4       	brtc	.+14     	; 0xf3d6 <__divmodhi4_exit>

0000f3c8 <__divmodhi4_neg1>:
    f3c8:	90 95       	com	r25
    f3ca:	81 95       	neg	r24
    f3cc:	9f 4f       	sbci	r25, 0xFF	; 255
    f3ce:	08 95       	ret

0000f3d0 <__divmodhi4_neg2>:
    f3d0:	70 95       	com	r23
    f3d2:	61 95       	neg	r22
    f3d4:	7f 4f       	sbci	r23, 0xFF	; 255

0000f3d6 <__divmodhi4_exit>:
    f3d6:	08 95       	ret

0000f3d8 <__udivmodsi4>:
    f3d8:	a1 e2       	ldi	r26, 0x21	; 33
    f3da:	1a 2e       	mov	r1, r26
    f3dc:	aa 1b       	sub	r26, r26
    f3de:	bb 1b       	sub	r27, r27
    f3e0:	fd 01       	movw	r30, r26
    f3e2:	0d c0       	rjmp	.+26     	; 0xf3fe <__udivmodsi4_ep>

0000f3e4 <__udivmodsi4_loop>:
    f3e4:	aa 1f       	adc	r26, r26
    f3e6:	bb 1f       	adc	r27, r27
    f3e8:	ee 1f       	adc	r30, r30
    f3ea:	ff 1f       	adc	r31, r31
    f3ec:	a2 17       	cp	r26, r18
    f3ee:	b3 07       	cpc	r27, r19
    f3f0:	e4 07       	cpc	r30, r20
    f3f2:	f5 07       	cpc	r31, r21
    f3f4:	20 f0       	brcs	.+8      	; 0xf3fe <__udivmodsi4_ep>
    f3f6:	a2 1b       	sub	r26, r18
    f3f8:	b3 0b       	sbc	r27, r19
    f3fa:	e4 0b       	sbc	r30, r20
    f3fc:	f5 0b       	sbc	r31, r21

0000f3fe <__udivmodsi4_ep>:
    f3fe:	66 1f       	adc	r22, r22
    f400:	77 1f       	adc	r23, r23
    f402:	88 1f       	adc	r24, r24
    f404:	99 1f       	adc	r25, r25
    f406:	1a 94       	dec	r1
    f408:	69 f7       	brne	.-38     	; 0xf3e4 <__udivmodsi4_loop>
    f40a:	60 95       	com	r22
    f40c:	70 95       	com	r23
    f40e:	80 95       	com	r24
    f410:	90 95       	com	r25
    f412:	9b 01       	movw	r18, r22
    f414:	ac 01       	movw	r20, r24
    f416:	bd 01       	movw	r22, r26
    f418:	cf 01       	movw	r24, r30
    f41a:	08 95       	ret

0000f41c <__divmodsi4>:
    f41c:	05 2e       	mov	r0, r21
    f41e:	97 fb       	bst	r25, 7
    f420:	1e f4       	brtc	.+6      	; 0xf428 <__divmodsi4+0xc>
    f422:	00 94       	com	r0
    f424:	0e 94 25 7a 	call	0xf44a	; 0xf44a <__negsi2>
    f428:	57 fd       	sbrc	r21, 7
    f42a:	07 d0       	rcall	.+14     	; 0xf43a <__divmodsi4_neg2>
    f42c:	0e 94 ec 79 	call	0xf3d8	; 0xf3d8 <__udivmodsi4>
    f430:	07 fc       	sbrc	r0, 7
    f432:	03 d0       	rcall	.+6      	; 0xf43a <__divmodsi4_neg2>
    f434:	4e f4       	brtc	.+18     	; 0xf448 <__divmodsi4_exit>
    f436:	0c 94 25 7a 	jmp	0xf44a	; 0xf44a <__negsi2>

0000f43a <__divmodsi4_neg2>:
    f43a:	50 95       	com	r21
    f43c:	40 95       	com	r20
    f43e:	30 95       	com	r19
    f440:	21 95       	neg	r18
    f442:	3f 4f       	sbci	r19, 0xFF	; 255
    f444:	4f 4f       	sbci	r20, 0xFF	; 255
    f446:	5f 4f       	sbci	r21, 0xFF	; 255

0000f448 <__divmodsi4_exit>:
    f448:	08 95       	ret

0000f44a <__negsi2>:
    f44a:	90 95       	com	r25
    f44c:	80 95       	com	r24
    f44e:	70 95       	com	r23
    f450:	61 95       	neg	r22
    f452:	7f 4f       	sbci	r23, 0xFF	; 255
    f454:	8f 4f       	sbci	r24, 0xFF	; 255
    f456:	9f 4f       	sbci	r25, 0xFF	; 255
    f458:	08 95       	ret

0000f45a <__tablejump2__>:
    f45a:	ee 0f       	add	r30, r30
    f45c:	ff 1f       	adc	r31, r31
    f45e:	00 24       	eor	r0, r0
    f460:	00 1c       	adc	r0, r0
    f462:	0b be       	out	0x3b, r0	; 59
    f464:	07 90       	elpm	r0, Z+
    f466:	f6 91       	elpm	r31, Z
    f468:	e0 2d       	mov	r30, r0
    f46a:	09 94       	ijmp

0000f46c <__umulhisi3>:
    f46c:	a2 9f       	mul	r26, r18
    f46e:	b0 01       	movw	r22, r0
    f470:	b3 9f       	mul	r27, r19
    f472:	c0 01       	movw	r24, r0
    f474:	a3 9f       	mul	r26, r19
    f476:	70 0d       	add	r23, r0
    f478:	81 1d       	adc	r24, r1
    f47a:	11 24       	eor	r1, r1
    f47c:	91 1d       	adc	r25, r1
    f47e:	b2 9f       	mul	r27, r18
    f480:	70 0d       	add	r23, r0
    f482:	81 1d       	adc	r24, r1
    f484:	11 24       	eor	r1, r1
    f486:	91 1d       	adc	r25, r1
    f488:	08 95       	ret

0000f48a <__muluhisi3>:
    f48a:	0e 94 36 7a 	call	0xf46c	; 0xf46c <__umulhisi3>
    f48e:	a5 9f       	mul	r26, r21
    f490:	90 0d       	add	r25, r0
    f492:	b4 9f       	mul	r27, r20
    f494:	90 0d       	add	r25, r0
    f496:	a4 9f       	mul	r26, r20
    f498:	80 0d       	add	r24, r0
    f49a:	91 1d       	adc	r25, r1
    f49c:	11 24       	eor	r1, r1
    f49e:	08 95       	ret

0000f4a0 <malloc>:
    f4a0:	0f 93       	push	r16
    f4a2:	1f 93       	push	r17
    f4a4:	cf 93       	push	r28
    f4a6:	df 93       	push	r29
    f4a8:	82 30       	cpi	r24, 0x02	; 2
    f4aa:	91 05       	cpc	r25, r1
    f4ac:	10 f4       	brcc	.+4      	; 0xf4b2 <malloc+0x12>
    f4ae:	82 e0       	ldi	r24, 0x02	; 2
    f4b0:	90 e0       	ldi	r25, 0x00	; 0
    f4b2:	e0 91 cd 4a 	lds	r30, 0x4ACD	; 0x804acd <__flp>
    f4b6:	f0 91 ce 4a 	lds	r31, 0x4ACE	; 0x804ace <__flp+0x1>
    f4ba:	20 e0       	ldi	r18, 0x00	; 0
    f4bc:	30 e0       	ldi	r19, 0x00	; 0
    f4be:	a0 e0       	ldi	r26, 0x00	; 0
    f4c0:	b0 e0       	ldi	r27, 0x00	; 0
    f4c2:	30 97       	sbiw	r30, 0x00	; 0
    f4c4:	19 f1       	breq	.+70     	; 0xf50c <malloc+0x6c>
    f4c6:	40 81       	ld	r20, Z
    f4c8:	51 81       	ldd	r21, Z+1	; 0x01
    f4ca:	02 81       	ldd	r16, Z+2	; 0x02
    f4cc:	13 81       	ldd	r17, Z+3	; 0x03
    f4ce:	48 17       	cp	r20, r24
    f4d0:	59 07       	cpc	r21, r25
    f4d2:	c8 f0       	brcs	.+50     	; 0xf506 <malloc+0x66>
    f4d4:	84 17       	cp	r24, r20
    f4d6:	95 07       	cpc	r25, r21
    f4d8:	69 f4       	brne	.+26     	; 0xf4f4 <malloc+0x54>
    f4da:	10 97       	sbiw	r26, 0x00	; 0
    f4dc:	31 f0       	breq	.+12     	; 0xf4ea <malloc+0x4a>
    f4de:	12 96       	adiw	r26, 0x02	; 2
    f4e0:	0c 93       	st	X, r16
    f4e2:	12 97       	sbiw	r26, 0x02	; 2
    f4e4:	13 96       	adiw	r26, 0x03	; 3
    f4e6:	1c 93       	st	X, r17
    f4e8:	27 c0       	rjmp	.+78     	; 0xf538 <malloc+0x98>
    f4ea:	00 93 cd 4a 	sts	0x4ACD, r16	; 0x804acd <__flp>
    f4ee:	10 93 ce 4a 	sts	0x4ACE, r17	; 0x804ace <__flp+0x1>
    f4f2:	22 c0       	rjmp	.+68     	; 0xf538 <malloc+0x98>
    f4f4:	21 15       	cp	r18, r1
    f4f6:	31 05       	cpc	r19, r1
    f4f8:	19 f0       	breq	.+6      	; 0xf500 <malloc+0x60>
    f4fa:	42 17       	cp	r20, r18
    f4fc:	53 07       	cpc	r21, r19
    f4fe:	18 f4       	brcc	.+6      	; 0xf506 <malloc+0x66>
    f500:	9a 01       	movw	r18, r20
    f502:	bd 01       	movw	r22, r26
    f504:	ef 01       	movw	r28, r30
    f506:	df 01       	movw	r26, r30
    f508:	f8 01       	movw	r30, r16
    f50a:	db cf       	rjmp	.-74     	; 0xf4c2 <malloc+0x22>
    f50c:	21 15       	cp	r18, r1
    f50e:	31 05       	cpc	r19, r1
    f510:	f9 f0       	breq	.+62     	; 0xf550 <malloc+0xb0>
    f512:	28 1b       	sub	r18, r24
    f514:	39 0b       	sbc	r19, r25
    f516:	24 30       	cpi	r18, 0x04	; 4
    f518:	31 05       	cpc	r19, r1
    f51a:	80 f4       	brcc	.+32     	; 0xf53c <malloc+0x9c>
    f51c:	8a 81       	ldd	r24, Y+2	; 0x02
    f51e:	9b 81       	ldd	r25, Y+3	; 0x03
    f520:	61 15       	cp	r22, r1
    f522:	71 05       	cpc	r23, r1
    f524:	21 f0       	breq	.+8      	; 0xf52e <malloc+0x8e>
    f526:	fb 01       	movw	r30, r22
    f528:	82 83       	std	Z+2, r24	; 0x02
    f52a:	93 83       	std	Z+3, r25	; 0x03
    f52c:	04 c0       	rjmp	.+8      	; 0xf536 <malloc+0x96>
    f52e:	80 93 cd 4a 	sts	0x4ACD, r24	; 0x804acd <__flp>
    f532:	90 93 ce 4a 	sts	0x4ACE, r25	; 0x804ace <__flp+0x1>
    f536:	fe 01       	movw	r30, r28
    f538:	32 96       	adiw	r30, 0x02	; 2
    f53a:	44 c0       	rjmp	.+136    	; 0xf5c4 <malloc+0x124>
    f53c:	fe 01       	movw	r30, r28
    f53e:	e2 0f       	add	r30, r18
    f540:	f3 1f       	adc	r31, r19
    f542:	81 93       	st	Z+, r24
    f544:	91 93       	st	Z+, r25
    f546:	22 50       	subi	r18, 0x02	; 2
    f548:	31 09       	sbc	r19, r1
    f54a:	28 83       	st	Y, r18
    f54c:	39 83       	std	Y+1, r19	; 0x01
    f54e:	3a c0       	rjmp	.+116    	; 0xf5c4 <malloc+0x124>
    f550:	20 91 cb 4a 	lds	r18, 0x4ACB	; 0x804acb <__brkval>
    f554:	30 91 cc 4a 	lds	r19, 0x4ACC	; 0x804acc <__brkval+0x1>
    f558:	23 2b       	or	r18, r19
    f55a:	41 f4       	brne	.+16     	; 0xf56c <malloc+0xcc>
    f55c:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    f560:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    f564:	20 93 cb 4a 	sts	0x4ACB, r18	; 0x804acb <__brkval>
    f568:	30 93 cc 4a 	sts	0x4ACC, r19	; 0x804acc <__brkval+0x1>
    f56c:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    f570:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    f574:	21 15       	cp	r18, r1
    f576:	31 05       	cpc	r19, r1
    f578:	41 f4       	brne	.+16     	; 0xf58a <malloc+0xea>
    f57a:	2d b7       	in	r18, 0x3d	; 61
    f57c:	3e b7       	in	r19, 0x3e	; 62
    f57e:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    f582:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    f586:	24 1b       	sub	r18, r20
    f588:	35 0b       	sbc	r19, r21
    f58a:	e0 91 cb 4a 	lds	r30, 0x4ACB	; 0x804acb <__brkval>
    f58e:	f0 91 cc 4a 	lds	r31, 0x4ACC	; 0x804acc <__brkval+0x1>
    f592:	e2 17       	cp	r30, r18
    f594:	f3 07       	cpc	r31, r19
    f596:	a0 f4       	brcc	.+40     	; 0xf5c0 <malloc+0x120>
    f598:	2e 1b       	sub	r18, r30
    f59a:	3f 0b       	sbc	r19, r31
    f59c:	28 17       	cp	r18, r24
    f59e:	39 07       	cpc	r19, r25
    f5a0:	78 f0       	brcs	.+30     	; 0xf5c0 <malloc+0x120>
    f5a2:	ac 01       	movw	r20, r24
    f5a4:	4e 5f       	subi	r20, 0xFE	; 254
    f5a6:	5f 4f       	sbci	r21, 0xFF	; 255
    f5a8:	24 17       	cp	r18, r20
    f5aa:	35 07       	cpc	r19, r21
    f5ac:	48 f0       	brcs	.+18     	; 0xf5c0 <malloc+0x120>
    f5ae:	4e 0f       	add	r20, r30
    f5b0:	5f 1f       	adc	r21, r31
    f5b2:	40 93 cb 4a 	sts	0x4ACB, r20	; 0x804acb <__brkval>
    f5b6:	50 93 cc 4a 	sts	0x4ACC, r21	; 0x804acc <__brkval+0x1>
    f5ba:	81 93       	st	Z+, r24
    f5bc:	91 93       	st	Z+, r25
    f5be:	02 c0       	rjmp	.+4      	; 0xf5c4 <malloc+0x124>
    f5c0:	e0 e0       	ldi	r30, 0x00	; 0
    f5c2:	f0 e0       	ldi	r31, 0x00	; 0
    f5c4:	cf 01       	movw	r24, r30
    f5c6:	df 91       	pop	r29
    f5c8:	cf 91       	pop	r28
    f5ca:	1f 91       	pop	r17
    f5cc:	0f 91       	pop	r16
    f5ce:	08 95       	ret

0000f5d0 <free>:
    f5d0:	cf 93       	push	r28
    f5d2:	df 93       	push	r29
    f5d4:	00 97       	sbiw	r24, 0x00	; 0
    f5d6:	09 f4       	brne	.+2      	; 0xf5da <free+0xa>
    f5d8:	81 c0       	rjmp	.+258    	; 0xf6dc <free+0x10c>
    f5da:	fc 01       	movw	r30, r24
    f5dc:	32 97       	sbiw	r30, 0x02	; 2
    f5de:	12 82       	std	Z+2, r1	; 0x02
    f5e0:	13 82       	std	Z+3, r1	; 0x03
    f5e2:	a0 91 cd 4a 	lds	r26, 0x4ACD	; 0x804acd <__flp>
    f5e6:	b0 91 ce 4a 	lds	r27, 0x4ACE	; 0x804ace <__flp+0x1>
    f5ea:	10 97       	sbiw	r26, 0x00	; 0
    f5ec:	81 f4       	brne	.+32     	; 0xf60e <free+0x3e>
    f5ee:	20 81       	ld	r18, Z
    f5f0:	31 81       	ldd	r19, Z+1	; 0x01
    f5f2:	82 0f       	add	r24, r18
    f5f4:	93 1f       	adc	r25, r19
    f5f6:	20 91 cb 4a 	lds	r18, 0x4ACB	; 0x804acb <__brkval>
    f5fa:	30 91 cc 4a 	lds	r19, 0x4ACC	; 0x804acc <__brkval+0x1>
    f5fe:	28 17       	cp	r18, r24
    f600:	39 07       	cpc	r19, r25
    f602:	51 f5       	brne	.+84     	; 0xf658 <free+0x88>
    f604:	e0 93 cb 4a 	sts	0x4ACB, r30	; 0x804acb <__brkval>
    f608:	f0 93 cc 4a 	sts	0x4ACC, r31	; 0x804acc <__brkval+0x1>
    f60c:	67 c0       	rjmp	.+206    	; 0xf6dc <free+0x10c>
    f60e:	ed 01       	movw	r28, r26
    f610:	20 e0       	ldi	r18, 0x00	; 0
    f612:	30 e0       	ldi	r19, 0x00	; 0
    f614:	ce 17       	cp	r28, r30
    f616:	df 07       	cpc	r29, r31
    f618:	40 f4       	brcc	.+16     	; 0xf62a <free+0x5a>
    f61a:	4a 81       	ldd	r20, Y+2	; 0x02
    f61c:	5b 81       	ldd	r21, Y+3	; 0x03
    f61e:	9e 01       	movw	r18, r28
    f620:	41 15       	cp	r20, r1
    f622:	51 05       	cpc	r21, r1
    f624:	f1 f0       	breq	.+60     	; 0xf662 <free+0x92>
    f626:	ea 01       	movw	r28, r20
    f628:	f5 cf       	rjmp	.-22     	; 0xf614 <free+0x44>
    f62a:	c2 83       	std	Z+2, r28	; 0x02
    f62c:	d3 83       	std	Z+3, r29	; 0x03
    f62e:	40 81       	ld	r20, Z
    f630:	51 81       	ldd	r21, Z+1	; 0x01
    f632:	84 0f       	add	r24, r20
    f634:	95 1f       	adc	r25, r21
    f636:	c8 17       	cp	r28, r24
    f638:	d9 07       	cpc	r29, r25
    f63a:	59 f4       	brne	.+22     	; 0xf652 <free+0x82>
    f63c:	88 81       	ld	r24, Y
    f63e:	99 81       	ldd	r25, Y+1	; 0x01
    f640:	84 0f       	add	r24, r20
    f642:	95 1f       	adc	r25, r21
    f644:	02 96       	adiw	r24, 0x02	; 2
    f646:	80 83       	st	Z, r24
    f648:	91 83       	std	Z+1, r25	; 0x01
    f64a:	8a 81       	ldd	r24, Y+2	; 0x02
    f64c:	9b 81       	ldd	r25, Y+3	; 0x03
    f64e:	82 83       	std	Z+2, r24	; 0x02
    f650:	93 83       	std	Z+3, r25	; 0x03
    f652:	21 15       	cp	r18, r1
    f654:	31 05       	cpc	r19, r1
    f656:	29 f4       	brne	.+10     	; 0xf662 <free+0x92>
    f658:	e0 93 cd 4a 	sts	0x4ACD, r30	; 0x804acd <__flp>
    f65c:	f0 93 ce 4a 	sts	0x4ACE, r31	; 0x804ace <__flp+0x1>
    f660:	3d c0       	rjmp	.+122    	; 0xf6dc <free+0x10c>
    f662:	e9 01       	movw	r28, r18
    f664:	ea 83       	std	Y+2, r30	; 0x02
    f666:	fb 83       	std	Y+3, r31	; 0x03
    f668:	49 91       	ld	r20, Y+
    f66a:	59 91       	ld	r21, Y+
    f66c:	c4 0f       	add	r28, r20
    f66e:	d5 1f       	adc	r29, r21
    f670:	ec 17       	cp	r30, r28
    f672:	fd 07       	cpc	r31, r29
    f674:	61 f4       	brne	.+24     	; 0xf68e <free+0xbe>
    f676:	80 81       	ld	r24, Z
    f678:	91 81       	ldd	r25, Z+1	; 0x01
    f67a:	84 0f       	add	r24, r20
    f67c:	95 1f       	adc	r25, r21
    f67e:	02 96       	adiw	r24, 0x02	; 2
    f680:	e9 01       	movw	r28, r18
    f682:	88 83       	st	Y, r24
    f684:	99 83       	std	Y+1, r25	; 0x01
    f686:	82 81       	ldd	r24, Z+2	; 0x02
    f688:	93 81       	ldd	r25, Z+3	; 0x03
    f68a:	8a 83       	std	Y+2, r24	; 0x02
    f68c:	9b 83       	std	Y+3, r25	; 0x03
    f68e:	e0 e0       	ldi	r30, 0x00	; 0
    f690:	f0 e0       	ldi	r31, 0x00	; 0
    f692:	12 96       	adiw	r26, 0x02	; 2
    f694:	8d 91       	ld	r24, X+
    f696:	9c 91       	ld	r25, X
    f698:	13 97       	sbiw	r26, 0x03	; 3
    f69a:	00 97       	sbiw	r24, 0x00	; 0
    f69c:	19 f0       	breq	.+6      	; 0xf6a4 <free+0xd4>
    f69e:	fd 01       	movw	r30, r26
    f6a0:	dc 01       	movw	r26, r24
    f6a2:	f7 cf       	rjmp	.-18     	; 0xf692 <free+0xc2>
    f6a4:	8d 91       	ld	r24, X+
    f6a6:	9c 91       	ld	r25, X
    f6a8:	11 97       	sbiw	r26, 0x01	; 1
    f6aa:	9d 01       	movw	r18, r26
    f6ac:	2e 5f       	subi	r18, 0xFE	; 254
    f6ae:	3f 4f       	sbci	r19, 0xFF	; 255
    f6b0:	82 0f       	add	r24, r18
    f6b2:	93 1f       	adc	r25, r19
    f6b4:	20 91 cb 4a 	lds	r18, 0x4ACB	; 0x804acb <__brkval>
    f6b8:	30 91 cc 4a 	lds	r19, 0x4ACC	; 0x804acc <__brkval+0x1>
    f6bc:	28 17       	cp	r18, r24
    f6be:	39 07       	cpc	r19, r25
    f6c0:	69 f4       	brne	.+26     	; 0xf6dc <free+0x10c>
    f6c2:	30 97       	sbiw	r30, 0x00	; 0
    f6c4:	29 f4       	brne	.+10     	; 0xf6d0 <free+0x100>
    f6c6:	10 92 cd 4a 	sts	0x4ACD, r1	; 0x804acd <__flp>
    f6ca:	10 92 ce 4a 	sts	0x4ACE, r1	; 0x804ace <__flp+0x1>
    f6ce:	02 c0       	rjmp	.+4      	; 0xf6d4 <free+0x104>
    f6d0:	12 82       	std	Z+2, r1	; 0x02
    f6d2:	13 82       	std	Z+3, r1	; 0x03
    f6d4:	a0 93 cb 4a 	sts	0x4ACB, r26	; 0x804acb <__brkval>
    f6d8:	b0 93 cc 4a 	sts	0x4ACC, r27	; 0x804acc <__brkval+0x1>
    f6dc:	df 91       	pop	r29
    f6de:	cf 91       	pop	r28
    f6e0:	08 95       	ret

0000f6e2 <atof>:
    f6e2:	66 27       	eor	r22, r22
    f6e4:	77 27       	eor	r23, r23
    f6e6:	0c 94 51 7e 	jmp	0xfca2	; 0xfca2 <strtod>

0000f6ea <atoi>:
    f6ea:	fc 01       	movw	r30, r24
    f6ec:	88 27       	eor	r24, r24
    f6ee:	99 27       	eor	r25, r25
    f6f0:	e8 94       	clt
    f6f2:	21 91       	ld	r18, Z+
    f6f4:	20 32       	cpi	r18, 0x20	; 32
    f6f6:	e9 f3       	breq	.-6      	; 0xf6f2 <atoi+0x8>
    f6f8:	29 30       	cpi	r18, 0x09	; 9
    f6fa:	10 f0       	brcs	.+4      	; 0xf700 <atoi+0x16>
    f6fc:	2e 30       	cpi	r18, 0x0E	; 14
    f6fe:	c8 f3       	brcs	.-14     	; 0xf6f2 <atoi+0x8>
    f700:	2b 32       	cpi	r18, 0x2B	; 43
    f702:	41 f0       	breq	.+16     	; 0xf714 <atoi+0x2a>
    f704:	2d 32       	cpi	r18, 0x2D	; 45
    f706:	39 f4       	brne	.+14     	; 0xf716 <atoi+0x2c>
    f708:	68 94       	set
    f70a:	04 c0       	rjmp	.+8      	; 0xf714 <atoi+0x2a>
    f70c:	0e 94 1c 7c 	call	0xf838	; 0xf838 <__mulhi_const_10>
    f710:	82 0f       	add	r24, r18
    f712:	91 1d       	adc	r25, r1
    f714:	21 91       	ld	r18, Z+
    f716:	20 53       	subi	r18, 0x30	; 48
    f718:	2a 30       	cpi	r18, 0x0A	; 10
    f71a:	c0 f3       	brcs	.-16     	; 0xf70c <atoi+0x22>
    f71c:	1e f4       	brtc	.+6      	; 0xf724 <atoi+0x3a>
    f71e:	90 95       	com	r25
    f720:	81 95       	neg	r24
    f722:	9f 4f       	sbci	r25, 0xFF	; 255
    f724:	08 95       	ret

0000f726 <atol>:
    f726:	1f 93       	push	r17
    f728:	fc 01       	movw	r30, r24
    f72a:	99 27       	eor	r25, r25
    f72c:	88 27       	eor	r24, r24
    f72e:	bc 01       	movw	r22, r24
    f730:	e8 94       	clt
    f732:	11 91       	ld	r17, Z+
    f734:	10 32       	cpi	r17, 0x20	; 32
    f736:	e9 f3       	breq	.-6      	; 0xf732 <atol+0xc>
    f738:	19 30       	cpi	r17, 0x09	; 9
    f73a:	10 f0       	brcs	.+4      	; 0xf740 <atol+0x1a>
    f73c:	1e 30       	cpi	r17, 0x0E	; 14
    f73e:	c8 f3       	brcs	.-14     	; 0xf732 <atol+0xc>
    f740:	1b 32       	cpi	r17, 0x2B	; 43
    f742:	51 f0       	breq	.+20     	; 0xf758 <atol+0x32>
    f744:	1d 32       	cpi	r17, 0x2D	; 45
    f746:	49 f4       	brne	.+18     	; 0xf75a <atol+0x34>
    f748:	68 94       	set
    f74a:	06 c0       	rjmp	.+12     	; 0xf758 <atol+0x32>
    f74c:	0e 94 07 7c 	call	0xf80e	; 0xf80e <__mulsi_const_10>
    f750:	61 0f       	add	r22, r17
    f752:	71 1d       	adc	r23, r1
    f754:	81 1d       	adc	r24, r1
    f756:	91 1d       	adc	r25, r1
    f758:	11 91       	ld	r17, Z+
    f75a:	10 53       	subi	r17, 0x30	; 48
    f75c:	1a 30       	cpi	r17, 0x0A	; 10
    f75e:	b0 f3       	brcs	.-20     	; 0xf74c <atol+0x26>
    f760:	3e f4       	brtc	.+14     	; 0xf770 <atol+0x4a>
    f762:	90 95       	com	r25
    f764:	80 95       	com	r24
    f766:	70 95       	com	r23
    f768:	61 95       	neg	r22
    f76a:	7f 4f       	sbci	r23, 0xFF	; 255
    f76c:	8f 4f       	sbci	r24, 0xFF	; 255
    f76e:	9f 4f       	sbci	r25, 0xFF	; 255
    f770:	1f 91       	pop	r17
    f772:	08 95       	ret

0000f774 <toupper>:
    f774:	91 11       	cpse	r25, r1
    f776:	08 95       	ret
    f778:	81 56       	subi	r24, 0x61	; 97
    f77a:	8a 51       	subi	r24, 0x1A	; 26
    f77c:	08 f4       	brcc	.+2      	; 0xf780 <toupper+0xc>
    f77e:	80 52       	subi	r24, 0x20	; 32
    f780:	85 58       	subi	r24, 0x85	; 133
    f782:	08 95       	ret

0000f784 <memset>:
    f784:	dc 01       	movw	r26, r24
    f786:	01 c0       	rjmp	.+2      	; 0xf78a <memset+0x6>
    f788:	6d 93       	st	X+, r22
    f78a:	41 50       	subi	r20, 0x01	; 1
    f78c:	50 40       	sbci	r21, 0x00	; 0
    f78e:	e0 f7       	brcc	.-8      	; 0xf788 <memset+0x4>
    f790:	08 95       	ret

0000f792 <strcat>:
    f792:	fb 01       	movw	r30, r22
    f794:	dc 01       	movw	r26, r24
    f796:	0d 90       	ld	r0, X+
    f798:	00 20       	and	r0, r0
    f79a:	e9 f7       	brne	.-6      	; 0xf796 <strcat+0x4>
    f79c:	11 97       	sbiw	r26, 0x01	; 1
    f79e:	01 90       	ld	r0, Z+
    f7a0:	0d 92       	st	X+, r0
    f7a2:	00 20       	and	r0, r0
    f7a4:	e1 f7       	brne	.-8      	; 0xf79e <strcat+0xc>
    f7a6:	08 95       	ret

0000f7a8 <strchr>:
    f7a8:	fc 01       	movw	r30, r24
    f7aa:	81 91       	ld	r24, Z+
    f7ac:	86 17       	cp	r24, r22
    f7ae:	21 f0       	breq	.+8      	; 0xf7b8 <strchr+0x10>
    f7b0:	88 23       	and	r24, r24
    f7b2:	d9 f7       	brne	.-10     	; 0xf7aa <strchr+0x2>
    f7b4:	99 27       	eor	r25, r25
    f7b6:	08 95       	ret
    f7b8:	31 97       	sbiw	r30, 0x01	; 1
    f7ba:	cf 01       	movw	r24, r30
    f7bc:	08 95       	ret

0000f7be <strcmp>:
    f7be:	fb 01       	movw	r30, r22
    f7c0:	dc 01       	movw	r26, r24
    f7c2:	8d 91       	ld	r24, X+
    f7c4:	01 90       	ld	r0, Z+
    f7c6:	80 19       	sub	r24, r0
    f7c8:	01 10       	cpse	r0, r1
    f7ca:	d9 f3       	breq	.-10     	; 0xf7c2 <strcmp+0x4>
    f7cc:	99 0b       	sbc	r25, r25
    f7ce:	08 95       	ret

0000f7d0 <strcpy>:
    f7d0:	fb 01       	movw	r30, r22
    f7d2:	dc 01       	movw	r26, r24
    f7d4:	01 90       	ld	r0, Z+
    f7d6:	0d 92       	st	X+, r0
    f7d8:	00 20       	and	r0, r0
    f7da:	e1 f7       	brne	.-8      	; 0xf7d4 <strcpy+0x4>
    f7dc:	08 95       	ret

0000f7de <strlen>:
    f7de:	fc 01       	movw	r30, r24
    f7e0:	01 90       	ld	r0, Z+
    f7e2:	00 20       	and	r0, r0
    f7e4:	e9 f7       	brne	.-6      	; 0xf7e0 <strlen+0x2>
    f7e6:	80 95       	com	r24
    f7e8:	90 95       	com	r25
    f7ea:	8e 0f       	add	r24, r30
    f7ec:	9f 1f       	adc	r25, r31
    f7ee:	08 95       	ret

0000f7f0 <strncpy>:
    f7f0:	fb 01       	movw	r30, r22
    f7f2:	dc 01       	movw	r26, r24
    f7f4:	41 50       	subi	r20, 0x01	; 1
    f7f6:	50 40       	sbci	r21, 0x00	; 0
    f7f8:	48 f0       	brcs	.+18     	; 0xf80c <strncpy+0x1c>
    f7fa:	01 90       	ld	r0, Z+
    f7fc:	0d 92       	st	X+, r0
    f7fe:	00 20       	and	r0, r0
    f800:	c9 f7       	brne	.-14     	; 0xf7f4 <strncpy+0x4>
    f802:	01 c0       	rjmp	.+2      	; 0xf806 <strncpy+0x16>
    f804:	1d 92       	st	X+, r1
    f806:	41 50       	subi	r20, 0x01	; 1
    f808:	50 40       	sbci	r21, 0x00	; 0
    f80a:	e0 f7       	brcc	.-8      	; 0xf804 <strncpy+0x14>
    f80c:	08 95       	ret

0000f80e <__mulsi_const_10>:
    f80e:	59 2f       	mov	r21, r25
    f810:	48 2f       	mov	r20, r24
    f812:	37 2f       	mov	r19, r23
    f814:	26 2f       	mov	r18, r22
    f816:	66 0f       	add	r22, r22
    f818:	77 1f       	adc	r23, r23
    f81a:	88 1f       	adc	r24, r24
    f81c:	99 1f       	adc	r25, r25
    f81e:	66 0f       	add	r22, r22
    f820:	77 1f       	adc	r23, r23
    f822:	88 1f       	adc	r24, r24
    f824:	99 1f       	adc	r25, r25
    f826:	62 0f       	add	r22, r18
    f828:	73 1f       	adc	r23, r19
    f82a:	84 1f       	adc	r24, r20
    f82c:	95 1f       	adc	r25, r21
    f82e:	66 0f       	add	r22, r22
    f830:	77 1f       	adc	r23, r23
    f832:	88 1f       	adc	r24, r24
    f834:	99 1f       	adc	r25, r25
    f836:	08 95       	ret

0000f838 <__mulhi_const_10>:
    f838:	7a e0       	ldi	r23, 0x0A	; 10
    f83a:	97 9f       	mul	r25, r23
    f83c:	90 2d       	mov	r25, r0
    f83e:	87 9f       	mul	r24, r23
    f840:	80 2d       	mov	r24, r0
    f842:	91 0d       	add	r25, r1
    f844:	11 24       	eor	r1, r1
    f846:	08 95       	ret

0000f848 <sprintf>:
    f848:	0f 93       	push	r16
    f84a:	1f 93       	push	r17
    f84c:	cf 93       	push	r28
    f84e:	df 93       	push	r29
    f850:	cd b7       	in	r28, 0x3d	; 61
    f852:	de b7       	in	r29, 0x3e	; 62
    f854:	2e 97       	sbiw	r28, 0x0e	; 14
    f856:	cd bf       	out	0x3d, r28	; 61
    f858:	de bf       	out	0x3e, r29	; 62
    f85a:	0d 89       	ldd	r16, Y+21	; 0x15
    f85c:	1e 89       	ldd	r17, Y+22	; 0x16
    f85e:	86 e0       	ldi	r24, 0x06	; 6
    f860:	8c 83       	std	Y+4, r24	; 0x04
    f862:	09 83       	std	Y+1, r16	; 0x01
    f864:	1a 83       	std	Y+2, r17	; 0x02
    f866:	8f ef       	ldi	r24, 0xFF	; 255
    f868:	9f e7       	ldi	r25, 0x7F	; 127
    f86a:	8d 83       	std	Y+5, r24	; 0x05
    f86c:	9e 83       	std	Y+6, r25	; 0x06
    f86e:	ae 01       	movw	r20, r28
    f870:	47 5e       	subi	r20, 0xE7	; 231
    f872:	5f 4f       	sbci	r21, 0xFF	; 255
    f874:	6f 89       	ldd	r22, Y+23	; 0x17
    f876:	78 8d       	ldd	r23, Y+24	; 0x18
    f878:	ce 01       	movw	r24, r28
    f87a:	01 96       	adiw	r24, 0x01	; 1
    f87c:	0e 94 4d 7c 	call	0xf89a	; 0xf89a <vfprintf>
    f880:	ef 81       	ldd	r30, Y+7	; 0x07
    f882:	f8 85       	ldd	r31, Y+8	; 0x08
    f884:	e0 0f       	add	r30, r16
    f886:	f1 1f       	adc	r31, r17
    f888:	10 82       	st	Z, r1
    f88a:	2e 96       	adiw	r28, 0x0e	; 14
    f88c:	cd bf       	out	0x3d, r28	; 61
    f88e:	de bf       	out	0x3e, r29	; 62
    f890:	df 91       	pop	r29
    f892:	cf 91       	pop	r28
    f894:	1f 91       	pop	r17
    f896:	0f 91       	pop	r16
    f898:	08 95       	ret

0000f89a <vfprintf>:
    f89a:	2f 92       	push	r2
    f89c:	3f 92       	push	r3
    f89e:	4f 92       	push	r4
    f8a0:	5f 92       	push	r5
    f8a2:	6f 92       	push	r6
    f8a4:	7f 92       	push	r7
    f8a6:	8f 92       	push	r8
    f8a8:	9f 92       	push	r9
    f8aa:	af 92       	push	r10
    f8ac:	bf 92       	push	r11
    f8ae:	cf 92       	push	r12
    f8b0:	df 92       	push	r13
    f8b2:	ef 92       	push	r14
    f8b4:	ff 92       	push	r15
    f8b6:	0f 93       	push	r16
    f8b8:	1f 93       	push	r17
    f8ba:	cf 93       	push	r28
    f8bc:	df 93       	push	r29
    f8be:	cd b7       	in	r28, 0x3d	; 61
    f8c0:	de b7       	in	r29, 0x3e	; 62
    f8c2:	2b 97       	sbiw	r28, 0x0b	; 11
    f8c4:	cd bf       	out	0x3d, r28	; 61
    f8c6:	de bf       	out	0x3e, r29	; 62
    f8c8:	6c 01       	movw	r12, r24
    f8ca:	7b 01       	movw	r14, r22
    f8cc:	8a 01       	movw	r16, r20
    f8ce:	fc 01       	movw	r30, r24
    f8d0:	16 82       	std	Z+6, r1	; 0x06
    f8d2:	17 82       	std	Z+7, r1	; 0x07
    f8d4:	83 81       	ldd	r24, Z+3	; 0x03
    f8d6:	81 ff       	sbrs	r24, 1
    f8d8:	cc c1       	rjmp	.+920    	; 0xfc72 <vfprintf+0x3d8>
    f8da:	ce 01       	movw	r24, r28
    f8dc:	01 96       	adiw	r24, 0x01	; 1
    f8de:	3c 01       	movw	r6, r24
    f8e0:	f6 01       	movw	r30, r12
    f8e2:	93 81       	ldd	r25, Z+3	; 0x03
    f8e4:	f7 01       	movw	r30, r14
    f8e6:	93 fd       	sbrc	r25, 3
    f8e8:	85 91       	lpm	r24, Z+
    f8ea:	93 ff       	sbrs	r25, 3
    f8ec:	81 91       	ld	r24, Z+
    f8ee:	7f 01       	movw	r14, r30
    f8f0:	88 23       	and	r24, r24
    f8f2:	09 f4       	brne	.+2      	; 0xf8f6 <vfprintf+0x5c>
    f8f4:	ba c1       	rjmp	.+884    	; 0xfc6a <vfprintf+0x3d0>
    f8f6:	85 32       	cpi	r24, 0x25	; 37
    f8f8:	39 f4       	brne	.+14     	; 0xf908 <vfprintf+0x6e>
    f8fa:	93 fd       	sbrc	r25, 3
    f8fc:	85 91       	lpm	r24, Z+
    f8fe:	93 ff       	sbrs	r25, 3
    f900:	81 91       	ld	r24, Z+
    f902:	7f 01       	movw	r14, r30
    f904:	85 32       	cpi	r24, 0x25	; 37
    f906:	29 f4       	brne	.+10     	; 0xf912 <vfprintf+0x78>
    f908:	b6 01       	movw	r22, r12
    f90a:	90 e0       	ldi	r25, 0x00	; 0
    f90c:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    f910:	e7 cf       	rjmp	.-50     	; 0xf8e0 <vfprintf+0x46>
    f912:	91 2c       	mov	r9, r1
    f914:	21 2c       	mov	r2, r1
    f916:	31 2c       	mov	r3, r1
    f918:	ff e1       	ldi	r31, 0x1F	; 31
    f91a:	f3 15       	cp	r31, r3
    f91c:	d8 f0       	brcs	.+54     	; 0xf954 <vfprintf+0xba>
    f91e:	8b 32       	cpi	r24, 0x2B	; 43
    f920:	79 f0       	breq	.+30     	; 0xf940 <vfprintf+0xa6>
    f922:	38 f4       	brcc	.+14     	; 0xf932 <vfprintf+0x98>
    f924:	80 32       	cpi	r24, 0x20	; 32
    f926:	79 f0       	breq	.+30     	; 0xf946 <vfprintf+0xac>
    f928:	83 32       	cpi	r24, 0x23	; 35
    f92a:	a1 f4       	brne	.+40     	; 0xf954 <vfprintf+0xba>
    f92c:	23 2d       	mov	r18, r3
    f92e:	20 61       	ori	r18, 0x10	; 16
    f930:	1d c0       	rjmp	.+58     	; 0xf96c <vfprintf+0xd2>
    f932:	8d 32       	cpi	r24, 0x2D	; 45
    f934:	61 f0       	breq	.+24     	; 0xf94e <vfprintf+0xb4>
    f936:	80 33       	cpi	r24, 0x30	; 48
    f938:	69 f4       	brne	.+26     	; 0xf954 <vfprintf+0xba>
    f93a:	23 2d       	mov	r18, r3
    f93c:	21 60       	ori	r18, 0x01	; 1
    f93e:	16 c0       	rjmp	.+44     	; 0xf96c <vfprintf+0xd2>
    f940:	83 2d       	mov	r24, r3
    f942:	82 60       	ori	r24, 0x02	; 2
    f944:	38 2e       	mov	r3, r24
    f946:	e3 2d       	mov	r30, r3
    f948:	e4 60       	ori	r30, 0x04	; 4
    f94a:	3e 2e       	mov	r3, r30
    f94c:	2a c0       	rjmp	.+84     	; 0xf9a2 <vfprintf+0x108>
    f94e:	f3 2d       	mov	r31, r3
    f950:	f8 60       	ori	r31, 0x08	; 8
    f952:	1d c0       	rjmp	.+58     	; 0xf98e <vfprintf+0xf4>
    f954:	37 fc       	sbrc	r3, 7
    f956:	2d c0       	rjmp	.+90     	; 0xf9b2 <vfprintf+0x118>
    f958:	20 ed       	ldi	r18, 0xD0	; 208
    f95a:	28 0f       	add	r18, r24
    f95c:	2a 30       	cpi	r18, 0x0A	; 10
    f95e:	40 f0       	brcs	.+16     	; 0xf970 <vfprintf+0xd6>
    f960:	8e 32       	cpi	r24, 0x2E	; 46
    f962:	b9 f4       	brne	.+46     	; 0xf992 <vfprintf+0xf8>
    f964:	36 fc       	sbrc	r3, 6
    f966:	81 c1       	rjmp	.+770    	; 0xfc6a <vfprintf+0x3d0>
    f968:	23 2d       	mov	r18, r3
    f96a:	20 64       	ori	r18, 0x40	; 64
    f96c:	32 2e       	mov	r3, r18
    f96e:	19 c0       	rjmp	.+50     	; 0xf9a2 <vfprintf+0x108>
    f970:	36 fe       	sbrs	r3, 6
    f972:	06 c0       	rjmp	.+12     	; 0xf980 <vfprintf+0xe6>
    f974:	8a e0       	ldi	r24, 0x0A	; 10
    f976:	98 9e       	mul	r9, r24
    f978:	20 0d       	add	r18, r0
    f97a:	11 24       	eor	r1, r1
    f97c:	92 2e       	mov	r9, r18
    f97e:	11 c0       	rjmp	.+34     	; 0xf9a2 <vfprintf+0x108>
    f980:	ea e0       	ldi	r30, 0x0A	; 10
    f982:	2e 9e       	mul	r2, r30
    f984:	20 0d       	add	r18, r0
    f986:	11 24       	eor	r1, r1
    f988:	22 2e       	mov	r2, r18
    f98a:	f3 2d       	mov	r31, r3
    f98c:	f0 62       	ori	r31, 0x20	; 32
    f98e:	3f 2e       	mov	r3, r31
    f990:	08 c0       	rjmp	.+16     	; 0xf9a2 <vfprintf+0x108>
    f992:	8c 36       	cpi	r24, 0x6C	; 108
    f994:	21 f4       	brne	.+8      	; 0xf99e <vfprintf+0x104>
    f996:	83 2d       	mov	r24, r3
    f998:	80 68       	ori	r24, 0x80	; 128
    f99a:	38 2e       	mov	r3, r24
    f99c:	02 c0       	rjmp	.+4      	; 0xf9a2 <vfprintf+0x108>
    f99e:	88 36       	cpi	r24, 0x68	; 104
    f9a0:	41 f4       	brne	.+16     	; 0xf9b2 <vfprintf+0x118>
    f9a2:	f7 01       	movw	r30, r14
    f9a4:	93 fd       	sbrc	r25, 3
    f9a6:	85 91       	lpm	r24, Z+
    f9a8:	93 ff       	sbrs	r25, 3
    f9aa:	81 91       	ld	r24, Z+
    f9ac:	7f 01       	movw	r14, r30
    f9ae:	81 11       	cpse	r24, r1
    f9b0:	b3 cf       	rjmp	.-154    	; 0xf918 <vfprintf+0x7e>
    f9b2:	98 2f       	mov	r25, r24
    f9b4:	9f 7d       	andi	r25, 0xDF	; 223
    f9b6:	95 54       	subi	r25, 0x45	; 69
    f9b8:	93 30       	cpi	r25, 0x03	; 3
    f9ba:	28 f4       	brcc	.+10     	; 0xf9c6 <vfprintf+0x12c>
    f9bc:	0c 5f       	subi	r16, 0xFC	; 252
    f9be:	1f 4f       	sbci	r17, 0xFF	; 255
    f9c0:	9f e3       	ldi	r25, 0x3F	; 63
    f9c2:	99 83       	std	Y+1, r25	; 0x01
    f9c4:	0d c0       	rjmp	.+26     	; 0xf9e0 <vfprintf+0x146>
    f9c6:	83 36       	cpi	r24, 0x63	; 99
    f9c8:	31 f0       	breq	.+12     	; 0xf9d6 <vfprintf+0x13c>
    f9ca:	83 37       	cpi	r24, 0x73	; 115
    f9cc:	71 f0       	breq	.+28     	; 0xf9ea <vfprintf+0x150>
    f9ce:	83 35       	cpi	r24, 0x53	; 83
    f9d0:	09 f0       	breq	.+2      	; 0xf9d4 <vfprintf+0x13a>
    f9d2:	59 c0       	rjmp	.+178    	; 0xfa86 <vfprintf+0x1ec>
    f9d4:	21 c0       	rjmp	.+66     	; 0xfa18 <vfprintf+0x17e>
    f9d6:	f8 01       	movw	r30, r16
    f9d8:	80 81       	ld	r24, Z
    f9da:	89 83       	std	Y+1, r24	; 0x01
    f9dc:	0e 5f       	subi	r16, 0xFE	; 254
    f9de:	1f 4f       	sbci	r17, 0xFF	; 255
    f9e0:	88 24       	eor	r8, r8
    f9e2:	83 94       	inc	r8
    f9e4:	91 2c       	mov	r9, r1
    f9e6:	53 01       	movw	r10, r6
    f9e8:	13 c0       	rjmp	.+38     	; 0xfa10 <vfprintf+0x176>
    f9ea:	28 01       	movw	r4, r16
    f9ec:	f2 e0       	ldi	r31, 0x02	; 2
    f9ee:	4f 0e       	add	r4, r31
    f9f0:	51 1c       	adc	r5, r1
    f9f2:	f8 01       	movw	r30, r16
    f9f4:	a0 80       	ld	r10, Z
    f9f6:	b1 80       	ldd	r11, Z+1	; 0x01
    f9f8:	36 fe       	sbrs	r3, 6
    f9fa:	03 c0       	rjmp	.+6      	; 0xfa02 <vfprintf+0x168>
    f9fc:	69 2d       	mov	r22, r9
    f9fe:	70 e0       	ldi	r23, 0x00	; 0
    fa00:	02 c0       	rjmp	.+4      	; 0xfa06 <vfprintf+0x16c>
    fa02:	6f ef       	ldi	r22, 0xFF	; 255
    fa04:	7f ef       	ldi	r23, 0xFF	; 255
    fa06:	c5 01       	movw	r24, r10
    fa08:	0e 94 d9 7f 	call	0xffb2	; 0xffb2 <strnlen>
    fa0c:	4c 01       	movw	r8, r24
    fa0e:	82 01       	movw	r16, r4
    fa10:	f3 2d       	mov	r31, r3
    fa12:	ff 77       	andi	r31, 0x7F	; 127
    fa14:	3f 2e       	mov	r3, r31
    fa16:	16 c0       	rjmp	.+44     	; 0xfa44 <vfprintf+0x1aa>
    fa18:	28 01       	movw	r4, r16
    fa1a:	22 e0       	ldi	r18, 0x02	; 2
    fa1c:	42 0e       	add	r4, r18
    fa1e:	51 1c       	adc	r5, r1
    fa20:	f8 01       	movw	r30, r16
    fa22:	a0 80       	ld	r10, Z
    fa24:	b1 80       	ldd	r11, Z+1	; 0x01
    fa26:	36 fe       	sbrs	r3, 6
    fa28:	03 c0       	rjmp	.+6      	; 0xfa30 <vfprintf+0x196>
    fa2a:	69 2d       	mov	r22, r9
    fa2c:	70 e0       	ldi	r23, 0x00	; 0
    fa2e:	02 c0       	rjmp	.+4      	; 0xfa34 <vfprintf+0x19a>
    fa30:	6f ef       	ldi	r22, 0xFF	; 255
    fa32:	7f ef       	ldi	r23, 0xFF	; 255
    fa34:	c5 01       	movw	r24, r10
    fa36:	0e 94 ce 7f 	call	0xff9c	; 0xff9c <strnlen_P>
    fa3a:	4c 01       	movw	r8, r24
    fa3c:	f3 2d       	mov	r31, r3
    fa3e:	f0 68       	ori	r31, 0x80	; 128
    fa40:	3f 2e       	mov	r3, r31
    fa42:	82 01       	movw	r16, r4
    fa44:	33 fc       	sbrc	r3, 3
    fa46:	1b c0       	rjmp	.+54     	; 0xfa7e <vfprintf+0x1e4>
    fa48:	82 2d       	mov	r24, r2
    fa4a:	90 e0       	ldi	r25, 0x00	; 0
    fa4c:	88 16       	cp	r8, r24
    fa4e:	99 06       	cpc	r9, r25
    fa50:	b0 f4       	brcc	.+44     	; 0xfa7e <vfprintf+0x1e4>
    fa52:	b6 01       	movw	r22, r12
    fa54:	80 e2       	ldi	r24, 0x20	; 32
    fa56:	90 e0       	ldi	r25, 0x00	; 0
    fa58:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fa5c:	2a 94       	dec	r2
    fa5e:	f4 cf       	rjmp	.-24     	; 0xfa48 <vfprintf+0x1ae>
    fa60:	f5 01       	movw	r30, r10
    fa62:	37 fc       	sbrc	r3, 7
    fa64:	85 91       	lpm	r24, Z+
    fa66:	37 fe       	sbrs	r3, 7
    fa68:	81 91       	ld	r24, Z+
    fa6a:	5f 01       	movw	r10, r30
    fa6c:	b6 01       	movw	r22, r12
    fa6e:	90 e0       	ldi	r25, 0x00	; 0
    fa70:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fa74:	21 10       	cpse	r2, r1
    fa76:	2a 94       	dec	r2
    fa78:	21 e0       	ldi	r18, 0x01	; 1
    fa7a:	82 1a       	sub	r8, r18
    fa7c:	91 08       	sbc	r9, r1
    fa7e:	81 14       	cp	r8, r1
    fa80:	91 04       	cpc	r9, r1
    fa82:	71 f7       	brne	.-36     	; 0xfa60 <vfprintf+0x1c6>
    fa84:	e8 c0       	rjmp	.+464    	; 0xfc56 <vfprintf+0x3bc>
    fa86:	84 36       	cpi	r24, 0x64	; 100
    fa88:	11 f0       	breq	.+4      	; 0xfa8e <vfprintf+0x1f4>
    fa8a:	89 36       	cpi	r24, 0x69	; 105
    fa8c:	41 f5       	brne	.+80     	; 0xfade <vfprintf+0x244>
    fa8e:	f8 01       	movw	r30, r16
    fa90:	37 fe       	sbrs	r3, 7
    fa92:	07 c0       	rjmp	.+14     	; 0xfaa2 <vfprintf+0x208>
    fa94:	60 81       	ld	r22, Z
    fa96:	71 81       	ldd	r23, Z+1	; 0x01
    fa98:	82 81       	ldd	r24, Z+2	; 0x02
    fa9a:	93 81       	ldd	r25, Z+3	; 0x03
    fa9c:	0c 5f       	subi	r16, 0xFC	; 252
    fa9e:	1f 4f       	sbci	r17, 0xFF	; 255
    faa0:	08 c0       	rjmp	.+16     	; 0xfab2 <vfprintf+0x218>
    faa2:	60 81       	ld	r22, Z
    faa4:	71 81       	ldd	r23, Z+1	; 0x01
    faa6:	07 2e       	mov	r0, r23
    faa8:	00 0c       	add	r0, r0
    faaa:	88 0b       	sbc	r24, r24
    faac:	99 0b       	sbc	r25, r25
    faae:	0e 5f       	subi	r16, 0xFE	; 254
    fab0:	1f 4f       	sbci	r17, 0xFF	; 255
    fab2:	f3 2d       	mov	r31, r3
    fab4:	ff 76       	andi	r31, 0x6F	; 111
    fab6:	3f 2e       	mov	r3, r31
    fab8:	97 ff       	sbrs	r25, 7
    faba:	09 c0       	rjmp	.+18     	; 0xface <vfprintf+0x234>
    fabc:	90 95       	com	r25
    fabe:	80 95       	com	r24
    fac0:	70 95       	com	r23
    fac2:	61 95       	neg	r22
    fac4:	7f 4f       	sbci	r23, 0xFF	; 255
    fac6:	8f 4f       	sbci	r24, 0xFF	; 255
    fac8:	9f 4f       	sbci	r25, 0xFF	; 255
    faca:	f0 68       	ori	r31, 0x80	; 128
    facc:	3f 2e       	mov	r3, r31
    face:	2a e0       	ldi	r18, 0x0A	; 10
    fad0:	30 e0       	ldi	r19, 0x00	; 0
    fad2:	a3 01       	movw	r20, r6
    fad4:	0e 94 20 80 	call	0x10040	; 0x10040 <__ultoa_invert>
    fad8:	88 2e       	mov	r8, r24
    fada:	86 18       	sub	r8, r6
    fadc:	45 c0       	rjmp	.+138    	; 0xfb68 <vfprintf+0x2ce>
    fade:	85 37       	cpi	r24, 0x75	; 117
    fae0:	31 f4       	brne	.+12     	; 0xfaee <vfprintf+0x254>
    fae2:	23 2d       	mov	r18, r3
    fae4:	2f 7e       	andi	r18, 0xEF	; 239
    fae6:	b2 2e       	mov	r11, r18
    fae8:	2a e0       	ldi	r18, 0x0A	; 10
    faea:	30 e0       	ldi	r19, 0x00	; 0
    faec:	25 c0       	rjmp	.+74     	; 0xfb38 <vfprintf+0x29e>
    faee:	93 2d       	mov	r25, r3
    faf0:	99 7f       	andi	r25, 0xF9	; 249
    faf2:	b9 2e       	mov	r11, r25
    faf4:	8f 36       	cpi	r24, 0x6F	; 111
    faf6:	c1 f0       	breq	.+48     	; 0xfb28 <vfprintf+0x28e>
    faf8:	18 f4       	brcc	.+6      	; 0xfb00 <vfprintf+0x266>
    fafa:	88 35       	cpi	r24, 0x58	; 88
    fafc:	79 f0       	breq	.+30     	; 0xfb1c <vfprintf+0x282>
    fafe:	b5 c0       	rjmp	.+362    	; 0xfc6a <vfprintf+0x3d0>
    fb00:	80 37       	cpi	r24, 0x70	; 112
    fb02:	19 f0       	breq	.+6      	; 0xfb0a <vfprintf+0x270>
    fb04:	88 37       	cpi	r24, 0x78	; 120
    fb06:	21 f0       	breq	.+8      	; 0xfb10 <vfprintf+0x276>
    fb08:	b0 c0       	rjmp	.+352    	; 0xfc6a <vfprintf+0x3d0>
    fb0a:	e9 2f       	mov	r30, r25
    fb0c:	e0 61       	ori	r30, 0x10	; 16
    fb0e:	be 2e       	mov	r11, r30
    fb10:	b4 fe       	sbrs	r11, 4
    fb12:	0d c0       	rjmp	.+26     	; 0xfb2e <vfprintf+0x294>
    fb14:	fb 2d       	mov	r31, r11
    fb16:	f4 60       	ori	r31, 0x04	; 4
    fb18:	bf 2e       	mov	r11, r31
    fb1a:	09 c0       	rjmp	.+18     	; 0xfb2e <vfprintf+0x294>
    fb1c:	34 fe       	sbrs	r3, 4
    fb1e:	0a c0       	rjmp	.+20     	; 0xfb34 <vfprintf+0x29a>
    fb20:	29 2f       	mov	r18, r25
    fb22:	26 60       	ori	r18, 0x06	; 6
    fb24:	b2 2e       	mov	r11, r18
    fb26:	06 c0       	rjmp	.+12     	; 0xfb34 <vfprintf+0x29a>
    fb28:	28 e0       	ldi	r18, 0x08	; 8
    fb2a:	30 e0       	ldi	r19, 0x00	; 0
    fb2c:	05 c0       	rjmp	.+10     	; 0xfb38 <vfprintf+0x29e>
    fb2e:	20 e1       	ldi	r18, 0x10	; 16
    fb30:	30 e0       	ldi	r19, 0x00	; 0
    fb32:	02 c0       	rjmp	.+4      	; 0xfb38 <vfprintf+0x29e>
    fb34:	20 e1       	ldi	r18, 0x10	; 16
    fb36:	32 e0       	ldi	r19, 0x02	; 2
    fb38:	f8 01       	movw	r30, r16
    fb3a:	b7 fe       	sbrs	r11, 7
    fb3c:	07 c0       	rjmp	.+14     	; 0xfb4c <vfprintf+0x2b2>
    fb3e:	60 81       	ld	r22, Z
    fb40:	71 81       	ldd	r23, Z+1	; 0x01
    fb42:	82 81       	ldd	r24, Z+2	; 0x02
    fb44:	93 81       	ldd	r25, Z+3	; 0x03
    fb46:	0c 5f       	subi	r16, 0xFC	; 252
    fb48:	1f 4f       	sbci	r17, 0xFF	; 255
    fb4a:	06 c0       	rjmp	.+12     	; 0xfb58 <vfprintf+0x2be>
    fb4c:	60 81       	ld	r22, Z
    fb4e:	71 81       	ldd	r23, Z+1	; 0x01
    fb50:	80 e0       	ldi	r24, 0x00	; 0
    fb52:	90 e0       	ldi	r25, 0x00	; 0
    fb54:	0e 5f       	subi	r16, 0xFE	; 254
    fb56:	1f 4f       	sbci	r17, 0xFF	; 255
    fb58:	a3 01       	movw	r20, r6
    fb5a:	0e 94 20 80 	call	0x10040	; 0x10040 <__ultoa_invert>
    fb5e:	88 2e       	mov	r8, r24
    fb60:	86 18       	sub	r8, r6
    fb62:	fb 2d       	mov	r31, r11
    fb64:	ff 77       	andi	r31, 0x7F	; 127
    fb66:	3f 2e       	mov	r3, r31
    fb68:	36 fe       	sbrs	r3, 6
    fb6a:	0d c0       	rjmp	.+26     	; 0xfb86 <vfprintf+0x2ec>
    fb6c:	23 2d       	mov	r18, r3
    fb6e:	2e 7f       	andi	r18, 0xFE	; 254
    fb70:	a2 2e       	mov	r10, r18
    fb72:	89 14       	cp	r8, r9
    fb74:	58 f4       	brcc	.+22     	; 0xfb8c <vfprintf+0x2f2>
    fb76:	34 fe       	sbrs	r3, 4
    fb78:	0b c0       	rjmp	.+22     	; 0xfb90 <vfprintf+0x2f6>
    fb7a:	32 fc       	sbrc	r3, 2
    fb7c:	09 c0       	rjmp	.+18     	; 0xfb90 <vfprintf+0x2f6>
    fb7e:	83 2d       	mov	r24, r3
    fb80:	8e 7e       	andi	r24, 0xEE	; 238
    fb82:	a8 2e       	mov	r10, r24
    fb84:	05 c0       	rjmp	.+10     	; 0xfb90 <vfprintf+0x2f6>
    fb86:	b8 2c       	mov	r11, r8
    fb88:	a3 2c       	mov	r10, r3
    fb8a:	03 c0       	rjmp	.+6      	; 0xfb92 <vfprintf+0x2f8>
    fb8c:	b8 2c       	mov	r11, r8
    fb8e:	01 c0       	rjmp	.+2      	; 0xfb92 <vfprintf+0x2f8>
    fb90:	b9 2c       	mov	r11, r9
    fb92:	a4 fe       	sbrs	r10, 4
    fb94:	0f c0       	rjmp	.+30     	; 0xfbb4 <vfprintf+0x31a>
    fb96:	fe 01       	movw	r30, r28
    fb98:	e8 0d       	add	r30, r8
    fb9a:	f1 1d       	adc	r31, r1
    fb9c:	80 81       	ld	r24, Z
    fb9e:	80 33       	cpi	r24, 0x30	; 48
    fba0:	21 f4       	brne	.+8      	; 0xfbaa <vfprintf+0x310>
    fba2:	9a 2d       	mov	r25, r10
    fba4:	99 7e       	andi	r25, 0xE9	; 233
    fba6:	a9 2e       	mov	r10, r25
    fba8:	09 c0       	rjmp	.+18     	; 0xfbbc <vfprintf+0x322>
    fbaa:	a2 fe       	sbrs	r10, 2
    fbac:	06 c0       	rjmp	.+12     	; 0xfbba <vfprintf+0x320>
    fbae:	b3 94       	inc	r11
    fbb0:	b3 94       	inc	r11
    fbb2:	04 c0       	rjmp	.+8      	; 0xfbbc <vfprintf+0x322>
    fbb4:	8a 2d       	mov	r24, r10
    fbb6:	86 78       	andi	r24, 0x86	; 134
    fbb8:	09 f0       	breq	.+2      	; 0xfbbc <vfprintf+0x322>
    fbba:	b3 94       	inc	r11
    fbbc:	a3 fc       	sbrc	r10, 3
    fbbe:	11 c0       	rjmp	.+34     	; 0xfbe2 <vfprintf+0x348>
    fbc0:	a0 fe       	sbrs	r10, 0
    fbc2:	06 c0       	rjmp	.+12     	; 0xfbd0 <vfprintf+0x336>
    fbc4:	b2 14       	cp	r11, r2
    fbc6:	88 f4       	brcc	.+34     	; 0xfbea <vfprintf+0x350>
    fbc8:	28 0c       	add	r2, r8
    fbca:	92 2c       	mov	r9, r2
    fbcc:	9b 18       	sub	r9, r11
    fbce:	0e c0       	rjmp	.+28     	; 0xfbec <vfprintf+0x352>
    fbd0:	b2 14       	cp	r11, r2
    fbd2:	60 f4       	brcc	.+24     	; 0xfbec <vfprintf+0x352>
    fbd4:	b6 01       	movw	r22, r12
    fbd6:	80 e2       	ldi	r24, 0x20	; 32
    fbd8:	90 e0       	ldi	r25, 0x00	; 0
    fbda:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fbde:	b3 94       	inc	r11
    fbe0:	f7 cf       	rjmp	.-18     	; 0xfbd0 <vfprintf+0x336>
    fbe2:	b2 14       	cp	r11, r2
    fbe4:	18 f4       	brcc	.+6      	; 0xfbec <vfprintf+0x352>
    fbe6:	2b 18       	sub	r2, r11
    fbe8:	02 c0       	rjmp	.+4      	; 0xfbee <vfprintf+0x354>
    fbea:	98 2c       	mov	r9, r8
    fbec:	21 2c       	mov	r2, r1
    fbee:	a4 fe       	sbrs	r10, 4
    fbf0:	10 c0       	rjmp	.+32     	; 0xfc12 <vfprintf+0x378>
    fbf2:	b6 01       	movw	r22, r12
    fbf4:	80 e3       	ldi	r24, 0x30	; 48
    fbf6:	90 e0       	ldi	r25, 0x00	; 0
    fbf8:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fbfc:	a2 fe       	sbrs	r10, 2
    fbfe:	17 c0       	rjmp	.+46     	; 0xfc2e <vfprintf+0x394>
    fc00:	a1 fc       	sbrc	r10, 1
    fc02:	03 c0       	rjmp	.+6      	; 0xfc0a <vfprintf+0x370>
    fc04:	88 e7       	ldi	r24, 0x78	; 120
    fc06:	90 e0       	ldi	r25, 0x00	; 0
    fc08:	02 c0       	rjmp	.+4      	; 0xfc0e <vfprintf+0x374>
    fc0a:	88 e5       	ldi	r24, 0x58	; 88
    fc0c:	90 e0       	ldi	r25, 0x00	; 0
    fc0e:	b6 01       	movw	r22, r12
    fc10:	0c c0       	rjmp	.+24     	; 0xfc2a <vfprintf+0x390>
    fc12:	8a 2d       	mov	r24, r10
    fc14:	86 78       	andi	r24, 0x86	; 134
    fc16:	59 f0       	breq	.+22     	; 0xfc2e <vfprintf+0x394>
    fc18:	a1 fe       	sbrs	r10, 1
    fc1a:	02 c0       	rjmp	.+4      	; 0xfc20 <vfprintf+0x386>
    fc1c:	8b e2       	ldi	r24, 0x2B	; 43
    fc1e:	01 c0       	rjmp	.+2      	; 0xfc22 <vfprintf+0x388>
    fc20:	80 e2       	ldi	r24, 0x20	; 32
    fc22:	a7 fc       	sbrc	r10, 7
    fc24:	8d e2       	ldi	r24, 0x2D	; 45
    fc26:	b6 01       	movw	r22, r12
    fc28:	90 e0       	ldi	r25, 0x00	; 0
    fc2a:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fc2e:	89 14       	cp	r8, r9
    fc30:	38 f4       	brcc	.+14     	; 0xfc40 <vfprintf+0x3a6>
    fc32:	b6 01       	movw	r22, r12
    fc34:	80 e3       	ldi	r24, 0x30	; 48
    fc36:	90 e0       	ldi	r25, 0x00	; 0
    fc38:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fc3c:	9a 94       	dec	r9
    fc3e:	f7 cf       	rjmp	.-18     	; 0xfc2e <vfprintf+0x394>
    fc40:	8a 94       	dec	r8
    fc42:	f3 01       	movw	r30, r6
    fc44:	e8 0d       	add	r30, r8
    fc46:	f1 1d       	adc	r31, r1
    fc48:	80 81       	ld	r24, Z
    fc4a:	b6 01       	movw	r22, r12
    fc4c:	90 e0       	ldi	r25, 0x00	; 0
    fc4e:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fc52:	81 10       	cpse	r8, r1
    fc54:	f5 cf       	rjmp	.-22     	; 0xfc40 <vfprintf+0x3a6>
    fc56:	22 20       	and	r2, r2
    fc58:	09 f4       	brne	.+2      	; 0xfc5c <vfprintf+0x3c2>
    fc5a:	42 ce       	rjmp	.-892    	; 0xf8e0 <vfprintf+0x46>
    fc5c:	b6 01       	movw	r22, r12
    fc5e:	80 e2       	ldi	r24, 0x20	; 32
    fc60:	90 e0       	ldi	r25, 0x00	; 0
    fc62:	0e 94 e4 7f 	call	0xffc8	; 0xffc8 <fputc>
    fc66:	2a 94       	dec	r2
    fc68:	f6 cf       	rjmp	.-20     	; 0xfc56 <vfprintf+0x3bc>
    fc6a:	f6 01       	movw	r30, r12
    fc6c:	86 81       	ldd	r24, Z+6	; 0x06
    fc6e:	97 81       	ldd	r25, Z+7	; 0x07
    fc70:	02 c0       	rjmp	.+4      	; 0xfc76 <vfprintf+0x3dc>
    fc72:	8f ef       	ldi	r24, 0xFF	; 255
    fc74:	9f ef       	ldi	r25, 0xFF	; 255
    fc76:	2b 96       	adiw	r28, 0x0b	; 11
    fc78:	cd bf       	out	0x3d, r28	; 61
    fc7a:	de bf       	out	0x3e, r29	; 62
    fc7c:	df 91       	pop	r29
    fc7e:	cf 91       	pop	r28
    fc80:	1f 91       	pop	r17
    fc82:	0f 91       	pop	r16
    fc84:	ff 90       	pop	r15
    fc86:	ef 90       	pop	r14
    fc88:	df 90       	pop	r13
    fc8a:	cf 90       	pop	r12
    fc8c:	bf 90       	pop	r11
    fc8e:	af 90       	pop	r10
    fc90:	9f 90       	pop	r9
    fc92:	8f 90       	pop	r8
    fc94:	7f 90       	pop	r7
    fc96:	6f 90       	pop	r6
    fc98:	5f 90       	pop	r5
    fc9a:	4f 90       	pop	r4
    fc9c:	3f 90       	pop	r3
    fc9e:	2f 90       	pop	r2
    fca0:	08 95       	ret

0000fca2 <strtod>:
    fca2:	8f 92       	push	r8
    fca4:	9f 92       	push	r9
    fca6:	af 92       	push	r10
    fca8:	bf 92       	push	r11
    fcaa:	cf 92       	push	r12
    fcac:	df 92       	push	r13
    fcae:	ef 92       	push	r14
    fcb0:	ff 92       	push	r15
    fcb2:	0f 93       	push	r16
    fcb4:	1f 93       	push	r17
    fcb6:	cf 93       	push	r28
    fcb8:	df 93       	push	r29
    fcba:	ec 01       	movw	r28, r24
    fcbc:	6b 01       	movw	r12, r22
    fcbe:	61 15       	cp	r22, r1
    fcc0:	71 05       	cpc	r23, r1
    fcc2:	19 f0       	breq	.+6      	; 0xfcca <strtod+0x28>
    fcc4:	fb 01       	movw	r30, r22
    fcc6:	80 83       	st	Z, r24
    fcc8:	91 83       	std	Z+1, r25	; 0x01
    fcca:	7e 01       	movw	r14, r28
    fccc:	ff ef       	ldi	r31, 0xFF	; 255
    fcce:	ef 1a       	sub	r14, r31
    fcd0:	ff 0a       	sbc	r15, r31
    fcd2:	08 81       	ld	r16, Y
    fcd4:	80 2f       	mov	r24, r16
    fcd6:	90 e0       	ldi	r25, 0x00	; 0
    fcd8:	0e 94 ad 7f 	call	0xff5a	; 0xff5a <isspace>
    fcdc:	89 2b       	or	r24, r25
    fcde:	11 f0       	breq	.+4      	; 0xfce4 <strtod+0x42>
    fce0:	e7 01       	movw	r28, r14
    fce2:	f3 cf       	rjmp	.-26     	; 0xfcca <strtod+0x28>
    fce4:	0d 32       	cpi	r16, 0x2D	; 45
    fce6:	39 f4       	brne	.+14     	; 0xfcf6 <strtod+0x54>
    fce8:	7e 01       	movw	r14, r28
    fcea:	82 e0       	ldi	r24, 0x02	; 2
    fcec:	e8 0e       	add	r14, r24
    fcee:	f1 1c       	adc	r15, r1
    fcf0:	09 81       	ldd	r16, Y+1	; 0x01
    fcf2:	11 e0       	ldi	r17, 0x01	; 1
    fcf4:	08 c0       	rjmp	.+16     	; 0xfd06 <strtod+0x64>
    fcf6:	0b 32       	cpi	r16, 0x2B	; 43
    fcf8:	29 f4       	brne	.+10     	; 0xfd04 <strtod+0x62>
    fcfa:	7e 01       	movw	r14, r28
    fcfc:	92 e0       	ldi	r25, 0x02	; 2
    fcfe:	e9 0e       	add	r14, r25
    fd00:	f1 1c       	adc	r15, r1
    fd02:	09 81       	ldd	r16, Y+1	; 0x01
    fd04:	10 e0       	ldi	r17, 0x00	; 0
    fd06:	e7 01       	movw	r28, r14
    fd08:	21 97       	sbiw	r28, 0x01	; 1
    fd0a:	43 e0       	ldi	r20, 0x03	; 3
    fd0c:	50 e0       	ldi	r21, 0x00	; 0
    fd0e:	6e ea       	ldi	r22, 0xAE	; 174
    fd10:	72 e0       	ldi	r23, 0x02	; 2
    fd12:	ce 01       	movw	r24, r28
    fd14:	0e 94 b6 7f 	call	0xff6c	; 0xff6c <strncasecmp_P>
    fd18:	89 2b       	or	r24, r25
    fd1a:	c1 f4       	brne	.+48     	; 0xfd4c <strtod+0xaa>
    fd1c:	23 96       	adiw	r28, 0x03	; 3
    fd1e:	45 e0       	ldi	r20, 0x05	; 5
    fd20:	50 e0       	ldi	r21, 0x00	; 0
    fd22:	69 ea       	ldi	r22, 0xA9	; 169
    fd24:	72 e0       	ldi	r23, 0x02	; 2
    fd26:	ce 01       	movw	r24, r28
    fd28:	0e 94 b6 7f 	call	0xff6c	; 0xff6c <strncasecmp_P>
    fd2c:	89 2b       	or	r24, r25
    fd2e:	09 f4       	brne	.+2      	; 0xfd32 <strtod+0x90>
    fd30:	25 96       	adiw	r28, 0x05	; 5
    fd32:	c1 14       	cp	r12, r1
    fd34:	d1 04       	cpc	r13, r1
    fd36:	19 f0       	breq	.+6      	; 0xfd3e <strtod+0x9c>
    fd38:	f6 01       	movw	r30, r12
    fd3a:	c0 83       	st	Z, r28
    fd3c:	d1 83       	std	Z+1, r29	; 0x01
    fd3e:	11 11       	cpse	r17, r1
    fd40:	f6 c0       	rjmp	.+492    	; 0xff2e <strtod+0x28c>
    fd42:	60 e0       	ldi	r22, 0x00	; 0
    fd44:	70 e0       	ldi	r23, 0x00	; 0
    fd46:	80 e8       	ldi	r24, 0x80	; 128
    fd48:	9f e7       	ldi	r25, 0x7F	; 127
    fd4a:	fa c0       	rjmp	.+500    	; 0xff40 <strtod+0x29e>
    fd4c:	43 e0       	ldi	r20, 0x03	; 3
    fd4e:	50 e0       	ldi	r21, 0x00	; 0
    fd50:	66 ea       	ldi	r22, 0xA6	; 166
    fd52:	72 e0       	ldi	r23, 0x02	; 2
    fd54:	ce 01       	movw	r24, r28
    fd56:	0e 94 b6 7f 	call	0xff6c	; 0xff6c <strncasecmp_P>
    fd5a:	89 2b       	or	r24, r25
    fd5c:	59 f4       	brne	.+22     	; 0xfd74 <strtod+0xd2>
    fd5e:	c1 14       	cp	r12, r1
    fd60:	d1 04       	cpc	r13, r1
    fd62:	09 f4       	brne	.+2      	; 0xfd66 <strtod+0xc4>
    fd64:	e9 c0       	rjmp	.+466    	; 0xff38 <strtod+0x296>
    fd66:	f2 e0       	ldi	r31, 0x02	; 2
    fd68:	ef 0e       	add	r14, r31
    fd6a:	f1 1c       	adc	r15, r1
    fd6c:	f6 01       	movw	r30, r12
    fd6e:	e0 82       	st	Z, r14
    fd70:	f1 82       	std	Z+1, r15	; 0x01
    fd72:	e2 c0       	rjmp	.+452    	; 0xff38 <strtod+0x296>
    fd74:	20 e0       	ldi	r18, 0x00	; 0
    fd76:	30 e0       	ldi	r19, 0x00	; 0
    fd78:	a9 01       	movw	r20, r18
    fd7a:	c0 e0       	ldi	r28, 0x00	; 0
    fd7c:	d0 e0       	ldi	r29, 0x00	; 0
    fd7e:	f7 01       	movw	r30, r14
    fd80:	60 ed       	ldi	r22, 0xD0	; 208
    fd82:	a6 2e       	mov	r10, r22
    fd84:	a0 0e       	add	r10, r16
    fd86:	89 e0       	ldi	r24, 0x09	; 9
    fd88:	8a 15       	cp	r24, r10
    fd8a:	30 f1       	brcs	.+76     	; 0xfdd8 <strtod+0x136>
    fd8c:	91 2f       	mov	r25, r17
    fd8e:	92 60       	ori	r25, 0x02	; 2
    fd90:	b9 2e       	mov	r11, r25
    fd92:	81 2f       	mov	r24, r17
    fd94:	88 70       	andi	r24, 0x08	; 8
    fd96:	12 ff       	sbrs	r17, 2
    fd98:	04 c0       	rjmp	.+8      	; 0xfda2 <strtod+0x100>
    fd9a:	81 11       	cpse	r24, r1
    fd9c:	24 c0       	rjmp	.+72     	; 0xfde6 <strtod+0x144>
    fd9e:	21 96       	adiw	r28, 0x01	; 1
    fda0:	22 c0       	rjmp	.+68     	; 0xfde6 <strtod+0x144>
    fda2:	81 11       	cpse	r24, r1
    fda4:	21 97       	sbiw	r28, 0x01	; 1
    fda6:	a5 e0       	ldi	r26, 0x05	; 5
    fda8:	b0 e0       	ldi	r27, 0x00	; 0
    fdaa:	0e 94 45 7a 	call	0xf48a	; 0xf48a <__muluhisi3>
    fdae:	dc 01       	movw	r26, r24
    fdb0:	cb 01       	movw	r24, r22
    fdb2:	88 0f       	add	r24, r24
    fdb4:	99 1f       	adc	r25, r25
    fdb6:	aa 1f       	adc	r26, r26
    fdb8:	bb 1f       	adc	r27, r27
    fdba:	9c 01       	movw	r18, r24
    fdbc:	ad 01       	movw	r20, r26
    fdbe:	2a 0d       	add	r18, r10
    fdc0:	31 1d       	adc	r19, r1
    fdc2:	41 1d       	adc	r20, r1
    fdc4:	51 1d       	adc	r21, r1
    fdc6:	28 39       	cpi	r18, 0x98	; 152
    fdc8:	89 e9       	ldi	r24, 0x99	; 153
    fdca:	38 07       	cpc	r19, r24
    fdcc:	48 07       	cpc	r20, r24
    fdce:	89 e1       	ldi	r24, 0x19	; 25
    fdd0:	58 07       	cpc	r21, r24
    fdd2:	48 f0       	brcs	.+18     	; 0xfde6 <strtod+0x144>
    fdd4:	16 60       	ori	r17, 0x06	; 6
    fdd6:	06 c0       	rjmp	.+12     	; 0xfde4 <strtod+0x142>
    fdd8:	9e ef       	ldi	r25, 0xFE	; 254
    fdda:	a9 12       	cpse	r10, r25
    fddc:	0a c0       	rjmp	.+20     	; 0xfdf2 <strtod+0x150>
    fdde:	13 fd       	sbrc	r17, 3
    fde0:	40 c0       	rjmp	.+128    	; 0xfe62 <strtod+0x1c0>
    fde2:	18 60       	ori	r17, 0x08	; 8
    fde4:	b1 2e       	mov	r11, r17
    fde6:	8f ef       	ldi	r24, 0xFF	; 255
    fde8:	e8 1a       	sub	r14, r24
    fdea:	f8 0a       	sbc	r15, r24
    fdec:	00 81       	ld	r16, Z
    fdee:	1b 2d       	mov	r17, r11
    fdf0:	c6 cf       	rjmp	.-116    	; 0xfd7e <strtod+0xdc>
    fdf2:	80 2f       	mov	r24, r16
    fdf4:	8f 7d       	andi	r24, 0xDF	; 223
    fdf6:	85 34       	cpi	r24, 0x45	; 69
    fdf8:	a1 f5       	brne	.+104    	; 0xfe62 <strtod+0x1c0>
    fdfa:	80 81       	ld	r24, Z
    fdfc:	8d 32       	cpi	r24, 0x2D	; 45
    fdfe:	11 f4       	brne	.+4      	; 0xfe04 <strtod+0x162>
    fe00:	10 61       	ori	r17, 0x10	; 16
    fe02:	06 c0       	rjmp	.+12     	; 0xfe10 <strtod+0x16e>
    fe04:	8b 32       	cpi	r24, 0x2B	; 43
    fe06:	21 f0       	breq	.+8      	; 0xfe10 <strtod+0x16e>
    fe08:	31 96       	adiw	r30, 0x01	; 1
    fe0a:	61 e0       	ldi	r22, 0x01	; 1
    fe0c:	70 e0       	ldi	r23, 0x00	; 0
    fe0e:	04 c0       	rjmp	.+8      	; 0xfe18 <strtod+0x176>
    fe10:	81 81       	ldd	r24, Z+1	; 0x01
    fe12:	32 96       	adiw	r30, 0x02	; 2
    fe14:	62 e0       	ldi	r22, 0x02	; 2
    fe16:	70 e0       	ldi	r23, 0x00	; 0
    fe18:	80 53       	subi	r24, 0x30	; 48
    fe1a:	8a 30       	cpi	r24, 0x0A	; 10
    fe1c:	18 f0       	brcs	.+6      	; 0xfe24 <strtod+0x182>
    fe1e:	e6 1b       	sub	r30, r22
    fe20:	f7 0b       	sbc	r31, r23
    fe22:	1f c0       	rjmp	.+62     	; 0xfe62 <strtod+0x1c0>
    fe24:	60 e0       	ldi	r22, 0x00	; 0
    fe26:	70 e0       	ldi	r23, 0x00	; 0
    fe28:	60 38       	cpi	r22, 0x80	; 128
    fe2a:	9c e0       	ldi	r25, 0x0C	; 12
    fe2c:	79 07       	cpc	r23, r25
    fe2e:	5c f4       	brge	.+22     	; 0xfe46 <strtod+0x1a4>
    fe30:	db 01       	movw	r26, r22
    fe32:	aa 0f       	add	r26, r26
    fe34:	bb 1f       	adc	r27, r27
    fe36:	aa 0f       	add	r26, r26
    fe38:	bb 1f       	adc	r27, r27
    fe3a:	6a 0f       	add	r22, r26
    fe3c:	7b 1f       	adc	r23, r27
    fe3e:	66 0f       	add	r22, r22
    fe40:	77 1f       	adc	r23, r23
    fe42:	68 0f       	add	r22, r24
    fe44:	71 1d       	adc	r23, r1
    fe46:	31 96       	adiw	r30, 0x01	; 1
    fe48:	df 01       	movw	r26, r30
    fe4a:	11 97       	sbiw	r26, 0x01	; 1
    fe4c:	8c 91       	ld	r24, X
    fe4e:	80 53       	subi	r24, 0x30	; 48
    fe50:	8a 30       	cpi	r24, 0x0A	; 10
    fe52:	50 f3       	brcs	.-44     	; 0xfe28 <strtod+0x186>
    fe54:	14 ff       	sbrs	r17, 4
    fe56:	03 c0       	rjmp	.+6      	; 0xfe5e <strtod+0x1bc>
    fe58:	71 95       	neg	r23
    fe5a:	61 95       	neg	r22
    fe5c:	71 09       	sbc	r23, r1
    fe5e:	c6 0f       	add	r28, r22
    fe60:	d7 1f       	adc	r29, r23
    fe62:	11 ff       	sbrs	r17, 1
    fe64:	08 c0       	rjmp	.+16     	; 0xfe76 <strtod+0x1d4>
    fe66:	c1 14       	cp	r12, r1
    fe68:	d1 04       	cpc	r13, r1
    fe6a:	29 f0       	breq	.+10     	; 0xfe76 <strtod+0x1d4>
    fe6c:	cf 01       	movw	r24, r30
    fe6e:	01 97       	sbiw	r24, 0x01	; 1
    fe70:	f6 01       	movw	r30, r12
    fe72:	80 83       	st	Z, r24
    fe74:	91 83       	std	Z+1, r25	; 0x01
    fe76:	ca 01       	movw	r24, r20
    fe78:	b9 01       	movw	r22, r18
    fe7a:	0e 94 4f 78 	call	0xf09e	; 0xf09e <__floatunsisf>
    fe7e:	21 2f       	mov	r18, r17
    fe80:	23 70       	andi	r18, 0x03	; 3
    fe82:	23 30       	cpi	r18, 0x03	; 3
    fe84:	19 f0       	breq	.+6      	; 0xfe8c <strtod+0x1ea>
    fe86:	4b 01       	movw	r8, r22
    fe88:	5c 01       	movw	r10, r24
    fe8a:	06 c0       	rjmp	.+12     	; 0xfe98 <strtod+0x1f6>
    fe8c:	4b 01       	movw	r8, r22
    fe8e:	5c 01       	movw	r10, r24
    fe90:	b7 fa       	bst	r11, 7
    fe92:	b0 94       	com	r11
    fe94:	b7 f8       	bld	r11, 7
    fe96:	b0 94       	com	r11
    fe98:	20 e0       	ldi	r18, 0x00	; 0
    fe9a:	30 e0       	ldi	r19, 0x00	; 0
    fe9c:	a9 01       	movw	r20, r18
    fe9e:	c5 01       	movw	r24, r10
    fea0:	b4 01       	movw	r22, r8
    fea2:	0e 94 a2 77 	call	0xef44	; 0xef44 <__cmpsf2>
    fea6:	88 23       	and	r24, r24
    fea8:	09 f4       	brne	.+2      	; 0xfeac <strtod+0x20a>
    feaa:	3e c0       	rjmp	.+124    	; 0xff28 <strtod+0x286>
    feac:	d7 ff       	sbrs	r29, 7
    feae:	06 c0       	rjmp	.+12     	; 0xfebc <strtod+0x21a>
    feb0:	d1 95       	neg	r29
    feb2:	c1 95       	neg	r28
    feb4:	d1 09       	sbc	r29, r1
    feb6:	05 ec       	ldi	r16, 0xC5	; 197
    feb8:	12 e0       	ldi	r17, 0x02	; 2
    feba:	02 c0       	rjmp	.+4      	; 0xfec0 <strtod+0x21e>
    febc:	0d ed       	ldi	r16, 0xDD	; 221
    febe:	12 e0       	ldi	r17, 0x02	; 2
    fec0:	68 01       	movw	r12, r16
    fec2:	f8 e1       	ldi	r31, 0x18	; 24
    fec4:	cf 1a       	sub	r12, r31
    fec6:	d1 08       	sbc	r13, r1
    fec8:	90 e2       	ldi	r25, 0x20	; 32
    feca:	e9 2e       	mov	r14, r25
    fecc:	f1 2c       	mov	r15, r1
    fece:	ce 15       	cp	r28, r14
    fed0:	df 05       	cpc	r29, r15
    fed2:	74 f0       	brlt	.+28     	; 0xfef0 <strtod+0x24e>
    fed4:	f8 01       	movw	r30, r16
    fed6:	25 91       	lpm	r18, Z+
    fed8:	35 91       	lpm	r19, Z+
    feda:	45 91       	lpm	r20, Z+
    fedc:	54 91       	lpm	r21, Z
    fede:	c5 01       	movw	r24, r10
    fee0:	b4 01       	movw	r22, r8
    fee2:	0e 94 47 79 	call	0xf28e	; 0xf28e <__mulsf3>
    fee6:	4b 01       	movw	r8, r22
    fee8:	5c 01       	movw	r10, r24
    feea:	ce 19       	sub	r28, r14
    feec:	df 09       	sbc	r29, r15
    feee:	ef cf       	rjmp	.-34     	; 0xfece <strtod+0x22c>
    fef0:	04 50       	subi	r16, 0x04	; 4
    fef2:	11 09       	sbc	r17, r1
    fef4:	f5 94       	asr	r15
    fef6:	e7 94       	ror	r14
    fef8:	0c 15       	cp	r16, r12
    fefa:	1d 05       	cpc	r17, r13
    fefc:	41 f7       	brne	.-48     	; 0xfece <strtod+0x22c>
    fefe:	8a 2d       	mov	r24, r10
    ff00:	88 0f       	add	r24, r24
    ff02:	8b 2d       	mov	r24, r11
    ff04:	88 1f       	adc	r24, r24
    ff06:	8f 3f       	cpi	r24, 0xFF	; 255
    ff08:	49 f0       	breq	.+18     	; 0xff1c <strtod+0x27a>
    ff0a:	20 e0       	ldi	r18, 0x00	; 0
    ff0c:	30 e0       	ldi	r19, 0x00	; 0
    ff0e:	a9 01       	movw	r20, r18
    ff10:	c5 01       	movw	r24, r10
    ff12:	b4 01       	movw	r22, r8
    ff14:	0e 94 a2 77 	call	0xef44	; 0xef44 <__cmpsf2>
    ff18:	81 11       	cpse	r24, r1
    ff1a:	06 c0       	rjmp	.+12     	; 0xff28 <strtod+0x286>
    ff1c:	82 e2       	ldi	r24, 0x22	; 34
    ff1e:	90 e0       	ldi	r25, 0x00	; 0
    ff20:	80 93 e5 4a 	sts	0x4AE5, r24	; 0x804ae5 <errno>
    ff24:	90 93 e6 4a 	sts	0x4AE6, r25	; 0x804ae6 <errno+0x1>
    ff28:	c5 01       	movw	r24, r10
    ff2a:	b4 01       	movw	r22, r8
    ff2c:	09 c0       	rjmp	.+18     	; 0xff40 <strtod+0x29e>
    ff2e:	60 e0       	ldi	r22, 0x00	; 0
    ff30:	70 e0       	ldi	r23, 0x00	; 0
    ff32:	80 e8       	ldi	r24, 0x80	; 128
    ff34:	9f ef       	ldi	r25, 0xFF	; 255
    ff36:	04 c0       	rjmp	.+8      	; 0xff40 <strtod+0x29e>
    ff38:	60 e0       	ldi	r22, 0x00	; 0
    ff3a:	70 e0       	ldi	r23, 0x00	; 0
    ff3c:	80 ec       	ldi	r24, 0xC0	; 192
    ff3e:	9f e7       	ldi	r25, 0x7F	; 127
    ff40:	df 91       	pop	r29
    ff42:	cf 91       	pop	r28
    ff44:	1f 91       	pop	r17
    ff46:	0f 91       	pop	r16
    ff48:	ff 90       	pop	r15
    ff4a:	ef 90       	pop	r14
    ff4c:	df 90       	pop	r13
    ff4e:	cf 90       	pop	r12
    ff50:	bf 90       	pop	r11
    ff52:	af 90       	pop	r10
    ff54:	9f 90       	pop	r9
    ff56:	8f 90       	pop	r8
    ff58:	08 95       	ret

0000ff5a <isspace>:
    ff5a:	91 11       	cpse	r25, r1
    ff5c:	0c 94 7e 80 	jmp	0x100fc	; 0x100fc <__ctype_isfalse>
    ff60:	80 32       	cpi	r24, 0x20	; 32
    ff62:	19 f0       	breq	.+6      	; 0xff6a <isspace+0x10>
    ff64:	89 50       	subi	r24, 0x09	; 9
    ff66:	85 50       	subi	r24, 0x05	; 5
    ff68:	c8 f7       	brcc	.-14     	; 0xff5c <isspace+0x2>
    ff6a:	08 95       	ret

0000ff6c <strncasecmp_P>:
    ff6c:	fb 01       	movw	r30, r22
    ff6e:	dc 01       	movw	r26, r24
    ff70:	41 50       	subi	r20, 0x01	; 1
    ff72:	50 40       	sbci	r21, 0x00	; 0
    ff74:	88 f0       	brcs	.+34     	; 0xff98 <strncasecmp_P+0x2c>
    ff76:	8d 91       	ld	r24, X+
    ff78:	81 34       	cpi	r24, 0x41	; 65
    ff7a:	1c f0       	brlt	.+6      	; 0xff82 <strncasecmp_P+0x16>
    ff7c:	8b 35       	cpi	r24, 0x5B	; 91
    ff7e:	0c f4       	brge	.+2      	; 0xff82 <strncasecmp_P+0x16>
    ff80:	80 5e       	subi	r24, 0xE0	; 224
    ff82:	65 91       	lpm	r22, Z+
    ff84:	61 34       	cpi	r22, 0x41	; 65
    ff86:	1c f0       	brlt	.+6      	; 0xff8e <strncasecmp_P+0x22>
    ff88:	6b 35       	cpi	r22, 0x5B	; 91
    ff8a:	0c f4       	brge	.+2      	; 0xff8e <strncasecmp_P+0x22>
    ff8c:	60 5e       	subi	r22, 0xE0	; 224
    ff8e:	86 1b       	sub	r24, r22
    ff90:	61 11       	cpse	r22, r1
    ff92:	71 f3       	breq	.-36     	; 0xff70 <strncasecmp_P+0x4>
    ff94:	99 0b       	sbc	r25, r25
    ff96:	08 95       	ret
    ff98:	88 1b       	sub	r24, r24
    ff9a:	fc cf       	rjmp	.-8      	; 0xff94 <strncasecmp_P+0x28>

0000ff9c <strnlen_P>:
    ff9c:	fc 01       	movw	r30, r24
    ff9e:	05 90       	lpm	r0, Z+
    ffa0:	61 50       	subi	r22, 0x01	; 1
    ffa2:	70 40       	sbci	r23, 0x00	; 0
    ffa4:	01 10       	cpse	r0, r1
    ffa6:	d8 f7       	brcc	.-10     	; 0xff9e <strnlen_P+0x2>
    ffa8:	80 95       	com	r24
    ffaa:	90 95       	com	r25
    ffac:	8e 0f       	add	r24, r30
    ffae:	9f 1f       	adc	r25, r31
    ffb0:	08 95       	ret

0000ffb2 <strnlen>:
    ffb2:	fc 01       	movw	r30, r24
    ffb4:	61 50       	subi	r22, 0x01	; 1
    ffb6:	70 40       	sbci	r23, 0x00	; 0
    ffb8:	01 90       	ld	r0, Z+
    ffba:	01 10       	cpse	r0, r1
    ffbc:	d8 f7       	brcc	.-10     	; 0xffb4 <strnlen+0x2>
    ffbe:	80 95       	com	r24
    ffc0:	90 95       	com	r25
    ffc2:	8e 0f       	add	r24, r30
    ffc4:	9f 1f       	adc	r25, r31
    ffc6:	08 95       	ret

0000ffc8 <fputc>:
    ffc8:	0f 93       	push	r16
    ffca:	1f 93       	push	r17
    ffcc:	cf 93       	push	r28
    ffce:	df 93       	push	r29
    ffd0:	fb 01       	movw	r30, r22
    ffd2:	23 81       	ldd	r18, Z+3	; 0x03
    ffd4:	21 fd       	sbrc	r18, 1
    ffd6:	03 c0       	rjmp	.+6      	; 0xffde <fputc+0x16>
    ffd8:	8f ef       	ldi	r24, 0xFF	; 255
    ffda:	9f ef       	ldi	r25, 0xFF	; 255
    ffdc:	2c c0       	rjmp	.+88     	; 0x10036 <fputc+0x6e>
    ffde:	22 ff       	sbrs	r18, 2
    ffe0:	16 c0       	rjmp	.+44     	; 0x1000e <fputc+0x46>
    ffe2:	46 81       	ldd	r20, Z+6	; 0x06
    ffe4:	57 81       	ldd	r21, Z+7	; 0x07
    ffe6:	24 81       	ldd	r18, Z+4	; 0x04
    ffe8:	35 81       	ldd	r19, Z+5	; 0x05
    ffea:	42 17       	cp	r20, r18
    ffec:	53 07       	cpc	r21, r19
    ffee:	44 f4       	brge	.+16     	; 0x10000 <fputc+0x38>
    fff0:	a0 81       	ld	r26, Z
    fff2:	b1 81       	ldd	r27, Z+1	; 0x01
    fff4:	9d 01       	movw	r18, r26
    fff6:	2f 5f       	subi	r18, 0xFF	; 255
    fff8:	3f 4f       	sbci	r19, 0xFF	; 255
    fffa:	20 83       	st	Z, r18
    fffc:	31 83       	std	Z+1, r19	; 0x01
    fffe:	8c 93       	st	X, r24
   10000:	26 81       	ldd	r18, Z+6	; 0x06
   10002:	37 81       	ldd	r19, Z+7	; 0x07
   10004:	2f 5f       	subi	r18, 0xFF	; 255
   10006:	3f 4f       	sbci	r19, 0xFF	; 255
   10008:	26 83       	std	Z+6, r18	; 0x06
   1000a:	37 83       	std	Z+7, r19	; 0x07
   1000c:	14 c0       	rjmp	.+40     	; 0x10036 <fputc+0x6e>
   1000e:	8b 01       	movw	r16, r22
   10010:	ec 01       	movw	r28, r24
   10012:	fb 01       	movw	r30, r22
   10014:	00 84       	ldd	r0, Z+8	; 0x08
   10016:	f1 85       	ldd	r31, Z+9	; 0x09
   10018:	e0 2d       	mov	r30, r0
   1001a:	09 95       	icall
   1001c:	89 2b       	or	r24, r25
   1001e:	e1 f6       	brne	.-72     	; 0xffd8 <fputc+0x10>
   10020:	d8 01       	movw	r26, r16
   10022:	16 96       	adiw	r26, 0x06	; 6
   10024:	8d 91       	ld	r24, X+
   10026:	9c 91       	ld	r25, X
   10028:	17 97       	sbiw	r26, 0x07	; 7
   1002a:	01 96       	adiw	r24, 0x01	; 1
   1002c:	16 96       	adiw	r26, 0x06	; 6
   1002e:	8d 93       	st	X+, r24
   10030:	9c 93       	st	X, r25
   10032:	17 97       	sbiw	r26, 0x07	; 7
   10034:	ce 01       	movw	r24, r28
   10036:	df 91       	pop	r29
   10038:	cf 91       	pop	r28
   1003a:	1f 91       	pop	r17
   1003c:	0f 91       	pop	r16
   1003e:	08 95       	ret

00010040 <__ultoa_invert>:
   10040:	fa 01       	movw	r30, r20
   10042:	aa 27       	eor	r26, r26
   10044:	28 30       	cpi	r18, 0x08	; 8
   10046:	51 f1       	breq	.+84     	; 0x1009c <__ultoa_invert+0x5c>
   10048:	20 31       	cpi	r18, 0x10	; 16
   1004a:	81 f1       	breq	.+96     	; 0x100ac <__ultoa_invert+0x6c>
   1004c:	e8 94       	clt
   1004e:	6f 93       	push	r22
   10050:	6e 7f       	andi	r22, 0xFE	; 254
   10052:	6e 5f       	subi	r22, 0xFE	; 254
   10054:	7f 4f       	sbci	r23, 0xFF	; 255
   10056:	8f 4f       	sbci	r24, 0xFF	; 255
   10058:	9f 4f       	sbci	r25, 0xFF	; 255
   1005a:	af 4f       	sbci	r26, 0xFF	; 255
   1005c:	b1 e0       	ldi	r27, 0x01	; 1
   1005e:	3e d0       	rcall	.+124    	; 0x100dc <__ultoa_invert+0x9c>
   10060:	b4 e0       	ldi	r27, 0x04	; 4
   10062:	3c d0       	rcall	.+120    	; 0x100dc <__ultoa_invert+0x9c>
   10064:	67 0f       	add	r22, r23
   10066:	78 1f       	adc	r23, r24
   10068:	89 1f       	adc	r24, r25
   1006a:	9a 1f       	adc	r25, r26
   1006c:	a1 1d       	adc	r26, r1
   1006e:	68 0f       	add	r22, r24
   10070:	79 1f       	adc	r23, r25
   10072:	8a 1f       	adc	r24, r26
   10074:	91 1d       	adc	r25, r1
   10076:	a1 1d       	adc	r26, r1
   10078:	6a 0f       	add	r22, r26
   1007a:	71 1d       	adc	r23, r1
   1007c:	81 1d       	adc	r24, r1
   1007e:	91 1d       	adc	r25, r1
   10080:	a1 1d       	adc	r26, r1
   10082:	20 d0       	rcall	.+64     	; 0x100c4 <__ultoa_invert+0x84>
   10084:	09 f4       	brne	.+2      	; 0x10088 <__ultoa_invert+0x48>
   10086:	68 94       	set
   10088:	3f 91       	pop	r19
   1008a:	2a e0       	ldi	r18, 0x0A	; 10
   1008c:	26 9f       	mul	r18, r22
   1008e:	11 24       	eor	r1, r1
   10090:	30 19       	sub	r19, r0
   10092:	30 5d       	subi	r19, 0xD0	; 208
   10094:	31 93       	st	Z+, r19
   10096:	de f6       	brtc	.-74     	; 0x1004e <__ultoa_invert+0xe>
   10098:	cf 01       	movw	r24, r30
   1009a:	08 95       	ret
   1009c:	46 2f       	mov	r20, r22
   1009e:	47 70       	andi	r20, 0x07	; 7
   100a0:	40 5d       	subi	r20, 0xD0	; 208
   100a2:	41 93       	st	Z+, r20
   100a4:	b3 e0       	ldi	r27, 0x03	; 3
   100a6:	0f d0       	rcall	.+30     	; 0x100c6 <__ultoa_invert+0x86>
   100a8:	c9 f7       	brne	.-14     	; 0x1009c <__ultoa_invert+0x5c>
   100aa:	f6 cf       	rjmp	.-20     	; 0x10098 <__ultoa_invert+0x58>
   100ac:	46 2f       	mov	r20, r22
   100ae:	4f 70       	andi	r20, 0x0F	; 15
   100b0:	40 5d       	subi	r20, 0xD0	; 208
   100b2:	4a 33       	cpi	r20, 0x3A	; 58
   100b4:	18 f0       	brcs	.+6      	; 0x100bc <__ultoa_invert+0x7c>
   100b6:	49 5d       	subi	r20, 0xD9	; 217
   100b8:	31 fd       	sbrc	r19, 1
   100ba:	40 52       	subi	r20, 0x20	; 32
   100bc:	41 93       	st	Z+, r20
   100be:	02 d0       	rcall	.+4      	; 0x100c4 <__ultoa_invert+0x84>
   100c0:	a9 f7       	brne	.-22     	; 0x100ac <__ultoa_invert+0x6c>
   100c2:	ea cf       	rjmp	.-44     	; 0x10098 <__ultoa_invert+0x58>
   100c4:	b4 e0       	ldi	r27, 0x04	; 4
   100c6:	a6 95       	lsr	r26
   100c8:	97 95       	ror	r25
   100ca:	87 95       	ror	r24
   100cc:	77 95       	ror	r23
   100ce:	67 95       	ror	r22
   100d0:	ba 95       	dec	r27
   100d2:	c9 f7       	brne	.-14     	; 0x100c6 <__ultoa_invert+0x86>
   100d4:	00 97       	sbiw	r24, 0x00	; 0
   100d6:	61 05       	cpc	r22, r1
   100d8:	71 05       	cpc	r23, r1
   100da:	08 95       	ret
   100dc:	9b 01       	movw	r18, r22
   100de:	ac 01       	movw	r20, r24
   100e0:	0a 2e       	mov	r0, r26
   100e2:	06 94       	lsr	r0
   100e4:	57 95       	ror	r21
   100e6:	47 95       	ror	r20
   100e8:	37 95       	ror	r19
   100ea:	27 95       	ror	r18
   100ec:	ba 95       	dec	r27
   100ee:	c9 f7       	brne	.-14     	; 0x100e2 <__ultoa_invert+0xa2>
   100f0:	62 0f       	add	r22, r18
   100f2:	73 1f       	adc	r23, r19
   100f4:	84 1f       	adc	r24, r20
   100f6:	95 1f       	adc	r25, r21
   100f8:	a0 1d       	adc	r26, r0
   100fa:	08 95       	ret

000100fc <__ctype_isfalse>:
   100fc:	99 27       	eor	r25, r25
   100fe:	88 27       	eor	r24, r24

00010100 <__ctype_istrue>:
   10100:	08 95       	ret

00010102 <eeprom_read_byte>:
   10102:	03 d0       	rcall	.+6      	; 0x1010a <eeprom_mapen>
   10104:	80 81       	ld	r24, Z
   10106:	99 27       	eor	r25, r25
   10108:	08 95       	ret

0001010a <eeprom_mapen>:
   1010a:	fc 01       	movw	r30, r24
   1010c:	e0 50       	subi	r30, 0x00	; 0
   1010e:	fc 4e       	sbci	r31, 0xEC	; 236
   10110:	08 95       	ret

00010112 <eeprom_read_dword>:
   10112:	0e 94 85 80 	call	0x1010a	; 0x1010a <eeprom_mapen>
   10116:	60 81       	ld	r22, Z
   10118:	71 81       	ldd	r23, Z+1	; 0x01
   1011a:	82 81       	ldd	r24, Z+2	; 0x02
   1011c:	93 81       	ldd	r25, Z+3	; 0x03
   1011e:	08 95       	ret

00010120 <eeprom_read_word>:
   10120:	0e 94 85 80 	call	0x1010a	; 0x1010a <eeprom_mapen>
   10124:	80 81       	ld	r24, Z
   10126:	91 81       	ldd	r25, Z+1	; 0x01
   10128:	08 95       	ret

0001012a <__divmodqi4>:
   1012a:	87 fb       	bst	r24, 7
   1012c:	08 2e       	mov	r0, r24
   1012e:	06 26       	eor	r0, r22
   10130:	87 fd       	sbrc	r24, 7
   10132:	81 95       	neg	r24
   10134:	67 fd       	sbrc	r22, 7
   10136:	61 95       	neg	r22
   10138:	0e 94 aa 80 	call	0x10154	; 0x10154 <__udivmodqi4>
   1013c:	0e f4       	brtc	.+2      	; 0x10140 <__divmodqi4_1>
   1013e:	91 95       	neg	r25

00010140 <__divmodqi4_1>:
   10140:	07 fc       	sbrc	r0, 7
   10142:	81 95       	neg	r24

00010144 <__divmodqi4_exit>:
   10144:	08 95       	ret

00010146 <__xload_1>:
   10146:	57 fd       	sbrc	r21, 7
   10148:	03 c0       	rjmp	.+6      	; 0x10150 <__xload_1+0xa>
   1014a:	5b bf       	out	0x3b, r21	; 59
   1014c:	67 91       	elpm	r22, Z+
   1014e:	08 95       	ret
   10150:	60 81       	ld	r22, Z
   10152:	08 95       	ret

00010154 <__udivmodqi4>:
   10154:	99 1b       	sub	r25, r25
   10156:	79 e0       	ldi	r23, 0x09	; 9
   10158:	04 c0       	rjmp	.+8      	; 0x10162 <__udivmodqi4_ep>

0001015a <__udivmodqi4_loop>:
   1015a:	99 1f       	adc	r25, r25
   1015c:	96 17       	cp	r25, r22
   1015e:	08 f0       	brcs	.+2      	; 0x10162 <__udivmodqi4_ep>
   10160:	96 1b       	sub	r25, r22

00010162 <__udivmodqi4_ep>:
   10162:	88 1f       	adc	r24, r24
   10164:	7a 95       	dec	r23
   10166:	c9 f7       	brne	.-14     	; 0x1015a <__udivmodqi4_loop>
   10168:	80 95       	com	r24
   1016a:	08 95       	ret

0001016c <__do_global_dtors>:
   1016c:	11 e0       	ldi	r17, 0x01	; 1
   1016e:	c9 ed       	ldi	r28, 0xD9	; 217
   10170:	d1 e0       	ldi	r29, 0x01	; 1
   10172:	04 c0       	rjmp	.+8      	; 0x1017c <__do_global_dtors+0x10>
   10174:	fe 01       	movw	r30, r28
   10176:	0e 94 2d 7a 	call	0xf45a	; 0xf45a <__tablejump2__>
   1017a:	21 96       	adiw	r28, 0x01	; 1
   1017c:	cb 3d       	cpi	r28, 0xDB	; 219
   1017e:	d1 07       	cpc	r29, r17
   10180:	c9 f7       	brne	.-14     	; 0x10174 <__do_global_dtors+0x8>
   10182:	f8 94       	cli

00010184 <__stop_program>:
   10184:	ff cf       	rjmp	.-2      	; 0x10184 <__stop_program>
