
FlexFox80.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006b6  00804000  0000f900  0000f9b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000f900  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000429  008046b6  008046b6  0001006a  2**0
                  ALLOC
  3 .eeprom       00000035  00810000  00810000  0001006a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  0001009f  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000100fc  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000c10  00000000  00000000  00010140  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000efbe  00000000  00000000  00010d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00005590  00000000  00000000  0001fd0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00009eb4  00000000  00000000  0002529e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00002cac  00000000  00000000  0002f154  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006371  00000000  00000000  00031e00  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005db8  00000000  00000000  00038171  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b40  00000000  00000000  0003df29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__dtors_end>
       4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
       8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
       c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      10:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      14:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      18:	0c 94 56 10 	jmp	0x20ac	; 0x20ac <__vector_6>
      1c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      20:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      24:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      28:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      2c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      30:	0c 94 d7 14 	jmp	0x29ae	; 0x29ae <__vector_12>
      34:	0c 94 82 6a 	jmp	0xd504	; 0xd504 <__vector_13>
      38:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      3c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      40:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      44:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      48:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      4c:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__vector_19>
      50:	0c 94 36 0b 	jmp	0x166c	; 0x166c <__vector_20>
      54:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      58:	0c 94 7b 14 	jmp	0x28f6	; 0x28f6 <__vector_22>
      5c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      60:	0c 94 29 34 	jmp	0x6852	; 0x6852 <__vector_24>
      64:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      68:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      6c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      70:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      74:	0c 94 f6 16 	jmp	0x2dec	; 0x2dec <__vector_29>
      78:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__vector_30>
      7c:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <__vector_31>
      80:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__vector_32>
      84:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      88:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      8c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      90:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      94:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      98:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      9c:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      a0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      a4:	0c 94 0f 4e 	jmp	0x9c1e	; 0x9c1e <__vector_41>
      a8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      ac:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      b0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      b4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      b8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      bc:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      c0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      c4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      c8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      cc:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      d0:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      d4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      d8:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      dc:	0c 94 72 08 	jmp	0x10e4	; 0x10e4 <__vector_55>
      e0:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__vector_56>
      e4:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__bad_interrupt>
      e8:	ca 2b       	or	r28, r26
      ea:	de 2b       	or	r29, r30
      ec:	f4 2b       	or	r31, r20
      ee:	0a 2c       	mov	r0, r10
      f0:	20 2c       	mov	r2, r0
      f2:	66 2d       	mov	r22, r6
      f4:	5b 2d       	mov	r21, r11
      f6:	5b 2c       	mov	r5, r11
      f8:	6b 2c       	mov	r6, r11
      fa:	7d 2c       	mov	r7, r13
      fc:	8f 2c       	mov	r8, r15
      fe:	a1 2c       	mov	r10, r1
     100:	db 2c       	mov	r13, r11
     102:	eb 2c       	mov	r14, r11
     104:	fd 2c       	mov	r15, r13
     106:	0f 2d       	mov	r16, r15
     108:	21 2d       	mov	r18, r1
     10a:	36 45       	sbci	r19, 0x56	; 86
     10c:	43 45       	sbci	r20, 0x53	; 83
     10e:	10 45       	sbci	r17, 0x50	; 80
     110:	43 45       	sbci	r20, 0x53	; 83
     112:	43 45       	sbci	r20, 0x53	; 83
     114:	43 45       	sbci	r20, 0x53	; 83
     116:	1e 45       	sbci	r17, 0x5E	; 94
     118:	43 45       	sbci	r20, 0x53	; 83
     11a:	43 45       	sbci	r20, 0x53	; 83
     11c:	43 45       	sbci	r20, 0x53	; 83
     11e:	98 44       	sbci	r25, 0x48	; 72
     120:	43 45       	sbci	r20, 0x53	; 83
     122:	43 45       	sbci	r20, 0x53	; 83
     124:	43 45       	sbci	r20, 0x53	; 83
     126:	43 45       	sbci	r20, 0x53	; 83
     128:	43 45       	sbci	r20, 0x53	; 83
     12a:	43 45       	sbci	r20, 0x53	; 83
     12c:	43 45       	sbci	r20, 0x53	; 83
     12e:	43 45       	sbci	r20, 0x53	; 83
     130:	43 45       	sbci	r20, 0x53	; 83
     132:	43 45       	sbci	r20, 0x53	; 83
     134:	43 45       	sbci	r20, 0x53	; 83
     136:	43 45       	sbci	r20, 0x53	; 83
     138:	43 45       	sbci	r20, 0x53	; 83
     13a:	43 45       	sbci	r20, 0x53	; 83
     13c:	43 45       	sbci	r20, 0x53	; 83
     13e:	43 45       	sbci	r20, 0x53	; 83
     140:	43 45       	sbci	r20, 0x53	; 83
     142:	43 45       	sbci	r20, 0x53	; 83
     144:	43 45       	sbci	r20, 0x53	; 83
     146:	43 45       	sbci	r20, 0x53	; 83
     148:	c8 44       	sbci	r28, 0x48	; 72
     14a:	43 45       	sbci	r20, 0x53	; 83
     14c:	43 45       	sbci	r20, 0x53	; 83
     14e:	43 45       	sbci	r20, 0x53	; 83
     150:	43 45       	sbci	r20, 0x53	; 83
     152:	43 45       	sbci	r20, 0x53	; 83
     154:	43 45       	sbci	r20, 0x53	; 83
     156:	43 45       	sbci	r20, 0x53	; 83
     158:	43 45       	sbci	r20, 0x53	; 83
     15a:	fc 44       	sbci	r31, 0x4C	; 76
     15c:	06 45       	sbci	r16, 0x56	; 86
     15e:	2c 45       	sbci	r18, 0x5C	; 92
     160:	6f 44       	sbci	r22, 0x4F	; 79
     162:	43 45       	sbci	r20, 0x53	; 83
     164:	43 45       	sbci	r20, 0x53	; 83
     166:	43 45       	sbci	r20, 0x53	; 83
     168:	7d 44       	sbci	r23, 0x4D	; 77
     16a:	43 45       	sbci	r20, 0x53	; 83
     16c:	43 45       	sbci	r20, 0x53	; 83
     16e:	43 45       	sbci	r20, 0x53	; 83
     170:	8b 44       	sbci	r24, 0x4B	; 75
     172:	c6 4f       	sbci	r28, 0xF6	; 246
     174:	d9 4f       	sbci	r29, 0xF9	; 249
     176:	e3 4f       	sbci	r30, 0xF3	; 243
     178:	ed 4f       	sbci	r30, 0xFD	; 253
     17a:	1d 50       	subi	r17, 0x0D	; 13
     17c:	05 50       	subi	r16, 0x05	; 5
     17e:	35 50       	subi	r19, 0x05	; 5
     180:	0f 51       	subi	r16, 0x1F	; 31
     182:	25 51       	subi	r18, 0x15	; 21
     184:	e0 50       	subi	r30, 0x00	; 0
     186:	b1 50       	subi	r27, 0x01	; 1
     188:	7f 50       	subi	r23, 0x0F	; 15
     18a:	4d 50       	subi	r20, 0x0D	; 13
     18c:	dd 59       	subi	r29, 0x9D	; 157
     18e:	74 59       	subi	r23, 0x94	; 148
     190:	c1 59       	subi	r28, 0x91	; 145
     192:	eb 59       	subi	r30, 0x9B	; 155
     194:	c8 59       	subi	r28, 0x98	; 152
     196:	eb 59       	subi	r30, 0x9B	; 155
     198:	90 59       	subi	r25, 0x90	; 144
     19a:	6d 59       	subi	r22, 0x9D	; 157
     19c:	82 59       	subi	r24, 0x92	; 146
     19e:	89 59       	subi	r24, 0x99	; 153
     1a0:	eb 59       	subi	r30, 0x9B	; 155
     1a2:	ac 59       	subi	r26, 0x9C	; 156
     1a4:	5f 59       	subi	r21, 0x9F	; 159
     1a6:	b3 59       	subi	r27, 0x93	; 147
     1a8:	58 59       	subi	r21, 0x98	; 152
     1aa:	7b 59       	subi	r23, 0x9B	; 155
     1ac:	13 59       	subi	r17, 0x93	; 147
     1ae:	1a 59       	subi	r17, 0x9A	; 154
     1b0:	21 59       	subi	r18, 0x91	; 145
     1b2:	28 59       	subi	r18, 0x98	; 152
     1b4:	2f 59       	subi	r18, 0x9F	; 159
     1b6:	36 59       	subi	r19, 0x96	; 150
     1b8:	3c 59       	subi	r19, 0x9C	; 156
     1ba:	43 59       	subi	r20, 0x93	; 147
     1bc:	4a 59       	subi	r20, 0x9A	; 154
     1be:	51 59       	subi	r21, 0x91	; 145
     1c0:	97 59       	subi	r25, 0x97	; 151
     1c2:	9e 59       	subi	r25, 0x9E	; 158
     1c4:	e4 59       	subi	r30, 0x94	; 148
     1c6:	a5 59       	subi	r26, 0x95	; 149
     1c8:	eb 59       	subi	r30, 0x9B	; 155
     1ca:	66 59       	subi	r22, 0x96	; 150
     1cc:	cf 59       	subi	r28, 0x9F	; 159
     1ce:	61 58       	subi	r22, 0x81	; 129
     1d0:	68 58       	subi	r22, 0x88	; 136
     1d2:	6f 58       	subi	r22, 0x8F	; 143
     1d4:	76 58       	subi	r23, 0x86	; 134
     1d6:	7d 58       	subi	r23, 0x8D	; 141
     1d8:	83 58       	subi	r24, 0x83	; 131
     1da:	8a 58       	subi	r24, 0x8A	; 138
     1dc:	91 58       	subi	r25, 0x81	; 129
     1de:	97 58       	subi	r25, 0x87	; 135
     1e0:	9d 58       	subi	r25, 0x8D	; 141
     1e2:	a4 58       	subi	r26, 0x84	; 132
     1e4:	ab 58       	subi	r26, 0x8B	; 139
     1e6:	b2 58       	subi	r27, 0x82	; 130
     1e8:	b9 58       	subi	r27, 0x89	; 137
     1ea:	c0 58       	subi	r28, 0x80	; 128
     1ec:	c7 58       	subi	r28, 0x87	; 135
     1ee:	ce 58       	subi	r28, 0x8E	; 142
     1f0:	d5 58       	subi	r29, 0x85	; 133
     1f2:	dc 58       	subi	r29, 0x8C	; 140
     1f4:	e2 58       	subi	r30, 0x82	; 130
     1f6:	e9 58       	subi	r30, 0x89	; 137
     1f8:	f0 58       	subi	r31, 0x80	; 128
     1fa:	f7 58       	subi	r31, 0x87	; 135
     1fc:	fe 58       	subi	r31, 0x8E	; 142
     1fe:	05 59       	subi	r16, 0x95	; 149
     200:	0c 59       	subi	r16, 0x9C	; 156
     202:	eb 59       	subi	r30, 0x9B	; 155
     204:	eb 59       	subi	r30, 0x9B	; 155
     206:	eb 59       	subi	r30, 0x9B	; 155
     208:	eb 59       	subi	r30, 0x9B	; 155
     20a:	ba 59       	subi	r27, 0x9A	; 154
     20c:	eb 59       	subi	r30, 0x9B	; 155
     20e:	eb 59       	subi	r30, 0x9B	; 155
     210:	eb 59       	subi	r30, 0x9B	; 155
     212:	eb 59       	subi	r30, 0x9B	; 155
     214:	eb 59       	subi	r30, 0x9B	; 155
     216:	eb 59       	subi	r30, 0x9B	; 155
     218:	eb 59       	subi	r30, 0x9B	; 155
     21a:	eb 59       	subi	r30, 0x9B	; 155
     21c:	eb 59       	subi	r30, 0x9B	; 155
     21e:	eb 59       	subi	r30, 0x9B	; 155
     220:	eb 59       	subi	r30, 0x9B	; 155
     222:	eb 59       	subi	r30, 0x9B	; 155
     224:	eb 59       	subi	r30, 0x9B	; 155
     226:	eb 59       	subi	r30, 0x9B	; 155
     228:	eb 59       	subi	r30, 0x9B	; 155
     22a:	eb 59       	subi	r30, 0x9B	; 155
     22c:	eb 59       	subi	r30, 0x9B	; 155
     22e:	eb 59       	subi	r30, 0x9B	; 155
     230:	eb 59       	subi	r30, 0x9B	; 155
     232:	eb 59       	subi	r30, 0x9B	; 155
     234:	eb 59       	subi	r30, 0x9B	; 155
     236:	eb 59       	subi	r30, 0x9B	; 155
     238:	eb 59       	subi	r30, 0x9B	; 155
     23a:	eb 59       	subi	r30, 0x9B	; 155
     23c:	eb 59       	subi	r30, 0x9B	; 155
     23e:	eb 59       	subi	r30, 0x9B	; 155
     240:	eb 59       	subi	r30, 0x9B	; 155
     242:	eb 59       	subi	r30, 0x9B	; 155
     244:	d6 59       	subi	r29, 0x96	; 150
     246:	14 72       	andi	r17, 0x24	; 36
     248:	1f 72       	andi	r17, 0x2F	; 47
     24a:	2a 72       	andi	r18, 0x2A	; 42
     24c:	35 72       	andi	r19, 0x25	; 37
     24e:	40 72       	andi	r20, 0x20	; 32
     250:	4b 72       	andi	r20, 0x2B	; 43
     252:	56 72       	andi	r21, 0x26	; 38
     254:	61 72       	andi	r22, 0x21	; 33
     256:	6c 72       	andi	r22, 0x2C	; 44
     258:	77 72       	andi	r23, 0x27	; 39
     25a:	82 72       	andi	r24, 0x22	; 34
     25c:	8d 72       	andi	r24, 0x2D	; 45
     25e:	98 72       	andi	r25, 0x28	; 40
     260:	a3 72       	andi	r26, 0x23	; 35
     262:	ae 72       	andi	r26, 0x2E	; 46
     264:	b9 72       	andi	r27, 0x29	; 41
     266:	c4 72       	andi	r28, 0x24	; 36
     268:	cf 72       	andi	r28, 0x2F	; 47

0000026a <__trampolines_end>:
     26a:	4e 41       	sbci	r20, 0x1E	; 30
     26c:	4e 49       	Address 0x0000026c is out of bounds.
.word	0xffff	; ????

0000026d <pstr_inity>:
     26d:	49 4e 49 54 59                                      INITY

00000272 <pstr_inf>:
     272:	49 4e 46                                            INF

00000275 <pwr_m10>:
     275:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     285:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000028d <pwr_p10>:
     28d:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     29d:	ca 1b 0e 5a ae c5 9d 74                             ...Z...t

000002a5 <strfmonths>:
     2a5:	4a 61 6e 75 61 72 79 20 46 65 62 72 75 61 72 79     January February
     2b5:	20 4d 61 72 63 68 20 41 70 72 69 6c 20 4d 61 79      March April May
     2c5:	20 4a 75 6e 65 20 4a 75 6c 79 20 41 75 67 75 73      June July Augus
     2d5:	74 20 53 65 70 74 65 6d 62 65 72 20 4f 63 74 6f     t September Octo
     2e5:	62 65 72 20 4e 6f 76 65 6d 62 65 72 20 44 65 63     ber November Dec
     2f5:	65 6d 62 65 72 20 00                                ember .

000002fc <strfwkdays>:
     2fc:	53 75 6e 64 61 79 20 4d 6f 6e 64 61 79 20 54 75     Sunday Monday Tu
     30c:	65 73 64 61 79 20 57 65 64 6e 65 73 64 61 79 20     esday Wednesday 
     31c:	54 68 75 72 73 64 61 79 20 46 72 69 64 61 79 20     Thursday Friday 
     32c:	53 61 74 75 72 64 61 79 20 00                       Saturday .

00000336 <ascdays>:
     336:	53 75 6e 4d 6f 6e 54 75 65 57 65 64 54 68 75 46     SunMonTueWedThuF
     346:	72 69 53 61 74 00                                   riSat.

0000034c <ascmonths>:
     34c:	4a 61 6e 46 65 62 4d 61 72 41 70 72 4d 61 79 4a     JanFebMarAprMayJ
     35c:	75 6e 4a 75 6c 41 75 67 53 65 70 4f 63 74 4e 6f     unJulAugSepOctNo
     36c:	76 44 65 63 00 00                                   vDec..

00000372 <__ctors_start>:
     372:	a0 32       	cpi	r26, 0x20	; 32
     374:	a5 34       	cpi	r26, 0x45	; 69

00000376 <__ctors_end>:
     376:	ad 32       	cpi	r26, 0x2D	; 45
     378:	b2 34       	cpi	r27, 0x42	; 66

0000037a <__dtors_end>:
     37a:	11 24       	eor	r1, r1
     37c:	1f be       	out	0x3f, r1	; 63
     37e:	cf ef       	ldi	r28, 0xFF	; 255
     380:	cd bf       	out	0x3d, r28	; 61
     382:	df e7       	ldi	r29, 0x7F	; 127
     384:	de bf       	out	0x3e, r29	; 62

00000386 <__do_copy_data>:
     386:	16 e4       	ldi	r17, 0x46	; 70
     388:	a0 e0       	ldi	r26, 0x00	; 0
     38a:	b0 e4       	ldi	r27, 0x40	; 64
     38c:	e0 e0       	ldi	r30, 0x00	; 0
     38e:	f9 ef       	ldi	r31, 0xF9	; 249
     390:	00 e0       	ldi	r16, 0x00	; 0
     392:	0b bf       	out	0x3b, r16	; 59
     394:	02 c0       	rjmp	.+4      	; 0x39a <__do_copy_data+0x14>
     396:	07 90       	elpm	r0, Z+
     398:	0d 92       	st	X+, r0
     39a:	a6 3b       	cpi	r26, 0xB6	; 182
     39c:	b1 07       	cpc	r27, r17
     39e:	d9 f7       	brne	.-10     	; 0x396 <__do_copy_data+0x10>

000003a0 <__do_clear_bss>:
     3a0:	2a e4       	ldi	r18, 0x4A	; 74
     3a2:	a6 eb       	ldi	r26, 0xB6	; 182
     3a4:	b6 e4       	ldi	r27, 0x46	; 70
     3a6:	01 c0       	rjmp	.+2      	; 0x3aa <.do_clear_bss_start>

000003a8 <.do_clear_bss_loop>:
     3a8:	1d 92       	st	X+, r1

000003aa <.do_clear_bss_start>:
     3aa:	af 3d       	cpi	r26, 0xDF	; 223
     3ac:	b2 07       	cpc	r27, r18
     3ae:	e1 f7       	brne	.-8      	; 0x3a8 <.do_clear_bss_loop>

000003b0 <__do_global_ctors>:
     3b0:	11 e0       	ldi	r17, 0x01	; 1
     3b2:	cb eb       	ldi	r28, 0xBB	; 187
     3b4:	d1 e0       	ldi	r29, 0x01	; 1
     3b6:	04 c0       	rjmp	.+8      	; 0x3c0 <__do_global_ctors+0x10>
     3b8:	21 97       	sbiw	r28, 0x01	; 1
     3ba:	fe 01       	movw	r30, r28
     3bc:	0e 94 f3 75 	call	0xebe6	; 0xebe6 <__tablejump2__>
     3c0:	c9 3b       	cpi	r28, 0xB9	; 185
     3c2:	d1 07       	cpc	r29, r17
     3c4:	c9 f7       	brne	.-14     	; 0x3b8 <__do_global_ctors+0x8>
     3c6:	0e 94 98 17 	call	0x2f30	; 0x2f30 <main>
     3ca:	0c 94 73 7c 	jmp	0xf8e6	; 0xf8e6 <__do_global_dtors>

000003ce <__bad_interrupt>:
     3ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d2 <is_leap_year>:
     3d2:	9c 01       	movw	r18, r24
     3d4:	23 70       	andi	r18, 0x03	; 3
     3d6:	33 27       	eor	r19, r19
     3d8:	23 2b       	or	r18, r19
     3da:	59 f4       	brne	.+22     	; 0x3f2 <is_leap_year+0x20>
     3dc:	64 e6       	ldi	r22, 0x64	; 100
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     3e4:	89 2b       	or	r24, r25
     3e6:	39 f4       	brne	.+14     	; 0x3f6 <is_leap_year+0x24>
     3e8:	63 70       	andi	r22, 0x03	; 3
     3ea:	77 27       	eor	r23, r23
     3ec:	81 e0       	ldi	r24, 0x01	; 1
     3ee:	67 2b       	or	r22, r23
     3f0:	19 f0       	breq	.+6      	; 0x3f8 <is_leap_year+0x26>
     3f2:	80 e0       	ldi	r24, 0x00	; 0
     3f4:	08 95       	ret
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	08 95       	ret

000003fa <localtime>:
     3fa:	6b ec       	ldi	r22, 0xCB	; 203
     3fc:	7a e4       	ldi	r23, 0x4A	; 74
     3fe:	0e 94 04 02 	call	0x408	; 0x408 <localtime_r>
     402:	8b ec       	ldi	r24, 0xCB	; 203
     404:	9a e4       	ldi	r25, 0x4A	; 74
     406:	08 95       	ret

00000408 <localtime_r>:
     408:	cf 92       	push	r12
     40a:	df 92       	push	r13
     40c:	ef 92       	push	r14
     40e:	ff 92       	push	r15
     410:	0f 93       	push	r16
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	00 d0       	rcall	.+0      	; 0x41a <localtime_r+0x12>
     41a:	00 d0       	rcall	.+0      	; 0x41c <localtime_r+0x14>
     41c:	cd b7       	in	r28, 0x3d	; 61
     41e:	de b7       	in	r29, 0x3e	; 62
     420:	6c 01       	movw	r12, r24
     422:	7b 01       	movw	r14, r22
     424:	e0 91 db 4a 	lds	r30, 0x4ADB	; 0x804adb <__dst_ptr>
     428:	f0 91 dc 4a 	lds	r31, 0x4ADC	; 0x804adc <__dst_ptr+0x1>
     42c:	30 97       	sbiw	r30, 0x00	; 0
     42e:	29 f0       	breq	.+10     	; 0x43a <localtime_r+0x32>
     430:	67 ed       	ldi	r22, 0xD7	; 215
     432:	7a e4       	ldi	r23, 0x4A	; 74
     434:	09 95       	icall
     436:	8c 01       	movw	r16, r24
     438:	02 c0       	rjmp	.+4      	; 0x43e <localtime_r+0x36>
     43a:	0f ef       	ldi	r16, 0xFF	; 255
     43c:	1f ef       	ldi	r17, 0xFF	; 255
     43e:	f6 01       	movw	r30, r12
     440:	40 81       	ld	r20, Z
     442:	51 81       	ldd	r21, Z+1	; 0x01
     444:	62 81       	ldd	r22, Z+2	; 0x02
     446:	73 81       	ldd	r23, Z+3	; 0x03
     448:	80 91 d7 4a 	lds	r24, 0x4AD7	; 0x804ad7 <__utc_offset>
     44c:	90 91 d8 4a 	lds	r25, 0x4AD8	; 0x804ad8 <__utc_offset+0x1>
     450:	a0 91 d9 4a 	lds	r26, 0x4AD9	; 0x804ad9 <__utc_offset+0x2>
     454:	b0 91 da 4a 	lds	r27, 0x4ADA	; 0x804ada <__utc_offset+0x3>
     458:	84 0f       	add	r24, r20
     45a:	95 1f       	adc	r25, r21
     45c:	a6 1f       	adc	r26, r22
     45e:	b7 1f       	adc	r27, r23
     460:	10 16       	cp	r1, r16
     462:	11 06       	cpc	r1, r17
     464:	4c f4       	brge	.+18     	; 0x478 <localtime_r+0x70>
     466:	a8 01       	movw	r20, r16
     468:	01 2e       	mov	r0, r17
     46a:	00 0c       	add	r0, r0
     46c:	66 0b       	sbc	r22, r22
     46e:	77 0b       	sbc	r23, r23
     470:	84 0f       	add	r24, r20
     472:	95 1f       	adc	r25, r21
     474:	a6 1f       	adc	r26, r22
     476:	b7 1f       	adc	r27, r23
     478:	89 83       	std	Y+1, r24	; 0x01
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	ab 83       	std	Y+3, r26	; 0x03
     47e:	bc 83       	std	Y+4, r27	; 0x04
     480:	b7 01       	movw	r22, r14
     482:	ce 01       	movw	r24, r28
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	0e 94 8c 06 	call	0xd18	; 0xd18 <gmtime_r>
     48a:	f7 01       	movw	r30, r14
     48c:	02 87       	std	Z+10, r16	; 0x0a
     48e:	13 87       	std	Z+11, r17	; 0x0b
     490:	24 96       	adiw	r28, 0x04	; 4
     492:	cd bf       	out	0x3d, r28	; 61
     494:	de bf       	out	0x3e, r29	; 62
     496:	df 91       	pop	r29
     498:	cf 91       	pop	r28
     49a:	1f 91       	pop	r17
     49c:	0f 91       	pop	r16
     49e:	ff 90       	pop	r15
     4a0:	ef 90       	pop	r14
     4a2:	df 90       	pop	r13
     4a4:	cf 90       	pop	r12
     4a6:	08 95       	ret

000004a8 <month_length>:
     4a8:	62 30       	cpi	r22, 0x02	; 2
     4aa:	21 f4       	brne	.+8      	; 0x4b4 <month_length+0xc>
     4ac:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <is_leap_year>
     4b0:	84 5e       	subi	r24, 0xE4	; 228
     4b2:	08 95       	ret
     4b4:	68 30       	cpi	r22, 0x08	; 8
     4b6:	08 f0       	brcs	.+2      	; 0x4ba <month_length+0x12>
     4b8:	6f 5f       	subi	r22, 0xFF	; 255
     4ba:	61 70       	andi	r22, 0x01	; 1
     4bc:	8e e1       	ldi	r24, 0x1E	; 30
     4be:	86 0f       	add	r24, r22
     4c0:	08 95       	ret

000004c2 <set_system_time>:
     4c2:	0f b6       	in	r0, 0x3f	; 63
     4c4:	f8 94       	cli
     4c6:	60 93 c7 4a 	sts	0x4AC7, r22	; 0x804ac7 <__system_time>
     4ca:	70 93 c8 4a 	sts	0x4AC8, r23	; 0x804ac8 <__system_time+0x1>
     4ce:	80 93 c9 4a 	sts	0x4AC9, r24	; 0x804ac9 <__system_time+0x2>
     4d2:	90 93 ca 4a 	sts	0x4ACA, r25	; 0x804aca <__system_time+0x3>
     4d6:	0f be       	out	0x3f, r0	; 63
     4d8:	08 95       	ret

000004da <pgm_copystring>:
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	0f 93       	push	r16
     4e2:	6b 01       	movw	r12, r22
     4e4:	e8 2e       	mov	r14, r24
     4e6:	7c 2d       	mov	r23, r12
     4e8:	6d 2d       	mov	r22, r13
     4ea:	5e 2d       	mov	r21, r14
     4ec:	ae 2d       	mov	r26, r14
     4ee:	c6 01       	movw	r24, r12
     4f0:	01 96       	adiw	r24, 0x01	; 1
     4f2:	a1 1d       	adc	r26, r1
     4f4:	44 23       	and	r20, r20
     4f6:	51 f0       	breq	.+20     	; 0x50c <pgm_copystring+0x32>
     4f8:	6c 01       	movw	r12, r24
     4fa:	ea 2e       	mov	r14, r26
     4fc:	e7 2f       	mov	r30, r23
     4fe:	f6 2f       	mov	r31, r22
     500:	0e 94 60 7c 	call	0xf8c0	; 0xf8c0 <__xload_1>
     504:	60 32       	cpi	r22, 0x20	; 32
     506:	79 f7       	brne	.-34     	; 0x4e6 <pgm_copystring+0xc>
     508:	41 50       	subi	r20, 0x01	; 1
     50a:	ed cf       	rjmp	.-38     	; 0x4e6 <pgm_copystring+0xc>
     50c:	f6 01       	movw	r30, r12
     50e:	0e 94 60 7c 	call	0xf8c0	; 0xf8c0 <__xload_1>
     512:	6c 01       	movw	r12, r24
     514:	ea 2e       	mov	r14, r26
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	60 32       	cpi	r22, 0x20	; 32
     51a:	39 f4       	brne	.+14     	; 0x52a <pgm_copystring+0x50>
     51c:	f9 01       	movw	r30, r18
     51e:	10 82       	st	Z, r1
     520:	0f 91       	pop	r16
     522:	ef 90       	pop	r14
     524:	df 90       	pop	r13
     526:	cf 90       	pop	r12
     528:	08 95       	ret
     52a:	80 17       	cp	r24, r16
     52c:	b9 f3       	breq	.-18     	; 0x51c <pgm_copystring+0x42>
     52e:	2f 5f       	subi	r18, 0xFF	; 255
     530:	3f 4f       	sbci	r19, 0xFF	; 255
     532:	f9 01       	movw	r30, r18
     534:	31 97       	sbiw	r30, 0x01	; 1
     536:	60 83       	st	Z, r22
     538:	8f 5f       	subi	r24, 0xFF	; 255
     53a:	f6 01       	movw	r30, r12
     53c:	5e 2d       	mov	r21, r14
     53e:	0e 94 60 7c 	call	0xf8c0	; 0xf8c0 <__xload_1>
     542:	9f ef       	ldi	r25, 0xFF	; 255
     544:	c9 1a       	sub	r12, r25
     546:	d9 0a       	sbc	r13, r25
     548:	e9 0a       	sbc	r14, r25
     54a:	e6 cf       	rjmp	.-52     	; 0x518 <pgm_copystring+0x3e>

0000054c <strftime>:
     54c:	2f 92       	push	r2
     54e:	3f 92       	push	r3
     550:	4f 92       	push	r4
     552:	5f 92       	push	r5
     554:	6f 92       	push	r6
     556:	7f 92       	push	r7
     558:	8f 92       	push	r8
     55a:	9f 92       	push	r9
     55c:	af 92       	push	r10
     55e:	bf 92       	push	r11
     560:	cf 92       	push	r12
     562:	df 92       	push	r13
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	cd b7       	in	r28, 0x3d	; 61
     572:	de b7       	in	r29, 0x3e	; 62
     574:	a2 97       	sbiw	r28, 0x22	; 34
     576:	cd bf       	out	0x3d, r28	; 61
     578:	de bf       	out	0x3e, r29	; 62
     57a:	2c 01       	movw	r4, r24
     57c:	69 a3       	std	Y+33, r22	; 0x21
     57e:	7a a3       	std	Y+34, r23	; 0x22
     580:	4a 01       	movw	r8, r20
     582:	79 01       	movw	r14, r18
     584:	61 2c       	mov	r6, r1
     586:	71 2c       	mov	r7, r1
     588:	9e 01       	movw	r18, r28
     58a:	2f 5f       	subi	r18, 0xFF	; 255
     58c:	3f 4f       	sbci	r19, 0xFF	; 255
     58e:	69 01       	movw	r12, r18
     590:	84 e6       	ldi	r24, 0x64	; 100
     592:	28 2e       	mov	r2, r24
     594:	31 2c       	mov	r3, r1
     596:	94 e5       	ldi	r25, 0x54	; 84
     598:	a9 2e       	mov	r10, r25
     59a:	96 e4       	ldi	r25, 0x46	; 70
     59c:	b9 2e       	mov	r11, r25
     59e:	29 a1       	ldd	r18, Y+33	; 0x21
     5a0:	3a a1       	ldd	r19, Y+34	; 0x22
     5a2:	62 16       	cp	r6, r18
     5a4:	73 06       	cpc	r7, r19
     5a6:	08 f0       	brcs	.+2      	; 0x5aa <strftime+0x5e>
     5a8:	cd c2       	rjmp	.+1434   	; 0xb44 <strftime+0x5f8>
     5aa:	d4 01       	movw	r26, r8
     5ac:	8c 91       	ld	r24, X
     5ae:	85 32       	cpi	r24, 0x25	; 37
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <strftime+0x68>
     5b2:	bc c2       	rjmp	.+1400   	; 0xb2c <strftime+0x5e0>
     5b4:	11 96       	adiw	r26, 0x01	; 1
     5b6:	1c 91       	ld	r17, X
     5b8:	15 34       	cpi	r17, 0x45	; 69
     5ba:	31 f0       	breq	.+12     	; 0x5c8 <strftime+0x7c>
     5bc:	1f 34       	cpi	r17, 0x4F	; 79
     5be:	21 f0       	breq	.+8      	; 0x5c8 <strftime+0x7c>
     5c0:	b2 e0       	ldi	r27, 0x02	; 2
     5c2:	8b 0e       	add	r8, r27
     5c4:	91 1c       	adc	r9, r1
     5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <strftime+0x88>
     5c8:	f4 01       	movw	r30, r8
     5ca:	12 81       	ldd	r17, Z+2	; 0x02
     5cc:	94 01       	movw	r18, r8
     5ce:	2d 5f       	subi	r18, 0xFD	; 253
     5d0:	3f 4f       	sbci	r19, 0xFF	; 255
     5d2:	49 01       	movw	r8, r18
     5d4:	19 35       	cpi	r17, 0x59	; 89
     5d6:	09 f4       	brne	.+2      	; 0x5da <strftime+0x8e>
     5d8:	32 c2       	rjmp	.+1124   	; 0xa3e <strftime+0x4f2>
     5da:	0c f0       	brlt	.+2      	; 0x5de <strftime+0x92>
     5dc:	60 c0       	rjmp	.+192    	; 0x69e <strftime+0x152>
     5de:	19 34       	cpi	r17, 0x49	; 73
     5e0:	09 f4       	brne	.+2      	; 0x5e4 <strftime+0x98>
     5e2:	3f c1       	rjmp	.+638    	; 0x862 <strftime+0x316>
     5e4:	44 f5       	brge	.+80     	; 0x636 <strftime+0xea>
     5e6:	13 34       	cpi	r17, 0x43	; 67
     5e8:	09 f4       	brne	.+2      	; 0x5ec <strftime+0xa0>
     5ea:	e7 c0       	rjmp	.+462    	; 0x7ba <strftime+0x26e>
     5ec:	54 f4       	brge	.+20     	; 0x602 <strftime+0xb6>
     5ee:	11 34       	cpi	r17, 0x41	; 65
     5f0:	09 f4       	brne	.+2      	; 0x5f4 <strftime+0xa8>
     5f2:	be c0       	rjmp	.+380    	; 0x770 <strftime+0x224>
     5f4:	0c f0       	brlt	.+2      	; 0x5f8 <strftime+0xac>
     5f6:	ca c0       	rjmp	.+404    	; 0x78c <strftime+0x240>
     5f8:	15 32       	cpi	r17, 0x25	; 37
     5fa:	09 f0       	breq	.+2      	; 0x5fe <strftime+0xb2>
     5fc:	74 c2       	rjmp	.+1256   	; 0xae6 <strftime+0x59a>
     5fe:	19 83       	std	Y+1, r17	; 0x01
     600:	75 c2       	rjmp	.+1258   	; 0xaec <strftime+0x5a0>
     602:	16 34       	cpi	r17, 0x46	; 70
     604:	09 f4       	brne	.+2      	; 0x608 <strftime+0xbc>
     606:	ea c0       	rjmp	.+468    	; 0x7dc <strftime+0x290>
     608:	64 f4       	brge	.+24     	; 0x622 <strftime+0xd6>
     60a:	14 34       	cpi	r17, 0x44	; 68
     60c:	09 f0       	breq	.+2      	; 0x610 <strftime+0xc4>
     60e:	6b c2       	rjmp	.+1238   	; 0xae6 <strftime+0x59a>
     610:	f7 01       	movw	r30, r14
     612:	86 81       	ldd	r24, Z+6	; 0x06
     614:	97 81       	ldd	r25, Z+7	; 0x07
     616:	b1 01       	movw	r22, r2
     618:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     61c:	9f 93       	push	r25
     61e:	8f 93       	push	r24
     620:	e7 c1       	rjmp	.+974    	; 0x9f0 <strftime+0x4a4>
     622:	17 34       	cpi	r17, 0x47	; 71
     624:	09 f4       	brne	.+2      	; 0x628 <strftime+0xdc>
     626:	f8 c0       	rjmp	.+496    	; 0x818 <strftime+0x2cc>
     628:	18 34       	cpi	r17, 0x48	; 72
     62a:	09 f0       	breq	.+2      	; 0x62e <strftime+0xe2>
     62c:	5c c2       	rjmp	.+1208   	; 0xae6 <strftime+0x59a>
     62e:	d7 01       	movw	r26, r14
     630:	12 96       	adiw	r26, 0x02	; 2
     632:	8c 91       	ld	r24, X
     634:	30 c1       	rjmp	.+608    	; 0x896 <strftime+0x34a>
     636:	14 35       	cpi	r17, 0x54	; 84
     638:	09 f4       	brne	.+2      	; 0x63c <strftime+0xf0>
     63a:	89 c1       	rjmp	.+786    	; 0x94e <strftime+0x402>
     63c:	64 f4       	brge	.+24     	; 0x656 <strftime+0x10a>
     63e:	12 35       	cpi	r17, 0x52	; 82
     640:	09 f4       	brne	.+2      	; 0x644 <strftime+0xf8>
     642:	6e c1       	rjmp	.+732    	; 0x920 <strftime+0x3d4>
     644:	0c f0       	brlt	.+2      	; 0x648 <strftime+0xfc>
     646:	25 c1       	rjmp	.+586    	; 0x892 <strftime+0x346>
     648:	1d 34       	cpi	r17, 0x4D	; 77
     64a:	09 f0       	breq	.+2      	; 0x64e <strftime+0x102>
     64c:	4c c2       	rjmp	.+1176   	; 0xae6 <strftime+0x59a>
     64e:	d7 01       	movw	r26, r14
     650:	11 96       	adiw	r26, 0x01	; 1
     652:	8c 91       	ld	r24, X
     654:	20 c1       	rjmp	.+576    	; 0x896 <strftime+0x34a>
     656:	16 35       	cpi	r17, 0x56	; 86
     658:	09 f4       	brne	.+2      	; 0x65c <strftime+0x110>
     65a:	a5 c1       	rjmp	.+842    	; 0x9a6 <strftime+0x45a>
     65c:	0c f4       	brge	.+2      	; 0x660 <strftime+0x114>
     65e:	a1 c1       	rjmp	.+834    	; 0x9a2 <strftime+0x456>
     660:	17 35       	cpi	r17, 0x57	; 87
     662:	09 f4       	brne	.+2      	; 0x666 <strftime+0x11a>
     664:	b4 c1       	rjmp	.+872    	; 0x9ce <strftime+0x482>
     666:	18 35       	cpi	r17, 0x58	; 88
     668:	09 f0       	breq	.+2      	; 0x66c <strftime+0x120>
     66a:	3d c2       	rjmp	.+1146   	; 0xae6 <strftime+0x59a>
     66c:	f7 01       	movw	r30, r14
     66e:	80 81       	ld	r24, Z
     670:	28 2f       	mov	r18, r24
     672:	08 2e       	mov	r0, r24
     674:	00 0c       	add	r0, r0
     676:	33 0b       	sbc	r19, r19
     678:	3f 93       	push	r19
     67a:	8f 93       	push	r24
     67c:	81 81       	ldd	r24, Z+1	; 0x01
     67e:	28 2f       	mov	r18, r24
     680:	08 2e       	mov	r0, r24
     682:	00 0c       	add	r0, r0
     684:	33 0b       	sbc	r19, r19
     686:	3f 93       	push	r19
     688:	8f 93       	push	r24
     68a:	82 81       	ldd	r24, Z+2	; 0x02
     68c:	28 2f       	mov	r18, r24
     68e:	08 2e       	mov	r0, r24
     690:	00 0c       	add	r0, r0
     692:	33 0b       	sbc	r19, r19
     694:	3f 93       	push	r19
     696:	8f 93       	push	r24
     698:	8c e9       	ldi	r24, 0x9C	; 156
     69a:	96 e4       	ldi	r25, 0x46	; 70
     69c:	c0 c1       	rjmp	.+896    	; 0xa1e <strftime+0x4d2>
     69e:	1d 36       	cpi	r17, 0x6D	; 109
     6a0:	09 f4       	brne	.+2      	; 0x6a4 <strftime+0x158>
     6a2:	f0 c0       	rjmp	.+480    	; 0x884 <strftime+0x338>
     6a4:	ac f5       	brge	.+106    	; 0x710 <strftime+0x1c4>
     6a6:	14 36       	cpi	r17, 0x64	; 100
     6a8:	09 f4       	brne	.+2      	; 0x6ac <strftime+0x160>
     6aa:	94 c0       	rjmp	.+296    	; 0x7d4 <strftime+0x288>
     6ac:	74 f4       	brge	.+28     	; 0x6ca <strftime+0x17e>
     6ae:	12 36       	cpi	r17, 0x62	; 98
     6b0:	09 f4       	brne	.+2      	; 0x6b4 <strftime+0x168>
     6b2:	66 c0       	rjmp	.+204    	; 0x780 <strftime+0x234>
     6b4:	0c f0       	brlt	.+2      	; 0x6b8 <strftime+0x16c>
     6b6:	75 c0       	rjmp	.+234    	; 0x7a2 <strftime+0x256>
     6b8:	11 36       	cpi	r17, 0x61	; 97
     6ba:	09 f0       	breq	.+2      	; 0x6be <strftime+0x172>
     6bc:	14 c2       	rjmp	.+1064   	; 0xae6 <strftime+0x59a>
     6be:	03 e0       	ldi	r16, 0x03	; 3
     6c0:	96 01       	movw	r18, r12
     6c2:	d7 01       	movw	r26, r14
     6c4:	14 96       	adiw	r26, 0x04	; 4
     6c6:	4c 91       	ld	r20, X
     6c8:	57 c0       	rjmp	.+174    	; 0x778 <strftime+0x22c>
     6ca:	17 36       	cpi	r17, 0x67	; 103
     6cc:	09 f4       	brne	.+2      	; 0x6d0 <strftime+0x184>
     6ce:	a4 c0       	rjmp	.+328    	; 0x818 <strftime+0x2cc>
     6d0:	74 f4       	brge	.+28     	; 0x6ee <strftime+0x1a2>
     6d2:	15 36       	cpi	r17, 0x65	; 101
     6d4:	09 f0       	breq	.+2      	; 0x6d8 <strftime+0x18c>
     6d6:	07 c2       	rjmp	.+1038   	; 0xae6 <strftime+0x59a>
     6d8:	f7 01       	movw	r30, r14
     6da:	83 81       	ldd	r24, Z+3	; 0x03
     6dc:	28 2f       	mov	r18, r24
     6de:	08 2e       	mov	r0, r24
     6e0:	00 0c       	add	r0, r0
     6e2:	33 0b       	sbc	r19, r19
     6e4:	3f 93       	push	r19
     6e6:	8f 93       	push	r24
     6e8:	89 e5       	ldi	r24, 0x59	; 89
     6ea:	96 e4       	ldi	r25, 0x46	; 70
     6ec:	c8 c0       	rjmp	.+400    	; 0x87e <strftime+0x332>
     6ee:	18 36       	cpi	r17, 0x68	; 104
     6f0:	09 f4       	brne	.+2      	; 0x6f4 <strftime+0x1a8>
     6f2:	46 c0       	rjmp	.+140    	; 0x780 <strftime+0x234>
     6f4:	1a 36       	cpi	r17, 0x6A	; 106
     6f6:	09 f0       	breq	.+2      	; 0x6fa <strftime+0x1ae>
     6f8:	f6 c1       	rjmp	.+1004   	; 0xae6 <strftime+0x59a>
     6fa:	d7 01       	movw	r26, r14
     6fc:	18 96       	adiw	r26, 0x08	; 8
     6fe:	8d 91       	ld	r24, X+
     700:	9c 91       	ld	r25, X
     702:	19 97       	sbiw	r26, 0x09	; 9
     704:	01 96       	adiw	r24, 0x01	; 1
     706:	9f 93       	push	r25
     708:	8f 93       	push	r24
     70a:	8f e6       	ldi	r24, 0x6F	; 111
     70c:	96 e4       	ldi	r25, 0x46	; 70
     70e:	b7 c0       	rjmp	.+366    	; 0x87e <strftime+0x332>
     710:	15 37       	cpi	r17, 0x75	; 117
     712:	09 f4       	brne	.+2      	; 0x716 <strftime+0x1ca>
     714:	35 c1       	rjmp	.+618    	; 0x980 <strftime+0x434>
     716:	b4 f4       	brge	.+44     	; 0x744 <strftime+0x1f8>
     718:	10 37       	cpi	r17, 0x70	; 112
     71a:	09 f4       	brne	.+2      	; 0x71e <strftime+0x1d2>
     71c:	c2 c0       	rjmp	.+388    	; 0x8a2 <strftime+0x356>
     71e:	34 f4       	brge	.+12     	; 0x72c <strftime+0x1e0>
     720:	1e 36       	cpi	r17, 0x6E	; 110
     722:	09 f0       	breq	.+2      	; 0x726 <strftime+0x1da>
     724:	e0 c1       	rjmp	.+960    	; 0xae6 <strftime+0x59a>
     726:	8a e0       	ldi	r24, 0x0A	; 10
     728:	89 83       	std	Y+1, r24	; 0x01
     72a:	e0 c1       	rjmp	.+960    	; 0xaec <strftime+0x5a0>
     72c:	12 37       	cpi	r17, 0x72	; 114
     72e:	09 f4       	brne	.+2      	; 0x732 <strftime+0x1e6>
     730:	c6 c0       	rjmp	.+396    	; 0x8be <strftime+0x372>
     732:	14 37       	cpi	r17, 0x74	; 116
     734:	09 f0       	breq	.+2      	; 0x738 <strftime+0x1ec>
     736:	d7 c1       	rjmp	.+942    	; 0xae6 <strftime+0x59a>
     738:	65 e8       	ldi	r22, 0x85	; 133
     73a:	76 e4       	ldi	r23, 0x46	; 70
     73c:	c6 01       	movw	r24, r12
     73e:	0e 94 a5 77 	call	0xef4a	; 0xef4a <strcpy>
     742:	d4 c1       	rjmp	.+936    	; 0xaec <strftime+0x5a0>
     744:	18 37       	cpi	r17, 0x78	; 120
     746:	09 f4       	brne	.+2      	; 0x74a <strftime+0x1fe>
     748:	48 c1       	rjmp	.+656    	; 0x9da <strftime+0x48e>
     74a:	5c f4       	brge	.+22     	; 0x762 <strftime+0x216>
     74c:	17 37       	cpi	r17, 0x77	; 119
     74e:	09 f0       	breq	.+2      	; 0x752 <strftime+0x206>
     750:	ca c1       	rjmp	.+916    	; 0xae6 <strftime+0x59a>
     752:	f7 01       	movw	r30, r14
     754:	84 81       	ldd	r24, Z+4	; 0x04
     756:	28 2f       	mov	r18, r24
     758:	08 2e       	mov	r0, r24
     75a:	00 0c       	add	r0, r0
     75c:	33 0b       	sbc	r19, r19
     75e:	3f 93       	push	r19
     760:	74 c1       	rjmp	.+744    	; 0xa4a <strftime+0x4fe>
     762:	19 37       	cpi	r17, 0x79	; 121
     764:	09 f4       	brne	.+2      	; 0x768 <strftime+0x21c>
     766:	5e c1       	rjmp	.+700    	; 0xa24 <strftime+0x4d8>
     768:	1a 37       	cpi	r17, 0x7A	; 122
     76a:	09 f4       	brne	.+2      	; 0x76e <strftime+0x222>
     76c:	7e c1       	rjmp	.+764    	; 0xa6a <strftime+0x51e>
     76e:	bb c1       	rjmp	.+886    	; 0xae6 <strftime+0x59a>
     770:	0f ef       	ldi	r16, 0xFF	; 255
     772:	96 01       	movw	r18, r12
     774:	f7 01       	movw	r30, r14
     776:	44 81       	ldd	r20, Z+4	; 0x04
     778:	6c ef       	ldi	r22, 0xFC	; 252
     77a:	72 e0       	ldi	r23, 0x02	; 2
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	0d c0       	rjmp	.+26     	; 0x79a <strftime+0x24e>
     780:	03 e0       	ldi	r16, 0x03	; 3
     782:	96 01       	movw	r18, r12
     784:	d7 01       	movw	r26, r14
     786:	15 96       	adiw	r26, 0x05	; 5
     788:	4c 91       	ld	r20, X
     78a:	04 c0       	rjmp	.+8      	; 0x794 <strftime+0x248>
     78c:	0f ef       	ldi	r16, 0xFF	; 255
     78e:	96 01       	movw	r18, r12
     790:	f7 01       	movw	r30, r14
     792:	45 81       	ldd	r20, Z+5	; 0x05
     794:	65 ea       	ldi	r22, 0xA5	; 165
     796:	72 e0       	ldi	r23, 0x02	; 2
     798:	80 e0       	ldi	r24, 0x00	; 0
     79a:	0e 94 6d 02 	call	0x4da	; 0x4da <pgm_copystring>
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	a7 c1       	rjmp	.+846    	; 0xaf0 <strftime+0x5a4>
     7a2:	b6 01       	movw	r22, r12
     7a4:	c7 01       	movw	r24, r14
     7a6:	0e 94 09 06 	call	0xc12	; 0xc12 <asctime_r>
     7aa:	f6 01       	movw	r30, r12
     7ac:	cf 01       	movw	r24, r30
     7ae:	8c 19       	sub	r24, r12
     7b0:	9d 09       	sbc	r25, r13
     7b2:	21 91       	ld	r18, Z+
     7b4:	21 11       	cpse	r18, r1
     7b6:	fa cf       	rjmp	.-12     	; 0x7ac <strftime+0x260>
     7b8:	9b c1       	rjmp	.+822    	; 0xaf0 <strftime+0x5a4>
     7ba:	d7 01       	movw	r26, r14
     7bc:	16 96       	adiw	r26, 0x06	; 6
     7be:	8d 91       	ld	r24, X+
     7c0:	9c 91       	ld	r25, X
     7c2:	17 97       	sbiw	r26, 0x07	; 7
     7c4:	84 59       	subi	r24, 0x94	; 148
     7c6:	98 4f       	sbci	r25, 0xF8	; 248
     7c8:	b1 01       	movw	r22, r2
     7ca:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     7ce:	7f 93       	push	r23
     7d0:	6f 93       	push	r22
     7d2:	3b c0       	rjmp	.+118    	; 0x84a <strftime+0x2fe>
     7d4:	d7 01       	movw	r26, r14
     7d6:	13 96       	adiw	r26, 0x03	; 3
     7d8:	8c 91       	ld	r24, X
     7da:	5d c0       	rjmp	.+186    	; 0x896 <strftime+0x34a>
     7dc:	d7 01       	movw	r26, r14
     7de:	13 96       	adiw	r26, 0x03	; 3
     7e0:	8c 91       	ld	r24, X
     7e2:	13 97       	sbiw	r26, 0x03	; 3
     7e4:	28 2f       	mov	r18, r24
     7e6:	08 2e       	mov	r0, r24
     7e8:	00 0c       	add	r0, r0
     7ea:	33 0b       	sbc	r19, r19
     7ec:	3f 93       	push	r19
     7ee:	8f 93       	push	r24
     7f0:	15 96       	adiw	r26, 0x05	; 5
     7f2:	8c 91       	ld	r24, X
     7f4:	15 97       	sbiw	r26, 0x05	; 5
     7f6:	08 2e       	mov	r0, r24
     7f8:	00 0c       	add	r0, r0
     7fa:	99 0b       	sbc	r25, r25
     7fc:	01 96       	adiw	r24, 0x01	; 1
     7fe:	9f 93       	push	r25
     800:	8f 93       	push	r24
     802:	16 96       	adiw	r26, 0x06	; 6
     804:	8d 91       	ld	r24, X+
     806:	9c 91       	ld	r25, X
     808:	17 97       	sbiw	r26, 0x07	; 7
     80a:	84 59       	subi	r24, 0x94	; 148
     80c:	98 4f       	sbci	r25, 0xF8	; 248
     80e:	9f 93       	push	r25
     810:	8f 93       	push	r24
     812:	8d e5       	ldi	r24, 0x5D	; 93
     814:	96 e4       	ldi	r25, 0x46	; 70
     816:	03 c1       	rjmp	.+518    	; 0xa1e <strftime+0x4d2>
     818:	d7 01       	movw	r26, r14
     81a:	18 96       	adiw	r26, 0x08	; 8
     81c:	6d 91       	ld	r22, X+
     81e:	7c 91       	ld	r23, X
     820:	19 97       	sbiw	r26, 0x09	; 9
     822:	16 96       	adiw	r26, 0x06	; 6
     824:	8d 91       	ld	r24, X+
     826:	9c 91       	ld	r25, X
     828:	17 97       	sbiw	r26, 0x07	; 7
     82a:	ae 01       	movw	r20, r28
     82c:	45 5e       	subi	r20, 0xE5	; 229
     82e:	5f 4f       	sbci	r21, 0xFF	; 255
     830:	84 59       	subi	r24, 0x94	; 148
     832:	98 4f       	sbci	r25, 0xF8	; 248
     834:	0e 94 62 07 	call	0xec4	; 0xec4 <iso_week_date_r>
     838:	17 36       	cpi	r17, 0x67	; 103
     83a:	51 f4       	brne	.+20     	; 0x850 <strftime+0x304>
     83c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     83e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     840:	b1 01       	movw	r22, r2
     842:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     846:	9f 93       	push	r25
     848:	8f 93       	push	r24
     84a:	e5 e6       	ldi	r30, 0x65	; 101
     84c:	f6 e4       	ldi	r31, 0x46	; 70
     84e:	a6 c0       	rjmp	.+332    	; 0x99c <strftime+0x450>
     850:	8c 8d       	ldd	r24, Y+28	; 0x1c
     852:	8f 93       	push	r24
     854:	8b 8d       	ldd	r24, Y+27	; 0x1b
     856:	8f 93       	push	r24
     858:	4a e6       	ldi	r20, 0x6A	; 106
     85a:	56 e4       	ldi	r21, 0x46	; 70
     85c:	5f 93       	push	r21
     85e:	4f 93       	push	r20
     860:	f9 c0       	rjmp	.+498    	; 0xa54 <strftime+0x508>
     862:	f7 01       	movw	r30, r14
     864:	82 81       	ldd	r24, Z+2	; 0x02
     866:	6c e0       	ldi	r22, 0x0C	; 12
     868:	0e 94 52 7c 	call	0xf8a4	; 0xf8a4 <__divmodqi4>
     86c:	99 23       	and	r25, r25
     86e:	21 f0       	breq	.+8      	; 0x878 <strftime+0x32c>
     870:	89 2f       	mov	r24, r25
     872:	99 0f       	add	r25, r25
     874:	99 0b       	sbc	r25, r25
     876:	de c0       	rjmp	.+444    	; 0xa34 <strftime+0x4e8>
     878:	8c e0       	ldi	r24, 0x0C	; 12
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	db c0       	rjmp	.+438    	; 0xa34 <strftime+0x4e8>
     87e:	9f 93       	push	r25
     880:	8f 93       	push	r24
     882:	e8 c0       	rjmp	.+464    	; 0xa54 <strftime+0x508>
     884:	f7 01       	movw	r30, r14
     886:	85 81       	ldd	r24, Z+5	; 0x05
     888:	08 2e       	mov	r0, r24
     88a:	00 0c       	add	r0, r0
     88c:	99 0b       	sbc	r25, r25
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	d1 c0       	rjmp	.+418    	; 0xa34 <strftime+0x4e8>
     892:	d7 01       	movw	r26, r14
     894:	8c 91       	ld	r24, X
     896:	28 2f       	mov	r18, r24
     898:	08 2e       	mov	r0, r24
     89a:	00 0c       	add	r0, r0
     89c:	33 0b       	sbc	r19, r19
     89e:	3f 93       	push	r19
     8a0:	ca c0       	rjmp	.+404    	; 0xa36 <strftime+0x4ea>
     8a2:	81 e4       	ldi	r24, 0x41	; 65
     8a4:	89 83       	std	Y+1, r24	; 0x01
     8a6:	f7 01       	movw	r30, r14
     8a8:	82 81       	ldd	r24, Z+2	; 0x02
     8aa:	8c 30       	cpi	r24, 0x0C	; 12
     8ac:	14 f0       	brlt	.+4      	; 0x8b2 <strftime+0x366>
     8ae:	80 e5       	ldi	r24, 0x50	; 80
     8b0:	89 83       	std	Y+1, r24	; 0x01
     8b2:	8d e4       	ldi	r24, 0x4D	; 77
     8b4:	8a 83       	std	Y+2, r24	; 0x02
     8b6:	1b 82       	std	Y+3, r1	; 0x03
     8b8:	82 e0       	ldi	r24, 0x02	; 2
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	19 c1       	rjmp	.+562    	; 0xaf0 <strftime+0x5a4>
     8be:	d7 01       	movw	r26, r14
     8c0:	12 96       	adiw	r26, 0x02	; 2
     8c2:	8c 91       	ld	r24, X
     8c4:	6c e0       	ldi	r22, 0x0C	; 12
     8c6:	0e 94 52 7c 	call	0xf8a4	; 0xf8a4 <__divmodqi4>
     8ca:	99 23       	and	r25, r25
     8cc:	21 f0       	breq	.+8      	; 0x8d6 <strftime+0x38a>
     8ce:	89 2f       	mov	r24, r25
     8d0:	99 0f       	add	r25, r25
     8d2:	99 0b       	sbc	r25, r25
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <strftime+0x38e>
     8d6:	8c e0       	ldi	r24, 0x0C	; 12
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	f7 01       	movw	r30, r14
     8dc:	20 81       	ld	r18, Z
     8de:	42 2f       	mov	r20, r18
     8e0:	02 2e       	mov	r0, r18
     8e2:	00 0c       	add	r0, r0
     8e4:	55 0b       	sbc	r21, r21
     8e6:	5f 93       	push	r21
     8e8:	2f 93       	push	r18
     8ea:	21 81       	ldd	r18, Z+1	; 0x01
     8ec:	42 2f       	mov	r20, r18
     8ee:	02 2e       	mov	r0, r18
     8f0:	00 0c       	add	r0, r0
     8f2:	55 0b       	sbc	r21, r21
     8f4:	5f 93       	push	r21
     8f6:	2f 93       	push	r18
     8f8:	9f 93       	push	r25
     8fa:	8f 93       	push	r24
     8fc:	24 e7       	ldi	r18, 0x74	; 116
     8fe:	36 e4       	ldi	r19, 0x46	; 70
     900:	3f 93       	push	r19
     902:	2f 93       	push	r18
     904:	df 92       	push	r13
     906:	cf 92       	push	r12
     908:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
     90c:	cd bf       	out	0x3d, r28	; 61
     90e:	de bf       	out	0x3e, r29	; 62
     910:	f7 01       	movw	r30, r14
     912:	22 81       	ldd	r18, Z+2	; 0x02
     914:	2c 30       	cpi	r18, 0x0C	; 12
     916:	0c f4       	brge	.+2      	; 0x91a <strftime+0x3ce>
     918:	eb c0       	rjmp	.+470    	; 0xaf0 <strftime+0x5a4>
     91a:	20 e5       	ldi	r18, 0x50	; 80
     91c:	2b 87       	std	Y+11, r18	; 0x0b
     91e:	e8 c0       	rjmp	.+464    	; 0xaf0 <strftime+0x5a4>
     920:	d7 01       	movw	r26, r14
     922:	11 96       	adiw	r26, 0x01	; 1
     924:	8c 91       	ld	r24, X
     926:	11 97       	sbiw	r26, 0x01	; 1
     928:	28 2f       	mov	r18, r24
     92a:	08 2e       	mov	r0, r24
     92c:	00 0c       	add	r0, r0
     92e:	33 0b       	sbc	r19, r19
     930:	3f 93       	push	r19
     932:	8f 93       	push	r24
     934:	12 96       	adiw	r26, 0x02	; 2
     936:	8c 91       	ld	r24, X
     938:	28 2f       	mov	r18, r24
     93a:	08 2e       	mov	r0, r24
     93c:	00 0c       	add	r0, r0
     93e:	33 0b       	sbc	r19, r19
     940:	3f 93       	push	r19
     942:	8f 93       	push	r24
     944:	8c e8       	ldi	r24, 0x8C	; 140
     946:	96 e4       	ldi	r25, 0x46	; 70
     948:	9f 93       	push	r25
     94a:	8f 93       	push	r24
     94c:	c5 c0       	rjmp	.+394    	; 0xad8 <strftime+0x58c>
     94e:	f7 01       	movw	r30, r14
     950:	80 81       	ld	r24, Z
     952:	28 2f       	mov	r18, r24
     954:	08 2e       	mov	r0, r24
     956:	00 0c       	add	r0, r0
     958:	33 0b       	sbc	r19, r19
     95a:	3f 93       	push	r19
     95c:	8f 93       	push	r24
     95e:	81 81       	ldd	r24, Z+1	; 0x01
     960:	28 2f       	mov	r18, r24
     962:	08 2e       	mov	r0, r24
     964:	00 0c       	add	r0, r0
     966:	33 0b       	sbc	r19, r19
     968:	3f 93       	push	r19
     96a:	8f 93       	push	r24
     96c:	82 81       	ldd	r24, Z+2	; 0x02
     96e:	28 2f       	mov	r18, r24
     970:	08 2e       	mov	r0, r24
     972:	00 0c       	add	r0, r0
     974:	33 0b       	sbc	r19, r19
     976:	3f 93       	push	r19
     978:	8f 93       	push	r24
     97a:	87 e8       	ldi	r24, 0x87	; 135
     97c:	96 e4       	ldi	r25, 0x46	; 70
     97e:	4f c0       	rjmp	.+158    	; 0xa1e <strftime+0x4d2>
     980:	d7 01       	movw	r26, r14
     982:	14 96       	adiw	r26, 0x04	; 4
     984:	8c 91       	ld	r24, X
     986:	08 2e       	mov	r0, r24
     988:	00 0c       	add	r0, r0
     98a:	99 0b       	sbc	r25, r25
     98c:	00 97       	sbiw	r24, 0x00	; 0
     98e:	11 f4       	brne	.+4      	; 0x994 <strftime+0x448>
     990:	87 e0       	ldi	r24, 0x07	; 7
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	9f 93       	push	r25
     996:	8f 93       	push	r24
     998:	e6 e9       	ldi	r30, 0x96	; 150
     99a:	f6 e4       	ldi	r31, 0x46	; 70
     99c:	ff 93       	push	r31
     99e:	ef 93       	push	r30
     9a0:	59 c0       	rjmp	.+178    	; 0xa54 <strftime+0x508>
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	15 c0       	rjmp	.+42     	; 0x9d0 <strftime+0x484>
     9a6:	d7 01       	movw	r26, r14
     9a8:	18 96       	adiw	r26, 0x08	; 8
     9aa:	6d 91       	ld	r22, X+
     9ac:	7c 91       	ld	r23, X
     9ae:	19 97       	sbiw	r26, 0x09	; 9
     9b0:	16 96       	adiw	r26, 0x06	; 6
     9b2:	8d 91       	ld	r24, X+
     9b4:	9c 91       	ld	r25, X
     9b6:	17 97       	sbiw	r26, 0x07	; 7
     9b8:	ae 01       	movw	r20, r28
     9ba:	45 5e       	subi	r20, 0xE5	; 229
     9bc:	5f 4f       	sbci	r21, 0xFF	; 255
     9be:	84 59       	subi	r24, 0x94	; 148
     9c0:	98 4f       	sbci	r25, 0xF8	; 248
     9c2:	0e 94 62 07 	call	0xec4	; 0xec4 <iso_week_date_r>
     9c6:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9c8:	8f 93       	push	r24
     9ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9cc:	34 c0       	rjmp	.+104    	; 0xa36 <strftime+0x4ea>
     9ce:	61 e0       	ldi	r22, 0x01	; 1
     9d0:	c7 01       	movw	r24, r14
     9d2:	0e 94 ce 05 	call	0xb9c	; 0xb9c <week_of_year>
     9d6:	1f 92       	push	r1
     9d8:	2e c0       	rjmp	.+92     	; 0xa36 <strftime+0x4ea>
     9da:	d7 01       	movw	r26, r14
     9dc:	16 96       	adiw	r26, 0x06	; 6
     9de:	8d 91       	ld	r24, X+
     9e0:	9c 91       	ld	r25, X
     9e2:	17 97       	sbiw	r26, 0x07	; 7
     9e4:	b1 01       	movw	r22, r2
     9e6:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     9ea:	9f 93       	push	r25
     9ec:	8f 93       	push	r24
     9ee:	f7 01       	movw	r30, r14
     9f0:	83 81       	ldd	r24, Z+3	; 0x03
     9f2:	28 2f       	mov	r18, r24
     9f4:	08 2e       	mov	r0, r24
     9f6:	00 0c       	add	r0, r0
     9f8:	33 0b       	sbc	r19, r19
     9fa:	3f 93       	push	r19
     9fc:	8f 93       	push	r24
     9fe:	85 81       	ldd	r24, Z+5	; 0x05
     a00:	08 2e       	mov	r0, r24
     a02:	00 0c       	add	r0, r0
     a04:	99 0b       	sbc	r25, r25
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	9f 93       	push	r25
     a0a:	8f 93       	push	r24
     a0c:	2a e4       	ldi	r18, 0x4A	; 74
     a0e:	36 e4       	ldi	r19, 0x46	; 70
     a10:	3f 93       	push	r19
     a12:	2f 93       	push	r18
     a14:	df 92       	push	r13
     a16:	cf 92       	push	r12
     a18:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
     a1c:	61 c0       	rjmp	.+194    	; 0xae0 <strftime+0x594>
     a1e:	9f 93       	push	r25
     a20:	8f 93       	push	r24
     a22:	f8 cf       	rjmp	.-16     	; 0xa14 <strftime+0x4c8>
     a24:	d7 01       	movw	r26, r14
     a26:	16 96       	adiw	r26, 0x06	; 6
     a28:	8d 91       	ld	r24, X+
     a2a:	9c 91       	ld	r25, X
     a2c:	17 97       	sbiw	r26, 0x07	; 7
     a2e:	b1 01       	movw	r22, r2
     a30:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     a34:	9f 93       	push	r25
     a36:	8f 93       	push	r24
     a38:	bf 92       	push	r11
     a3a:	af 92       	push	r10
     a3c:	0b c0       	rjmp	.+22     	; 0xa54 <strftime+0x508>
     a3e:	f7 01       	movw	r30, r14
     a40:	86 81       	ldd	r24, Z+6	; 0x06
     a42:	97 81       	ldd	r25, Z+7	; 0x07
     a44:	84 59       	subi	r24, 0x94	; 148
     a46:	98 4f       	sbci	r25, 0xF8	; 248
     a48:	9f 93       	push	r25
     a4a:	8f 93       	push	r24
     a4c:	29 e9       	ldi	r18, 0x99	; 153
     a4e:	36 e4       	ldi	r19, 0x46	; 70
     a50:	3f 93       	push	r19
     a52:	2f 93       	push	r18
     a54:	df 92       	push	r13
     a56:	cf 92       	push	r12
     a58:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
     a5c:	0f 90       	pop	r0
     a5e:	0f 90       	pop	r0
     a60:	0f 90       	pop	r0
     a62:	0f 90       	pop	r0
     a64:	0f 90       	pop	r0
     a66:	0f 90       	pop	r0
     a68:	43 c0       	rjmp	.+134    	; 0xaf0 <strftime+0x5a4>
     a6a:	60 91 d7 4a 	lds	r22, 0x4AD7	; 0x804ad7 <__utc_offset>
     a6e:	70 91 d8 4a 	lds	r23, 0x4AD8	; 0x804ad8 <__utc_offset+0x1>
     a72:	80 91 d9 4a 	lds	r24, 0x4AD9	; 0x804ad9 <__utc_offset+0x2>
     a76:	90 91 da 4a 	lds	r25, 0x4ADA	; 0x804ada <__utc_offset+0x3>
     a7a:	2c e3       	ldi	r18, 0x3C	; 60
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	40 e0       	ldi	r20, 0x00	; 0
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
     a86:	89 01       	movw	r16, r18
     a88:	9a 01       	movw	r18, r20
     a8a:	f8 01       	movw	r30, r16
     a8c:	d7 01       	movw	r26, r14
     a8e:	1a 96       	adiw	r26, 0x0a	; 10
     a90:	8d 91       	ld	r24, X+
     a92:	9c 91       	ld	r25, X
     a94:	1b 97       	sbiw	r26, 0x0b	; 11
     a96:	6c e3       	ldi	r22, 0x3C	; 60
     a98:	70 e0       	ldi	r23, 0x00	; 0
     a9a:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     a9e:	16 16       	cp	r1, r22
     aa0:	17 06       	cpc	r1, r23
     aa2:	1c f4       	brge	.+6      	; 0xaaa <strftime+0x55e>
     aa4:	fb 01       	movw	r30, r22
     aa6:	e0 0f       	add	r30, r16
     aa8:	f1 1f       	adc	r31, r17
     aaa:	cf 01       	movw	r24, r30
     aac:	6c e3       	ldi	r22, 0x3C	; 60
     aae:	70 e0       	ldi	r23, 0x00	; 0
     ab0:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     ab4:	97 ff       	sbrs	r25, 7
     ab6:	03 c0       	rjmp	.+6      	; 0xabe <strftime+0x572>
     ab8:	91 95       	neg	r25
     aba:	81 95       	neg	r24
     abc:	91 09       	sbc	r25, r1
     abe:	9f 93       	push	r25
     ac0:	8f 93       	push	r24
     ac2:	cf 01       	movw	r24, r30
     ac4:	6c e3       	ldi	r22, 0x3C	; 60
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     acc:	7f 93       	push	r23
     ace:	6f 93       	push	r22
     ad0:	eb ea       	ldi	r30, 0xAB	; 171
     ad2:	f6 e4       	ldi	r31, 0x46	; 70
     ad4:	ff 93       	push	r31
     ad6:	ef 93       	push	r30
     ad8:	df 92       	push	r13
     ada:	cf 92       	push	r12
     adc:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
     ae0:	cd bf       	out	0x3d, r28	; 61
     ae2:	de bf       	out	0x3e, r29	; 62
     ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <strftime+0x5a4>
     ae6:	8f e3       	ldi	r24, 0x3F	; 63
     ae8:	89 83       	std	Y+1, r24	; 0x01
     aea:	1a 82       	std	Y+2, r1	; 0x02
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	93 01       	movw	r18, r6
     af2:	28 0f       	add	r18, r24
     af4:	39 1f       	adc	r19, r25
     af6:	a9 a1       	ldd	r26, Y+33	; 0x21
     af8:	ba a1       	ldd	r27, Y+34	; 0x22
     afa:	2a 17       	cp	r18, r26
     afc:	3b 07       	cpc	r19, r27
     afe:	98 f4       	brcc	.+38     	; 0xb26 <strftime+0x5da>
     b00:	d2 01       	movw	r26, r4
     b02:	f6 01       	movw	r30, r12
     b04:	af 01       	movw	r20, r30
     b06:	4c 19       	sub	r20, r12
     b08:	5d 09       	sbc	r21, r13
     b0a:	48 17       	cp	r20, r24
     b0c:	59 07       	cpc	r21, r25
     b0e:	1c f4       	brge	.+6      	; 0xb16 <strftime+0x5ca>
     b10:	41 91       	ld	r20, Z+
     b12:	4d 93       	st	X+, r20
     b14:	f7 cf       	rjmp	.-18     	; 0xb04 <strftime+0x5b8>
     b16:	97 ff       	sbrs	r25, 7
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <strftime+0x5d2>
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	48 0e       	add	r4, r24
     b20:	59 1e       	adc	r5, r25
     b22:	39 01       	movw	r6, r18
     b24:	3c cd       	rjmp	.-1416   	; 0x59e <strftime+0x52>
     b26:	f2 01       	movw	r30, r4
     b28:	10 82       	st	Z, r1
     b2a:	0e c0       	rjmp	.+28     	; 0xb48 <strftime+0x5fc>
     b2c:	d2 01       	movw	r26, r4
     b2e:	8d 93       	st	X+, r24
     b30:	2d 01       	movw	r4, r26
     b32:	bf ef       	ldi	r27, 0xFF	; 255
     b34:	6b 1a       	sub	r6, r27
     b36:	7b 0a       	sbc	r7, r27
     b38:	88 23       	and	r24, r24
     b3a:	31 f0       	breq	.+12     	; 0xb48 <strftime+0x5fc>
     b3c:	ef ef       	ldi	r30, 0xFF	; 255
     b3e:	8e 1a       	sub	r8, r30
     b40:	9e 0a       	sbc	r9, r30
     b42:	2d cd       	rjmp	.-1446   	; 0x59e <strftime+0x52>
     b44:	d2 01       	movw	r26, r4
     b46:	1c 92       	st	X, r1
     b48:	c3 01       	movw	r24, r6
     b4a:	a2 96       	adiw	r28, 0x22	; 34
     b4c:	cd bf       	out	0x3d, r28	; 61
     b4e:	de bf       	out	0x3e, r29	; 62
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	0f 91       	pop	r16
     b58:	ff 90       	pop	r15
     b5a:	ef 90       	pop	r14
     b5c:	df 90       	pop	r13
     b5e:	cf 90       	pop	r12
     b60:	bf 90       	pop	r11
     b62:	af 90       	pop	r10
     b64:	9f 90       	pop	r9
     b66:	8f 90       	pop	r8
     b68:	7f 90       	pop	r7
     b6a:	6f 90       	pop	r6
     b6c:	5f 90       	pop	r5
     b6e:	4f 90       	pop	r4
     b70:	3f 90       	pop	r3
     b72:	2f 90       	pop	r2
     b74:	08 95       	ret

00000b76 <time>:
     b76:	fc 01       	movw	r30, r24
     b78:	0f b6       	in	r0, 0x3f	; 63
     b7a:	f8 94       	cli
     b7c:	60 91 c7 4a 	lds	r22, 0x4AC7	; 0x804ac7 <__system_time>
     b80:	70 91 c8 4a 	lds	r23, 0x4AC8	; 0x804ac8 <__system_time+0x1>
     b84:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <__system_time+0x2>
     b88:	90 91 ca 4a 	lds	r25, 0x4ACA	; 0x804aca <__system_time+0x3>
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	30 97       	sbiw	r30, 0x00	; 0
     b90:	21 f0       	breq	.+8      	; 0xb9a <time+0x24>
     b92:	60 83       	st	Z, r22
     b94:	71 83       	std	Z+1, r23	; 0x01
     b96:	82 83       	std	Z+2, r24	; 0x02
     b98:	93 83       	std	Z+3, r25	; 0x03
     b9a:	08 95       	ret

00000b9c <week_of_year>:
     b9c:	fc 01       	movw	r30, r24
     b9e:	20 85       	ldd	r18, Z+8	; 0x08
     ba0:	31 85       	ldd	r19, Z+9	; 0x09
     ba2:	c9 01       	movw	r24, r18
     ba4:	07 96       	adiw	r24, 0x07	; 7
     ba6:	44 81       	ldd	r20, Z+4	; 0x04
     ba8:	84 1b       	sub	r24, r20
     baa:	91 09       	sbc	r25, r1
     bac:	47 fd       	sbrc	r20, 7
     bae:	93 95       	inc	r25
     bb0:	86 0f       	add	r24, r22
     bb2:	91 1d       	adc	r25, r1
     bb4:	e7 e0       	ldi	r30, 0x07	; 7
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	bf 01       	movw	r22, r30
     bba:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     bbe:	a9 01       	movw	r20, r18
     bc0:	48 1b       	sub	r20, r24
     bc2:	59 0b       	sbc	r21, r25
     bc4:	ca 01       	movw	r24, r20
     bc6:	57 fd       	sbrc	r21, 7
     bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <week_of_year+0x3a>
     bca:	bf 01       	movw	r22, r30
     bcc:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	86 0f       	add	r24, r22
     bd4:	08 95       	ret
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	08 95       	ret

00000bda <system_tick>:
     bda:	8f 93       	push	r24
     bdc:	8f b7       	in	r24, 0x3f	; 63
     bde:	8f 93       	push	r24
     be0:	f8 94       	cli
     be2:	80 91 c7 4a 	lds	r24, 0x4AC7	; 0x804ac7 <__system_time>
     be6:	8f 5f       	subi	r24, 0xFF	; 255
     be8:	80 93 c7 4a 	sts	0x4AC7, r24	; 0x804ac7 <__system_time>
     bec:	80 91 c8 4a 	lds	r24, 0x4AC8	; 0x804ac8 <__system_time+0x1>
     bf0:	8f 4f       	sbci	r24, 0xFF	; 255
     bf2:	80 93 c8 4a 	sts	0x4AC8, r24	; 0x804ac8 <__system_time+0x1>
     bf6:	80 91 c9 4a 	lds	r24, 0x4AC9	; 0x804ac9 <__system_time+0x2>
     bfa:	8f 4f       	sbci	r24, 0xFF	; 255
     bfc:	80 93 c9 4a 	sts	0x4AC9, r24	; 0x804ac9 <__system_time+0x2>
     c00:	80 91 ca 4a 	lds	r24, 0x4ACA	; 0x804aca <__system_time+0x3>
     c04:	8f 4f       	sbci	r24, 0xFF	; 255
     c06:	80 93 ca 4a 	sts	0x4ACA, r24	; 0x804aca <__system_time+0x3>
     c0a:	8f 91       	pop	r24
     c0c:	8f bf       	out	0x3f, r24	; 63
     c0e:	8f 91       	pop	r24
     c10:	08 95       	ret

00000c12 <asctime_r>:
     c12:	cf 92       	push	r12
     c14:	df 92       	push	r13
     c16:	ef 92       	push	r14
     c18:	ff 92       	push	r15
     c1a:	0f 93       	push	r16
     c1c:	1f 93       	push	r17
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	8c 01       	movw	r16, r24
     c24:	eb 01       	movw	r28, r22
     c26:	fc 01       	movw	r30, r24
     c28:	84 81       	ldd	r24, Z+4	; 0x04
     c2a:	b8 2f       	mov	r27, r24
     c2c:	bb 0f       	add	r27, r27
     c2e:	b8 0f       	add	r27, r24
     c30:	85 81       	ldd	r24, Z+5	; 0x05
     c32:	78 2f       	mov	r23, r24
     c34:	77 0f       	add	r23, r23
     c36:	78 0f       	add	r23, r24
     c38:	9e 01       	movw	r18, r28
     c3a:	40 e0       	ldi	r20, 0x00	; 0
     c3c:	8b 2f       	mov	r24, r27
     c3e:	84 0f       	add	r24, r20
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	a0 e0       	ldi	r26, 0x00	; 0
     c44:	8a 5c       	subi	r24, 0xCA	; 202
     c46:	9c 4f       	sbci	r25, 0xFC	; 252
     c48:	af 4f       	sbci	r26, 0xFF	; 255
     c4a:	fc 01       	movw	r30, r24
     c4c:	5a 2f       	mov	r21, r26
     c4e:	0e 94 60 7c 	call	0xf8c0	; 0xf8c0 <__xload_1>
     c52:	f9 01       	movw	r30, r18
     c54:	61 93       	st	Z+, r22
     c56:	9f 01       	movw	r18, r30
     c58:	87 2f       	mov	r24, r23
     c5a:	84 0f       	add	r24, r20
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	a0 e0       	ldi	r26, 0x00	; 0
     c60:	84 5b       	subi	r24, 0xB4	; 180
     c62:	9c 4f       	sbci	r25, 0xFC	; 252
     c64:	af 4f       	sbci	r26, 0xFF	; 255
     c66:	fc 01       	movw	r30, r24
     c68:	5a 2f       	mov	r21, r26
     c6a:	0e 94 60 7c 	call	0xf8c0	; 0xf8c0 <__xload_1>
     c6e:	f9 01       	movw	r30, r18
     c70:	63 83       	std	Z+3, r22	; 0x03
     c72:	4f 5f       	subi	r20, 0xFF	; 255
     c74:	43 30       	cpi	r20, 0x03	; 3
     c76:	11 f7       	brne	.-60     	; 0xc3c <asctime_r+0x2a>
     c78:	80 e2       	ldi	r24, 0x20	; 32
     c7a:	8f 83       	std	Y+7, r24	; 0x07
     c7c:	8b 83       	std	Y+3, r24	; 0x03
     c7e:	be 01       	movw	r22, r28
     c80:	68 5f       	subi	r22, 0xF8	; 248
     c82:	7f 4f       	sbci	r23, 0xFF	; 255
     c84:	f8 01       	movw	r30, r16
     c86:	83 81       	ldd	r24, Z+3	; 0x03
     c88:	40 e2       	ldi	r20, 0x20	; 32
     c8a:	08 2e       	mov	r0, r24
     c8c:	00 0c       	add	r0, r0
     c8e:	99 0b       	sbc	r25, r25
     c90:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     c94:	be 01       	movw	r22, r28
     c96:	65 5f       	subi	r22, 0xF5	; 245
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	f8 01       	movw	r30, r16
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	4a e3       	ldi	r20, 0x3A	; 58
     ca0:	08 2e       	mov	r0, r24
     ca2:	00 0c       	add	r0, r0
     ca4:	99 0b       	sbc	r25, r25
     ca6:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     caa:	be 01       	movw	r22, r28
     cac:	62 5f       	subi	r22, 0xF2	; 242
     cae:	7f 4f       	sbci	r23, 0xFF	; 255
     cb0:	f8 01       	movw	r30, r16
     cb2:	81 81       	ldd	r24, Z+1	; 0x01
     cb4:	4a e3       	ldi	r20, 0x3A	; 58
     cb6:	08 2e       	mov	r0, r24
     cb8:	00 0c       	add	r0, r0
     cba:	99 0b       	sbc	r25, r25
     cbc:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     cc0:	be 01       	movw	r22, r28
     cc2:	6f 5e       	subi	r22, 0xEF	; 239
     cc4:	7f 4f       	sbci	r23, 0xFF	; 255
     cc6:	f8 01       	movw	r30, r16
     cc8:	80 81       	ld	r24, Z
     cca:	40 e2       	ldi	r20, 0x20	; 32
     ccc:	08 2e       	mov	r0, r24
     cce:	00 0c       	add	r0, r0
     cd0:	99 0b       	sbc	r25, r25
     cd2:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     cd6:	f8 01       	movw	r30, r16
     cd8:	86 81       	ldd	r24, Z+6	; 0x06
     cda:	97 81       	ldd	r25, Z+7	; 0x07
     cdc:	64 e6       	ldi	r22, 0x64	; 100
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	84 59       	subi	r24, 0x94	; 148
     ce2:	98 4f       	sbci	r25, 0xF8	; 248
     ce4:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     ce8:	6b 01       	movw	r12, r22
     cea:	7c 01       	movw	r14, r24
     cec:	be 01       	movw	r22, r28
     cee:	6c 5e       	subi	r22, 0xEC	; 236
     cf0:	7f 4f       	sbci	r23, 0xFF	; 255
     cf2:	40 e2       	ldi	r20, 0x20	; 32
     cf4:	c6 01       	movw	r24, r12
     cf6:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__print_lz>
     cfa:	be 01       	movw	r22, r28
     cfc:	6a 5e       	subi	r22, 0xEA	; 234
     cfe:	7f 4f       	sbci	r23, 0xFF	; 255
     d00:	40 e0       	ldi	r20, 0x00	; 0
     d02:	c7 01       	movw	r24, r14
     d04:	df 91       	pop	r29
     d06:	cf 91       	pop	r28
     d08:	1f 91       	pop	r17
     d0a:	0f 91       	pop	r16
     d0c:	ff 90       	pop	r15
     d0e:	ef 90       	pop	r14
     d10:	df 90       	pop	r13
     d12:	cf 90       	pop	r12
     d14:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__print_lz>

00000d18 <gmtime_r>:
     d18:	cf 92       	push	r12
     d1a:	df 92       	push	r13
     d1c:	ef 92       	push	r14
     d1e:	ff 92       	push	r15
     d20:	0f 93       	push	r16
     d22:	1f 93       	push	r17
     d24:	cf 93       	push	r28
     d26:	df 93       	push	r29
     d28:	cd b7       	in	r28, 0x3d	; 61
     d2a:	de b7       	in	r29, 0x3e	; 62
     d2c:	28 97       	sbiw	r28, 0x08	; 8
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	de bf       	out	0x3e, r29	; 62
     d32:	8b 01       	movw	r16, r22
     d34:	fc 01       	movw	r30, r24
     d36:	60 81       	ld	r22, Z
     d38:	71 81       	ldd	r23, Z+1	; 0x01
     d3a:	82 81       	ldd	r24, Z+2	; 0x02
     d3c:	93 81       	ldd	r25, Z+3	; 0x03
     d3e:	20 e8       	ldi	r18, 0x80	; 128
     d40:	31 e5       	ldi	r19, 0x51	; 81
     d42:	41 e0       	ldi	r20, 0x01	; 1
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
     d4a:	69 01       	movw	r12, r18
     d4c:	7a 01       	movw	r14, r20
     d4e:	2c e3       	ldi	r18, 0x3C	; 60
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	40 e0       	ldi	r20, 0x00	; 0
     d54:	50 e0       	ldi	r21, 0x00	; 0
     d56:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
     d5a:	29 83       	std	Y+1, r18	; 0x01
     d5c:	3a 83       	std	Y+2, r19	; 0x02
     d5e:	4b 83       	std	Y+3, r20	; 0x03
     d60:	5c 83       	std	Y+4, r21	; 0x04
     d62:	89 81       	ldd	r24, Y+1	; 0x01
     d64:	9a 81       	ldd	r25, Y+2	; 0x02
     d66:	ab 81       	ldd	r26, Y+3	; 0x03
     d68:	bc 81       	ldd	r27, Y+4	; 0x04
     d6a:	f8 01       	movw	r30, r16
     d6c:	60 83       	st	Z, r22
     d6e:	6c e3       	ldi	r22, 0x3C	; 60
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     d76:	dc 01       	movw	r26, r24
     d78:	cb 01       	movw	r24, r22
     d7a:	f8 01       	movw	r30, r16
     d7c:	a1 83       	std	Z+1, r26	; 0x01
     d7e:	82 83       	std	Z+2, r24	; 0x02
     d80:	c6 01       	movw	r24, r12
     d82:	06 96       	adiw	r24, 0x06	; 6
     d84:	67 e0       	ldi	r22, 0x07	; 7
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	0e 94 8a 75 	call	0xeb14	; 0xeb14 <__udivmodhi4>
     d8c:	84 83       	std	Z+4, r24	; 0x04
     d8e:	2d ea       	ldi	r18, 0xAD	; 173
     d90:	3e e8       	ldi	r19, 0x8E	; 142
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	50 e0       	ldi	r21, 0x00	; 0
     d96:	c7 01       	movw	r24, r14
     d98:	b6 01       	movw	r22, r12
     d9a:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
     d9e:	29 83       	std	Y+1, r18	; 0x01
     da0:	3a 83       	std	Y+2, r19	; 0x02
     da2:	6d 83       	std	Y+5, r22	; 0x05
     da4:	7e 83       	std	Y+6, r23	; 0x06
     da6:	8f 83       	std	Y+7, r24	; 0x07
     da8:	98 87       	std	Y+8, r25	; 0x08
     daa:	89 81       	ldd	r24, Y+1	; 0x01
     dac:	9a 81       	ldd	r25, Y+2	; 0x02
     dae:	24 e6       	ldi	r18, 0x64	; 100
     db0:	28 9f       	mul	r18, r24
     db2:	60 01       	movw	r12, r0
     db4:	29 9f       	mul	r18, r25
     db6:	d0 0c       	add	r13, r0
     db8:	11 24       	eor	r1, r1
     dba:	6d 81       	ldd	r22, Y+5	; 0x05
     dbc:	7e 81       	ldd	r23, Y+6	; 0x06
     dbe:	8f 81       	ldd	r24, Y+7	; 0x07
     dc0:	98 85       	ldd	r25, Y+8	; 0x08
     dc2:	25 eb       	ldi	r18, 0xB5	; 181
     dc4:	35 e0       	ldi	r19, 0x05	; 5
     dc6:	40 e0       	ldi	r20, 0x00	; 0
     dc8:	50 e0       	ldi	r21, 0x00	; 0
     dca:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
     dce:	29 83       	std	Y+1, r18	; 0x01
     dd0:	3a 83       	std	Y+2, r19	; 0x02
     dd2:	6d 83       	std	Y+5, r22	; 0x05
     dd4:	7e 83       	std	Y+6, r23	; 0x06
     dd6:	e9 80       	ldd	r14, Y+1	; 0x01
     dd8:	fa 80       	ldd	r15, Y+2	; 0x02
     dda:	ee 0c       	add	r14, r14
     ddc:	ff 1c       	adc	r15, r15
     dde:	ee 0c       	add	r14, r14
     de0:	ff 1c       	adc	r15, r15
     de2:	ec 0c       	add	r14, r12
     de4:	fd 1c       	adc	r15, r13
     de6:	8d 81       	ldd	r24, Y+5	; 0x05
     de8:	9e 81       	ldd	r25, Y+6	; 0x06
     dea:	f5 e6       	ldi	r31, 0x65	; 101
     dec:	ef 16       	cp	r14, r31
     dee:	f1 04       	cpc	r15, r1
     df0:	10 f0       	brcs	.+4      	; 0xdf6 <gmtime_r+0xde>
     df2:	01 96       	adiw	r24, 0x01	; 1
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <gmtime_r+0xe6>
     df6:	24 e6       	ldi	r18, 0x64	; 100
     df8:	e2 16       	cp	r14, r18
     dfa:	f1 04       	cpc	r15, r1
     dfc:	19 f0       	breq	.+6      	; 0xe04 <gmtime_r+0xec>
     dfe:	21 e0       	ldi	r18, 0x01	; 1
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <gmtime_r+0xf0>
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	a9 01       	movw	r20, r18
     e0a:	44 59       	subi	r20, 0x94	; 148
     e0c:	5e 4f       	sbci	r21, 0xFE	; 254
     e0e:	48 17       	cp	r20, r24
     e10:	59 07       	cpc	r21, r25
     e12:	68 f4       	brcc	.+26     	; 0xe2e <gmtime_r+0x116>
     e14:	6d e6       	ldi	r22, 0x6D	; 109
     e16:	71 e0       	ldi	r23, 0x01	; 1
     e18:	82 1b       	sub	r24, r18
     e1a:	93 0b       	sbc	r25, r19
     e1c:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     e20:	dc 01       	movw	r26, r24
     e22:	cb 01       	movw	r24, r22
     e24:	e8 0e       	add	r14, r24
     e26:	f9 1e       	adc	r15, r25
     e28:	cd 01       	movw	r24, r26
     e2a:	20 e0       	ldi	r18, 0x00	; 0
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	44 e6       	ldi	r20, 0x64	; 100
     e30:	e4 0e       	add	r14, r20
     e32:	f1 1c       	adc	r15, r1
     e34:	f8 01       	movw	r30, r16
     e36:	e6 82       	std	Z+6, r14	; 0x06
     e38:	f7 82       	std	Z+7, r15	; 0x07
     e3a:	80 87       	std	Z+8, r24	; 0x08
     e3c:	91 87       	std	Z+9, r25	; 0x09
     e3e:	25 5c       	subi	r18, 0xC5	; 197
     e40:	3f 4f       	sbci	r19, 0xFF	; 255
     e42:	82 17       	cp	r24, r18
     e44:	93 07       	cpc	r25, r19
     e46:	48 f4       	brcc	.+18     	; 0xe5a <gmtime_r+0x142>
     e48:	6f e1       	ldi	r22, 0x1F	; 31
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	f8 01       	movw	r30, r16
     e56:	85 83       	std	Z+5, r24	; 0x05
     e58:	22 c0       	rjmp	.+68     	; 0xe9e <gmtime_r+0x186>
     e5a:	69 e9       	ldi	r22, 0x99	; 153
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	82 1b       	sub	r24, r18
     e60:	93 0b       	sbc	r25, r19
     e62:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     e66:	dc 01       	movw	r26, r24
     e68:	cb 01       	movw	r24, r22
     e6a:	f8 2e       	mov	r15, r24
     e6c:	ff 0c       	add	r15, r15
     e6e:	ff 0c       	add	r15, r15
     e70:	f8 0e       	add	r15, r24
     e72:	6d e3       	ldi	r22, 0x3D	; 61
     e74:	70 e0       	ldi	r23, 0x00	; 0
     e76:	cd 01       	movw	r24, r26
     e78:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     e7c:	dc 01       	movw	r26, r24
     e7e:	cb 01       	movw	r24, r22
     e80:	e8 2e       	mov	r14, r24
     e82:	ee 0c       	add	r14, r14
     e84:	6f e1       	ldi	r22, 0x1F	; 31
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	cd 01       	movw	r24, r26
     e8a:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     e8e:	dc 01       	movw	r26, r24
     e90:	cb 01       	movw	r24, r22
     e92:	22 e0       	ldi	r18, 0x02	; 2
     e94:	28 0f       	add	r18, r24
     e96:	f2 0e       	add	r15, r18
     e98:	fe 0c       	add	r15, r14
     e9a:	f8 01       	movw	r30, r16
     e9c:	f5 82       	std	Z+5, r15	; 0x05
     e9e:	a3 83       	std	Z+3, r26	; 0x03
     ea0:	f8 01       	movw	r30, r16
     ea2:	12 86       	std	Z+10, r1	; 0x0a
     ea4:	13 86       	std	Z+11, r1	; 0x0b
     ea6:	83 81       	ldd	r24, Z+3	; 0x03
     ea8:	8f 5f       	subi	r24, 0xFF	; 255
     eaa:	83 83       	std	Z+3, r24	; 0x03
     eac:	28 96       	adiw	r28, 0x08	; 8
     eae:	cd bf       	out	0x3d, r28	; 61
     eb0:	de bf       	out	0x3e, r29	; 62
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	1f 91       	pop	r17
     eb8:	0f 91       	pop	r16
     eba:	ff 90       	pop	r15
     ebc:	ef 90       	pop	r14
     ebe:	df 90       	pop	r13
     ec0:	cf 90       	pop	r12
     ec2:	08 95       	ret

00000ec4 <iso_week_date_r>:
     ec4:	cf 92       	push	r12
     ec6:	df 92       	push	r13
     ec8:	ef 92       	push	r14
     eca:	ff 92       	push	r15
     ecc:	0f 93       	push	r16
     ece:	1f 93       	push	r17
     ed0:	cf 93       	push	r28
     ed2:	df 93       	push	r29
     ed4:	8c 01       	movw	r16, r24
     ed6:	7b 01       	movw	r14, r22
     ed8:	ea 01       	movw	r28, r20
     eda:	88 83       	st	Y, r24
     edc:	99 83       	std	Y+1, r25	; 0x01
     ede:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <is_leap_year>
     ee2:	28 2f       	mov	r18, r24
     ee4:	a8 01       	movw	r20, r16
     ee6:	40 5d       	subi	r20, 0xD0	; 208
     ee8:	57 40       	sbci	r21, 0x07	; 7
     eea:	6d e6       	ldi	r22, 0x6D	; 109
     eec:	71 e0       	ldi	r23, 0x01	; 1
     eee:	46 9f       	mul	r20, r22
     ef0:	c0 01       	movw	r24, r0
     ef2:	47 9f       	mul	r20, r23
     ef4:	90 0d       	add	r25, r0
     ef6:	56 9f       	mul	r21, r22
     ef8:	90 0d       	add	r25, r0
     efa:	11 24       	eor	r1, r1
     efc:	8e 0d       	add	r24, r14
     efe:	9f 1d       	adc	r25, r15
     f00:	41 15       	cp	r20, r1
     f02:	51 05       	cpc	r21, r1
     f04:	79 f0       	breq	.+30     	; 0xf24 <iso_week_date_r+0x60>
     f06:	ba 01       	movw	r22, r20
     f08:	76 95       	lsr	r23
     f0a:	67 95       	ror	r22
     f0c:	76 95       	lsr	r23
     f0e:	67 95       	ror	r22
     f10:	6f 5f       	subi	r22, 0xFF	; 255
     f12:	7f 4f       	sbci	r23, 0xFF	; 255
     f14:	86 0f       	add	r24, r22
     f16:	97 1f       	adc	r25, r23
     f18:	82 1b       	sub	r24, r18
     f1a:	91 09       	sbc	r25, r1
     f1c:	45 36       	cpi	r20, 0x65	; 101
     f1e:	51 05       	cpc	r21, r1
     f20:	08 f0       	brcs	.+2      	; 0xf24 <iso_week_date_r+0x60>
     f22:	01 97       	sbiw	r24, 0x01	; 1
     f24:	06 96       	adiw	r24, 0x06	; 6
     f26:	67 e0       	ldi	r22, 0x07	; 7
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	0e 94 8a 75 	call	0xeb14	; 0xeb14 <__udivmodhi4>
     f2e:	6c 01       	movw	r12, r24
     f30:	89 2b       	or	r24, r25
     f32:	19 f4       	brne	.+6      	; 0xf3a <iso_week_date_r+0x76>
     f34:	87 e0       	ldi	r24, 0x07	; 7
     f36:	c8 2e       	mov	r12, r24
     f38:	d1 2c       	mov	r13, r1
     f3a:	cc 82       	std	Y+4, r12	; 0x04
     f3c:	dd 82       	std	Y+5, r13	; 0x05
     f3e:	c7 01       	movw	r24, r14
     f40:	0b 96       	adiw	r24, 0x0b	; 11
     f42:	8c 19       	sub	r24, r12
     f44:	9d 09       	sbc	r25, r13
     f46:	67 e0       	ldi	r22, 0x07	; 7
     f48:	70 e0       	ldi	r23, 0x00	; 0
     f4a:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     f4e:	65 33       	cpi	r22, 0x35	; 53
     f50:	71 05       	cpc	r23, r1
     f52:	b1 f4       	brne	.+44     	; 0xf80 <iso_week_date_r+0xbc>
     f54:	81 e0       	ldi	r24, 0x01	; 1
     f56:	c8 1a       	sub	r12, r24
     f58:	d1 08       	sbc	r13, r1
     f5a:	ec 18       	sub	r14, r12
     f5c:	fd 08       	sbc	r15, r13
     f5e:	82 2f       	mov	r24, r18
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	84 59       	subi	r24, 0x94	; 148
     f64:	9e 4f       	sbci	r25, 0xFE	; 254
     f66:	23 e0       	ldi	r18, 0x03	; 3
     f68:	e2 0e       	add	r14, r18
     f6a:	f1 1c       	adc	r15, r1
     f6c:	8e 15       	cp	r24, r14
     f6e:	9f 05       	cpc	r25, r15
     f70:	3c f4       	brge	.+14     	; 0xf80 <iso_week_date_r+0xbc>
     f72:	88 81       	ld	r24, Y
     f74:	99 81       	ldd	r25, Y+1	; 0x01
     f76:	01 96       	adiw	r24, 0x01	; 1
     f78:	88 83       	st	Y, r24
     f7a:	99 83       	std	Y+1, r25	; 0x01
     f7c:	61 e0       	ldi	r22, 0x01	; 1
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	6a 83       	std	Y+2, r22	; 0x02
     f82:	7b 83       	std	Y+3, r23	; 0x03
     f84:	67 2b       	or	r22, r23
     f86:	79 f4       	brne	.+30     	; 0xfa6 <iso_week_date_r+0xe2>
     f88:	01 50       	subi	r16, 0x01	; 1
     f8a:	11 09       	sbc	r17, r1
     f8c:	c8 01       	movw	r24, r16
     f8e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <is_leap_year>
     f92:	68 2f       	mov	r22, r24
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	64 59       	subi	r22, 0x94	; 148
     f98:	7e 4f       	sbci	r23, 0xFE	; 254
     f9a:	ae 01       	movw	r20, r28
     f9c:	c8 01       	movw	r24, r16
     f9e:	0e 94 62 07 	call	0xec4	; 0xec4 <iso_week_date_r>
     fa2:	cc 82       	std	Y+4, r12	; 0x04
     fa4:	dd 82       	std	Y+5, r13	; 0x05
     fa6:	df 91       	pop	r29
     fa8:	cf 91       	pop	r28
     faa:	1f 91       	pop	r17
     fac:	0f 91       	pop	r16
     fae:	ff 90       	pop	r15
     fb0:	ef 90       	pop	r14
     fb2:	df 90       	pop	r13
     fb4:	cf 90       	pop	r12
     fb6:	08 95       	ret

00000fb8 <__print_lz>:
     fb8:	1f 93       	push	r17
     fba:	cf 93       	push	r28
     fbc:	df 93       	push	r29
     fbe:	eb 01       	movw	r28, r22
     fc0:	14 2f       	mov	r17, r20
     fc2:	6a e0       	ldi	r22, 0x0A	; 10
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
     fca:	60 5d       	subi	r22, 0xD0	; 208
     fcc:	68 83       	st	Y, r22
     fce:	80 5d       	subi	r24, 0xD0	; 208
     fd0:	89 83       	std	Y+1, r24	; 0x01
     fd2:	1a 83       	std	Y+2, r17	; 0x02
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	1f 91       	pop	r17
     fda:	08 95       	ret

00000fdc <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     fdc:	cf 93       	push	r28
     fde:	df 93       	push	r29
     fe0:	cd b7       	in	r28, 0x3d	; 61
     fe2:	de b7       	in	r29, 0x3e	; 62
	system_init();
     fe4:	0e 94 8f 3b 	call	0x771e	; 0x771e <system_init>
}
     fe8:	00 00       	nop
     fea:	df 91       	pop	r29
     fec:	cf 91       	pop	r28
     fee:	08 95       	ret

00000ff0 <__vector_30>:

extern USART_Number_t g_serialbus_usart_number;
extern USART_Number_t g_linkbus_usart_number;

ISR(TCB2_INT_vect)
{
     ff0:	1f 92       	push	r1
     ff2:	0f 92       	push	r0
     ff4:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
     ff8:	0f 92       	push	r0
     ffa:	11 24       	eor	r1, r1
     ffc:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1000:	0f 92       	push	r0
    1002:	2f 93       	push	r18
    1004:	8f 93       	push	r24
    1006:	9f 93       	push	r25
    1008:	ef 93       	push	r30
    100a:	ff 93       	push	r31
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
	if(TCB2.INTFLAGS & TCB_CAPT_bm)
    1014:	80 e2       	ldi	r24, 0x20	; 32
    1016:	9b e0       	ldi	r25, 0x0B	; 11
    1018:	fc 01       	movw	r30, r24
    101a:	86 81       	ldd	r24, Z+6	; 0x06
    101c:	88 2f       	mov	r24, r24
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	81 70       	andi	r24, 0x01	; 1
    1022:	99 27       	eor	r25, r25
    1024:	21 e0       	ldi	r18, 0x01	; 1
    1026:	89 2b       	or	r24, r25
    1028:	09 f4       	brne	.+2      	; 0x102c <__vector_30+0x3c>
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	22 23       	and	r18, r18
    102e:	29 f0       	breq	.+10     	; 0x103a <__vector_30+0x4a>
    {
        TCB2.INTFLAGS = TCB_CAPT_bm;
    1030:	80 e2       	ldi	r24, 0x20	; 32
    1032:	9b e0       	ldi	r25, 0x0B	; 11
    1034:	21 e0       	ldi	r18, 0x01	; 1
    1036:	fc 01       	movw	r30, r24
    1038:	26 83       	std	Z+6, r18	; 0x06
    }
}
    103a:	00 00       	nop
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	ff 91       	pop	r31
    1042:	ef 91       	pop	r30
    1044:	9f 91       	pop	r25
    1046:	8f 91       	pop	r24
    1048:	2f 91       	pop	r18
    104a:	0f 90       	pop	r0
    104c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1050:	0f 90       	pop	r0
    1052:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1056:	0f 90       	pop	r0
    1058:	1f 90       	pop	r1
    105a:	18 95       	reti

0000105c <__vector_19>:

ISR(USART0_RXC_vect)
{
    105c:	1f 92       	push	r1
    105e:	0f 92       	push	r0
    1060:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1064:	0f 92       	push	r0
    1066:	11 24       	eor	r1, r1
    1068:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    106c:	0f 92       	push	r0
    106e:	2f 93       	push	r18
    1070:	3f 93       	push	r19
    1072:	4f 93       	push	r20
    1074:	5f 93       	push	r21
    1076:	6f 93       	push	r22
    1078:	7f 93       	push	r23
    107a:	8f 93       	push	r24
    107c:	9f 93       	push	r25
    107e:	af 93       	push	r26
    1080:	bf 93       	push	r27
    1082:	ef 93       	push	r30
    1084:	ff 93       	push	r31
    1086:	cf 93       	push	r28
    1088:	df 93       	push	r29
    108a:	1f 92       	push	r1
    108c:	cd b7       	in	r28, 0x3d	; 61
    108e:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART0_get_data();
    1090:	0e 94 15 6e 	call	0xdc2a	; 0xdc2a <USART0_get_data>
    1094:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_0)
    1096:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    109a:	88 23       	and	r24, r24
    109c:	19 f4       	brne	.+6      	; 0x10a4 <__vector_19+0x48>
	{
		linkbus_Rx(rx_char);
    109e:	89 81       	ldd	r24, Y+1	; 0x01
    10a0:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_0)
    10a4:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    10a8:	88 23       	and	r24, r24
    10aa:	19 f4       	brne	.+6      	; 0x10b2 <__vector_19+0x56>
	{
		serial_Rx(rx_char);
    10ac:	89 81       	ldd	r24, Y+1	; 0x01
    10ae:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z9serial_Rxh>
	}
}
    10b2:	00 00       	nop
    10b4:	0f 90       	pop	r0
    10b6:	df 91       	pop	r29
    10b8:	cf 91       	pop	r28
    10ba:	ff 91       	pop	r31
    10bc:	ef 91       	pop	r30
    10be:	bf 91       	pop	r27
    10c0:	af 91       	pop	r26
    10c2:	9f 91       	pop	r25
    10c4:	8f 91       	pop	r24
    10c6:	7f 91       	pop	r23
    10c8:	6f 91       	pop	r22
    10ca:	5f 91       	pop	r21
    10cc:	4f 91       	pop	r20
    10ce:	3f 91       	pop	r19
    10d0:	2f 91       	pop	r18
    10d2:	0f 90       	pop	r0
    10d4:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10d8:	0f 90       	pop	r0
    10da:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10de:	0f 90       	pop	r0
    10e0:	1f 90       	pop	r1
    10e2:	18 95       	reti

000010e4 <__vector_55>:

ISR(USART4_RXC_vect)
{
    10e4:	1f 92       	push	r1
    10e6:	0f 92       	push	r0
    10e8:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    10ec:	0f 92       	push	r0
    10ee:	11 24       	eor	r1, r1
    10f0:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    10f4:	0f 92       	push	r0
    10f6:	2f 93       	push	r18
    10f8:	3f 93       	push	r19
    10fa:	4f 93       	push	r20
    10fc:	5f 93       	push	r21
    10fe:	6f 93       	push	r22
    1100:	7f 93       	push	r23
    1102:	8f 93       	push	r24
    1104:	9f 93       	push	r25
    1106:	af 93       	push	r26
    1108:	bf 93       	push	r27
    110a:	ef 93       	push	r30
    110c:	ff 93       	push	r31
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	1f 92       	push	r1
    1114:	cd b7       	in	r28, 0x3d	; 61
    1116:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART4_get_data();
    1118:	0e 94 28 6f 	call	0xde50	; 0xde50 <USART4_get_data>
    111c:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_4)
    111e:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    1122:	84 30       	cpi	r24, 0x04	; 4
    1124:	19 f4       	brne	.+6      	; 0x112c <__vector_55+0x48>
	{
		linkbus_Rx(rx_char);
    1126:	89 81       	ldd	r24, Y+1	; 0x01
    1128:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_4)
    112c:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    1130:	84 30       	cpi	r24, 0x04	; 4
    1132:	19 f4       	brne	.+6      	; 0x113a <__vector_55+0x56>
	{
		serial_Rx(rx_char);
    1134:	89 81       	ldd	r24, Y+1	; 0x01
    1136:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z9serial_Rxh>
	}
}
    113a:	00 00       	nop
    113c:	0f 90       	pop	r0
    113e:	df 91       	pop	r29
    1140:	cf 91       	pop	r28
    1142:	ff 91       	pop	r31
    1144:	ef 91       	pop	r30
    1146:	bf 91       	pop	r27
    1148:	af 91       	pop	r26
    114a:	9f 91       	pop	r25
    114c:	8f 91       	pop	r24
    114e:	7f 91       	pop	r23
    1150:	6f 91       	pop	r22
    1152:	5f 91       	pop	r21
    1154:	4f 91       	pop	r20
    1156:	3f 91       	pop	r19
    1158:	2f 91       	pop	r18
    115a:	0f 90       	pop	r0
    115c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1160:	0f 90       	pop	r0
    1162:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1166:	0f 90       	pop	r0
    1168:	1f 90       	pop	r1
    116a:	18 95       	reti

0000116c <_Z9serial_Rxh>:

void serial_Rx(uint8_t rx_char)
{
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	2a 97       	sbiw	r28, 0x0a	; 10
    1176:	cd bf       	out	0x3d, r28	; 61
    1178:	de bf       	out	0x3e, r29	; 62
    117a:	8a 87       	std	Y+10, r24	; 0x0a
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static int msg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    117c:	80 91 b6 46 	lds	r24, 0x46B6	; 0x8046b6 <__data_end>
    1180:	90 91 b7 46 	lds	r25, 0x46B7	; 0x8046b7 <__data_end+0x1>
    1184:	89 2b       	or	r24, r25
    1186:	31 f4       	brne	.+12     	; 0x1194 <_Z9serial_Rxh+0x28>
	{
		buff = nextEmptySBRxBuffer();
    1188:	0e 94 8b 5c 	call	0xb916	; 0xb916 <nextEmptySBRxBuffer>
    118c:	80 93 b6 46 	sts	0x46B6, r24	; 0x8046b6 <__data_end>
    1190:	90 93 b7 46 	sts	0x46B7, r25	; 0x8046b7 <__data_end+0x1>
	}

	if(buff)
    1194:	80 91 b6 46 	lds	r24, 0x46B6	; 0x8046b6 <__data_end>
    1198:	90 91 b7 46 	lds	r25, 0x46B7	; 0x8046b7 <__data_end+0x1>
    119c:	89 2b       	or	r24, r25
    119e:	09 f4       	brne	.+2      	; 0x11a2 <_Z9serial_Rxh+0x36>
    11a0:	5e c2       	rjmp	.+1212   	; 0x165e <_Z9serial_Rxh+0x4f2>
	{
		static uint8_t ignoreCount = 0;
		rx_char = toupper(rx_char);
    11a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    11a4:	88 2f       	mov	r24, r24
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	0e 94 80 77 	call	0xef00	; 0xef00 <toupper>
    11ac:	8a 87       	std	Y+10, r24	; 0x0a

		if(ignoreCount)
    11ae:	80 91 b8 46 	lds	r24, 0x46B8	; 0x8046b8 <_ZZ9serial_RxhE11ignoreCount>
    11b2:	88 23       	and	r24, r24
    11b4:	39 f0       	breq	.+14     	; 0x11c4 <_Z9serial_Rxh+0x58>
		{
			rx_char = '\0';
    11b6:	1a 86       	std	Y+10, r1	; 0x0a
			ignoreCount--;
    11b8:	80 91 b8 46 	lds	r24, 0x46B8	; 0x8046b8 <_ZZ9serial_RxhE11ignoreCount>
    11bc:	81 50       	subi	r24, 0x01	; 1
    11be:	80 93 b8 46 	sts	0x46B8, r24	; 0x8046b8 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11c2:	4d c2       	rjmp	.+1178   	; 0x165e <_Z9serial_Rxh+0x4f2>
		if(ignoreCount)
		{
			rx_char = '\0';
			ignoreCount--;
		}
		else if(rx_char == 0x1B)    /* Ignore ESC sequences */
    11c4:	8a 85       	ldd	r24, Y+10	; 0x0a
    11c6:	8b 31       	cpi	r24, 0x1B	; 27
    11c8:	91 f4       	brne	.+36     	; 0x11ee <_Z9serial_Rxh+0x82>
		{
			rx_char = '\0';
    11ca:	1a 86       	std	Y+10, r1	; 0x0a

			if(charIndex < SERIALBUS_MAX_MSG_FIELD_LENGTH)
    11cc:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    11d0:	84 31       	cpi	r24, 0x14	; 20
    11d2:	48 f4       	brcc	.+18     	; 0x11e6 <_Z9serial_Rxh+0x7a>
			{
				rx_char = textBuff[charIndex];
    11d4:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    11d8:	88 2f       	mov	r24, r24
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	86 54       	subi	r24, 0x46	; 70
    11de:	99 4b       	sbci	r25, 0xB9	; 185
    11e0:	fc 01       	movw	r30, r24
    11e2:	80 81       	ld	r24, Z
    11e4:	8a 87       	std	Y+10, r24	; 0x0a
			}

			ignoreCount = 2;        /* throw out the next two characters */
    11e6:	82 e0       	ldi	r24, 0x02	; 2
    11e8:	80 93 b8 46 	sts	0x46B8, r24	; 0x8046b8 <_ZZ9serial_RxhE11ignoreCount>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    11ec:	38 c2       	rjmp	.+1136   	; 0x165e <_Z9serial_Rxh+0x4f2>
				rx_char = textBuff[charIndex];
			}

			ignoreCount = 2;        /* throw out the next two characters */
		}
		else if(rx_char == 0x0D)    /* Handle carriage return */
    11ee:	8a 85       	ldd	r24, Y+10	; 0x0a
    11f0:	8d 30       	cpi	r24, 0x0D	; 13
    11f2:	09 f0       	breq	.+2      	; 0x11f6 <_Z9serial_Rxh+0x8a>
    11f4:	60 c0       	rjmp	.+192    	; 0x12b6 <_Z9serial_Rxh+0x14a>
		{
			if(receiving_msg)
    11f6:	80 91 ec 46 	lds	r24, 0x46EC	; 0x8046ec <_ZZ9serial_RxhE13receiving_msg>
    11fa:	88 23       	and	r24, r24
    11fc:	09 f4       	brne	.+2      	; 0x1200 <_Z9serial_Rxh+0x94>
    11fe:	41 c0       	rjmp	.+130    	; 0x1282 <_Z9serial_Rxh+0x116>
			{
				if(charIndex > 0)
    1200:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    1204:	88 23       	and	r24, r24
    1206:	d1 f1       	breq	.+116    	; 0x127c <_Z9serial_Rxh+0x110>
				{
					buff->type = SERIALBUS_MSG_QUERY;
    1208:	80 91 b6 46 	lds	r24, 0x46B6	; 0x8046b6 <__data_end>
    120c:	90 91 b7 46 	lds	r25, 0x46B7	; 0x8046b7 <__data_end+0x1>
    1210:	22 e0       	ldi	r18, 0x02	; 2
    1212:	fc 01       	movw	r30, r24
    1214:	20 83       	st	Z, r18
					buff->id = (SBMessageID)msg_ID;
    1216:	80 91 b6 46 	lds	r24, 0x46B6	; 0x8046b6 <__data_end>
    121a:	90 91 b7 46 	lds	r25, 0x46B7	; 0x8046b7 <__data_end+0x1>
    121e:	20 91 ed 46 	lds	r18, 0x46ED	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    1222:	30 91 ee 46 	lds	r19, 0x46EE	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    1226:	fc 01       	movw	r30, r24
    1228:	21 83       	std	Z+1, r18	; 0x01
    122a:	32 83       	std	Z+2, r19	; 0x02

					if(field_index > 0) /* terminate the last field */
    122c:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    1230:	88 23       	and	r24, r24
    1232:	e1 f0       	breq	.+56     	; 0x126c <_Z9serial_Rxh+0x100>
					{
						buff->fields[field_index - 1][field_len] = 0;
    1234:	40 91 b6 46 	lds	r20, 0x46B6	; 0x8046b6 <__data_end>
    1238:	50 91 b7 46 	lds	r21, 0x46B7	; 0x8046b7 <__data_end+0x1>
    123c:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    1240:	88 2f       	mov	r24, r24
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	bc 01       	movw	r22, r24
    1246:	61 50       	subi	r22, 0x01	; 1
    1248:	71 09       	sbc	r23, r1
    124a:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    124e:	88 2f       	mov	r24, r24
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	e4 e1       	ldi	r30, 0x14	; 20
    1254:	e6 9f       	mul	r30, r22
    1256:	90 01       	movw	r18, r0
    1258:	e7 9f       	mul	r30, r23
    125a:	30 0d       	add	r19, r0
    125c:	11 24       	eor	r1, r1
    125e:	24 0f       	add	r18, r20
    1260:	35 1f       	adc	r19, r21
    1262:	82 0f       	add	r24, r18
    1264:	93 1f       	adc	r25, r19
    1266:	03 96       	adiw	r24, 0x03	; 3
    1268:	fc 01       	movw	r30, r24
    126a:	10 82       	st	Z, r1
					}

					textBuff[charIndex] = '\0'; /* terminate last-message buffer */
    126c:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    1270:	88 2f       	mov	r24, r24
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	86 54       	subi	r24, 0x46	; 70
    1276:	99 4b       	sbci	r25, 0xB9	; 185
    1278:	fc 01       	movw	r30, r24
    127a:	10 82       	st	Z, r1
				}

				sb_send_NewLine();
    127c:	0e 94 7c 5e 	call	0xbcf8	; 0xbcf8 <sb_send_NewLine>
    1280:	09 c0       	rjmp	.+18     	; 0x1294 <_Z9serial_Rxh+0x128>
			}
			else
			{
				buff->id = SB_INVALID_MESSAGE; /* print help message */
    1282:	80 91 b6 46 	lds	r24, 0x46B6	; 0x8046b6 <__data_end>
    1286:	90 91 b7 46 	lds	r25, 0x46B7	; 0x8046b7 <__data_end+0x1>
    128a:	2f ef       	ldi	r18, 0xFF	; 255
    128c:	3f ef       	ldi	r19, 0xFF	; 255
    128e:	fc 01       	movw	r30, r24
    1290:	21 83       	std	Z+1, r18	; 0x01
    1292:	32 83       	std	Z+2, r19	; 0x02
			}

			charIndex = 0;
    1294:	10 92 b9 46 	sts	0x46B9, r1	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
			field_len = 0;
    1298:	10 92 f0 46 	sts	0x46F0, r1	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
			msg_ID = LB_MESSAGE_EMPTY;
    129c:	10 92 ed 46 	sts	0x46ED, r1	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    12a0:	10 92 ee 46 	sts	0x46EE, r1	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>

			field_index = 0;
    12a4:	10 92 ef 46 	sts	0x46EF, r1	; 0x8046ef <_ZZ9serial_RxhE11field_index>
			buff = NULL;
    12a8:	10 92 b6 46 	sts	0x46B6, r1	; 0x8046b6 <__data_end>
    12ac:	10 92 b7 46 	sts	0x46B7, r1	; 0x8046b7 <__data_end+0x1>

			receiving_msg = false;
    12b0:	10 92 ec 46 	sts	0x46EC, r1	; 0x8046ec <_ZZ9serial_RxhE13receiving_msg>
			{
				sb_echo_char(rx_char);
			}
		}
	}	
}
    12b4:	d4 c1       	rjmp	.+936    	; 0x165e <_Z9serial_Rxh+0x4f2>
			field_index = 0;
			buff = NULL;

			receiving_msg = false;
		}
		else if(rx_char)
    12b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    12b8:	88 23       	and	r24, r24
    12ba:	09 f4       	brne	.+2      	; 0x12be <_Z9serial_Rxh+0x152>
    12bc:	d0 c1       	rjmp	.+928    	; 0x165e <_Z9serial_Rxh+0x4f2>
		{
			textBuff[charIndex] = rx_char;  /* hold the characters for re-use */
    12be:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    12c2:	88 2f       	mov	r24, r24
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	86 54       	subi	r24, 0x46	; 70
    12c8:	99 4b       	sbci	r25, 0xB9	; 185
    12ca:	2a 85       	ldd	r18, Y+10	; 0x0a
    12cc:	fc 01       	movw	r30, r24
    12ce:	20 83       	st	Z, r18

			if(charIndex)
    12d0:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    12d4:	88 23       	and	r24, r24
    12d6:	09 f4       	brne	.+2      	; 0x12da <_Z9serial_Rxh+0x16e>
    12d8:	7c c1       	rjmp	.+760    	; 0x15d2 <_Z9serial_Rxh+0x466>
			{
				if(rx_char == 0x7F)         /* Handle backspace */
    12da:	8a 85       	ldd	r24, Y+10	; 0x0a
    12dc:	8f 37       	cpi	r24, 0x7F	; 127
    12de:	09 f0       	breq	.+2      	; 0x12e2 <_Z9serial_Rxh+0x176>
    12e0:	a1 c0       	rjmp	.+322    	; 0x1424 <_Z9serial_Rxh+0x2b8>
				{
					charIndex--;
    12e2:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    12e6:	81 50       	subi	r24, 0x01	; 1
    12e8:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
					if(field_index == 0)
    12ec:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    12f0:	88 23       	and	r24, r24
    12f2:	29 f5       	brne	.+74     	; 0x133e <_Z9serial_Rxh+0x1d2>
					{
						msg_ID -= textBuff[charIndex];
    12f4:	20 91 ed 46 	lds	r18, 0x46ED	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    12f8:	30 91 ee 46 	lds	r19, 0x46EE	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    12fc:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    1300:	88 2f       	mov	r24, r24
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	86 54       	subi	r24, 0x46	; 70
    1306:	99 4b       	sbci	r25, 0xB9	; 185
    1308:	fc 01       	movw	r30, r24
    130a:	80 81       	ld	r24, Z
    130c:	88 2f       	mov	r24, r24
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	a9 01       	movw	r20, r18
    1312:	48 1b       	sub	r20, r24
    1314:	59 0b       	sbc	r21, r25
    1316:	ca 01       	movw	r24, r20
    1318:	80 93 ed 46 	sts	0x46ED, r24	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    131c:	90 93 ee 46 	sts	0x46EE, r25	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
						msg_ID /= 10;
    1320:	80 91 ed 46 	lds	r24, 0x46ED	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    1324:	90 91 ee 46 	lds	r25, 0x46EE	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    1328:	2a e0       	ldi	r18, 0x0A	; 10
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	b9 01       	movw	r22, r18
    132e:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
    1332:	cb 01       	movw	r24, r22
    1334:	80 93 ed 46 	sts	0x46ED, r24	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    1338:	90 93 ee 46 	sts	0x46EE, r25	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    133c:	63 c0       	rjmp	.+198    	; 0x1404 <_Z9serial_Rxh+0x298>
					}
					else if(field_len)
    133e:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    1342:	88 23       	and	r24, r24
    1344:	11 f1       	breq	.+68     	; 0x138a <_Z9serial_Rxh+0x21e>
					{
						field_len--;
    1346:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    134a:	81 50       	subi	r24, 0x01	; 1
    134c:	80 93 f0 46 	sts	0x46F0, r24	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
						buff->fields[field_index - 1][field_len] = '\0';
    1350:	40 91 b6 46 	lds	r20, 0x46B6	; 0x8046b6 <__data_end>
    1354:	50 91 b7 46 	lds	r21, 0x46B7	; 0x8046b7 <__data_end+0x1>
    1358:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    135c:	88 2f       	mov	r24, r24
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	bc 01       	movw	r22, r24
    1362:	61 50       	subi	r22, 0x01	; 1
    1364:	71 09       	sbc	r23, r1
    1366:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    136a:	88 2f       	mov	r24, r24
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	e4 e1       	ldi	r30, 0x14	; 20
    1370:	e6 9f       	mul	r30, r22
    1372:	90 01       	movw	r18, r0
    1374:	e7 9f       	mul	r30, r23
    1376:	30 0d       	add	r19, r0
    1378:	11 24       	eor	r1, r1
    137a:	24 0f       	add	r18, r20
    137c:	35 1f       	adc	r19, r21
    137e:	82 0f       	add	r24, r18
    1380:	93 1f       	adc	r25, r19
    1382:	03 96       	adiw	r24, 0x03	; 3
    1384:	fc 01       	movw	r30, r24
    1386:	10 82       	st	Z, r1
    1388:	3d c0       	rjmp	.+122    	; 0x1404 <_Z9serial_Rxh+0x298>
					}
					else if(textBuff[charIndex] == ' ')
    138a:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    138e:	88 2f       	mov	r24, r24
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	86 54       	subi	r24, 0x46	; 70
    1394:	99 4b       	sbci	r25, 0xB9	; 185
    1396:	fc 01       	movw	r30, r24
    1398:	80 81       	ld	r24, Z
    139a:	80 32       	cpi	r24, 0x20	; 32
    139c:	d9 f4       	brne	.+54     	; 0x13d4 <_Z9serial_Rxh+0x268>
					{
						field_index--;
    139e:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    13a2:	81 50       	subi	r24, 0x01	; 1
    13a4:	80 93 ef 46 	sts	0x46EF, r24	; 0x8046ef <_ZZ9serial_RxhE11field_index>
						field_len = strlen(buff->fields[field_index]);
    13a8:	20 91 b6 46 	lds	r18, 0x46B6	; 0x8046b6 <__data_end>
    13ac:	30 91 b7 46 	lds	r19, 0x46B7	; 0x8046b7 <__data_end+0x1>
    13b0:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    13b4:	48 2f       	mov	r20, r24
    13b6:	50 e0       	ldi	r21, 0x00	; 0
    13b8:	64 e1       	ldi	r22, 0x14	; 20
    13ba:	64 9f       	mul	r22, r20
    13bc:	c0 01       	movw	r24, r0
    13be:	65 9f       	mul	r22, r21
    13c0:	90 0d       	add	r25, r0
    13c2:	11 24       	eor	r1, r1
    13c4:	03 96       	adiw	r24, 0x03	; 3
    13c6:	82 0f       	add	r24, r18
    13c8:	93 1f       	adc	r25, r19
    13ca:	0e 94 ac 77 	call	0xef58	; 0xef58 <strlen>
    13ce:	80 93 f0 46 	sts	0x46F0, r24	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    13d2:	18 c0       	rjmp	.+48     	; 0x1404 <_Z9serial_Rxh+0x298>
					}
					else
					{
						buff->fields[field_index][0] = '\0';
    13d4:	20 91 b6 46 	lds	r18, 0x46B6	; 0x8046b6 <__data_end>
    13d8:	30 91 b7 46 	lds	r19, 0x46B7	; 0x8046b7 <__data_end+0x1>
    13dc:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    13e0:	48 2f       	mov	r20, r24
    13e2:	50 e0       	ldi	r21, 0x00	; 0
    13e4:	64 e1       	ldi	r22, 0x14	; 20
    13e6:	64 9f       	mul	r22, r20
    13e8:	c0 01       	movw	r24, r0
    13ea:	65 9f       	mul	r22, r21
    13ec:	90 0d       	add	r25, r0
    13ee:	11 24       	eor	r1, r1
    13f0:	82 0f       	add	r24, r18
    13f2:	93 1f       	adc	r25, r19
    13f4:	03 96       	adiw	r24, 0x03	; 3
    13f6:	fc 01       	movw	r30, r24
    13f8:	10 82       	st	Z, r1
						field_index--;
    13fa:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    13fe:	81 50       	subi	r24, 0x01	; 1
    1400:	80 93 ef 46 	sts	0x46EF, r24	; 0x8046ef <_ZZ9serial_RxhE11field_index>
					}

					textBuff[charIndex] = '\0'; /* replace deleted char with null */
    1404:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    1408:	88 2f       	mov	r24, r24
    140a:	90 e0       	ldi	r25, 0x00	; 0
    140c:	86 54       	subi	r24, 0x46	; 70
    140e:	99 4b       	sbci	r25, 0xB9	; 185
    1410:	fc 01       	movw	r30, r24
    1412:	10 82       	st	Z, r1

					if(charIndex == 0)
    1414:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    1418:	88 23       	and	r24, r24
    141a:	09 f0       	breq	.+2      	; 0x141e <_Z9serial_Rxh+0x2b2>
    141c:	1a c1       	rjmp	.+564    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					{
						receiving_msg = false;
    141e:	10 92 ec 46 	sts	0x46EC, r1	; 0x8046ec <_ZZ9serial_RxhE13receiving_msg>
    1422:	17 c1       	rjmp	.+558    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					}
				}
				else
				{
					if(rx_char == ' ')
    1424:	8a 85       	ldd	r24, Y+10	; 0x0a
    1426:	80 32       	cpi	r24, 0x20	; 32
    1428:	09 f0       	breq	.+2      	; 0x142c <_Z9serial_Rxh+0x2c0>
    142a:	55 c0       	rjmp	.+170    	; 0x14d6 <_Z9serial_Rxh+0x36a>
					{
						if((textBuff[charIndex - 1] == ' ') || ((field_index + 1) >= LINKBUS_MAX_MSG_NUMBER_OF_FIELDS))
    142c:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    1430:	88 2f       	mov	r24, r24
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	01 97       	sbiw	r24, 0x01	; 1
    1436:	86 54       	subi	r24, 0x46	; 70
    1438:	99 4b       	sbci	r25, 0xB9	; 185
    143a:	fc 01       	movw	r30, r24
    143c:	80 81       	ld	r24, Z
    143e:	80 32       	cpi	r24, 0x20	; 32
    1440:	39 f0       	breq	.+14     	; 0x1450 <_Z9serial_Rxh+0x2e4>
    1442:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    1446:	88 2f       	mov	r24, r24
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	01 96       	adiw	r24, 0x01	; 1
    144c:	03 97       	sbiw	r24, 0x03	; 3
    144e:	14 f0       	brlt	.+4      	; 0x1454 <_Z9serial_Rxh+0x2e8>
						{
							rx_char = '\0';
    1450:	1a 86       	std	Y+10, r1	; 0x0a
    1452:	ff c0       	rjmp	.+510    	; 0x1652 <_Z9serial_Rxh+0x4e6>
						}
						else
						{
							if(field_index > 0)
    1454:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    1458:	88 23       	and	r24, r24
    145a:	e1 f0       	breq	.+56     	; 0x1494 <_Z9serial_Rxh+0x328>
							{
								buff->fields[field_index - 1][field_len] = '\0';
    145c:	40 91 b6 46 	lds	r20, 0x46B6	; 0x8046b6 <__data_end>
    1460:	50 91 b7 46 	lds	r21, 0x46B7	; 0x8046b7 <__data_end+0x1>
    1464:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    1468:	88 2f       	mov	r24, r24
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	bc 01       	movw	r22, r24
    146e:	61 50       	subi	r22, 0x01	; 1
    1470:	71 09       	sbc	r23, r1
    1472:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    1476:	88 2f       	mov	r24, r24
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	e4 e1       	ldi	r30, 0x14	; 20
    147c:	e6 9f       	mul	r30, r22
    147e:	90 01       	movw	r18, r0
    1480:	e7 9f       	mul	r30, r23
    1482:	30 0d       	add	r19, r0
    1484:	11 24       	eor	r1, r1
    1486:	24 0f       	add	r18, r20
    1488:	35 1f       	adc	r19, r21
    148a:	82 0f       	add	r24, r18
    148c:	93 1f       	adc	r25, r19
    148e:	03 96       	adiw	r24, 0x03	; 3
    1490:	fc 01       	movw	r30, r24
    1492:	10 82       	st	Z, r1
							}

							field_index++;
    1494:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    1498:	8f 5f       	subi	r24, 0xFF	; 255
    149a:	80 93 ef 46 	sts	0x46EF, r24	; 0x8046ef <_ZZ9serial_RxhE11field_index>
							field_len = 0;
    149e:	10 92 f0 46 	sts	0x46F0, r1	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
							charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    14a2:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    14a6:	88 2f       	mov	r24, r24
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	01 96       	adiw	r24, 0x01	; 1
    14ac:	8a 83       	std	Y+2, r24	; 0x02
    14ae:	9b 83       	std	Y+3, r25	; 0x03
    14b0:	81 e3       	ldi	r24, 0x31	; 49
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	8c 83       	std	Y+4, r24	; 0x04
    14b6:	9d 83       	std	Y+5, r25	; 0x05
    14b8:	2a 81       	ldd	r18, Y+2	; 0x02
    14ba:	3b 81       	ldd	r19, Y+3	; 0x03
    14bc:	8c 81       	ldd	r24, Y+4	; 0x04
    14be:	9d 81       	ldd	r25, Y+5	; 0x05
    14c0:	28 17       	cp	r18, r24
    14c2:	39 07       	cpc	r19, r25
    14c4:	1c f4       	brge	.+6      	; 0x14cc <_Z9serial_Rxh+0x360>
    14c6:	8a 81       	ldd	r24, Y+2	; 0x02
    14c8:	9b 81       	ldd	r25, Y+3	; 0x03
    14ca:	02 c0       	rjmp	.+4      	; 0x14d0 <_Z9serial_Rxh+0x364>
    14cc:	8c 81       	ldd	r24, Y+4	; 0x04
    14ce:	9d 81       	ldd	r25, Y+5	; 0x05
    14d0:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    14d4:	be c0       	rjmp	.+380    	; 0x1652 <_Z9serial_Rxh+0x4e6>
						}
					}
					else if(field_len < LINKBUS_MAX_MSG_FIELD_LENGTH)
    14d6:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    14da:	85 31       	cpi	r24, 0x15	; 21
    14dc:	08 f0       	brcs	.+2      	; 0x14e0 <_Z9serial_Rxh+0x374>
    14de:	77 c0       	rjmp	.+238    	; 0x15ce <_Z9serial_Rxh+0x462>
					{
						if(field_index == 0)    /* message ID received */
    14e0:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    14e4:	88 23       	and	r24, r24
    14e6:	e1 f4       	brne	.+56     	; 0x1520 <_Z9serial_Rxh+0x3b4>
						{
							msg_ID = msg_ID * 10 + rx_char;
    14e8:	80 91 ed 46 	lds	r24, 0x46ED	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    14ec:	90 91 ee 46 	lds	r25, 0x46EE	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    14f0:	88 0f       	add	r24, r24
    14f2:	99 1f       	adc	r25, r25
    14f4:	9c 01       	movw	r18, r24
    14f6:	22 0f       	add	r18, r18
    14f8:	33 1f       	adc	r19, r19
    14fa:	22 0f       	add	r18, r18
    14fc:	33 1f       	adc	r19, r19
    14fe:	28 0f       	add	r18, r24
    1500:	39 1f       	adc	r19, r25
    1502:	8a 85       	ldd	r24, Y+10	; 0x0a
    1504:	88 2f       	mov	r24, r24
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	82 0f       	add	r24, r18
    150a:	93 1f       	adc	r25, r19
    150c:	80 93 ed 46 	sts	0x46ED, r24	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    1510:	90 93 ee 46 	sts	0x46EE, r25	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
							field_len++;
    1514:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    1518:	8f 5f       	subi	r24, 0xFF	; 255
    151a:	80 93 f0 46 	sts	0x46F0, r24	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    151e:	3d c0       	rjmp	.+122    	; 0x159a <_Z9serial_Rxh+0x42e>
						}
						else
						{
							buff->fields[field_index - 1][field_len++] = rx_char;
    1520:	40 91 b6 46 	lds	r20, 0x46B6	; 0x8046b6 <__data_end>
    1524:	50 91 b7 46 	lds	r21, 0x46B7	; 0x8046b7 <__data_end+0x1>
    1528:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    152c:	88 2f       	mov	r24, r24
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	bc 01       	movw	r22, r24
    1532:	61 50       	subi	r22, 0x01	; 1
    1534:	71 09       	sbc	r23, r1
    1536:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    153a:	91 e0       	ldi	r25, 0x01	; 1
    153c:	98 0f       	add	r25, r24
    153e:	90 93 f0 46 	sts	0x46F0, r25	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    1542:	88 2f       	mov	r24, r24
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	e4 e1       	ldi	r30, 0x14	; 20
    1548:	e6 9f       	mul	r30, r22
    154a:	90 01       	movw	r18, r0
    154c:	e7 9f       	mul	r30, r23
    154e:	30 0d       	add	r19, r0
    1550:	11 24       	eor	r1, r1
    1552:	24 0f       	add	r18, r20
    1554:	35 1f       	adc	r19, r21
    1556:	82 0f       	add	r24, r18
    1558:	93 1f       	adc	r25, r19
    155a:	03 96       	adiw	r24, 0x03	; 3
    155c:	2a 85       	ldd	r18, Y+10	; 0x0a
    155e:	fc 01       	movw	r30, r24
    1560:	20 83       	st	Z, r18
							buff->fields[field_index - 1][field_len] = '\0';
    1562:	40 91 b6 46 	lds	r20, 0x46B6	; 0x8046b6 <__data_end>
    1566:	50 91 b7 46 	lds	r21, 0x46B7	; 0x8046b7 <__data_end+0x1>
    156a:	80 91 ef 46 	lds	r24, 0x46EF	; 0x8046ef <_ZZ9serial_RxhE11field_index>
    156e:	88 2f       	mov	r24, r24
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	bc 01       	movw	r22, r24
    1574:	61 50       	subi	r22, 0x01	; 1
    1576:	71 09       	sbc	r23, r1
    1578:	80 91 f0 46 	lds	r24, 0x46F0	; 0x8046f0 <_ZZ9serial_RxhE9field_len>
    157c:	88 2f       	mov	r24, r24
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	e4 e1       	ldi	r30, 0x14	; 20
    1582:	e6 9f       	mul	r30, r22
    1584:	90 01       	movw	r18, r0
    1586:	e7 9f       	mul	r30, r23
    1588:	30 0d       	add	r19, r0
    158a:	11 24       	eor	r1, r1
    158c:	24 0f       	add	r18, r20
    158e:	35 1f       	adc	r19, r21
    1590:	82 0f       	add	r24, r18
    1592:	93 1f       	adc	r25, r19
    1594:	03 96       	adiw	r24, 0x03	; 3
    1596:	fc 01       	movw	r30, r24
    1598:	10 82       	st	Z, r1
						}

						charIndex = MIN(charIndex + 1, (LINKBUS_MAX_MSG_LENGTH - 1));
    159a:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    159e:	88 2f       	mov	r24, r24
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	01 96       	adiw	r24, 0x01	; 1
    15a4:	8e 83       	std	Y+6, r24	; 0x06
    15a6:	9f 83       	std	Y+7, r25	; 0x07
    15a8:	81 e3       	ldi	r24, 0x31	; 49
    15aa:	90 e0       	ldi	r25, 0x00	; 0
    15ac:	88 87       	std	Y+8, r24	; 0x08
    15ae:	99 87       	std	Y+9, r25	; 0x09
    15b0:	2e 81       	ldd	r18, Y+6	; 0x06
    15b2:	3f 81       	ldd	r19, Y+7	; 0x07
    15b4:	88 85       	ldd	r24, Y+8	; 0x08
    15b6:	99 85       	ldd	r25, Y+9	; 0x09
    15b8:	28 17       	cp	r18, r24
    15ba:	39 07       	cpc	r19, r25
    15bc:	1c f4       	brge	.+6      	; 0x15c4 <_Z9serial_Rxh+0x458>
    15be:	8e 81       	ldd	r24, Y+6	; 0x06
    15c0:	9f 81       	ldd	r25, Y+7	; 0x07
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <_Z9serial_Rxh+0x45c>
    15c4:	88 85       	ldd	r24, Y+8	; 0x08
    15c6:	99 85       	ldd	r25, Y+9	; 0x09
    15c8:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    15cc:	42 c0       	rjmp	.+132    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					}
					else
					{
						rx_char = '\0';
    15ce:	1a 86       	std	Y+10, r1	; 0x0a
    15d0:	40 c0       	rjmp	.+128    	; 0x1652 <_Z9serial_Rxh+0x4e6>
					}
				}
			}
			else
			{
				if(rx_char == 0x7F) /* Handle Backspace */
    15d2:	8a 85       	ldd	r24, Y+10	; 0x0a
    15d4:	8f 37       	cpi	r24, 0x7F	; 127
    15d6:	69 f4       	brne	.+26     	; 0x15f2 <_Z9serial_Rxh+0x486>
				{
					if(msg_ID <= 0)
    15d8:	80 91 ed 46 	lds	r24, 0x46ED	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    15dc:	90 91 ee 46 	lds	r25, 0x46EE	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    15e0:	18 16       	cp	r1, r24
    15e2:	19 06       	cpc	r1, r25
    15e4:	0c f0       	brlt	.+2      	; 0x15e8 <_Z9serial_Rxh+0x47c>
					{
						rx_char = '\0';
    15e6:	1a 86       	std	Y+10, r1	; 0x0a
					}

					msg_ID = 0;
    15e8:	10 92 ed 46 	sts	0x46ED, r1	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    15ec:	10 92 ee 46 	sts	0x46EE, r1	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>
    15f0:	30 c0       	rjmp	.+96     	; 0x1652 <_Z9serial_Rxh+0x4e6>
				}
				else if(rx_char == ' ') /* Handle Space */
    15f2:	8a 85       	ldd	r24, Y+10	; 0x0a
    15f4:	80 32       	cpi	r24, 0x20	; 32
    15f6:	11 f4       	brne	.+4      	; 0x15fc <_Z9serial_Rxh+0x490>
				{
					rx_char = '\0';
    15f8:	1a 86       	std	Y+10, r1	; 0x0a
    15fa:	2b c0       	rjmp	.+86     	; 0x1652 <_Z9serial_Rxh+0x4e6>
				}
				else                    /* start of new message */
				{
					uint8_t i;
					field_index = 0;
    15fc:	10 92 ef 46 	sts	0x46EF, r1	; 0x8046ef <_ZZ9serial_RxhE11field_index>
					msg_ID = rx_char;
    1600:	8a 85       	ldd	r24, Y+10	; 0x0a
    1602:	88 2f       	mov	r24, r24
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	80 93 ed 46 	sts	0x46ED, r24	; 0x8046ed <_ZZ9serial_RxhE6msg_ID>
    160a:	90 93 ee 46 	sts	0x46EE, r25	; 0x8046ee <_ZZ9serial_RxhE6msg_ID+0x1>

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    160e:	19 82       	std	Y+1, r1	; 0x01
    1610:	89 81       	ldd	r24, Y+1	; 0x01
    1612:	83 30       	cpi	r24, 0x03	; 3
    1614:	b0 f4       	brcc	.+44     	; 0x1642 <_Z9serial_Rxh+0x4d6>
					{
						buff->fields[i][0] = '\0';
    1616:	20 91 b6 46 	lds	r18, 0x46B6	; 0x8046b6 <__data_end>
    161a:	30 91 b7 46 	lds	r19, 0x46B7	; 0x8046b7 <__data_end+0x1>
    161e:	89 81       	ldd	r24, Y+1	; 0x01
    1620:	48 2f       	mov	r20, r24
    1622:	50 e0       	ldi	r21, 0x00	; 0
    1624:	64 e1       	ldi	r22, 0x14	; 20
    1626:	64 9f       	mul	r22, r20
    1628:	c0 01       	movw	r24, r0
    162a:	65 9f       	mul	r22, r21
    162c:	90 0d       	add	r25, r0
    162e:	11 24       	eor	r1, r1
    1630:	82 0f       	add	r24, r18
    1632:	93 1f       	adc	r25, r19
    1634:	03 96       	adiw	r24, 0x03	; 3
    1636:	fc 01       	movw	r30, r24
    1638:	10 82       	st	Z, r1
					uint8_t i;
					field_index = 0;
					msg_ID = rx_char;

					/* Empty the field buffers */
					for(i = 0; i < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; i++)
    163a:	89 81       	ldd	r24, Y+1	; 0x01
    163c:	8f 5f       	subi	r24, 0xFF	; 255
    163e:	89 83       	std	Y+1, r24	; 0x01
    1640:	e7 cf       	rjmp	.-50     	; 0x1610 <_Z9serial_Rxh+0x4a4>
					{
						buff->fields[i][0] = '\0';
					}

					receiving_msg = true;
    1642:	81 e0       	ldi	r24, 0x01	; 1
    1644:	80 93 ec 46 	sts	0x46EC, r24	; 0x8046ec <_ZZ9serial_RxhE13receiving_msg>
					charIndex++;
    1648:	80 91 b9 46 	lds	r24, 0x46B9	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
    164c:	8f 5f       	subi	r24, 0xFF	; 255
    164e:	80 93 b9 46 	sts	0x46B9, r24	; 0x8046b9 <_ZZ9serial_RxhE9charIndex>
				}
			}

			if(rx_char)
    1652:	8a 85       	ldd	r24, Y+10	; 0x0a
    1654:	88 23       	and	r24, r24
    1656:	19 f0       	breq	.+6      	; 0x165e <_Z9serial_Rxh+0x4f2>
			{
				sb_echo_char(rx_char);
    1658:	8a 85       	ldd	r24, Y+10	; 0x0a
    165a:	0e 94 8d 5e 	call	0xbd1a	; 0xbd1a <sb_echo_char>
			}
		}
	}	
}
    165e:	00 00       	nop
    1660:	2a 96       	adiw	r28, 0x0a	; 10
    1662:	cd bf       	out	0x3d, r28	; 61
    1664:	de bf       	out	0x3e, r29	; 62
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	08 95       	ret

0000166c <__vector_20>:

/**

*/
ISR(USART0_DRE_vect)
{
    166c:	1f 92       	push	r1
    166e:	0f 92       	push	r0
    1670:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1674:	0f 92       	push	r0
    1676:	11 24       	eor	r1, r1
    1678:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    167c:	0f 92       	push	r0
    167e:	2f 93       	push	r18
    1680:	3f 93       	push	r19
    1682:	4f 93       	push	r20
    1684:	5f 93       	push	r21
    1686:	6f 93       	push	r22
    1688:	7f 93       	push	r23
    168a:	8f 93       	push	r24
    168c:	9f 93       	push	r25
    168e:	af 93       	push	r26
    1690:	bf 93       	push	r27
    1692:	ef 93       	push	r30
    1694:	ff 93       	push	r31
    1696:	cf 93       	push	r28
    1698:	df 93       	push	r29
    169a:	cd b7       	in	r28, 0x3d	; 61
    169c:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_0)
    169e:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    16a2:	88 23       	and	r24, r24
    16a4:	09 f0       	breq	.+2      	; 0x16a8 <__vector_20+0x3c>
    16a6:	45 c0       	rjmp	.+138    	; 0x1732 <__vector_20+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    16a8:	80 91 f1 46 	lds	r24, 0x46F1	; 0x8046f1 <_ZZ11__vector_20E4buff>
    16ac:	90 91 f2 46 	lds	r25, 0x46F2	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
    16b0:	89 2b       	or	r24, r25
    16b2:	31 f4       	brne	.+12     	; 0x16c0 <__vector_20+0x54>
		{
			buff = nextFullLBTxBuffer();
    16b4:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <_Z18nextFullLBTxBufferv>
    16b8:	80 93 f1 46 	sts	0x46F1, r24	; 0x8046f1 <_ZZ11__vector_20E4buff>
    16bc:	90 93 f2 46 	sts	0x46F2, r25	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
		}

		if((*buff)[charIndex])
    16c0:	20 91 f1 46 	lds	r18, 0x46F1	; 0x8046f1 <_ZZ11__vector_20E4buff>
    16c4:	30 91 f2 46 	lds	r19, 0x46F2	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
    16c8:	80 91 f3 46 	lds	r24, 0x46F3	; 0x8046f3 <_ZZ11__vector_20E9charIndex>
    16cc:	88 2f       	mov	r24, r24
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	82 0f       	add	r24, r18
    16d2:	93 1f       	adc	r25, r19
    16d4:	fc 01       	movw	r30, r24
    16d6:	80 81       	ld	r24, Z
    16d8:	88 23       	and	r24, r24
    16da:	a9 f0       	breq	.+42     	; 0x1706 <__vector_20+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	98 e0       	ldi	r25, 0x08	; 8
    16e0:	40 91 f1 46 	lds	r20, 0x46F1	; 0x8046f1 <_ZZ11__vector_20E4buff>
    16e4:	50 91 f2 46 	lds	r21, 0x46F2	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
    16e8:	20 91 f3 46 	lds	r18, 0x46F3	; 0x8046f3 <_ZZ11__vector_20E9charIndex>
    16ec:	31 e0       	ldi	r19, 0x01	; 1
    16ee:	32 0f       	add	r19, r18
    16f0:	30 93 f3 46 	sts	0x46F3, r19	; 0x8046f3 <_ZZ11__vector_20E9charIndex>
    16f4:	22 2f       	mov	r18, r18
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	24 0f       	add	r18, r20
    16fa:	35 1f       	adc	r19, r21
    16fc:	f9 01       	movw	r30, r18
    16fe:	20 81       	ld	r18, Z
    1700:	fc 01       	movw	r30, r24
    1702:	22 83       	std	Z+2, r18	; 0x02
    1704:	16 c0       	rjmp	.+44     	; 0x1732 <__vector_20+0xc6>
		}
		else
		{
			charIndex = 0;
    1706:	10 92 f3 46 	sts	0x46F3, r1	; 0x8046f3 <_ZZ11__vector_20E9charIndex>
			(*buff)[0] = '\0';
    170a:	80 91 f1 46 	lds	r24, 0x46F1	; 0x8046f1 <_ZZ11__vector_20E4buff>
    170e:	90 91 f2 46 	lds	r25, 0x46F2	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
    1712:	fc 01       	movw	r30, r24
    1714:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1716:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <_Z18nextFullLBTxBufferv>
    171a:	80 93 f1 46 	sts	0x46F1, r24	; 0x8046f1 <_ZZ11__vector_20E4buff>
    171e:	90 93 f2 46 	sts	0x46F2, r25	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
			if(!buff)
    1722:	80 91 f1 46 	lds	r24, 0x46F1	; 0x8046f1 <_ZZ11__vector_20E4buff>
    1726:	90 91 f2 46 	lds	r25, 0x46F2	; 0x8046f2 <_ZZ11__vector_20E4buff+0x1>
    172a:	89 2b       	or	r24, r25
    172c:	11 f4       	brne	.+4      	; 0x1732 <__vector_20+0xc6>
			{
				linkbus_end_tx();
    172e:	0e 94 97 54 	call	0xa92e	; 0xa92e <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_0)
    1732:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    1736:	88 23       	and	r24, r24
    1738:	09 f0       	breq	.+2      	; 0x173c <__vector_20+0xd0>
    173a:	45 c0       	rjmp	.+138    	; 0x17c6 <__vector_20+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    173c:	80 91 f4 46 	lds	r24, 0x46F4	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    1740:	90 91 f5 46 	lds	r25, 0x46F5	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
    1744:	89 2b       	or	r24, r25
    1746:	31 f4       	brne	.+12     	; 0x1754 <__vector_20+0xe8>
		{
			buff = nextFullSBTxBuffer();
    1748:	0e 94 f5 5b 	call	0xb7ea	; 0xb7ea <nextFullSBTxBuffer>
    174c:	80 93 f4 46 	sts	0x46F4, r24	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    1750:	90 93 f5 46 	sts	0x46F5, r25	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1754:	20 91 f4 46 	lds	r18, 0x46F4	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    1758:	30 91 f5 46 	lds	r19, 0x46F5	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
    175c:	80 91 f6 46 	lds	r24, 0x46F6	; 0x8046f6 <_ZZ11__vector_20E9charIndex_0>
    1760:	88 2f       	mov	r24, r24
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	82 0f       	add	r24, r18
    1766:	93 1f       	adc	r25, r19
    1768:	fc 01       	movw	r30, r24
    176a:	80 81       	ld	r24, Z
    176c:	88 23       	and	r24, r24
    176e:	a9 f0       	breq	.+42     	; 0x179a <__vector_20+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
    1770:	80 e0       	ldi	r24, 0x00	; 0
    1772:	98 e0       	ldi	r25, 0x08	; 8
    1774:	40 91 f4 46 	lds	r20, 0x46F4	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    1778:	50 91 f5 46 	lds	r21, 0x46F5	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
    177c:	20 91 f6 46 	lds	r18, 0x46F6	; 0x8046f6 <_ZZ11__vector_20E9charIndex_0>
    1780:	31 e0       	ldi	r19, 0x01	; 1
    1782:	32 0f       	add	r19, r18
    1784:	30 93 f6 46 	sts	0x46F6, r19	; 0x8046f6 <_ZZ11__vector_20E9charIndex_0>
    1788:	22 2f       	mov	r18, r18
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	24 0f       	add	r18, r20
    178e:	35 1f       	adc	r19, r21
    1790:	f9 01       	movw	r30, r18
    1792:	20 81       	ld	r18, Z
    1794:	fc 01       	movw	r30, r24
    1796:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1798:	16 c0       	rjmp	.+44     	; 0x17c6 <__vector_20+0x15a>
			/* Put data into buffer, sends the data */
			USART0.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    179a:	10 92 f6 46 	sts	0x46F6, r1	; 0x8046f6 <_ZZ11__vector_20E9charIndex_0>
			(*buff)[0] = '\0';
    179e:	80 91 f4 46 	lds	r24, 0x46F4	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    17a2:	90 91 f5 46 	lds	r25, 0x46F5	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
    17a6:	fc 01       	movw	r30, r24
    17a8:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    17aa:	0e 94 f5 5b 	call	0xb7ea	; 0xb7ea <nextFullSBTxBuffer>
    17ae:	80 93 f4 46 	sts	0x46F4, r24	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    17b2:	90 93 f5 46 	sts	0x46F5, r25	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
			if(!buff)
    17b6:	80 91 f4 46 	lds	r24, 0x46F4	; 0x8046f4 <_ZZ11__vector_20E4buff_0>
    17ba:	90 91 f5 46 	lds	r25, 0x46F5	; 0x8046f5 <_ZZ11__vector_20E4buff_0+0x1>
    17be:	89 2b       	or	r24, r25
    17c0:	11 f4       	brne	.+4      	; 0x17c6 <__vector_20+0x15a>
			{
				serialbus_end_tx();
    17c2:	0e 94 4a 5d 	call	0xba94	; 0xba94 <serialbus_end_tx>
			}
		}
	}
}
    17c6:	00 00       	nop
    17c8:	df 91       	pop	r29
    17ca:	cf 91       	pop	r28
    17cc:	ff 91       	pop	r31
    17ce:	ef 91       	pop	r30
    17d0:	bf 91       	pop	r27
    17d2:	af 91       	pop	r26
    17d4:	9f 91       	pop	r25
    17d6:	8f 91       	pop	r24
    17d8:	7f 91       	pop	r23
    17da:	6f 91       	pop	r22
    17dc:	5f 91       	pop	r21
    17de:	4f 91       	pop	r20
    17e0:	3f 91       	pop	r19
    17e2:	2f 91       	pop	r18
    17e4:	0f 90       	pop	r0
    17e6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    17ea:	0f 90       	pop	r0
    17ec:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17f0:	0f 90       	pop	r0
    17f2:	1f 90       	pop	r1
    17f4:	18 95       	reti

000017f6 <__vector_56>:

/**

*/
ISR(USART4_DRE_vect)
{
    17f6:	1f 92       	push	r1
    17f8:	0f 92       	push	r0
    17fa:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    17fe:	0f 92       	push	r0
    1800:	11 24       	eor	r1, r1
    1802:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1806:	0f 92       	push	r0
    1808:	2f 93       	push	r18
    180a:	3f 93       	push	r19
    180c:	4f 93       	push	r20
    180e:	5f 93       	push	r21
    1810:	6f 93       	push	r22
    1812:	7f 93       	push	r23
    1814:	8f 93       	push	r24
    1816:	9f 93       	push	r25
    1818:	af 93       	push	r26
    181a:	bf 93       	push	r27
    181c:	ef 93       	push	r30
    181e:	ff 93       	push	r31
    1820:	cf 93       	push	r28
    1822:	df 93       	push	r29
    1824:	cd b7       	in	r28, 0x3d	; 61
    1826:	de b7       	in	r29, 0x3e	; 62
	if(g_linkbus_usart_number == USART_4)
    1828:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    182c:	84 30       	cpi	r24, 0x04	; 4
    182e:	09 f0       	breq	.+2      	; 0x1832 <__vector_56+0x3c>
    1830:	45 c0       	rjmp	.+138    	; 0x18bc <__vector_56+0xc6>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1832:	80 91 f7 46 	lds	r24, 0x46F7	; 0x8046f7 <_ZZ11__vector_56E4buff>
    1836:	90 91 f8 46 	lds	r25, 0x46F8	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
    183a:	89 2b       	or	r24, r25
    183c:	31 f4       	brne	.+12     	; 0x184a <__vector_56+0x54>
		{
			buff = nextFullLBTxBuffer();
    183e:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <_Z18nextFullLBTxBufferv>
    1842:	80 93 f7 46 	sts	0x46F7, r24	; 0x8046f7 <_ZZ11__vector_56E4buff>
    1846:	90 93 f8 46 	sts	0x46F8, r25	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
		}

		if((*buff)[charIndex])
    184a:	20 91 f7 46 	lds	r18, 0x46F7	; 0x8046f7 <_ZZ11__vector_56E4buff>
    184e:	30 91 f8 46 	lds	r19, 0x46F8	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
    1852:	80 91 f9 46 	lds	r24, 0x46F9	; 0x8046f9 <_ZZ11__vector_56E9charIndex>
    1856:	88 2f       	mov	r24, r24
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	82 0f       	add	r24, r18
    185c:	93 1f       	adc	r25, r19
    185e:	fc 01       	movw	r30, r24
    1860:	80 81       	ld	r24, Z
    1862:	88 23       	and	r24, r24
    1864:	a9 f0       	breq	.+42     	; 0x1890 <__vector_56+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    1866:	80 e8       	ldi	r24, 0x80	; 128
    1868:	98 e0       	ldi	r25, 0x08	; 8
    186a:	40 91 f7 46 	lds	r20, 0x46F7	; 0x8046f7 <_ZZ11__vector_56E4buff>
    186e:	50 91 f8 46 	lds	r21, 0x46F8	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
    1872:	20 91 f9 46 	lds	r18, 0x46F9	; 0x8046f9 <_ZZ11__vector_56E9charIndex>
    1876:	31 e0       	ldi	r19, 0x01	; 1
    1878:	32 0f       	add	r19, r18
    187a:	30 93 f9 46 	sts	0x46F9, r19	; 0x8046f9 <_ZZ11__vector_56E9charIndex>
    187e:	22 2f       	mov	r18, r18
    1880:	30 e0       	ldi	r19, 0x00	; 0
    1882:	24 0f       	add	r18, r20
    1884:	35 1f       	adc	r19, r21
    1886:	f9 01       	movw	r30, r18
    1888:	20 81       	ld	r18, Z
    188a:	fc 01       	movw	r30, r24
    188c:	22 83       	std	Z+2, r18	; 0x02
    188e:	16 c0       	rjmp	.+44     	; 0x18bc <__vector_56+0xc6>
		}
		else
		{
			charIndex = 0;
    1890:	10 92 f9 46 	sts	0x46F9, r1	; 0x8046f9 <_ZZ11__vector_56E9charIndex>
			(*buff)[0] = '\0';
    1894:	80 91 f7 46 	lds	r24, 0x46F7	; 0x8046f7 <_ZZ11__vector_56E4buff>
    1898:	90 91 f8 46 	lds	r25, 0x46F8	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
    189c:	fc 01       	movw	r30, r24
    189e:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    18a0:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <_Z18nextFullLBTxBufferv>
    18a4:	80 93 f7 46 	sts	0x46F7, r24	; 0x8046f7 <_ZZ11__vector_56E4buff>
    18a8:	90 93 f8 46 	sts	0x46F8, r25	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
			if(!buff)
    18ac:	80 91 f7 46 	lds	r24, 0x46F7	; 0x8046f7 <_ZZ11__vector_56E4buff>
    18b0:	90 91 f8 46 	lds	r25, 0x46F8	; 0x8046f8 <_ZZ11__vector_56E4buff+0x1>
    18b4:	89 2b       	or	r24, r25
    18b6:	11 f4       	brne	.+4      	; 0x18bc <__vector_56+0xc6>
			{
				linkbus_end_tx();
    18b8:	0e 94 97 54 	call	0xa92e	; 0xa92e <_Z14linkbus_end_txv>
			}
		}
	}
	
	if(g_serialbus_usart_number == USART_4)
    18bc:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    18c0:	84 30       	cpi	r24, 0x04	; 4
    18c2:	09 f0       	breq	.+2      	; 0x18c6 <__vector_56+0xd0>
    18c4:	45 c0       	rjmp	.+138    	; 0x1950 <__vector_56+0x15a>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    18c6:	80 91 fa 46 	lds	r24, 0x46FA	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    18ca:	90 91 fb 46 	lds	r25, 0x46FB	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
    18ce:	89 2b       	or	r24, r25
    18d0:	31 f4       	brne	.+12     	; 0x18de <__vector_56+0xe8>
		{
			buff = nextFullSBTxBuffer();
    18d2:	0e 94 f5 5b 	call	0xb7ea	; 0xb7ea <nextFullSBTxBuffer>
    18d6:	80 93 fa 46 	sts	0x46FA, r24	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    18da:	90 93 fb 46 	sts	0x46FB, r25	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    18de:	20 91 fa 46 	lds	r18, 0x46FA	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    18e2:	30 91 fb 46 	lds	r19, 0x46FB	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
    18e6:	80 91 fc 46 	lds	r24, 0x46FC	; 0x8046fc <_ZZ11__vector_56E9charIndex_0>
    18ea:	88 2f       	mov	r24, r24
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	82 0f       	add	r24, r18
    18f0:	93 1f       	adc	r25, r19
    18f2:	fc 01       	movw	r30, r24
    18f4:	80 81       	ld	r24, Z
    18f6:	88 23       	and	r24, r24
    18f8:	a9 f0       	breq	.+42     	; 0x1924 <__vector_56+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
    18fa:	80 e8       	ldi	r24, 0x80	; 128
    18fc:	98 e0       	ldi	r25, 0x08	; 8
    18fe:	40 91 fa 46 	lds	r20, 0x46FA	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    1902:	50 91 fb 46 	lds	r21, 0x46FB	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
    1906:	20 91 fc 46 	lds	r18, 0x46FC	; 0x8046fc <_ZZ11__vector_56E9charIndex_0>
    190a:	31 e0       	ldi	r19, 0x01	; 1
    190c:	32 0f       	add	r19, r18
    190e:	30 93 fc 46 	sts	0x46FC, r19	; 0x8046fc <_ZZ11__vector_56E9charIndex_0>
    1912:	22 2f       	mov	r18, r18
    1914:	30 e0       	ldi	r19, 0x00	; 0
    1916:	24 0f       	add	r18, r20
    1918:	35 1f       	adc	r19, r21
    191a:	f9 01       	movw	r30, r18
    191c:	20 81       	ld	r18, Z
    191e:	fc 01       	movw	r30, r24
    1920:	22 83       	std	Z+2, r18	; 0x02
			{
				serialbus_end_tx();
			}
		}
	}
}
    1922:	16 c0       	rjmp	.+44     	; 0x1950 <__vector_56+0x15a>
			/* Put data into buffer, sends the data */
			USART4.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1924:	10 92 fc 46 	sts	0x46FC, r1	; 0x8046fc <_ZZ11__vector_56E9charIndex_0>
			(*buff)[0] = '\0';
    1928:	80 91 fa 46 	lds	r24, 0x46FA	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    192c:	90 91 fb 46 	lds	r25, 0x46FB	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
    1930:	fc 01       	movw	r30, r24
    1932:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1934:	0e 94 f5 5b 	call	0xb7ea	; 0xb7ea <nextFullSBTxBuffer>
    1938:	80 93 fa 46 	sts	0x46FA, r24	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    193c:	90 93 fb 46 	sts	0x46FB, r25	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
			if(!buff)
    1940:	80 91 fa 46 	lds	r24, 0x46FA	; 0x8046fa <_ZZ11__vector_56E4buff_0>
    1944:	90 91 fb 46 	lds	r25, 0x46FB	; 0x8046fb <_ZZ11__vector_56E4buff_0+0x1>
    1948:	89 2b       	or	r24, r25
    194a:	11 f4       	brne	.+4      	; 0x1950 <__vector_56+0x15a>
			{
				serialbus_end_tx();
    194c:	0e 94 4a 5d 	call	0xba94	; 0xba94 <serialbus_end_tx>
			}
		}
	}
}
    1950:	00 00       	nop
    1952:	df 91       	pop	r29
    1954:	cf 91       	pop	r28
    1956:	ff 91       	pop	r31
    1958:	ef 91       	pop	r30
    195a:	bf 91       	pop	r27
    195c:	af 91       	pop	r26
    195e:	9f 91       	pop	r25
    1960:	8f 91       	pop	r24
    1962:	7f 91       	pop	r23
    1964:	6f 91       	pop	r22
    1966:	5f 91       	pop	r21
    1968:	4f 91       	pop	r20
    196a:	3f 91       	pop	r19
    196c:	2f 91       	pop	r18
    196e:	0f 90       	pop	r0
    1970:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1974:	0f 90       	pop	r0
    1976:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    197a:	0f 90       	pop	r0
    197c:	1f 90       	pop	r1
    197e:	18 95       	reti

00001980 <__vector_31>:

/**

*/
ISR(USART1_RXC_vect)
{
    1980:	1f 92       	push	r1
    1982:	0f 92       	push	r0
    1984:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1988:	0f 92       	push	r0
    198a:	11 24       	eor	r1, r1
    198c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1990:	0f 92       	push	r0
    1992:	2f 93       	push	r18
    1994:	3f 93       	push	r19
    1996:	4f 93       	push	r20
    1998:	5f 93       	push	r21
    199a:	6f 93       	push	r22
    199c:	7f 93       	push	r23
    199e:	8f 93       	push	r24
    19a0:	9f 93       	push	r25
    19a2:	af 93       	push	r26
    19a4:	bf 93       	push	r27
    19a6:	ef 93       	push	r30
    19a8:	ff 93       	push	r31
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	1f 92       	push	r1
    19b0:	cd b7       	in	r28, 0x3d	; 61
    19b2:	de b7       	in	r29, 0x3e	; 62
	uint8_t rx_char = USART1_get_data();	
    19b4:	0e 94 a2 6e 	call	0xdd44	; 0xdd44 <USART1_get_data>
    19b8:	89 83       	std	Y+1, r24	; 0x01
	
	if(g_linkbus_usart_number == USART_1)
    19ba:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    19be:	81 30       	cpi	r24, 0x01	; 1
    19c0:	19 f4       	brne	.+6      	; 0x19c8 <__vector_31+0x48>
	{
		linkbus_Rx(rx_char);
    19c2:	89 81       	ldd	r24, Y+1	; 0x01
    19c4:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <_Z10linkbus_Rxh>
	}
	
	if(g_serialbus_usart_number == USART_1)
    19c8:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    19cc:	81 30       	cpi	r24, 0x01	; 1
    19ce:	19 f4       	brne	.+6      	; 0x19d6 <__vector_31+0x56>
	{
		serial_Rx(rx_char);
    19d0:	89 81       	ldd	r24, Y+1	; 0x01
    19d2:	0e 94 b6 08 	call	0x116c	; 0x116c <_Z9serial_Rxh>
	}
}
    19d6:	00 00       	nop
    19d8:	0f 90       	pop	r0
    19da:	df 91       	pop	r29
    19dc:	cf 91       	pop	r28
    19de:	ff 91       	pop	r31
    19e0:	ef 91       	pop	r30
    19e2:	bf 91       	pop	r27
    19e4:	af 91       	pop	r26
    19e6:	9f 91       	pop	r25
    19e8:	8f 91       	pop	r24
    19ea:	7f 91       	pop	r23
    19ec:	6f 91       	pop	r22
    19ee:	5f 91       	pop	r21
    19f0:	4f 91       	pop	r20
    19f2:	3f 91       	pop	r19
    19f4:	2f 91       	pop	r18
    19f6:	0f 90       	pop	r0
    19f8:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    19fc:	0f 90       	pop	r0
    19fe:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1a02:	0f 90       	pop	r0
    1a04:	1f 90       	pop	r1
    1a06:	18 95       	reti

00001a08 <_Z10linkbus_Rxh>:

void linkbus_Rx(uint8_t rx_char)
{
    1a08:	cf 93       	push	r28
    1a0a:	df 93       	push	r29
    1a0c:	1f 92       	push	r1
    1a0e:	cd b7       	in	r28, 0x3d	; 61
    1a10:	de b7       	in	r29, 0x3e	; 62
    1a12:	89 83       	std	Y+1, r24	; 0x01
	static uint8_t field_index = 0;
	static uint8_t field_len = 0;
	static uint32_t tempMsg_ID = 0;
	static bool receiving_msg = false;

	if(!buff)
    1a14:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1a18:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1a1c:	89 2b       	or	r24, r25
    1a1e:	31 f4       	brne	.+12     	; 0x1a2c <_Z10linkbus_Rxh+0x24>
	{
		buff = nextEmptyLBRxBuffer();
    1a20:	0e 94 e0 53 	call	0xa7c0	; 0xa7c0 <_Z19nextEmptyLBRxBufferv>
    1a24:	80 93 fd 46 	sts	0x46FD, r24	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1a28:	90 93 fe 46 	sts	0x46FE, r25	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
	}

	if(buff)
    1a2c:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1a30:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1a34:	89 2b       	or	r24, r25
    1a36:	09 f4       	brne	.+2      	; 0x1a3a <_Z10linkbus_Rxh+0x32>
    1a38:	43 c1       	rjmp	.+646    	; 0x1cc0 <_Z10linkbus_Rxh+0x2b8>
	{
		rx_char = toupper(rx_char);
    1a3a:	89 81       	ldd	r24, Y+1	; 0x01
    1a3c:	88 2f       	mov	r24, r24
    1a3e:	90 e0       	ldi	r25, 0x00	; 0
    1a40:	0e 94 80 77 	call	0xef00	; 0xef00 <toupper>
    1a44:	89 83       	std	Y+1, r24	; 0x01

		if((rx_char == '$') || (rx_char == '!'))    /* start of new message = $ */
    1a46:	89 81       	ldd	r24, Y+1	; 0x01
    1a48:	84 32       	cpi	r24, 0x24	; 36
    1a4a:	19 f0       	breq	.+6      	; 0x1a52 <_Z10linkbus_Rxh+0x4a>
    1a4c:	89 81       	ldd	r24, Y+1	; 0x01
    1a4e:	81 32       	cpi	r24, 0x21	; 33
    1a50:	e9 f5       	brne	.+122    	; 0x1acc <_Z10linkbus_Rxh+0xc4>
		{
			charIndex = 0;
    1a52:	10 92 ff 46 	sts	0x46FF, r1	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
			buff->type = (rx_char == '!') ? LINKBUS_MSG_REPLY : LINKBUS_MSG_COMMAND;
    1a56:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1a5a:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1a5e:	29 81       	ldd	r18, Y+1	; 0x01
    1a60:	21 32       	cpi	r18, 0x21	; 33
    1a62:	11 f4       	brne	.+4      	; 0x1a68 <_Z10linkbus_Rxh+0x60>
    1a64:	23 e0       	ldi	r18, 0x03	; 3
    1a66:	01 c0       	rjmp	.+2      	; 0x1a6a <_Z10linkbus_Rxh+0x62>
    1a68:	21 e0       	ldi	r18, 0x01	; 1
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	20 83       	st	Z, r18
			field_len = 0;
    1a6e:	10 92 00 47 	sts	0x4700, r1	; 0x804700 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1a72:	10 92 01 47 	sts	0x4701, r1	; 0x804701 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1a76:	10 92 02 47 	sts	0x4702, r1	; 0x804702 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1a7a:	10 92 03 47 	sts	0x4703, r1	; 0x804703 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1a7e:	10 92 04 47 	sts	0x4704, r1	; 0x804704 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			receiving_msg = true;
    1a82:	81 e0       	ldi	r24, 0x01	; 1
    1a84:	80 93 05 47 	sts	0x4705, r24	; 0x804705 <_ZZ10linkbus_RxhE13receiving_msg>

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1a88:	10 92 06 47 	sts	0x4706, r1	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1a8c:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1a90:	83 30       	cpi	r24, 0x03	; 3
    1a92:	c8 f4       	brcc	.+50     	; 0x1ac6 <_Z10linkbus_Rxh+0xbe>
			{
				buff->fields[field_index][0] = '\0';
    1a94:	20 91 fd 46 	lds	r18, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1a98:	30 91 fe 46 	lds	r19, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1a9c:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1aa0:	48 2f       	mov	r20, r24
    1aa2:	50 e0       	ldi	r21, 0x00	; 0
    1aa4:	65 e1       	ldi	r22, 0x15	; 21
    1aa6:	64 9f       	mul	r22, r20
    1aa8:	c0 01       	movw	r24, r0
    1aaa:	65 9f       	mul	r22, r21
    1aac:	90 0d       	add	r25, r0
    1aae:	11 24       	eor	r1, r1
    1ab0:	82 0f       	add	r24, r18
    1ab2:	93 1f       	adc	r25, r19
    1ab4:	03 96       	adiw	r24, 0x03	; 3
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	10 82       	st	Z, r1
			field_len = 0;
			tempMsg_ID = 0;
			receiving_msg = true;

			/* Empty the field buffers */
			for(field_index = 0; field_index < LINKBUS_MAX_MSG_NUMBER_OF_FIELDS; field_index++)
    1aba:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1abe:	8f 5f       	subi	r24, 0xFF	; 255
    1ac0:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1ac4:	e3 cf       	rjmp	.-58     	; 0x1a8c <_Z10linkbus_Rxh+0x84>
			{
				buff->fields[field_index][0] = '\0';
			}

			field_index = 0;
    1ac6:	10 92 06 47 	sts	0x4706, r1	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1aca:	e9 c0       	rjmp	.+466    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
		}
		else if(receiving_msg)
    1acc:	80 91 05 47 	lds	r24, 0x4705	; 0x804705 <_ZZ10linkbus_RxhE13receiving_msg>
    1ad0:	88 23       	and	r24, r24
    1ad2:	09 f4       	brne	.+2      	; 0x1ad6 <_Z10linkbus_Rxh+0xce>
    1ad4:	c7 c0       	rjmp	.+398    	; 0x1c64 <_Z10linkbus_Rxh+0x25c>
		{
			if((rx_char == ',') || (rx_char == ';') || (rx_char == '?'))    /* new field = ,; end of message = ; */
    1ad6:	89 81       	ldd	r24, Y+1	; 0x01
    1ad8:	8c 32       	cpi	r24, 0x2C	; 44
    1ada:	39 f0       	breq	.+14     	; 0x1aea <_Z10linkbus_Rxh+0xe2>
    1adc:	89 81       	ldd	r24, Y+1	; 0x01
    1ade:	8b 33       	cpi	r24, 0x3B	; 59
    1ae0:	21 f0       	breq	.+8      	; 0x1aea <_Z10linkbus_Rxh+0xe2>
    1ae2:	89 81       	ldd	r24, Y+1	; 0x01
    1ae4:	8f 33       	cpi	r24, 0x3F	; 63
    1ae6:	09 f0       	breq	.+2      	; 0x1aea <_Z10linkbus_Rxh+0xe2>
    1ae8:	6b c0       	rjmp	.+214    	; 0x1bc0 <_Z10linkbus_Rxh+0x1b8>
			{
				/* if(field_index == 0) // message ID received */
				if(field_index > 0)
    1aea:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1aee:	88 23       	and	r24, r24
    1af0:	e1 f0       	breq	.+56     	; 0x1b2a <_Z10linkbus_Rxh+0x122>
				{
					buff->fields[field_index - 1][field_len] = 0;
    1af2:	40 91 fd 46 	lds	r20, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1af6:	50 91 fe 46 	lds	r21, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1afa:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1afe:	88 2f       	mov	r24, r24
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	bc 01       	movw	r22, r24
    1b04:	61 50       	subi	r22, 0x01	; 1
    1b06:	71 09       	sbc	r23, r1
    1b08:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ10linkbus_RxhE9field_len>
    1b0c:	88 2f       	mov	r24, r24
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	e5 e1       	ldi	r30, 0x15	; 21
    1b12:	e6 9f       	mul	r30, r22
    1b14:	90 01       	movw	r18, r0
    1b16:	e7 9f       	mul	r30, r23
    1b18:	30 0d       	add	r19, r0
    1b1a:	11 24       	eor	r1, r1
    1b1c:	24 0f       	add	r18, r20
    1b1e:	35 1f       	adc	r19, r21
    1b20:	82 0f       	add	r24, r18
    1b22:	93 1f       	adc	r25, r19
    1b24:	03 96       	adiw	r24, 0x03	; 3
    1b26:	fc 01       	movw	r30, r24
    1b28:	10 82       	st	Z, r1
				}

				field_index++;
    1b2a:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1b2e:	8f 5f       	subi	r24, 0xFF	; 255
    1b30:	80 93 06 47 	sts	0x4706, r24	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
				field_len = 0;
    1b34:	10 92 00 47 	sts	0x4700, r1	; 0x804700 <_ZZ10linkbus_RxhE9field_len>

				if(rx_char == ';')
    1b38:	89 81       	ldd	r24, Y+1	; 0x01
    1b3a:	8b 33       	cpi	r24, 0x3B	; 59
    1b3c:	b1 f4       	brne	.+44     	; 0x1b6a <_Z10linkbus_Rxh+0x162>
				{
					if(charIndex > LINKBUS_MIN_MSG_LENGTH)
    1b3e:	80 91 ff 46 	lds	r24, 0x46FF	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
    1b42:	84 30       	cpi	r24, 0x04	; 4
    1b44:	78 f0       	brcs	.+30     	; 0x1b64 <_Z10linkbus_Rxh+0x15c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b46:	20 91 fd 46 	lds	r18, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1b4a:	30 91 fe 46 	lds	r19, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1b4e:	80 91 01 47 	lds	r24, 0x4701	; 0x804701 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b52:	90 91 02 47 	lds	r25, 0x4702	; 0x804702 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b56:	a0 91 03 47 	lds	r26, 0x4703	; 0x804703 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b5a:	b0 91 04 47 	lds	r27, 0x4704	; 0x804704 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b5e:	f9 01       	movw	r30, r18
    1b60:	81 83       	std	Z+1, r24	; 0x01
    1b62:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1b64:	10 92 05 47 	sts	0x4705, r1	; 0x804705 <_ZZ10linkbus_RxhE13receiving_msg>
    1b68:	1f c0       	rjmp	.+62     	; 0x1ba8 <_Z10linkbus_Rxh+0x1a0>
				}
				else if(rx_char == '?')
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	8f 33       	cpi	r24, 0x3F	; 63
    1b6e:	e1 f4       	brne	.+56     	; 0x1ba8 <_Z10linkbus_Rxh+0x1a0>
				{
					buff->type = LINKBUS_MSG_QUERY;
    1b70:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1b74:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1b78:	22 e0       	ldi	r18, 0x02	; 2
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	20 83       	st	Z, r18
					if(charIndex >= LINKBUS_MIN_MSG_LENGTH)
    1b7e:	80 91 ff 46 	lds	r24, 0x46FF	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
    1b82:	83 30       	cpi	r24, 0x03	; 3
    1b84:	78 f0       	brcs	.+30     	; 0x1ba4 <_Z10linkbus_Rxh+0x19c>
					{
						buff->id = (LBMessageID)tempMsg_ID;
    1b86:	20 91 fd 46 	lds	r18, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1b8a:	30 91 fe 46 	lds	r19, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1b8e:	80 91 01 47 	lds	r24, 0x4701	; 0x804701 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1b92:	90 91 02 47 	lds	r25, 0x4702	; 0x804702 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1b96:	a0 91 03 47 	lds	r26, 0x4703	; 0x804703 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1b9a:	b0 91 04 47 	lds	r27, 0x4704	; 0x804704 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1b9e:	f9 01       	movw	r30, r18
    1ba0:	81 83       	std	Z+1, r24	; 0x01
    1ba2:	92 83       	std	Z+2, r25	; 0x02
					}
					receiving_msg = false;
    1ba4:	10 92 05 47 	sts	0x4705, r1	; 0x804705 <_ZZ10linkbus_RxhE13receiving_msg>
				}

				if(!receiving_msg)
    1ba8:	90 91 05 47 	lds	r25, 0x4705	; 0x804705 <_ZZ10linkbus_RxhE13receiving_msg>
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	89 27       	eor	r24, r25
    1bb0:	88 23       	and	r24, r24
    1bb2:	09 f4       	brne	.+2      	; 0x1bb6 <_Z10linkbus_Rxh+0x1ae>
    1bb4:	74 c0       	rjmp	.+232    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
				{
					buff = 0;
    1bb6:	10 92 fd 46 	sts	0x46FD, r1	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1bba:	10 92 fe 46 	sts	0x46FE, r1	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
						buff->id = (LBMessageID)tempMsg_ID;
					}
					receiving_msg = false;
				}

				if(!receiving_msg)
    1bbe:	6f c0       	rjmp	.+222    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
					buff = 0;
				}
			}
			else
			{
				if(field_index == 0)    /* message ID received */
    1bc0:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1bc4:	88 23       	and	r24, r24
    1bc6:	61 f5       	brne	.+88     	; 0x1c20 <_Z10linkbus_Rxh+0x218>
				{
					tempMsg_ID = tempMsg_ID * 10 + rx_char;
    1bc8:	80 91 01 47 	lds	r24, 0x4701	; 0x804701 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1bcc:	90 91 02 47 	lds	r25, 0x4702	; 0x804702 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1bd0:	a0 91 03 47 	lds	r26, 0x4703	; 0x804703 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1bd4:	b0 91 04 47 	lds	r27, 0x4704	; 0x804704 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1bd8:	88 0f       	add	r24, r24
    1bda:	99 1f       	adc	r25, r25
    1bdc:	aa 1f       	adc	r26, r26
    1bde:	bb 1f       	adc	r27, r27
    1be0:	9c 01       	movw	r18, r24
    1be2:	ad 01       	movw	r20, r26
    1be4:	22 0f       	add	r18, r18
    1be6:	33 1f       	adc	r19, r19
    1be8:	44 1f       	adc	r20, r20
    1bea:	55 1f       	adc	r21, r21
    1bec:	22 0f       	add	r18, r18
    1bee:	33 1f       	adc	r19, r19
    1bf0:	44 1f       	adc	r20, r20
    1bf2:	55 1f       	adc	r21, r21
    1bf4:	28 0f       	add	r18, r24
    1bf6:	39 1f       	adc	r19, r25
    1bf8:	4a 1f       	adc	r20, r26
    1bfa:	5b 1f       	adc	r21, r27
    1bfc:	89 81       	ldd	r24, Y+1	; 0x01
    1bfe:	88 2f       	mov	r24, r24
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	a0 e0       	ldi	r26, 0x00	; 0
    1c04:	b0 e0       	ldi	r27, 0x00	; 0
    1c06:	82 0f       	add	r24, r18
    1c08:	93 1f       	adc	r25, r19
    1c0a:	a4 1f       	adc	r26, r20
    1c0c:	b5 1f       	adc	r27, r21
    1c0e:	80 93 01 47 	sts	0x4701, r24	; 0x804701 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c12:	90 93 02 47 	sts	0x4702, r25	; 0x804702 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c16:	a0 93 03 47 	sts	0x4703, r26	; 0x804703 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c1a:	b0 93 04 47 	sts	0x4704, r27	; 0x804704 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
    1c1e:	3f c0       	rjmp	.+126    	; 0x1c9e <_Z10linkbus_Rxh+0x296>
				}
				else
				{
					buff->fields[field_index - 1][field_len++] = rx_char;
    1c20:	40 91 fd 46 	lds	r20, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1c24:	50 91 fe 46 	lds	r21, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1c28:	80 91 06 47 	lds	r24, 0x4706	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
    1c2c:	88 2f       	mov	r24, r24
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	bc 01       	movw	r22, r24
    1c32:	61 50       	subi	r22, 0x01	; 1
    1c34:	71 09       	sbc	r23, r1
    1c36:	80 91 00 47 	lds	r24, 0x4700	; 0x804700 <_ZZ10linkbus_RxhE9field_len>
    1c3a:	91 e0       	ldi	r25, 0x01	; 1
    1c3c:	98 0f       	add	r25, r24
    1c3e:	90 93 00 47 	sts	0x4700, r25	; 0x804700 <_ZZ10linkbus_RxhE9field_len>
    1c42:	88 2f       	mov	r24, r24
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	e5 e1       	ldi	r30, 0x15	; 21
    1c48:	e6 9f       	mul	r30, r22
    1c4a:	90 01       	movw	r18, r0
    1c4c:	e7 9f       	mul	r30, r23
    1c4e:	30 0d       	add	r19, r0
    1c50:	11 24       	eor	r1, r1
    1c52:	24 0f       	add	r18, r20
    1c54:	35 1f       	adc	r19, r21
    1c56:	82 0f       	add	r24, r18
    1c58:	93 1f       	adc	r25, r19
    1c5a:	03 96       	adiw	r24, 0x03	; 3
    1c5c:	29 81       	ldd	r18, Y+1	; 0x01
    1c5e:	fc 01       	movw	r30, r24
    1c60:	20 83       	st	Z, r18
    1c62:	1d c0       	rjmp	.+58     	; 0x1c9e <_Z10linkbus_Rxh+0x296>
				}
			}
		}
		else if(rx_char == 0x0D)    /* Carriage return resets any message in progress */
    1c64:	89 81       	ldd	r24, Y+1	; 0x01
    1c66:	8d 30       	cpi	r24, 0x0D	; 13
    1c68:	d1 f4       	brne	.+52     	; 0x1c9e <_Z10linkbus_Rxh+0x296>
		{
			buff->id = LB_MESSAGE_EMPTY;
    1c6a:	80 91 fd 46 	lds	r24, 0x46FD	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1c6e:	90 91 fe 46 	lds	r25, 0x46FE	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
    1c72:	fc 01       	movw	r30, r24
    1c74:	11 82       	std	Z+1, r1	; 0x01
    1c76:	12 82       	std	Z+2, r1	; 0x02
			charIndex = LINKBUS_MAX_MSG_LENGTH;
    1c78:	82 e3       	ldi	r24, 0x32	; 50
    1c7a:	80 93 ff 46 	sts	0x46FF, r24	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
			field_len = 0;
    1c7e:	10 92 00 47 	sts	0x4700, r1	; 0x804700 <_ZZ10linkbus_RxhE9field_len>
			tempMsg_ID = 0;
    1c82:	10 92 01 47 	sts	0x4701, r1	; 0x804701 <_ZZ10linkbus_RxhE10tempMsg_ID>
    1c86:	10 92 02 47 	sts	0x4702, r1	; 0x804702 <_ZZ10linkbus_RxhE10tempMsg_ID+0x1>
    1c8a:	10 92 03 47 	sts	0x4703, r1	; 0x804703 <_ZZ10linkbus_RxhE10tempMsg_ID+0x2>
    1c8e:	10 92 04 47 	sts	0x4704, r1	; 0x804704 <_ZZ10linkbus_RxhE10tempMsg_ID+0x3>
			field_index = 0;
    1c92:	10 92 06 47 	sts	0x4706, r1	; 0x804706 <_ZZ10linkbus_RxhE11field_index>
			buff = NULL;
    1c96:	10 92 fd 46 	sts	0x46FD, r1	; 0x8046fd <_ZZ10linkbus_RxhE4buff>
    1c9a:	10 92 fe 46 	sts	0x46FE, r1	; 0x8046fe <_ZZ10linkbus_RxhE4buff+0x1>
		}

		if(++charIndex >= LINKBUS_MAX_MSG_LENGTH)
    1c9e:	80 91 ff 46 	lds	r24, 0x46FF	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
    1ca2:	8f 5f       	subi	r24, 0xFF	; 255
    1ca4:	80 93 ff 46 	sts	0x46FF, r24	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
    1ca8:	90 91 ff 46 	lds	r25, 0x46FF	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
    1cac:	81 e0       	ldi	r24, 0x01	; 1
    1cae:	92 33       	cpi	r25, 0x32	; 50
    1cb0:	08 f4       	brcc	.+2      	; 0x1cb4 <_Z10linkbus_Rxh+0x2ac>
    1cb2:	80 e0       	ldi	r24, 0x00	; 0
    1cb4:	88 23       	and	r24, r24
    1cb6:	21 f0       	breq	.+8      	; 0x1cc0 <_Z10linkbus_Rxh+0x2b8>
		{
			receiving_msg = false;
    1cb8:	10 92 05 47 	sts	0x4705, r1	; 0x804705 <_ZZ10linkbus_RxhE13receiving_msg>
			charIndex = 0;
    1cbc:	10 92 ff 46 	sts	0x46FF, r1	; 0x8046ff <_ZZ10linkbus_RxhE9charIndex>
		}
	}
}
    1cc0:	00 00       	nop
    1cc2:	0f 90       	pop	r0
    1cc4:	df 91       	pop	r29
    1cc6:	cf 91       	pop	r28
    1cc8:	08 95       	ret

00001cca <__vector_32>:

/**

*/
ISR(USART1_DRE_vect)
{
    1cca:	1f 92       	push	r1
    1ccc:	0f 92       	push	r0
    1cce:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1cd2:	0f 92       	push	r0
    1cd4:	11 24       	eor	r1, r1
    1cd6:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1cda:	0f 92       	push	r0
    1cdc:	2f 93       	push	r18
    1cde:	3f 93       	push	r19
    1ce0:	4f 93       	push	r20
    1ce2:	5f 93       	push	r21
    1ce4:	6f 93       	push	r22
    1ce6:	7f 93       	push	r23
    1ce8:	8f 93       	push	r24
    1cea:	9f 93       	push	r25
    1cec:	af 93       	push	r26
    1cee:	bf 93       	push	r27
    1cf0:	ef 93       	push	r30
    1cf2:	ff 93       	push	r31
    1cf4:	cf 93       	push	r28
    1cf6:	df 93       	push	r29
    1cf8:	cd b7       	in	r28, 0x3d	; 61
    1cfa:	de b7       	in	r29, 0x3e	; 62
	if(g_serialbus_usart_number == USART_1)
    1cfc:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    1d00:	81 30       	cpi	r24, 0x01	; 1
    1d02:	09 f0       	breq	.+2      	; 0x1d06 <__vector_32+0x3c>
    1d04:	45 c0       	rjmp	.+138    	; 0x1d90 <__vector_32+0xc6>
	{
		static SerialbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1d06:	80 91 07 47 	lds	r24, 0x4707	; 0x804707 <_ZZ11__vector_32E4buff>
    1d0a:	90 91 08 47 	lds	r25, 0x4708	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
    1d0e:	89 2b       	or	r24, r25
    1d10:	31 f4       	brne	.+12     	; 0x1d1e <__vector_32+0x54>
		{
			buff = nextFullSBTxBuffer();
    1d12:	0e 94 f5 5b 	call	0xb7ea	; 0xb7ea <nextFullSBTxBuffer>
    1d16:	80 93 07 47 	sts	0x4707, r24	; 0x804707 <_ZZ11__vector_32E4buff>
    1d1a:	90 93 08 47 	sts	0x4708, r25	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
		}

		if((*buff)[charIndex])
    1d1e:	20 91 07 47 	lds	r18, 0x4707	; 0x804707 <_ZZ11__vector_32E4buff>
    1d22:	30 91 08 47 	lds	r19, 0x4708	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
    1d26:	80 91 09 47 	lds	r24, 0x4709	; 0x804709 <_ZZ11__vector_32E9charIndex>
    1d2a:	88 2f       	mov	r24, r24
    1d2c:	90 e0       	ldi	r25, 0x00	; 0
    1d2e:	82 0f       	add	r24, r18
    1d30:	93 1f       	adc	r25, r19
    1d32:	fc 01       	movw	r30, r24
    1d34:	80 81       	ld	r24, Z
    1d36:	88 23       	and	r24, r24
    1d38:	a9 f0       	breq	.+42     	; 0x1d64 <__vector_32+0x9a>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1d3a:	80 e2       	ldi	r24, 0x20	; 32
    1d3c:	98 e0       	ldi	r25, 0x08	; 8
    1d3e:	40 91 07 47 	lds	r20, 0x4707	; 0x804707 <_ZZ11__vector_32E4buff>
    1d42:	50 91 08 47 	lds	r21, 0x4708	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
    1d46:	20 91 09 47 	lds	r18, 0x4709	; 0x804709 <_ZZ11__vector_32E9charIndex>
    1d4a:	31 e0       	ldi	r19, 0x01	; 1
    1d4c:	32 0f       	add	r19, r18
    1d4e:	30 93 09 47 	sts	0x4709, r19	; 0x804709 <_ZZ11__vector_32E9charIndex>
    1d52:	22 2f       	mov	r18, r18
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	24 0f       	add	r18, r20
    1d58:	35 1f       	adc	r19, r21
    1d5a:	f9 01       	movw	r30, r18
    1d5c:	20 81       	ld	r18, Z
    1d5e:	fc 01       	movw	r30, r24
    1d60:	22 83       	std	Z+2, r18	; 0x02
    1d62:	16 c0       	rjmp	.+44     	; 0x1d90 <__vector_32+0xc6>
		}
		else
		{
			charIndex = 0;
    1d64:	10 92 09 47 	sts	0x4709, r1	; 0x804709 <_ZZ11__vector_32E9charIndex>
			(*buff)[0] = '\0';
    1d68:	80 91 07 47 	lds	r24, 0x4707	; 0x804707 <_ZZ11__vector_32E4buff>
    1d6c:	90 91 08 47 	lds	r25, 0x4708	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
    1d70:	fc 01       	movw	r30, r24
    1d72:	10 82       	st	Z, r1
			buff = nextFullSBTxBuffer();
    1d74:	0e 94 f5 5b 	call	0xb7ea	; 0xb7ea <nextFullSBTxBuffer>
    1d78:	80 93 07 47 	sts	0x4707, r24	; 0x804707 <_ZZ11__vector_32E4buff>
    1d7c:	90 93 08 47 	sts	0x4708, r25	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
			if(!buff)
    1d80:	80 91 07 47 	lds	r24, 0x4707	; 0x804707 <_ZZ11__vector_32E4buff>
    1d84:	90 91 08 47 	lds	r25, 0x4708	; 0x804708 <_ZZ11__vector_32E4buff+0x1>
    1d88:	89 2b       	or	r24, r25
    1d8a:	11 f4       	brne	.+4      	; 0x1d90 <__vector_32+0xc6>
			{
				serialbus_end_tx();
    1d8c:	0e 94 4a 5d 	call	0xba94	; 0xba94 <serialbus_end_tx>
			}
		}
	}
	
	if(g_linkbus_usart_number == USART_1)
    1d90:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    1d94:	81 30       	cpi	r24, 0x01	; 1
    1d96:	09 f0       	breq	.+2      	; 0x1d9a <__vector_32+0xd0>
    1d98:	45 c0       	rjmp	.+138    	; 0x1e24 <__vector_32+0x15a>
	{
		static LinkbusTxBuffer* buff = 0;
		static uint8_t charIndex = 0;

		if(!buff)
    1d9a:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1d9e:	90 91 0b 47 	lds	r25, 0x470B	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
    1da2:	89 2b       	or	r24, r25
    1da4:	31 f4       	brne	.+12     	; 0x1db2 <__vector_32+0xe8>
		{
			buff = nextFullLBTxBuffer();
    1da6:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <_Z18nextFullLBTxBufferv>
    1daa:	80 93 0a 47 	sts	0x470A, r24	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1dae:	90 93 0b 47 	sts	0x470B, r25	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
		}

		if((*buff)[charIndex])
    1db2:	20 91 0a 47 	lds	r18, 0x470A	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1db6:	30 91 0b 47 	lds	r19, 0x470B	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
    1dba:	80 91 0c 47 	lds	r24, 0x470C	; 0x80470c <_ZZ11__vector_32E9charIndex_0>
    1dbe:	88 2f       	mov	r24, r24
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	82 0f       	add	r24, r18
    1dc4:	93 1f       	adc	r25, r19
    1dc6:	fc 01       	movw	r30, r24
    1dc8:	80 81       	ld	r24, Z
    1dca:	88 23       	and	r24, r24
    1dcc:	a9 f0       	breq	.+42     	; 0x1df8 <__vector_32+0x12e>
		{
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
    1dce:	80 e2       	ldi	r24, 0x20	; 32
    1dd0:	98 e0       	ldi	r25, 0x08	; 8
    1dd2:	40 91 0a 47 	lds	r20, 0x470A	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1dd6:	50 91 0b 47 	lds	r21, 0x470B	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
    1dda:	20 91 0c 47 	lds	r18, 0x470C	; 0x80470c <_ZZ11__vector_32E9charIndex_0>
    1dde:	31 e0       	ldi	r19, 0x01	; 1
    1de0:	32 0f       	add	r19, r18
    1de2:	30 93 0c 47 	sts	0x470C, r19	; 0x80470c <_ZZ11__vector_32E9charIndex_0>
    1de6:	22 2f       	mov	r18, r18
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	24 0f       	add	r18, r20
    1dec:	35 1f       	adc	r19, r21
    1dee:	f9 01       	movw	r30, r18
    1df0:	20 81       	ld	r18, Z
    1df2:	fc 01       	movw	r30, r24
    1df4:	22 83       	std	Z+2, r18	; 0x02
			{
				linkbus_end_tx();
			}
		}
	}
}
    1df6:	16 c0       	rjmp	.+44     	; 0x1e24 <__vector_32+0x15a>
			/* Put data into buffer, sends the data */
			USART1.TXDATAL = (*buff)[charIndex++];
		}
		else
		{
			charIndex = 0;
    1df8:	10 92 0c 47 	sts	0x470C, r1	; 0x80470c <_ZZ11__vector_32E9charIndex_0>
			(*buff)[0] = '\0';
    1dfc:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1e00:	90 91 0b 47 	lds	r25, 0x470B	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
    1e04:	fc 01       	movw	r30, r24
    1e06:	10 82       	st	Z, r1
			buff = nextFullLBTxBuffer();
    1e08:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <_Z18nextFullLBTxBufferv>
    1e0c:	80 93 0a 47 	sts	0x470A, r24	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1e10:	90 93 0b 47 	sts	0x470B, r25	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
			if(!buff)
    1e14:	80 91 0a 47 	lds	r24, 0x470A	; 0x80470a <_ZZ11__vector_32E4buff_0>
    1e18:	90 91 0b 47 	lds	r25, 0x470B	; 0x80470b <_ZZ11__vector_32E4buff_0+0x1>
    1e1c:	89 2b       	or	r24, r25
    1e1e:	11 f4       	brne	.+4      	; 0x1e24 <__vector_32+0x15a>
			{
				linkbus_end_tx();
    1e20:	0e 94 97 54 	call	0xa92e	; 0xa92e <_Z14linkbus_end_txv>
			}
		}
	}
}
    1e24:	00 00       	nop
    1e26:	df 91       	pop	r29
    1e28:	cf 91       	pop	r28
    1e2a:	ff 91       	pop	r31
    1e2c:	ef 91       	pop	r30
    1e2e:	bf 91       	pop	r27
    1e30:	af 91       	pop	r26
    1e32:	9f 91       	pop	r25
    1e34:	8f 91       	pop	r24
    1e36:	7f 91       	pop	r23
    1e38:	6f 91       	pop	r22
    1e3a:	5f 91       	pop	r21
    1e3c:	4f 91       	pop	r20
    1e3e:	3f 91       	pop	r19
    1e40:	2f 91       	pop	r18
    1e42:	0f 90       	pop	r0
    1e44:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    1e48:	0f 90       	pop	r0
    1e4a:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    1e4e:	0f 90       	pop	r0
    1e50:	1f 90       	pop	r1
    1e52:	18 95       	reti

00001e54 <PORTA_set_pin_level>:
}

void initializeAllEventSettings(bool disableEvent)
{
	
}
    1e54:	cf 93       	push	r28
    1e56:	df 93       	push	r29
    1e58:	00 d0       	rcall	.+0      	; 0x1e5a <PORTA_set_pin_level+0x6>
    1e5a:	cd b7       	in	r28, 0x3d	; 61
    1e5c:	de b7       	in	r29, 0x3e	; 62
    1e5e:	89 83       	std	Y+1, r24	; 0x01
    1e60:	6a 83       	std	Y+2, r22	; 0x02
    1e62:	8a 81       	ldd	r24, Y+2	; 0x02
    1e64:	88 23       	and	r24, r24
    1e66:	a9 f0       	breq	.+42     	; 0x1e92 <PORTA_set_pin_level+0x3e>
    1e68:	20 e0       	ldi	r18, 0x00	; 0
    1e6a:	30 e0       	ldi	r19, 0x00	; 0
    1e6c:	80 e0       	ldi	r24, 0x00	; 0
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	fc 01       	movw	r30, r24
    1e72:	81 81       	ldd	r24, Z+1	; 0x01
    1e74:	68 2f       	mov	r22, r24
    1e76:	89 81       	ldd	r24, Y+1	; 0x01
    1e78:	48 2f       	mov	r20, r24
    1e7a:	50 e0       	ldi	r21, 0x00	; 0
    1e7c:	81 e0       	ldi	r24, 0x01	; 1
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	02 c0       	rjmp	.+4      	; 0x1e86 <PORTA_set_pin_level+0x32>
    1e82:	88 0f       	add	r24, r24
    1e84:	99 1f       	adc	r25, r25
    1e86:	4a 95       	dec	r20
    1e88:	e2 f7       	brpl	.-8      	; 0x1e82 <PORTA_set_pin_level+0x2e>
    1e8a:	86 2b       	or	r24, r22
    1e8c:	f9 01       	movw	r30, r18
    1e8e:	81 83       	std	Z+1, r24	; 0x01
    1e90:	15 c0       	rjmp	.+42     	; 0x1ebc <PORTA_set_pin_level+0x68>
    1e92:	20 e0       	ldi	r18, 0x00	; 0
    1e94:	30 e0       	ldi	r19, 0x00	; 0
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	90 e0       	ldi	r25, 0x00	; 0
    1e9a:	fc 01       	movw	r30, r24
    1e9c:	81 81       	ldd	r24, Z+1	; 0x01
    1e9e:	68 2f       	mov	r22, r24
    1ea0:	89 81       	ldd	r24, Y+1	; 0x01
    1ea2:	48 2f       	mov	r20, r24
    1ea4:	50 e0       	ldi	r21, 0x00	; 0
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	02 c0       	rjmp	.+4      	; 0x1eb0 <PORTA_set_pin_level+0x5c>
    1eac:	88 0f       	add	r24, r24
    1eae:	99 1f       	adc	r25, r25
    1eb0:	4a 95       	dec	r20
    1eb2:	e2 f7       	brpl	.-8      	; 0x1eac <PORTA_set_pin_level+0x58>
    1eb4:	80 95       	com	r24
    1eb6:	86 23       	and	r24, r22
    1eb8:	f9 01       	movw	r30, r18
    1eba:	81 83       	std	Z+1, r24	; 0x01
    1ebc:	00 00       	nop
    1ebe:	0f 90       	pop	r0
    1ec0:	0f 90       	pop	r0
    1ec2:	df 91       	pop	r29
    1ec4:	cf 91       	pop	r28
    1ec6:	08 95       	ret

00001ec8 <PORTB_set_pin_level>:
    1ec8:	cf 93       	push	r28
    1eca:	df 93       	push	r29
    1ecc:	00 d0       	rcall	.+0      	; 0x1ece <PORTB_set_pin_level+0x6>
    1ece:	cd b7       	in	r28, 0x3d	; 61
    1ed0:	de b7       	in	r29, 0x3e	; 62
    1ed2:	89 83       	std	Y+1, r24	; 0x01
    1ed4:	6a 83       	std	Y+2, r22	; 0x02
    1ed6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed8:	88 23       	and	r24, r24
    1eda:	a9 f0       	breq	.+42     	; 0x1f06 <PORTB_set_pin_level+0x3e>
    1edc:	84 e0       	ldi	r24, 0x04	; 4
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	24 e0       	ldi	r18, 0x04	; 4
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	f9 01       	movw	r30, r18
    1ee6:	21 81       	ldd	r18, Z+1	; 0x01
    1ee8:	62 2f       	mov	r22, r18
    1eea:	29 81       	ldd	r18, Y+1	; 0x01
    1eec:	42 2f       	mov	r20, r18
    1eee:	50 e0       	ldi	r21, 0x00	; 0
    1ef0:	21 e0       	ldi	r18, 0x01	; 1
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <PORTB_set_pin_level+0x32>
    1ef6:	22 0f       	add	r18, r18
    1ef8:	33 1f       	adc	r19, r19
    1efa:	4a 95       	dec	r20
    1efc:	e2 f7       	brpl	.-8      	; 0x1ef6 <PORTB_set_pin_level+0x2e>
    1efe:	26 2b       	or	r18, r22
    1f00:	fc 01       	movw	r30, r24
    1f02:	21 83       	std	Z+1, r18	; 0x01
    1f04:	15 c0       	rjmp	.+42     	; 0x1f30 <PORTB_set_pin_level+0x68>
    1f06:	84 e0       	ldi	r24, 0x04	; 4
    1f08:	90 e0       	ldi	r25, 0x00	; 0
    1f0a:	24 e0       	ldi	r18, 0x04	; 4
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	f9 01       	movw	r30, r18
    1f10:	21 81       	ldd	r18, Z+1	; 0x01
    1f12:	62 2f       	mov	r22, r18
    1f14:	29 81       	ldd	r18, Y+1	; 0x01
    1f16:	42 2f       	mov	r20, r18
    1f18:	50 e0       	ldi	r21, 0x00	; 0
    1f1a:	21 e0       	ldi	r18, 0x01	; 1
    1f1c:	30 e0       	ldi	r19, 0x00	; 0
    1f1e:	02 c0       	rjmp	.+4      	; 0x1f24 <PORTB_set_pin_level+0x5c>
    1f20:	22 0f       	add	r18, r18
    1f22:	33 1f       	adc	r19, r19
    1f24:	4a 95       	dec	r20
    1f26:	e2 f7       	brpl	.-8      	; 0x1f20 <PORTB_set_pin_level+0x58>
    1f28:	20 95       	com	r18
    1f2a:	26 23       	and	r18, r22
    1f2c:	fc 01       	movw	r30, r24
    1f2e:	21 83       	std	Z+1, r18	; 0x01
    1f30:	00 00       	nop
    1f32:	0f 90       	pop	r0
    1f34:	0f 90       	pop	r0
    1f36:	df 91       	pop	r29
    1f38:	cf 91       	pop	r28
    1f3a:	08 95       	ret

00001f3c <PORTC_set_pin_pull_mode>:
    1f3c:	cf 93       	push	r28
    1f3e:	df 93       	push	r29
    1f40:	00 d0       	rcall	.+0      	; 0x1f42 <PORTC_set_pin_pull_mode+0x6>
    1f42:	00 d0       	rcall	.+0      	; 0x1f44 <PORTC_set_pin_pull_mode+0x8>
    1f44:	cd b7       	in	r28, 0x3d	; 61
    1f46:	de b7       	in	r29, 0x3e	; 62
    1f48:	8b 83       	std	Y+3, r24	; 0x03
    1f4a:	6c 83       	std	Y+4, r22	; 0x04
    1f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f4e:	88 2f       	mov	r24, r24
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	80 5b       	subi	r24, 0xB0	; 176
    1f54:	9b 4f       	sbci	r25, 0xFB	; 251
    1f56:	89 83       	std	Y+1, r24	; 0x01
    1f58:	9a 83       	std	Y+2, r25	; 0x02
    1f5a:	8c 81       	ldd	r24, Y+4	; 0x04
    1f5c:	81 30       	cpi	r24, 0x01	; 1
    1f5e:	59 f4       	brne	.+22     	; 0x1f76 <PORTC_set_pin_pull_mode+0x3a>
    1f60:	89 81       	ldd	r24, Y+1	; 0x01
    1f62:	9a 81       	ldd	r25, Y+2	; 0x02
    1f64:	fc 01       	movw	r30, r24
    1f66:	80 81       	ld	r24, Z
    1f68:	28 2f       	mov	r18, r24
    1f6a:	28 60       	ori	r18, 0x08	; 8
    1f6c:	89 81       	ldd	r24, Y+1	; 0x01
    1f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f70:	fc 01       	movw	r30, r24
    1f72:	20 83       	st	Z, r18
    1f74:	0d c0       	rjmp	.+26     	; 0x1f90 <PORTC_set_pin_pull_mode+0x54>
    1f76:	8c 81       	ldd	r24, Y+4	; 0x04
    1f78:	88 23       	and	r24, r24
    1f7a:	51 f4       	brne	.+20     	; 0x1f90 <PORTC_set_pin_pull_mode+0x54>
    1f7c:	89 81       	ldd	r24, Y+1	; 0x01
    1f7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f80:	fc 01       	movw	r30, r24
    1f82:	80 81       	ld	r24, Z
    1f84:	28 2f       	mov	r18, r24
    1f86:	27 7f       	andi	r18, 0xF7	; 247
    1f88:	89 81       	ldd	r24, Y+1	; 0x01
    1f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f8c:	fc 01       	movw	r30, r24
    1f8e:	20 83       	st	Z, r18
    1f90:	00 00       	nop
    1f92:	24 96       	adiw	r28, 0x04	; 4
    1f94:	cd bf       	out	0x3d, r28	; 61
    1f96:	de bf       	out	0x3e, r29	; 62
    1f98:	df 91       	pop	r29
    1f9a:	cf 91       	pop	r28
    1f9c:	08 95       	ret

00001f9e <PORTC_set_pin_level>:
    1f9e:	cf 93       	push	r28
    1fa0:	df 93       	push	r29
    1fa2:	00 d0       	rcall	.+0      	; 0x1fa4 <PORTC_set_pin_level+0x6>
    1fa4:	cd b7       	in	r28, 0x3d	; 61
    1fa6:	de b7       	in	r29, 0x3e	; 62
    1fa8:	89 83       	std	Y+1, r24	; 0x01
    1faa:	6a 83       	std	Y+2, r22	; 0x02
    1fac:	8a 81       	ldd	r24, Y+2	; 0x02
    1fae:	88 23       	and	r24, r24
    1fb0:	a9 f0       	breq	.+42     	; 0x1fdc <PORTC_set_pin_level+0x3e>
    1fb2:	88 e0       	ldi	r24, 0x08	; 8
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	28 e0       	ldi	r18, 0x08	; 8
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	f9 01       	movw	r30, r18
    1fbc:	21 81       	ldd	r18, Z+1	; 0x01
    1fbe:	62 2f       	mov	r22, r18
    1fc0:	29 81       	ldd	r18, Y+1	; 0x01
    1fc2:	42 2f       	mov	r20, r18
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	21 e0       	ldi	r18, 0x01	; 1
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	02 c0       	rjmp	.+4      	; 0x1fd0 <PORTC_set_pin_level+0x32>
    1fcc:	22 0f       	add	r18, r18
    1fce:	33 1f       	adc	r19, r19
    1fd0:	4a 95       	dec	r20
    1fd2:	e2 f7       	brpl	.-8      	; 0x1fcc <PORTC_set_pin_level+0x2e>
    1fd4:	26 2b       	or	r18, r22
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	21 83       	std	Z+1, r18	; 0x01
    1fda:	15 c0       	rjmp	.+42     	; 0x2006 <PORTC_set_pin_level+0x68>
    1fdc:	88 e0       	ldi	r24, 0x08	; 8
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	28 e0       	ldi	r18, 0x08	; 8
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	f9 01       	movw	r30, r18
    1fe6:	21 81       	ldd	r18, Z+1	; 0x01
    1fe8:	62 2f       	mov	r22, r18
    1fea:	29 81       	ldd	r18, Y+1	; 0x01
    1fec:	42 2f       	mov	r20, r18
    1fee:	50 e0       	ldi	r21, 0x00	; 0
    1ff0:	21 e0       	ldi	r18, 0x01	; 1
    1ff2:	30 e0       	ldi	r19, 0x00	; 0
    1ff4:	02 c0       	rjmp	.+4      	; 0x1ffa <PORTC_set_pin_level+0x5c>
    1ff6:	22 0f       	add	r18, r18
    1ff8:	33 1f       	adc	r19, r19
    1ffa:	4a 95       	dec	r20
    1ffc:	e2 f7       	brpl	.-8      	; 0x1ff6 <PORTC_set_pin_level+0x58>
    1ffe:	20 95       	com	r18
    2000:	26 23       	and	r18, r22
    2002:	fc 01       	movw	r30, r24
    2004:	21 83       	std	Z+1, r18	; 0x01
    2006:	00 00       	nop
    2008:	0f 90       	pop	r0
    200a:	0f 90       	pop	r0
    200c:	df 91       	pop	r29
    200e:	cf 91       	pop	r28
    2010:	08 95       	ret

00002012 <PORTC_get_pin_level>:
    2012:	cf 93       	push	r28
    2014:	df 93       	push	r29
    2016:	1f 92       	push	r1
    2018:	cd b7       	in	r28, 0x3d	; 61
    201a:	de b7       	in	r29, 0x3e	; 62
    201c:	89 83       	std	Y+1, r24	; 0x01
    201e:	88 e0       	ldi	r24, 0x08	; 8
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	fc 01       	movw	r30, r24
    2024:	82 81       	ldd	r24, Z+2	; 0x02
    2026:	88 2f       	mov	r24, r24
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	29 81       	ldd	r18, Y+1	; 0x01
    202c:	22 2f       	mov	r18, r18
    202e:	30 e0       	ldi	r19, 0x00	; 0
    2030:	02 c0       	rjmp	.+4      	; 0x2036 <PORTC_get_pin_level+0x24>
    2032:	95 95       	asr	r25
    2034:	87 95       	ror	r24
    2036:	2a 95       	dec	r18
    2038:	e2 f7       	brpl	.-8      	; 0x2032 <PORTC_get_pin_level+0x20>
    203a:	81 70       	andi	r24, 0x01	; 1
    203c:	99 27       	eor	r25, r25
    203e:	21 e0       	ldi	r18, 0x01	; 1
    2040:	89 2b       	or	r24, r25
    2042:	09 f4       	brne	.+2      	; 0x2046 <PORTC_get_pin_level+0x34>
    2044:	20 e0       	ldi	r18, 0x00	; 0
    2046:	82 2f       	mov	r24, r18
    2048:	0f 90       	pop	r0
    204a:	df 91       	pop	r29
    204c:	cf 91       	pop	r28
    204e:	08 95       	ret

00002050 <PORTD_get_pin_level>:
    2050:	cf 93       	push	r28
    2052:	df 93       	push	r29
    2054:	1f 92       	push	r1
    2056:	cd b7       	in	r28, 0x3d	; 61
    2058:	de b7       	in	r29, 0x3e	; 62
    205a:	89 83       	std	Y+1, r24	; 0x01
    205c:	8c e0       	ldi	r24, 0x0C	; 12
    205e:	90 e0       	ldi	r25, 0x00	; 0
    2060:	fc 01       	movw	r30, r24
    2062:	82 81       	ldd	r24, Z+2	; 0x02
    2064:	88 2f       	mov	r24, r24
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	29 81       	ldd	r18, Y+1	; 0x01
    206a:	22 2f       	mov	r18, r18
    206c:	30 e0       	ldi	r19, 0x00	; 0
    206e:	02 c0       	rjmp	.+4      	; 0x2074 <PORTD_get_pin_level+0x24>
    2070:	95 95       	asr	r25
    2072:	87 95       	ror	r24
    2074:	2a 95       	dec	r18
    2076:	e2 f7       	brpl	.-8      	; 0x2070 <PORTD_get_pin_level+0x20>
    2078:	81 70       	andi	r24, 0x01	; 1
    207a:	99 27       	eor	r25, r25
    207c:	21 e0       	ldi	r18, 0x01	; 1
    207e:	89 2b       	or	r24, r25
    2080:	09 f4       	brne	.+2      	; 0x2084 <PORTD_get_pin_level+0x34>
    2082:	20 e0       	ldi	r18, 0x00	; 0
    2084:	82 2f       	mov	r24, r18
    2086:	0f 90       	pop	r0
    2088:	df 91       	pop	r29
    208a:	cf 91       	pop	r28
    208c:	08 95       	ret

0000208e <LED_set_RED_level>:
    208e:	cf 93       	push	r28
    2090:	df 93       	push	r29
    2092:	1f 92       	push	r1
    2094:	cd b7       	in	r28, 0x3d	; 61
    2096:	de b7       	in	r29, 0x3e	; 62
    2098:	89 83       	std	Y+1, r24	; 0x01
    209a:	69 81       	ldd	r22, Y+1	; 0x01
    209c:	86 e0       	ldi	r24, 0x06	; 6
    209e:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <PORTC_set_pin_level>
    20a2:	00 00       	nop
    20a4:	0f 90       	pop	r0
    20a6:	df 91       	pop	r29
    20a8:	cf 91       	pop	r28
    20aa:	08 95       	ret

000020ac <__vector_6>:
    20ac:	1f 92       	push	r1
    20ae:	0f 92       	push	r0
    20b0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    20b4:	0f 92       	push	r0
    20b6:	11 24       	eor	r1, r1
    20b8:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    20bc:	0f 92       	push	r0
    20be:	ef 92       	push	r14
    20c0:	ff 92       	push	r15
    20c2:	0f 93       	push	r16
    20c4:	1f 93       	push	r17
    20c6:	2f 93       	push	r18
    20c8:	3f 93       	push	r19
    20ca:	4f 93       	push	r20
    20cc:	5f 93       	push	r21
    20ce:	6f 93       	push	r22
    20d0:	7f 93       	push	r23
    20d2:	8f 93       	push	r24
    20d4:	9f 93       	push	r25
    20d6:	af 93       	push	r26
    20d8:	bf 93       	push	r27
    20da:	ef 93       	push	r30
    20dc:	ff 93       	push	r31
    20de:	cf 93       	push	r28
    20e0:	df 93       	push	r29
    20e2:	cd b7       	in	r28, 0x3d	; 61
    20e4:	de b7       	in	r29, 0x3e	; 62
    20e6:	2f 97       	sbiw	r28, 0x0f	; 15
    20e8:	cd bf       	out	0x3d, r28	; 61
    20ea:	de bf       	out	0x3e, r29	; 62
    20ec:	80 e0       	ldi	r24, 0x00	; 0
    20ee:	94 e0       	ldi	r25, 0x04	; 4
    20f0:	fc 01       	movw	r30, r24
    20f2:	81 85       	ldd	r24, Z+9	; 0x09
    20f4:	88 2f       	mov	r24, r24
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	84 70       	andi	r24, 0x04	; 4
    20fa:	99 27       	eor	r25, r25
    20fc:	21 e0       	ldi	r18, 0x01	; 1
    20fe:	89 2b       	or	r24, r25
    2100:	09 f4       	brne	.+2      	; 0x2104 <__vector_6+0x58>
    2102:	20 e0       	ldi	r18, 0x00	; 0
    2104:	22 23       	and	r18, r18
    2106:	09 f4       	brne	.+2      	; 0x210a <__vector_6+0x5e>
    2108:	d2 c3       	rjmp	.+1956   	; 0x28ae <__vector_6+0x802>
    210a:	0e 94 ed 05 	call	0xbda	; 0xbda <system_tick>
    210e:	80 91 8d 47 	lds	r24, 0x478D	; 0x80478d <_ZL10g_sleeping>
    2112:	88 23       	and	r24, r24
    2114:	09 f4       	brne	.+2      	; 0x2118 <__vector_6+0x6c>
    2116:	3e c0       	rjmp	.+124    	; 0x2194 <__vector_6+0xe8>
    2118:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <_ZL23g_seconds_left_to_sleep>
    211c:	90 91 8f 47 	lds	r25, 0x478F	; 0x80478f <_ZL23g_seconds_left_to_sleep+0x1>
    2120:	a0 91 90 47 	lds	r26, 0x4790	; 0x804790 <_ZL23g_seconds_left_to_sleep+0x2>
    2124:	b0 91 91 47 	lds	r27, 0x4791	; 0x804791 <_ZL23g_seconds_left_to_sleep+0x3>
    2128:	21 e0       	ldi	r18, 0x01	; 1
    212a:	89 2b       	or	r24, r25
    212c:	8a 2b       	or	r24, r26
    212e:	8b 2b       	or	r24, r27
    2130:	09 f4       	brne	.+2      	; 0x2134 <__vector_6+0x88>
    2132:	20 e0       	ldi	r18, 0x00	; 0
    2134:	22 23       	and	r18, r18
    2136:	99 f0       	breq	.+38     	; 0x215e <__vector_6+0xb2>
    2138:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <_ZL23g_seconds_left_to_sleep>
    213c:	90 91 8f 47 	lds	r25, 0x478F	; 0x80478f <_ZL23g_seconds_left_to_sleep+0x1>
    2140:	a0 91 90 47 	lds	r26, 0x4790	; 0x804790 <_ZL23g_seconds_left_to_sleep+0x2>
    2144:	b0 91 91 47 	lds	r27, 0x4791	; 0x804791 <_ZL23g_seconds_left_to_sleep+0x3>
    2148:	01 97       	sbiw	r24, 0x01	; 1
    214a:	a1 09       	sbc	r26, r1
    214c:	b1 09       	sbc	r27, r1
    214e:	80 93 8e 47 	sts	0x478E, r24	; 0x80478e <_ZL23g_seconds_left_to_sleep>
    2152:	90 93 8f 47 	sts	0x478F, r25	; 0x80478f <_ZL23g_seconds_left_to_sleep+0x1>
    2156:	a0 93 90 47 	sts	0x4790, r26	; 0x804790 <_ZL23g_seconds_left_to_sleep+0x2>
    215a:	b0 93 91 47 	sts	0x4791, r27	; 0x804791 <_ZL23g_seconds_left_to_sleep+0x3>
    215e:	80 91 8e 47 	lds	r24, 0x478E	; 0x80478e <_ZL23g_seconds_left_to_sleep>
    2162:	90 91 8f 47 	lds	r25, 0x478F	; 0x80478f <_ZL23g_seconds_left_to_sleep+0x1>
    2166:	a0 91 90 47 	lds	r26, 0x4790	; 0x804790 <_ZL23g_seconds_left_to_sleep+0x2>
    216a:	b0 91 91 47 	lds	r27, 0x4791	; 0x804791 <_ZL23g_seconds_left_to_sleep+0x3>
    216e:	89 2b       	or	r24, r25
    2170:	8a 2b       	or	r24, r26
    2172:	8b 2b       	or	r24, r27
    2174:	21 f0       	breq	.+8      	; 0x217e <__vector_6+0xd2>
    2176:	80 91 06 40 	lds	r24, 0x4006	; 0x804006 <_ZL28g_antenna_connection_changed>
    217a:	88 23       	and	r24, r24
    217c:	11 f0       	breq	.+4      	; 0x2182 <__vector_6+0xd6>
    217e:	81 e0       	ldi	r24, 0x01	; 1
    2180:	01 c0       	rjmp	.+2      	; 0x2184 <__vector_6+0xd8>
    2182:	80 e0       	ldi	r24, 0x00	; 0
    2184:	88 23       	and	r24, r24
    2186:	09 f4       	brne	.+2      	; 0x218a <__vector_6+0xde>
    2188:	92 c3       	rjmp	.+1828   	; 0x28ae <__vector_6+0x802>
    218a:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <_ZL13g_go_to_sleep>
    218e:	10 92 8d 47 	sts	0x478D, r1	; 0x80478d <_ZL10g_sleeping>
    2192:	8d c3       	rjmp	.+1818   	; 0x28ae <__vector_6+0x802>
    2194:	19 86       	std	Y+9, r1	; 0x09
    2196:	1a 86       	std	Y+10, r1	; 0x0a
    2198:	1b 86       	std	Y+11, r1	; 0x0b
    219a:	1c 86       	std	Y+12, r1	; 0x0c
    219c:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    21a0:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    21a4:	21 e0       	ldi	r18, 0x01	; 1
    21a6:	89 2b       	or	r24, r25
    21a8:	09 f4       	brne	.+2      	; 0x21ac <__vector_6+0x100>
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	22 23       	and	r18, r18
    21ae:	49 f0       	breq	.+18     	; 0x21c2 <__vector_6+0x116>
    21b0:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    21b4:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    21b8:	01 97       	sbiw	r24, 0x01	; 1
    21ba:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    21be:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    21c2:	80 91 89 47 	lds	r24, 0x4789	; 0x804789 <g_event_commenced>
    21c6:	88 23       	and	r24, r24
    21c8:	09 f4       	brne	.+2      	; 0x21cc <__vector_6+0x120>
    21ca:	5c c0       	rjmp	.+184    	; 0x2284 <__vector_6+0x1d8>
    21cc:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    21d0:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    21d4:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    21d8:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    21dc:	89 2b       	or	r24, r25
    21de:	8a 2b       	or	r24, r26
    21e0:	8b 2b       	or	r24, r27
    21e2:	71 f0       	breq	.+28     	; 0x2200 <__vector_6+0x154>
    21e4:	90 91 8a 47 	lds	r25, 0x478A	; 0x80478a <g_check_for_next_event>
    21e8:	81 e0       	ldi	r24, 0x01	; 1
    21ea:	89 27       	eor	r24, r25
    21ec:	88 23       	and	r24, r24
    21ee:	41 f0       	breq	.+16     	; 0x2200 <__vector_6+0x154>
    21f0:	90 91 50 47 	lds	r25, 0x4750	; 0x804750 <_ZL20g_shutting_down_wifi>
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	89 27       	eor	r24, r25
    21f8:	88 23       	and	r24, r24
    21fa:	11 f0       	breq	.+4      	; 0x2200 <__vector_6+0x154>
    21fc:	81 e0       	ldi	r24, 0x01	; 1
    21fe:	01 c0       	rjmp	.+2      	; 0x2202 <__vector_6+0x156>
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	88 23       	and	r24, r24
    2204:	09 f4       	brne	.+2      	; 0x2208 <__vector_6+0x15c>
    2206:	3e c0       	rjmp	.+124    	; 0x2284 <__vector_6+0x1d8>
    2208:	ce 01       	movw	r24, r28
    220a:	09 96       	adiw	r24, 0x09	; 9
    220c:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    2210:	29 85       	ldd	r18, Y+9	; 0x09
    2212:	3a 85       	ldd	r19, Y+10	; 0x0a
    2214:	4b 85       	ldd	r20, Y+11	; 0x0b
    2216:	5c 85       	ldd	r21, Y+12	; 0x0c
    2218:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    221c:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    2220:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    2224:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    2228:	61 e0       	ldi	r22, 0x01	; 1
    222a:	28 17       	cp	r18, r24
    222c:	39 07       	cpc	r19, r25
    222e:	4a 07       	cpc	r20, r26
    2230:	5b 07       	cpc	r21, r27
    2232:	08 f4       	brcc	.+2      	; 0x2236 <__vector_6+0x18a>
    2234:	60 e0       	ldi	r22, 0x00	; 0
    2236:	66 23       	and	r22, r22
    2238:	29 f1       	breq	.+74     	; 0x2284 <__vector_6+0x1d8>
    223a:	8c ef       	ldi	r24, 0xFC	; 252
    223c:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2240:	10 92 48 47 	sts	0x4748, r1	; 0x804748 <_ZL12g_on_the_air>
    2244:	10 92 49 47 	sts	0x4749, r1	; 0x804749 <_ZL12g_on_the_air+0x1>
    2248:	10 92 4a 47 	sts	0x474A, r1	; 0x80474a <_ZL12g_on_the_air+0x2>
    224c:	10 92 4b 47 	sts	0x474B, r1	; 0x80474b <_ZL12g_on_the_air+0x3>
    2250:	80 e0       	ldi	r24, 0x00	; 0
    2252:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
    2256:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>
    225a:	10 92 89 47 	sts	0x4789, r1	; 0x804789 <g_event_commenced>
    225e:	81 e0       	ldi	r24, 0x01	; 1
    2260:	80 93 8a 47 	sts	0x478A, r24	; 0x80478a <g_check_for_next_event>
    2264:	8a e5       	ldi	r24, 0x5A	; 90
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    226c:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    2270:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    2274:	88 23       	and	r24, r24
    2276:	19 f0       	breq	.+6      	; 0x227e <__vector_6+0x1d2>
    2278:	8c e3       	ldi	r24, 0x3C	; 60
    227a:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    227e:	80 e0       	ldi	r24, 0x00	; 0
    2280:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2284:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_event_enabled>
    2288:	88 23       	and	r24, r24
    228a:	09 f4       	brne	.+2      	; 0x228e <__vector_6+0x1e2>
    228c:	92 c2       	rjmp	.+1316   	; 0x27b2 <__vector_6+0x706>
    228e:	80 91 89 47 	lds	r24, 0x4789	; 0x804789 <g_event_commenced>
    2292:	88 23       	and	r24, r24
    2294:	09 f4       	brne	.+2      	; 0x2298 <__vector_6+0x1ec>
    2296:	f0 c1       	rjmp	.+992    	; 0x2678 <__vector_6+0x5cc>
    2298:	80 91 4c 47 	lds	r24, 0x474C	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    229c:	90 91 4d 47 	lds	r25, 0x474D	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    22a0:	21 e0       	ldi	r18, 0x01	; 1
    22a2:	89 2b       	or	r24, r25
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <__vector_6+0x1fc>
    22a6:	20 e0       	ldi	r18, 0x00	; 0
    22a8:	22 23       	and	r18, r18
    22aa:	49 f0       	breq	.+18     	; 0x22be <__vector_6+0x212>
    22ac:	80 91 4c 47 	lds	r24, 0x474C	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    22b0:	90 91 4d 47 	lds	r25, 0x474D	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    22b4:	01 97       	sbiw	r24, 0x01	; 1
    22b6:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    22ba:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    22be:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    22c2:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    22c6:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    22ca:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    22ce:	21 e0       	ldi	r18, 0x01	; 1
    22d0:	89 2b       	or	r24, r25
    22d2:	8a 2b       	or	r24, r26
    22d4:	8b 2b       	or	r24, r27
    22d6:	09 f4       	brne	.+2      	; 0x22da <__vector_6+0x22e>
    22d8:	20 e0       	ldi	r18, 0x00	; 0
    22da:	22 23       	and	r18, r18
    22dc:	09 f4       	brne	.+2      	; 0x22e0 <__vector_6+0x234>
    22de:	69 c2       	rjmp	.+1234   	; 0x27b2 <__vector_6+0x706>
    22e0:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    22e4:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    22e8:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    22ec:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    22f0:	21 e0       	ldi	r18, 0x01	; 1
    22f2:	18 16       	cp	r1, r24
    22f4:	19 06       	cpc	r1, r25
    22f6:	1a 06       	cpc	r1, r26
    22f8:	1b 06       	cpc	r1, r27
    22fa:	0c f0       	brlt	.+2      	; 0x22fe <__vector_6+0x252>
    22fc:	20 e0       	ldi	r18, 0x00	; 0
    22fe:	22 23       	and	r18, r18
    2300:	09 f4       	brne	.+2      	; 0x2304 <__vector_6+0x258>
    2302:	5e c1       	rjmp	.+700    	; 0x25c0 <__vector_6+0x514>
    2304:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    2308:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    230c:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    2310:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    2314:	01 97       	sbiw	r24, 0x01	; 1
    2316:	a1 09       	sbc	r26, r1
    2318:	b1 09       	sbc	r27, r1
    231a:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    231e:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    2322:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    2326:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    232a:	80 91 4c 47 	lds	r24, 0x474C	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    232e:	90 91 4d 47 	lds	r25, 0x474D	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    2332:	89 2b       	or	r24, r25
    2334:	41 f4       	brne	.+16     	; 0x2346 <__vector_6+0x29a>
    2336:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    233a:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    233e:	89 2b       	or	r24, r25
    2340:	11 f0       	breq	.+4      	; 0x2346 <__vector_6+0x29a>
    2342:	81 e0       	ldi	r24, 0x01	; 1
    2344:	01 c0       	rjmp	.+2      	; 0x2348 <__vector_6+0x29c>
    2346:	80 e0       	ldi	r24, 0x00	; 0
    2348:	88 23       	and	r24, r24
    234a:	a9 f1       	breq	.+106    	; 0x23b6 <__vector_6+0x30a>
    234c:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    2350:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    2354:	9c 01       	movw	r18, r24
    2356:	40 e0       	ldi	r20, 0x00	; 0
    2358:	50 e0       	ldi	r21, 0x00	; 0
    235a:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    235e:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    2362:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    2366:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    236a:	61 e0       	ldi	r22, 0x01	; 1
    236c:	28 17       	cp	r18, r24
    236e:	39 07       	cpc	r19, r25
    2370:	4a 07       	cpc	r20, r26
    2372:	5b 07       	cpc	r21, r27
    2374:	09 f0       	breq	.+2      	; 0x2378 <__vector_6+0x2cc>
    2376:	60 e0       	ldi	r22, 0x00	; 0
    2378:	66 23       	and	r22, r22
    237a:	e9 f0       	breq	.+58     	; 0x23b6 <__vector_6+0x30a>
    237c:	8f ee       	ldi	r24, 0xEF	; 239
    237e:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2382:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    2386:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    238a:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    238e:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    2392:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    2396:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    239a:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    239e:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    23a2:	1d 86       	std	Y+13, r1	; 0x0d
    23a4:	ce 01       	movw	r24, r28
    23a6:	0d 96       	adiw	r24, 0x0d	; 13
    23a8:	40 e0       	ldi	r20, 0x00	; 0
    23aa:	50 e0       	ldi	r21, 0x00	; 0
    23ac:	bc 01       	movw	r22, r24
    23ae:	87 e6       	ldi	r24, 0x67	; 103
    23b0:	97 e4       	ldi	r25, 0x47	; 71
    23b2:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    23b6:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    23ba:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    23be:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    23c2:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    23c6:	21 e0       	ldi	r18, 0x01	; 1
    23c8:	89 2b       	or	r24, r25
    23ca:	8a 2b       	or	r24, r26
    23cc:	8b 2b       	or	r24, r27
    23ce:	09 f0       	breq	.+2      	; 0x23d2 <__vector_6+0x326>
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	22 23       	and	r18, r18
    23d4:	09 f4       	brne	.+2      	; 0x23d8 <__vector_6+0x32c>
    23d6:	ed c1       	rjmp	.+986    	; 0x27b2 <__vector_6+0x706>
    23d8:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    23dc:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    23e0:	21 e0       	ldi	r18, 0x01	; 1
    23e2:	89 2b       	or	r24, r25
    23e4:	09 f4       	brne	.+2      	; 0x23e8 <__vector_6+0x33c>
    23e6:	20 e0       	ldi	r18, 0x00	; 0
    23e8:	22 23       	and	r18, r18
    23ea:	09 f4       	brne	.+2      	; 0x23ee <__vector_6+0x342>
    23ec:	d0 c0       	rjmp	.+416    	; 0x258e <__vector_6+0x4e2>
    23ee:	80 e0       	ldi	r24, 0x00	; 0
    23f0:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
    23f4:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    23f8:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    23fc:	20 91 48 47 	lds	r18, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    2400:	30 91 49 47 	lds	r19, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    2404:	40 91 4a 47 	lds	r20, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    2408:	50 91 4b 47 	lds	r21, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    240c:	09 2e       	mov	r0, r25
    240e:	00 0c       	add	r0, r0
    2410:	aa 0b       	sbc	r26, r26
    2412:	bb 0b       	sbc	r27, r27
    2414:	79 01       	movw	r14, r18
    2416:	8a 01       	movw	r16, r20
    2418:	e8 1a       	sub	r14, r24
    241a:	f9 0a       	sbc	r15, r25
    241c:	0a 0b       	sbc	r16, r26
    241e:	1b 0b       	sbc	r17, r27
    2420:	d8 01       	movw	r26, r16
    2422:	c7 01       	movw	r24, r14
    2424:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    2428:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    242c:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    2430:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    2434:	81 e0       	ldi	r24, 0x01	; 1
    2436:	8d 87       	std	Y+13, r24	; 0x0d
    2438:	ce 01       	movw	r24, r28
    243a:	0d 96       	adiw	r24, 0x0d	; 13
    243c:	40 e0       	ldi	r20, 0x00	; 0
    243e:	50 e0       	ldi	r21, 0x00	; 0
    2440:	bc 01       	movw	r22, r24
    2442:	82 e5       	ldi	r24, 0x52	; 82
    2444:	97 e4       	ldi	r25, 0x47	; 71
    2446:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    244a:	8e ef       	ldi	r24, 0xFE	; 254
    244c:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2450:	80 e0       	ldi	r24, 0x00	; 0
    2452:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2456:	19 82       	std	Y+1, r1	; 0x01
    2458:	1a 82       	std	Y+2, r1	; 0x02
    245a:	1b 82       	std	Y+3, r1	; 0x03
    245c:	1c 82       	std	Y+4, r1	; 0x04
    245e:	ce 01       	movw	r24, r28
    2460:	09 96       	adiw	r24, 0x09	; 9
    2462:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    2466:	29 85       	ldd	r18, Y+9	; 0x09
    2468:	3a 85       	ldd	r19, Y+10	; 0x0a
    246a:	4b 85       	ldd	r20, Y+11	; 0x0b
    246c:	5c 85       	ldd	r21, Y+12	; 0x0c
    246e:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    2472:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    2476:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    247a:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    247e:	61 e0       	ldi	r22, 0x01	; 1
    2480:	28 17       	cp	r18, r24
    2482:	39 07       	cpc	r19, r25
    2484:	4a 07       	cpc	r20, r26
    2486:	5b 07       	cpc	r21, r27
    2488:	08 f0       	brcs	.+2      	; 0x248c <__vector_6+0x3e0>
    248a:	60 e0       	ldi	r22, 0x00	; 0
    248c:	66 23       	and	r22, r22
    248e:	b1 f0       	breq	.+44     	; 0x24bc <__vector_6+0x410>
    2490:	29 85       	ldd	r18, Y+9	; 0x09
    2492:	3a 85       	ldd	r19, Y+10	; 0x0a
    2494:	4b 85       	ldd	r20, Y+11	; 0x0b
    2496:	5c 85       	ldd	r21, Y+12	; 0x0c
    2498:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    249c:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    24a0:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    24a4:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    24a8:	bc 01       	movw	r22, r24
    24aa:	cd 01       	movw	r24, r26
    24ac:	0e 94 33 6f 	call	0xde66	; 0xde66 <_Z7timeDifmm>
    24b0:	dc 01       	movw	r26, r24
    24b2:	cb 01       	movw	r24, r22
    24b4:	89 83       	std	Y+1, r24	; 0x01
    24b6:	9a 83       	std	Y+2, r25	; 0x02
    24b8:	ab 83       	std	Y+3, r26	; 0x03
    24ba:	bc 83       	std	Y+4, r27	; 0x04
    24bc:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    24c0:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    24c4:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    24c8:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    24cc:	82 0f       	add	r24, r18
    24ce:	93 1f       	adc	r25, r19
    24d0:	0f 96       	adiw	r24, 0x0f	; 15
    24d2:	9c 01       	movw	r18, r24
    24d4:	99 0f       	add	r25, r25
    24d6:	44 0b       	sbc	r20, r20
    24d8:	55 0b       	sbc	r21, r21
    24da:	61 e0       	ldi	r22, 0x01	; 1
    24dc:	89 81       	ldd	r24, Y+1	; 0x01
    24de:	9a 81       	ldd	r25, Y+2	; 0x02
    24e0:	ab 81       	ldd	r26, Y+3	; 0x03
    24e2:	bc 81       	ldd	r27, Y+4	; 0x04
    24e4:	28 17       	cp	r18, r24
    24e6:	39 07       	cpc	r19, r25
    24e8:	4a 07       	cpc	r20, r26
    24ea:	5b 07       	cpc	r21, r27
    24ec:	0c f0       	brlt	.+2      	; 0x24f0 <__vector_6+0x444>
    24ee:	60 e0       	ldi	r22, 0x00	; 0
    24f0:	66 23       	and	r22, r22
    24f2:	09 f4       	brne	.+2      	; 0x24f6 <__vector_6+0x44a>
    24f4:	5e c1       	rjmp	.+700    	; 0x27b2 <__vector_6+0x706>
    24f6:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    24fa:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    24fe:	40 97       	sbiw	r24, 0x10	; 16
    2500:	34 f0       	brlt	.+12     	; 0x250e <__vector_6+0x462>
    2502:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2506:	88 23       	and	r24, r24
    2508:	11 f4       	brne	.+4      	; 0x250e <__vector_6+0x462>
    250a:	81 e0       	ldi	r24, 0x01	; 1
    250c:	01 c0       	rjmp	.+2      	; 0x2510 <__vector_6+0x464>
    250e:	80 e0       	ldi	r24, 0x00	; 0
    2510:	88 23       	and	r24, r24
    2512:	09 f4       	brne	.+2      	; 0x2516 <__vector_6+0x46a>
    2514:	4e c1       	rjmp	.+668    	; 0x27b2 <__vector_6+0x706>
    2516:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    251a:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    251e:	0a 97       	sbiw	r24, 0x0a	; 10
    2520:	09 2e       	mov	r0, r25
    2522:	00 0c       	add	r0, r0
    2524:	aa 0b       	sbc	r26, r26
    2526:	bb 0b       	sbc	r27, r27
    2528:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    252c:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    2530:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    2534:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    2538:	82 e0       	ldi	r24, 0x02	; 2
    253a:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZL11g_sleepType>
    253e:	81 e0       	ldi	r24, 0x01	; 1
    2540:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <_ZL13g_go_to_sleep>
    2544:	1d 82       	std	Y+5, r1	; 0x05
    2546:	1e 82       	std	Y+6, r1	; 0x06
    2548:	20 91 4c 47 	lds	r18, 0x474C	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    254c:	30 91 4d 47 	lds	r19, 0x474D	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    2550:	80 91 15 40 	lds	r24, 0x4015	; 0x804015 <_ZL18g_seconds_to_sleep>
    2554:	90 91 16 40 	lds	r25, 0x4016	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    2558:	a0 91 17 40 	lds	r26, 0x4017	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    255c:	b0 91 18 40 	lds	r27, 0x4018	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    2560:	89 01       	movw	r16, r18
    2562:	08 1b       	sub	r16, r24
    2564:	19 0b       	sbc	r17, r25
    2566:	c8 01       	movw	r24, r16
    2568:	8f 83       	std	Y+7, r24	; 0x07
    256a:	98 87       	std	Y+8, r25	; 0x08
    256c:	2d 81       	ldd	r18, Y+5	; 0x05
    256e:	3e 81       	ldd	r19, Y+6	; 0x06
    2570:	8f 81       	ldd	r24, Y+7	; 0x07
    2572:	98 85       	ldd	r25, Y+8	; 0x08
    2574:	28 17       	cp	r18, r24
    2576:	39 07       	cpc	r19, r25
    2578:	1c f4       	brge	.+6      	; 0x2580 <__vector_6+0x4d4>
    257a:	8f 81       	ldd	r24, Y+7	; 0x07
    257c:	98 85       	ldd	r25, Y+8	; 0x08
    257e:	02 c0       	rjmp	.+4      	; 0x2584 <__vector_6+0x4d8>
    2580:	8d 81       	ldd	r24, Y+5	; 0x05
    2582:	9e 81       	ldd	r25, Y+6	; 0x06
    2584:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    2588:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    258c:	12 c1       	rjmp	.+548    	; 0x27b2 <__vector_6+0x706>
    258e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2592:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2596:	09 2e       	mov	r0, r25
    2598:	00 0c       	add	r0, r0
    259a:	aa 0b       	sbc	r26, r26
    259c:	bb 0b       	sbc	r27, r27
    259e:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    25a2:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    25a6:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    25aa:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    25ae:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    25b2:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    25b6:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    25ba:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    25be:	f9 c0       	rjmp	.+498    	; 0x27b2 <__vector_6+0x706>
    25c0:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    25c4:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    25c8:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    25cc:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    25d0:	88 27       	eor	r24, r24
    25d2:	b7 fd       	sbrc	r27, 7
    25d4:	83 95       	inc	r24
    25d6:	99 27       	eor	r25, r25
    25d8:	aa 27       	eor	r26, r26
    25da:	bb 27       	eor	r27, r27
    25dc:	88 23       	and	r24, r24
    25de:	09 f4       	brne	.+2      	; 0x25e2 <__vector_6+0x536>
    25e0:	e8 c0       	rjmp	.+464    	; 0x27b2 <__vector_6+0x706>
    25e2:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    25e6:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    25ea:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    25ee:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    25f2:	01 96       	adiw	r24, 0x01	; 1
    25f4:	a1 1d       	adc	r26, r1
    25f6:	b1 1d       	adc	r27, r1
    25f8:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    25fc:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    2600:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    2604:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    2608:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    260c:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    2610:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    2614:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    2618:	21 e0       	ldi	r18, 0x01	; 1
    261a:	89 2b       	or	r24, r25
    261c:	8a 2b       	or	r24, r26
    261e:	8b 2b       	or	r24, r27
    2620:	09 f0       	breq	.+2      	; 0x2624 <__vector_6+0x578>
    2622:	20 e0       	ldi	r18, 0x00	; 0
    2624:	22 23       	and	r18, r18
    2626:	09 f4       	brne	.+2      	; 0x262a <__vector_6+0x57e>
    2628:	c4 c0       	rjmp	.+392    	; 0x27b2 <__vector_6+0x706>
    262a:	8d ef       	ldi	r24, 0xFD	; 253
    262c:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2630:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2634:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    2638:	09 2e       	mov	r0, r25
    263a:	00 0c       	add	r0, r0
    263c:	aa 0b       	sbc	r26, r26
    263e:	bb 0b       	sbc	r27, r27
    2640:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    2644:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    2648:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    264c:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    2650:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2654:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    2658:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    265c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2660:	81 e0       	ldi	r24, 0x01	; 1
    2662:	8e 87       	std	Y+14, r24	; 0x0e
    2664:	ce 01       	movw	r24, r28
    2666:	0e 96       	adiw	r24, 0x0e	; 14
    2668:	40 e0       	ldi	r20, 0x00	; 0
    266a:	50 e0       	ldi	r21, 0x00	; 0
    266c:	bc 01       	movw	r22, r24
    266e:	82 e5       	ldi	r24, 0x52	; 82
    2670:	97 e4       	ldi	r25, 0x47	; 71
    2672:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    2676:	9d c0       	rjmp	.+314    	; 0x27b2 <__vector_6+0x706>
    2678:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    267c:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    2680:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    2684:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    2688:	21 e0       	ldi	r18, 0x01	; 1
    268a:	89 2b       	or	r24, r25
    268c:	8a 2b       	or	r24, r26
    268e:	8b 2b       	or	r24, r27
    2690:	09 f4       	brne	.+2      	; 0x2694 <__vector_6+0x5e8>
    2692:	20 e0       	ldi	r18, 0x00	; 0
    2694:	22 23       	and	r18, r18
    2696:	09 f4       	brne	.+2      	; 0x269a <__vector_6+0x5ee>
    2698:	8c c0       	rjmp	.+280    	; 0x27b2 <__vector_6+0x706>
    269a:	ce 01       	movw	r24, r28
    269c:	09 96       	adiw	r24, 0x09	; 9
    269e:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    26a2:	29 85       	ldd	r18, Y+9	; 0x09
    26a4:	3a 85       	ldd	r19, Y+10	; 0x0a
    26a6:	4b 85       	ldd	r20, Y+11	; 0x0b
    26a8:	5c 85       	ldd	r21, Y+12	; 0x0c
    26aa:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    26ae:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    26b2:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    26b6:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    26ba:	61 e0       	ldi	r22, 0x01	; 1
    26bc:	28 17       	cp	r18, r24
    26be:	39 07       	cpc	r19, r25
    26c0:	4a 07       	cpc	r20, r26
    26c2:	5b 07       	cpc	r21, r27
    26c4:	08 f4       	brcc	.+2      	; 0x26c8 <__vector_6+0x61c>
    26c6:	60 e0       	ldi	r22, 0x00	; 0
    26c8:	66 23       	and	r22, r22
    26ca:	09 f4       	brne	.+2      	; 0x26ce <__vector_6+0x622>
    26cc:	72 c0       	rjmp	.+228    	; 0x27b2 <__vector_6+0x706>
    26ce:	80 91 7e 47 	lds	r24, 0x477E	; 0x80477e <g_intra_cycle_delay_time>
    26d2:	90 91 7f 47 	lds	r25, 0x477F	; 0x80477f <g_intra_cycle_delay_time+0x1>
    26d6:	21 e0       	ldi	r18, 0x01	; 1
    26d8:	89 2b       	or	r24, r25
    26da:	09 f4       	brne	.+2      	; 0x26de <__vector_6+0x632>
    26dc:	20 e0       	ldi	r18, 0x00	; 0
    26de:	22 23       	and	r18, r18
    26e0:	71 f1       	breq	.+92     	; 0x273e <__vector_6+0x692>
    26e2:	8e ef       	ldi	r24, 0xFE	; 254
    26e4:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    26e8:	80 91 7e 47 	lds	r24, 0x477E	; 0x80477e <g_intra_cycle_delay_time>
    26ec:	90 91 7f 47 	lds	r25, 0x477F	; 0x80477f <g_intra_cycle_delay_time+0x1>
    26f0:	91 95       	neg	r25
    26f2:	81 95       	neg	r24
    26f4:	91 09       	sbc	r25, r1
    26f6:	09 2e       	mov	r0, r25
    26f8:	00 0c       	add	r0, r0
    26fa:	aa 0b       	sbc	r26, r26
    26fc:	bb 0b       	sbc	r27, r27
    26fe:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    2702:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    2706:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    270a:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    270e:	20 91 7e 47 	lds	r18, 0x477E	; 0x80477e <g_intra_cycle_delay_time>
    2712:	30 91 7f 47 	lds	r19, 0x477F	; 0x80477f <g_intra_cycle_delay_time+0x1>
    2716:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    271a:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    271e:	82 0f       	add	r24, r18
    2720:	93 1f       	adc	r25, r19
    2722:	9c 01       	movw	r18, r24
    2724:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    2728:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    272c:	a9 01       	movw	r20, r18
    272e:	48 1b       	sub	r20, r24
    2730:	59 0b       	sbc	r21, r25
    2732:	ca 01       	movw	r24, r20
    2734:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    2738:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    273c:	37 c0       	rjmp	.+110    	; 0x27ac <__vector_6+0x700>
    273e:	8d ef       	ldi	r24, 0xFD	; 253
    2740:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2744:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2748:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    274c:	09 2e       	mov	r0, r25
    274e:	00 0c       	add	r0, r0
    2750:	aa 0b       	sbc	r26, r26
    2752:	bb 0b       	sbc	r27, r27
    2754:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    2758:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    275c:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    2760:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    2764:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    2768:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    276c:	9c 01       	movw	r18, r24
    276e:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    2772:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    2776:	f9 01       	movw	r30, r18
    2778:	e8 1b       	sub	r30, r24
    277a:	f9 0b       	sbc	r31, r25
    277c:	cf 01       	movw	r24, r30
    277e:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    2782:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    2786:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    278a:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    278e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2792:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	8f 87       	std	Y+15, r24	; 0x0f
    279a:	ce 01       	movw	r24, r28
    279c:	0f 96       	adiw	r24, 0x0f	; 15
    279e:	40 e0       	ldi	r20, 0x00	; 0
    27a0:	50 e0       	ldi	r21, 0x00	; 0
    27a2:	bc 01       	movw	r22, r24
    27a4:	82 e5       	ldi	r24, 0x52	; 82
    27a6:	97 e4       	ldi	r25, 0x47	; 71
    27a8:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    27ac:	81 e0       	ldi	r24, 0x01	; 1
    27ae:	80 93 89 47 	sts	0x4789, r24	; 0x804789 <g_event_commenced>
    27b2:	90 91 4f 47 	lds	r25, 0x474F	; 0x80474f <_ZL19g_wifi_enable_delay>
    27b6:	81 e0       	ldi	r24, 0x01	; 1
    27b8:	99 23       	and	r25, r25
    27ba:	09 f4       	brne	.+2      	; 0x27be <__vector_6+0x712>
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	88 23       	and	r24, r24
    27c0:	91 f0       	breq	.+36     	; 0x27e6 <__vector_6+0x73a>
    27c2:	80 91 4f 47 	lds	r24, 0x474F	; 0x80474f <_ZL19g_wifi_enable_delay>
    27c6:	81 50       	subi	r24, 0x01	; 1
    27c8:	80 93 4f 47 	sts	0x474F, r24	; 0x80474f <_ZL19g_wifi_enable_delay>
    27cc:	90 91 4f 47 	lds	r25, 0x474F	; 0x80474f <_ZL19g_wifi_enable_delay>
    27d0:	81 e0       	ldi	r24, 0x01	; 1
    27d2:	99 23       	and	r25, r25
    27d4:	09 f0       	breq	.+2      	; 0x27d8 <__vector_6+0x72c>
    27d6:	80 e0       	ldi	r24, 0x00	; 0
    27d8:	88 23       	and	r24, r24
    27da:	09 f4       	brne	.+2      	; 0x27de <__vector_6+0x732>
    27dc:	68 c0       	rjmp	.+208    	; 0x28ae <__vector_6+0x802>
    27de:	80 e0       	ldi	r24, 0x00	; 0
    27e0:	0e 94 ae 38 	call	0x715c	; 0x715c <_Z10wifi_resetb>
    27e4:	64 c0       	rjmp	.+200    	; 0x28ae <__vector_6+0x802>
    27e6:	80 91 13 40 	lds	r24, 0x4013	; 0x804013 <g_update_timeout_seconds>
    27ea:	90 91 14 40 	lds	r25, 0x4014	; 0x804014 <g_update_timeout_seconds+0x1>
    27ee:	89 2b       	or	r24, r25
    27f0:	81 f0       	breq	.+32     	; 0x2812 <__vector_6+0x766>
    27f2:	80 91 50 47 	lds	r24, 0x4750	; 0x804750 <_ZL20g_shutting_down_wifi>
    27f6:	88 23       	and	r24, r24
    27f8:	61 f4       	brne	.+24     	; 0x2812 <__vector_6+0x766>
    27fa:	90 91 8a 47 	lds	r25, 0x478A	; 0x80478a <g_check_for_next_event>
    27fe:	81 e0       	ldi	r24, 0x01	; 1
    2800:	89 27       	eor	r24, r25
    2802:	88 23       	and	r24, r24
    2804:	41 f0       	breq	.+16     	; 0x2816 <__vector_6+0x76a>
    2806:	90 91 8b 47 	lds	r25, 0x478B	; 0x80478b <g_waiting_for_next_event>
    280a:	81 e0       	ldi	r24, 0x01	; 1
    280c:	89 27       	eor	r24, r25
    280e:	88 23       	and	r24, r24
    2810:	11 f0       	breq	.+4      	; 0x2816 <__vector_6+0x76a>
    2812:	81 e0       	ldi	r24, 0x01	; 1
    2814:	01 c0       	rjmp	.+2      	; 0x2818 <__vector_6+0x76c>
    2816:	80 e0       	ldi	r24, 0x00	; 0
    2818:	88 23       	and	r24, r24
    281a:	09 f4       	brne	.+2      	; 0x281e <__vector_6+0x772>
    281c:	41 c0       	rjmp	.+130    	; 0x28a0 <__vector_6+0x7f4>
    281e:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2822:	81 e0       	ldi	r24, 0x01	; 1
    2824:	99 23       	and	r25, r25
    2826:	09 f4       	brne	.+2      	; 0x282a <__vector_6+0x77e>
    2828:	80 e0       	ldi	r24, 0x00	; 0
    282a:	88 23       	and	r24, r24
    282c:	c9 f1       	breq	.+114    	; 0x28a0 <__vector_6+0x7f4>
    282e:	80 91 09 40 	lds	r24, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2832:	81 50       	subi	r24, 0x01	; 1
    2834:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2838:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    283c:	81 e0       	ldi	r24, 0x01	; 1
    283e:	99 23       	and	r25, r25
    2840:	09 f0       	breq	.+2      	; 0x2844 <__vector_6+0x798>
    2842:	80 e0       	ldi	r24, 0x00	; 0
    2844:	88 23       	and	r24, r24
    2846:	61 f1       	breq	.+88     	; 0x28a0 <__vector_6+0x7f4>
    2848:	81 e0       	ldi	r24, 0x01	; 1
    284a:	0e 94 ae 38 	call	0x715c	; 0x715c <_Z10wifi_resetb>
    284e:	80 e0       	ldi	r24, 0x00	; 0
    2850:	0e 94 97 38 	call	0x712e	; 0x712e <_Z10wifi_powerb>
    2854:	10 92 50 47 	sts	0x4750, r1	; 0x804750 <_ZL20g_shutting_down_wifi>
    2858:	90 91 88 47 	lds	r25, 0x4788	; 0x804788 <g_event_enabled>
    285c:	81 e0       	ldi	r24, 0x01	; 1
    285e:	89 27       	eor	r24, r25
    2860:	88 23       	and	r24, r24
    2862:	91 f0       	breq	.+36     	; 0x2888 <__vector_6+0x7dc>
    2864:	84 e0       	ldi	r24, 0x04	; 4
    2866:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZL11g_sleepType>
    286a:	81 e0       	ldi	r24, 0x01	; 1
    286c:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <_ZL13g_go_to_sleep>
    2870:	8f ef       	ldi	r24, 0xFF	; 255
    2872:	9f ef       	ldi	r25, 0xFF	; 255
    2874:	dc 01       	movw	r26, r24
    2876:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    287a:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    287e:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    2882:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    2886:	0a c0       	rjmp	.+20     	; 0x289c <__vector_6+0x7f0>
    2888:	90 91 51 47 	lds	r25, 0x4751	; 0x804751 <_ZL11g_sleepType>
    288c:	81 e0       	ldi	r24, 0x01	; 1
    288e:	93 30       	cpi	r25, 0x03	; 3
    2890:	09 f0       	breq	.+2      	; 0x2894 <__vector_6+0x7e8>
    2892:	80 e0       	ldi	r24, 0x00	; 0
    2894:	88 23       	and	r24, r24
    2896:	11 f0       	breq	.+4      	; 0x289c <__vector_6+0x7f0>
    2898:	0e 94 b7 26 	call	0x4d6e	; 0x4d6e <_Z12eventEnabledv>
    289c:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    28a0:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <_ZL13g_wifi_active>
    28a4:	88 23       	and	r24, r24
    28a6:	19 f0       	breq	.+6      	; 0x28ae <__vector_6+0x802>
    28a8:	81 e0       	ldi	r24, 0x01	; 1
    28aa:	80 93 4e 47 	sts	0x474E, r24	; 0x80474e <_ZL16g_report_seconds>
    28ae:	80 e0       	ldi	r24, 0x00	; 0
    28b0:	94 e0       	ldi	r25, 0x04	; 4
    28b2:	2f ef       	ldi	r18, 0xFF	; 255
    28b4:	fc 01       	movw	r30, r24
    28b6:	21 87       	std	Z+9, r18	; 0x09
    28b8:	00 00       	nop
    28ba:	2f 96       	adiw	r28, 0x0f	; 15
    28bc:	cd bf       	out	0x3d, r28	; 61
    28be:	de bf       	out	0x3e, r29	; 62
    28c0:	df 91       	pop	r29
    28c2:	cf 91       	pop	r28
    28c4:	ff 91       	pop	r31
    28c6:	ef 91       	pop	r30
    28c8:	bf 91       	pop	r27
    28ca:	af 91       	pop	r26
    28cc:	9f 91       	pop	r25
    28ce:	8f 91       	pop	r24
    28d0:	7f 91       	pop	r23
    28d2:	6f 91       	pop	r22
    28d4:	5f 91       	pop	r21
    28d6:	4f 91       	pop	r20
    28d8:	3f 91       	pop	r19
    28da:	2f 91       	pop	r18
    28dc:	1f 91       	pop	r17
    28de:	0f 91       	pop	r16
    28e0:	ff 90       	pop	r15
    28e2:	ef 90       	pop	r14
    28e4:	0f 90       	pop	r0
    28e6:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    28ea:	0f 90       	pop	r0
    28ec:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    28f0:	0f 90       	pop	r0
    28f2:	1f 90       	pop	r1
    28f4:	18 95       	reti

000028f6 <__vector_22>:
    28f6:	1f 92       	push	r1
    28f8:	0f 92       	push	r0
    28fa:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    28fe:	0f 92       	push	r0
    2900:	11 24       	eor	r1, r1
    2902:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2906:	0f 92       	push	r0
    2908:	2f 93       	push	r18
    290a:	3f 93       	push	r19
    290c:	4f 93       	push	r20
    290e:	5f 93       	push	r21
    2910:	6f 93       	push	r22
    2912:	7f 93       	push	r23
    2914:	8f 93       	push	r24
    2916:	9f 93       	push	r25
    2918:	af 93       	push	r26
    291a:	bf 93       	push	r27
    291c:	ef 93       	push	r30
    291e:	ff 93       	push	r31
    2920:	cf 93       	push	r28
    2922:	df 93       	push	r29
    2924:	1f 92       	push	r1
    2926:	cd b7       	in	r28, 0x3d	; 61
    2928:	de b7       	in	r29, 0x3e	; 62
    292a:	80 e6       	ldi	r24, 0x60	; 96
    292c:	94 e0       	ldi	r25, 0x04	; 4
    292e:	fc 01       	movw	r30, r24
    2930:	81 85       	ldd	r24, Z+9	; 0x09
    2932:	88 2f       	mov	r24, r24
    2934:	90 e0       	ldi	r25, 0x00	; 0
    2936:	82 70       	andi	r24, 0x02	; 2
    2938:	99 27       	eor	r25, r25
    293a:	21 e0       	ldi	r18, 0x01	; 1
    293c:	89 2b       	or	r24, r25
    293e:	09 f4       	brne	.+2      	; 0x2942 <__vector_22+0x4c>
    2940:	20 e0       	ldi	r18, 0x00	; 0
    2942:	22 23       	and	r18, r18
    2944:	b1 f0       	breq	.+44     	; 0x2972 <__vector_22+0x7c>
    2946:	0e 94 45 2a 	call	0x548a	; 0x548a <_Z18antennaIsConnectedv>
    294a:	89 83       	std	Y+1, r24	; 0x01
    294c:	99 81       	ldd	r25, Y+1	; 0x01
    294e:	81 e0       	ldi	r24, 0x01	; 1
    2950:	89 27       	eor	r24, r25
    2952:	88 23       	and	r24, r24
    2954:	71 f0       	breq	.+28     	; 0x2972 <__vector_22+0x7c>
    2956:	90 91 45 47 	lds	r25, 0x4745	; 0x804745 <g_antenna_connect_state>
    295a:	81 e0       	ldi	r24, 0x01	; 1
    295c:	91 30       	cpi	r25, 0x01	; 1
    295e:	09 f4       	brne	.+2      	; 0x2962 <__vector_22+0x6c>
    2960:	80 e0       	ldi	r24, 0x00	; 0
    2962:	88 23       	and	r24, r24
    2964:	31 f0       	breq	.+12     	; 0x2972 <__vector_22+0x7c>
    2966:	81 e0       	ldi	r24, 0x01	; 1
    2968:	80 93 45 47 	sts	0x4745, r24	; 0x804745 <g_antenna_connect_state>
    296c:	81 e0       	ldi	r24, 0x01	; 1
    296e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    2972:	80 e6       	ldi	r24, 0x60	; 96
    2974:	94 e0       	ldi	r25, 0x04	; 4
    2976:	2f ef       	ldi	r18, 0xFF	; 255
    2978:	fc 01       	movw	r30, r24
    297a:	21 87       	std	Z+9, r18	; 0x09
    297c:	00 00       	nop
    297e:	0f 90       	pop	r0
    2980:	df 91       	pop	r29
    2982:	cf 91       	pop	r28
    2984:	ff 91       	pop	r31
    2986:	ef 91       	pop	r30
    2988:	bf 91       	pop	r27
    298a:	af 91       	pop	r26
    298c:	9f 91       	pop	r25
    298e:	8f 91       	pop	r24
    2990:	7f 91       	pop	r23
    2992:	6f 91       	pop	r22
    2994:	5f 91       	pop	r21
    2996:	4f 91       	pop	r20
    2998:	3f 91       	pop	r19
    299a:	2f 91       	pop	r18
    299c:	0f 90       	pop	r0
    299e:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    29a2:	0f 90       	pop	r0
    29a4:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    29a8:	0f 90       	pop	r0
    29aa:	1f 90       	pop	r1
    29ac:	18 95       	reti

000029ae <__vector_12>:
    29ae:	1f 92       	push	r1
    29b0:	0f 92       	push	r0
    29b2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    29b6:	0f 92       	push	r0
    29b8:	11 24       	eor	r1, r1
    29ba:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    29be:	0f 92       	push	r0
    29c0:	2f 93       	push	r18
    29c2:	3f 93       	push	r19
    29c4:	4f 93       	push	r20
    29c6:	5f 93       	push	r21
    29c8:	6f 93       	push	r22
    29ca:	7f 93       	push	r23
    29cc:	8f 93       	push	r24
    29ce:	9f 93       	push	r25
    29d0:	af 93       	push	r26
    29d2:	bf 93       	push	r27
    29d4:	ef 93       	push	r30
    29d6:	ff 93       	push	r31
    29d8:	cf 93       	push	r28
    29da:	df 93       	push	r29
    29dc:	cd b7       	in	r28, 0x3d	; 61
    29de:	de b7       	in	r29, 0x3e	; 62
    29e0:	27 97       	sbiw	r28, 0x07	; 7
    29e2:	cd bf       	out	0x3d, r28	; 61
    29e4:	de bf       	out	0x3e, r29	; 62
    29e6:	80 e0       	ldi	r24, 0x00	; 0
    29e8:	9b e0       	ldi	r25, 0x0B	; 11
    29ea:	fc 01       	movw	r30, r24
    29ec:	86 81       	ldd	r24, Z+6	; 0x06
    29ee:	88 2f       	mov	r24, r24
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	81 70       	andi	r24, 0x01	; 1
    29f4:	99 27       	eor	r25, r25
    29f6:	21 e0       	ldi	r18, 0x01	; 1
    29f8:	89 2b       	or	r24, r25
    29fa:	09 f4       	brne	.+2      	; 0x29fe <__vector_12+0x50>
    29fc:	20 e0       	ldi	r18, 0x00	; 0
    29fe:	22 23       	and	r18, r18
    2a00:	09 f4       	brne	.+2      	; 0x2a04 <__vector_12+0x56>
    2a02:	d4 c1       	rjmp	.+936    	; 0x2dac <__vector_12+0x3fe>
    2a04:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <g_i2c0_timeout_ticks>
    2a08:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    2a0c:	21 e0       	ldi	r18, 0x01	; 1
    2a0e:	89 2b       	or	r24, r25
    2a10:	09 f4       	brne	.+2      	; 0x2a14 <__vector_12+0x66>
    2a12:	20 e0       	ldi	r18, 0x00	; 0
    2a14:	22 23       	and	r18, r18
    2a16:	49 f0       	breq	.+18     	; 0x2a2a <__vector_12+0x7c>
    2a18:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <g_i2c0_timeout_ticks>
    2a1c:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    2a20:	01 97       	sbiw	r24, 0x01	; 1
    2a22:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <g_i2c0_timeout_ticks>
    2a26:	90 93 25 40 	sts	0x4025, r25	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    2a2a:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c1_timeout_ticks>
    2a2e:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c1_timeout_ticks+0x1>
    2a32:	21 e0       	ldi	r18, 0x01	; 1
    2a34:	89 2b       	or	r24, r25
    2a36:	09 f4       	brne	.+2      	; 0x2a3a <__vector_12+0x8c>
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	22 23       	and	r18, r18
    2a3c:	49 f0       	breq	.+18     	; 0x2a50 <__vector_12+0xa2>
    2a3e:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c1_timeout_ticks>
    2a42:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c1_timeout_ticks+0x1>
    2a46:	01 97       	sbiw	r24, 0x01	; 1
    2a48:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_i2c1_timeout_ticks>
    2a4c:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_i2c1_timeout_ticks+0x1>
    2a50:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZL21g_util_tick_countdown>
    2a54:	90 91 44 47 	lds	r25, 0x4744	; 0x804744 <_ZL21g_util_tick_countdown+0x1>
    2a58:	21 e0       	ldi	r18, 0x01	; 1
    2a5a:	89 2b       	or	r24, r25
    2a5c:	09 f4       	brne	.+2      	; 0x2a60 <__vector_12+0xb2>
    2a5e:	20 e0       	ldi	r18, 0x00	; 0
    2a60:	22 23       	and	r18, r18
    2a62:	49 f0       	breq	.+18     	; 0x2a76 <__vector_12+0xc8>
    2a64:	80 91 43 47 	lds	r24, 0x4743	; 0x804743 <_ZL21g_util_tick_countdown>
    2a68:	90 91 44 47 	lds	r25, 0x4744	; 0x804744 <_ZL21g_util_tick_countdown+0x1>
    2a6c:	01 97       	sbiw	r24, 0x01	; 1
    2a6e:	80 93 43 47 	sts	0x4743, r24	; 0x804743 <_ZL21g_util_tick_countdown>
    2a72:	90 93 44 47 	sts	0x4744, r25	; 0x804744 <_ZL21g_util_tick_countdown+0x1>
    2a76:	87 e0       	ldi	r24, 0x07	; 7
    2a78:	0e 94 09 10 	call	0x2012	; 0x2012 <PORTC_get_pin_level>
    2a7c:	98 2f       	mov	r25, r24
    2a7e:	81 e0       	ldi	r24, 0x01	; 1
    2a80:	89 27       	eor	r24, r25
    2a82:	88 23       	and	r24, r24
    2a84:	a1 f0       	breq	.+40     	; 0x2aae <__vector_12+0x100>
    2a86:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_switch_closed_count>
    2a8a:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_switch_closed_count+0x1>
    2a8e:	21 e0       	ldi	r18, 0x01	; 1
    2a90:	88 3e       	cpi	r24, 0xE8	; 232
    2a92:	93 40       	sbci	r25, 0x03	; 3
    2a94:	08 f0       	brcs	.+2      	; 0x2a98 <__vector_12+0xea>
    2a96:	20 e0       	ldi	r18, 0x00	; 0
    2a98:	22 23       	and	r18, r18
    2a9a:	49 f0       	breq	.+18     	; 0x2aae <__vector_12+0x100>
    2a9c:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_switch_closed_count>
    2aa0:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_switch_closed_count+0x1>
    2aa4:	01 96       	adiw	r24, 0x01	; 1
    2aa6:	80 93 9b 47 	sts	0x479B, r24	; 0x80479b <g_switch_closed_count>
    2aaa:	90 93 9c 47 	sts	0x479C, r25	; 0x80479c <g_switch_closed_count+0x1>
    2aae:	0e 94 69 26 	call	0x4cd2	; 0x4cd2 <_Z19updateAntennaStatusv>
    2ab2:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_event_enabled>
    2ab6:	88 23       	and	r24, r24
    2ab8:	31 f0       	breq	.+12     	; 0x2ac6 <__vector_12+0x118>
    2aba:	80 91 89 47 	lds	r24, 0x4789	; 0x804789 <g_event_commenced>
    2abe:	88 23       	and	r24, r24
    2ac0:	11 f0       	breq	.+4      	; 0x2ac6 <__vector_12+0x118>
    2ac2:	81 e0       	ldi	r24, 0x01	; 1
    2ac4:	01 c0       	rjmp	.+2      	; 0x2ac8 <__vector_12+0x11a>
    2ac6:	80 e0       	ldi	r24, 0x00	; 0
    2ac8:	88 23       	and	r24, r24
    2aca:	09 f4       	brne	.+2      	; 0x2ace <__vector_12+0x120>
    2acc:	9f c0       	rjmp	.+318    	; 0x2c0c <__vector_12+0x25e>
    2ace:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    2ad2:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    2ad6:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    2ada:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    2ade:	21 e0       	ldi	r18, 0x01	; 1
    2ae0:	18 16       	cp	r1, r24
    2ae2:	19 06       	cpc	r1, r25
    2ae4:	1a 06       	cpc	r1, r26
    2ae6:	1b 06       	cpc	r1, r27
    2ae8:	0c f0       	brlt	.+2      	; 0x2aec <__vector_12+0x13e>
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	22 23       	and	r18, r18
    2aee:	09 f4       	brne	.+2      	; 0x2af2 <__vector_12+0x144>
    2af0:	6b c0       	rjmp	.+214    	; 0x2bc8 <__vector_12+0x21a>
    2af2:	80 91 ae 47 	lds	r24, 0x47AE	; 0x8047ae <_ZZ11__vector_12E7codeInc>
    2af6:	90 91 af 47 	lds	r25, 0x47AF	; 0x8047af <_ZZ11__vector_12E7codeInc+0x1>
    2afa:	89 2b       	or	r24, r25
    2afc:	09 f4       	brne	.+2      	; 0x2b00 <__vector_12+0x152>
    2afe:	53 c0       	rjmp	.+166    	; 0x2ba6 <__vector_12+0x1f8>
    2b00:	80 91 ae 47 	lds	r24, 0x47AE	; 0x8047ae <_ZZ11__vector_12E7codeInc>
    2b04:	90 91 af 47 	lds	r25, 0x47AF	; 0x8047af <_ZZ11__vector_12E7codeInc+0x1>
    2b08:	01 97       	sbiw	r24, 0x01	; 1
    2b0a:	80 93 ae 47 	sts	0x47AE, r24	; 0x8047ae <_ZZ11__vector_12E7codeInc>
    2b0e:	90 93 af 47 	sts	0x47AF, r25	; 0x8047af <_ZZ11__vector_12E7codeInc+0x1>
    2b12:	80 91 ae 47 	lds	r24, 0x47AE	; 0x8047ae <_ZZ11__vector_12E7codeInc>
    2b16:	90 91 af 47 	lds	r25, 0x47AF	; 0x8047af <_ZZ11__vector_12E7codeInc+0x1>
    2b1a:	89 2b       	or	r24, r25
    2b1c:	09 f0       	breq	.+2      	; 0x2b20 <__vector_12+0x172>
    2b1e:	76 c0       	rjmp	.+236    	; 0x2c0c <__vector_12+0x25e>
    2b20:	9e 01       	movw	r18, r28
    2b22:	2a 5f       	subi	r18, 0xFA	; 250
    2b24:	3f 4f       	sbci	r19, 0xFF	; 255
    2b26:	ce 01       	movw	r24, r28
    2b28:	05 96       	adiw	r24, 0x05	; 5
    2b2a:	a9 01       	movw	r20, r18
    2b2c:	bc 01       	movw	r22, r24
    2b2e:	80 e0       	ldi	r24, 0x00	; 0
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    2b36:	80 93 b0 47 	sts	0x47B0, r24	; 0x8047b0 <_ZZ11__vector_12E3key>
    2b3a:	9d 81       	ldd	r25, Y+5	; 0x05
    2b3c:	81 e0       	ldi	r24, 0x01	; 1
    2b3e:	89 27       	eor	r24, r25
    2b40:	88 23       	and	r24, r24
    2b42:	31 f1       	breq	.+76     	; 0x2b90 <__vector_12+0x1e2>
    2b44:	8e 81       	ldd	r24, Y+6	; 0x06
    2b46:	88 23       	and	r24, r24
    2b48:	19 f1       	breq	.+70     	; 0x2b90 <__vector_12+0x1e2>
    2b4a:	8d ef       	ldi	r24, 0xFD	; 253
    2b4c:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2b50:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    2b54:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    2b58:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    2b5c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    2b60:	81 e0       	ldi	r24, 0x01	; 1
    2b62:	8d 83       	std	Y+5, r24	; 0x05
    2b64:	ce 01       	movw	r24, r28
    2b66:	05 96       	adiw	r24, 0x05	; 5
    2b68:	40 e0       	ldi	r20, 0x00	; 0
    2b6a:	50 e0       	ldi	r21, 0x00	; 0
    2b6c:	bc 01       	movw	r22, r24
    2b6e:	82 e5       	ldi	r24, 0x52	; 82
    2b70:	97 e4       	ldi	r25, 0x47	; 71
    2b72:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    2b76:	9e 01       	movw	r18, r28
    2b78:	2a 5f       	subi	r18, 0xFA	; 250
    2b7a:	3f 4f       	sbci	r19, 0xFF	; 255
    2b7c:	ce 01       	movw	r24, r28
    2b7e:	05 96       	adiw	r24, 0x05	; 5
    2b80:	a9 01       	movw	r20, r18
    2b82:	bc 01       	movw	r22, r24
    2b84:	80 e0       	ldi	r24, 0x00	; 0
    2b86:	90 e0       	ldi	r25, 0x00	; 0
    2b88:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    2b8c:	80 93 b0 47 	sts	0x47B0, r24	; 0x8047b0 <_ZZ11__vector_12E3key>
    2b90:	80 91 b0 47 	lds	r24, 0x47B0	; 0x8047b0 <_ZZ11__vector_12E3key>
    2b94:	88 23       	and	r24, r24
    2b96:	d1 f1       	breq	.+116    	; 0x2c0c <__vector_12+0x25e>
    2b98:	81 e0       	ldi	r24, 0x01	; 1
    2b9a:	0e 94 3b 6b 	call	0xd676	; 0xd676 <_Z18powerToTransmitterb>
    2b9e:	81 e0       	ldi	r24, 0x01	; 1
    2ba0:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2ba4:	33 c0       	rjmp	.+102    	; 0x2c0c <__vector_12+0x25e>
    2ba6:	80 91 b0 47 	lds	r24, 0x47B0	; 0x8047b0 <_ZZ11__vector_12E3key>
    2baa:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
    2bae:	80 91 b0 47 	lds	r24, 0x47B0	; 0x8047b0 <_ZZ11__vector_12E3key>
    2bb2:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2bb6:	80 91 07 40 	lds	r24, 0x4007	; 0x804007 <_ZL15g_code_throttle>
    2bba:	90 91 08 40 	lds	r25, 0x4008	; 0x804008 <_ZL15g_code_throttle+0x1>
    2bbe:	80 93 ae 47 	sts	0x47AE, r24	; 0x8047ae <_ZZ11__vector_12E7codeInc>
    2bc2:	90 93 af 47 	sts	0x47AF, r25	; 0x8047af <_ZZ11__vector_12E7codeInc+0x1>
    2bc6:	22 c0       	rjmp	.+68     	; 0x2c0c <__vector_12+0x25e>
    2bc8:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    2bcc:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    2bd0:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    2bd4:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    2bd8:	21 e0       	ldi	r18, 0x01	; 1
    2bda:	89 2b       	or	r24, r25
    2bdc:	8a 2b       	or	r24, r26
    2bde:	8b 2b       	or	r24, r27
    2be0:	09 f0       	breq	.+2      	; 0x2be4 <__vector_12+0x236>
    2be2:	20 e0       	ldi	r18, 0x00	; 0
    2be4:	22 23       	and	r18, r18
    2be6:	91 f0       	breq	.+36     	; 0x2c0c <__vector_12+0x25e>
    2be8:	80 91 b0 47 	lds	r24, 0x47B0	; 0x8047b0 <_ZZ11__vector_12E3key>
    2bec:	88 23       	and	r24, r24
    2bee:	71 f0       	breq	.+28     	; 0x2c0c <__vector_12+0x25e>
    2bf0:	10 92 b0 47 	sts	0x47B0, r1	; 0x8047b0 <_ZZ11__vector_12E3key>
    2bf4:	80 e0       	ldi	r24, 0x00	; 0
    2bf6:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
    2bfa:	80 e0       	ldi	r24, 0x00	; 0
    2bfc:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2c00:	80 e0       	ldi	r24, 0x00	; 0
    2c02:	0e 94 3b 6b 	call	0xd676	; 0xd676 <_Z18powerToTransmitterb>
    2c06:	8e ef       	ldi	r24, 0xFE	; 254
    2c08:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    2c0c:	90 91 b1 47 	lds	r25, 0x47B1	; 0x8047b1 <_ZZ11__vector_12E19conversionInProcess>
    2c10:	81 e0       	ldi	r24, 0x01	; 1
    2c12:	89 27       	eor	r24, r25
    2c14:	88 23       	and	r24, r24
    2c16:	09 f4       	brne	.+2      	; 0x2c1a <__vector_12+0x26c>
    2c18:	74 c0       	rjmp	.+232    	; 0x2d02 <__vector_12+0x354>
    2c1a:	8f ef       	ldi	r24, 0xFF	; 255
    2c1c:	80 93 b2 47 	sts	0x47B2, r24	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2c20:	1f 82       	std	Y+7, r1	; 0x07
    2c22:	9f 81       	ldd	r25, Y+7	; 0x07
    2c24:	81 e0       	ldi	r24, 0x01	; 1
    2c26:	93 30       	cpi	r25, 0x03	; 3
    2c28:	08 f0       	brcs	.+2      	; 0x2c2c <__vector_12+0x27e>
    2c2a:	80 e0       	ldi	r24, 0x00	; 0
    2c2c:	88 23       	and	r24, r24
    2c2e:	d9 f1       	breq	.+118    	; 0x2ca6 <__vector_12+0x2f8>
    2c30:	8f 81       	ldd	r24, Y+7	; 0x07
    2c32:	88 2f       	mov	r24, r24
    2c34:	90 e0       	ldi	r25, 0x00	; 0
    2c36:	88 0f       	add	r24, r24
    2c38:	99 1f       	adc	r25, r25
    2c3a:	84 5e       	subi	r24, 0xE4	; 228
    2c3c:	9f 4b       	sbci	r25, 0xBF	; 191
    2c3e:	fc 01       	movw	r30, r24
    2c40:	80 81       	ld	r24, Z
    2c42:	91 81       	ldd	r25, Z+1	; 0x01
    2c44:	21 e0       	ldi	r18, 0x01	; 1
    2c46:	89 2b       	or	r24, r25
    2c48:	09 f4       	brne	.+2      	; 0x2c4c <__vector_12+0x29e>
    2c4a:	20 e0       	ldi	r18, 0x00	; 0
    2c4c:	22 23       	and	r18, r18
    2c4e:	a1 f0       	breq	.+40     	; 0x2c78 <__vector_12+0x2ca>
    2c50:	8f 81       	ldd	r24, Y+7	; 0x07
    2c52:	88 2f       	mov	r24, r24
    2c54:	90 e0       	ldi	r25, 0x00	; 0
    2c56:	9c 01       	movw	r18, r24
    2c58:	22 0f       	add	r18, r18
    2c5a:	33 1f       	adc	r19, r19
    2c5c:	24 5e       	subi	r18, 0xE4	; 228
    2c5e:	3f 4b       	sbci	r19, 0xBF	; 191
    2c60:	f9 01       	movw	r30, r18
    2c62:	20 81       	ld	r18, Z
    2c64:	31 81       	ldd	r19, Z+1	; 0x01
    2c66:	21 50       	subi	r18, 0x01	; 1
    2c68:	31 09       	sbc	r19, r1
    2c6a:	88 0f       	add	r24, r24
    2c6c:	99 1f       	adc	r25, r25
    2c6e:	84 5e       	subi	r24, 0xE4	; 228
    2c70:	9f 4b       	sbci	r25, 0xBF	; 191
    2c72:	fc 01       	movw	r30, r24
    2c74:	20 83       	st	Z, r18
    2c76:	31 83       	std	Z+1, r19	; 0x01
    2c78:	8f 81       	ldd	r24, Y+7	; 0x07
    2c7a:	88 2f       	mov	r24, r24
    2c7c:	90 e0       	ldi	r25, 0x00	; 0
    2c7e:	88 0f       	add	r24, r24
    2c80:	99 1f       	adc	r25, r25
    2c82:	84 5e       	subi	r24, 0xE4	; 228
    2c84:	9f 4b       	sbci	r25, 0xBF	; 191
    2c86:	fc 01       	movw	r30, r24
    2c88:	80 81       	ld	r24, Z
    2c8a:	91 81       	ldd	r25, Z+1	; 0x01
    2c8c:	21 e0       	ldi	r18, 0x01	; 1
    2c8e:	89 2b       	or	r24, r25
    2c90:	09 f0       	breq	.+2      	; 0x2c94 <__vector_12+0x2e6>
    2c92:	20 e0       	ldi	r18, 0x00	; 0
    2c94:	22 23       	and	r18, r18
    2c96:	19 f0       	breq	.+6      	; 0x2c9e <__vector_12+0x2f0>
    2c98:	8f 81       	ldd	r24, Y+7	; 0x07
    2c9a:	80 93 b2 47 	sts	0x47B2, r24	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2c9e:	8f 81       	ldd	r24, Y+7	; 0x07
    2ca0:	8f 5f       	subi	r24, 0xFF	; 255
    2ca2:	8f 83       	std	Y+7, r24	; 0x07
    2ca4:	be cf       	rjmp	.-132    	; 0x2c22 <__vector_12+0x274>
    2ca6:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2caa:	88 23       	and	r24, r24
    2cac:	0c f4       	brge	.+2      	; 0x2cb0 <__vector_12+0x302>
    2cae:	7e c0       	rjmp	.+252    	; 0x2dac <__vector_12+0x3fe>
    2cb0:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2cb4:	08 2e       	mov	r0, r24
    2cb6:	00 0c       	add	r0, r0
    2cb8:	99 0b       	sbc	r25, r25
    2cba:	20 91 b2 47 	lds	r18, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2cbe:	02 2e       	mov	r0, r18
    2cc0:	00 0c       	add	r0, r0
    2cc2:	33 0b       	sbc	r19, r19
    2cc4:	22 0f       	add	r18, r18
    2cc6:	33 1f       	adc	r19, r19
    2cc8:	21 5c       	subi	r18, 0xC1	; 193
    2cca:	39 4b       	sbci	r19, 0xB9	; 185
    2ccc:	f9 01       	movw	r30, r18
    2cce:	20 81       	ld	r18, Z
    2cd0:	31 81       	ldd	r19, Z+1	; 0x01
    2cd2:	88 0f       	add	r24, r24
    2cd4:	99 1f       	adc	r25, r25
    2cd6:	84 5e       	subi	r24, 0xE4	; 228
    2cd8:	9f 4b       	sbci	r25, 0xBF	; 191
    2cda:	fc 01       	movw	r30, r24
    2cdc:	20 83       	st	Z, r18
    2cde:	31 83       	std	Z+1, r19	; 0x01
    2ce0:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2ce4:	08 2e       	mov	r0, r24
    2ce6:	00 0c       	add	r0, r0
    2ce8:	99 0b       	sbc	r25, r25
    2cea:	87 5e       	subi	r24, 0xE7	; 231
    2cec:	9f 4b       	sbci	r25, 0xBF	; 191
    2cee:	fc 01       	movw	r30, r24
    2cf0:	80 81       	ld	r24, Z
    2cf2:	0e 94 ba 32 	call	0x6574	; 0x6574 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>
    2cf6:	0e 94 1d 33 	call	0x663a	; 0x663a <_Z20ADC0_startConversionv>
    2cfa:	81 e0       	ldi	r24, 0x01	; 1
    2cfc:	80 93 b1 47 	sts	0x47B1, r24	; 0x8047b1 <_ZZ11__vector_12E19conversionInProcess>
    2d00:	55 c0       	rjmp	.+170    	; 0x2dac <__vector_12+0x3fe>
    2d02:	0e 94 32 33 	call	0x6664	; 0x6664 <_Z19ADC0_conversionDonev>
    2d06:	88 23       	and	r24, r24
    2d08:	09 f4       	brne	.+2      	; 0x2d0c <__vector_12+0x35e>
    2d0a:	50 c0       	rjmp	.+160    	; 0x2dac <__vector_12+0x3fe>
    2d0c:	0e 94 46 33 	call	0x668c	; 0x668c <_Z9ADC0_readv>
    2d10:	89 83       	std	Y+1, r24	; 0x01
    2d12:	9a 83       	std	Y+2, r25	; 0x02
    2d14:	89 81       	ldd	r24, Y+1	; 0x01
    2d16:	9a 81       	ldd	r25, Y+2	; 0x02
    2d18:	0b 97       	sbiw	r24, 0x0b	; 11
    2d1a:	c0 f1       	brcs	.+112    	; 0x2d8c <__vector_12+0x3de>
    2d1c:	89 81       	ldd	r24, Y+1	; 0x01
    2d1e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d20:	8a 3f       	cpi	r24, 0xFA	; 250
    2d22:	9f 40       	sbci	r25, 0x0F	; 15
    2d24:	98 f5       	brcc	.+102    	; 0x2d8c <__vector_12+0x3de>
    2d26:	89 81       	ldd	r24, Y+1	; 0x01
    2d28:	9a 81       	ldd	r25, Y+2	; 0x02
    2d2a:	80 93 b3 47 	sts	0x47B3, r24	; 0x8047b3 <_ZZ11__vector_12E20holdConversionResult>
    2d2e:	90 93 b4 47 	sts	0x47B4, r25	; 0x8047b4 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2d32:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2d36:	08 2e       	mov	r0, r24
    2d38:	00 0c       	add	r0, r0
    2d3a:	99 0b       	sbc	r25, r25
    2d3c:	88 0f       	add	r24, r24
    2d3e:	99 1f       	adc	r25, r25
    2d40:	8b 56       	subi	r24, 0x6B	; 107
    2d42:	98 4b       	sbci	r25, 0xB8	; 184
    2d44:	fc 01       	movw	r30, r24
    2d46:	80 81       	ld	r24, Z
    2d48:	91 81       	ldd	r25, Z+1	; 0x01
    2d4a:	8b 83       	std	Y+3, r24	; 0x03
    2d4c:	9c 83       	std	Y+4, r25	; 0x04
    2d4e:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2d52:	08 2e       	mov	r0, r24
    2d54:	00 0c       	add	r0, r0
    2d56:	99 0b       	sbc	r25, r25
    2d58:	8e 56       	subi	r24, 0x6E	; 110
    2d5a:	98 4b       	sbci	r25, 0xB8	; 184
    2d5c:	21 e0       	ldi	r18, 0x01	; 1
    2d5e:	fc 01       	movw	r30, r24
    2d60:	20 83       	st	Z, r18
    2d62:	80 91 b3 47 	lds	r24, 0x47B3	; 0x8047b3 <_ZZ11__vector_12E20holdConversionResult>
    2d66:	90 91 b4 47 	lds	r25, 0x47B4	; 0x8047b4 <_ZZ11__vector_12E20holdConversionResult+0x1>
    2d6a:	8b 83       	std	Y+3, r24	; 0x03
    2d6c:	9c 83       	std	Y+4, r25	; 0x04
    2d6e:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2d72:	08 2e       	mov	r0, r24
    2d74:	00 0c       	add	r0, r0
    2d76:	99 0b       	sbc	r25, r25
    2d78:	88 0f       	add	r24, r24
    2d7a:	99 1f       	adc	r25, r25
    2d7c:	8b 56       	subi	r24, 0x6B	; 107
    2d7e:	98 4b       	sbci	r25, 0xB8	; 184
    2d80:	2b 81       	ldd	r18, Y+3	; 0x03
    2d82:	3c 81       	ldd	r19, Y+4	; 0x04
    2d84:	fc 01       	movw	r30, r24
    2d86:	20 83       	st	Z, r18
    2d88:	31 83       	std	Z+1, r19	; 0x01
    2d8a:	0e c0       	rjmp	.+28     	; 0x2da8 <__vector_12+0x3fa>
    2d8c:	80 91 b2 47 	lds	r24, 0x47B2	; 0x8047b2 <_ZZ11__vector_12E24indexConversionInProcess>
    2d90:	08 2e       	mov	r0, r24
    2d92:	00 0c       	add	r0, r0
    2d94:	99 0b       	sbc	r25, r25
    2d96:	88 0f       	add	r24, r24
    2d98:	99 1f       	adc	r25, r25
    2d9a:	8b 56       	subi	r24, 0x6B	; 107
    2d9c:	98 4b       	sbci	r25, 0xB8	; 184
    2d9e:	fc 01       	movw	r30, r24
    2da0:	80 81       	ld	r24, Z
    2da2:	91 81       	ldd	r25, Z+1	; 0x01
    2da4:	89 83       	std	Y+1, r24	; 0x01
    2da6:	9a 83       	std	Y+2, r25	; 0x02
    2da8:	10 92 b1 47 	sts	0x47B1, r1	; 0x8047b1 <_ZZ11__vector_12E19conversionInProcess>
    2dac:	80 e0       	ldi	r24, 0x00	; 0
    2dae:	9b e0       	ldi	r25, 0x0B	; 11
    2db0:	21 e0       	ldi	r18, 0x01	; 1
    2db2:	fc 01       	movw	r30, r24
    2db4:	26 83       	std	Z+6, r18	; 0x06
    2db6:	00 00       	nop
    2db8:	27 96       	adiw	r28, 0x07	; 7
    2dba:	cd bf       	out	0x3d, r28	; 61
    2dbc:	de bf       	out	0x3e, r29	; 62
    2dbe:	df 91       	pop	r29
    2dc0:	cf 91       	pop	r28
    2dc2:	ff 91       	pop	r31
    2dc4:	ef 91       	pop	r30
    2dc6:	bf 91       	pop	r27
    2dc8:	af 91       	pop	r26
    2dca:	9f 91       	pop	r25
    2dcc:	8f 91       	pop	r24
    2dce:	7f 91       	pop	r23
    2dd0:	6f 91       	pop	r22
    2dd2:	5f 91       	pop	r21
    2dd4:	4f 91       	pop	r20
    2dd6:	3f 91       	pop	r19
    2dd8:	2f 91       	pop	r18
    2dda:	0f 90       	pop	r0
    2ddc:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2de0:	0f 90       	pop	r0
    2de2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2de6:	0f 90       	pop	r0
    2de8:	1f 90       	pop	r1
    2dea:	18 95       	reti

00002dec <__vector_29>:
    2dec:	1f 92       	push	r1
    2dee:	0f 92       	push	r0
    2df0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2df4:	0f 92       	push	r0
    2df6:	11 24       	eor	r1, r1
    2df8:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2dfc:	0f 92       	push	r0
    2dfe:	2f 93       	push	r18
    2e00:	3f 93       	push	r19
    2e02:	4f 93       	push	r20
    2e04:	5f 93       	push	r21
    2e06:	6f 93       	push	r22
    2e08:	7f 93       	push	r23
    2e0a:	8f 93       	push	r24
    2e0c:	9f 93       	push	r25
    2e0e:	af 93       	push	r26
    2e10:	bf 93       	push	r27
    2e12:	ef 93       	push	r30
    2e14:	ff 93       	push	r31
    2e16:	cf 93       	push	r28
    2e18:	df 93       	push	r29
    2e1a:	cd b7       	in	r28, 0x3d	; 61
    2e1c:	de b7       	in	r29, 0x3e	; 62
    2e1e:	80 e4       	ldi	r24, 0x40	; 64
    2e20:	94 e0       	ldi	r25, 0x04	; 4
    2e22:	fc 01       	movw	r30, r24
    2e24:	81 85       	ldd	r24, Z+9	; 0x09
    2e26:	88 1f       	adc	r24, r24
    2e28:	88 27       	eor	r24, r24
    2e2a:	88 1f       	adc	r24, r24
    2e2c:	88 23       	and	r24, r24
    2e2e:	09 f4       	brne	.+2      	; 0x2e32 <__vector_29+0x46>
    2e30:	4f c0       	rjmp	.+158    	; 0x2ed0 <__vector_29+0xe4>
    2e32:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_switch_closed_count>
    2e36:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_switch_closed_count+0x1>
    2e3a:	21 e0       	ldi	r18, 0x01	; 1
    2e3c:	88 3e       	cpi	r24, 0xE8	; 232
    2e3e:	93 40       	sbci	r25, 0x03	; 3
    2e40:	08 f4       	brcc	.+2      	; 0x2e44 <__vector_29+0x58>
    2e42:	20 e0       	ldi	r18, 0x00	; 0
    2e44:	22 23       	and	r18, r18
    2e46:	21 f0       	breq	.+8      	; 0x2e50 <__vector_29+0x64>
    2e48:	81 e0       	ldi	r24, 0x01	; 1
    2e4a:	80 93 9d 47 	sts	0x479D, r24	; 0x80479d <g_long_button_press>
    2e4e:	3c c0       	rjmp	.+120    	; 0x2ec8 <__vector_29+0xdc>
    2e50:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_switch_closed_count>
    2e54:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_switch_closed_count+0x1>
    2e58:	21 e0       	ldi	r18, 0x01	; 1
    2e5a:	0b 97       	sbiw	r24, 0x0b	; 11
    2e5c:	08 f4       	brcc	.+2      	; 0x2e60 <__vector_29+0x74>
    2e5e:	20 e0       	ldi	r18, 0x00	; 0
    2e60:	22 23       	and	r18, r18
    2e62:	91 f1       	breq	.+100    	; 0x2ec8 <__vector_29+0xdc>
    2e64:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <_ZZ11__vector_29E5count>
    2e68:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <_ZZ11__vector_29E5count+0x1>
    2e6c:	01 96       	adiw	r24, 0x01	; 1
    2e6e:	80 93 b5 47 	sts	0x47B5, r24	; 0x8047b5 <_ZZ11__vector_29E5count>
    2e72:	90 93 b6 47 	sts	0x47B6, r25	; 0x8047b6 <_ZZ11__vector_29E5count+0x1>
    2e76:	80 91 b5 47 	lds	r24, 0x47B5	; 0x8047b5 <_ZZ11__vector_29E5count>
    2e7a:	90 91 b6 47 	lds	r25, 0x47B6	; 0x8047b6 <_ZZ11__vector_29E5count+0x1>
    2e7e:	81 70       	andi	r24, 0x01	; 1
    2e80:	99 27       	eor	r25, r25
    2e82:	89 2b       	or	r24, r25
    2e84:	89 f0       	breq	.+34     	; 0x2ea8 <__vector_29+0xbc>
    2e86:	65 e0       	ldi	r22, 0x05	; 5
    2e88:	8e e9       	ldi	r24, 0x9E	; 158
    2e8a:	97 e4       	ldi	r25, 0x47	; 71
    2e8c:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    2e90:	61 e0       	ldi	r22, 0x01	; 1
    2e92:	8e e9       	ldi	r24, 0x9E	; 158
    2e94:	97 e4       	ldi	r25, 0x47	; 71
    2e96:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    2e9a:	81 e0       	ldi	r24, 0x01	; 1
    2e9c:	0e 94 97 38 	call	0x712e	; 0x712e <_Z10wifi_powerb>
    2ea0:	80 e0       	ldi	r24, 0x00	; 0
    2ea2:	0e 94 ae 38 	call	0x715c	; 0x715c <_Z10wifi_resetb>
    2ea6:	10 c0       	rjmp	.+32     	; 0x2ec8 <__vector_29+0xdc>
    2ea8:	66 e0       	ldi	r22, 0x06	; 6
    2eaa:	8e e9       	ldi	r24, 0x9E	; 158
    2eac:	97 e4       	ldi	r25, 0x47	; 71
    2eae:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    2eb2:	61 e0       	ldi	r22, 0x01	; 1
    2eb4:	8e e9       	ldi	r24, 0x9E	; 158
    2eb6:	97 e4       	ldi	r25, 0x47	; 71
    2eb8:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    2ebc:	81 e0       	ldi	r24, 0x01	; 1
    2ebe:	0e 94 97 38 	call	0x712e	; 0x712e <_Z10wifi_powerb>
    2ec2:	81 e0       	ldi	r24, 0x01	; 1
    2ec4:	0e 94 ae 38 	call	0x715c	; 0x715c <_Z10wifi_resetb>
    2ec8:	10 92 9b 47 	sts	0x479B, r1	; 0x80479b <g_switch_closed_count>
    2ecc:	10 92 9c 47 	sts	0x479C, r1	; 0x80479c <g_switch_closed_count+0x1>
    2ed0:	80 e4       	ldi	r24, 0x40	; 64
    2ed2:	94 e0       	ldi	r25, 0x04	; 4
    2ed4:	2f ef       	ldi	r18, 0xFF	; 255
    2ed6:	fc 01       	movw	r30, r24
    2ed8:	21 87       	std	Z+9, r18	; 0x09
    2eda:	00 00       	nop
    2edc:	df 91       	pop	r29
    2ede:	cf 91       	pop	r28
    2ee0:	ff 91       	pop	r31
    2ee2:	ef 91       	pop	r30
    2ee4:	bf 91       	pop	r27
    2ee6:	af 91       	pop	r26
    2ee8:	9f 91       	pop	r25
    2eea:	8f 91       	pop	r24
    2eec:	7f 91       	pop	r23
    2eee:	6f 91       	pop	r22
    2ef0:	5f 91       	pop	r21
    2ef2:	4f 91       	pop	r20
    2ef4:	3f 91       	pop	r19
    2ef6:	2f 91       	pop	r18
    2ef8:	0f 90       	pop	r0
    2efa:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    2efe:	0f 90       	pop	r0
    2f00:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    2f04:	0f 90       	pop	r0
    2f06:	1f 90       	pop	r1
    2f08:	18 95       	reti

00002f0a <_Z10powerUp3V3v>:
    2f0a:	cf 93       	push	r28
    2f0c:	df 93       	push	r29
    2f0e:	cd b7       	in	r28, 0x3d	; 61
    2f10:	de b7       	in	r29, 0x3e	; 62
    2f12:	61 e0       	ldi	r22, 0x01	; 1
    2f14:	84 e0       	ldi	r24, 0x04	; 4
    2f16:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <PORTB_set_pin_level>
    2f1a:	61 e0       	ldi	r22, 0x01	; 1
    2f1c:	87 e0       	ldi	r24, 0x07	; 7
    2f1e:	0e 94 2a 0f 	call	0x1e54	; 0x1e54 <PORTA_set_pin_level>
    2f22:	81 e0       	ldi	r24, 0x01	; 1
    2f24:	80 93 42 47 	sts	0x4742, r24	; 0x804742 <_ZL18g_perform_3V3_init>
    2f28:	00 00       	nop
    2f2a:	df 91       	pop	r29
    2f2c:	cf 91       	pop	r28
    2f2e:	08 95       	ret

00002f30 <main>:
    2f30:	cf 93       	push	r28
    2f32:	df 93       	push	r29
    2f34:	00 d0       	rcall	.+0      	; 0x2f36 <main+0x6>
    2f36:	1f 92       	push	r1
    2f38:	cd b7       	in	r28, 0x3d	; 61
    2f3a:	de b7       	in	r29, 0x3e	; 62
    2f3c:	0e 94 ee 07 	call	0xfdc	; 0xfdc <atmel_start_init>
    2f40:	80 e0       	ldi	r24, 0x00	; 0
    2f42:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
    2f46:	61 e0       	ldi	r22, 0x01	; 1
    2f48:	84 e0       	ldi	r24, 0x04	; 4
    2f4a:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <PORTB_set_pin_level>
    2f4e:	81 e0       	ldi	r24, 0x01	; 1
    2f50:	0e 94 97 38 	call	0x712e	; 0x712e <_Z10wifi_powerb>
    2f54:	81 e0       	ldi	r24, 0x01	; 1
    2f56:	0e 94 ae 38 	call	0x715c	; 0x715c <_Z10wifi_resetb>
    2f5a:	84 e6       	ldi	r24, 0x64	; 100
    2f5c:	80 93 4f 47 	sts	0x474F, r24	; 0x80474f <_ZL19g_wifi_enable_delay>
    2f60:	0e 94 85 17 	call	0x2f0a	; 0x2f0a <_Z10powerUp3V3v>
    2f64:	8f e9       	ldi	r24, 0x9F	; 159
    2f66:	97 e4       	ldi	r25, 0x47	; 71
    2f68:	0e 94 d5 47 	call	0x8faa	; 0x8faa <_ZN13EepromManager20initializeEEPROMVarsEv>
    2f6c:	8f e9       	ldi	r24, 0x9F	; 159
    2f6e:	97 e4       	ldi	r25, 0x47	; 71
    2f70:	0e 94 67 46 	call	0x8cce	; 0x8cce <_ZN13EepromManager11readNonVolsEv>
    2f74:	0e 94 2c 2a 	call	0x5458	; 0x5458 <_Z8rtc_initv>
    2f78:	98 2f       	mov	r25, r24
    2f7a:	81 e0       	ldi	r24, 0x01	; 1
    2f7c:	9c 3f       	cpi	r25, 0xFC	; 252
    2f7e:	09 f0       	breq	.+2      	; 0x2f82 <main+0x52>
    2f80:	80 e0       	ldi	r24, 0x00	; 0
    2f82:	88 23       	and	r24, r24
    2f84:	e9 f4       	brne	.+58     	; 0x2fc0 <main+0x90>
    2f86:	ce 01       	movw	r24, r28
    2f88:	01 96       	adiw	r24, 0x01	; 1
    2f8a:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    2f8e:	dc 01       	movw	r26, r24
    2f90:	cb 01       	movw	r24, r22
    2f92:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    2f96:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    2f9a:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    2f9e:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>
    2fa2:	89 81       	ldd	r24, Y+1	; 0x01
    2fa4:	88 23       	and	r24, r24
    2fa6:	61 f4       	brne	.+24     	; 0x2fc0 <main+0x90>
    2fa8:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    2fac:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    2fb0:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    2fb4:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    2fb8:	bc 01       	movw	r22, r24
    2fba:	cd 01       	movw	r24, r26
    2fbc:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    2fc0:	0e 94 c5 38 	call	0x718a	; 0x718a <_Z11wifiPresentv>
    2fc4:	98 2f       	mov	r25, r24
    2fc6:	81 e0       	ldi	r24, 0x01	; 1
    2fc8:	89 27       	eor	r24, r25
    2fca:	88 23       	and	r24, r24
    2fcc:	51 f0       	breq	.+20     	; 0x2fe2 <main+0xb2>
    2fce:	80 e0       	ldi	r24, 0x00	; 0
    2fd0:	0e 94 97 38 	call	0x712e	; 0x712e <_Z10wifi_powerb>
    2fd4:	81 e0       	ldi	r24, 0x01	; 1
    2fd6:	0e 94 ae 38 	call	0x715c	; 0x715c <_Z10wifi_resetb>
    2fda:	10 92 4f 47 	sts	0x474F, r1	; 0x80474f <_ZL19g_wifi_enable_delay>
    2fde:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    2fe2:	0e 94 12 20 	call	0x4024	; 0x4024 <_Z17handleLinkBusMsgsv>
    2fe6:	0e 94 a2 18 	call	0x3144	; 0x3144 <_Z19handleSerialBusMsgsv>
    2fea:	80 91 42 47 	lds	r24, 0x4742	; 0x804742 <_ZL18g_perform_3V3_init>
    2fee:	88 23       	and	r24, r24
    2ff0:	71 f0       	breq	.+28     	; 0x300e <main+0xde>
    2ff2:	0e 94 1a 6c 	call	0xd834	; 0xd834 <_Z16init_transmitterv>
    2ff6:	98 2f       	mov	r25, r24
    2ff8:	81 e0       	ldi	r24, 0x01	; 1
    2ffa:	92 3d       	cpi	r25, 0xD2	; 210
    2ffc:	09 f4       	brne	.+2      	; 0x3000 <main+0xd0>
    2ffe:	80 e0       	ldi	r24, 0x00	; 0
    3000:	88 23       	and	r24, r24
    3002:	29 f0       	breq	.+10     	; 0x300e <main+0xde>
    3004:	81 e0       	ldi	r24, 0x01	; 1
    3006:	80 93 41 47 	sts	0x4741, r24	; 0x804741 <_ZL33g_powerUp_initialization_complete>
    300a:	10 92 42 47 	sts	0x4742, r1	; 0x804742 <_ZL18g_perform_3V3_init>
    300e:	80 91 9b 47 	lds	r24, 0x479B	; 0x80479b <g_switch_closed_count>
    3012:	90 91 9c 47 	lds	r25, 0x479C	; 0x80479c <g_switch_closed_count+0x1>
    3016:	21 e0       	ldi	r18, 0x01	; 1
    3018:	88 3e       	cpi	r24, 0xE8	; 232
    301a:	93 40       	sbci	r25, 0x03	; 3
    301c:	08 f4       	brcc	.+2      	; 0x3020 <main+0xf0>
    301e:	20 e0       	ldi	r18, 0x00	; 0
    3020:	22 23       	and	r18, r18
    3022:	51 f0       	breq	.+20     	; 0x3038 <main+0x108>
    3024:	68 e0       	ldi	r22, 0x08	; 8
    3026:	8e e9       	ldi	r24, 0x9E	; 158
    3028:	97 e4       	ldi	r25, 0x47	; 71
    302a:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    302e:	67 e0       	ldi	r22, 0x07	; 7
    3030:	8e e9       	ldi	r24, 0x9E	; 158
    3032:	97 e4       	ldi	r25, 0x47	; 71
    3034:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    3038:	80 91 9d 47 	lds	r24, 0x479D	; 0x80479d <g_long_button_press>
    303c:	88 23       	and	r24, r24
    303e:	d1 f1       	breq	.+116    	; 0x30b4 <main+0x184>
    3040:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_event_enabled>
    3044:	88 23       	and	r24, r24
    3046:	71 f0       	breq	.+28     	; 0x3064 <main+0x134>
    3048:	82 e0       	ldi	r24, 0x02	; 2
    304a:	0e 94 bf 2a 	call	0x557e	; 0x557e <_Z12stopEventNow19EventActionSource_t>
    304e:	66 e0       	ldi	r22, 0x06	; 6
    3050:	8e e9       	ldi	r24, 0x9E	; 158
    3052:	97 e4       	ldi	r25, 0x47	; 71
    3054:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    3058:	61 e0       	ldi	r22, 0x01	; 1
    305a:	8e e9       	ldi	r24, 0x9E	; 158
    305c:	97 e4       	ldi	r25, 0x47	; 71
    305e:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    3062:	26 c0       	rjmp	.+76     	; 0x30b0 <main+0x180>
    3064:	1a 82       	std	Y+2, r1	; 0x02
    3066:	ce 01       	movw	r24, r28
    3068:	02 96       	adiw	r24, 0x02	; 2
    306a:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <_Z11launchEventP2SC>
    306e:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    3072:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <_ZL13g_go_to_sleep>
    3076:	88 23       	and	r24, r24
    3078:	31 f0       	breq	.+12     	; 0x3086 <main+0x156>
    307a:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZL11g_sleepType>
    307e:	88 23       	and	r24, r24
    3080:	11 f0       	breq	.+4      	; 0x3086 <main+0x156>
    3082:	81 e0       	ldi	r24, 0x01	; 1
    3084:	01 c0       	rjmp	.+2      	; 0x3088 <main+0x158>
    3086:	80 e0       	ldi	r24, 0x00	; 0
    3088:	88 23       	and	r24, r24
    308a:	29 f0       	breq	.+10     	; 0x3096 <main+0x166>
    308c:	83 e0       	ldi	r24, 0x03	; 3
    308e:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZL11g_sleepType>
    3092:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <_ZL13g_go_to_sleep>
    3096:	8c e3       	ldi	r24, 0x3C	; 60
    3098:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    309c:	68 e0       	ldi	r22, 0x08	; 8
    309e:	8e e9       	ldi	r24, 0x9E	; 158
    30a0:	97 e4       	ldi	r25, 0x47	; 71
    30a2:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    30a6:	61 e0       	ldi	r22, 0x01	; 1
    30a8:	8e e9       	ldi	r24, 0x9E	; 158
    30aa:	97 e4       	ldi	r25, 0x47	; 71
    30ac:	0e 94 88 4f 	call	0x9f10	; 0x9f10 <_ZN4leds5blinkE7Blink_t>
    30b0:	10 92 9d 47 	sts	0x479D, r1	; 0x80479d <g_long_button_press>
    30b4:	80 91 46 47 	lds	r24, 0x4746	; 0x804746 <_ZL13g_start_event>
    30b8:	88 23       	and	r24, r24
    30ba:	69 f0       	breq	.+26     	; 0x30d6 <main+0x1a6>
    30bc:	10 92 46 47 	sts	0x4746, r1	; 0x804746 <_ZL13g_start_event>
    30c0:	80 91 41 47 	lds	r24, 0x4741	; 0x804741 <_ZL33g_powerUp_initialization_complete>
    30c4:	88 23       	and	r24, r24
    30c6:	39 f0       	breq	.+14     	; 0x30d6 <main+0x1a6>
    30c8:	81 e0       	ldi	r24, 0x01	; 1
    30ca:	8b 83       	std	Y+3, r24	; 0x03
    30cc:	ce 01       	movw	r24, r28
    30ce:	03 96       	adiw	r24, 0x03	; 3
    30d0:	61 e0       	ldi	r22, 0x01	; 1
    30d2:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
    30d6:	80 91 47 47 	lds	r24, 0x4747	; 0x804747 <_ZL11g_end_event>
    30da:	88 23       	and	r24, r24
    30dc:	11 f0       	breq	.+4      	; 0x30e2 <main+0x1b2>
    30de:	10 92 47 47 	sts	0x4747, r1	; 0x804747 <_ZL11g_end_event>
    30e2:	80 91 4e 47 	lds	r24, 0x474E	; 0x80474e <_ZL16g_report_seconds>
    30e6:	88 23       	and	r24, r24
    30e8:	09 f4       	brne	.+2      	; 0x30ec <main+0x1bc>
    30ea:	7b cf       	rjmp	.-266    	; 0x2fe2 <main+0xb2>
    30ec:	10 92 4e 47 	sts	0x474E, r1	; 0x80474e <_ZL16g_report_seconds>
    30f0:	80 e0       	ldi	r24, 0x00	; 0
    30f2:	90 e0       	ldi	r25, 0x00	; 0
    30f4:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    30f8:	dc 01       	movw	r26, r24
    30fa:	cb 01       	movw	r24, r22
    30fc:	2b 2f       	mov	r18, r27
    30fe:	2f 93       	push	r18
    3100:	2a 2f       	mov	r18, r26
    3102:	2f 93       	push	r18
    3104:	29 2f       	mov	r18, r25
    3106:	2f 93       	push	r18
    3108:	8f 93       	push	r24
    310a:	8d e4       	ldi	r24, 0x4D	; 77
    310c:	90 e4       	ldi	r25, 0x40	; 64
    310e:	89 2f       	mov	r24, r25
    3110:	8f 93       	push	r24
    3112:	8d e4       	ldi	r24, 0x4D	; 77
    3114:	90 e4       	ldi	r25, 0x40	; 64
    3116:	8f 93       	push	r24
    3118:	8d e0       	ldi	r24, 0x0D	; 13
    311a:	97 e4       	ldi	r25, 0x47	; 71
    311c:	89 2f       	mov	r24, r25
    311e:	8f 93       	push	r24
    3120:	8d e0       	ldi	r24, 0x0D	; 13
    3122:	97 e4       	ldi	r25, 0x47	; 71
    3124:	8f 93       	push	r24
    3126:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    312a:	8d b7       	in	r24, 0x3d	; 61
    312c:	9e b7       	in	r25, 0x3e	; 62
    312e:	08 96       	adiw	r24, 0x08	; 8
    3130:	cd bf       	out	0x3d, r28	; 61
    3132:	de bf       	out	0x3e, r29	; 62
    3134:	4d e0       	ldi	r20, 0x0D	; 13
    3136:	57 e4       	ldi	r21, 0x47	; 71
    3138:	61 e5       	ldi	r22, 0x51	; 81
    313a:	70 e4       	ldi	r23, 0x40	; 64
    313c:	83 e0       	ldi	r24, 0x03	; 3
    313e:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    3142:	4f cf       	rjmp	.-354    	; 0x2fe2 <main+0xb2>

00003144 <_Z19handleSerialBusMsgsv>:
    3144:	ef 92       	push	r14
    3146:	ff 92       	push	r15
    3148:	0f 93       	push	r16
    314a:	1f 93       	push	r17
    314c:	cf 93       	push	r28
    314e:	df 93       	push	r29
    3150:	cd b7       	in	r28, 0x3d	; 61
    3152:	de b7       	in	r29, 0x3e	; 62
    3154:	c6 59       	subi	r28, 0x96	; 150
    3156:	d1 09       	sbc	r29, r1
    3158:	cd bf       	out	0x3d, r28	; 61
    315a:	de bf       	out	0x3e, r29	; 62
    315c:	0e 94 d7 5c 	call	0xb9ae	; 0xb9ae <nextFullSBRxBuffer>
    3160:	8e 83       	std	Y+6, r24	; 0x06
    3162:	9f 83       	std	Y+7, r25	; 0x07
    3164:	21 e0       	ldi	r18, 0x01	; 1
    3166:	8e 81       	ldd	r24, Y+6	; 0x06
    3168:	9f 81       	ldd	r25, Y+7	; 0x07
    316a:	89 2b       	or	r24, r25
    316c:	09 f4       	brne	.+2      	; 0x3170 <_Z19handleSerialBusMsgsv+0x2c>
    316e:	20 e0       	ldi	r18, 0x00	; 0
    3170:	22 23       	and	r18, r18
    3172:	09 f4       	brne	.+2      	; 0x3176 <_Z19handleSerialBusMsgsv+0x32>
    3174:	4b c7       	rjmp	.+3734   	; 0x400c <__DATA_REGION_LENGTH__+0xc>
    3176:	8e 81       	ldd	r24, Y+6	; 0x06
    3178:	9f 81       	ldd	r25, Y+7	; 0x07
    317a:	fc 01       	movw	r30, r24
    317c:	81 81       	ldd	r24, Z+1	; 0x01
    317e:	92 81       	ldd	r25, Z+2	; 0x02
    3180:	88 87       	std	Y+8, r24	; 0x08
    3182:	99 87       	std	Y+9, r25	; 0x09
    3184:	88 85       	ldd	r24, Y+8	; 0x08
    3186:	99 85       	ldd	r25, Y+9	; 0x09
    3188:	8a 3e       	cpi	r24, 0xEA	; 234
    318a:	f2 e2       	ldi	r31, 0x22	; 34
    318c:	9f 07       	cpc	r25, r31
    318e:	09 f4       	brne	.+2      	; 0x3192 <_Z19handleSerialBusMsgsv+0x4e>
    3190:	a4 c3       	rjmp	.+1864   	; 0x38da <_Z19handleSerialBusMsgsv+0x796>
    3192:	8b 3e       	cpi	r24, 0xEB	; 235
    3194:	22 e2       	ldi	r18, 0x22	; 34
    3196:	92 07       	cpc	r25, r18
    3198:	b8 f4       	brcc	.+46     	; 0x31c8 <_Z19handleSerialBusMsgsv+0x84>
    319a:	8f 36       	cpi	r24, 0x6F	; 111
    319c:	ed e1       	ldi	r30, 0x1D	; 29
    319e:	9e 07       	cpc	r25, r30
    31a0:	09 f4       	brne	.+2      	; 0x31a4 <_Z19handleSerialBusMsgsv+0x60>
    31a2:	ed c3       	rjmp	.+2010   	; 0x397e <_Z19handleSerialBusMsgsv+0x83a>
    31a4:	80 37       	cpi	r24, 0x70	; 112
    31a6:	fd e1       	ldi	r31, 0x1D	; 29
    31a8:	9f 07       	cpc	r25, r31
    31aa:	28 f4       	brcc	.+10     	; 0x31b6 <_Z19handleSerialBusMsgsv+0x72>
    31ac:	8e 31       	cpi	r24, 0x1E	; 30
    31ae:	93 40       	sbci	r25, 0x03	; 3
    31b0:	09 f4       	brne	.+2      	; 0x31b4 <_Z19handleSerialBusMsgsv+0x70>
    31b2:	81 c2       	rjmp	.+1282   	; 0x36b6 <_Z19handleSerialBusMsgsv+0x572>
    31b4:	19 c7       	rjmp	.+3634   	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xea4>
    31b6:	86 3c       	cpi	r24, 0xC6	; 198
    31b8:	ee e1       	ldi	r30, 0x1E	; 30
    31ba:	9e 07       	cpc	r25, r30
    31bc:	e9 f0       	breq	.+58     	; 0x31f8 <_Z19handleSerialBusMsgsv+0xb4>
    31be:	81 3d       	cpi	r24, 0xD1	; 209
    31c0:	9e 41       	sbci	r25, 0x1E	; 30
    31c2:	09 f4       	brne	.+2      	; 0x31c6 <_Z19handleSerialBusMsgsv+0x82>
    31c4:	a9 c1       	rjmp	.+850    	; 0x3518 <_Z19handleSerialBusMsgsv+0x3d4>
    31c6:	10 c7       	rjmp	.+3616   	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xea4>
    31c8:	82 37       	cpi	r24, 0x72	; 114
    31ca:	23 e2       	ldi	r18, 0x23	; 35
    31cc:	92 07       	cpc	r25, r18
    31ce:	09 f4       	brne	.+2      	; 0x31d2 <_Z19handleSerialBusMsgsv+0x8e>
    31d0:	00 c3       	rjmp	.+1536   	; 0x37d2 <_Z19handleSerialBusMsgsv+0x68e>
    31d2:	83 37       	cpi	r24, 0x73	; 115
    31d4:	e3 e2       	ldi	r30, 0x23	; 35
    31d6:	9e 07       	cpc	r25, r30
    31d8:	28 f4       	brcc	.+10     	; 0x31e4 <_Z19handleSerialBusMsgsv+0xa0>
    31da:	88 3f       	cpi	r24, 0xF8	; 248
    31dc:	92 42       	sbci	r25, 0x22	; 34
    31de:	09 f4       	brne	.+2      	; 0x31e2 <_Z19handleSerialBusMsgsv+0x9e>
    31e0:	38 c1       	rjmp	.+624    	; 0x3452 <_Z19handleSerialBusMsgsv+0x30e>
    31e2:	02 c7       	rjmp	.+3588   	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xea4>
    31e4:	84 33       	cpi	r24, 0x34	; 52
    31e6:	24 e2       	ldi	r18, 0x24	; 36
    31e8:	92 07       	cpc	r25, r18
    31ea:	09 f4       	brne	.+2      	; 0x31ee <_Z19handleSerialBusMsgsv+0xaa>
    31ec:	29 c2       	rjmp	.+1106   	; 0x3640 <_Z19handleSerialBusMsgsv+0x4fc>
    31ee:	85 3c       	cpi	r24, 0xC5	; 197
    31f0:	94 42       	sbci	r25, 0x24	; 36
    31f2:	09 f4       	brne	.+2      	; 0x31f6 <_Z19handleSerialBusMsgsv+0xb2>
    31f4:	e5 c6       	rjmp	.+3530   	; 0x3fc0 <_Z19handleSerialBusMsgsv+0xe7c>
    31f6:	f8 c6       	rjmp	.+3568   	; 0x3fe8 <_Z19handleSerialBusMsgsv+0xea4>
    31f8:	8e 81       	ldd	r24, Y+6	; 0x06
    31fa:	9f 81       	ldd	r25, Y+7	; 0x07
    31fc:	fc 01       	movw	r30, r24
    31fe:	83 81       	ldd	r24, Z+3	; 0x03
    3200:	88 2f       	mov	r24, r24
    3202:	90 e0       	ldi	r25, 0x00	; 0
    3204:	89 83       	std	Y+1, r24	; 0x01
    3206:	9a 83       	std	Y+2, r25	; 0x02
    3208:	89 81       	ldd	r24, Y+1	; 0x01
    320a:	9a 81       	ldd	r25, Y+2	; 0x02
    320c:	89 2b       	or	r24, r25
    320e:	09 f4       	brne	.+2      	; 0x3212 <_Z19handleSerialBusMsgsv+0xce>
    3210:	d0 c0       	rjmp	.+416    	; 0x33b2 <_Z19handleSerialBusMsgsv+0x26e>
    3212:	89 81       	ldd	r24, Y+1	; 0x01
    3214:	9a 81       	ldd	r25, Y+2	; 0x02
    3216:	82 34       	cpi	r24, 0x42	; 66
    3218:	91 05       	cpc	r25, r1
    321a:	19 f4       	brne	.+6      	; 0x3222 <_Z19handleSerialBusMsgsv+0xde>
    321c:	19 82       	std	Y+1, r1	; 0x01
    321e:	1a 82       	std	Y+2, r1	; 0x02
    3220:	ac c0       	rjmp	.+344    	; 0x337a <_Z19handleSerialBusMsgsv+0x236>
    3222:	89 81       	ldd	r24, Y+1	; 0x01
    3224:	9a 81       	ldd	r25, Y+2	; 0x02
    3226:	86 34       	cpi	r24, 0x46	; 70
    3228:	91 05       	cpc	r25, r1
    322a:	29 f4       	brne	.+10     	; 0x3236 <_Z19handleSerialBusMsgsv+0xf2>
    322c:	86 e0       	ldi	r24, 0x06	; 6
    322e:	90 e0       	ldi	r25, 0x00	; 0
    3230:	89 83       	std	Y+1, r24	; 0x01
    3232:	9a 83       	std	Y+2, r25	; 0x02
    3234:	a2 c0       	rjmp	.+324    	; 0x337a <_Z19handleSerialBusMsgsv+0x236>
    3236:	89 81       	ldd	r24, Y+1	; 0x01
    3238:	9a 81       	ldd	r25, Y+2	; 0x02
    323a:	83 34       	cpi	r24, 0x43	; 67
    323c:	91 05       	cpc	r25, r1
    323e:	b9 f5       	brne	.+110    	; 0x32ae <_Z19handleSerialBusMsgsv+0x16a>
    3240:	8e 81       	ldd	r24, Y+6	; 0x06
    3242:	9f 81       	ldd	r25, Y+7	; 0x07
    3244:	fc 01       	movw	r30, r24
    3246:	87 89       	ldd	r24, Z+23	; 0x17
    3248:	8b 83       	std	Y+3, r24	; 0x03
    324a:	8e 81       	ldd	r24, Y+6	; 0x06
    324c:	9f 81       	ldd	r25, Y+7	; 0x07
    324e:	fc 01       	movw	r30, r24
    3250:	10 8e       	std	Z+24, r1	; 0x18
    3252:	8b 81       	ldd	r24, Y+3	; 0x03
    3254:	82 34       	cpi	r24, 0x42	; 66
    3256:	11 f4       	brne	.+4      	; 0x325c <_Z19handleSerialBusMsgsv+0x118>
    3258:	80 e3       	ldi	r24, 0x30	; 48
    325a:	8b 83       	std	Y+3, r24	; 0x03
    325c:	8b 81       	ldd	r24, Y+3	; 0x03
    325e:	88 2f       	mov	r24, r24
    3260:	90 e0       	ldi	r25, 0x00	; 0
    3262:	c0 97       	sbiw	r24, 0x30	; 48
    3264:	0a 97       	sbiw	r24, 0x0a	; 10
    3266:	08 f0       	brcs	.+2      	; 0x326a <_Z19handleSerialBusMsgsv+0x126>
    3268:	88 c0       	rjmp	.+272    	; 0x337a <_Z19handleSerialBusMsgsv+0x236>
    326a:	8e 81       	ldd	r24, Y+6	; 0x06
    326c:	9f 81       	ldd	r25, Y+7	; 0x07
    326e:	47 96       	adiw	r24, 0x17	; 23
    3270:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    3274:	8a 87       	std	Y+10, r24	; 0x0a
    3276:	9b 87       	std	Y+11, r25	; 0x0b
    3278:	1c 86       	std	Y+12, r1	; 0x0c
    327a:	85 e0       	ldi	r24, 0x05	; 5
    327c:	8d 87       	std	Y+13, r24	; 0x0d
    327e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3280:	28 2f       	mov	r18, r24
    3282:	30 e0       	ldi	r19, 0x00	; 0
    3284:	8a 85       	ldd	r24, Y+10	; 0x0a
    3286:	9b 85       	ldd	r25, Y+11	; 0x0b
    3288:	28 17       	cp	r18, r24
    328a:	39 07       	cpc	r19, r25
    328c:	24 f4       	brge	.+8      	; 0x3296 <_Z19handleSerialBusMsgsv+0x152>
    328e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3290:	88 2f       	mov	r24, r24
    3292:	90 e0       	ldi	r25, 0x00	; 0
    3294:	09 c0       	rjmp	.+18     	; 0x32a8 <_Z19handleSerialBusMsgsv+0x164>
    3296:	8c 85       	ldd	r24, Y+12	; 0x0c
    3298:	88 2f       	mov	r24, r24
    329a:	90 e0       	ldi	r25, 0x00	; 0
    329c:	2a 85       	ldd	r18, Y+10	; 0x0a
    329e:	3b 85       	ldd	r19, Y+11	; 0x0b
    32a0:	82 17       	cp	r24, r18
    32a2:	93 07       	cpc	r25, r19
    32a4:	0c f4       	brge	.+2      	; 0x32a8 <_Z19handleSerialBusMsgsv+0x164>
    32a6:	c9 01       	movw	r24, r18
    32a8:	89 83       	std	Y+1, r24	; 0x01
    32aa:	9a 83       	std	Y+2, r25	; 0x02
    32ac:	66 c0       	rjmp	.+204    	; 0x337a <_Z19handleSerialBusMsgsv+0x236>
    32ae:	89 81       	ldd	r24, Y+1	; 0x01
    32b0:	9a 81       	ldd	r25, Y+2	; 0x02
    32b2:	83 35       	cpi	r24, 0x53	; 83
    32b4:	91 05       	cpc	r25, r1
    32b6:	09 f0       	breq	.+2      	; 0x32ba <_Z19handleSerialBusMsgsv+0x176>
    32b8:	59 c0       	rjmp	.+178    	; 0x336c <_Z19handleSerialBusMsgsv+0x228>
    32ba:	1c 82       	std	Y+4, r1	; 0x04
    32bc:	8e 81       	ldd	r24, Y+6	; 0x06
    32be:	9f 81       	ldd	r25, Y+7	; 0x07
    32c0:	fc 01       	movw	r30, r24
    32c2:	87 89       	ldd	r24, Z+23	; 0x17
    32c4:	8e 87       	std	Y+14, r24	; 0x0e
    32c6:	8e 81       	ldd	r24, Y+6	; 0x06
    32c8:	9f 81       	ldd	r25, Y+7	; 0x07
    32ca:	fc 01       	movw	r30, r24
    32cc:	80 8d       	ldd	r24, Z+24	; 0x18
    32ce:	8f 87       	std	Y+15, r24	; 0x0f
    32d0:	8e 81       	ldd	r24, Y+6	; 0x06
    32d2:	9f 81       	ldd	r25, Y+7	; 0x07
    32d4:	fc 01       	movw	r30, r24
    32d6:	11 8e       	std	Z+25, r1	; 0x19
    32d8:	8e 85       	ldd	r24, Y+14	; 0x0e
    32da:	82 34       	cpi	r24, 0x42	; 66
    32dc:	11 f4       	brne	.+4      	; 0x32e2 <_Z19handleSerialBusMsgsv+0x19e>
    32de:	1c 82       	std	Y+4, r1	; 0x04
    32e0:	36 c0       	rjmp	.+108    	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    32e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    32e4:	86 34       	cpi	r24, 0x46	; 70
    32e6:	51 f4       	brne	.+20     	; 0x32fc <_Z19handleSerialBusMsgsv+0x1b8>
    32e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    32ea:	81 33       	cpi	r24, 0x31	; 49
    32ec:	80 f1       	brcs	.+96     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    32ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    32f0:	86 33       	cpi	r24, 0x36	; 54
    32f2:	68 f5       	brcc	.+90     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    32f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    32f6:	84 52       	subi	r24, 0x24	; 36
    32f8:	8c 83       	std	Y+4, r24	; 0x04
    32fa:	29 c0       	rjmp	.+82     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    32fc:	8e 85       	ldd	r24, Y+14	; 0x0e
    32fe:	83 35       	cpi	r24, 0x53	; 83
    3300:	69 f4       	brne	.+26     	; 0x331c <_Z19handleSerialBusMsgsv+0x1d8>
    3302:	8f 85       	ldd	r24, Y+15	; 0x0f
    3304:	81 33       	cpi	r24, 0x31	; 49
    3306:	38 f0       	brcs	.+14     	; 0x3316 <_Z19handleSerialBusMsgsv+0x1d2>
    3308:	8f 85       	ldd	r24, Y+15	; 0x0f
    330a:	86 33       	cpi	r24, 0x36	; 54
    330c:	20 f4       	brcc	.+8      	; 0x3316 <_Z19handleSerialBusMsgsv+0x1d2>
    330e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3310:	89 52       	subi	r24, 0x29	; 41
    3312:	8c 83       	std	Y+4, r24	; 0x04
    3314:	1c c0       	rjmp	.+56     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    3316:	87 e0       	ldi	r24, 0x07	; 7
    3318:	8c 83       	std	Y+4, r24	; 0x04
    331a:	19 c0       	rjmp	.+50     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    331c:	8f 85       	ldd	r24, Y+15	; 0x0f
    331e:	86 34       	cpi	r24, 0x46	; 70
    3320:	51 f4       	brne	.+20     	; 0x3336 <_Z19handleSerialBusMsgsv+0x1f2>
    3322:	8e 85       	ldd	r24, Y+14	; 0x0e
    3324:	81 33       	cpi	r24, 0x31	; 49
    3326:	98 f0       	brcs	.+38     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    3328:	8e 85       	ldd	r24, Y+14	; 0x0e
    332a:	86 33       	cpi	r24, 0x36	; 54
    332c:	80 f4       	brcc	.+32     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    332e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3330:	84 52       	subi	r24, 0x24	; 36
    3332:	8c 83       	std	Y+4, r24	; 0x04
    3334:	0c c0       	rjmp	.+24     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    3336:	8f 85       	ldd	r24, Y+15	; 0x0f
    3338:	83 35       	cpi	r24, 0x53	; 83
    333a:	49 f4       	brne	.+18     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    333c:	8e 85       	ldd	r24, Y+14	; 0x0e
    333e:	81 33       	cpi	r24, 0x31	; 49
    3340:	30 f0       	brcs	.+12     	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    3342:	8e 85       	ldd	r24, Y+14	; 0x0e
    3344:	86 33       	cpi	r24, 0x36	; 54
    3346:	18 f4       	brcc	.+6      	; 0x334e <_Z19handleSerialBusMsgsv+0x20a>
    3348:	8e 85       	ldd	r24, Y+14	; 0x0e
    334a:	89 52       	subi	r24, 0x29	; 41
    334c:	8c 83       	std	Y+4, r24	; 0x04
    334e:	8c 81       	ldd	r24, Y+4	; 0x04
    3350:	87 30       	cpi	r24, 0x07	; 7
    3352:	48 f0       	brcs	.+18     	; 0x3366 <_Z19handleSerialBusMsgsv+0x222>
    3354:	8c 81       	ldd	r24, Y+4	; 0x04
    3356:	82 31       	cpi	r24, 0x12	; 18
    3358:	30 f4       	brcc	.+12     	; 0x3366 <_Z19handleSerialBusMsgsv+0x222>
    335a:	8c 81       	ldd	r24, Y+4	; 0x04
    335c:	88 2f       	mov	r24, r24
    335e:	90 e0       	ldi	r25, 0x00	; 0
    3360:	89 83       	std	Y+1, r24	; 0x01
    3362:	9a 83       	std	Y+2, r25	; 0x02
    3364:	0a c0       	rjmp	.+20     	; 0x337a <_Z19handleSerialBusMsgsv+0x236>
    3366:	19 82       	std	Y+1, r1	; 0x01
    3368:	1a 82       	std	Y+2, r1	; 0x02
    336a:	07 c0       	rjmp	.+14     	; 0x337a <_Z19handleSerialBusMsgsv+0x236>
    336c:	8e 81       	ldd	r24, Y+6	; 0x06
    336e:	9f 81       	ldd	r25, Y+7	; 0x07
    3370:	03 96       	adiw	r24, 0x03	; 3
    3372:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    3376:	89 83       	std	Y+1, r24	; 0x01
    3378:	9a 83       	std	Y+2, r25	; 0x02
    337a:	89 81       	ldd	r24, Y+1	; 0x01
    337c:	9a 81       	ldd	r25, Y+2	; 0x02
    337e:	99 23       	and	r25, r25
    3380:	c4 f0       	brlt	.+48     	; 0x33b2 <_Z19handleSerialBusMsgsv+0x26e>
    3382:	89 81       	ldd	r24, Y+1	; 0x01
    3384:	9a 81       	ldd	r25, Y+2	; 0x02
    3386:	42 97       	sbiw	r24, 0x12	; 18
    3388:	a4 f4       	brge	.+40     	; 0x33b2 <_Z19handleSerialBusMsgsv+0x26e>
    338a:	89 81       	ldd	r24, Y+1	; 0x01
    338c:	8a a7       	std	Y+42, r24	; 0x2a
    338e:	ce 01       	movw	r24, r28
    3390:	8a 96       	adiw	r24, 0x2a	; 42
    3392:	ac 01       	movw	r20, r24
    3394:	69 e2       	ldi	r22, 0x29	; 41
    3396:	8f e9       	ldi	r24, 0x9F	; 159
    3398:	97 e4       	ldi	r25, 0x47	; 71
    339a:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    339e:	9a a5       	ldd	r25, Y+42	; 0x2a
    33a0:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    33a4:	98 17       	cp	r25, r24
    33a6:	29 f0       	breq	.+10     	; 0x33b2 <_Z19handleSerialBusMsgsv+0x26e>
    33a8:	ce 01       	movw	r24, r28
    33aa:	8a 96       	adiw	r24, 0x2a	; 42
    33ac:	60 e0       	ldi	r22, 0x00	; 0
    33ae:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
    33b2:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    33b6:	68 2f       	mov	r22, r24
    33b8:	8d e0       	ldi	r24, 0x0D	; 13
    33ba:	97 e4       	ldi	r25, 0x47	; 71
    33bc:	0e 94 f4 71 	call	0xe3e8	; 0xe3e8 <_Z8fox2TextPc5Fox_t>
    33c0:	98 2f       	mov	r25, r24
    33c2:	81 e0       	ldi	r24, 0x01	; 1
    33c4:	89 27       	eor	r24, r25
    33c6:	88 23       	and	r24, r24
    33c8:	11 f1       	breq	.+68     	; 0x340e <_Z19handleSerialBusMsgsv+0x2ca>
    33ca:	ce 01       	movw	r24, r28
    33cc:	8b 96       	adiw	r24, 0x2b	; 43
    33ce:	6d e0       	ldi	r22, 0x0D	; 13
    33d0:	77 e4       	ldi	r23, 0x47	; 71
    33d2:	0e 94 a5 77 	call	0xef4a	; 0xef4a <strcpy>
    33d6:	ce 01       	movw	r24, r28
    33d8:	8b 96       	adiw	r24, 0x2b	; 43
    33da:	29 2f       	mov	r18, r25
    33dc:	2f 93       	push	r18
    33de:	8f 93       	push	r24
    33e0:	85 e5       	ldi	r24, 0x55	; 85
    33e2:	90 e4       	ldi	r25, 0x40	; 64
    33e4:	89 2f       	mov	r24, r25
    33e6:	8f 93       	push	r24
    33e8:	85 e5       	ldi	r24, 0x55	; 85
    33ea:	90 e4       	ldi	r25, 0x40	; 64
    33ec:	8f 93       	push	r24
    33ee:	8d e0       	ldi	r24, 0x0D	; 13
    33f0:	97 e4       	ldi	r25, 0x47	; 71
    33f2:	89 2f       	mov	r24, r25
    33f4:	8f 93       	push	r24
    33f6:	8d e0       	ldi	r24, 0x0D	; 13
    33f8:	97 e4       	ldi	r25, 0x47	; 71
    33fa:	8f 93       	push	r24
    33fc:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3400:	0f 90       	pop	r0
    3402:	0f 90       	pop	r0
    3404:	0f 90       	pop	r0
    3406:	0f 90       	pop	r0
    3408:	0f 90       	pop	r0
    340a:	0f 90       	pop	r0
    340c:	1d c0       	rjmp	.+58     	; 0x3448 <_Z19handleSerialBusMsgsv+0x304>
    340e:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    3412:	88 2f       	mov	r24, r24
    3414:	90 e0       	ldi	r25, 0x00	; 0
    3416:	29 2f       	mov	r18, r25
    3418:	2f 93       	push	r18
    341a:	8f 93       	push	r24
    341c:	8d e5       	ldi	r24, 0x5D	; 93
    341e:	90 e4       	ldi	r25, 0x40	; 64
    3420:	89 2f       	mov	r24, r25
    3422:	8f 93       	push	r24
    3424:	8d e5       	ldi	r24, 0x5D	; 93
    3426:	90 e4       	ldi	r25, 0x40	; 64
    3428:	8f 93       	push	r24
    342a:	8d e0       	ldi	r24, 0x0D	; 13
    342c:	97 e4       	ldi	r25, 0x47	; 71
    342e:	89 2f       	mov	r24, r25
    3430:	8f 93       	push	r24
    3432:	8d e0       	ldi	r24, 0x0D	; 13
    3434:	97 e4       	ldi	r25, 0x47	; 71
    3436:	8f 93       	push	r24
    3438:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    343c:	0f 90       	pop	r0
    343e:	0f 90       	pop	r0
    3440:	0f 90       	pop	r0
    3442:	0f 90       	pop	r0
    3444:	0f 90       	pop	r0
    3446:	0f 90       	pop	r0
    3448:	8d e0       	ldi	r24, 0x0D	; 13
    344a:	97 e4       	ldi	r25, 0x47	; 71
    344c:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3450:	d5 c5       	rjmp	.+2986   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3452:	8e 81       	ldd	r24, Y+6	; 0x06
    3454:	9f 81       	ldd	r25, Y+7	; 0x07
    3456:	fc 01       	movw	r30, r24
    3458:	83 81       	ldd	r24, Z+3	; 0x03
    345a:	88 23       	and	r24, r24
    345c:	e9 f1       	breq	.+122    	; 0x34d8 <_Z19handleSerialBusMsgsv+0x394>
    345e:	8e 81       	ldd	r24, Y+6	; 0x06
    3460:	9f 81       	ldd	r25, Y+7	; 0x07
    3462:	03 96       	adiw	r24, 0x03	; 3
    3464:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    3468:	80 93 b7 47 	sts	0x47B7, r24	; 0x8047b7 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    346c:	90 93 b8 47 	sts	0x47B8, r25	; 0x8047b8 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    3470:	80 91 b7 47 	lds	r24, 0x47B7	; 0x8047b7 <_ZZ19handleSerialBusMsgsvE6pwr_mW>
    3474:	90 91 b8 47 	lds	r25, 0x47B8	; 0x8047b8 <_ZZ19handleSerialBusMsgsvE6pwr_mW+0x1>
    3478:	89 38       	cpi	r24, 0x89	; 137
    347a:	93 41       	sbci	r25, 0x13	; 19
    347c:	68 f4       	brcc	.+26     	; 0x3498 <_Z19handleSerialBusMsgsv+0x354>
    347e:	60 e0       	ldi	r22, 0x00	; 0
    3480:	70 e0       	ldi	r23, 0x00	; 0
    3482:	87 eb       	ldi	r24, 0xB7	; 183
    3484:	97 e4       	ldi	r25, 0x47	; 71
    3486:	0e 94 88 6b 	call	0xd710	; 0xd710 <_Z15txSetParametersPjPb>
    348a:	88 8b       	std	Y+16, r24	; 0x10
    348c:	88 89       	ldd	r24, Y+16	; 0x10
    348e:	88 23       	and	r24, r24
    3490:	19 f0       	breq	.+6      	; 0x3498 <_Z19handleSerialBusMsgsv+0x354>
    3492:	88 89       	ldd	r24, Y+16	; 0x10
    3494:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    3498:	0e 94 7d 6b 	call	0xd6fa	; 0xd6fa <_Z12txGetPowerMwv>
    349c:	29 2f       	mov	r18, r25
    349e:	2f 93       	push	r18
    34a0:	8f 93       	push	r24
    34a2:	85 e6       	ldi	r24, 0x65	; 101
    34a4:	90 e4       	ldi	r25, 0x40	; 64
    34a6:	89 2f       	mov	r24, r25
    34a8:	8f 93       	push	r24
    34aa:	85 e6       	ldi	r24, 0x65	; 101
    34ac:	90 e4       	ldi	r25, 0x40	; 64
    34ae:	8f 93       	push	r24
    34b0:	8d e0       	ldi	r24, 0x0D	; 13
    34b2:	97 e4       	ldi	r25, 0x47	; 71
    34b4:	89 2f       	mov	r24, r25
    34b6:	8f 93       	push	r24
    34b8:	8d e0       	ldi	r24, 0x0D	; 13
    34ba:	97 e4       	ldi	r25, 0x47	; 71
    34bc:	8f 93       	push	r24
    34be:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    34c2:	0f 90       	pop	r0
    34c4:	0f 90       	pop	r0
    34c6:	0f 90       	pop	r0
    34c8:	0f 90       	pop	r0
    34ca:	0f 90       	pop	r0
    34cc:	0f 90       	pop	r0
    34ce:	8d e0       	ldi	r24, 0x0D	; 13
    34d0:	97 e4       	ldi	r25, 0x47	; 71
    34d2:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    34d6:	92 c5       	rjmp	.+2852   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    34d8:	0e 94 7d 6b 	call	0xd6fa	; 0xd6fa <_Z12txGetPowerMwv>
    34dc:	29 2f       	mov	r18, r25
    34de:	2f 93       	push	r18
    34e0:	8f 93       	push	r24
    34e2:	85 e6       	ldi	r24, 0x65	; 101
    34e4:	90 e4       	ldi	r25, 0x40	; 64
    34e6:	89 2f       	mov	r24, r25
    34e8:	8f 93       	push	r24
    34ea:	85 e6       	ldi	r24, 0x65	; 101
    34ec:	90 e4       	ldi	r25, 0x40	; 64
    34ee:	8f 93       	push	r24
    34f0:	8d e0       	ldi	r24, 0x0D	; 13
    34f2:	97 e4       	ldi	r25, 0x47	; 71
    34f4:	89 2f       	mov	r24, r25
    34f6:	8f 93       	push	r24
    34f8:	8d e0       	ldi	r24, 0x0D	; 13
    34fa:	97 e4       	ldi	r25, 0x47	; 71
    34fc:	8f 93       	push	r24
    34fe:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3502:	0f 90       	pop	r0
    3504:	0f 90       	pop	r0
    3506:	0f 90       	pop	r0
    3508:	0f 90       	pop	r0
    350a:	0f 90       	pop	r0
    350c:	0f 90       	pop	r0
    350e:	8d e0       	ldi	r24, 0x0D	; 13
    3510:	97 e4       	ldi	r25, 0x47	; 71
    3512:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3516:	72 c5       	rjmp	.+2788   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3518:	19 8a       	std	Y+17, r1	; 0x11
    351a:	1a 8a       	std	Y+18, r1	; 0x12
    351c:	1b 8a       	std	Y+19, r1	; 0x13
    351e:	1c 8a       	std	Y+20, r1	; 0x14
    3520:	8e 81       	ldd	r24, Y+6	; 0x06
    3522:	9f 81       	ldd	r25, Y+7	; 0x07
    3524:	fc 01       	movw	r30, r24
    3526:	83 81       	ldd	r24, Z+3	; 0x03
    3528:	88 23       	and	r24, r24
    352a:	49 f1       	breq	.+82     	; 0x357e <_Z19handleSerialBusMsgsv+0x43a>
    352c:	8e 81       	ldd	r24, Y+6	; 0x06
    352e:	9f 81       	ldd	r25, Y+7	; 0x07
    3530:	03 96       	adiw	r24, 0x03	; 3
    3532:	9e 01       	movw	r18, r28
    3534:	2c 5b       	subi	r18, 0xBC	; 188
    3536:	3f 4f       	sbci	r19, 0xFF	; 255
    3538:	b9 01       	movw	r22, r18
    353a:	0e 94 2f 70 	call	0xe05e	; 0xe05e <_Z12frequencyValPcPm>
    353e:	ce 01       	movw	r24, r28
    3540:	8c 5b       	subi	r24, 0xBC	; 188
    3542:	9f 4f       	sbci	r25, 0xFF	; 255
    3544:	61 e0       	ldi	r22, 0x01	; 1
    3546:	0e 94 e0 6a 	call	0xd5c0	; 0xd5c0 <_Z14txSetFrequencyPmb>
    354a:	98 2f       	mov	r25, r24
    354c:	81 e0       	ldi	r24, 0x01	; 1
    354e:	89 27       	eor	r24, r25
    3550:	88 23       	and	r24, r24
    3552:	89 f0       	breq	.+34     	; 0x3576 <_Z19handleSerialBusMsgsv+0x432>
    3554:	ce 01       	movw	r24, r28
    3556:	8c 5b       	subi	r24, 0xBC	; 188
    3558:	9f 4f       	sbci	r25, 0xFF	; 255
    355a:	fc 01       	movw	r30, r24
    355c:	80 81       	ld	r24, Z
    355e:	91 81       	ldd	r25, Z+1	; 0x01
    3560:	a2 81       	ldd	r26, Z+2	; 0x02
    3562:	b3 81       	ldd	r27, Z+3	; 0x03
    3564:	89 8b       	std	Y+17, r24	; 0x11
    3566:	9a 8b       	std	Y+18, r25	; 0x12
    3568:	ab 8b       	std	Y+19, r26	; 0x13
    356a:	bc 8b       	std	Y+20, r27	; 0x14
    356c:	8f e9       	ldi	r24, 0x9F	; 159
    356e:	97 e4       	ldi	r25, 0x47	; 71
    3570:	0e 94 4a 45 	call	0x8a94	; 0x8a94 <_ZN13EepromManager13saveAllEEPROMEv>
    3574:	04 c0       	rjmp	.+8      	; 0x357e <_Z19handleSerialBusMsgsv+0x43a>
    3576:	80 e7       	ldi	r24, 0x70	; 112
    3578:	90 e4       	ldi	r25, 0x40	; 64
    357a:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    357e:	0e 94 2a 6b 	call	0xd654	; 0xd654 <_Z14txGetFrequencyv>
    3582:	dc 01       	movw	r26, r24
    3584:	cb 01       	movw	r24, r22
    3586:	89 8b       	std	Y+17, r24	; 0x11
    3588:	9a 8b       	std	Y+18, r25	; 0x12
    358a:	ab 8b       	std	Y+19, r26	; 0x13
    358c:	bc 8b       	std	Y+20, r27	; 0x14
    358e:	89 89       	ldd	r24, Y+17	; 0x11
    3590:	9a 89       	ldd	r25, Y+18	; 0x12
    3592:	ab 89       	ldd	r26, Y+19	; 0x13
    3594:	bc 89       	ldd	r27, Y+20	; 0x14
    3596:	89 2b       	or	r24, r25
    3598:	8a 2b       	or	r24, r26
    359a:	8b 2b       	or	r24, r27
    359c:	09 f4       	brne	.+2      	; 0x35a0 <_Z19handleSerialBusMsgsv+0x45c>
    359e:	29 c5       	rjmp	.+2642   	; 0x3ff2 <_Z19handleSerialBusMsgsv+0xeae>
    35a0:	89 89       	ldd	r24, Y+17	; 0x11
    35a2:	9a 89       	ldd	r25, Y+18	; 0x12
    35a4:	ab 89       	ldd	r26, Y+19	; 0x13
    35a6:	bc 89       	ldd	r27, Y+20	; 0x14
    35a8:	9e 01       	movw	r18, r28
    35aa:	28 5b       	subi	r18, 0xB8	; 184
    35ac:	3f 4f       	sbci	r19, 0xFF	; 255
    35ae:	ac 01       	movw	r20, r24
    35b0:	bd 01       	movw	r22, r26
    35b2:	c9 01       	movw	r24, r18
    35b4:	0e 94 b3 6f 	call	0xdf66	; 0xdf66 <_Z15frequencyStringPcm>
    35b8:	98 2f       	mov	r25, r24
    35ba:	81 e0       	ldi	r24, 0x01	; 1
    35bc:	89 27       	eor	r24, r25
    35be:	88 23       	and	r24, r24
    35c0:	e9 f0       	breq	.+58     	; 0x35fc <_Z19handleSerialBusMsgsv+0x4b8>
    35c2:	ce 01       	movw	r24, r28
    35c4:	88 5b       	subi	r24, 0xB8	; 184
    35c6:	9f 4f       	sbci	r25, 0xFF	; 255
    35c8:	29 2f       	mov	r18, r25
    35ca:	2f 93       	push	r18
    35cc:	8f 93       	push	r24
    35ce:	8b e9       	ldi	r24, 0x9B	; 155
    35d0:	90 e4       	ldi	r25, 0x40	; 64
    35d2:	89 2f       	mov	r24, r25
    35d4:	8f 93       	push	r24
    35d6:	8b e9       	ldi	r24, 0x9B	; 155
    35d8:	90 e4       	ldi	r25, 0x40	; 64
    35da:	8f 93       	push	r24
    35dc:	8d e0       	ldi	r24, 0x0D	; 13
    35de:	97 e4       	ldi	r25, 0x47	; 71
    35e0:	89 2f       	mov	r24, r25
    35e2:	8f 93       	push	r24
    35e4:	8d e0       	ldi	r24, 0x0D	; 13
    35e6:	97 e4       	ldi	r25, 0x47	; 71
    35e8:	8f 93       	push	r24
    35ea:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    35ee:	0f 90       	pop	r0
    35f0:	0f 90       	pop	r0
    35f2:	0f 90       	pop	r0
    35f4:	0f 90       	pop	r0
    35f6:	0f 90       	pop	r0
    35f8:	0f 90       	pop	r0
    35fa:	1d c0       	rjmp	.+58     	; 0x3636 <_Z19handleSerialBusMsgsv+0x4f2>
    35fc:	8c 89       	ldd	r24, Y+20	; 0x14
    35fe:	8f 93       	push	r24
    3600:	8b 89       	ldd	r24, Y+19	; 0x13
    3602:	8f 93       	push	r24
    3604:	8a 89       	ldd	r24, Y+18	; 0x12
    3606:	8f 93       	push	r24
    3608:	89 89       	ldd	r24, Y+17	; 0x11
    360a:	8f 93       	push	r24
    360c:	83 ea       	ldi	r24, 0xA3	; 163
    360e:	90 e4       	ldi	r25, 0x40	; 64
    3610:	89 2f       	mov	r24, r25
    3612:	8f 93       	push	r24
    3614:	83 ea       	ldi	r24, 0xA3	; 163
    3616:	90 e4       	ldi	r25, 0x40	; 64
    3618:	8f 93       	push	r24
    361a:	8d e0       	ldi	r24, 0x0D	; 13
    361c:	97 e4       	ldi	r25, 0x47	; 71
    361e:	89 2f       	mov	r24, r25
    3620:	8f 93       	push	r24
    3622:	8d e0       	ldi	r24, 0x0D	; 13
    3624:	97 e4       	ldi	r25, 0x47	; 71
    3626:	8f 93       	push	r24
    3628:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    362c:	8d b7       	in	r24, 0x3d	; 61
    362e:	9e b7       	in	r25, 0x3e	; 62
    3630:	08 96       	adiw	r24, 0x08	; 8
    3632:	cd bf       	out	0x3d, r28	; 61
    3634:	de bf       	out	0x3e, r29	; 62
    3636:	8d e0       	ldi	r24, 0x0D	; 13
    3638:	97 e4       	ldi	r25, 0x47	; 71
    363a:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    363e:	d9 c4       	rjmp	.+2482   	; 0x3ff2 <_Z19handleSerialBusMsgsv+0xeae>
    3640:	8e 81       	ldd	r24, Y+6	; 0x06
    3642:	9f 81       	ldd	r25, Y+7	; 0x07
    3644:	fc 01       	movw	r30, r24
    3646:	83 81       	ldd	r24, Z+3	; 0x03
    3648:	88 23       	and	r24, r24
    364a:	81 f1       	breq	.+96     	; 0x36ac <_Z19handleSerialBusMsgsv+0x568>
    364c:	8e 81       	ldd	r24, Y+6	; 0x06
    364e:	9f 81       	ldd	r25, Y+7	; 0x07
    3650:	fc 01       	movw	r30, r24
    3652:	83 81       	ldd	r24, Z+3	; 0x03
    3654:	80 33       	cpi	r24, 0x30	; 48
    3656:	21 f4       	brne	.+8      	; 0x3660 <_Z19handleSerialBusMsgsv+0x51c>
    3658:	82 e0       	ldi	r24, 0x02	; 2
    365a:	0e 94 bf 2a 	call	0x557e	; 0x557e <_Z12stopEventNow19EventActionSource_t>
    365e:	ce c4       	rjmp	.+2460   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3660:	8e 81       	ldd	r24, Y+6	; 0x06
    3662:	9f 81       	ldd	r25, Y+7	; 0x07
    3664:	fc 01       	movw	r30, r24
    3666:	83 81       	ldd	r24, Z+3	; 0x03
    3668:	81 33       	cpi	r24, 0x31	; 49
    366a:	21 f4       	brne	.+8      	; 0x3674 <_Z19handleSerialBusMsgsv+0x530>
    366c:	82 e0       	ldi	r24, 0x02	; 2
    366e:	0e 94 5d 2a 	call	0x54ba	; 0x54ba <_Z13startEventNow19EventActionSource_t>
    3672:	c4 c4       	rjmp	.+2440   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3674:	8e 81       	ldd	r24, Y+6	; 0x06
    3676:	9f 81       	ldd	r25, Y+7	; 0x07
    3678:	fc 01       	movw	r30, r24
    367a:	83 81       	ldd	r24, Z+3	; 0x03
    367c:	82 33       	cpi	r24, 0x32	; 50
    367e:	29 f4       	brne	.+10     	; 0x368a <_Z19handleSerialBusMsgsv+0x546>
    3680:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>
    3684:	0e 94 ed 2a 	call	0x55da	; 0x55da <_Z18startEventUsingRTCv>
    3688:	b9 c4       	rjmp	.+2418   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    368a:	8e 81       	ldd	r24, Y+6	; 0x06
    368c:	9f 81       	ldd	r25, Y+7	; 0x07
    368e:	fc 01       	movw	r30, r24
    3690:	83 81       	ldd	r24, Z+3	; 0x03
    3692:	83 33       	cpi	r24, 0x33	; 51
    3694:	31 f4       	brne	.+12     	; 0x36a2 <_Z19handleSerialBusMsgsv+0x55e>
    3696:	62 e0       	ldi	r22, 0x02	; 2
    3698:	80 e0       	ldi	r24, 0x00	; 0
    369a:	90 e0       	ldi	r25, 0x00	; 0
    369c:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
    36a0:	ad c4       	rjmp	.+2394   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    36a2:	8c ea       	ldi	r24, 0xAC	; 172
    36a4:	90 e4       	ldi	r25, 0x40	; 64
    36a6:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    36aa:	a8 c4       	rjmp	.+2384   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    36ac:	8c ea       	ldi	r24, 0xAC	; 172
    36ae:	90 e4       	ldi	r25, 0x40	; 64
    36b0:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    36b4:	a3 c4       	rjmp	.+2374   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    36b6:	8e 81       	ldd	r24, Y+6	; 0x06
    36b8:	9f 81       	ldd	r25, Y+7	; 0x07
    36ba:	fc 01       	movw	r30, r24
    36bc:	83 81       	ldd	r24, Z+3	; 0x03
    36be:	88 23       	and	r24, r24
    36c0:	09 f4       	brne	.+2      	; 0x36c4 <_Z19handleSerialBusMsgsv+0x580>
    36c2:	41 c0       	rjmp	.+130    	; 0x3746 <_Z19handleSerialBusMsgsv+0x602>
    36c4:	80 e2       	ldi	r24, 0x20	; 32
    36c6:	90 e0       	ldi	r25, 0x00	; 0
    36c8:	80 93 0d 47 	sts	0x470D, r24	; 0x80470d <_ZL9g_tempStr>
    36cc:	90 93 0e 47 	sts	0x470E, r25	; 0x80470e <_ZL9g_tempStr+0x1>
    36d0:	8e 81       	ldd	r24, Y+6	; 0x06
    36d2:	9f 81       	ldd	r25, Y+7	; 0x07
    36d4:	03 96       	adiw	r24, 0x03	; 3
    36d6:	bc 01       	movw	r22, r24
    36d8:	8d e0       	ldi	r24, 0x0D	; 13
    36da:	97 e4       	ldi	r25, 0x47	; 71
    36dc:	0e 94 8f 77 	call	0xef1e	; 0xef1e <strcat>
    36e0:	8e 81       	ldd	r24, Y+6	; 0x06
    36e2:	9f 81       	ldd	r25, Y+7	; 0x07
    36e4:	fc 01       	movw	r30, r24
    36e6:	87 89       	ldd	r24, Z+23	; 0x17
    36e8:	88 23       	and	r24, r24
    36ea:	d1 f0       	breq	.+52     	; 0x3720 <_Z19handleSerialBusMsgsv+0x5dc>
    36ec:	8d e0       	ldi	r24, 0x0D	; 13
    36ee:	97 e4       	ldi	r25, 0x47	; 71
    36f0:	9c 01       	movw	r18, r24
    36f2:	f9 01       	movw	r30, r18
    36f4:	01 90       	ld	r0, Z+
    36f6:	00 20       	and	r0, r0
    36f8:	e9 f7       	brne	.-6      	; 0x36f4 <_Z19handleSerialBusMsgsv+0x5b0>
    36fa:	cf 01       	movw	r24, r30
    36fc:	01 97       	sbiw	r24, 0x01	; 1
    36fe:	82 1b       	sub	r24, r18
    3700:	93 0b       	sbc	r25, r19
    3702:	83 5f       	subi	r24, 0xF3	; 243
    3704:	98 4b       	sbci	r25, 0xB8	; 184
    3706:	20 e2       	ldi	r18, 0x20	; 32
    3708:	30 e0       	ldi	r19, 0x00	; 0
    370a:	fc 01       	movw	r30, r24
    370c:	20 83       	st	Z, r18
    370e:	31 83       	std	Z+1, r19	; 0x01
    3710:	8e 81       	ldd	r24, Y+6	; 0x06
    3712:	9f 81       	ldd	r25, Y+7	; 0x07
    3714:	47 96       	adiw	r24, 0x17	; 23
    3716:	bc 01       	movw	r22, r24
    3718:	8d e0       	ldi	r24, 0x0D	; 13
    371a:	97 e4       	ldi	r25, 0x47	; 71
    371c:	0e 94 8f 77 	call	0xef1e	; 0xef1e <strcat>
    3720:	8d e0       	ldi	r24, 0x0D	; 13
    3722:	97 e4       	ldi	r25, 0x47	; 71
    3724:	0e 94 ac 77 	call	0xef58	; 0xef58 <strlen>
    3728:	45 97       	sbiw	r24, 0x15	; 21
    372a:	68 f4       	brcc	.+26     	; 0x3746 <_Z19handleSerialBusMsgsv+0x602>
    372c:	6d e0       	ldi	r22, 0x0D	; 13
    372e:	77 e4       	ldi	r23, 0x47	; 71
    3730:	87 e6       	ldi	r24, 0x67	; 103
    3732:	97 e4       	ldi	r25, 0x47	; 71
    3734:	0e 94 a5 77 	call	0xef4a	; 0xef4a <strcpy>
    3738:	4d e0       	ldi	r20, 0x0D	; 13
    373a:	57 e4       	ldi	r21, 0x47	; 71
    373c:	6a e0       	ldi	r22, 0x0A	; 10
    373e:	8f e9       	ldi	r24, 0x9F	; 159
    3740:	97 e4       	ldi	r25, 0x47	; 71
    3742:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3746:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    374a:	88 23       	and	r24, r24
    374c:	01 f1       	breq	.+64     	; 0x378e <_Z19handleSerialBusMsgsv+0x64a>
    374e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3752:	88 2f       	mov	r24, r24
    3754:	90 e0       	ldi	r25, 0x00	; 0
    3756:	bc 01       	movw	r22, r24
    3758:	87 e6       	ldi	r24, 0x67	; 103
    375a:	97 e4       	ldi	r25, 0x47	; 71
    375c:	0e 94 f4 57 	call	0xafe8	; 0xafe8 <_Z26timeRequiredToSendStrAtWPMPcj>
    3760:	88 5a       	subi	r24, 0xA8	; 168
    3762:	9d 4f       	sbci	r25, 0xFD	; 253
    3764:	96 95       	lsr	r25
    3766:	87 95       	ror	r24
    3768:	96 95       	lsr	r25
    376a:	87 95       	ror	r24
    376c:	96 95       	lsr	r25
    376e:	87 95       	ror	r24
    3770:	9c 01       	movw	r18, r24
    3772:	a5 ec       	ldi	r26, 0xC5	; 197
    3774:	b0 e2       	ldi	r27, 0x20	; 32
    3776:	0e 94 fc 75 	call	0xebf8	; 0xebf8 <__umulhisi3>
    377a:	92 95       	swap	r25
    377c:	82 95       	swap	r24
    377e:	8f 70       	andi	r24, 0x0F	; 15
    3780:	89 27       	eor	r24, r25
    3782:	9f 70       	andi	r25, 0x0F	; 15
    3784:	89 27       	eor	r24, r25
    3786:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <g_time_needed_for_ID>
    378a:	90 93 7d 47 	sts	0x477D, r25	; 0x80477d <g_time_needed_for_ID+0x1>
    378e:	87 e6       	ldi	r24, 0x67	; 103
    3790:	97 e4       	ldi	r25, 0x47	; 71
    3792:	89 2f       	mov	r24, r25
    3794:	8f 93       	push	r24
    3796:	87 e6       	ldi	r24, 0x67	; 103
    3798:	97 e4       	ldi	r25, 0x47	; 71
    379a:	8f 93       	push	r24
    379c:	81 eb       	ldi	r24, 0xB1	; 177
    379e:	90 e4       	ldi	r25, 0x40	; 64
    37a0:	89 2f       	mov	r24, r25
    37a2:	8f 93       	push	r24
    37a4:	81 eb       	ldi	r24, 0xB1	; 177
    37a6:	90 e4       	ldi	r25, 0x40	; 64
    37a8:	8f 93       	push	r24
    37aa:	8d e0       	ldi	r24, 0x0D	; 13
    37ac:	97 e4       	ldi	r25, 0x47	; 71
    37ae:	89 2f       	mov	r24, r25
    37b0:	8f 93       	push	r24
    37b2:	8d e0       	ldi	r24, 0x0D	; 13
    37b4:	97 e4       	ldi	r25, 0x47	; 71
    37b6:	8f 93       	push	r24
    37b8:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    37bc:	0f 90       	pop	r0
    37be:	0f 90       	pop	r0
    37c0:	0f 90       	pop	r0
    37c2:	0f 90       	pop	r0
    37c4:	0f 90       	pop	r0
    37c6:	0f 90       	pop	r0
    37c8:	8d e0       	ldi	r24, 0x0D	; 13
    37ca:	97 e4       	ldi	r25, 0x47	; 71
    37cc:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    37d0:	15 c4       	rjmp	.+2090   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    37d2:	8e 81       	ldd	r24, Y+6	; 0x06
    37d4:	9f 81       	ldd	r25, Y+7	; 0x07
    37d6:	fc 01       	movw	r30, r24
    37d8:	83 81       	ldd	r24, Z+3	; 0x03
    37da:	83 35       	cpi	r24, 0x53	; 83
    37dc:	09 f0       	breq	.+2      	; 0x37e0 <_Z19handleSerialBusMsgsv+0x69c>
    37de:	6f c0       	rjmp	.+222    	; 0x38be <_Z19handleSerialBusMsgsv+0x77a>
    37e0:	8e 81       	ldd	r24, Y+6	; 0x06
    37e2:	9f 81       	ldd	r25, Y+7	; 0x07
    37e4:	fc 01       	movw	r30, r24
    37e6:	87 89       	ldd	r24, Z+23	; 0x17
    37e8:	8d 8b       	std	Y+21, r24	; 0x15
    37ea:	8d 89       	ldd	r24, Y+21	; 0x15
    37ec:	88 23       	and	r24, r24
    37ee:	09 f4       	brne	.+2      	; 0x37f2 <_Z19handleSerialBusMsgsv+0x6ae>
    37f0:	48 c0       	rjmp	.+144    	; 0x3882 <_Z19handleSerialBusMsgsv+0x73e>
    37f2:	8e 81       	ldd	r24, Y+6	; 0x06
    37f4:	9f 81       	ldd	r25, Y+7	; 0x07
    37f6:	47 96       	adiw	r24, 0x17	; 23
    37f8:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    37fc:	dc 01       	movw	r26, r24
    37fe:	cb 01       	movw	r24, r22
    3800:	8e 8b       	std	Y+22, r24	; 0x16
    3802:	8e 89       	ldd	r24, Y+22	; 0x16
    3804:	8f 8b       	std	Y+23, r24	; 0x17
    3806:	85 e0       	ldi	r24, 0x05	; 5
    3808:	88 8f       	std	Y+24, r24	; 0x18
    380a:	84 e1       	ldi	r24, 0x14	; 20
    380c:	89 8f       	std	Y+25, r24	; 0x19
    380e:	9f 89       	ldd	r25, Y+23	; 0x17
    3810:	89 8d       	ldd	r24, Y+25	; 0x19
    3812:	89 17       	cp	r24, r25
    3814:	40 f0       	brcs	.+16     	; 0x3826 <_Z19handleSerialBusMsgsv+0x6e2>
    3816:	9f 89       	ldd	r25, Y+23	; 0x17
    3818:	88 8d       	ldd	r24, Y+24	; 0x18
    381a:	98 17       	cp	r25, r24
    381c:	10 f4       	brcc	.+4      	; 0x3822 <_Z19handleSerialBusMsgsv+0x6de>
    381e:	88 8d       	ldd	r24, Y+24	; 0x18
    3820:	03 c0       	rjmp	.+6      	; 0x3828 <_Z19handleSerialBusMsgsv+0x6e4>
    3822:	8f 89       	ldd	r24, Y+23	; 0x17
    3824:	01 c0       	rjmp	.+2      	; 0x3828 <_Z19handleSerialBusMsgsv+0x6e4>
    3826:	89 8d       	ldd	r24, Y+25	; 0x19
    3828:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    382c:	4b e0       	ldi	r20, 0x0B	; 11
    382e:	50 e4       	ldi	r21, 0x40	; 64
    3830:	68 e2       	ldi	r22, 0x28	; 40
    3832:	8f e9       	ldi	r24, 0x9F	; 159
    3834:	97 e4       	ldi	r25, 0x47	; 71
    3836:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    383a:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    383e:	88 23       	and	r24, r24
    3840:	01 f1       	breq	.+64     	; 0x3882 <_Z19handleSerialBusMsgsv+0x73e>
    3842:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3846:	88 2f       	mov	r24, r24
    3848:	90 e0       	ldi	r25, 0x00	; 0
    384a:	bc 01       	movw	r22, r24
    384c:	87 e6       	ldi	r24, 0x67	; 103
    384e:	97 e4       	ldi	r25, 0x47	; 71
    3850:	0e 94 f4 57 	call	0xafe8	; 0xafe8 <_Z26timeRequiredToSendStrAtWPMPcj>
    3854:	88 5a       	subi	r24, 0xA8	; 168
    3856:	9d 4f       	sbci	r25, 0xFD	; 253
    3858:	96 95       	lsr	r25
    385a:	87 95       	ror	r24
    385c:	96 95       	lsr	r25
    385e:	87 95       	ror	r24
    3860:	96 95       	lsr	r25
    3862:	87 95       	ror	r24
    3864:	9c 01       	movw	r18, r24
    3866:	a5 ec       	ldi	r26, 0xC5	; 197
    3868:	b0 e2       	ldi	r27, 0x20	; 32
    386a:	0e 94 fc 75 	call	0xebf8	; 0xebf8 <__umulhisi3>
    386e:	92 95       	swap	r25
    3870:	82 95       	swap	r24
    3872:	8f 70       	andi	r24, 0x0F	; 15
    3874:	89 27       	eor	r24, r25
    3876:	9f 70       	andi	r25, 0x0F	; 15
    3878:	89 27       	eor	r24, r25
    387a:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <g_time_needed_for_ID>
    387e:	90 93 7d 47 	sts	0x477D, r25	; 0x80477d <g_time_needed_for_ID+0x1>
    3882:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    3886:	88 2f       	mov	r24, r24
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	29 2f       	mov	r18, r25
    388c:	2f 93       	push	r18
    388e:	8f 93       	push	r24
    3890:	88 eb       	ldi	r24, 0xB8	; 184
    3892:	90 e4       	ldi	r25, 0x40	; 64
    3894:	89 2f       	mov	r24, r25
    3896:	8f 93       	push	r24
    3898:	88 eb       	ldi	r24, 0xB8	; 184
    389a:	90 e4       	ldi	r25, 0x40	; 64
    389c:	8f 93       	push	r24
    389e:	8d e0       	ldi	r24, 0x0D	; 13
    38a0:	97 e4       	ldi	r25, 0x47	; 71
    38a2:	89 2f       	mov	r24, r25
    38a4:	8f 93       	push	r24
    38a6:	8d e0       	ldi	r24, 0x0D	; 13
    38a8:	97 e4       	ldi	r25, 0x47	; 71
    38aa:	8f 93       	push	r24
    38ac:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    38b0:	0f 90       	pop	r0
    38b2:	0f 90       	pop	r0
    38b4:	0f 90       	pop	r0
    38b6:	0f 90       	pop	r0
    38b8:	0f 90       	pop	r0
    38ba:	0f 90       	pop	r0
    38bc:	09 c0       	rjmp	.+18     	; 0x38d0 <_Z19handleSerialBusMsgsv+0x78c>
    38be:	85 e0       	ldi	r24, 0x05	; 5
    38c0:	ec ea       	ldi	r30, 0xAC	; 172
    38c2:	f0 e4       	ldi	r31, 0x40	; 64
    38c4:	ad e0       	ldi	r26, 0x0D	; 13
    38c6:	b7 e4       	ldi	r27, 0x47	; 71
    38c8:	01 90       	ld	r0, Z+
    38ca:	0d 92       	st	X+, r0
    38cc:	8a 95       	dec	r24
    38ce:	e1 f7       	brne	.-8      	; 0x38c8 <_Z19handleSerialBusMsgsv+0x784>
    38d0:	8d e0       	ldi	r24, 0x0D	; 13
    38d2:	97 e4       	ldi	r25, 0x47	; 71
    38d4:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    38d8:	91 c3       	rjmp	.+1826   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    38da:	8e 81       	ldd	r24, Y+6	; 0x06
    38dc:	9f 81       	ldd	r25, Y+7	; 0x07
    38de:	fc 01       	movw	r30, r24
    38e0:	83 81       	ldd	r24, Z+3	; 0x03
    38e2:	88 23       	and	r24, r24
    38e4:	51 f1       	breq	.+84     	; 0x393a <_Z19handleSerialBusMsgsv+0x7f6>
    38e6:	8e 81       	ldd	r24, Y+6	; 0x06
    38e8:	9f 81       	ldd	r25, Y+7	; 0x07
    38ea:	03 96       	adiw	r24, 0x03	; 3
    38ec:	48 e0       	ldi	r20, 0x08	; 8
    38ee:	50 e0       	ldi	r21, 0x00	; 0
    38f0:	bc 01       	movw	r22, r24
    38f2:	8d e0       	ldi	r24, 0x0D	; 13
    38f4:	97 e4       	ldi	r25, 0x47	; 71
    38f6:	0e 94 b5 77 	call	0xef6a	; 0xef6a <strncpy>
    38fa:	10 92 15 47 	sts	0x4715, r1	; 0x804715 <_ZL9g_tempStr+0x8>
    38fe:	8d e0       	ldi	r24, 0x0D	; 13
    3900:	97 e4       	ldi	r25, 0x47	; 71
    3902:	0e 94 8c 6f 	call	0xdf18	; 0xdf18 <_Z11only_digitsPc>
    3906:	88 23       	and	r24, r24
    3908:	41 f0       	breq	.+16     	; 0x391a <_Z19handleSerialBusMsgsv+0x7d6>
    390a:	8d e0       	ldi	r24, 0x0D	; 13
    390c:	97 e4       	ldi	r25, 0x47	; 71
    390e:	0e 94 ac 77 	call	0xef58	; 0xef58 <strlen>
    3912:	04 97       	sbiw	r24, 0x04	; 4
    3914:	10 f0       	brcs	.+4      	; 0x391a <_Z19handleSerialBusMsgsv+0x7d6>
    3916:	81 e0       	ldi	r24, 0x01	; 1
    3918:	01 c0       	rjmp	.+2      	; 0x391c <_Z19handleSerialBusMsgsv+0x7d8>
    391a:	80 e0       	ldi	r24, 0x00	; 0
    391c:	88 23       	and	r24, r24
    391e:	69 f0       	breq	.+26     	; 0x393a <_Z19handleSerialBusMsgsv+0x7f6>
    3920:	6d e0       	ldi	r22, 0x0D	; 13
    3922:	77 e4       	ldi	r23, 0x47	; 71
    3924:	81 ea       	ldi	r24, 0xA1	; 161
    3926:	97 e4       	ldi	r25, 0x47	; 71
    3928:	0e 94 a5 77 	call	0xef4a	; 0xef4a <strcpy>
    392c:	41 ea       	ldi	r20, 0xA1	; 161
    392e:	57 e4       	ldi	r21, 0x47	; 71
    3930:	6f e1       	ldi	r22, 0x1F	; 31
    3932:	8f e9       	ldi	r24, 0x9F	; 159
    3934:	97 e4       	ldi	r25, 0x47	; 71
    3936:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    393a:	81 ea       	ldi	r24, 0xA1	; 161
    393c:	97 e4       	ldi	r25, 0x47	; 71
    393e:	89 2f       	mov	r24, r25
    3940:	8f 93       	push	r24
    3942:	81 ea       	ldi	r24, 0xA1	; 161
    3944:	97 e4       	ldi	r25, 0x47	; 71
    3946:	8f 93       	push	r24
    3948:	8a ec       	ldi	r24, 0xCA	; 202
    394a:	90 e4       	ldi	r25, 0x40	; 64
    394c:	89 2f       	mov	r24, r25
    394e:	8f 93       	push	r24
    3950:	8a ec       	ldi	r24, 0xCA	; 202
    3952:	90 e4       	ldi	r25, 0x40	; 64
    3954:	8f 93       	push	r24
    3956:	8d e0       	ldi	r24, 0x0D	; 13
    3958:	97 e4       	ldi	r25, 0x47	; 71
    395a:	89 2f       	mov	r24, r25
    395c:	8f 93       	push	r24
    395e:	8d e0       	ldi	r24, 0x0D	; 13
    3960:	97 e4       	ldi	r25, 0x47	; 71
    3962:	8f 93       	push	r24
    3964:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3968:	0f 90       	pop	r0
    396a:	0f 90       	pop	r0
    396c:	0f 90       	pop	r0
    396e:	0f 90       	pop	r0
    3970:	0f 90       	pop	r0
    3972:	0f 90       	pop	r0
    3974:	8d e0       	ldi	r24, 0x0D	; 13
    3976:	97 e4       	ldi	r25, 0x47	; 71
    3978:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    397c:	3f c3       	rjmp	.+1662   	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    397e:	1d 82       	std	Y+5, r1	; 0x05
    3980:	8e 81       	ldd	r24, Y+6	; 0x06
    3982:	9f 81       	ldd	r25, Y+7	; 0x07
    3984:	fc 01       	movw	r30, r24
    3986:	83 81       	ldd	r24, Z+3	; 0x03
    3988:	88 23       	and	r24, r24
    398a:	39 f0       	breq	.+14     	; 0x399a <_Z19handleSerialBusMsgsv+0x856>
    398c:	8e 81       	ldd	r24, Y+6	; 0x06
    398e:	9f 81       	ldd	r25, Y+7	; 0x07
    3990:	fc 01       	movw	r30, r24
    3992:	83 81       	ldd	r24, Z+3	; 0x03
    3994:	84 35       	cpi	r24, 0x54	; 84
    3996:	09 f0       	breq	.+2      	; 0x399a <_Z19handleSerialBusMsgsv+0x856>
    3998:	9b c1       	rjmp	.+822    	; 0x3cd0 <_Z19handleSerialBusMsgsv+0xb8c>
    399a:	8e 81       	ldd	r24, Y+6	; 0x06
    399c:	9f 81       	ldd	r25, Y+7	; 0x07
    399e:	fc 01       	movw	r30, r24
    39a0:	87 89       	ldd	r24, Z+23	; 0x17
    39a2:	88 23       	and	r24, r24
    39a4:	09 f4       	brne	.+2      	; 0x39a8 <_Z19handleSerialBusMsgsv+0x864>
    39a6:	76 c0       	rjmp	.+236    	; 0x3a94 <_Z19handleSerialBusMsgsv+0x950>
    39a8:	8e 81       	ldd	r24, Y+6	; 0x06
    39aa:	9f 81       	ldd	r25, Y+7	; 0x07
    39ac:	47 96       	adiw	r24, 0x17	; 23
    39ae:	4c e0       	ldi	r20, 0x0C	; 12
    39b0:	50 e0       	ldi	r21, 0x00	; 0
    39b2:	bc 01       	movw	r22, r24
    39b4:	8d e0       	ldi	r24, 0x0D	; 13
    39b6:	97 e4       	ldi	r25, 0x47	; 71
    39b8:	0e 94 b5 77 	call	0xef6a	; 0xef6a <strncpy>
    39bc:	10 92 19 47 	sts	0x4719, r1	; 0x804719 <_ZL9g_tempStr+0xc>
    39c0:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <g_utc_offset>
    39c4:	81 95       	neg	r24
    39c6:	48 2f       	mov	r20, r24
    39c8:	69 ea       	ldi	r22, 0xA9	; 169
    39ca:	77 e4       	ldi	r23, 0x47	; 71
    39cc:	8d e0       	ldi	r24, 0x0D	; 13
    39ce:	97 e4       	ldi	r25, 0x47	; 71
    39d0:	0e 94 67 2e 	call	0x5cce	; 0x5cce <_Z18validateTimeStringPcPma>
    39d4:	dc 01       	movw	r26, r24
    39d6:	cb 01       	movw	r24, r22
    39d8:	8a a3       	std	Y+34, r24	; 0x22
    39da:	9b a3       	std	Y+35, r25	; 0x23
    39dc:	ac a3       	std	Y+36, r26	; 0x24
    39de:	bd a3       	std	Y+37, r27	; 0x25
    39e0:	8a a1       	ldd	r24, Y+34	; 0x22
    39e2:	9b a1       	ldd	r25, Y+35	; 0x23
    39e4:	ac a1       	ldd	r26, Y+36	; 0x24
    39e6:	bd a1       	ldd	r27, Y+37	; 0x25
    39e8:	89 2b       	or	r24, r25
    39ea:	8a 2b       	or	r24, r26
    39ec:	8b 2b       	or	r24, r27
    39ee:	09 f4       	brne	.+2      	; 0x39f2 <_Z19handleSerialBusMsgsv+0x8ae>
    39f0:	6c c1       	rjmp	.+728    	; 0x3cca <_Z19handleSerialBusMsgsv+0xb86>
    39f2:	60 e0       	ldi	r22, 0x00	; 0
    39f4:	8d e0       	ldi	r24, 0x0D	; 13
    39f6:	97 e4       	ldi	r25, 0x47	; 71
    39f8:	0e 94 23 40 	call	0x8046	; 0x8046 <ds3231_set_date_time_arducon>
    39fc:	8e a3       	std	Y+38, r24	; 0x26
    39fe:	8e a1       	ldd	r24, Y+38	; 0x26
    3a00:	88 23       	and	r24, r24
    3a02:	51 f0       	breq	.+20     	; 0x3a18 <_Z19handleSerialBusMsgsv+0x8d4>
    3a04:	88 e2       	ldi	r24, 0x28	; 40
    3a06:	e2 ed       	ldi	r30, 0xD2	; 210
    3a08:	f0 e4       	ldi	r31, 0x40	; 64
    3a0a:	ad e0       	ldi	r26, 0x0D	; 13
    3a0c:	b7 e4       	ldi	r27, 0x47	; 71
    3a0e:	01 90       	ld	r0, Z+
    3a10:	0d 92       	st	X+, r0
    3a12:	8a 95       	dec	r24
    3a14:	e1 f7       	brne	.-8      	; 0x3a0e <_Z19handleSerialBusMsgsv+0x8ca>
    3a16:	59 c1       	rjmp	.+690    	; 0x3cca <_Z19handleSerialBusMsgsv+0xb86>
    3a18:	80 e0       	ldi	r24, 0x00	; 0
    3a1a:	90 e0       	ldi	r25, 0x00	; 0
    3a1c:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    3a20:	dc 01       	movw	r26, r24
    3a22:	cb 01       	movw	r24, r22
    3a24:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    3a28:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    3a2c:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    3a30:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>
    3a34:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3a38:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3a3c:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3a40:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3a44:	ae 01       	movw	r20, r28
    3a46:	4b 59       	subi	r20, 0x9B	; 155
    3a48:	5f 4f       	sbci	r21, 0xFF	; 255
    3a4a:	22 e3       	ldi	r18, 0x32	; 50
    3a4c:	30 e0       	ldi	r19, 0x00	; 0
    3a4e:	bc 01       	movw	r22, r24
    3a50:	cd 01       	movw	r24, r26
    3a52:	0e 94 57 43 	call	0x86ae	; 0x86ae <convertEpochToTimeString>
    3a56:	29 2f       	mov	r18, r25
    3a58:	2f 93       	push	r18
    3a5a:	8f 93       	push	r24
    3a5c:	8a ef       	ldi	r24, 0xFA	; 250
    3a5e:	90 e4       	ldi	r25, 0x40	; 64
    3a60:	89 2f       	mov	r24, r25
    3a62:	8f 93       	push	r24
    3a64:	8a ef       	ldi	r24, 0xFA	; 250
    3a66:	90 e4       	ldi	r25, 0x40	; 64
    3a68:	8f 93       	push	r24
    3a6a:	8d e0       	ldi	r24, 0x0D	; 13
    3a6c:	97 e4       	ldi	r25, 0x47	; 71
    3a6e:	89 2f       	mov	r24, r25
    3a70:	8f 93       	push	r24
    3a72:	8d e0       	ldi	r24, 0x0D	; 13
    3a74:	97 e4       	ldi	r25, 0x47	; 71
    3a76:	8f 93       	push	r24
    3a78:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3a7c:	0f 90       	pop	r0
    3a7e:	0f 90       	pop	r0
    3a80:	0f 90       	pop	r0
    3a82:	0f 90       	pop	r0
    3a84:	0f 90       	pop	r0
    3a86:	0f 90       	pop	r0
    3a88:	60 e0       	ldi	r22, 0x00	; 0
    3a8a:	80 e0       	ldi	r24, 0x00	; 0
    3a8c:	90 e0       	ldi	r25, 0x00	; 0
    3a8e:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3a92:	1b c1       	rjmp	.+566    	; 0x3cca <_Z19handleSerialBusMsgsv+0xb86>
    3a94:	ce 01       	movw	r24, r28
    3a96:	84 5a       	subi	r24, 0xA4	; 164
    3a98:	9f 4f       	sbci	r25, 0xFF	; 255
    3a9a:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    3a9e:	dc 01       	movw	r26, r24
    3aa0:	cb 01       	movw	r24, r22
    3aa2:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    3aa6:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    3aaa:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    3aae:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>
    3ab2:	ce 01       	movw	r24, r28
    3ab4:	84 5a       	subi	r24, 0xA4	; 164
    3ab6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ab8:	fc 01       	movw	r30, r24
    3aba:	80 81       	ld	r24, Z
    3abc:	88 23       	and	r24, r24
    3abe:	51 f0       	breq	.+20     	; 0x3ad4 <_Z19handleSerialBusMsgsv+0x990>
    3ac0:	88 e2       	ldi	r24, 0x28	; 40
    3ac2:	e2 ed       	ldi	r30, 0xD2	; 210
    3ac4:	f0 e4       	ldi	r31, 0x40	; 64
    3ac6:	ad e0       	ldi	r26, 0x0D	; 13
    3ac8:	b7 e4       	ldi	r27, 0x47	; 71
    3aca:	01 90       	ld	r0, Z+
    3acc:	0d 92       	st	X+, r0
    3ace:	8a 95       	dec	r24
    3ad0:	e1 f7       	brne	.-8      	; 0x3aca <_Z19handleSerialBusMsgsv+0x986>
    3ad2:	fb c0       	rjmp	.+502    	; 0x3cca <_Z19handleSerialBusMsgsv+0xb86>
    3ad4:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3ad8:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3adc:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3ae0:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3ae4:	ae 01       	movw	r20, r28
    3ae6:	4b 59       	subi	r20, 0x9B	; 155
    3ae8:	5f 4f       	sbci	r21, 0xFF	; 255
    3aea:	22 e3       	ldi	r18, 0x32	; 50
    3aec:	30 e0       	ldi	r19, 0x00	; 0
    3aee:	bc 01       	movw	r22, r24
    3af0:	cd 01       	movw	r24, r26
    3af2:	0e 94 57 43 	call	0x86ae	; 0x86ae <convertEpochToTimeString>
    3af6:	29 2f       	mov	r18, r25
    3af8:	2f 93       	push	r18
    3afa:	8f 93       	push	r24
    3afc:	84 e0       	ldi	r24, 0x04	; 4
    3afe:	91 e4       	ldi	r25, 0x41	; 65
    3b00:	89 2f       	mov	r24, r25
    3b02:	8f 93       	push	r24
    3b04:	84 e0       	ldi	r24, 0x04	; 4
    3b06:	91 e4       	ldi	r25, 0x41	; 65
    3b08:	8f 93       	push	r24
    3b0a:	8d e0       	ldi	r24, 0x0D	; 13
    3b0c:	97 e4       	ldi	r25, 0x47	; 71
    3b0e:	89 2f       	mov	r24, r25
    3b10:	8f 93       	push	r24
    3b12:	8d e0       	ldi	r24, 0x0D	; 13
    3b14:	97 e4       	ldi	r25, 0x47	; 71
    3b16:	8f 93       	push	r24
    3b18:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3b1c:	0f 90       	pop	r0
    3b1e:	0f 90       	pop	r0
    3b20:	0f 90       	pop	r0
    3b22:	0f 90       	pop	r0
    3b24:	0f 90       	pop	r0
    3b26:	0f 90       	pop	r0
    3b28:	8d e0       	ldi	r24, 0x0D	; 13
    3b2a:	97 e4       	ldi	r25, 0x47	; 71
    3b2c:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3b30:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    3b34:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3b38:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3b3c:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3b40:	ae 01       	movw	r20, r28
    3b42:	4b 59       	subi	r20, 0x9B	; 155
    3b44:	5f 4f       	sbci	r21, 0xFF	; 255
    3b46:	22 e3       	ldi	r18, 0x32	; 50
    3b48:	30 e0       	ldi	r19, 0x00	; 0
    3b4a:	bc 01       	movw	r22, r24
    3b4c:	cd 01       	movw	r24, r26
    3b4e:	0e 94 57 43 	call	0x86ae	; 0x86ae <convertEpochToTimeString>
    3b52:	29 2f       	mov	r18, r25
    3b54:	2f 93       	push	r18
    3b56:	8f 93       	push	r24
    3b58:	80 e1       	ldi	r24, 0x10	; 16
    3b5a:	91 e4       	ldi	r25, 0x41	; 65
    3b5c:	89 2f       	mov	r24, r25
    3b5e:	8f 93       	push	r24
    3b60:	80 e1       	ldi	r24, 0x10	; 16
    3b62:	91 e4       	ldi	r25, 0x41	; 65
    3b64:	8f 93       	push	r24
    3b66:	8d e0       	ldi	r24, 0x0D	; 13
    3b68:	97 e4       	ldi	r25, 0x47	; 71
    3b6a:	89 2f       	mov	r24, r25
    3b6c:	8f 93       	push	r24
    3b6e:	8d e0       	ldi	r24, 0x0D	; 13
    3b70:	97 e4       	ldi	r25, 0x47	; 71
    3b72:	8f 93       	push	r24
    3b74:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3b78:	0f 90       	pop	r0
    3b7a:	0f 90       	pop	r0
    3b7c:	0f 90       	pop	r0
    3b7e:	0f 90       	pop	r0
    3b80:	0f 90       	pop	r0
    3b82:	0f 90       	pop	r0
    3b84:	8d e0       	ldi	r24, 0x0D	; 13
    3b86:	97 e4       	ldi	r25, 0x47	; 71
    3b88:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3b8c:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    3b90:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    3b94:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    3b98:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    3b9c:	ae 01       	movw	r20, r28
    3b9e:	4b 59       	subi	r20, 0x9B	; 155
    3ba0:	5f 4f       	sbci	r21, 0xFF	; 255
    3ba2:	22 e3       	ldi	r18, 0x32	; 50
    3ba4:	30 e0       	ldi	r19, 0x00	; 0
    3ba6:	bc 01       	movw	r22, r24
    3ba8:	cd 01       	movw	r24, r26
    3baa:	0e 94 57 43 	call	0x86ae	; 0x86ae <convertEpochToTimeString>
    3bae:	29 2f       	mov	r18, r25
    3bb0:	2f 93       	push	r18
    3bb2:	8f 93       	push	r24
    3bb4:	8c e1       	ldi	r24, 0x1C	; 28
    3bb6:	91 e4       	ldi	r25, 0x41	; 65
    3bb8:	89 2f       	mov	r24, r25
    3bba:	8f 93       	push	r24
    3bbc:	8c e1       	ldi	r24, 0x1C	; 28
    3bbe:	91 e4       	ldi	r25, 0x41	; 65
    3bc0:	8f 93       	push	r24
    3bc2:	8d e0       	ldi	r24, 0x0D	; 13
    3bc4:	97 e4       	ldi	r25, 0x47	; 71
    3bc6:	89 2f       	mov	r24, r25
    3bc8:	8f 93       	push	r24
    3bca:	8d e0       	ldi	r24, 0x0D	; 13
    3bcc:	97 e4       	ldi	r25, 0x47	; 71
    3bce:	8f 93       	push	r24
    3bd0:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3bd4:	0f 90       	pop	r0
    3bd6:	0f 90       	pop	r0
    3bd8:	0f 90       	pop	r0
    3bda:	0f 90       	pop	r0
    3bdc:	0f 90       	pop	r0
    3bde:	0f 90       	pop	r0
    3be0:	8d e0       	ldi	r24, 0x0D	; 13
    3be2:	97 e4       	ldi	r25, 0x47	; 71
    3be4:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3be8:	0e 94 3b 31 	call	0x6276	; 0x6276 <_Z23clockConfigurationCheckv>
    3bec:	8f a3       	std	Y+39, r24	; 0x27
    3bee:	8f a1       	ldd	r24, Y+39	; 0x27
    3bf0:	81 30       	cpi	r24, 0x01	; 1
    3bf2:	31 f0       	breq	.+12     	; 0x3c00 <_Z19handleSerialBusMsgsv+0xabc>
    3bf4:	8f a1       	ldd	r24, Y+39	; 0x27
    3bf6:	85 30       	cpi	r24, 0x05	; 5
    3bf8:	19 f0       	breq	.+6      	; 0x3c00 <_Z19handleSerialBusMsgsv+0xabc>
    3bfa:	0e 94 d2 31 	call	0x63a4	; 0x63a4 <_Z18reportConfigErrorsv>
    3bfe:	65 c0       	rjmp	.+202    	; 0x3cca <_Z19handleSerialBusMsgsv+0xb86>
    3c00:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    3c04:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3c08:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3c0c:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3c10:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3c14:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3c18:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3c1c:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3c20:	0f 2e       	mov	r0, r31
    3c22:	f8 e2       	ldi	r31, 0x28	; 40
    3c24:	ef 2e       	mov	r14, r31
    3c26:	f1 e4       	ldi	r31, 0x41	; 65
    3c28:	ff 2e       	mov	r15, r31
    3c2a:	f0 2d       	mov	r31, r0
    3c2c:	05 e3       	ldi	r16, 0x35	; 53
    3c2e:	11 e4       	ldi	r17, 0x41	; 65
    3c30:	bc 01       	movw	r22, r24
    3c32:	cd 01       	movw	r24, r26
    3c34:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <_Z14reportTimeTillmmPKcS0_>
    3c38:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    3c3c:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    3c40:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    3c44:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    3c48:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    3c4c:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3c50:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3c54:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3c58:	e1 2c       	mov	r14, r1
    3c5a:	f1 2c       	mov	r15, r1
    3c5c:	01 e4       	ldi	r16, 0x41	; 65
    3c5e:	11 e4       	ldi	r17, 0x41	; 65
    3c60:	bc 01       	movw	r22, r24
    3c62:	cd 01       	movw	r24, r26
    3c64:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <_Z14reportTimeTillmmPKcS0_>
    3c68:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    3c6c:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3c70:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3c74:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3c78:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3c7c:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3c80:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3c84:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3c88:	61 e0       	ldi	r22, 0x01	; 1
    3c8a:	28 17       	cp	r18, r24
    3c8c:	39 07       	cpc	r19, r25
    3c8e:	4a 07       	cpc	r20, r26
    3c90:	5b 07       	cpc	r21, r27
    3c92:	08 f0       	brcs	.+2      	; 0x3c96 <_Z19handleSerialBusMsgsv+0xb52>
    3c94:	60 e0       	ldi	r22, 0x00	; 0
    3c96:	66 23       	and	r22, r22
    3c98:	c1 f0       	breq	.+48     	; 0x3cca <_Z19handleSerialBusMsgsv+0xb86>
    3c9a:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    3c9e:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    3ca2:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    3ca6:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    3caa:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3cae:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3cb2:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3cb6:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3cba:	e1 2c       	mov	r14, r1
    3cbc:	f1 2c       	mov	r15, r1
    3cbe:	09 e4       	ldi	r16, 0x49	; 73
    3cc0:	11 e4       	ldi	r17, 0x41	; 65
    3cc2:	bc 01       	movw	r22, r24
    3cc4:	cd 01       	movw	r24, r26
    3cc6:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <_Z14reportTimeTillmmPKcS0_>
    3cca:	81 e0       	ldi	r24, 0x01	; 1
    3ccc:	8d 83       	std	Y+5, r24	; 0x05
    3cce:	70 c1       	rjmp	.+736    	; 0x3fb0 <_Z19handleSerialBusMsgsv+0xe6c>
    3cd0:	8e 81       	ldd	r24, Y+6	; 0x06
    3cd2:	9f 81       	ldd	r25, Y+7	; 0x07
    3cd4:	fc 01       	movw	r30, r24
    3cd6:	83 81       	ldd	r24, Z+3	; 0x03
    3cd8:	83 35       	cpi	r24, 0x53	; 83
    3cda:	09 f0       	breq	.+2      	; 0x3cde <_Z19handleSerialBusMsgsv+0xb9a>
    3cdc:	da c0       	rjmp	.+436    	; 0x3e92 <_Z19handleSerialBusMsgsv+0xd4e>
    3cde:	8e 81       	ldd	r24, Y+6	; 0x06
    3ce0:	9f 81       	ldd	r25, Y+7	; 0x07
    3ce2:	47 96       	adiw	r24, 0x17	; 23
    3ce4:	bc 01       	movw	r22, r24
    3ce6:	8d e0       	ldi	r24, 0x0D	; 13
    3ce8:	97 e4       	ldi	r25, 0x47	; 71
    3cea:	0e 94 a5 77 	call	0xef4a	; 0xef4a <strcpy>
    3cee:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <g_utc_offset>
    3cf2:	81 95       	neg	r24
    3cf4:	48 2f       	mov	r20, r24
    3cf6:	60 e8       	ldi	r22, 0x80	; 128
    3cf8:	77 e4       	ldi	r23, 0x47	; 71
    3cfa:	8d e0       	ldi	r24, 0x0D	; 13
    3cfc:	97 e4       	ldi	r25, 0x47	; 71
    3cfe:	0e 94 67 2e 	call	0x5cce	; 0x5cce <_Z18validateTimeStringPcPma>
    3d02:	dc 01       	movw	r26, r24
    3d04:	cb 01       	movw	r24, r22
    3d06:	8a 8f       	std	Y+26, r24	; 0x1a
    3d08:	9b 8f       	std	Y+27, r25	; 0x1b
    3d0a:	ac 8f       	std	Y+28, r26	; 0x1c
    3d0c:	bd 8f       	std	Y+29, r27	; 0x1d
    3d0e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d10:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d12:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3d14:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3d16:	89 2b       	or	r24, r25
    3d18:	8a 2b       	or	r24, r26
    3d1a:	8b 2b       	or	r24, r27
    3d1c:	09 f4       	brne	.+2      	; 0x3d20 <_Z19handleSerialBusMsgsv+0xbdc>
    3d1e:	8c c0       	rjmp	.+280    	; 0x3e38 <_Z19handleSerialBusMsgsv+0xcf4>
    3d20:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3d22:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3d24:	ac 8d       	ldd	r26, Y+28	; 0x1c
    3d26:	bd 8d       	ldd	r27, Y+29	; 0x1d
    3d28:	80 93 80 47 	sts	0x4780, r24	; 0x804780 <g_event_start_epoch>
    3d2c:	90 93 81 47 	sts	0x4781, r25	; 0x804781 <g_event_start_epoch+0x1>
    3d30:	a0 93 82 47 	sts	0x4782, r26	; 0x804782 <g_event_start_epoch+0x2>
    3d34:	b0 93 83 47 	sts	0x4783, r27	; 0x804783 <g_event_start_epoch+0x3>
    3d38:	40 e8       	ldi	r20, 0x80	; 128
    3d3a:	57 e4       	ldi	r21, 0x47	; 71
    3d3c:	62 e0       	ldi	r22, 0x02	; 2
    3d3e:	8f e9       	ldi	r24, 0x9F	; 159
    3d40:	97 e4       	ldi	r25, 0x47	; 71
    3d42:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3d46:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    3d4a:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    3d4e:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    3d52:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    3d56:	9e 01       	movw	r18, r28
    3d58:	23 5a       	subi	r18, 0xA3	; 163
    3d5a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d5c:	f9 01       	movw	r30, r18
    3d5e:	80 83       	st	Z, r24
    3d60:	91 83       	std	Z+1, r25	; 0x01
    3d62:	a2 83       	std	Z+2, r26	; 0x02
    3d64:	b3 83       	std	Z+3, r27	; 0x03
    3d66:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    3d6a:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3d6e:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3d72:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3d76:	80 58       	subi	r24, 0x80	; 128
    3d78:	9e 4a       	sbci	r25, 0xAE	; 174
    3d7a:	ae 4f       	sbci	r26, 0xFE	; 254
    3d7c:	bf 4f       	sbci	r27, 0xFF	; 255
    3d7e:	9e 01       	movw	r18, r28
    3d80:	2f 59       	subi	r18, 0x9F	; 159
    3d82:	3f 4f       	sbci	r19, 0xFF	; 255
    3d84:	f9 01       	movw	r30, r18
    3d86:	80 83       	st	Z, r24
    3d88:	91 83       	std	Z+1, r25	; 0x01
    3d8a:	a2 83       	std	Z+2, r26	; 0x02
    3d8c:	b3 83       	std	Z+3, r27	; 0x03
    3d8e:	ce 01       	movw	r24, r28
    3d90:	83 5a       	subi	r24, 0xA3	; 163
    3d92:	9f 4f       	sbci	r25, 0xFF	; 255
    3d94:	fc 01       	movw	r30, r24
    3d96:	20 81       	ld	r18, Z
    3d98:	31 81       	ldd	r19, Z+1	; 0x01
    3d9a:	42 81       	ldd	r20, Z+2	; 0x02
    3d9c:	53 81       	ldd	r21, Z+3	; 0x03
    3d9e:	ce 01       	movw	r24, r28
    3da0:	8f 59       	subi	r24, 0x9F	; 159
    3da2:	9f 4f       	sbci	r25, 0xFF	; 255
    3da4:	fc 01       	movw	r30, r24
    3da6:	80 81       	ld	r24, Z
    3da8:	91 81       	ldd	r25, Z+1	; 0x01
    3daa:	a2 81       	ldd	r26, Z+2	; 0x02
    3dac:	b3 81       	ldd	r27, Z+3	; 0x03
    3dae:	28 17       	cp	r18, r24
    3db0:	39 07       	cpc	r19, r25
    3db2:	4a 07       	cpc	r20, r26
    3db4:	5b 07       	cpc	r21, r27
    3db6:	48 f4       	brcc	.+18     	; 0x3dca <_Z19handleSerialBusMsgsv+0xc86>
    3db8:	ce 01       	movw	r24, r28
    3dba:	8f 59       	subi	r24, 0x9F	; 159
    3dbc:	9f 4f       	sbci	r25, 0xFF	; 255
    3dbe:	fc 01       	movw	r30, r24
    3dc0:	80 81       	ld	r24, Z
    3dc2:	91 81       	ldd	r25, Z+1	; 0x01
    3dc4:	a2 81       	ldd	r26, Z+2	; 0x02
    3dc6:	b3 81       	ldd	r27, Z+3	; 0x03
    3dc8:	08 c0       	rjmp	.+16     	; 0x3dda <_Z19handleSerialBusMsgsv+0xc96>
    3dca:	ce 01       	movw	r24, r28
    3dcc:	83 5a       	subi	r24, 0xA3	; 163
    3dce:	9f 4f       	sbci	r25, 0xFF	; 255
    3dd0:	fc 01       	movw	r30, r24
    3dd2:	80 81       	ld	r24, Z
    3dd4:	91 81       	ldd	r25, Z+1	; 0x01
    3dd6:	a2 81       	ldd	r26, Z+2	; 0x02
    3dd8:	b3 81       	ldd	r27, Z+3	; 0x03
    3dda:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    3dde:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    3de2:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    3de6:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
    3dea:	44 e8       	ldi	r20, 0x84	; 132
    3dec:	57 e4       	ldi	r21, 0x47	; 71
    3dee:	66 e0       	ldi	r22, 0x06	; 6
    3df0:	8f e9       	ldi	r24, 0x9F	; 159
    3df2:	97 e4       	ldi	r25, 0x47	; 71
    3df4:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3df8:	63 e0       	ldi	r22, 0x03	; 3
    3dfa:	80 e0       	ldi	r24, 0x00	; 0
    3dfc:	90 e0       	ldi	r25, 0x00	; 0
    3dfe:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3e02:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    3e06:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3e0a:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3e0e:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3e12:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3e16:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3e1a:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3e1e:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3e22:	61 e0       	ldi	r22, 0x01	; 1
    3e24:	82 17       	cp	r24, r18
    3e26:	93 07       	cpc	r25, r19
    3e28:	a4 07       	cpc	r26, r20
    3e2a:	b5 07       	cpc	r27, r21
    3e2c:	08 f0       	brcs	.+2      	; 0x3e30 <_Z19handleSerialBusMsgsv+0xcec>
    3e2e:	60 e0       	ldi	r22, 0x00	; 0
    3e30:	66 23       	and	r22, r22
    3e32:	11 f0       	breq	.+4      	; 0x3e38 <_Z19handleSerialBusMsgsv+0xcf4>
    3e34:	0e 94 ed 2a 	call	0x55da	; 0x55da <_Z18startEventUsingRTCv>
    3e38:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    3e3c:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3e40:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3e44:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3e48:	ae 01       	movw	r20, r28
    3e4a:	4b 59       	subi	r20, 0x9B	; 155
    3e4c:	5f 4f       	sbci	r21, 0xFF	; 255
    3e4e:	22 e3       	ldi	r18, 0x32	; 50
    3e50:	30 e0       	ldi	r19, 0x00	; 0
    3e52:	bc 01       	movw	r22, r24
    3e54:	cd 01       	movw	r24, r26
    3e56:	0e 94 57 43 	call	0x86ae	; 0x86ae <convertEpochToTimeString>
    3e5a:	29 2f       	mov	r18, r25
    3e5c:	2f 93       	push	r18
    3e5e:	8f 93       	push	r24
    3e60:	8a e5       	ldi	r24, 0x5A	; 90
    3e62:	91 e4       	ldi	r25, 0x41	; 65
    3e64:	89 2f       	mov	r24, r25
    3e66:	8f 93       	push	r24
    3e68:	8a e5       	ldi	r24, 0x5A	; 90
    3e6a:	91 e4       	ldi	r25, 0x41	; 65
    3e6c:	8f 93       	push	r24
    3e6e:	8d e0       	ldi	r24, 0x0D	; 13
    3e70:	97 e4       	ldi	r25, 0x47	; 71
    3e72:	89 2f       	mov	r24, r25
    3e74:	8f 93       	push	r24
    3e76:	8d e0       	ldi	r24, 0x0D	; 13
    3e78:	97 e4       	ldi	r25, 0x47	; 71
    3e7a:	8f 93       	push	r24
    3e7c:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3e80:	0f 90       	pop	r0
    3e82:	0f 90       	pop	r0
    3e84:	0f 90       	pop	r0
    3e86:	0f 90       	pop	r0
    3e88:	0f 90       	pop	r0
    3e8a:	0f 90       	pop	r0
    3e8c:	81 e0       	ldi	r24, 0x01	; 1
    3e8e:	8d 83       	std	Y+5, r24	; 0x05
    3e90:	8f c0       	rjmp	.+286    	; 0x3fb0 <_Z19handleSerialBusMsgsv+0xe6c>
    3e92:	8e 81       	ldd	r24, Y+6	; 0x06
    3e94:	9f 81       	ldd	r25, Y+7	; 0x07
    3e96:	fc 01       	movw	r30, r24
    3e98:	83 81       	ldd	r24, Z+3	; 0x03
    3e9a:	86 34       	cpi	r24, 0x46	; 70
    3e9c:	09 f0       	breq	.+2      	; 0x3ea0 <_Z19handleSerialBusMsgsv+0xd5c>
    3e9e:	80 c0       	rjmp	.+256    	; 0x3fa0 <_Z19handleSerialBusMsgsv+0xe5c>
    3ea0:	8e 81       	ldd	r24, Y+6	; 0x06
    3ea2:	9f 81       	ldd	r25, Y+7	; 0x07
    3ea4:	47 96       	adiw	r24, 0x17	; 23
    3ea6:	bc 01       	movw	r22, r24
    3ea8:	8d e0       	ldi	r24, 0x0D	; 13
    3eaa:	97 e4       	ldi	r25, 0x47	; 71
    3eac:	0e 94 a5 77 	call	0xef4a	; 0xef4a <strcpy>
    3eb0:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <g_utc_offset>
    3eb4:	81 95       	neg	r24
    3eb6:	48 2f       	mov	r20, r24
    3eb8:	64 e8       	ldi	r22, 0x84	; 132
    3eba:	77 e4       	ldi	r23, 0x47	; 71
    3ebc:	8d e0       	ldi	r24, 0x0D	; 13
    3ebe:	97 e4       	ldi	r25, 0x47	; 71
    3ec0:	0e 94 67 2e 	call	0x5cce	; 0x5cce <_Z18validateTimeStringPcPma>
    3ec4:	dc 01       	movw	r26, r24
    3ec6:	cb 01       	movw	r24, r22
    3ec8:	8e 8f       	std	Y+30, r24	; 0x1e
    3eca:	9f 8f       	std	Y+31, r25	; 0x1f
    3ecc:	a8 a3       	std	Y+32, r26	; 0x20
    3ece:	b9 a3       	std	Y+33, r27	; 0x21
    3ed0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ed2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3ed4:	a8 a1       	ldd	r26, Y+32	; 0x20
    3ed6:	b9 a1       	ldd	r27, Y+33	; 0x21
    3ed8:	89 2b       	or	r24, r25
    3eda:	8a 2b       	or	r24, r26
    3edc:	8b 2b       	or	r24, r27
    3ede:	99 f1       	breq	.+102    	; 0x3f46 <_Z19handleSerialBusMsgsv+0xe02>
    3ee0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ee2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3ee4:	a8 a1       	ldd	r26, Y+32	; 0x20
    3ee6:	b9 a1       	ldd	r27, Y+33	; 0x21
    3ee8:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    3eec:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    3ef0:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    3ef4:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
    3ef8:	44 e8       	ldi	r20, 0x84	; 132
    3efa:	57 e4       	ldi	r21, 0x47	; 71
    3efc:	66 e0       	ldi	r22, 0x06	; 6
    3efe:	8f e9       	ldi	r24, 0x9F	; 159
    3f00:	97 e4       	ldi	r25, 0x47	; 71
    3f02:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
    3f06:	63 e0       	ldi	r22, 0x03	; 3
    3f08:	80 e0       	ldi	r24, 0x00	; 0
    3f0a:	90 e0       	ldi	r25, 0x00	; 0
    3f0c:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
    3f10:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    3f14:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    3f18:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    3f1c:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    3f20:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    3f24:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    3f28:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    3f2c:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    3f30:	61 e0       	ldi	r22, 0x01	; 1
    3f32:	82 17       	cp	r24, r18
    3f34:	93 07       	cpc	r25, r19
    3f36:	a4 07       	cpc	r26, r20
    3f38:	b5 07       	cpc	r27, r21
    3f3a:	08 f0       	brcs	.+2      	; 0x3f3e <_Z19handleSerialBusMsgsv+0xdfa>
    3f3c:	60 e0       	ldi	r22, 0x00	; 0
    3f3e:	66 23       	and	r22, r22
    3f40:	11 f0       	breq	.+4      	; 0x3f46 <_Z19handleSerialBusMsgsv+0xe02>
    3f42:	0e 94 ed 2a 	call	0x55da	; 0x55da <_Z18startEventUsingRTCv>
    3f46:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    3f4a:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    3f4e:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    3f52:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    3f56:	ae 01       	movw	r20, r28
    3f58:	4b 59       	subi	r20, 0x9B	; 155
    3f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    3f5c:	22 e3       	ldi	r18, 0x32	; 50
    3f5e:	30 e0       	ldi	r19, 0x00	; 0
    3f60:	bc 01       	movw	r22, r24
    3f62:	cd 01       	movw	r24, r26
    3f64:	0e 94 57 43 	call	0x86ae	; 0x86ae <convertEpochToTimeString>
    3f68:	29 2f       	mov	r18, r25
    3f6a:	2f 93       	push	r18
    3f6c:	8f 93       	push	r24
    3f6e:	8c e1       	ldi	r24, 0x1C	; 28
    3f70:	91 e4       	ldi	r25, 0x41	; 65
    3f72:	89 2f       	mov	r24, r25
    3f74:	8f 93       	push	r24
    3f76:	8c e1       	ldi	r24, 0x1C	; 28
    3f78:	91 e4       	ldi	r25, 0x41	; 65
    3f7a:	8f 93       	push	r24
    3f7c:	8d e0       	ldi	r24, 0x0D	; 13
    3f7e:	97 e4       	ldi	r25, 0x47	; 71
    3f80:	89 2f       	mov	r24, r25
    3f82:	8f 93       	push	r24
    3f84:	8d e0       	ldi	r24, 0x0D	; 13
    3f86:	97 e4       	ldi	r25, 0x47	; 71
    3f88:	8f 93       	push	r24
    3f8a:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    3f8e:	0f 90       	pop	r0
    3f90:	0f 90       	pop	r0
    3f92:	0f 90       	pop	r0
    3f94:	0f 90       	pop	r0
    3f96:	0f 90       	pop	r0
    3f98:	0f 90       	pop	r0
    3f9a:	81 e0       	ldi	r24, 0x01	; 1
    3f9c:	8d 83       	std	Y+5, r24	; 0x05
    3f9e:	08 c0       	rjmp	.+16     	; 0x3fb0 <_Z19handleSerialBusMsgsv+0xe6c>
    3fa0:	8e 81       	ldd	r24, Y+6	; 0x06
    3fa2:	9f 81       	ldd	r25, Y+7	; 0x07
    3fa4:	fc 01       	movw	r30, r24
    3fa6:	83 81       	ldd	r24, Z+3	; 0x03
    3fa8:	8a 32       	cpi	r24, 0x2A	; 42
    3faa:	11 f4       	brne	.+4      	; 0x3fb0 <_Z19handleSerialBusMsgsv+0xe6c>
    3fac:	0e 94 6e 42 	call	0x84dc	; 0x84dc <ds3231_sync2nearestMinute>
    3fb0:	8d 81       	ldd	r24, Y+5	; 0x05
    3fb2:	88 23       	and	r24, r24
    3fb4:	01 f1       	breq	.+64     	; 0x3ff6 <_Z19handleSerialBusMsgsv+0xeb2>
    3fb6:	8d e0       	ldi	r24, 0x0D	; 13
    3fb8:	97 e4       	ldi	r25, 0x47	; 71
    3fba:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3fbe:	1b c0       	rjmp	.+54     	; 0x3ff6 <_Z19handleSerialBusMsgsv+0xeb2>
    3fc0:	8e 81       	ldd	r24, Y+6	; 0x06
    3fc2:	9f 81       	ldd	r25, Y+7	; 0x07
    3fc4:	fc 01       	movw	r30, r24
    3fc6:	83 81       	ldd	r24, Z+3	; 0x03
    3fc8:	83 34       	cpi	r24, 0x43	; 67
    3fca:	b9 f4       	brne	.+46     	; 0x3ffa <_Z19handleSerialBusMsgsv+0xeb6>
    3fcc:	8e 81       	ldd	r24, Y+6	; 0x06
    3fce:	9f 81       	ldd	r25, Y+7	; 0x07
    3fd0:	fc 01       	movw	r30, r24
    3fd2:	87 89       	ldd	r24, Z+23	; 0x17
    3fd4:	88 23       	and	r24, r24
    3fd6:	89 f0       	breq	.+34     	; 0x3ffa <_Z19handleSerialBusMsgsv+0xeb6>
    3fd8:	8e 81       	ldd	r24, Y+6	; 0x06
    3fda:	9f 81       	ldd	r25, Y+7	; 0x07
    3fdc:	47 96       	adiw	r24, 0x17	; 23
    3fde:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    3fe2:	88 a7       	std	Y+40, r24	; 0x28
    3fe4:	99 a7       	std	Y+41, r25	; 0x29
    3fe6:	09 c0       	rjmp	.+18     	; 0x3ffa <_Z19handleSerialBusMsgsv+0xeb6>
    3fe8:	85 e6       	ldi	r24, 0x65	; 101
    3fea:	91 e4       	ldi	r25, 0x41	; 65
    3fec:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    3ff0:	05 c0       	rjmp	.+10     	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3ff2:	00 00       	nop
    3ff4:	03 c0       	rjmp	.+6      	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3ff6:	00 00       	nop
    3ff8:	01 c0       	rjmp	.+2      	; 0x3ffc <_Z19handleSerialBusMsgsv+0xeb8>
    3ffa:	00 00       	nop
    3ffc:	8e 81       	ldd	r24, Y+6	; 0x06
    3ffe:	9f 81       	ldd	r25, Y+7	; 0x07
    4000:	fc 01       	movw	r30, r24
    4002:	11 82       	std	Z+1, r1	; 0x01
    4004:	12 82       	std	Z+2, r1	; 0x02
    4006:	0e 94 69 5e 	call	0xbcd2	; 0xbcd2 <sb_send_NewPrompt>
    400a:	a8 c8       	rjmp	.-3760   	; 0x315c <_Z19handleSerialBusMsgsv+0x18>
    400c:	00 00       	nop
    400e:	ca 56       	subi	r28, 0x6A	; 106
    4010:	df 4f       	sbci	r29, 0xFF	; 255
    4012:	cd bf       	out	0x3d, r28	; 61
    4014:	de bf       	out	0x3e, r29	; 62
    4016:	df 91       	pop	r29
    4018:	cf 91       	pop	r28
    401a:	1f 91       	pop	r17
    401c:	0f 91       	pop	r16
    401e:	ff 90       	pop	r15
    4020:	ef 90       	pop	r14
    4022:	08 95       	ret

00004024 <_Z17handleLinkBusMsgsv>:
    4024:	cf 93       	push	r28
    4026:	df 93       	push	r29
    4028:	cd b7       	in	r28, 0x3d	; 61
    402a:	de b7       	in	r29, 0x3e	; 62
    402c:	af 97       	sbiw	r28, 0x2f	; 47
    402e:	cd bf       	out	0x3d, r28	; 61
    4030:	de bf       	out	0x3e, r29	; 62
    4032:	81 e0       	ldi	r24, 0x01	; 1
    4034:	89 83       	std	Y+1, r24	; 0x01
    4036:	0e 94 28 54 	call	0xa850	; 0xa850 <_Z18nextFullLBRxBufferv>
    403a:	8a 87       	std	Y+10, r24	; 0x0a
    403c:	9b 87       	std	Y+11, r25	; 0x0b
    403e:	21 e0       	ldi	r18, 0x01	; 1
    4040:	8a 85       	ldd	r24, Y+10	; 0x0a
    4042:	9b 85       	ldd	r25, Y+11	; 0x0b
    4044:	89 2b       	or	r24, r25
    4046:	09 f4       	brne	.+2      	; 0x404a <_Z17handleLinkBusMsgsv+0x26>
    4048:	20 e0       	ldi	r18, 0x00	; 0
    404a:	22 23       	and	r18, r18
    404c:	09 f4       	brne	.+2      	; 0x4050 <_Z17handleLinkBusMsgsv+0x2c>
    404e:	3a c6       	rjmp	.+3188   	; 0x4cc4 <_Z17handleLinkBusMsgsv+0xca0>
    4050:	8a 85       	ldd	r24, Y+10	; 0x0a
    4052:	9b 85       	ldd	r25, Y+11	; 0x0b
    4054:	fc 01       	movw	r30, r24
    4056:	81 81       	ldd	r24, Z+1	; 0x01
    4058:	92 81       	ldd	r25, Z+2	; 0x02
    405a:	8c 87       	std	Y+12, r24	; 0x0c
    405c:	9d 87       	std	Y+13, r25	; 0x0d
    405e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4060:	9d 85       	ldd	r25, Y+13	; 0x0d
    4062:	82 38       	cpi	r24, 0x82	; 130
    4064:	fe e1       	ldi	r31, 0x1E	; 30
    4066:	9f 07       	cpc	r25, r31
    4068:	09 f4       	brne	.+2      	; 0x406c <_Z17handleLinkBusMsgsv+0x48>
    406a:	92 c0       	rjmp	.+292    	; 0x4190 <_Z17handleLinkBusMsgsv+0x16c>
    406c:	83 38       	cpi	r24, 0x83	; 131
    406e:	2e e1       	ldi	r18, 0x1E	; 30
    4070:	92 07       	cpc	r25, r18
    4072:	80 f5       	brcc	.+96     	; 0x40d4 <_Z17handleLinkBusMsgsv+0xb0>
    4074:	81 36       	cpi	r24, 0x61	; 97
    4076:	e3 e0       	ldi	r30, 0x03	; 3
    4078:	9e 07       	cpc	r25, r30
    407a:	09 f4       	brne	.+2      	; 0x407e <_Z17handleLinkBusMsgsv+0x5a>
    407c:	f8 c4       	rjmp	.+2544   	; 0x4a6e <_Z17handleLinkBusMsgsv+0xa4a>
    407e:	82 36       	cpi	r24, 0x62	; 98
    4080:	f3 e0       	ldi	r31, 0x03	; 3
    4082:	9f 07       	cpc	r25, r31
    4084:	78 f4       	brcc	.+30     	; 0x40a4 <_Z17handleLinkBusMsgsv+0x80>
    4086:	85 31       	cpi	r24, 0x15	; 21
    4088:	23 e0       	ldi	r18, 0x03	; 3
    408a:	92 07       	cpc	r25, r18
    408c:	09 f4       	brne	.+2      	; 0x4090 <_Z17handleLinkBusMsgsv+0x6c>
    408e:	3d c1       	rjmp	.+634    	; 0x430a <_Z17handleLinkBusMsgsv+0x2e6>
    4090:	8e 31       	cpi	r24, 0x1E	; 30
    4092:	e3 e0       	ldi	r30, 0x03	; 3
    4094:	9e 07       	cpc	r25, r30
    4096:	09 f4       	brne	.+2      	; 0x409a <_Z17handleLinkBusMsgsv+0x76>
    4098:	5f c3       	rjmp	.+1726   	; 0x4758 <_Z17handleLinkBusMsgsv+0x734>
    409a:	84 35       	cpi	r24, 0x54	; 84
    409c:	91 05       	cpc	r25, r1
    409e:	09 f4       	brne	.+2      	; 0x40a2 <_Z17handleLinkBusMsgsv+0x7e>
    40a0:	5b c4       	rjmp	.+2230   	; 0x4958 <_Z17handleLinkBusMsgsv+0x934>
    40a2:	e3 c5       	rjmp	.+3014   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    40a4:	8f 3a       	cpi	r24, 0xAF	; 175
    40a6:	f3 e0       	ldi	r31, 0x03	; 3
    40a8:	9f 07       	cpc	r25, r31
    40aa:	09 f4       	brne	.+2      	; 0x40ae <_Z17handleLinkBusMsgsv+0x8a>
    40ac:	4c c0       	rjmp	.+152    	; 0x4146 <_Z17handleLinkBusMsgsv+0x122>
    40ae:	80 3b       	cpi	r24, 0xB0	; 176
    40b0:	23 e0       	ldi	r18, 0x03	; 3
    40b2:	92 07       	cpc	r25, r18
    40b4:	28 f4       	brcc	.+10     	; 0x40c0 <_Z17handleLinkBusMsgsv+0x9c>
    40b6:	84 38       	cpi	r24, 0x84	; 132
    40b8:	93 40       	sbci	r25, 0x03	; 3
    40ba:	09 f4       	brne	.+2      	; 0x40be <_Z17handleLinkBusMsgsv+0x9a>
    40bc:	eb c1       	rjmp	.+982    	; 0x4494 <_Z17handleLinkBusMsgsv+0x470>
    40be:	d5 c5       	rjmp	.+2986   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    40c0:	86 3a       	cpi	r24, 0xA6	; 166
    40c2:	fc e1       	ldi	r31, 0x1C	; 28
    40c4:	9f 07       	cpc	r25, r31
    40c6:	09 f4       	brne	.+2      	; 0x40ca <_Z17handleLinkBusMsgsv+0xa6>
    40c8:	5c c5       	rjmp	.+2744   	; 0x4b82 <_Z17handleLinkBusMsgsv+0xb5e>
    40ca:	88 31       	cpi	r24, 0x18	; 24
    40cc:	9d 41       	sbci	r25, 0x1D	; 29
    40ce:	09 f4       	brne	.+2      	; 0x40d2 <_Z17handleLinkBusMsgsv+0xae>
    40d0:	d2 c5       	rjmp	.+2980   	; 0x4c76 <_Z17handleLinkBusMsgsv+0xc52>
    40d2:	cb c5       	rjmp	.+2966   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    40d4:	8a 39       	cpi	r24, 0x9A	; 154
    40d6:	e3 e2       	ldi	r30, 0x23	; 35
    40d8:	9e 07       	cpc	r25, r30
    40da:	09 f4       	brne	.+2      	; 0x40de <_Z17handleLinkBusMsgsv+0xba>
    40dc:	55 c0       	rjmp	.+170    	; 0x4188 <_Z17handleLinkBusMsgsv+0x164>
    40de:	8b 39       	cpi	r24, 0x9B	; 155
    40e0:	f3 e2       	ldi	r31, 0x23	; 35
    40e2:	9f 07       	cpc	r25, r31
    40e4:	c0 f4       	brcc	.+48     	; 0x4116 <_Z17handleLinkBusMsgsv+0xf2>
    40e6:	8e 36       	cpi	r24, 0x6E	; 110
    40e8:	21 e2       	ldi	r18, 0x21	; 33
    40ea:	92 07       	cpc	r25, r18
    40ec:	09 f4       	brne	.+2      	; 0x40f0 <_Z17handleLinkBusMsgsv+0xcc>
    40ee:	c3 c5       	rjmp	.+2950   	; 0x4c76 <_Z17handleLinkBusMsgsv+0xc52>
    40f0:	8f 36       	cpi	r24, 0x6F	; 111
    40f2:	e1 e2       	ldi	r30, 0x21	; 33
    40f4:	9e 07       	cpc	r25, r30
    40f6:	28 f4       	brcc	.+10     	; 0x4102 <_Z17handleLinkBusMsgsv+0xde>
    40f8:	81 3d       	cpi	r24, 0xD1	; 209
    40fa:	9e 41       	sbci	r25, 0x1E	; 30
    40fc:	09 f4       	brne	.+2      	; 0x4100 <_Z17handleLinkBusMsgsv+0xdc>
    40fe:	ce c4       	rjmp	.+2460   	; 0x4a9c <_Z17handleLinkBusMsgsv+0xa78>
    4100:	b4 c5       	rjmp	.+2920   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    4102:	8d 3a       	cpi	r24, 0xAD	; 173
    4104:	22 e2       	ldi	r18, 0x22	; 34
    4106:	92 07       	cpc	r25, r18
    4108:	09 f4       	brne	.+2      	; 0x410c <_Z17handleLinkBusMsgsv+0xe8>
    410a:	9c c0       	rjmp	.+312    	; 0x4244 <_Z17handleLinkBusMsgsv+0x220>
    410c:	81 3c       	cpi	r24, 0xC1	; 193
    410e:	92 42       	sbci	r25, 0x22	; 34
    4110:	09 f4       	brne	.+2      	; 0x4114 <_Z17handleLinkBusMsgsv+0xf0>
    4112:	f6 c0       	rjmp	.+492    	; 0x4300 <_Z17handleLinkBusMsgsv+0x2dc>
    4114:	aa c5       	rjmp	.+2900   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    4116:	80 3d       	cpi	r24, 0xD0	; 208
    4118:	f3 e2       	ldi	r31, 0x23	; 35
    411a:	9f 07       	cpc	r25, r31
    411c:	09 f4       	brne	.+2      	; 0x4120 <_Z17handleLinkBusMsgsv+0xfc>
    411e:	7f c3       	rjmp	.+1790   	; 0x481e <_Z17handleLinkBusMsgsv+0x7fa>
    4120:	81 3d       	cpi	r24, 0xD1	; 209
    4122:	23 e2       	ldi	r18, 0x23	; 35
    4124:	92 07       	cpc	r25, r18
    4126:	28 f4       	brcc	.+10     	; 0x4132 <_Z17handleLinkBusMsgsv+0x10e>
    4128:	8f 3c       	cpi	r24, 0xCF	; 207
    412a:	93 42       	sbci	r25, 0x23	; 35
    412c:	09 f4       	brne	.+2      	; 0x4130 <_Z17handleLinkBusMsgsv+0x10c>
    412e:	85 c5       	rjmp	.+2826   	; 0x4c3a <_Z17handleLinkBusMsgsv+0xc16>
    4130:	9c c5       	rjmp	.+2872   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    4132:	87 3f       	cpi	r24, 0xF7	; 247
    4134:	f3 e2       	ldi	r31, 0x23	; 35
    4136:	9f 07       	cpc	r25, r31
    4138:	09 f4       	brne	.+2      	; 0x413c <_Z17handleLinkBusMsgsv+0x118>
    413a:	1f c2       	rjmp	.+1086   	; 0x457a <_Z17handleLinkBusMsgsv+0x556>
    413c:	8c 39       	cpi	r24, 0x9C	; 156
    413e:	94 42       	sbci	r25, 0x24	; 36
    4140:	09 f4       	brne	.+2      	; 0x4144 <_Z17handleLinkBusMsgsv+0x120>
    4142:	8b c5       	rjmp	.+2838   	; 0x4c5a <_Z17handleLinkBusMsgsv+0xc36>
    4144:	92 c5       	rjmp	.+2852   	; 0x4c6a <_Z17handleLinkBusMsgsv+0xc46>
    4146:	8a 85       	ldd	r24, Y+10	; 0x0a
    4148:	9b 85       	ldd	r25, Y+11	; 0x0b
    414a:	fc 01       	movw	r30, r24
    414c:	83 81       	ldd	r24, Z+3	; 0x03
    414e:	88 23       	and	r24, r24
    4150:	09 f4       	brne	.+2      	; 0x4154 <_Z17handleLinkBusMsgsv+0x130>
    4152:	93 c5       	rjmp	.+2854   	; 0x4c7a <_Z17handleLinkBusMsgsv+0xc56>
    4154:	8a 85       	ldd	r24, Y+10	; 0x0a
    4156:	9b 85       	ldd	r25, Y+11	; 0x0b
    4158:	03 96       	adiw	r24, 0x03	; 3
    415a:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    415e:	21 e0       	ldi	r18, 0x01	; 1
    4160:	89 2b       	or	r24, r25
    4162:	09 f4       	brne	.+2      	; 0x4166 <_Z17handleLinkBusMsgsv+0x142>
    4164:	20 e0       	ldi	r18, 0x00	; 0
    4166:	2e 87       	std	Y+14, r18	; 0x0e
    4168:	0e 94 55 2a 	call	0x54aa	; 0x54aa <_Z12suspendEventv>
    416c:	0e 94 59 55 	call	0xaab2	; 0xaab2 <_Z15linkbus_disablev>
    4170:	10 92 09 40 	sts	0x4009, r1	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4174:	9e 85       	ldd	r25, Y+14	; 0x0e
    4176:	81 e0       	ldi	r24, 0x01	; 1
    4178:	89 27       	eor	r24, r25
    417a:	88 23       	and	r24, r24
    417c:	09 f4       	brne	.+2      	; 0x4180 <_Z17handleLinkBusMsgsv+0x15c>
    417e:	7d c5       	rjmp	.+2810   	; 0x4c7a <_Z17handleLinkBusMsgsv+0xc56>
    4180:	80 e0       	ldi	r24, 0x00	; 0
    4182:	0e 94 97 38 	call	0x712e	; 0x712e <_Z10wifi_powerb>
    4186:	79 c5       	rjmp	.+2802   	; 0x4c7a <_Z17handleLinkBusMsgsv+0xc56>
    4188:	82 e0       	ldi	r24, 0x02	; 2
    418a:	0e 94 61 27 	call	0x4ec2	; 0x4ec2 <_Z8wdt_init7WDReset>
    418e:	ff cf       	rjmp	.-2      	; 0x418e <_Z17handleLinkBusMsgsv+0x16a>
    4190:	8a 85       	ldd	r24, Y+10	; 0x0a
    4192:	9b 85       	ldd	r25, Y+11	; 0x0b
    4194:	fc 01       	movw	r30, r24
    4196:	83 81       	ldd	r24, Z+3	; 0x03
    4198:	8f 87       	std	Y+15, r24	; 0x0f
    419a:	81 e0       	ldi	r24, 0x01	; 1
    419c:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    41a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    41a2:	8a 35       	cpi	r24, 0x5A	; 90
    41a4:	21 f4       	brne	.+8      	; 0x41ae <_Z17handleLinkBusMsgsv+0x18a>
    41a6:	88 e7       	ldi	r24, 0x78	; 120
    41a8:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    41ac:	68 c5       	rjmp	.+2768   	; 0x4c7e <_Z17handleLinkBusMsgsv+0xc5a>
    41ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    41b0:	80 33       	cpi	r24, 0x30	; 48
    41b2:	a9 f5       	brne	.+106    	; 0x421e <_Z17handleLinkBusMsgsv+0x1fa>
    41b4:	80 91 8b 47 	lds	r24, 0x478B	; 0x80478b <g_waiting_for_next_event>
    41b8:	88 23       	and	r24, r24
    41ba:	39 f0       	breq	.+14     	; 0x41ca <_Z17handleLinkBusMsgsv+0x1a6>
    41bc:	4c ea       	ldi	r20, 0xAC	; 172
    41be:	52 e4       	ldi	r21, 0x42	; 66
    41c0:	6e ea       	ldi	r22, 0xAE	; 174
    41c2:	72 e4       	ldi	r23, 0x42	; 66
    41c4:	83 e0       	ldi	r24, 0x03	; 3
    41c6:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    41ca:	80 e0       	ldi	r24, 0x00	; 0
    41cc:	90 e0       	ldi	r25, 0x00	; 0
    41ce:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    41d2:	dc 01       	movw	r26, r24
    41d4:	cb 01       	movw	r24, r22
    41d6:	2b 2f       	mov	r18, r27
    41d8:	2f 93       	push	r18
    41da:	2a 2f       	mov	r18, r26
    41dc:	2f 93       	push	r18
    41de:	29 2f       	mov	r18, r25
    41e0:	2f 93       	push	r18
    41e2:	8f 93       	push	r24
    41e4:	8d e4       	ldi	r24, 0x4D	; 77
    41e6:	90 e4       	ldi	r25, 0x40	; 64
    41e8:	89 2f       	mov	r24, r25
    41ea:	8f 93       	push	r24
    41ec:	8d e4       	ldi	r24, 0x4D	; 77
    41ee:	90 e4       	ldi	r25, 0x40	; 64
    41f0:	8f 93       	push	r24
    41f2:	8d e0       	ldi	r24, 0x0D	; 13
    41f4:	97 e4       	ldi	r25, 0x47	; 71
    41f6:	89 2f       	mov	r24, r25
    41f8:	8f 93       	push	r24
    41fa:	8d e0       	ldi	r24, 0x0D	; 13
    41fc:	97 e4       	ldi	r25, 0x47	; 71
    41fe:	8f 93       	push	r24
    4200:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    4204:	8d b7       	in	r24, 0x3d	; 61
    4206:	9e b7       	in	r25, 0x3e	; 62
    4208:	08 96       	adiw	r24, 0x08	; 8
    420a:	cd bf       	out	0x3d, r28	; 61
    420c:	de bf       	out	0x3e, r29	; 62
    420e:	4d e0       	ldi	r20, 0x0D	; 13
    4210:	57 e4       	ldi	r21, 0x47	; 71
    4212:	61 e5       	ldi	r22, 0x51	; 81
    4214:	70 e4       	ldi	r23, 0x40	; 64
    4216:	83 e0       	ldi	r24, 0x03	; 3
    4218:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    421c:	30 c5       	rjmp	.+2656   	; 0x4c7e <_Z17handleLinkBusMsgsv+0xc5a>
    421e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4220:	83 33       	cpi	r24, 0x33	; 51
    4222:	09 f0       	breq	.+2      	; 0x4226 <_Z17handleLinkBusMsgsv+0x202>
    4224:	2c c5       	rjmp	.+2648   	; 0x4c7e <_Z17handleLinkBusMsgsv+0xc5a>
    4226:	10 92 4f 47 	sts	0x474F, r1	; 0x80474f <_ZL19g_wifi_enable_delay>
    422a:	81 e0       	ldi	r24, 0x01	; 1
    422c:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4230:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_waiting_for_next_event>
    4234:	10 92 8a 47 	sts	0x478A, r1	; 0x80478a <g_check_for_next_event>
    4238:	10 92 0a 40 	sts	0x400A, r1	; 0x80400a <_ZL13g_wifi_active>
    423c:	81 e0       	ldi	r24, 0x01	; 1
    423e:	80 93 50 47 	sts	0x4750, r24	; 0x804750 <_ZL20g_shutting_down_wifi>
    4242:	1d c5       	rjmp	.+2618   	; 0x4c7e <_Z17handleLinkBusMsgsv+0xc5a>
    4244:	8a 85       	ldd	r24, Y+10	; 0x0a
    4246:	9b 85       	ldd	r25, Y+11	; 0x0b
    4248:	fc 01       	movw	r30, r24
    424a:	83 81       	ldd	r24, Z+3	; 0x03
    424c:	88 23       	and	r24, r24
    424e:	09 f4       	brne	.+2      	; 0x4252 <_Z17handleLinkBusMsgsv+0x22e>
    4250:	18 c5       	rjmp	.+2608   	; 0x4c82 <_Z17handleLinkBusMsgsv+0xc5e>
    4252:	8a 85       	ldd	r24, Y+10	; 0x0a
    4254:	9b 85       	ldd	r25, Y+11	; 0x0b
    4256:	fc 01       	movw	r30, r24
    4258:	83 81       	ldd	r24, Z+3	; 0x03
    425a:	8d 34       	cpi	r24, 0x4D	; 77
    425c:	81 f4       	brne	.+32     	; 0x427e <_Z17handleLinkBusMsgsv+0x25a>
    425e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4260:	9b 85       	ldd	r25, Y+11	; 0x0b
    4262:	fc 01       	movw	r30, r24
    4264:	80 8d       	ldd	r24, Z+24	; 0x18
    4266:	88 23       	and	r24, r24
    4268:	51 f0       	breq	.+20     	; 0x427e <_Z17handleLinkBusMsgsv+0x25a>
    426a:	8a 85       	ldd	r24, Y+10	; 0x0a
    426c:	9b 85       	ldd	r25, Y+11	; 0x0b
    426e:	48 96       	adiw	r24, 0x18	; 24
    4270:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    4274:	80 93 b9 47 	sts	0x47B9, r24	; 0x8047b9 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    4278:	90 93 ba 47 	sts	0x47BA, r25	; 0x8047ba <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    427c:	09 c0       	rjmp	.+18     	; 0x4290 <_Z17handleLinkBusMsgsv+0x26c>
    427e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4280:	9b 85       	ldd	r25, Y+11	; 0x0b
    4282:	03 96       	adiw	r24, 0x03	; 3
    4284:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    4288:	80 93 b9 47 	sts	0x47B9, r24	; 0x8047b9 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    428c:	90 93 ba 47 	sts	0x47BA, r25	; 0x8047ba <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    4290:	60 e0       	ldi	r22, 0x00	; 0
    4292:	70 e0       	ldi	r23, 0x00	; 0
    4294:	89 eb       	ldi	r24, 0xB9	; 185
    4296:	97 e4       	ldi	r25, 0x47	; 71
    4298:	0e 94 88 6b 	call	0xd710	; 0xd710 <_Z15txSetParametersPjPb>
    429c:	88 8b       	std	Y+16, r24	; 0x10
    429e:	88 89       	ldd	r24, Y+16	; 0x10
    42a0:	88 23       	and	r24, r24
    42a2:	21 f0       	breq	.+8      	; 0x42ac <_Z17handleLinkBusMsgsv+0x288>
    42a4:	88 89       	ldd	r24, Y+16	; 0x10
    42a6:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    42aa:	05 c0       	rjmp	.+10     	; 0x42b6 <_Z17handleLinkBusMsgsv+0x292>
    42ac:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    42b0:	8f 5f       	subi	r24, 0xFF	; 255
    42b2:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    42b6:	80 91 b9 47 	lds	r24, 0x47B9	; 0x8047b9 <_ZZ17handleLinkBusMsgsvE6pwr_mW>
    42ba:	90 91 ba 47 	lds	r25, 0x47BA	; 0x8047ba <_ZZ17handleLinkBusMsgsvE6pwr_mW+0x1>
    42be:	29 2f       	mov	r18, r25
    42c0:	2f 93       	push	r18
    42c2:	8f 93       	push	r24
    42c4:	82 eb       	ldi	r24, 0xB2	; 178
    42c6:	92 e4       	ldi	r25, 0x42	; 66
    42c8:	89 2f       	mov	r24, r25
    42ca:	8f 93       	push	r24
    42cc:	82 eb       	ldi	r24, 0xB2	; 178
    42ce:	92 e4       	ldi	r25, 0x42	; 66
    42d0:	8f 93       	push	r24
    42d2:	8d e0       	ldi	r24, 0x0D	; 13
    42d4:	97 e4       	ldi	r25, 0x47	; 71
    42d6:	89 2f       	mov	r24, r25
    42d8:	8f 93       	push	r24
    42da:	8d e0       	ldi	r24, 0x0D	; 13
    42dc:	97 e4       	ldi	r25, 0x47	; 71
    42de:	8f 93       	push	r24
    42e0:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    42e4:	0f 90       	pop	r0
    42e6:	0f 90       	pop	r0
    42e8:	0f 90       	pop	r0
    42ea:	0f 90       	pop	r0
    42ec:	0f 90       	pop	r0
    42ee:	0f 90       	pop	r0
    42f0:	4d e0       	ldi	r20, 0x0D	; 13
    42f2:	57 e4       	ldi	r21, 0x47	; 71
    42f4:	67 eb       	ldi	r22, 0xB7	; 183
    42f6:	72 e4       	ldi	r23, 0x42	; 66
    42f8:	83 e0       	ldi	r24, 0x03	; 3
    42fa:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    42fe:	c1 c4       	rjmp	.+2434   	; 0x4c82 <_Z17handleLinkBusMsgsv+0xc5e>
    4300:	8f e9       	ldi	r24, 0x9F	; 159
    4302:	97 e4       	ldi	r25, 0x47	; 71
    4304:	0e 94 4a 45 	call	0x8a94	; 0x8a94 <_ZN13EepromManager13saveAllEEPROMEv>
    4308:	cf c4       	rjmp	.+2462   	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    430a:	8a 85       	ldd	r24, Y+10	; 0x0a
    430c:	9b 85       	ldd	r25, Y+11	; 0x0b
    430e:	fc 01       	movw	r30, r24
    4310:	83 81       	ldd	r24, Z+3	; 0x03
    4312:	89 8b       	std	Y+17, r24	; 0x11
    4314:	89 89       	ldd	r24, Y+17	; 0x11
    4316:	81 33       	cpi	r24, 0x31	; 49
    4318:	21 f0       	breq	.+8      	; 0x4322 <_Z17handleLinkBusMsgsv+0x2fe>
    431a:	89 89       	ldd	r24, Y+17	; 0x11
    431c:	82 33       	cpi	r24, 0x32	; 50
    431e:	09 f0       	breq	.+2      	; 0x4322 <_Z17handleLinkBusMsgsv+0x2fe>
    4320:	ab c0       	rjmp	.+342    	; 0x4478 <_Z17handleLinkBusMsgsv+0x454>
    4322:	80 91 45 47 	lds	r24, 0x4745	; 0x804745 <g_antenna_connect_state>
    4326:	82 30       	cpi	r24, 0x02	; 2
    4328:	41 f0       	breq	.+16     	; 0x433a <_Z17handleLinkBusMsgsv+0x316>
    432a:	90 91 3c 40 	lds	r25, 0x403C	; 0x80403c <g_tx_power_is_zero>
    432e:	81 e0       	ldi	r24, 0x01	; 1
    4330:	89 27       	eor	r24, r25
    4332:	88 23       	and	r24, r24
    4334:	11 f0       	breq	.+4      	; 0x433a <_Z17handleLinkBusMsgsv+0x316>
    4336:	81 e0       	ldi	r24, 0x01	; 1
    4338:	01 c0       	rjmp	.+2      	; 0x433c <_Z17handleLinkBusMsgsv+0x318>
    433a:	80 e0       	ldi	r24, 0x00	; 0
    433c:	88 23       	and	r24, r24
    433e:	21 f0       	breq	.+8      	; 0x4348 <_Z17handleLinkBusMsgsv+0x324>
    4340:	87 ef       	ldi	r24, 0xF7	; 247
    4342:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    4346:	a4 c0       	rjmp	.+328    	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    4348:	89 89       	ldd	r24, Y+17	; 0x11
    434a:	81 33       	cpi	r24, 0x31	; 49
    434c:	09 f0       	breq	.+2      	; 0x4350 <_Z17handleLinkBusMsgsv+0x32c>
    434e:	64 c0       	rjmp	.+200    	; 0x4418 <_Z17handleLinkBusMsgsv+0x3f4>
    4350:	80 91 45 47 	lds	r24, 0x4745	; 0x804745 <g_antenna_connect_state>
    4354:	82 30       	cpi	r24, 0x02	; 2
    4356:	21 f0       	breq	.+8      	; 0x4360 <_Z17handleLinkBusMsgsv+0x33c>
    4358:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <g_tx_power_is_zero>
    435c:	88 23       	and	r24, r24
    435e:	11 f0       	breq	.+4      	; 0x4364 <_Z17handleLinkBusMsgsv+0x340>
    4360:	81 e0       	ldi	r24, 0x01	; 1
    4362:	01 c0       	rjmp	.+2      	; 0x4366 <_Z17handleLinkBusMsgsv+0x342>
    4364:	80 e0       	ldi	r24, 0x00	; 0
    4366:	88 23       	and	r24, r24
    4368:	09 f4       	brne	.+2      	; 0x436c <_Z17handleLinkBusMsgsv+0x348>
    436a:	52 c0       	rjmp	.+164    	; 0x4410 <_Z17handleLinkBusMsgsv+0x3ec>
    436c:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>
    4370:	81 e0       	ldi	r24, 0x01	; 1
    4372:	88 a7       	std	Y+40, r24	; 0x28
    4374:	ce 01       	movw	r24, r28
    4376:	88 96       	adiw	r24, 0x28	; 40
    4378:	40 e0       	ldi	r20, 0x00	; 0
    437a:	50 e0       	ldi	r21, 0x00	; 0
    437c:	bc 01       	movw	r22, r24
    437e:	82 e5       	ldi	r24, 0x52	; 82
    4380:	97 e4       	ldi	r25, 0x47	; 71
    4382:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    4386:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    438a:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    438e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4392:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4396:	81 e0       	ldi	r24, 0x01	; 1
    4398:	90 e0       	ldi	r25, 0x00	; 0
    439a:	a0 e0       	ldi	r26, 0x00	; 0
    439c:	b0 e0       	ldi	r27, 0x00	; 0
    439e:	80 93 80 47 	sts	0x4780, r24	; 0x804780 <g_event_start_epoch>
    43a2:	90 93 81 47 	sts	0x4781, r25	; 0x804781 <g_event_start_epoch+0x1>
    43a6:	a0 93 82 47 	sts	0x4782, r26	; 0x804782 <g_event_start_epoch+0x2>
    43aa:	b0 93 83 47 	sts	0x4783, r27	; 0x804783 <g_event_start_epoch+0x3>
    43ae:	8f ef       	ldi	r24, 0xFF	; 255
    43b0:	9f ef       	ldi	r25, 0xFF	; 255
    43b2:	dc 01       	movw	r26, r24
    43b4:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    43b8:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    43bc:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    43c0:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
    43c4:	8f e0       	ldi	r24, 0x0F	; 15
    43c6:	97 e2       	ldi	r25, 0x27	; 39
    43c8:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    43cc:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    43d0:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    43d4:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
    43d8:	8f e0       	ldi	r24, 0x0F	; 15
    43da:	97 e2       	ldi	r25, 0x27	; 39
    43dc:	a0 e0       	ldi	r26, 0x00	; 0
    43de:	b0 e0       	ldi	r27, 0x00	; 0
    43e0:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    43e4:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    43e8:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    43ec:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    43f0:	8f ef       	ldi	r24, 0xFF	; 255
    43f2:	9f ef       	ldi	r25, 0xFF	; 255
    43f4:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    43f8:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    43fc:	81 e0       	ldi	r24, 0x01	; 1
    43fe:	80 93 89 47 	sts	0x4789, r24	; 0x804789 <g_event_commenced>
    4402:	81 e0       	ldi	r24, 0x01	; 1
    4404:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_event_enabled>
    4408:	8d ef       	ldi	r24, 0xFD	; 253
    440a:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    440e:	40 c0       	rjmp	.+128    	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    4410:	87 ef       	ldi	r24, 0xF7	; 247
    4412:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    4416:	3c c0       	rjmp	.+120    	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    4418:	89 89       	ldd	r24, Y+17	; 0x11
    441a:	82 33       	cpi	r24, 0x32	; 50
    441c:	c9 f5       	brne	.+114    	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    441e:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4422:	8c 30       	cpi	r24, 0x0C	; 12
    4424:	20 f4       	brcc	.+8      	; 0x442e <_Z17handleLinkBusMsgsv+0x40a>
    4426:	8d ec       	ldi	r24, 0xCD	; 205
    4428:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    442c:	31 c0       	rjmp	.+98     	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    442e:	19 a6       	std	Y+41, r1	; 0x29
    4430:	ce 01       	movw	r24, r28
    4432:	89 96       	adiw	r24, 0x29	; 41
    4434:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <_Z11launchEventP2SC>
    4438:	80 93 bc 47 	sts	0x47BC, r24	; 0x8047bc <_ZZ17handleLinkBusMsgsvE2ec>
    443c:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <_ZL13g_go_to_sleep>
    4440:	88 23       	and	r24, r24
    4442:	31 f0       	breq	.+12     	; 0x4450 <_Z17handleLinkBusMsgsv+0x42c>
    4444:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZL11g_sleepType>
    4448:	88 23       	and	r24, r24
    444a:	11 f0       	breq	.+4      	; 0x4450 <_Z17handleLinkBusMsgsv+0x42c>
    444c:	81 e0       	ldi	r24, 0x01	; 1
    444e:	01 c0       	rjmp	.+2      	; 0x4452 <_Z17handleLinkBusMsgsv+0x42e>
    4450:	80 e0       	ldi	r24, 0x00	; 0
    4452:	88 23       	and	r24, r24
    4454:	29 f0       	breq	.+10     	; 0x4460 <_Z17handleLinkBusMsgsv+0x43c>
    4456:	83 e0       	ldi	r24, 0x03	; 3
    4458:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZL11g_sleepType>
    445c:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <_ZL13g_go_to_sleep>
    4460:	8c e3       	ldi	r24, 0x3C	; 60
    4462:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>
    4466:	80 91 bc 47 	lds	r24, 0x47BC	; 0x8047bc <_ZZ17handleLinkBusMsgsvE2ec>
    446a:	88 23       	and	r24, r24
    446c:	89 f4       	brne	.+34     	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    446e:	8f e9       	ldi	r24, 0x9F	; 159
    4470:	97 e4       	ldi	r25, 0x47	; 71
    4472:	0e 94 4a 45 	call	0x8a94	; 0x8a94 <_ZN13EepromManager13saveAllEEPROMEv>
    4476:	0c c0       	rjmp	.+24     	; 0x4490 <_Z17handleLinkBusMsgsv+0x46c>
    4478:	89 89       	ldd	r24, Y+17	; 0x11
    447a:	80 33       	cpi	r24, 0x30	; 48
    447c:	09 f0       	breq	.+2      	; 0x4480 <_Z17handleLinkBusMsgsv+0x45c>
    447e:	03 c4       	rjmp	.+2054   	; 0x4c86 <_Z17handleLinkBusMsgsv+0xc62>
    4480:	0e 94 55 2a 	call	0x54aa	; 0x54aa <_Z12suspendEventv>
    4484:	10 92 bb 47 	sts	0x47BB, r1	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4488:	8c ee       	ldi	r24, 0xEC	; 236
    448a:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    448e:	fb c3       	rjmp	.+2038   	; 0x4c86 <_Z17handleLinkBusMsgsv+0xc62>
    4490:	00 00       	nop
    4492:	f9 c3       	rjmp	.+2034   	; 0x4c86 <_Z17handleLinkBusMsgsv+0xc62>
    4494:	1a 82       	std	Y+2, r1	; 0x02
    4496:	1b 82       	std	Y+3, r1	; 0x03
    4498:	1c 82       	std	Y+4, r1	; 0x04
    449a:	1d 82       	std	Y+5, r1	; 0x05
    449c:	8a 85       	ldd	r24, Y+10	; 0x0a
    449e:	9b 85       	ldd	r25, Y+11	; 0x0b
    44a0:	fc 01       	movw	r30, r24
    44a2:	83 81       	ldd	r24, Z+3	; 0x03
    44a4:	83 35       	cpi	r24, 0x53	; 83
    44a6:	b1 f5       	brne	.+108    	; 0x4514 <_Z17handleLinkBusMsgsv+0x4f0>
    44a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    44aa:	9b 85       	ldd	r25, Y+11	; 0x0b
    44ac:	fc 01       	movw	r30, r24
    44ae:	80 8d       	ldd	r24, Z+24	; 0x18
    44b0:	88 23       	and	r24, r24
    44b2:	59 f0       	breq	.+22     	; 0x44ca <_Z17handleLinkBusMsgsv+0x4a6>
    44b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    44b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    44b8:	48 96       	adiw	r24, 0x18	; 24
    44ba:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    44be:	dc 01       	movw	r26, r24
    44c0:	cb 01       	movw	r24, r22
    44c2:	8a 83       	std	Y+2, r24	; 0x02
    44c4:	9b 83       	std	Y+3, r25	; 0x03
    44c6:	ac 83       	std	Y+4, r26	; 0x04
    44c8:	bd 83       	std	Y+5, r27	; 0x05
    44ca:	8a 81       	ldd	r24, Y+2	; 0x02
    44cc:	9b 81       	ldd	r25, Y+3	; 0x03
    44ce:	ac 81       	ldd	r26, Y+4	; 0x04
    44d0:	bd 81       	ldd	r27, Y+5	; 0x05
    44d2:	89 2b       	or	r24, r25
    44d4:	8a 2b       	or	r24, r26
    44d6:	8b 2b       	or	r24, r27
    44d8:	09 f4       	brne	.+2      	; 0x44dc <_Z17handleLinkBusMsgsv+0x4b8>
    44da:	d7 c3       	rjmp	.+1966   	; 0x4c8a <_Z17handleLinkBusMsgsv+0xc66>
    44dc:	8a 81       	ldd	r24, Y+2	; 0x02
    44de:	9b 81       	ldd	r25, Y+3	; 0x03
    44e0:	ac 81       	ldd	r26, Y+4	; 0x04
    44e2:	bd 81       	ldd	r27, Y+5	; 0x05
    44e4:	80 93 80 47 	sts	0x4780, r24	; 0x804780 <g_event_start_epoch>
    44e8:	90 93 81 47 	sts	0x4781, r25	; 0x804781 <g_event_start_epoch+0x1>
    44ec:	a0 93 82 47 	sts	0x4782, r26	; 0x804782 <g_event_start_epoch+0x2>
    44f0:	b0 93 83 47 	sts	0x4783, r27	; 0x804783 <g_event_start_epoch+0x3>
    44f4:	80 e0       	ldi	r24, 0x00	; 0
    44f6:	90 e0       	ldi	r25, 0x00	; 0
    44f8:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    44fc:	dc 01       	movw	r26, r24
    44fe:	cb 01       	movw	r24, r22
    4500:	bc 01       	movw	r22, r24
    4502:	cd 01       	movw	r24, r26
    4504:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    4508:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    450c:	8f 5f       	subi	r24, 0xFF	; 255
    450e:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4512:	bb c3       	rjmp	.+1910   	; 0x4c8a <_Z17handleLinkBusMsgsv+0xc66>
    4514:	8a 85       	ldd	r24, Y+10	; 0x0a
    4516:	9b 85       	ldd	r25, Y+11	; 0x0b
    4518:	fc 01       	movw	r30, r24
    451a:	83 81       	ldd	r24, Z+3	; 0x03
    451c:	86 34       	cpi	r24, 0x46	; 70
    451e:	09 f0       	breq	.+2      	; 0x4522 <_Z17handleLinkBusMsgsv+0x4fe>
    4520:	b4 c3       	rjmp	.+1896   	; 0x4c8a <_Z17handleLinkBusMsgsv+0xc66>
    4522:	8a 85       	ldd	r24, Y+10	; 0x0a
    4524:	9b 85       	ldd	r25, Y+11	; 0x0b
    4526:	fc 01       	movw	r30, r24
    4528:	80 8d       	ldd	r24, Z+24	; 0x18
    452a:	88 23       	and	r24, r24
    452c:	59 f0       	breq	.+22     	; 0x4544 <_Z17handleLinkBusMsgsv+0x520>
    452e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4530:	9b 85       	ldd	r25, Y+11	; 0x0b
    4532:	48 96       	adiw	r24, 0x18	; 24
    4534:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    4538:	dc 01       	movw	r26, r24
    453a:	cb 01       	movw	r24, r22
    453c:	8a 83       	std	Y+2, r24	; 0x02
    453e:	9b 83       	std	Y+3, r25	; 0x03
    4540:	ac 83       	std	Y+4, r26	; 0x04
    4542:	bd 83       	std	Y+5, r27	; 0x05
    4544:	8a 81       	ldd	r24, Y+2	; 0x02
    4546:	9b 81       	ldd	r25, Y+3	; 0x03
    4548:	ac 81       	ldd	r26, Y+4	; 0x04
    454a:	bd 81       	ldd	r27, Y+5	; 0x05
    454c:	89 2b       	or	r24, r25
    454e:	8a 2b       	or	r24, r26
    4550:	8b 2b       	or	r24, r27
    4552:	09 f4       	brne	.+2      	; 0x4556 <_Z17handleLinkBusMsgsv+0x532>
    4554:	9a c3       	rjmp	.+1844   	; 0x4c8a <_Z17handleLinkBusMsgsv+0xc66>
    4556:	8a 81       	ldd	r24, Y+2	; 0x02
    4558:	9b 81       	ldd	r25, Y+3	; 0x03
    455a:	ac 81       	ldd	r26, Y+4	; 0x04
    455c:	bd 81       	ldd	r27, Y+5	; 0x05
    455e:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    4562:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    4566:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    456a:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
    456e:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4572:	8f 5f       	subi	r24, 0xFF	; 255
    4574:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4578:	88 c3       	rjmp	.+1808   	; 0x4c8a <_Z17handleLinkBusMsgsv+0xc66>
    457a:	81 e0       	ldi	r24, 0x01	; 1
    457c:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <_ZL13g_wifi_active>
    4580:	8a 85       	ldd	r24, Y+10	; 0x0a
    4582:	9b 85       	ldd	r25, Y+11	; 0x0b
    4584:	fc 01       	movw	r30, r24
    4586:	80 81       	ld	r24, Z
    4588:	81 30       	cpi	r24, 0x01	; 1
    458a:	09 f0       	breq	.+2      	; 0x458e <_Z17handleLinkBusMsgsv+0x56a>
    458c:	4a c0       	rjmp	.+148    	; 0x4622 <_Z17handleLinkBusMsgsv+0x5fe>
    458e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4590:	9b 85       	ldd	r25, Y+11	; 0x0b
    4592:	fc 01       	movw	r30, r24
    4594:	83 81       	ldd	r24, Z+3	; 0x03
    4596:	88 23       	and	r24, r24
    4598:	d1 f0       	breq	.+52     	; 0x45ce <_Z17handleLinkBusMsgsv+0x5aa>
    459a:	8a 85       	ldd	r24, Y+10	; 0x0a
    459c:	9b 85       	ldd	r25, Y+11	; 0x0b
    459e:	03 96       	adiw	r24, 0x03	; 3
    45a0:	44 e1       	ldi	r20, 0x14	; 20
    45a2:	50 e0       	ldi	r21, 0x00	; 0
    45a4:	bc 01       	movw	r22, r24
    45a6:	8d e0       	ldi	r24, 0x0D	; 13
    45a8:	97 e4       	ldi	r25, 0x47	; 71
    45aa:	0e 94 b5 77 	call	0xef6a	; 0xef6a <strncpy>
    45ae:	60 e0       	ldi	r22, 0x00	; 0
    45b0:	8d e0       	ldi	r24, 0x0D	; 13
    45b2:	97 e4       	ldi	r25, 0x47	; 71
    45b4:	0e 94 8c 40 	call	0x8118	; 0x8118 <ds3231_set_date_time>
    45b8:	80 e0       	ldi	r24, 0x00	; 0
    45ba:	90 e0       	ldi	r25, 0x00	; 0
    45bc:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    45c0:	dc 01       	movw	r26, r24
    45c2:	cb 01       	movw	r24, r22
    45c4:	bc 01       	movw	r22, r24
    45c6:	cd 01       	movw	r24, r26
    45c8:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    45cc:	60 c3       	rjmp	.+1728   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    45ce:	80 e0       	ldi	r24, 0x00	; 0
    45d0:	90 e0       	ldi	r25, 0x00	; 0
    45d2:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    45d6:	dc 01       	movw	r26, r24
    45d8:	cb 01       	movw	r24, r22
    45da:	2b 2f       	mov	r18, r27
    45dc:	2f 93       	push	r18
    45de:	2a 2f       	mov	r18, r26
    45e0:	2f 93       	push	r18
    45e2:	29 2f       	mov	r18, r25
    45e4:	2f 93       	push	r18
    45e6:	8f 93       	push	r24
    45e8:	8d e4       	ldi	r24, 0x4D	; 77
    45ea:	90 e4       	ldi	r25, 0x40	; 64
    45ec:	89 2f       	mov	r24, r25
    45ee:	8f 93       	push	r24
    45f0:	8d e4       	ldi	r24, 0x4D	; 77
    45f2:	90 e4       	ldi	r25, 0x40	; 64
    45f4:	8f 93       	push	r24
    45f6:	8d e0       	ldi	r24, 0x0D	; 13
    45f8:	97 e4       	ldi	r25, 0x47	; 71
    45fa:	89 2f       	mov	r24, r25
    45fc:	8f 93       	push	r24
    45fe:	8d e0       	ldi	r24, 0x0D	; 13
    4600:	97 e4       	ldi	r25, 0x47	; 71
    4602:	8f 93       	push	r24
    4604:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    4608:	8d b7       	in	r24, 0x3d	; 61
    460a:	9e b7       	in	r25, 0x3e	; 62
    460c:	08 96       	adiw	r24, 0x08	; 8
    460e:	cd bf       	out	0x3d, r28	; 61
    4610:	de bf       	out	0x3e, r29	; 62
    4612:	4d e0       	ldi	r20, 0x0D	; 13
    4614:	57 e4       	ldi	r21, 0x47	; 71
    4616:	61 e5       	ldi	r22, 0x51	; 81
    4618:	70 e4       	ldi	r23, 0x40	; 64
    461a:	83 e0       	ldi	r24, 0x03	; 3
    461c:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4620:	36 c3       	rjmp	.+1644   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    4622:	8a 85       	ldd	r24, Y+10	; 0x0a
    4624:	9b 85       	ldd	r25, Y+11	; 0x0b
    4626:	fc 01       	movw	r30, r24
    4628:	80 81       	ld	r24, Z
    462a:	82 30       	cpi	r24, 0x02	; 2
    462c:	09 f0       	breq	.+2      	; 0x4630 <_Z17handleLinkBusMsgsv+0x60c>
    462e:	2f c3       	rjmp	.+1630   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    4630:	8a 85       	ldd	r24, Y+10	; 0x0a
    4632:	9b 85       	ldd	r25, Y+11	; 0x0b
    4634:	fc 01       	movw	r30, r24
    4636:	83 81       	ldd	r24, Z+3	; 0x03
    4638:	88 35       	cpi	r24, 0x58	; 88
    463a:	c9 f5       	brne	.+114    	; 0x46ae <_Z17handleLinkBusMsgsv+0x68a>
    463c:	1a 8a       	std	Y+18, r1	; 0x12
    463e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4640:	9b 85       	ldd	r25, Y+11	; 0x0b
    4642:	fc 01       	movw	r30, r24
    4644:	80 8d       	ldd	r24, Z+24	; 0x18
    4646:	88 23       	and	r24, r24
    4648:	51 f0       	breq	.+20     	; 0x465e <_Z17handleLinkBusMsgsv+0x63a>
    464a:	8a 85       	ldd	r24, Y+10	; 0x0a
    464c:	9b 85       	ldd	r25, Y+11	; 0x0b
    464e:	48 96       	adiw	r24, 0x18	; 24
    4650:	0e 94 3b 77 	call	0xee76	; 0xee76 <atoi>
    4654:	8a 8b       	std	Y+18, r24	; 0x12
    4656:	8a 89       	ldd	r24, Y+18	; 0x12
    4658:	0e 94 e4 41 	call	0x83c8	; 0x83c8 <ds3231_set_aging>
    465c:	18 c3       	rjmp	.+1584   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    465e:	0e 94 13 42 	call	0x8426	; 0x8426 <ds3231_get_aging>
    4662:	8a 8b       	std	Y+18, r24	; 0x12
    4664:	8a 89       	ldd	r24, Y+18	; 0x12
    4666:	08 2e       	mov	r0, r24
    4668:	00 0c       	add	r0, r0
    466a:	99 0b       	sbc	r25, r25
    466c:	29 2f       	mov	r18, r25
    466e:	2f 93       	push	r18
    4670:	8f 93       	push	r24
    4672:	8b eb       	ldi	r24, 0xBB	; 187
    4674:	92 e4       	ldi	r25, 0x42	; 66
    4676:	89 2f       	mov	r24, r25
    4678:	8f 93       	push	r24
    467a:	8b eb       	ldi	r24, 0xBB	; 187
    467c:	92 e4       	ldi	r25, 0x42	; 66
    467e:	8f 93       	push	r24
    4680:	8d e0       	ldi	r24, 0x0D	; 13
    4682:	97 e4       	ldi	r25, 0x47	; 71
    4684:	89 2f       	mov	r24, r25
    4686:	8f 93       	push	r24
    4688:	8d e0       	ldi	r24, 0x0D	; 13
    468a:	97 e4       	ldi	r25, 0x47	; 71
    468c:	8f 93       	push	r24
    468e:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    4692:	0f 90       	pop	r0
    4694:	0f 90       	pop	r0
    4696:	0f 90       	pop	r0
    4698:	0f 90       	pop	r0
    469a:	0f 90       	pop	r0
    469c:	0f 90       	pop	r0
    469e:	4d e0       	ldi	r20, 0x0D	; 13
    46a0:	57 e4       	ldi	r21, 0x47	; 71
    46a2:	61 e5       	ldi	r22, 0x51	; 81
    46a4:	70 e4       	ldi	r23, 0x40	; 64
    46a6:	83 e0       	ldi	r24, 0x03	; 3
    46a8:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    46ac:	f0 c2       	rjmp	.+1504   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    46ae:	80 e0       	ldi	r24, 0x00	; 0
    46b0:	90 e0       	ldi	r25, 0x00	; 0
    46b2:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    46b6:	dc 01       	movw	r26, r24
    46b8:	cb 01       	movw	r24, r22
    46ba:	8b 8b       	std	Y+19, r24	; 0x13
    46bc:	9c 8b       	std	Y+20, r25	; 0x14
    46be:	ad 8b       	std	Y+21, r26	; 0x15
    46c0:	be 8b       	std	Y+22, r27	; 0x16
    46c2:	8b 89       	ldd	r24, Y+19	; 0x13
    46c4:	9c 89       	ldd	r25, Y+20	; 0x14
    46c6:	ad 89       	ldd	r26, Y+21	; 0x15
    46c8:	be 89       	ldd	r27, Y+22	; 0x16
    46ca:	bc 01       	movw	r22, r24
    46cc:	cd 01       	movw	r24, r26
    46ce:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    46d2:	80 91 bd 47 	lds	r24, 0x47BD	; 0x8047bd <_ZZ17handleLinkBusMsgsvE8lastTime>
    46d6:	90 91 be 47 	lds	r25, 0x47BE	; 0x8047be <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    46da:	a0 91 bf 47 	lds	r26, 0x47BF	; 0x8047bf <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    46de:	b0 91 c0 47 	lds	r27, 0x47C0	; 0x8047c0 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    46e2:	2b 89       	ldd	r18, Y+19	; 0x13
    46e4:	3c 89       	ldd	r19, Y+20	; 0x14
    46e6:	4d 89       	ldd	r20, Y+21	; 0x15
    46e8:	5e 89       	ldd	r21, Y+22	; 0x16
    46ea:	28 17       	cp	r18, r24
    46ec:	39 07       	cpc	r19, r25
    46ee:	4a 07       	cpc	r20, r26
    46f0:	5b 07       	cpc	r21, r27
    46f2:	09 f4       	brne	.+2      	; 0x46f6 <_Z17handleLinkBusMsgsv+0x6d2>
    46f4:	cc c2       	rjmp	.+1432   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    46f6:	8e 89       	ldd	r24, Y+22	; 0x16
    46f8:	8f 93       	push	r24
    46fa:	8d 89       	ldd	r24, Y+21	; 0x15
    46fc:	8f 93       	push	r24
    46fe:	8c 89       	ldd	r24, Y+20	; 0x14
    4700:	8f 93       	push	r24
    4702:	8b 89       	ldd	r24, Y+19	; 0x13
    4704:	8f 93       	push	r24
    4706:	8d e4       	ldi	r24, 0x4D	; 77
    4708:	90 e4       	ldi	r25, 0x40	; 64
    470a:	89 2f       	mov	r24, r25
    470c:	8f 93       	push	r24
    470e:	8d e4       	ldi	r24, 0x4D	; 77
    4710:	90 e4       	ldi	r25, 0x40	; 64
    4712:	8f 93       	push	r24
    4714:	8d e0       	ldi	r24, 0x0D	; 13
    4716:	97 e4       	ldi	r25, 0x47	; 71
    4718:	89 2f       	mov	r24, r25
    471a:	8f 93       	push	r24
    471c:	8d e0       	ldi	r24, 0x0D	; 13
    471e:	97 e4       	ldi	r25, 0x47	; 71
    4720:	8f 93       	push	r24
    4722:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    4726:	8d b7       	in	r24, 0x3d	; 61
    4728:	9e b7       	in	r25, 0x3e	; 62
    472a:	08 96       	adiw	r24, 0x08	; 8
    472c:	cd bf       	out	0x3d, r28	; 61
    472e:	de bf       	out	0x3e, r29	; 62
    4730:	4d e0       	ldi	r20, 0x0D	; 13
    4732:	57 e4       	ldi	r21, 0x47	; 71
    4734:	61 e5       	ldi	r22, 0x51	; 81
    4736:	70 e4       	ldi	r23, 0x40	; 64
    4738:	83 e0       	ldi	r24, 0x03	; 3
    473a:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    473e:	8b 89       	ldd	r24, Y+19	; 0x13
    4740:	9c 89       	ldd	r25, Y+20	; 0x14
    4742:	ad 89       	ldd	r26, Y+21	; 0x15
    4744:	be 89       	ldd	r27, Y+22	; 0x16
    4746:	80 93 bd 47 	sts	0x47BD, r24	; 0x8047bd <_ZZ17handleLinkBusMsgsvE8lastTime>
    474a:	90 93 be 47 	sts	0x47BE, r25	; 0x8047be <_ZZ17handleLinkBusMsgsvE8lastTime+0x1>
    474e:	a0 93 bf 47 	sts	0x47BF, r26	; 0x8047bf <_ZZ17handleLinkBusMsgsvE8lastTime+0x2>
    4752:	b0 93 c0 47 	sts	0x47C0, r27	; 0x8047c0 <_ZZ17handleLinkBusMsgsvE8lastTime+0x3>
    4756:	9b c2       	rjmp	.+1334   	; 0x4c8e <_Z17handleLinkBusMsgsv+0xc6a>
    4758:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    475c:	8f 5f       	subi	r24, 0xFF	; 255
    475e:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4762:	8a 85       	ldd	r24, Y+10	; 0x0a
    4764:	9b 85       	ldd	r25, Y+11	; 0x0b
    4766:	fc 01       	movw	r30, r24
    4768:	83 81       	ldd	r24, Z+3	; 0x03
    476a:	88 23       	and	r24, r24
    476c:	81 f1       	breq	.+96     	; 0x47ce <_Z17handleLinkBusMsgsv+0x7aa>
    476e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4770:	9b 85       	ldd	r25, Y+11	; 0x0b
    4772:	03 96       	adiw	r24, 0x03	; 3
    4774:	44 e1       	ldi	r20, 0x14	; 20
    4776:	50 e0       	ldi	r21, 0x00	; 0
    4778:	bc 01       	movw	r22, r24
    477a:	87 e6       	ldi	r24, 0x67	; 103
    477c:	97 e4       	ldi	r25, 0x47	; 71
    477e:	0e 94 b5 77 	call	0xef6a	; 0xef6a <strncpy>
    4782:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    4786:	88 23       	and	r24, r24
    4788:	09 f4       	brne	.+2      	; 0x478c <_Z17handleLinkBusMsgsv+0x768>
    478a:	83 c2       	rjmp	.+1286   	; 0x4c92 <_Z17handleLinkBusMsgsv+0xc6e>
    478c:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4790:	88 2f       	mov	r24, r24
    4792:	90 e0       	ldi	r25, 0x00	; 0
    4794:	bc 01       	movw	r22, r24
    4796:	87 e6       	ldi	r24, 0x67	; 103
    4798:	97 e4       	ldi	r25, 0x47	; 71
    479a:	0e 94 f4 57 	call	0xafe8	; 0xafe8 <_Z26timeRequiredToSendStrAtWPMPcj>
    479e:	8c 50       	subi	r24, 0x0C	; 12
    47a0:	9e 4f       	sbci	r25, 0xFE	; 254
    47a2:	96 95       	lsr	r25
    47a4:	87 95       	ror	r24
    47a6:	96 95       	lsr	r25
    47a8:	87 95       	ror	r24
    47aa:	96 95       	lsr	r25
    47ac:	87 95       	ror	r24
    47ae:	9c 01       	movw	r18, r24
    47b0:	a5 ec       	ldi	r26, 0xC5	; 197
    47b2:	b0 e2       	ldi	r27, 0x20	; 32
    47b4:	0e 94 fc 75 	call	0xebf8	; 0xebf8 <__umulhisi3>
    47b8:	92 95       	swap	r25
    47ba:	82 95       	swap	r24
    47bc:	8f 70       	andi	r24, 0x0F	; 15
    47be:	89 27       	eor	r24, r25
    47c0:	9f 70       	andi	r25, 0x0F	; 15
    47c2:	89 27       	eor	r24, r25
    47c4:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <g_time_needed_for_ID>
    47c8:	90 93 7d 47 	sts	0x477D, r25	; 0x80477d <g_time_needed_for_ID+0x1>
    47cc:	62 c2       	rjmp	.+1220   	; 0x4c92 <_Z17handleLinkBusMsgsv+0xc6e>
    47ce:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    47d2:	88 23       	and	r24, r24
    47d4:	09 f4       	brne	.+2      	; 0x47d8 <_Z17handleLinkBusMsgsv+0x7b4>
    47d6:	5d c2       	rjmp	.+1210   	; 0x4c92 <_Z17handleLinkBusMsgsv+0xc6e>
    47d8:	87 e6       	ldi	r24, 0x67	; 103
    47da:	97 e4       	ldi	r25, 0x47	; 71
    47dc:	89 2f       	mov	r24, r25
    47de:	8f 93       	push	r24
    47e0:	87 e6       	ldi	r24, 0x67	; 103
    47e2:	97 e4       	ldi	r25, 0x47	; 71
    47e4:	8f 93       	push	r24
    47e6:	80 ec       	ldi	r24, 0xC0	; 192
    47e8:	92 e4       	ldi	r25, 0x42	; 66
    47ea:	89 2f       	mov	r24, r25
    47ec:	8f 93       	push	r24
    47ee:	80 ec       	ldi	r24, 0xC0	; 192
    47f0:	92 e4       	ldi	r25, 0x42	; 66
    47f2:	8f 93       	push	r24
    47f4:	8d e0       	ldi	r24, 0x0D	; 13
    47f6:	97 e4       	ldi	r25, 0x47	; 71
    47f8:	89 2f       	mov	r24, r25
    47fa:	8f 93       	push	r24
    47fc:	8d e0       	ldi	r24, 0x0D	; 13
    47fe:	97 e4       	ldi	r25, 0x47	; 71
    4800:	8f 93       	push	r24
    4802:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    4806:	0f 90       	pop	r0
    4808:	0f 90       	pop	r0
    480a:	0f 90       	pop	r0
    480c:	0f 90       	pop	r0
    480e:	0f 90       	pop	r0
    4810:	0f 90       	pop	r0
    4812:	8d e0       	ldi	r24, 0x0D	; 13
    4814:	97 e4       	ldi	r25, 0x47	; 71
    4816:	0e 94 8e 55 	call	0xab1c	; 0xab1c <_Z12lb_send_textPc>
    481a:	19 82       	std	Y+1, r1	; 0x01
    481c:	3a c2       	rjmp	.+1140   	; 0x4c92 <_Z17handleLinkBusMsgsv+0xc6e>
    481e:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    4822:	8f 8b       	std	Y+23, r24	; 0x17
    4824:	8a 85       	ldd	r24, Y+10	; 0x0a
    4826:	9b 85       	ldd	r25, Y+11	; 0x0b
    4828:	fc 01       	movw	r30, r24
    482a:	83 81       	ldd	r24, Z+3	; 0x03
    482c:	89 34       	cpi	r24, 0x49	; 73
    482e:	09 f0       	breq	.+2      	; 0x4832 <_Z17handleLinkBusMsgsv+0x80e>
    4830:	4f c0       	rjmp	.+158    	; 0x48d0 <_Z17handleLinkBusMsgsv+0x8ac>
    4832:	8a 85       	ldd	r24, Y+10	; 0x0a
    4834:	9b 85       	ldd	r25, Y+11	; 0x0b
    4836:	fc 01       	movw	r30, r24
    4838:	80 8d       	ldd	r24, Z+24	; 0x18
    483a:	88 23       	and	r24, r24
    483c:	09 f4       	brne	.+2      	; 0x4840 <_Z17handleLinkBusMsgsv+0x81c>
    483e:	2b c2       	rjmp	.+1110   	; 0x4c96 <_Z17handleLinkBusMsgsv+0xc72>
    4840:	8a 85       	ldd	r24, Y+10	; 0x0a
    4842:	9b 85       	ldd	r25, Y+11	; 0x0b
    4844:	48 96       	adiw	r24, 0x18	; 24
    4846:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    484a:	dc 01       	movw	r26, r24
    484c:	cb 01       	movw	r24, r22
    484e:	8f 8b       	std	Y+23, r24	; 0x17
    4850:	8f 89       	ldd	r24, Y+23	; 0x17
    4852:	88 8f       	std	Y+24, r24	; 0x18
    4854:	85 e0       	ldi	r24, 0x05	; 5
    4856:	89 8f       	std	Y+25, r24	; 0x19
    4858:	84 e1       	ldi	r24, 0x14	; 20
    485a:	8a 8f       	std	Y+26, r24	; 0x1a
    485c:	98 8d       	ldd	r25, Y+24	; 0x18
    485e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4860:	89 17       	cp	r24, r25
    4862:	40 f0       	brcs	.+16     	; 0x4874 <_Z17handleLinkBusMsgsv+0x850>
    4864:	98 8d       	ldd	r25, Y+24	; 0x18
    4866:	89 8d       	ldd	r24, Y+25	; 0x19
    4868:	98 17       	cp	r25, r24
    486a:	10 f4       	brcc	.+4      	; 0x4870 <_Z17handleLinkBusMsgsv+0x84c>
    486c:	89 8d       	ldd	r24, Y+25	; 0x19
    486e:	03 c0       	rjmp	.+6      	; 0x4876 <_Z17handleLinkBusMsgsv+0x852>
    4870:	88 8d       	ldd	r24, Y+24	; 0x18
    4872:	01 c0       	rjmp	.+2      	; 0x4876 <_Z17handleLinkBusMsgsv+0x852>
    4874:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4876:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
    487a:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    487e:	8f 5f       	subi	r24, 0xFF	; 255
    4880:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4884:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    4888:	88 23       	and	r24, r24
    488a:	09 f4       	brne	.+2      	; 0x488e <_Z17handleLinkBusMsgsv+0x86a>
    488c:	04 c2       	rjmp	.+1032   	; 0x4c96 <_Z17handleLinkBusMsgsv+0xc72>
    488e:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    4892:	88 2f       	mov	r24, r24
    4894:	90 e0       	ldi	r25, 0x00	; 0
    4896:	bc 01       	movw	r22, r24
    4898:	87 e6       	ldi	r24, 0x67	; 103
    489a:	97 e4       	ldi	r25, 0x47	; 71
    489c:	0e 94 f4 57 	call	0xafe8	; 0xafe8 <_Z26timeRequiredToSendStrAtWPMPcj>
    48a0:	8c 50       	subi	r24, 0x0C	; 12
    48a2:	9e 4f       	sbci	r25, 0xFE	; 254
    48a4:	96 95       	lsr	r25
    48a6:	87 95       	ror	r24
    48a8:	96 95       	lsr	r25
    48aa:	87 95       	ror	r24
    48ac:	96 95       	lsr	r25
    48ae:	87 95       	ror	r24
    48b0:	9c 01       	movw	r18, r24
    48b2:	a5 ec       	ldi	r26, 0xC5	; 197
    48b4:	b0 e2       	ldi	r27, 0x20	; 32
    48b6:	0e 94 fc 75 	call	0xebf8	; 0xebf8 <__umulhisi3>
    48ba:	92 95       	swap	r25
    48bc:	82 95       	swap	r24
    48be:	8f 70       	andi	r24, 0x0F	; 15
    48c0:	89 27       	eor	r24, r25
    48c2:	9f 70       	andi	r25, 0x0F	; 15
    48c4:	89 27       	eor	r24, r25
    48c6:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <g_time_needed_for_ID>
    48ca:	90 93 7d 47 	sts	0x477D, r25	; 0x80477d <g_time_needed_for_ID+0x1>
    48ce:	e3 c1       	rjmp	.+966    	; 0x4c96 <_Z17handleLinkBusMsgsv+0xc72>
    48d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    48d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    48d4:	fc 01       	movw	r30, r24
    48d6:	83 81       	ldd	r24, Z+3	; 0x03
    48d8:	80 35       	cpi	r24, 0x50	; 80
    48da:	09 f0       	breq	.+2      	; 0x48de <_Z17handleLinkBusMsgsv+0x8ba>
    48dc:	dc c1       	rjmp	.+952    	; 0x4c96 <_Z17handleLinkBusMsgsv+0xc72>
    48de:	8a 85       	ldd	r24, Y+10	; 0x0a
    48e0:	9b 85       	ldd	r25, Y+11	; 0x0b
    48e2:	fc 01       	movw	r30, r24
    48e4:	80 8d       	ldd	r24, Z+24	; 0x18
    48e6:	88 23       	and	r24, r24
    48e8:	09 f4       	brne	.+2      	; 0x48ec <_Z17handleLinkBusMsgsv+0x8c8>
    48ea:	d5 c1       	rjmp	.+938    	; 0x4c96 <_Z17handleLinkBusMsgsv+0xc72>
    48ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    48ee:	9b 85       	ldd	r25, Y+11	; 0x0b
    48f0:	48 96       	adiw	r24, 0x18	; 24
    48f2:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    48f6:	dc 01       	movw	r26, r24
    48f8:	cb 01       	movw	r24, r22
    48fa:	8f 8b       	std	Y+23, r24	; 0x17
    48fc:	8f 89       	ldd	r24, Y+23	; 0x17
    48fe:	8b 8f       	std	Y+27, r24	; 0x1b
    4900:	85 e0       	ldi	r24, 0x05	; 5
    4902:	90 e0       	ldi	r25, 0x00	; 0
    4904:	8c 8f       	std	Y+28, r24	; 0x1c
    4906:	9d 8f       	std	Y+29, r25	; 0x1d
    4908:	84 e1       	ldi	r24, 0x14	; 20
    490a:	90 e0       	ldi	r25, 0x00	; 0
    490c:	8e 8f       	std	Y+30, r24	; 0x1e
    490e:	9f 8f       	std	Y+31, r25	; 0x1f
    4910:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4912:	28 2f       	mov	r18, r24
    4914:	30 e0       	ldi	r19, 0x00	; 0
    4916:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4918:	9f 8d       	ldd	r25, Y+31	; 0x1f
    491a:	82 17       	cp	r24, r18
    491c:	93 07       	cpc	r25, r19
    491e:	54 f0       	brlt	.+20     	; 0x4934 <_Z17handleLinkBusMsgsv+0x910>
    4920:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4922:	88 2f       	mov	r24, r24
    4924:	90 e0       	ldi	r25, 0x00	; 0
    4926:	2c 8d       	ldd	r18, Y+28	; 0x1c
    4928:	3d 8d       	ldd	r19, Y+29	; 0x1d
    492a:	82 17       	cp	r24, r18
    492c:	93 07       	cpc	r25, r19
    492e:	24 f4       	brge	.+8      	; 0x4938 <_Z17handleLinkBusMsgsv+0x914>
    4930:	c9 01       	movw	r24, r18
    4932:	02 c0       	rjmp	.+4      	; 0x4938 <_Z17handleLinkBusMsgsv+0x914>
    4934:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4936:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4938:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
    493c:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4940:	8f 5f       	subi	r24, 0xFF	; 255
    4942:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4946:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    494a:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    494e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    4952:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    4956:	9f c1       	rjmp	.+830    	; 0x4c96 <_Z17handleLinkBusMsgsv+0xc72>
    4958:	18 a2       	std	Y+32, r1	; 0x20
    495a:	19 a2       	std	Y+33, r1	; 0x21
    495c:	8a 85       	ldd	r24, Y+10	; 0x0a
    495e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4960:	fc 01       	movw	r30, r24
    4962:	83 81       	ldd	r24, Z+3	; 0x03
    4964:	80 33       	cpi	r24, 0x30	; 48
    4966:	e1 f4       	brne	.+56     	; 0x49a0 <_Z17handleLinkBusMsgsv+0x97c>
    4968:	8a 85       	ldd	r24, Y+10	; 0x0a
    496a:	9b 85       	ldd	r25, Y+11	; 0x0b
    496c:	fc 01       	movw	r30, r24
    496e:	80 8d       	ldd	r24, Z+24	; 0x18
    4970:	88 23       	and	r24, r24
    4972:	09 f4       	brne	.+2      	; 0x4976 <_Z17handleLinkBusMsgsv+0x952>
    4974:	92 c1       	rjmp	.+804    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    4976:	8a 85       	ldd	r24, Y+10	; 0x0a
    4978:	9b 85       	ldd	r25, Y+11	; 0x0b
    497a:	48 96       	adiw	r24, 0x18	; 24
    497c:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    4980:	dc 01       	movw	r26, r24
    4982:	cb 01       	movw	r24, r22
    4984:	88 a3       	std	Y+32, r24	; 0x20
    4986:	99 a3       	std	Y+33, r25	; 0x21
    4988:	88 a1       	ldd	r24, Y+32	; 0x20
    498a:	99 a1       	ldd	r25, Y+33	; 0x21
    498c:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    4990:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
    4994:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4998:	8f 5f       	subi	r24, 0xFF	; 255
    499a:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    499e:	7d c1       	rjmp	.+762    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    49a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    49a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    49a4:	fc 01       	movw	r30, r24
    49a6:	83 81       	ldd	r24, Z+3	; 0x03
    49a8:	81 33       	cpi	r24, 0x31	; 49
    49aa:	e1 f4       	brne	.+56     	; 0x49e4 <_Z17handleLinkBusMsgsv+0x9c0>
    49ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    49ae:	9b 85       	ldd	r25, Y+11	; 0x0b
    49b0:	fc 01       	movw	r30, r24
    49b2:	80 8d       	ldd	r24, Z+24	; 0x18
    49b4:	88 23       	and	r24, r24
    49b6:	09 f4       	brne	.+2      	; 0x49ba <_Z17handleLinkBusMsgsv+0x996>
    49b8:	70 c1       	rjmp	.+736    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    49ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    49bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    49be:	48 96       	adiw	r24, 0x18	; 24
    49c0:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    49c4:	dc 01       	movw	r26, r24
    49c6:	cb 01       	movw	r24, r22
    49c8:	88 a3       	std	Y+32, r24	; 0x20
    49ca:	99 a3       	std	Y+33, r25	; 0x21
    49cc:	88 a1       	ldd	r24, Y+32	; 0x20
    49ce:	99 a1       	ldd	r25, Y+33	; 0x21
    49d0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    49d4:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
    49d8:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    49dc:	8f 5f       	subi	r24, 0xFF	; 255
    49de:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    49e2:	5b c1       	rjmp	.+694    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    49e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    49e6:	9b 85       	ldd	r25, Y+11	; 0x0b
    49e8:	fc 01       	movw	r30, r24
    49ea:	83 81       	ldd	r24, Z+3	; 0x03
    49ec:	89 34       	cpi	r24, 0x49	; 73
    49ee:	e1 f4       	brne	.+56     	; 0x4a28 <_Z17handleLinkBusMsgsv+0xa04>
    49f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    49f2:	9b 85       	ldd	r25, Y+11	; 0x0b
    49f4:	fc 01       	movw	r30, r24
    49f6:	80 8d       	ldd	r24, Z+24	; 0x18
    49f8:	88 23       	and	r24, r24
    49fa:	09 f4       	brne	.+2      	; 0x49fe <_Z17handleLinkBusMsgsv+0x9da>
    49fc:	4e c1       	rjmp	.+668    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    49fe:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a00:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a02:	48 96       	adiw	r24, 0x18	; 24
    4a04:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    4a08:	dc 01       	movw	r26, r24
    4a0a:	cb 01       	movw	r24, r22
    4a0c:	88 a3       	std	Y+32, r24	; 0x20
    4a0e:	99 a3       	std	Y+33, r25	; 0x21
    4a10:	88 a1       	ldd	r24, Y+32	; 0x20
    4a12:	99 a1       	ldd	r25, Y+33	; 0x21
    4a14:	80 93 11 40 	sts	0x4011, r24	; 0x804011 <g_ID_period_seconds>
    4a18:	90 93 12 40 	sts	0x4012, r25	; 0x804012 <g_ID_period_seconds+0x1>
    4a1c:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4a20:	8f 5f       	subi	r24, 0xFF	; 255
    4a22:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4a26:	39 c1       	rjmp	.+626    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    4a28:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a2a:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a2c:	fc 01       	movw	r30, r24
    4a2e:	83 81       	ldd	r24, Z+3	; 0x03
    4a30:	84 34       	cpi	r24, 0x44	; 68
    4a32:	09 f0       	breq	.+2      	; 0x4a36 <_Z17handleLinkBusMsgsv+0xa12>
    4a34:	32 c1       	rjmp	.+612    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    4a36:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a38:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a3a:	fc 01       	movw	r30, r24
    4a3c:	80 8d       	ldd	r24, Z+24	; 0x18
    4a3e:	88 23       	and	r24, r24
    4a40:	09 f4       	brne	.+2      	; 0x4a44 <_Z17handleLinkBusMsgsv+0xa20>
    4a42:	2b c1       	rjmp	.+598    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    4a44:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a46:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a48:	48 96       	adiw	r24, 0x18	; 24
    4a4a:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    4a4e:	dc 01       	movw	r26, r24
    4a50:	cb 01       	movw	r24, r22
    4a52:	88 a3       	std	Y+32, r24	; 0x20
    4a54:	99 a3       	std	Y+33, r25	; 0x21
    4a56:	88 a1       	ldd	r24, Y+32	; 0x20
    4a58:	99 a1       	ldd	r25, Y+33	; 0x21
    4a5a:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    4a5e:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
    4a62:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4a66:	8f 5f       	subi	r24, 0xFF	; 255
    4a68:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4a6c:	16 c1       	rjmp	.+556    	; 0x4c9a <_Z17handleLinkBusMsgsv+0xc76>
    4a6e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a70:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a72:	fc 01       	movw	r30, r24
    4a74:	83 81       	ldd	r24, Z+3	; 0x03
    4a76:	88 23       	and	r24, r24
    4a78:	09 f4       	brne	.+2      	; 0x4a7c <_Z17handleLinkBusMsgsv+0xa58>
    4a7a:	11 c1       	rjmp	.+546    	; 0x4c9e <_Z17handleLinkBusMsgsv+0xc7a>
    4a7c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4a7e:	9b 85       	ldd	r25, Y+11	; 0x0b
    4a80:	03 96       	adiw	r24, 0x03	; 3
    4a82:	44 e1       	ldi	r20, 0x14	; 20
    4a84:	50 e0       	ldi	r21, 0x00	; 0
    4a86:	bc 01       	movw	r22, r24
    4a88:	82 e5       	ldi	r24, 0x52	; 82
    4a8a:	97 e4       	ldi	r25, 0x47	; 71
    4a8c:	0e 94 b5 77 	call	0xef6a	; 0xef6a <strncpy>
    4a90:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4a94:	8f 5f       	subi	r24, 0xFF	; 255
    4a96:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4a9a:	01 c1       	rjmp	.+514    	; 0x4c9e <_Z17handleLinkBusMsgsv+0xc7a>
    4a9c:	1e 82       	std	Y+6, r1	; 0x06
    4a9e:	1f 82       	std	Y+7, r1	; 0x07
    4aa0:	18 86       	std	Y+8, r1	; 0x08
    4aa2:	19 86       	std	Y+9, r1	; 0x09
    4aa4:	8a 85       	ldd	r24, Y+10	; 0x0a
    4aa6:	9b 85       	ldd	r25, Y+11	; 0x0b
    4aa8:	fc 01       	movw	r30, r24
    4aaa:	83 81       	ldd	r24, Z+3	; 0x03
    4aac:	88 23       	and	r24, r24
    4aae:	99 f1       	breq	.+102    	; 0x4b16 <_Z17handleLinkBusMsgsv+0xaf2>
    4ab0:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ab2:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ab4:	03 96       	adiw	r24, 0x03	; 3
    4ab6:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    4aba:	dc 01       	movw	r26, r24
    4abc:	cb 01       	movw	r24, r22
    4abe:	80 93 c1 47 	sts	0x47C1, r24	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE1f>
    4ac2:	90 93 c2 47 	sts	0x47C2, r25	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    4ac6:	a0 93 c3 47 	sts	0x47C3, r26	; 0x8047c3 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    4aca:	b0 93 c4 47 	sts	0x47C4, r27	; 0x8047c4 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    4ace:	80 91 c1 47 	lds	r24, 0x47C1	; 0x8047c1 <_ZZ17handleLinkBusMsgsvE1f>
    4ad2:	90 91 c2 47 	lds	r25, 0x47C2	; 0x8047c2 <_ZZ17handleLinkBusMsgsvE1f+0x1>
    4ad6:	a0 91 c3 47 	lds	r26, 0x47C3	; 0x8047c3 <_ZZ17handleLinkBusMsgsvE1f+0x2>
    4ada:	b0 91 c4 47 	lds	r27, 0x47C4	; 0x8047c4 <_ZZ17handleLinkBusMsgsvE1f+0x3>
    4ade:	8a a7       	std	Y+42, r24	; 0x2a
    4ae0:	9b a7       	std	Y+43, r25	; 0x2b
    4ae2:	ac a7       	std	Y+44, r26	; 0x2c
    4ae4:	bd a7       	std	Y+45, r27	; 0x2d
    4ae6:	ce 01       	movw	r24, r28
    4ae8:	8a 96       	adiw	r24, 0x2a	; 42
    4aea:	61 e0       	ldi	r22, 0x01	; 1
    4aec:	0e 94 e0 6a 	call	0xd5c0	; 0xd5c0 <_Z14txSetFrequencyPmb>
    4af0:	98 2f       	mov	r25, r24
    4af2:	81 e0       	ldi	r24, 0x01	; 1
    4af4:	89 27       	eor	r24, r25
    4af6:	88 23       	and	r24, r24
    4af8:	b1 f0       	breq	.+44     	; 0x4b26 <_Z17handleLinkBusMsgsv+0xb02>
    4afa:	8a a5       	ldd	r24, Y+42	; 0x2a
    4afc:	9b a5       	ldd	r25, Y+43	; 0x2b
    4afe:	ac a5       	ldd	r26, Y+44	; 0x2c
    4b00:	bd a5       	ldd	r27, Y+45	; 0x2d
    4b02:	8e 83       	std	Y+6, r24	; 0x06
    4b04:	9f 83       	std	Y+7, r25	; 0x07
    4b06:	a8 87       	std	Y+8, r26	; 0x08
    4b08:	b9 87       	std	Y+9, r27	; 0x09
    4b0a:	80 91 bb 47 	lds	r24, 0x47BB	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4b0e:	8f 5f       	subi	r24, 0xFF	; 255
    4b10:	80 93 bb 47 	sts	0x47BB, r24	; 0x8047bb <_ZZ17handleLinkBusMsgsvE21event_parameter_count>
    4b14:	08 c0       	rjmp	.+16     	; 0x4b26 <_Z17handleLinkBusMsgsv+0xb02>
    4b16:	0e 94 2a 6b 	call	0xd654	; 0xd654 <_Z14txGetFrequencyv>
    4b1a:	dc 01       	movw	r26, r24
    4b1c:	cb 01       	movw	r24, r22
    4b1e:	8e 83       	std	Y+6, r24	; 0x06
    4b20:	9f 83       	std	Y+7, r25	; 0x07
    4b22:	a8 87       	std	Y+8, r26	; 0x08
    4b24:	b9 87       	std	Y+9, r27	; 0x09
    4b26:	8e 81       	ldd	r24, Y+6	; 0x06
    4b28:	9f 81       	ldd	r25, Y+7	; 0x07
    4b2a:	a8 85       	ldd	r26, Y+8	; 0x08
    4b2c:	b9 85       	ldd	r27, Y+9	; 0x09
    4b2e:	89 2b       	or	r24, r25
    4b30:	8a 2b       	or	r24, r26
    4b32:	8b 2b       	or	r24, r27
    4b34:	09 f4       	brne	.+2      	; 0x4b38 <_Z17handleLinkBusMsgsv+0xb14>
    4b36:	b5 c0       	rjmp	.+362    	; 0x4ca2 <_Z17handleLinkBusMsgsv+0xc7e>
    4b38:	89 85       	ldd	r24, Y+9	; 0x09
    4b3a:	8f 93       	push	r24
    4b3c:	88 85       	ldd	r24, Y+8	; 0x08
    4b3e:	8f 93       	push	r24
    4b40:	8f 81       	ldd	r24, Y+7	; 0x07
    4b42:	8f 93       	push	r24
    4b44:	8e 81       	ldd	r24, Y+6	; 0x06
    4b46:	8f 93       	push	r24
    4b48:	89 ec       	ldi	r24, 0xC9	; 201
    4b4a:	92 e4       	ldi	r25, 0x42	; 66
    4b4c:	89 2f       	mov	r24, r25
    4b4e:	8f 93       	push	r24
    4b50:	89 ec       	ldi	r24, 0xC9	; 201
    4b52:	92 e4       	ldi	r25, 0x42	; 66
    4b54:	8f 93       	push	r24
    4b56:	8d e0       	ldi	r24, 0x0D	; 13
    4b58:	97 e4       	ldi	r25, 0x47	; 71
    4b5a:	89 2f       	mov	r24, r25
    4b5c:	8f 93       	push	r24
    4b5e:	8d e0       	ldi	r24, 0x0D	; 13
    4b60:	97 e4       	ldi	r25, 0x47	; 71
    4b62:	8f 93       	push	r24
    4b64:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    4b68:	8d b7       	in	r24, 0x3d	; 61
    4b6a:	9e b7       	in	r25, 0x3e	; 62
    4b6c:	08 96       	adiw	r24, 0x08	; 8
    4b6e:	cd bf       	out	0x3d, r28	; 61
    4b70:	de bf       	out	0x3e, r29	; 62
    4b72:	4d e0       	ldi	r20, 0x0D	; 13
    4b74:	57 e4       	ldi	r21, 0x47	; 71
    4b76:	6e ec       	ldi	r22, 0xCE	; 206
    4b78:	72 e4       	ldi	r23, 0x42	; 66
    4b7a:	83 e0       	ldi	r24, 0x03	; 3
    4b7c:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4b80:	90 c0       	rjmp	.+288    	; 0x4ca2 <_Z17handleLinkBusMsgsv+0xc7e>
    4b82:	80 91 95 47 	lds	r24, 0x4795	; 0x804795 <_ZL22g_lastConversionResult>
    4b86:	90 91 96 47 	lds	r25, 0x4796	; 0x804796 <_ZL22g_lastConversionResult+0x1>
    4b8a:	cc 01       	movw	r24, r24
    4b8c:	a0 e0       	ldi	r26, 0x00	; 0
    4b8e:	b0 e0       	ldi	r27, 0x00	; 0
    4b90:	bc 01       	movw	r22, r24
    4b92:	cd 01       	movw	r24, r26
    4b94:	0e 94 15 74 	call	0xe82a	; 0xe82a <__floatunsisf>
    4b98:	dc 01       	movw	r26, r24
    4b9a:	cb 01       	movw	r24, r22
    4b9c:	8a a3       	std	Y+34, r24	; 0x22
    4b9e:	9b a3       	std	Y+35, r25	; 0x23
    4ba0:	ac a3       	std	Y+36, r26	; 0x24
    4ba2:	bd a3       	std	Y+37, r27	; 0x25
    4ba4:	20 e0       	ldi	r18, 0x00	; 0
    4ba6:	30 e0       	ldi	r19, 0x00	; 0
    4ba8:	4c e2       	ldi	r20, 0x2C	; 44
    4baa:	53 e4       	ldi	r21, 0x43	; 67
    4bac:	6a a1       	ldd	r22, Y+34	; 0x22
    4bae:	7b a1       	ldd	r23, Y+35	; 0x23
    4bb0:	8c a1       	ldd	r24, Y+36	; 0x24
    4bb2:	9d a1       	ldd	r25, Y+37	; 0x25
    4bb4:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    4bb8:	dc 01       	movw	r26, r24
    4bba:	cb 01       	movw	r24, r22
    4bbc:	8a a3       	std	Y+34, r24	; 0x22
    4bbe:	9b a3       	std	Y+35, r25	; 0x23
    4bc0:	ac a3       	std	Y+36, r26	; 0x24
    4bc2:	bd a3       	std	Y+37, r27	; 0x25
    4bc4:	2f e6       	ldi	r18, 0x6F	; 111
    4bc6:	32 e1       	ldi	r19, 0x12	; 18
    4bc8:	43 e0       	ldi	r20, 0x03	; 3
    4bca:	5a e3       	ldi	r21, 0x3A	; 58
    4bcc:	6a a1       	ldd	r22, Y+34	; 0x22
    4bce:	7b a1       	ldd	r23, Y+35	; 0x23
    4bd0:	8c a1       	ldd	r24, Y+36	; 0x24
    4bd2:	9d a1       	ldd	r25, Y+37	; 0x25
    4bd4:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    4bd8:	dc 01       	movw	r26, r24
    4bda:	cb 01       	movw	r24, r22
    4bdc:	8a a3       	std	Y+34, r24	; 0x22
    4bde:	9b a3       	std	Y+35, r25	; 0x23
    4be0:	ac a3       	std	Y+36, r26	; 0x24
    4be2:	bd a3       	std	Y+37, r27	; 0x25
    4be4:	20 e0       	ldi	r18, 0x00	; 0
    4be6:	30 e0       	ldi	r19, 0x00	; 0
    4be8:	40 e8       	ldi	r20, 0x80	; 128
    4bea:	5f e3       	ldi	r21, 0x3F	; 63
    4bec:	6a a1       	ldd	r22, Y+34	; 0x22
    4bee:	7b a1       	ldd	r23, Y+35	; 0x23
    4bf0:	8c a1       	ldd	r24, Y+36	; 0x24
    4bf2:	9d a1       	ldd	r25, Y+37	; 0x25
    4bf4:	0e 94 e5 72 	call	0xe5ca	; 0xe5ca <__addsf3>
    4bf8:	dc 01       	movw	r26, r24
    4bfa:	cb 01       	movw	r24, r22
    4bfc:	8a a3       	std	Y+34, r24	; 0x22
    4bfe:	9b a3       	std	Y+35, r25	; 0x23
    4c00:	ac a3       	std	Y+36, r26	; 0x24
    4c02:	bd a3       	std	Y+37, r27	; 0x25
    4c04:	6a a1       	ldd	r22, Y+34	; 0x22
    4c06:	7b a1       	ldd	r23, Y+35	; 0x23
    4c08:	8c a1       	ldd	r24, Y+36	; 0x24
    4c0a:	9d a1       	ldd	r25, Y+37	; 0x25
    4c0c:	0e 94 e6 73 	call	0xe7cc	; 0xe7cc <__fixunssfsi>
    4c10:	dc 01       	movw	r26, r24
    4c12:	cb 01       	movw	r24, r22
    4c14:	8e a3       	std	Y+38, r24	; 0x26
    4c16:	9f a3       	std	Y+39, r25	; 0x27
    4c18:	8e a1       	ldd	r24, Y+38	; 0x26
    4c1a:	9f a1       	ldd	r25, Y+39	; 0x27
    4c1c:	62 ed       	ldi	r22, 0xD2	; 210
    4c1e:	72 e4       	ldi	r23, 0x42	; 66
    4c20:	0e 94 3a 56 	call	0xac74	; 0xac74 <_Z16lb_broadcast_numjPKc>
    4c24:	80 e0       	ldi	r24, 0x00	; 0
    4c26:	90 e0       	ldi	r25, 0x00	; 0
    4c28:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    4c2c:	dc 01       	movw	r26, r24
    4c2e:	cb 01       	movw	r24, r22
    4c30:	bc 01       	movw	r22, r24
    4c32:	cd 01       	movw	r24, r26
    4c34:	0e 94 61 02 	call	0x4c2	; 0x4c2 <set_system_time>
    4c38:	37 c0       	rjmp	.+110    	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c3a:	ce 01       	movw	r24, r28
    4c3c:	8e 96       	adiw	r24, 0x2e	; 46
    4c3e:	0e 94 ca 3f 	call	0x7f94	; 0x7f94 <ds3231_get_temp>
    4c42:	98 2f       	mov	r25, r24
    4c44:	81 e0       	ldi	r24, 0x01	; 1
    4c46:	89 27       	eor	r24, r25
    4c48:	88 23       	and	r24, r24
    4c4a:	69 f1       	breq	.+90     	; 0x4ca6 <_Z17handleLinkBusMsgsv+0xc82>
    4c4c:	8e a5       	ldd	r24, Y+46	; 0x2e
    4c4e:	9f a5       	ldd	r25, Y+47	; 0x2f
    4c50:	67 ed       	ldi	r22, 0xD7	; 215
    4c52:	72 e4       	ldi	r23, 0x42	; 66
    4c54:	0e 94 3a 56 	call	0xac74	; 0xac74 <_Z16lb_broadcast_numjPKc>
    4c58:	26 c0       	rjmp	.+76     	; 0x4ca6 <_Z17handleLinkBusMsgsv+0xc82>
    4c5a:	4c ed       	ldi	r20, 0xDC	; 220
    4c5c:	52 e4       	ldi	r21, 0x42	; 66
    4c5e:	60 ee       	ldi	r22, 0xE0	; 224
    4c60:	72 e4       	ldi	r23, 0x42	; 66
    4c62:	83 e0       	ldi	r24, 0x03	; 3
    4c64:	0e 94 eb 55 	call	0xabd6	; 0xabd6 <_Z11lb_send_msg13LBMessageTypePKcPc>
    4c68:	1f c0       	rjmp	.+62     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c6a:	19 82       	std	Y+1, r1	; 0x01
    4c6c:	84 ee       	ldi	r24, 0xE4	; 228
    4c6e:	92 e4       	ldi	r25, 0x42	; 66
    4c70:	0e 94 8e 55 	call	0xab1c	; 0xab1c <_Z12lb_send_textPc>
    4c74:	19 c0       	rjmp	.+50     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c76:	00 00       	nop
    4c78:	17 c0       	rjmp	.+46     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c7a:	00 00       	nop
    4c7c:	15 c0       	rjmp	.+42     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c7e:	00 00       	nop
    4c80:	13 c0       	rjmp	.+38     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c82:	00 00       	nop
    4c84:	11 c0       	rjmp	.+34     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c86:	00 00       	nop
    4c88:	0f c0       	rjmp	.+30     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c8a:	00 00       	nop
    4c8c:	0d c0       	rjmp	.+26     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c8e:	00 00       	nop
    4c90:	0b c0       	rjmp	.+22     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c92:	00 00       	nop
    4c94:	09 c0       	rjmp	.+18     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c96:	00 00       	nop
    4c98:	07 c0       	rjmp	.+14     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c9a:	00 00       	nop
    4c9c:	05 c0       	rjmp	.+10     	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4c9e:	00 00       	nop
    4ca0:	03 c0       	rjmp	.+6      	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4ca2:	00 00       	nop
    4ca4:	01 c0       	rjmp	.+2      	; 0x4ca8 <_Z17handleLinkBusMsgsv+0xc84>
    4ca6:	00 00       	nop
    4ca8:	8a 85       	ldd	r24, Y+10	; 0x0a
    4caa:	9b 85       	ldd	r25, Y+11	; 0x0b
    4cac:	fc 01       	movw	r30, r24
    4cae:	11 82       	std	Z+1, r1	; 0x01
    4cb0:	12 82       	std	Z+2, r1	; 0x02
    4cb2:	89 81       	ldd	r24, Y+1	; 0x01
    4cb4:	88 23       	and	r24, r24
    4cb6:	09 f4       	brne	.+2      	; 0x4cba <_Z17handleLinkBusMsgsv+0xc96>
    4cb8:	be c9       	rjmp	.-3204   	; 0x4036 <_Z17handleLinkBusMsgsv+0x12>
    4cba:	8a ee       	ldi	r24, 0xEA	; 234
    4cbc:	92 e4       	ldi	r25, 0x42	; 66
    4cbe:	0e 94 8e 55 	call	0xab1c	; 0xab1c <_Z12lb_send_textPc>
    4cc2:	b9 c9       	rjmp	.-3214   	; 0x4036 <_Z17handleLinkBusMsgsv+0x12>
    4cc4:	00 00       	nop
    4cc6:	af 96       	adiw	r28, 0x2f	; 47
    4cc8:	cd bf       	out	0x3d, r28	; 61
    4cca:	de bf       	out	0x3e, r29	; 62
    4ccc:	df 91       	pop	r29
    4cce:	cf 91       	pop	r28
    4cd0:	08 95       	ret

00004cd2 <_Z19updateAntennaStatusv>:
    4cd2:	cf 93       	push	r28
    4cd4:	df 93       	push	r29
    4cd6:	1f 92       	push	r1
    4cd8:	cd b7       	in	r28, 0x3d	; 61
    4cda:	de b7       	in	r29, 0x3e	; 62
    4cdc:	0e 94 45 2a 	call	0x548a	; 0x548a <_Z18antennaIsConnectedv>
    4ce0:	89 83       	std	Y+1, r24	; 0x01
    4ce2:	99 81       	ldd	r25, Y+1	; 0x01
    4ce4:	81 e0       	ldi	r24, 0x01	; 1
    4ce6:	89 27       	eor	r24, r25
    4ce8:	88 23       	and	r24, r24
    4cea:	91 f0       	breq	.+36     	; 0x4d10 <_Z19updateAntennaStatusv+0x3e>
    4cec:	90 91 45 47 	lds	r25, 0x4745	; 0x804745 <g_antenna_connect_state>
    4cf0:	81 e0       	ldi	r24, 0x01	; 1
    4cf2:	91 30       	cpi	r25, 0x01	; 1
    4cf4:	09 f4       	brne	.+2      	; 0x4cf8 <_Z19updateAntennaStatusv+0x26>
    4cf6:	80 e0       	ldi	r24, 0x00	; 0
    4cf8:	88 23       	and	r24, r24
    4cfa:	31 f0       	breq	.+12     	; 0x4d08 <_Z19updateAntennaStatusv+0x36>
    4cfc:	81 e0       	ldi	r24, 0x01	; 1
    4cfe:	80 93 45 47 	sts	0x4745, r24	; 0x804745 <g_antenna_connect_state>
    4d02:	81 e0       	ldi	r24, 0x01	; 1
    4d04:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4d08:	83 e0       	ldi	r24, 0x03	; 3
    4d0a:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d0e:	27 c0       	rjmp	.+78     	; 0x4d5e <_Z19updateAntennaStatusv+0x8c>
    4d10:	90 91 45 47 	lds	r25, 0x4745	; 0x804745 <g_antenna_connect_state>
    4d14:	81 e0       	ldi	r24, 0x01	; 1
    4d16:	92 30       	cpi	r25, 0x02	; 2
    4d18:	09 f4       	brne	.+2      	; 0x4d1c <_Z19updateAntennaStatusv+0x4a>
    4d1a:	80 e0       	ldi	r24, 0x00	; 0
    4d1c:	88 23       	and	r24, r24
    4d1e:	f9 f0       	breq	.+62     	; 0x4d5e <_Z19updateAntennaStatusv+0x8c>
    4d20:	80 91 c5 47 	lds	r24, 0x47C5	; 0x8047c5 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4d24:	99 81       	ldd	r25, Y+1	; 0x01
    4d26:	98 17       	cp	r25, r24
    4d28:	b9 f4       	brne	.+46     	; 0x4d58 <_Z19updateAntennaStatusv+0x86>
    4d2a:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d2e:	88 23       	and	r24, r24
    4d30:	b1 f0       	breq	.+44     	; 0x4d5e <_Z19updateAntennaStatusv+0x8c>
    4d32:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d36:	81 50       	subi	r24, 0x01	; 1
    4d38:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d3c:	80 91 23 40 	lds	r24, 0x4023	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d40:	88 23       	and	r24, r24
    4d42:	69 f4       	brne	.+26     	; 0x4d5e <_Z19updateAntennaStatusv+0x8c>
    4d44:	82 e0       	ldi	r24, 0x02	; 2
    4d46:	80 93 45 47 	sts	0x4745, r24	; 0x804745 <g_antenna_connect_state>
    4d4a:	81 e0       	ldi	r24, 0x01	; 1
    4d4c:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <_ZL28g_antenna_connection_changed>
    4d50:	83 e0       	ldi	r24, 0x03	; 3
    4d52:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d56:	03 c0       	rjmp	.+6      	; 0x4d5e <_Z19updateAntennaStatusv+0x8c>
    4d58:	83 e0       	ldi	r24, 0x03	; 3
    4d5a:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <_ZZ19updateAntennaStatusvE16antennaReadCount>
    4d5e:	89 81       	ldd	r24, Y+1	; 0x01
    4d60:	80 93 c5 47 	sts	0x47C5, r24	; 0x8047c5 <_ZZ19updateAntennaStatusvE26lastAntennaConnectionState>
    4d64:	00 00       	nop
    4d66:	0f 90       	pop	r0
    4d68:	df 91       	pop	r29
    4d6a:	cf 91       	pop	r28
    4d6c:	08 95       	ret

00004d6e <_Z12eventEnabledv>:
    4d6e:	ef 92       	push	r14
    4d70:	ff 92       	push	r15
    4d72:	0f 93       	push	r16
    4d74:	1f 93       	push	r17
    4d76:	cf 93       	push	r28
    4d78:	df 93       	push	r29
    4d7a:	cd b7       	in	r28, 0x3d	; 61
    4d7c:	de b7       	in	r29, 0x3e	; 62
    4d7e:	29 97       	sbiw	r28, 0x09	; 9
    4d80:	cd bf       	out	0x3d, r28	; 61
    4d82:	de bf       	out	0x3e, r29	; 62
    4d84:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    4d88:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    4d8c:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    4d90:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    4d94:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    4d98:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    4d9c:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    4da0:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    4da4:	bc 01       	movw	r22, r24
    4da6:	cd 01       	movw	r24, r26
    4da8:	0e 94 33 6f 	call	0xde66	; 0xde66 <_Z7timeDifmm>
    4dac:	dc 01       	movw	r26, r24
    4dae:	cb 01       	movw	r24, r22
    4db0:	89 83       	std	Y+1, r24	; 0x01
    4db2:	9a 83       	std	Y+2, r25	; 0x02
    4db4:	ab 83       	std	Y+3, r26	; 0x03
    4db6:	bc 83       	std	Y+4, r27	; 0x04
    4db8:	21 e0       	ldi	r18, 0x01	; 1
    4dba:	89 81       	ldd	r24, Y+1	; 0x01
    4dbc:	9a 81       	ldd	r25, Y+2	; 0x02
    4dbe:	ab 81       	ldd	r26, Y+3	; 0x03
    4dc0:	bc 81       	ldd	r27, Y+4	; 0x04
    4dc2:	18 16       	cp	r1, r24
    4dc4:	19 06       	cpc	r1, r25
    4dc6:	1a 06       	cpc	r1, r26
    4dc8:	1b 06       	cpc	r1, r27
    4dca:	0c f0       	brlt	.+2      	; 0x4dce <_Z12eventEnabledv+0x60>
    4dcc:	20 e0       	ldi	r18, 0x00	; 0
    4dce:	2d 83       	std	Y+5, r18	; 0x05
    4dd0:	ce 01       	movw	r24, r28
    4dd2:	06 96       	adiw	r24, 0x06	; 6
    4dd4:	0e 94 bb 05 	call	0xb76	; 0xb76 <time>
    4dd8:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    4ddc:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    4de0:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    4de4:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    4de8:	8e 81       	ldd	r24, Y+6	; 0x06
    4dea:	9f 81       	ldd	r25, Y+7	; 0x07
    4dec:	a8 85       	ldd	r26, Y+8	; 0x08
    4dee:	b9 85       	ldd	r27, Y+9	; 0x09
    4df0:	bc 01       	movw	r22, r24
    4df2:	cd 01       	movw	r24, r26
    4df4:	0e 94 33 6f 	call	0xde66	; 0xde66 <_Z7timeDifmm>
    4df8:	dc 01       	movw	r26, r24
    4dfa:	cb 01       	movw	r24, r22
    4dfc:	89 83       	std	Y+1, r24	; 0x01
    4dfe:	9a 83       	std	Y+2, r25	; 0x02
    4e00:	ab 83       	std	Y+3, r26	; 0x03
    4e02:	bc 83       	std	Y+4, r27	; 0x04
    4e04:	89 81       	ldd	r24, Y+1	; 0x01
    4e06:	9a 81       	ldd	r25, Y+2	; 0x02
    4e08:	ab 81       	ldd	r26, Y+3	; 0x03
    4e0a:	bc 81       	ldd	r27, Y+4	; 0x04
    4e0c:	bb 23       	and	r27, r27
    4e0e:	2c f0       	brlt	.+10     	; 0x4e1a <_Z12eventEnabledv+0xac>
    4e10:	8d 81       	ldd	r24, Y+5	; 0x05
    4e12:	88 23       	and	r24, r24
    4e14:	11 f0       	breq	.+4      	; 0x4e1a <_Z12eventEnabledv+0xac>
    4e16:	80 e0       	ldi	r24, 0x00	; 0
    4e18:	4a c0       	rjmp	.+148    	; 0x4eae <_Z12eventEnabledv+0x140>
    4e1a:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    4e1e:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    4e22:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    4e26:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    4e2a:	8e 81       	ldd	r24, Y+6	; 0x06
    4e2c:	9f 81       	ldd	r25, Y+7	; 0x07
    4e2e:	a8 85       	ldd	r26, Y+8	; 0x08
    4e30:	b9 85       	ldd	r27, Y+9	; 0x09
    4e32:	bc 01       	movw	r22, r24
    4e34:	cd 01       	movw	r24, r26
    4e36:	0e 94 33 6f 	call	0xde66	; 0xde66 <_Z7timeDifmm>
    4e3a:	dc 01       	movw	r26, r24
    4e3c:	cb 01       	movw	r24, r22
    4e3e:	89 83       	std	Y+1, r24	; 0x01
    4e40:	9a 83       	std	Y+2, r25	; 0x02
    4e42:	ab 83       	std	Y+3, r26	; 0x03
    4e44:	bc 83       	std	Y+4, r27	; 0x04
    4e46:	89 81       	ldd	r24, Y+1	; 0x01
    4e48:	9a 81       	ldd	r25, Y+2	; 0x02
    4e4a:	ab 81       	ldd	r26, Y+3	; 0x03
    4e4c:	bc 81       	ldd	r27, Y+4	; 0x04
    4e4e:	84 3c       	cpi	r24, 0xC4	; 196
    4e50:	9f 4f       	sbci	r25, 0xFF	; 255
    4e52:	af 4f       	sbci	r26, 0xFF	; 255
    4e54:	bf 4f       	sbci	r27, 0xFF	; 255
    4e56:	64 f0       	brlt	.+24     	; 0x4e70 <_Z12eventEnabledv+0x102>
    4e58:	10 92 51 47 	sts	0x4751, r1	; 0x804751 <_ZL11g_sleepType>
    4e5c:	10 92 15 40 	sts	0x4015, r1	; 0x804015 <_ZL18g_seconds_to_sleep>
    4e60:	10 92 16 40 	sts	0x4016, r1	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    4e64:	10 92 17 40 	sts	0x4017, r1	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    4e68:	10 92 18 40 	sts	0x4018, r1	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    4e6c:	81 e0       	ldi	r24, 0x01	; 1
    4e6e:	1f c0       	rjmp	.+62     	; 0x4eae <_Z12eventEnabledv+0x140>
    4e70:	24 ec       	ldi	r18, 0xC4	; 196
    4e72:	3f ef       	ldi	r19, 0xFF	; 255
    4e74:	4f ef       	ldi	r20, 0xFF	; 255
    4e76:	5f ef       	ldi	r21, 0xFF	; 255
    4e78:	89 81       	ldd	r24, Y+1	; 0x01
    4e7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e7c:	ab 81       	ldd	r26, Y+3	; 0x03
    4e7e:	bc 81       	ldd	r27, Y+4	; 0x04
    4e80:	79 01       	movw	r14, r18
    4e82:	8a 01       	movw	r16, r20
    4e84:	e8 1a       	sub	r14, r24
    4e86:	f9 0a       	sbc	r15, r25
    4e88:	0a 0b       	sbc	r16, r26
    4e8a:	1b 0b       	sbc	r17, r27
    4e8c:	d8 01       	movw	r26, r16
    4e8e:	c7 01       	movw	r24, r14
    4e90:	80 93 15 40 	sts	0x4015, r24	; 0x804015 <_ZL18g_seconds_to_sleep>
    4e94:	90 93 16 40 	sts	0x4016, r25	; 0x804016 <_ZL18g_seconds_to_sleep+0x1>
    4e98:	a0 93 17 40 	sts	0x4017, r26	; 0x804017 <_ZL18g_seconds_to_sleep+0x2>
    4e9c:	b0 93 18 40 	sts	0x4018, r27	; 0x804018 <_ZL18g_seconds_to_sleep+0x3>
    4ea0:	81 e0       	ldi	r24, 0x01	; 1
    4ea2:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZL11g_sleepType>
    4ea6:	81 e0       	ldi	r24, 0x01	; 1
    4ea8:	80 93 8c 47 	sts	0x478C, r24	; 0x80478c <_ZL13g_go_to_sleep>
    4eac:	81 e0       	ldi	r24, 0x01	; 1
    4eae:	29 96       	adiw	r28, 0x09	; 9
    4eb0:	cd bf       	out	0x3d, r28	; 61
    4eb2:	de bf       	out	0x3e, r29	; 62
    4eb4:	df 91       	pop	r29
    4eb6:	cf 91       	pop	r28
    4eb8:	1f 91       	pop	r17
    4eba:	0f 91       	pop	r16
    4ebc:	ff 90       	pop	r15
    4ebe:	ef 90       	pop	r14
    4ec0:	08 95       	ret

00004ec2 <_Z8wdt_init7WDReset>:
    4ec2:	cf 93       	push	r28
    4ec4:	df 93       	push	r29
    4ec6:	1f 92       	push	r1
    4ec8:	cd b7       	in	r28, 0x3d	; 61
    4eca:	de b7       	in	r29, 0x3e	; 62
    4ecc:	89 83       	std	Y+1, r24	; 0x01
    4ece:	00 00       	nop
    4ed0:	0f 90       	pop	r0
    4ed2:	df 91       	pop	r29
    4ed4:	cf 91       	pop	r28
    4ed6:	08 95       	ret

00004ed8 <_Z13throttleValueh>:
    4ed8:	cf 93       	push	r28
    4eda:	df 93       	push	r29
    4edc:	cd b7       	in	r28, 0x3d	; 61
    4ede:	de b7       	in	r29, 0x3e	; 62
    4ee0:	2a 97       	sbiw	r28, 0x0a	; 10
    4ee2:	cd bf       	out	0x3d, r28	; 61
    4ee4:	de bf       	out	0x3e, r29	; 62
    4ee6:	8a 87       	std	Y+10, r24	; 0x0a
    4ee8:	8a 85       	ldd	r24, Y+10	; 0x0a
    4eea:	89 83       	std	Y+1, r24	; 0x01
    4eec:	85 e0       	ldi	r24, 0x05	; 5
    4eee:	90 e0       	ldi	r25, 0x00	; 0
    4ef0:	8a 83       	std	Y+2, r24	; 0x02
    4ef2:	9b 83       	std	Y+3, r25	; 0x03
    4ef4:	84 e1       	ldi	r24, 0x14	; 20
    4ef6:	90 e0       	ldi	r25, 0x00	; 0
    4ef8:	8c 83       	std	Y+4, r24	; 0x04
    4efa:	9d 83       	std	Y+5, r25	; 0x05
    4efc:	89 81       	ldd	r24, Y+1	; 0x01
    4efe:	28 2f       	mov	r18, r24
    4f00:	88 0f       	add	r24, r24
    4f02:	33 0b       	sbc	r19, r19
    4f04:	8c 81       	ldd	r24, Y+4	; 0x04
    4f06:	9d 81       	ldd	r25, Y+5	; 0x05
    4f08:	82 17       	cp	r24, r18
    4f0a:	93 07       	cpc	r25, r19
    4f0c:	5c f0       	brlt	.+22     	; 0x4f24 <_Z13throttleValueh+0x4c>
    4f0e:	89 81       	ldd	r24, Y+1	; 0x01
    4f10:	08 2e       	mov	r0, r24
    4f12:	00 0c       	add	r0, r0
    4f14:	99 0b       	sbc	r25, r25
    4f16:	2a 81       	ldd	r18, Y+2	; 0x02
    4f18:	3b 81       	ldd	r19, Y+3	; 0x03
    4f1a:	82 17       	cp	r24, r18
    4f1c:	93 07       	cpc	r25, r19
    4f1e:	24 f4       	brge	.+8      	; 0x4f28 <_Z13throttleValueh+0x50>
    4f20:	c9 01       	movw	r24, r18
    4f22:	02 c0       	rjmp	.+4      	; 0x4f28 <_Z13throttleValueh+0x50>
    4f24:	8c 81       	ldd	r24, Y+4	; 0x04
    4f26:	9d 81       	ldd	r25, Y+5	; 0x05
    4f28:	8a 87       	std	Y+10, r24	; 0x0a
    4f2a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4f2c:	28 2f       	mov	r18, r24
    4f2e:	30 e0       	ldi	r19, 0x00	; 0
    4f30:	40 e0       	ldi	r20, 0x00	; 0
    4f32:	50 e0       	ldi	r21, 0x00	; 0
    4f34:	88 ed       	ldi	r24, 0xD8	; 216
    4f36:	9d e0       	ldi	r25, 0x0D	; 13
    4f38:	a0 e0       	ldi	r26, 0x00	; 0
    4f3a:	b0 e0       	ldi	r27, 0x00	; 0
    4f3c:	bc 01       	movw	r22, r24
    4f3e:	cd 01       	movw	r24, r26
    4f40:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
    4f44:	da 01       	movw	r26, r20
    4f46:	c9 01       	movw	r24, r18
    4f48:	2a e0       	ldi	r18, 0x0A	; 10
    4f4a:	30 e0       	ldi	r19, 0x00	; 0
    4f4c:	40 e0       	ldi	r20, 0x00	; 0
    4f4e:	50 e0       	ldi	r21, 0x00	; 0
    4f50:	bc 01       	movw	r22, r24
    4f52:	cd 01       	movw	r24, r26
    4f54:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
    4f58:	da 01       	movw	r26, r20
    4f5a:	c9 01       	movw	r24, r18
    4f5c:	bc 01       	movw	r22, r24
    4f5e:	cd 01       	movw	r24, r26
    4f60:	0e 94 17 74 	call	0xe82e	; 0xe82e <__floatsisf>
    4f64:	dc 01       	movw	r26, r24
    4f66:	cb 01       	movw	r24, r22
    4f68:	8e 83       	std	Y+6, r24	; 0x06
    4f6a:	9f 83       	std	Y+7, r25	; 0x07
    4f6c:	a8 87       	std	Y+8, r26	; 0x08
    4f6e:	b9 87       	std	Y+9, r27	; 0x09
    4f70:	6e 81       	ldd	r22, Y+6	; 0x06
    4f72:	7f 81       	ldd	r23, Y+7	; 0x07
    4f74:	88 85       	ldd	r24, Y+8	; 0x08
    4f76:	99 85       	ldd	r25, Y+9	; 0x09
    4f78:	0e 94 e6 73 	call	0xe7cc	; 0xe7cc <__fixunssfsi>
    4f7c:	dc 01       	movw	r26, r24
    4f7e:	cb 01       	movw	r24, r22
    4f80:	2a 96       	adiw	r28, 0x0a	; 10
    4f82:	cd bf       	out	0x3d, r28	; 61
    4f84:	de bf       	out	0x3e, r29	; 62
    4f86:	df 91       	pop	r29
    4f88:	cf 91       	pop	r28
    4f8a:	08 95       	ret

00004f8c <_Z11launchEventP2SC>:
    4f8c:	cf 93       	push	r28
    4f8e:	df 93       	push	r29
    4f90:	00 d0       	rcall	.+0      	; 0x4f92 <_Z11launchEventP2SC+0x6>
    4f92:	1f 92       	push	r1
    4f94:	cd b7       	in	r28, 0x3d	; 61
    4f96:	de b7       	in	r29, 0x3e	; 62
    4f98:	8a 83       	std	Y+2, r24	; 0x02
    4f9a:	9b 83       	std	Y+3, r25	; 0x03
    4f9c:	8a 81       	ldd	r24, Y+2	; 0x02
    4f9e:	9b 81       	ldd	r25, Y+3	; 0x03
    4fa0:	0e 94 f1 27 	call	0x4fe2	; 0x4fe2 <_Z33activateEventUsingCurrentSettingsP2SC>
    4fa4:	89 83       	std	Y+1, r24	; 0x01
    4fa6:	8a 81       	ldd	r24, Y+2	; 0x02
    4fa8:	9b 81       	ldd	r25, Y+3	; 0x03
    4faa:	fc 01       	movw	r30, r24
    4fac:	80 81       	ld	r24, Z
    4fae:	88 23       	and	r24, r24
    4fb0:	31 f0       	breq	.+12     	; 0x4fbe <_Z11launchEventP2SC+0x32>
    4fb2:	8a 81       	ldd	r24, Y+2	; 0x02
    4fb4:	9b 81       	ldd	r25, Y+3	; 0x03
    4fb6:	fc 01       	movw	r30, r24
    4fb8:	80 81       	ld	r24, Z
    4fba:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
    4fbe:	89 81       	ldd	r24, Y+1	; 0x01
    4fc0:	88 23       	and	r24, r24
    4fc2:	21 f0       	breq	.+8      	; 0x4fcc <_Z11launchEventP2SC+0x40>
    4fc4:	89 81       	ldd	r24, Y+1	; 0x01
    4fc6:	80 93 3f 47 	sts	0x473F, r24	; 0x80473f <_ZL17g_last_error_code>
    4fca:	04 c0       	rjmp	.+8      	; 0x4fd4 <_Z11launchEventP2SC+0x48>
    4fcc:	0e 94 b7 26 	call	0x4d6e	; 0x4d6e <_Z12eventEnabledv>
    4fd0:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_event_enabled>
    4fd4:	89 81       	ldd	r24, Y+1	; 0x01
    4fd6:	23 96       	adiw	r28, 0x03	; 3
    4fd8:	cd bf       	out	0x3d, r28	; 61
    4fda:	de bf       	out	0x3e, r29	; 62
    4fdc:	df 91       	pop	r29
    4fde:	cf 91       	pop	r28
    4fe0:	08 95       	ret

00004fe2 <_Z33activateEventUsingCurrentSettingsP2SC>:
    4fe2:	cf 93       	push	r28
    4fe4:	df 93       	push	r29
    4fe6:	cd b7       	in	r28, 0x3d	; 61
    4fe8:	de b7       	in	r29, 0x3e	; 62
    4fea:	63 97       	sbiw	r28, 0x13	; 19
    4fec:	cd bf       	out	0x3d, r28	; 61
    4fee:	de bf       	out	0x3e, r29	; 62
    4ff0:	8a 8b       	std	Y+18, r24	; 0x12
    4ff2:	9b 8b       	std	Y+19, r25	; 0x13
    4ff4:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    4ff8:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    4ffc:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    5000:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5004:	21 e0       	ldi	r18, 0x01	; 1
    5006:	89 2b       	or	r24, r25
    5008:	8a 2b       	or	r24, r26
    500a:	8b 2b       	or	r24, r27
    500c:	09 f0       	breq	.+2      	; 0x5010 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e>
    500e:	20 e0       	ldi	r18, 0x00	; 0
    5010:	22 23       	and	r18, r18
    5012:	11 f0       	breq	.+4      	; 0x5018 <_Z33activateEventUsingCurrentSettingsP2SC+0x36>
    5014:	8c ec       	ldi	r24, 0xCC	; 204
    5016:	1a c2       	rjmp	.+1076   	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5018:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    501c:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5020:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    5024:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5028:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    502c:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    5030:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    5034:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    5038:	61 e0       	ldi	r22, 0x01	; 1
    503a:	28 17       	cp	r18, r24
    503c:	39 07       	cpc	r19, r25
    503e:	4a 07       	cpc	r20, r26
    5040:	5b 07       	cpc	r21, r27
    5042:	08 f4       	brcc	.+2      	; 0x5046 <_Z33activateEventUsingCurrentSettingsP2SC+0x64>
    5044:	60 e0       	ldi	r22, 0x00	; 0
    5046:	66 23       	and	r22, r22
    5048:	11 f0       	breq	.+4      	; 0x504e <_Z33activateEventUsingCurrentSettingsP2SC+0x6c>
    504a:	8d ec       	ldi	r24, 0xCD	; 205
    504c:	ff c1       	rjmp	.+1022   	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    504e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5052:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5056:	21 e0       	ldi	r18, 0x01	; 1
    5058:	89 2b       	or	r24, r25
    505a:	09 f0       	breq	.+2      	; 0x505e <_Z33activateEventUsingCurrentSettingsP2SC+0x7c>
    505c:	20 e0       	ldi	r18, 0x00	; 0
    505e:	22 23       	and	r18, r18
    5060:	11 f0       	breq	.+4      	; 0x5066 <_Z33activateEventUsingCurrentSettingsP2SC+0x84>
    5062:	8b ec       	ldi	r24, 0xCB	; 203
    5064:	f3 c1       	rjmp	.+998    	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5066:	20 91 0f 40 	lds	r18, 0x400F	; 0x80400f <g_off_air_seconds>
    506a:	30 91 10 40 	lds	r19, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    506e:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5072:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5076:	28 0f       	add	r18, r24
    5078:	39 1f       	adc	r19, r25
    507a:	80 91 7e 47 	lds	r24, 0x477E	; 0x80477e <g_intra_cycle_delay_time>
    507e:	90 91 7f 47 	lds	r25, 0x477F	; 0x80477f <g_intra_cycle_delay_time+0x1>
    5082:	41 e0       	ldi	r20, 0x01	; 1
    5084:	28 17       	cp	r18, r24
    5086:	39 07       	cpc	r19, r25
    5088:	0c f0       	brlt	.+2      	; 0x508c <_Z33activateEventUsingCurrentSettingsP2SC+0xaa>
    508a:	40 e0       	ldi	r20, 0x00	; 0
    508c:	44 23       	and	r20, r20
    508e:	11 f0       	breq	.+4      	; 0x5094 <_Z33activateEventUsingCurrentSettingsP2SC+0xb2>
    5090:	8a ec       	ldi	r24, 0xCA	; 202
    5092:	dc c1       	rjmp	.+952    	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    5094:	80 91 52 47 	lds	r24, 0x4752	; 0x804752 <g_messages_text>
    5098:	88 23       	and	r24, r24
    509a:	11 f4       	brne	.+4      	; 0x50a0 <_Z33activateEventUsingCurrentSettingsP2SC+0xbe>
    509c:	89 ec       	ldi	r24, 0xC9	; 201
    509e:	d6 c1       	rjmp	.+940    	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    50a0:	90 91 0c 40 	lds	r25, 0x400C	; 0x80400c <g_pattern_codespeed>
    50a4:	81 e0       	ldi	r24, 0x01	; 1
    50a6:	99 23       	and	r25, r25
    50a8:	09 f0       	breq	.+2      	; 0x50ac <_Z33activateEventUsingCurrentSettingsP2SC+0xca>
    50aa:	80 e0       	ldi	r24, 0x00	; 0
    50ac:	88 23       	and	r24, r24
    50ae:	11 f0       	breq	.+4      	; 0x50b4 <_Z33activateEventUsingCurrentSettingsP2SC+0xd2>
    50b0:	88 ec       	ldi	r24, 0xC8	; 200
    50b2:	cc c1       	rjmp	.+920    	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    50b4:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    50b8:	88 23       	and	r24, r24
    50ba:	91 f1       	breq	.+100    	; 0x5120 <_Z33activateEventUsingCurrentSettingsP2SC+0x13e>
    50bc:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    50c0:	88 23       	and	r24, r24
    50c2:	31 f0       	breq	.+12     	; 0x50d0 <_Z33activateEventUsingCurrentSettingsP2SC+0xee>
    50c4:	80 91 11 40 	lds	r24, 0x4011	; 0x804011 <g_ID_period_seconds>
    50c8:	90 91 12 40 	lds	r25, 0x4012	; 0x804012 <g_ID_period_seconds+0x1>
    50cc:	89 2b       	or	r24, r25
    50ce:	11 f4       	brne	.+4      	; 0x50d4 <_Z33activateEventUsingCurrentSettingsP2SC+0xf2>
    50d0:	81 e0       	ldi	r24, 0x01	; 1
    50d2:	01 c0       	rjmp	.+2      	; 0x50d6 <_Z33activateEventUsingCurrentSettingsP2SC+0xf4>
    50d4:	80 e0       	ldi	r24, 0x00	; 0
    50d6:	88 23       	and	r24, r24
    50d8:	11 f0       	breq	.+4      	; 0x50de <_Z33activateEventUsingCurrentSettingsP2SC+0xfc>
    50da:	87 ec       	ldi	r24, 0xC7	; 199
    50dc:	b7 c1       	rjmp	.+878    	; 0x544c <_Z33activateEventUsingCurrentSettingsP2SC+0x46a>
    50de:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    50e2:	88 2f       	mov	r24, r24
    50e4:	90 e0       	ldi	r25, 0x00	; 0
    50e6:	bc 01       	movw	r22, r24
    50e8:	87 e6       	ldi	r24, 0x67	; 103
    50ea:	97 e4       	ldi	r25, 0x47	; 71
    50ec:	0e 94 f4 57 	call	0xafe8	; 0xafe8 <_Z26timeRequiredToSendStrAtWPMPcj>
    50f0:	8c 50       	subi	r24, 0x0C	; 12
    50f2:	9e 4f       	sbci	r25, 0xFE	; 254
    50f4:	96 95       	lsr	r25
    50f6:	87 95       	ror	r24
    50f8:	96 95       	lsr	r25
    50fa:	87 95       	ror	r24
    50fc:	96 95       	lsr	r25
    50fe:	87 95       	ror	r24
    5100:	9c 01       	movw	r18, r24
    5102:	a5 ec       	ldi	r26, 0xC5	; 197
    5104:	b0 e2       	ldi	r27, 0x20	; 32
    5106:	0e 94 fc 75 	call	0xebf8	; 0xebf8 <__umulhisi3>
    510a:	92 95       	swap	r25
    510c:	82 95       	swap	r24
    510e:	8f 70       	andi	r24, 0x0F	; 15
    5110:	89 27       	eor	r24, r25
    5112:	9f 70       	andi	r25, 0x0F	; 15
    5114:	89 27       	eor	r24, r25
    5116:	80 93 7c 47 	sts	0x477C, r24	; 0x80477c <g_time_needed_for_ID>
    511a:	90 93 7d 47 	sts	0x477D, r25	; 0x80477d <g_time_needed_for_ID+0x1>
    511e:	04 c0       	rjmp	.+8      	; 0x5128 <_Z33activateEventUsingCurrentSettingsP2SC+0x146>
    5120:	10 92 7c 47 	sts	0x477C, r1	; 0x80477c <g_time_needed_for_ID>
    5124:	10 92 7d 47 	sts	0x477D, r1	; 0x80477d <g_time_needed_for_ID+0x1>
    5128:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    512c:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5130:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    5134:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5138:	8a 83       	std	Y+2, r24	; 0x02
    513a:	9b 83       	std	Y+3, r25	; 0x03
    513c:	ac 83       	std	Y+4, r26	; 0x04
    513e:	bd 83       	std	Y+5, r27	; 0x05
    5140:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    5144:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    5148:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    514c:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    5150:	61 e0       	ldi	r22, 0x01	; 1
    5152:	8a 81       	ldd	r24, Y+2	; 0x02
    5154:	9b 81       	ldd	r25, Y+3	; 0x03
    5156:	ac 81       	ldd	r26, Y+4	; 0x04
    5158:	bd 81       	ldd	r27, Y+5	; 0x05
    515a:	28 17       	cp	r18, r24
    515c:	39 07       	cpc	r19, r25
    515e:	4a 07       	cpc	r20, r26
    5160:	5b 07       	cpc	r21, r27
    5162:	08 f0       	brcs	.+2      	; 0x5166 <_Z33activateEventUsingCurrentSettingsP2SC+0x184>
    5164:	60 e0       	ldi	r22, 0x00	; 0
    5166:	66 23       	and	r22, r22
    5168:	59 f0       	breq	.+22     	; 0x5180 <_Z33activateEventUsingCurrentSettingsP2SC+0x19e>
    516a:	8a 89       	ldd	r24, Y+18	; 0x12
    516c:	9b 89       	ldd	r25, Y+19	; 0x13
    516e:	89 2b       	or	r24, r25
    5170:	09 f4       	brne	.+2      	; 0x5174 <_Z33activateEventUsingCurrentSettingsP2SC+0x192>
    5172:	6b c1       	rjmp	.+726    	; 0x544a <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    5174:	8a 89       	ldd	r24, Y+18	; 0x12
    5176:	9b 89       	ldd	r25, Y+19	; 0x13
    5178:	2a ef       	ldi	r18, 0xFA	; 250
    517a:	fc 01       	movw	r30, r24
    517c:	20 83       	st	Z, r18
    517e:	65 c1       	rjmp	.+714    	; 0x544a <_Z33activateEventUsingCurrentSettingsP2SC+0x468>
    5180:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    5184:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5188:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    518c:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5190:	8a 81       	ldd	r24, Y+2	; 0x02
    5192:	9b 81       	ldd	r25, Y+3	; 0x03
    5194:	ac 81       	ldd	r26, Y+4	; 0x04
    5196:	bd 81       	ldd	r27, Y+5	; 0x05
    5198:	bc 01       	movw	r22, r24
    519a:	cd 01       	movw	r24, r26
    519c:	0e 94 33 6f 	call	0xde66	; 0xde66 <_Z7timeDifmm>
    51a0:	dc 01       	movw	r26, r24
    51a2:	cb 01       	movw	r24, r22
    51a4:	8e 83       	std	Y+6, r24	; 0x06
    51a6:	9f 83       	std	Y+7, r25	; 0x07
    51a8:	a8 87       	std	Y+8, r26	; 0x08
    51aa:	b9 87       	std	Y+9, r27	; 0x09
    51ac:	8e 81       	ldd	r24, Y+6	; 0x06
    51ae:	9f 81       	ldd	r25, Y+7	; 0x07
    51b0:	a8 85       	ldd	r26, Y+8	; 0x08
    51b2:	b9 85       	ldd	r27, Y+9	; 0x09
    51b4:	bb 23       	and	r27, r27
    51b6:	0c f4       	brge	.+2      	; 0x51ba <_Z33activateEventUsingCurrentSettingsP2SC+0x1d8>
    51b8:	34 c1       	rjmp	.+616    	; 0x5422 <_Z33activateEventUsingCurrentSettingsP2SC+0x440>
    51ba:	19 82       	std	Y+1, r1	; 0x01
    51bc:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    51c0:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    51c4:	80 91 0f 40 	lds	r24, 0x400F	; 0x80400f <g_off_air_seconds>
    51c8:	90 91 10 40 	lds	r25, 0x4010	; 0x804010 <g_off_air_seconds+0x1>
    51cc:	82 0f       	add	r24, r18
    51ce:	93 1f       	adc	r25, r19
    51d0:	8a 87       	std	Y+10, r24	; 0x0a
    51d2:	9b 87       	std	Y+11, r25	; 0x0b
    51d4:	8a 85       	ldd	r24, Y+10	; 0x0a
    51d6:	9b 85       	ldd	r25, Y+11	; 0x0b
    51d8:	9c 01       	movw	r18, r24
    51da:	99 0f       	add	r25, r25
    51dc:	44 0b       	sbc	r20, r20
    51de:	55 0b       	sbc	r21, r21
    51e0:	8e 81       	ldd	r24, Y+6	; 0x06
    51e2:	9f 81       	ldd	r25, Y+7	; 0x07
    51e4:	a8 85       	ldd	r26, Y+8	; 0x08
    51e6:	b9 85       	ldd	r27, Y+9	; 0x09
    51e8:	bc 01       	movw	r22, r24
    51ea:	cd 01       	movw	r24, r26
    51ec:	0e 94 d4 75 	call	0xeba8	; 0xeba8 <__divmodsi4>
    51f0:	dc 01       	movw	r26, r24
    51f2:	cb 01       	movw	r24, r22
    51f4:	8c 87       	std	Y+12, r24	; 0x0c
    51f6:	9d 87       	std	Y+13, r25	; 0x0d
    51f8:	20 91 7e 47 	lds	r18, 0x477E	; 0x80477e <g_intra_cycle_delay_time>
    51fc:	30 91 7f 47 	lds	r19, 0x477F	; 0x80477f <g_intra_cycle_delay_time+0x1>
    5200:	8c 85       	ldd	r24, Y+12	; 0x0c
    5202:	9d 85       	ldd	r25, Y+13	; 0x0d
    5204:	a9 01       	movw	r20, r18
    5206:	48 1b       	sub	r20, r24
    5208:	59 0b       	sbc	r21, r25
    520a:	ca 01       	movw	r24, r20
    520c:	8e 87       	std	Y+14, r24	; 0x0e
    520e:	9f 87       	std	Y+15, r25	; 0x0f
    5210:	8e 85       	ldd	r24, Y+14	; 0x0e
    5212:	9f 85       	ldd	r25, Y+15	; 0x0f
    5214:	18 16       	cp	r1, r24
    5216:	19 06       	cpc	r1, r25
    5218:	0c f4       	brge	.+2      	; 0x521c <_Z33activateEventUsingCurrentSettingsP2SC+0x23a>
    521a:	a8 c0       	rjmp	.+336    	; 0x536c <_Z33activateEventUsingCurrentSettingsP2SC+0x38a>
    521c:	8e 85       	ldd	r24, Y+14	; 0x0e
    521e:	9f 85       	ldd	r25, Y+15	; 0x0f
    5220:	22 27       	eor	r18, r18
    5222:	33 27       	eor	r19, r19
    5224:	28 1b       	sub	r18, r24
    5226:	39 0b       	sbc	r19, r25
    5228:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    522c:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5230:	41 e0       	ldi	r20, 0x01	; 1
    5232:	28 17       	cp	r18, r24
    5234:	39 07       	cpc	r19, r25
    5236:	0c f4       	brge	.+2      	; 0x523a <_Z33activateEventUsingCurrentSettingsP2SC+0x258>
    5238:	40 e0       	ldi	r20, 0x00	; 0
    523a:	44 23       	and	r20, r20
    523c:	09 f4       	brne	.+2      	; 0x5240 <_Z33activateEventUsingCurrentSettingsP2SC+0x25e>
    523e:	41 c0       	rjmp	.+130    	; 0x52c2 <_Z33activateEventUsingCurrentSettingsP2SC+0x2e0>
    5240:	2a 85       	ldd	r18, Y+10	; 0x0a
    5242:	3b 85       	ldd	r19, Y+11	; 0x0b
    5244:	8e 85       	ldd	r24, Y+14	; 0x0e
    5246:	9f 85       	ldd	r25, Y+15	; 0x0f
    5248:	82 0f       	add	r24, r18
    524a:	93 1f       	adc	r25, r19
    524c:	91 95       	neg	r25
    524e:	81 95       	neg	r24
    5250:	91 09       	sbc	r25, r1
    5252:	09 2e       	mov	r0, r25
    5254:	00 0c       	add	r0, r0
    5256:	aa 0b       	sbc	r26, r26
    5258:	bb 0b       	sbc	r27, r27
    525a:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    525e:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    5262:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    5266:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    526a:	8a 89       	ldd	r24, Y+18	; 0x12
    526c:	9b 89       	ldd	r25, Y+19	; 0x13
    526e:	89 2b       	or	r24, r25
    5270:	29 f0       	breq	.+10     	; 0x527c <_Z33activateEventUsingCurrentSettingsP2SC+0x29a>
    5272:	8a 89       	ldd	r24, Y+18	; 0x12
    5274:	9b 89       	ldd	r25, Y+19	; 0x13
    5276:	2e ef       	ldi	r18, 0xFE	; 254
    5278:	fc 01       	movw	r30, r24
    527a:	20 83       	st	Z, r18
    527c:	90 91 88 47 	lds	r25, 0x4788	; 0x804788 <g_event_enabled>
    5280:	81 e0       	ldi	r24, 0x01	; 1
    5282:	89 27       	eor	r24, r25
    5284:	88 23       	and	r24, r24
    5286:	09 f4       	brne	.+2      	; 0x528a <_Z33activateEventUsingCurrentSettingsP2SC+0x2a8>
    5288:	a6 c0       	rjmp	.+332    	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    528a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    528e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5292:	9c 01       	movw	r18, r24
    5294:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    5298:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    529c:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    52a0:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    52a4:	28 1b       	sub	r18, r24
    52a6:	39 0b       	sbc	r19, r25
    52a8:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    52ac:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    52b0:	a9 01       	movw	r20, r18
    52b2:	48 1b       	sub	r20, r24
    52b4:	59 0b       	sbc	r21, r25
    52b6:	ca 01       	movw	r24, r20
    52b8:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    52bc:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    52c0:	8a c0       	rjmp	.+276    	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    52c2:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    52c6:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    52ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    52cc:	9f 85       	ldd	r25, Y+15	; 0x0f
    52ce:	82 0f       	add	r24, r18
    52d0:	93 1f       	adc	r25, r19
    52d2:	09 2e       	mov	r0, r25
    52d4:	00 0c       	add	r0, r0
    52d6:	aa 0b       	sbc	r26, r26
    52d8:	bb 0b       	sbc	r27, r27
    52da:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    52de:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    52e2:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    52e6:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    52ea:	81 e0       	ldi	r24, 0x01	; 1
    52ec:	89 83       	std	Y+1, r24	; 0x01
    52ee:	8a 89       	ldd	r24, Y+18	; 0x12
    52f0:	9b 89       	ldd	r25, Y+19	; 0x13
    52f2:	89 2b       	or	r24, r25
    52f4:	29 f0       	breq	.+10     	; 0x5300 <_Z33activateEventUsingCurrentSettingsP2SC+0x31e>
    52f6:	8a 89       	ldd	r24, Y+18	; 0x12
    52f8:	9b 89       	ldd	r25, Y+19	; 0x13
    52fa:	2d ef       	ldi	r18, 0xFD	; 253
    52fc:	fc 01       	movw	r30, r24
    52fe:	20 83       	st	Z, r18
    5300:	90 91 88 47 	lds	r25, 0x4788	; 0x804788 <g_event_enabled>
    5304:	81 e0       	ldi	r24, 0x01	; 1
    5306:	89 27       	eor	r24, r25
    5308:	88 23       	and	r24, r24
    530a:	09 f4       	brne	.+2      	; 0x530e <_Z33activateEventUsingCurrentSettingsP2SC+0x32c>
    530c:	64 c0       	rjmp	.+200    	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    530e:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    5312:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    5316:	9c 01       	movw	r18, r24
    5318:	40 e0       	ldi	r20, 0x00	; 0
    531a:	50 e0       	ldi	r21, 0x00	; 0
    531c:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    5320:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    5324:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    5328:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    532c:	61 e0       	ldi	r22, 0x01	; 1
    532e:	28 17       	cp	r18, r24
    5330:	39 07       	cpc	r19, r25
    5332:	4a 07       	cpc	r20, r26
    5334:	5b 07       	cpc	r21, r27
    5336:	0c f0       	brlt	.+2      	; 0x533a <_Z33activateEventUsingCurrentSettingsP2SC+0x358>
    5338:	60 e0       	ldi	r22, 0x00	; 0
    533a:	66 23       	and	r22, r22
    533c:	09 f4       	brne	.+2      	; 0x5340 <_Z33activateEventUsingCurrentSettingsP2SC+0x35e>
    533e:	4b c0       	rjmp	.+150    	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    5340:	80 91 48 47 	lds	r24, 0x4748	; 0x804748 <_ZL12g_on_the_air>
    5344:	90 91 49 47 	lds	r25, 0x4749	; 0x804749 <_ZL12g_on_the_air+0x1>
    5348:	a0 91 4a 47 	lds	r26, 0x474A	; 0x80474a <_ZL12g_on_the_air+0x2>
    534c:	b0 91 4b 47 	lds	r27, 0x474B	; 0x80474b <_ZL12g_on_the_air+0x3>
    5350:	9c 01       	movw	r18, r24
    5352:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    5356:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    535a:	a9 01       	movw	r20, r18
    535c:	48 1b       	sub	r20, r24
    535e:	59 0b       	sbc	r21, r25
    5360:	ca 01       	movw	r24, r20
    5362:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    5366:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    536a:	35 c0       	rjmp	.+106    	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    536c:	8e 85       	ldd	r24, Y+14	; 0x0e
    536e:	9f 85       	ldd	r25, Y+15	; 0x0f
    5370:	91 95       	neg	r25
    5372:	81 95       	neg	r24
    5374:	91 09       	sbc	r25, r1
    5376:	09 2e       	mov	r0, r25
    5378:	00 0c       	add	r0, r0
    537a:	aa 0b       	sbc	r26, r26
    537c:	bb 0b       	sbc	r27, r27
    537e:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    5382:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    5386:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    538a:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
    538e:	8a 89       	ldd	r24, Y+18	; 0x12
    5390:	9b 89       	ldd	r25, Y+19	; 0x13
    5392:	89 2b       	or	r24, r25
    5394:	29 f0       	breq	.+10     	; 0x53a0 <_Z33activateEventUsingCurrentSettingsP2SC+0x3be>
    5396:	8a 89       	ldd	r24, Y+18	; 0x12
    5398:	9b 89       	ldd	r25, Y+19	; 0x13
    539a:	2e ef       	ldi	r18, 0xFE	; 254
    539c:	fc 01       	movw	r30, r24
    539e:	20 83       	st	Z, r18
    53a0:	90 91 88 47 	lds	r25, 0x4788	; 0x804788 <g_event_enabled>
    53a4:	81 e0       	ldi	r24, 0x01	; 1
    53a6:	89 27       	eor	r24, r25
    53a8:	88 23       	and	r24, r24
    53aa:	a9 f0       	breq	.+42     	; 0x53d6 <_Z33activateEventUsingCurrentSettingsP2SC+0x3f4>
    53ac:	20 91 0d 40 	lds	r18, 0x400D	; 0x80400d <g_on_air_seconds>
    53b0:	30 91 0e 40 	lds	r19, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    53b4:	8e 85       	ldd	r24, Y+14	; 0x0e
    53b6:	9f 85       	ldd	r25, Y+15	; 0x0f
    53b8:	82 0f       	add	r24, r18
    53ba:	93 1f       	adc	r25, r19
    53bc:	9c 01       	movw	r18, r24
    53be:	80 91 7c 47 	lds	r24, 0x477C	; 0x80477c <g_time_needed_for_ID>
    53c2:	90 91 7d 47 	lds	r25, 0x477D	; 0x80477d <g_time_needed_for_ID+0x1>
    53c6:	a9 01       	movw	r20, r18
    53c8:	48 1b       	sub	r20, r24
    53ca:	59 0b       	sbc	r21, r25
    53cc:	ca 01       	movw	r24, r20
    53ce:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    53d2:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
    53d6:	89 81       	ldd	r24, Y+1	; 0x01
    53d8:	88 23       	and	r24, r24
    53da:	e1 f0       	breq	.+56     	; 0x5414 <_Z33activateEventUsingCurrentSettingsP2SC+0x432>
    53dc:	80 91 88 47 	lds	r24, 0x4788	; 0x804788 <g_event_enabled>
    53e0:	88 8b       	std	Y+16, r24	; 0x10
    53e2:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>
    53e6:	81 e0       	ldi	r24, 0x01	; 1
    53e8:	89 8b       	std	Y+17, r24	; 0x11
    53ea:	ce 01       	movw	r24, r28
    53ec:	41 96       	adiw	r24, 0x11	; 17
    53ee:	40 e0       	ldi	r20, 0x00	; 0
    53f0:	50 e0       	ldi	r21, 0x00	; 0
    53f2:	bc 01       	movw	r22, r24
    53f4:	82 e5       	ldi	r24, 0x52	; 82
    53f6:	97 e4       	ldi	r25, 0x47	; 71
    53f8:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
    53fc:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5400:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    5404:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5408:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>
    540c:	88 89       	ldd	r24, Y+16	; 0x10
    540e:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_event_enabled>
    5412:	03 c0       	rjmp	.+6      	; 0x541a <_Z33activateEventUsingCurrentSettingsP2SC+0x438>
    5414:	80 e0       	ldi	r24, 0x00	; 0
    5416:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
    541a:	81 e0       	ldi	r24, 0x01	; 1
    541c:	80 93 89 47 	sts	0x4789, r24	; 0x804789 <g_event_commenced>
    5420:	0c c0       	rjmp	.+24     	; 0x543a <_Z33activateEventUsingCurrentSettingsP2SC+0x458>
    5422:	8a 89       	ldd	r24, Y+18	; 0x12
    5424:	9b 89       	ldd	r25, Y+19	; 0x13
    5426:	89 2b       	or	r24, r25
    5428:	29 f0       	breq	.+10     	; 0x5434 <_Z33activateEventUsingCurrentSettingsP2SC+0x452>
    542a:	8a 89       	ldd	r24, Y+18	; 0x12
    542c:	9b 89       	ldd	r25, Y+19	; 0x13
    542e:	2f ef       	ldi	r18, 0xFF	; 255
    5430:	fc 01       	movw	r30, r24
    5432:	20 83       	st	Z, r18
    5434:	80 e0       	ldi	r24, 0x00	; 0
    5436:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
    543a:	10 92 8b 47 	sts	0x478B, r1	; 0x80478b <g_waiting_for_next_event>
    543e:	8a e5       	ldi	r24, 0x5A	; 90
    5440:	90 e0       	ldi	r25, 0x00	; 0
    5442:	80 93 13 40 	sts	0x4013, r24	; 0x804013 <g_update_timeout_seconds>
    5446:	90 93 14 40 	sts	0x4014, r25	; 0x804014 <g_update_timeout_seconds+0x1>
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	63 96       	adiw	r28, 0x13	; 19
    544e:	cd bf       	out	0x3d, r28	; 61
    5450:	de bf       	out	0x3e, r29	; 62
    5452:	df 91       	pop	r29
    5454:	cf 91       	pop	r28
    5456:	08 95       	ret

00005458 <_Z8rtc_initv>:
    5458:	cf 93       	push	r28
    545a:	df 93       	push	r29
    545c:	cd b7       	in	r28, 0x3d	; 61
    545e:	de b7       	in	r29, 0x3e	; 62
    5460:	61 e0       	ldi	r22, 0x01	; 1
    5462:	83 e0       	ldi	r24, 0x03	; 3
    5464:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <PORTC_set_pin_pull_mode>
    5468:	61 e0       	ldi	r22, 0x01	; 1
    546a:	82 e0       	ldi	r24, 0x02	; 2
    546c:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <PORTC_set_pin_pull_mode>
    5470:	0e 94 c1 3b 	call	0x7782	; 0x7782 <ds3231_init>
    5474:	81 e0       	ldi	r24, 0x01	; 1
    5476:	0e 94 b0 41 	call	0x8360	; 0x8360 <ds3231_1s_sqw>
    547a:	88 23       	and	r24, r24
    547c:	11 f0       	breq	.+4      	; 0x5482 <_Z8rtc_initv+0x2a>
    547e:	8c ef       	ldi	r24, 0xFC	; 252
    5480:	01 c0       	rjmp	.+2      	; 0x5484 <_Z8rtc_initv+0x2c>
    5482:	80 e0       	ldi	r24, 0x00	; 0
    5484:	df 91       	pop	r29
    5486:	cf 91       	pop	r28
    5488:	08 95       	ret

0000548a <_Z18antennaIsConnectedv>:
    548a:	cf 93       	push	r28
    548c:	df 93       	push	r29
    548e:	1f 92       	push	r1
    5490:	cd b7       	in	r28, 0x3d	; 61
    5492:	de b7       	in	r29, 0x3e	; 62
    5494:	81 e0       	ldi	r24, 0x01	; 1
    5496:	0e 94 28 10 	call	0x2050	; 0x2050 <PORTD_get_pin_level>
    549a:	89 83       	std	Y+1, r24	; 0x01
    549c:	99 81       	ldd	r25, Y+1	; 0x01
    549e:	81 e0       	ldi	r24, 0x01	; 1
    54a0:	89 27       	eor	r24, r25
    54a2:	0f 90       	pop	r0
    54a4:	df 91       	pop	r29
    54a6:	cf 91       	pop	r28
    54a8:	08 95       	ret

000054aa <_Z12suspendEventv>:

void suspendEvent()
{
    54aa:	cf 93       	push	r28
    54ac:	df 93       	push	r29
    54ae:	cd b7       	in	r28, 0x3d	; 61
    54b0:	de b7       	in	r29, 0x3e	; 62
	
}
    54b2:	00 00       	nop
    54b4:	df 91       	pop	r29
    54b6:	cf 91       	pop	r28
    54b8:	08 95       	ret

000054ba <_Z13startEventNow19EventActionSource_t>:


void startEventNow(EventActionSource_t activationSource)
{
    54ba:	cf 93       	push	r28
    54bc:	df 93       	push	r29
    54be:	00 d0       	rcall	.+0      	; 0x54c0 <_Z13startEventNow19EventActionSource_t+0x6>
    54c0:	cd b7       	in	r28, 0x3d	; 61
    54c2:	de b7       	in	r29, 0x3e	; 62
    54c4:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    54c6:	0e 94 3b 31 	call	0x6276	; 0x6276 <_Z23clockConfigurationCheckv>
    54ca:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == POWER_UP)
    54cc:	8a 81       	ldd	r24, Y+2	; 0x02
    54ce:	88 23       	and	r24, r24
    54d0:	79 f4       	brne	.+30     	; 0x54f0 <_Z13startEventNow19EventActionSource_t+0x36>
	{
		if(conf == CONFIGURATION_ERROR)
    54d2:	89 81       	ldd	r24, Y+1	; 0x01
    54d4:	82 30       	cpi	r24, 0x02	; 2
    54d6:	31 f4       	brne	.+12     	; 0x54e4 <_Z13startEventNow19EventActionSource_t+0x2a>
		{
			setupForFox(NULL, START_NOTHING);
    54d8:	60 e0       	ldi	r22, 0x00	; 0
    54da:	80 e0       	ldi	r24, 0x00	; 0
    54dc:	90 e0       	ldi	r25, 0x00	; 0
    54de:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    54e2:	47 c0       	rjmp	.+142    	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    54e4:	63 e0       	ldi	r22, 0x03	; 3
    54e6:	80 e0       	ldi	r24, 0x00	; 0
    54e8:	90 e0       	ldi	r25, 0x00	; 0
    54ea:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    54ee:	41 c0       	rjmp	.+130    	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
		else
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
		}
	}
	else if(activationSource == PROGRAMMATIC)
    54f0:	8a 81       	ldd	r24, Y+2	; 0x02
    54f2:	82 30       	cpi	r24, 0x02	; 2
    54f4:	f1 f4       	brne	.+60     	; 0x5532 <_Z13startEventNow19EventActionSource_t+0x78>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
    54f6:	89 81       	ldd	r24, Y+1	; 0x01
    54f8:	82 30       	cpi	r24, 0x02	; 2
    54fa:	31 f4       	brne	.+12     	; 0x5508 <_Z13startEventNow19EventActionSource_t+0x4e>
		{
			setupForFox(NULL, START_EVENT_NOW);
    54fc:	61 e0       	ldi	r22, 0x01	; 1
    54fe:	80 e0       	ldi	r24, 0x00	; 0
    5500:	90 e0       	ldi	r25, 0x00	; 0
    5502:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5506:	35 c0       	rjmp	.+106    	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* Start immediately */
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else if((conf == WAITING_FOR_START) || (conf == SCHEDULED_EVENT_WILL_NEVER_RUN) || (conf == SCHEDULED_EVENT_DID_NOT_START)) /* Start immediately */
    5508:	89 81       	ldd	r24, Y+1	; 0x01
    550a:	81 30       	cpi	r24, 0x01	; 1
    550c:	31 f0       	breq	.+12     	; 0x551a <_Z13startEventNow19EventActionSource_t+0x60>
    550e:	89 81       	ldd	r24, Y+1	; 0x01
    5510:	84 30       	cpi	r24, 0x04	; 4
    5512:	19 f0       	breq	.+6      	; 0x551a <_Z13startEventNow19EventActionSource_t+0x60>
    5514:	89 81       	ldd	r24, Y+1	; 0x01
    5516:	83 30       	cpi	r24, 0x03	; 3
    5518:	31 f4       	brne	.+12     	; 0x5526 <_Z13startEventNow19EventActionSource_t+0x6c>
		{
			setupForFox(NULL, START_EVENT_NOW);
    551a:	61 e0       	ldi	r22, 0x01	; 1
    551c:	80 e0       	ldi	r24, 0x00	; 0
    551e:	90 e0       	ldi	r25, 0x00	; 0
    5520:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5524:	26 c0       	rjmp	.+76     	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /*if((conf == EVENT_IN_PROGRESS) */
		{
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
    5526:	63 e0       	ldi	r22, 0x03	; 3
    5528:	80 e0       	ldi	r24, 0x00	; 0
    552a:	90 e0       	ldi	r25, 0x00	; 0
    552c:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5530:	20 c0       	rjmp	.+64     	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
			setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                                  /* Let the RTC start the event */
		}
	}
	else                                                                                                                            /* PUSHBUTTON */
	{
		if(conf == CONFIGURATION_ERROR)                                                                                             /* No scheduled event */
    5532:	89 81       	ldd	r24, Y+1	; 0x01
    5534:	82 30       	cpi	r24, 0x02	; 2
    5536:	31 f4       	brne	.+12     	; 0x5544 <_Z13startEventNow19EventActionSource_t+0x8a>
		{
			setupForFox(NULL, START_EVENT_NOW);
    5538:	61 e0       	ldi	r22, 0x01	; 1
    553a:	80 e0       	ldi	r24, 0x00	; 0
    553c:	90 e0       	ldi	r25, 0x00	; 0
    553e:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5542:	17 c0       	rjmp	.+46     	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			setupForFox(NULL, START_EVENT_NOW);
		}
		else                                                                                                                        /* if(buttonActivated) */
		{
			if(conf == WAITING_FOR_START)
    5544:	89 81       	ldd	r24, Y+1	; 0x01
    5546:	81 30       	cpi	r24, 0x01	; 1
    5548:	31 f4       	brne	.+12     	; 0x5556 <_Z13startEventNow19EventActionSource_t+0x9c>
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
    554a:	62 e0       	ldi	r22, 0x02	; 2
    554c:	80 e0       	ldi	r24, 0x00	; 0
    554e:	90 e0       	ldi	r25, 0x00	; 0
    5550:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5554:	0e c0       	rjmp	.+28     	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
		{
			if(conf == WAITING_FOR_START)
			{
				setupForFox(NULL, START_TRANSMISSIONS_NOW);                                                                         /* Start transmitting! */
			}
			else if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    5556:	89 81       	ldd	r24, Y+1	; 0x01
    5558:	84 30       	cpi	r24, 0x04	; 4
    555a:	31 f4       	brne	.+12     	; 0x5568 <_Z13startEventNow19EventActionSource_t+0xae>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
    555c:	63 e0       	ldi	r22, 0x03	; 3
    555e:	80 e0       	ldi	r24, 0x00	; 0
    5560:	90 e0       	ldi	r25, 0x00	; 0
    5562:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5566:	05 c0       	rjmp	.+10     	; 0x5572 <_Z13startEventNow19EventActionSource_t+0xb8>
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* rtc starts the event */
			}
			else                                                                                                                    /* Event should be running now */
			{
				setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);                                                              /* start the running event */
    5568:	63 e0       	ldi	r22, 0x03	; 3
    556a:	80 e0       	ldi	r24, 0x00	; 0
    556c:	90 e0       	ldi	r25, 0x00	; 0
    556e:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
			}
		}
	}

// 	g_LED_enunciating = false;
}
    5572:	00 00       	nop
    5574:	0f 90       	pop	r0
    5576:	0f 90       	pop	r0
    5578:	df 91       	pop	r29
    557a:	cf 91       	pop	r28
    557c:	08 95       	ret

0000557e <_Z12stopEventNow19EventActionSource_t>:

void stopEventNow(EventActionSource_t activationSource)
{
    557e:	cf 93       	push	r28
    5580:	df 93       	push	r29
    5582:	00 d0       	rcall	.+0      	; 0x5584 <_Z12stopEventNow19EventActionSource_t+0x6>
    5584:	cd b7       	in	r28, 0x3d	; 61
    5586:	de b7       	in	r29, 0x3e	; 62
    5588:	8a 83       	std	Y+2, r24	; 0x02
	ConfigurationState_t conf = clockConfigurationCheck();
    558a:	0e 94 3b 31 	call	0x6276	; 0x6276 <_Z23clockConfigurationCheckv>
    558e:	89 83       	std	Y+1, r24	; 0x01

	if(activationSource == PROGRAMMATIC)
    5590:	8a 81       	ldd	r24, Y+2	; 0x02
    5592:	82 30       	cpi	r24, 0x02	; 2
    5594:	31 f4       	brne	.+12     	; 0x55a2 <_Z12stopEventNow19EventActionSource_t+0x24>
	{
		setupForFox(NULL, START_NOTHING);
    5596:	60 e0       	ldi	r22, 0x00	; 0
    5598:	80 e0       	ldi	r24, 0x00	; 0
    559a:	90 e0       	ldi	r25, 0x00	; 0
    559c:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    55a0:	16 c0       	rjmp	.+44     	; 0x55ce <_Z12stopEventNow19EventActionSource_t+0x50>
	{
		setupForFox(NULL, START_NOTHING);
	}
	else    /* if(activationSource == PUSHBUTTON) */
	{
		if(conf == WAITING_FOR_START)
    55a2:	89 81       	ldd	r24, Y+1	; 0x01
    55a4:	81 30       	cpi	r24, 0x01	; 1
    55a6:	29 f4       	brne	.+10     	; 0x55b2 <_Z12stopEventNow19EventActionSource_t+0x34>
		{
			setupForFox(NULL, START_TRANSMISSIONS_NOW);
    55a8:	62 e0       	ldi	r22, 0x02	; 2
    55aa:	80 e0       	ldi	r24, 0x00	; 0
    55ac:	90 e0       	ldi	r25, 0x00	; 0
    55ae:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
		}
		if(conf == SCHEDULED_EVENT_WILL_NEVER_RUN)
    55b2:	89 81       	ldd	r24, Y+1	; 0x01
    55b4:	84 30       	cpi	r24, 0x04	; 4
    55b6:	31 f4       	brne	.+12     	; 0x55c4 <_Z12stopEventNow19EventActionSource_t+0x46>
		{
			setupForFox(NULL, START_NOTHING);
    55b8:	60 e0       	ldi	r22, 0x00	; 0
    55ba:	80 e0       	ldi	r24, 0x00	; 0
    55bc:	90 e0       	ldi	r25, 0x00	; 0
    55be:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    55c2:	05 c0       	rjmp	.+10     	; 0x55ce <_Z12stopEventNow19EventActionSource_t+0x50>
		{
			setupForFox(NULL, START_NOTHING);
		}
		else    /*if(conf == CONFIGURATION_ERROR) */
		{
			setupForFox(NULL, START_NOTHING);
    55c4:	60 e0       	ldi	r22, 0x00	; 0
    55c6:	80 e0       	ldi	r24, 0x00	; 0
    55c8:	90 e0       	ldi	r25, 0x00	; 0
    55ca:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>

// 	if(g_sync_pin_stable == STABLE_LOW)
// 	{
// 		digitalWrite(PIN_LED, OFF); /*  LED Off */
// 	}
}
    55ce:	00 00       	nop
    55d0:	0f 90       	pop	r0
    55d2:	0f 90       	pop	r0
    55d4:	df 91       	pop	r29
    55d6:	cf 91       	pop	r28
    55d8:	08 95       	ret

000055da <_Z18startEventUsingRTCv>:

void startEventUsingRTC(void)
{
    55da:	ef 92       	push	r14
    55dc:	ff 92       	push	r15
    55de:	0f 93       	push	r16
    55e0:	1f 93       	push	r17
    55e2:	cf 93       	push	r28
    55e4:	df 93       	push	r29
    55e6:	1f 92       	push	r1
    55e8:	cd b7       	in	r28, 0x3d	; 61
    55ea:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    55ec:	80 e0       	ldi	r24, 0x00	; 0
    55ee:	90 e0       	ldi	r25, 0x00	; 0
    55f0:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    55f4:	dc 01       	movw	r26, r24
    55f6:	cb 01       	movw	r24, r22
    55f8:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    55fc:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    5600:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    5604:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>
	ConfigurationState_t state = clockConfigurationCheck();
    5608:	0e 94 3b 31 	call	0x6276	; 0x6276 <_Z23clockConfigurationCheckv>
    560c:	89 83       	std	Y+1, r24	; 0x01

	if(state != CONFIGURATION_ERROR)
    560e:	89 81       	ldd	r24, Y+1	; 0x01
    5610:	82 30       	cpi	r24, 0x02	; 2
    5612:	09 f4       	brne	.+2      	; 0x5616 <_Z18startEventUsingRTCv+0x3c>
    5614:	6c c0       	rjmp	.+216    	; 0x56ee <_Z18startEventUsingRTCv+0x114>
	{
		setupForFox(NULL, START_EVENT_WITH_STARTFINISH_TIMES);
    5616:	63 e0       	ldi	r22, 0x03	; 3
    5618:	80 e0       	ldi	r24, 0x00	; 0
    561a:	90 e0       	ldi	r25, 0x00	; 0
    561c:	0e 94 82 2b 	call	0x5704	; 0x5704 <_Z11setupForFoxP5Fox_t13EventAction_t>
		reportTimeTill(g_current_epoch, g_event_start_epoch, "Starts in: ", "In progress\n");
    5620:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    5624:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5628:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    562c:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5630:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    5634:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5638:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    563c:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5640:	0f 2e       	mov	r0, r31
    5642:	f8 e2       	ldi	r31, 0x28	; 40
    5644:	ef 2e       	mov	r14, r31
    5646:	f1 e4       	ldi	r31, 0x41	; 65
    5648:	ff 2e       	mov	r15, r31
    564a:	f0 2d       	mov	r31, r0
    564c:	05 e3       	ldi	r16, 0x35	; 53
    564e:	11 e4       	ldi	r17, 0x41	; 65
    5650:	bc 01       	movw	r22, r24
    5652:	cd 01       	movw	r24, r26
    5654:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <_Z14reportTimeTillmmPKcS0_>

		if(g_event_start_epoch < g_current_epoch)
    5658:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    565c:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5660:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    5664:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5668:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    566c:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5670:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    5674:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5678:	61 e0       	ldi	r22, 0x01	; 1
    567a:	28 17       	cp	r18, r24
    567c:	39 07       	cpc	r19, r25
    567e:	4a 07       	cpc	r20, r26
    5680:	5b 07       	cpc	r21, r27
    5682:	08 f0       	brcs	.+2      	; 0x5686 <_Z18startEventUsingRTCv+0xac>
    5684:	60 e0       	ldi	r22, 0x00	; 0
    5686:	66 23       	and	r22, r22
    5688:	c9 f0       	breq	.+50     	; 0x56bc <_Z18startEventUsingRTCv+0xe2>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
    568a:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    568e:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    5692:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    5696:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    569a:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    569e:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    56a2:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    56a6:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    56aa:	e1 2c       	mov	r14, r1
    56ac:	f1 2c       	mov	r15, r1
    56ae:	09 e4       	ldi	r16, 0x49	; 73
    56b0:	11 e4       	ldi	r17, 0x41	; 65
    56b2:	bc 01       	movw	r22, r24
    56b4:	cd 01       	movw	r24, r26
    56b6:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    56ba:	1b c0       	rjmp	.+54     	; 0x56f2 <_Z18startEventUsingRTCv+0x118>
		{
			reportTimeTill(g_current_epoch, g_event_finish_epoch, "Time Remaining: ", NULL);
		}
		else
		{
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
    56bc:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    56c0:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    56c4:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    56c8:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    56cc:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    56d0:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    56d4:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    56d8:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    56dc:	e1 2c       	mov	r14, r1
    56de:	f1 2c       	mov	r15, r1
    56e0:	01 e4       	ldi	r16, 0x41	; 65
    56e2:	11 e4       	ldi	r17, 0x41	; 65
    56e4:	bc 01       	movw	r22, r24
    56e6:	cd 01       	movw	r24, r26
    56e8:	0e 94 99 2f 	call	0x5f32	; 0x5f32 <_Z14reportTimeTillmmPKcS0_>
	}
	else
	{
		reportConfigErrors();
	}
}
    56ec:	02 c0       	rjmp	.+4      	; 0x56f2 <_Z18startEventUsingRTCv+0x118>
			reportTimeTill(g_event_start_epoch, g_event_finish_epoch, "Lasts: ", NULL);
		}
	}
	else
	{
		reportConfigErrors();
    56ee:	0e 94 d2 31 	call	0x63a4	; 0x63a4 <_Z18reportConfigErrorsv>
	}
}
    56f2:	00 00       	nop
    56f4:	0f 90       	pop	r0
    56f6:	df 91       	pop	r29
    56f8:	cf 91       	pop	r28
    56fa:	1f 91       	pop	r17
    56fc:	0f 91       	pop	r16
    56fe:	ff 90       	pop	r15
    5700:	ef 90       	pop	r14
    5702:	08 95       	ret

00005704 <_Z11setupForFoxP5Fox_t13EventAction_t>:



void setupForFox(Fox_t* fox, EventAction_t action)
{
    5704:	cf 93       	push	r28
    5706:	df 93       	push	r29
    5708:	cd b7       	in	r28, 0x3d	; 61
    570a:	de b7       	in	r29, 0x3e	; 62
    570c:	2c 97       	sbiw	r28, 0x0c	; 12
    570e:	cd bf       	out	0x3d, r28	; 61
    5710:	de bf       	out	0x3e, r29	; 62
    5712:	8a 87       	std	Y+10, r24	; 0x0a
    5714:	9b 87       	std	Y+11, r25	; 0x0b
    5716:	6c 87       	std	Y+12, r22	; 0x0c
	bool patternNotSet = true;
    5718:	81 e0       	ldi	r24, 0x01	; 1
    571a:	89 83       	std	Y+1, r24	; 0x01
	
	if(fox)
    571c:	8a 85       	ldd	r24, Y+10	; 0x0a
    571e:	9b 85       	ldd	r25, Y+11	; 0x0b
    5720:	89 2b       	or	r24, r25
    5722:	61 f0       	breq	.+24     	; 0x573c <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
	{
		if(*fox != INVALID_FOX)
    5724:	8a 85       	ldd	r24, Y+10	; 0x0a
    5726:	9b 85       	ldd	r25, Y+11	; 0x0b
    5728:	fc 01       	movw	r30, r24
    572a:	80 81       	ld	r24, Z
    572c:	82 31       	cpi	r24, 0x12	; 18
    572e:	31 f0       	breq	.+12     	; 0x573c <_Z11setupForFoxP5Fox_t13EventAction_t+0x38>
		{
			g_fox = *fox;
    5730:	8a 85       	ldd	r24, Y+10	; 0x0a
    5732:	9b 85       	ldd	r25, Y+11	; 0x0b
    5734:	fc 01       	movw	r30, r24
    5736:	80 81       	ld	r24, Z
    5738:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
		}
	}

	g_event_enabled = false;
    573c:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>
	g_event_commenced = false;
    5740:	10 92 89 47 	sts	0x4789, r1	; 0x804789 <g_event_commenced>
	LED_set_RED_level(OFF);
    5744:	80 e0       	ldi	r24, 0x00	; 0
    5746:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
 	g_current_epoch = ds3231_get_epoch(null);
    574a:	80 e0       	ldi	r24, 0x00	; 0
    574c:	90 e0       	ldi	r25, 0x00	; 0
    574e:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    5752:	dc 01       	movw	r26, r24
    5754:	cb 01       	movw	r24, r22
    5756:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    575a:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    575e:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    5762:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>

	switch(g_fox)
    5766:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    576a:	88 2f       	mov	r24, r24
    576c:	90 e0       	ldi	r25, 0x00	; 0
    576e:	09 2e       	mov	r0, r25
    5770:	00 0c       	add	r0, r0
    5772:	aa 0b       	sbc	r26, r26
    5774:	bb 0b       	sbc	r27, r27
    5776:	41 e0       	ldi	r20, 0x01	; 1
    5778:	50 e0       	ldi	r21, 0x00	; 0
    577a:	20 e1       	ldi	r18, 0x10	; 16
    577c:	30 e0       	ldi	r19, 0x00	; 0
    577e:	84 1b       	sub	r24, r20
    5780:	95 0b       	sbc	r25, r21
    5782:	28 17       	cp	r18, r24
    5784:	39 07       	cpc	r19, r25
    5786:	08 f4       	brcc	.+2      	; 0x578a <_Z11setupForFoxP5Fox_t13EventAction_t+0x86>
    5788:	a1 c1       	rjmp	.+834    	; 0x5acc <_Z11setupForFoxP5Fox_t13EventAction_t+0x3c8>
    578a:	8c 58       	subi	r24, 0x8C	; 140
    578c:	9f 4f       	sbci	r25, 0xFF	; 255
    578e:	fc 01       	movw	r30, r24
    5790:	0c 94 f3 75 	jmp	0xebe6	; 0xebe6 <__tablejump2__>
	{
		case FOX_1:
		{
			if(patternNotSet)
    5794:	89 81       	ldd	r24, Y+1	; 0x01
    5796:	88 23       	and	r24, r24
    5798:	89 f0       	breq	.+34     	; 0x57bc <_Z11setupForFoxP5Fox_t13EventAction_t+0xb8>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOE");
    579a:	8d e4       	ldi	r24, 0x4D	; 77
    579c:	9f e4       	ldi	r25, 0x4F	; 79
    579e:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    57a2:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    57a6:	85 e4       	ldi	r24, 0x45	; 69
    57a8:	90 e0       	ldi	r25, 0x00	; 0
    57aa:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <g_messages_text+0x2>
    57ae:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <g_messages_text+0x3>
				patternNotSet = false;
    57b2:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    57b4:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <g_intra_cycle_delay_time>
    57b8:	10 92 7f 47 	sts	0x477F, r1	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_2:
		{
			if(patternNotSet)
    57bc:	89 81       	ldd	r24, Y+1	; 0x01
    57be:	88 23       	and	r24, r24
    57c0:	99 f0       	breq	.+38     	; 0x57e8 <_Z11setupForFoxP5Fox_t13EventAction_t+0xe4>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOI");
    57c2:	8d e4       	ldi	r24, 0x4D	; 77
    57c4:	9f e4       	ldi	r25, 0x4F	; 79
    57c6:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    57ca:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    57ce:	89 e4       	ldi	r24, 0x49	; 73
    57d0:	90 e0       	ldi	r25, 0x00	; 0
    57d2:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <g_messages_text+0x2>
    57d6:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <g_messages_text+0x3>
				patternNotSet = false;
    57da:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 60;
    57dc:	8c e3       	ldi	r24, 0x3C	; 60
    57de:	90 e0       	ldi	r25, 0x00	; 0
    57e0:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    57e4:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_3:
		{
			if(patternNotSet)
    57e8:	89 81       	ldd	r24, Y+1	; 0x01
    57ea:	88 23       	and	r24, r24
    57ec:	99 f0       	breq	.+38     	; 0x5814 <_Z11setupForFoxP5Fox_t13EventAction_t+0x110>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOS");
    57ee:	8d e4       	ldi	r24, 0x4D	; 77
    57f0:	9f e4       	ldi	r25, 0x4F	; 79
    57f2:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    57f6:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    57fa:	83 e5       	ldi	r24, 0x53	; 83
    57fc:	90 e0       	ldi	r25, 0x00	; 0
    57fe:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <g_messages_text+0x2>
    5802:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <g_messages_text+0x3>
				patternNotSet = false;
    5806:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 120;
    5808:	88 e7       	ldi	r24, 0x78	; 120
    580a:	90 e0       	ldi	r25, 0x00	; 0
    580c:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    5810:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_4:
		{
			if(patternNotSet)
    5814:	89 81       	ldd	r24, Y+1	; 0x01
    5816:	88 23       	and	r24, r24
    5818:	99 f0       	breq	.+38     	; 0x5840 <_Z11setupForFoxP5Fox_t13EventAction_t+0x13c>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MOH");
    581a:	8d e4       	ldi	r24, 0x4D	; 77
    581c:	9f e4       	ldi	r25, 0x4F	; 79
    581e:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5822:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5826:	88 e4       	ldi	r24, 0x48	; 72
    5828:	90 e0       	ldi	r25, 0x00	; 0
    582a:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <g_messages_text+0x2>
    582e:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <g_messages_text+0x3>
				patternNotSet = false;
    5832:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 180;
    5834:	84 eb       	ldi	r24, 0xB4	; 180
    5836:	90 e0       	ldi	r25, 0x00	; 0
    5838:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    583c:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case FOX_5:
		{
			/* Set the Morse code pattern and speed */
			if(patternNotSet)
    5840:	89 81       	ldd	r24, Y+1	; 0x01
    5842:	88 23       	and	r24, r24
    5844:	91 f0       	breq	.+36     	; 0x586a <_Z11setupForFoxP5Fox_t13EventAction_t+0x166>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO5");
    5846:	8d e4       	ldi	r24, 0x4D	; 77
    5848:	9f e4       	ldi	r25, 0x4F	; 79
    584a:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    584e:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5852:	85 e3       	ldi	r24, 0x35	; 53
    5854:	90 e0       	ldi	r25, 0x00	; 0
    5856:	80 93 54 47 	sts	0x4754, r24	; 0x804754 <g_messages_text+0x2>
    585a:	90 93 55 47 	sts	0x4755, r25	; 0x804755 <g_messages_text+0x3>
				g_intra_cycle_delay_time = 240;
    585e:	80 ef       	ldi	r24, 0xF0	; 240
    5860:	90 e0       	ldi	r25, 0x00	; 0
    5862:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    5866:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    586a:	81 e0       	ldi	r24, 0x01	; 1
    586c:	8a 83       	std	Y+2, r24	; 0x02
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    586e:	ce 01       	movw	r24, r28
    5870:	02 96       	adiw	r24, 0x02	; 2
    5872:	40 e0       	ldi	r20, 0x00	; 0
    5874:	50 e0       	ldi	r21, 0x00	; 0
    5876:	bc 01       	movw	r22, r24
    5878:	82 e5       	ldi	r24, 0x52	; 82
    587a:	97 e4       	ldi	r25, 0x47	; 71
    587c:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5880:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5884:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    5888:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    588c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 60;			/* wait 1 minute to send the ID */
    5890:	8c e3       	ldi	r24, 0x3C	; 60
    5892:	90 e0       	ldi	r25, 0x00	; 0
    5894:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    5898:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    589c:	8c e3       	ldi	r24, 0x3C	; 60
    589e:	90 e0       	ldi	r25, 0x00	; 0
    58a0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    58a4:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 240;                    /* off period is very short */
    58a8:	80 ef       	ldi	r24, 0xF0	; 240
    58aa:	90 e0       	ldi	r25, 0x00	; 0
    58ac:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    58b0:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    58b4:	41 c1       	rjmp	.+642    	; 0x5b38 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_S1:
		{
			if(patternNotSet)
    58b6:	89 81       	ldd	r24, Y+1	; 0x01
    58b8:	88 23       	and	r24, r24
    58ba:	69 f0       	breq	.+26     	; 0x58d6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "ME");
    58bc:	8d e4       	ldi	r24, 0x4D	; 77
    58be:	95 e4       	ldi	r25, 0x45	; 69
    58c0:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    58c4:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    58c8:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    58cc:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    58ce:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <g_intra_cycle_delay_time>
    58d2:	10 92 7f 47 	sts	0x477F, r1	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S2:
		{
			if(patternNotSet)
    58d6:	89 81       	ldd	r24, Y+1	; 0x01
    58d8:	88 23       	and	r24, r24
    58da:	79 f0       	breq	.+30     	; 0x58fa <_Z11setupForFoxP5Fox_t13EventAction_t+0x1f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MI");
    58dc:	8d e4       	ldi	r24, 0x4D	; 77
    58de:	99 e4       	ldi	r25, 0x49	; 73
    58e0:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    58e4:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    58e8:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    58ec:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    58ee:	8c e0       	ldi	r24, 0x0C	; 12
    58f0:	90 e0       	ldi	r25, 0x00	; 0
    58f2:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    58f6:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S3:
		{
			if(patternNotSet)
    58fa:	89 81       	ldd	r24, Y+1	; 0x01
    58fc:	88 23       	and	r24, r24
    58fe:	79 f0       	breq	.+30     	; 0x591e <_Z11setupForFoxP5Fox_t13EventAction_t+0x21a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MS");
    5900:	8d e4       	ldi	r24, 0x4D	; 77
    5902:	93 e5       	ldi	r25, 0x53	; 83
    5904:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5908:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    590c:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    5910:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5912:	88 e1       	ldi	r24, 0x18	; 24
    5914:	90 e0       	ldi	r25, 0x00	; 0
    5916:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    591a:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S4:
		{
			if(patternNotSet)
    591e:	89 81       	ldd	r24, Y+1	; 0x01
    5920:	88 23       	and	r24, r24
    5922:	79 f0       	breq	.+30     	; 0x5942 <_Z11setupForFoxP5Fox_t13EventAction_t+0x23e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MH");
    5924:	8d e4       	ldi	r24, 0x4D	; 77
    5926:	98 e4       	ldi	r25, 0x48	; 72
    5928:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    592c:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5930:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    5934:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5936:	84 e2       	ldi	r24, 0x24	; 36
    5938:	90 e0       	ldi	r25, 0x00	; 0
    593a:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    593e:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_S5:
		{
			{
				if(patternNotSet)
    5942:	89 81       	ldd	r24, Y+1	; 0x01
    5944:	88 23       	and	r24, r24
    5946:	71 f0       	breq	.+28     	; 0x5964 <_Z11setupForFoxP5Fox_t13EventAction_t+0x260>
				{
					sprintf(g_messages_text[PATTERN_TEXT], "M5");
    5948:	8d e4       	ldi	r24, 0x4D	; 77
    594a:	95 e3       	ldi	r25, 0x35	; 53
    594c:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5950:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5954:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
					g_intra_cycle_delay_time = 48;
    5958:	80 e3       	ldi	r24, 0x30	; 48
    595a:	90 e0       	ldi	r25, 0x00	; 0
    595c:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    5960:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
				}
			}
			
			bool repeat = true;
    5964:	81 e0       	ldi	r24, 0x01	; 1
    5966:	8b 83       	std	Y+3, r24	; 0x03
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5968:	ce 01       	movw	r24, r28
    596a:	03 96       	adiw	r24, 0x03	; 3
    596c:	40 e0       	ldi	r20, 0x00	; 0
    596e:	50 e0       	ldi	r21, 0x00	; 0
    5970:	bc 01       	movw	r22, r24
    5972:	82 e5       	ldi	r24, 0x52	; 82
    5974:	97 e4       	ldi	r25, 0x47	; 71
    5976:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    597a:	88 e0       	ldi	r24, 0x08	; 8
    597c:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5980:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5984:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    5988:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    598c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5990:	88 e5       	ldi	r24, 0x58	; 88
    5992:	92 e0       	ldi	r25, 0x02	; 2
    5994:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    5998:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    599c:	8c e0       	ldi	r24, 0x0C	; 12
    599e:	90 e0       	ldi	r25, 0x00	; 0
    59a0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    59a4:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    59a8:	80 e3       	ldi	r24, 0x30	; 48
    59aa:	90 e0       	ldi	r25, 0x00	; 0
    59ac:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    59b0:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    59b4:	c1 c0       	rjmp	.+386    	; 0x5b38 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>

		case SPRINT_F1:
		{
			if(patternNotSet)
    59b6:	89 81       	ldd	r24, Y+1	; 0x01
    59b8:	88 23       	and	r24, r24
    59ba:	69 f0       	breq	.+26     	; 0x59d6 <_Z11setupForFoxP5Fox_t13EventAction_t+0x2d2>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OE");
    59bc:	8f e4       	ldi	r24, 0x4F	; 79
    59be:	95 e4       	ldi	r25, 0x45	; 69
    59c0:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    59c4:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    59c8:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    59cc:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 0;
    59ce:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <g_intra_cycle_delay_time>
    59d2:	10 92 7f 47 	sts	0x477F, r1	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F2:
		{
			if(patternNotSet)
    59d6:	89 81       	ldd	r24, Y+1	; 0x01
    59d8:	88 23       	and	r24, r24
    59da:	79 f0       	breq	.+30     	; 0x59fa <_Z11setupForFoxP5Fox_t13EventAction_t+0x2f6>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OI");
    59dc:	8f e4       	ldi	r24, 0x4F	; 79
    59de:	99 e4       	ldi	r25, 0x49	; 73
    59e0:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    59e4:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    59e8:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    59ec:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 12;
    59ee:	8c e0       	ldi	r24, 0x0C	; 12
    59f0:	90 e0       	ldi	r25, 0x00	; 0
    59f2:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    59f6:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F3:
		{
			if(patternNotSet)
    59fa:	89 81       	ldd	r24, Y+1	; 0x01
    59fc:	88 23       	and	r24, r24
    59fe:	79 f0       	breq	.+30     	; 0x5a1e <_Z11setupForFoxP5Fox_t13EventAction_t+0x31a>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OS");
    5a00:	8f e4       	ldi	r24, 0x4F	; 79
    5a02:	93 e5       	ldi	r25, 0x53	; 83
    5a04:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5a08:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5a0c:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    5a10:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 24;
    5a12:	88 e1       	ldi	r24, 0x18	; 24
    5a14:	90 e0       	ldi	r25, 0x00	; 0
    5a16:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    5a1a:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F4:
		{
			if(patternNotSet)
    5a1e:	89 81       	ldd	r24, Y+1	; 0x01
    5a20:	88 23       	and	r24, r24
    5a22:	79 f0       	breq	.+30     	; 0x5a42 <_Z11setupForFoxP5Fox_t13EventAction_t+0x33e>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "OH");
    5a24:	8f e4       	ldi	r24, 0x4F	; 79
    5a26:	98 e4       	ldi	r25, 0x48	; 72
    5a28:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5a2c:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5a30:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				patternNotSet = false;
    5a34:	19 82       	std	Y+1, r1	; 0x01
				g_intra_cycle_delay_time = 36;
    5a36:	84 e2       	ldi	r24, 0x24	; 36
    5a38:	90 e0       	ldi	r25, 0x00	; 0
    5a3a:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    5a3e:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
		}
		case SPRINT_F5:
		{
			if(patternNotSet)
    5a42:	89 81       	ldd	r24, Y+1	; 0x01
    5a44:	88 23       	and	r24, r24
    5a46:	71 f0       	breq	.+28     	; 0x5a64 <_Z11setupForFoxP5Fox_t13EventAction_t+0x360>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "O5");
    5a48:	8f e4       	ldi	r24, 0x4F	; 79
    5a4a:	95 e3       	ldi	r25, 0x35	; 53
    5a4c:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5a50:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5a54:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
				g_intra_cycle_delay_time = 48;
    5a58:	80 e3       	ldi	r24, 0x30	; 48
    5a5a:	90 e0       	ldi	r25, 0x00	; 0
    5a5c:	80 93 7e 47 	sts	0x477E, r24	; 0x80477e <g_intra_cycle_delay_time>
    5a60:	90 93 7f 47 	sts	0x477F, r25	; 0x80477f <g_intra_cycle_delay_time+0x1>
			}
			
			bool repeat = true;
    5a64:	81 e0       	ldi	r24, 0x01	; 1
    5a66:	8c 83       	std	Y+4, r24	; 0x04
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5a68:	ce 01       	movw	r24, r28
    5a6a:	04 96       	adiw	r24, 0x04	; 4
    5a6c:	40 e0       	ldi	r20, 0x00	; 0
    5a6e:	50 e0       	ldi	r21, 0x00	; 0
    5a70:	bc 01       	movw	r22, r24
    5a72:	82 e5       	ldi	r24, 0x52	; 82
    5a74:	97 e4       	ldi	r25, 0x47	; 71
    5a76:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 15;
    5a7a:	8f e0       	ldi	r24, 0x0F	; 15
    5a7c:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5a80:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5a84:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    5a88:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5a8c:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5a90:	88 e5       	ldi	r24, 0x58	; 88
    5a92:	92 e0       	ldi	r25, 0x02	; 2
    5a94:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    5a98:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 12;						/* on period is very long */
    5a9c:	8c e0       	ldi	r24, 0x0C	; 12
    5a9e:	90 e0       	ldi	r25, 0x00	; 0
    5aa0:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5aa4:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 48;						/* off period is very short */
    5aa8:	80 e3       	ldi	r24, 0x30	; 48
    5aaa:	90 e0       	ldi	r25, 0x00	; 0
    5aac:	80 93 0f 40 	sts	0x400F, r24	; 0x80400f <g_off_air_seconds>
    5ab0:	90 93 10 40 	sts	0x4010, r25	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5ab4:	41 c0       	rjmp	.+130    	; 0x5b38 <_Z11setupForFoxP5Fox_t13EventAction_t+0x434>
#endif // SUPPORT_TEMP_AND_VOLTAGE_REPORTING


		case SPECTATOR:
		{
			sprintf(g_messages_text[PATTERN_TEXT], "S");
    5ab6:	83 e5       	ldi	r24, 0x53	; 83
    5ab8:	90 e0       	ldi	r25, 0x00	; 0
    5aba:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5abe:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
			patternNotSet = false;
    5ac2:	19 82       	std	Y+1, r1	; 0x01
			g_intra_cycle_delay_time = 0;
    5ac4:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <g_intra_cycle_delay_time>
    5ac8:	10 92 7f 47 	sts	0x477F, r1	; 0x80477f <g_intra_cycle_delay_time+0x1>
		}
		case BEACON:
		default:
		{
			if(patternNotSet)
    5acc:	89 81       	ldd	r24, Y+1	; 0x01
    5ace:	88 23       	and	r24, r24
    5ad0:	41 f0       	breq	.+16     	; 0x5ae2 <_Z11setupForFoxP5Fox_t13EventAction_t+0x3de>
			{
				sprintf(g_messages_text[PATTERN_TEXT], "MO");
    5ad2:	8d e4       	ldi	r24, 0x4D	; 77
    5ad4:	9f e4       	ldi	r25, 0x4F	; 79
    5ad6:	80 93 52 47 	sts	0x4752, r24	; 0x804752 <g_messages_text>
    5ada:	90 93 53 47 	sts	0x4753, r25	; 0x804753 <g_messages_text+0x1>
    5ade:	10 92 54 47 	sts	0x4754, r1	; 0x804754 <g_messages_text+0x2>
			}
			
			g_intra_cycle_delay_time = 0;
    5ae2:	10 92 7e 47 	sts	0x477E, r1	; 0x80477e <g_intra_cycle_delay_time>
    5ae6:	10 92 7f 47 	sts	0x477F, r1	; 0x80477f <g_intra_cycle_delay_time+0x1>
			bool repeat = true;
    5aea:	81 e0       	ldi	r24, 0x01	; 1
    5aec:	8d 83       	std	Y+5, r24	; 0x05
			makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5aee:	ce 01       	movw	r24, r28
    5af0:	05 96       	adiw	r24, 0x05	; 5
    5af2:	40 e0       	ldi	r20, 0x00	; 0
    5af4:	50 e0       	ldi	r21, 0x00	; 0
    5af6:	bc 01       	movw	r22, r24
    5af8:	82 e5       	ldi	r24, 0x52	; 82
    5afa:	97 e4       	ldi	r25, 0x47	; 71
    5afc:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
			g_pattern_codespeed = 8;
    5b00:	88 e0       	ldi	r24, 0x08	; 8
    5b02:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <g_pattern_codespeed>
			g_code_throttle = throttleValue(g_pattern_codespeed);
    5b06:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5b0a:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    5b0e:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5b12:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

			g_sendID_seconds_countdown = 600;			/* wait 10 minutes send the ID */
    5b16:	88 e5       	ldi	r24, 0x58	; 88
    5b18:	92 e0       	ldi	r25, 0x02	; 2
    5b1a:	80 93 4c 47 	sts	0x474C, r24	; 0x80474c <_ZL26g_sendID_seconds_countdown>
    5b1e:	90 93 4d 47 	sts	0x474D, r25	; 0x80474d <_ZL26g_sendID_seconds_countdown+0x1>
			g_on_air_seconds = 60;						/* on period is very long */
    5b22:	8c e3       	ldi	r24, 0x3C	; 60
    5b24:	90 e0       	ldi	r25, 0x00	; 0
    5b26:	80 93 0d 40 	sts	0x400D, r24	; 0x80400d <g_on_air_seconds>
    5b2a:	90 93 0e 40 	sts	0x400E, r25	; 0x80400e <g_on_air_seconds+0x1>
			g_off_air_seconds = 0;						/* off period is very short */
    5b2e:	10 92 0f 40 	sts	0x400F, r1	; 0x80400f <g_off_air_seconds>
    5b32:	10 92 10 40 	sts	0x4010, r1	; 0x804010 <g_off_air_seconds+0x1>
		}
		break;
    5b36:	00 00       	nop
	}

	if(action == START_NOTHING)
    5b38:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b3a:	88 23       	and	r24, r24
    5b3c:	91 f4       	brne	.+36     	; 0x5b62 <_Z11setupForFoxP5Fox_t13EventAction_t+0x45e>
	{
		g_event_commenced = false;                   /* get things running immediately */
    5b3e:	10 92 89 47 	sts	0x4789, r1	; 0x804789 <g_event_commenced>
		g_event_enabled = false;                     /* get things running immediately */
    5b42:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>

 		g_use_rtc_for_startstop = false;
    5b46:	10 92 ad 47 	sts	0x47AD, r1	; 0x8047ad <g_use_rtc_for_startstop>
 		g_event_enabled = false;
    5b4a:	10 92 88 47 	sts	0x4788, r1	; 0x804788 <g_event_enabled>
		keyTransmitter(OFF);
    5b4e:	80 e0       	ldi	r24, 0x00	; 0
    5b50:	0e 94 49 6b 	call	0xd692	; 0xd692 <_Z14keyTransmitterb>
		LED_set_RED_level(OFF);
    5b54:	80 e0       	ldi	r24, 0x00	; 0
    5b56:	0e 94 47 10 	call	0x208e	; 0x208e <LED_set_RED_level>
		powerToTransmitter(OFF);
    5b5a:	80 e0       	ldi	r24, 0x00	; 0
    5b5c:	0e 94 3b 6b 	call	0xd676	; 0xd676 <_Z18powerToTransmitterb>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5b60:	af c0       	rjmp	.+350    	; 0x5cc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
 		g_event_enabled = false;
		keyTransmitter(OFF);
		LED_set_RED_level(OFF);
		powerToTransmitter(OFF);
	}
	else if(action == START_EVENT_NOW)
    5b62:	8c 85       	ldd	r24, Y+12	; 0x0c
    5b64:	81 30       	cpi	r24, 0x01	; 1
    5b66:	09 f0       	breq	.+2      	; 0x5b6a <_Z11setupForFoxP5Fox_t13EventAction_t+0x466>
    5b68:	72 c0       	rjmp	.+228    	; 0x5c4e <_Z11setupForFoxP5Fox_t13EventAction_t+0x54a>
//  		g_event_enabled = true;
// 		g_event_commenced = true;					/* get things running immediately */
// 		g_event_enabled = true;						/* get things running immediately */

		EC result;
		g_current_epoch = ds3231_get_epoch(&result);
    5b6a:	ce 01       	movw	r24, r28
    5b6c:	06 96       	adiw	r24, 0x06	; 6
    5b6e:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    5b72:	dc 01       	movw	r26, r24
    5b74:	cb 01       	movw	r24, r22
    5b76:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    5b7a:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    5b7e:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    5b82:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>
		
		if(result == ERROR_CODE_NO_ERROR)
    5b86:	8e 81       	ldd	r24, Y+6	; 0x06
    5b88:	88 23       	and	r24, r24
    5b8a:	e9 f5       	brne	.+122    	; 0x5c06 <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
		{
			g_event_start_epoch = g_current_epoch;
    5b8c:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    5b90:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5b94:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    5b98:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5b9c:	80 93 80 47 	sts	0x4780, r24	; 0x804780 <g_event_start_epoch>
    5ba0:	90 93 81 47 	sts	0x4781, r25	; 0x804781 <g_event_start_epoch+0x1>
    5ba4:	a0 93 82 47 	sts	0x4782, r26	; 0x804782 <g_event_start_epoch+0x2>
    5ba8:	b0 93 83 47 	sts	0x4783, r27	; 0x804783 <g_event_start_epoch+0x3>
			if(g_event_start_epoch > g_event_finish_epoch)
    5bac:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    5bb0:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5bb4:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    5bb8:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5bbc:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    5bc0:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    5bc4:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    5bc8:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    5bcc:	61 e0       	ldi	r22, 0x01	; 1
    5bce:	82 17       	cp	r24, r18
    5bd0:	93 07       	cpc	r25, r19
    5bd2:	a4 07       	cpc	r26, r20
    5bd4:	b5 07       	cpc	r27, r21
    5bd6:	08 f0       	brcs	.+2      	; 0x5bda <_Z11setupForFoxP5Fox_t13EventAction_t+0x4d6>
    5bd8:	60 e0       	ldi	r22, 0x00	; 0
    5bda:	66 23       	and	r22, r22
    5bdc:	a1 f0       	breq	.+40     	; 0x5c06 <_Z11setupForFoxP5Fox_t13EventAction_t+0x502>
			{
				g_event_finish_epoch = g_event_start_epoch + DAY;
    5bde:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    5be2:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5be6:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    5bea:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5bee:	80 58       	subi	r24, 0x80	; 128
    5bf0:	9e 4a       	sbci	r25, 0xAE	; 174
    5bf2:	ae 4f       	sbci	r26, 0xFE	; 254
    5bf4:	bf 4f       	sbci	r27, 0xFF	; 255
    5bf6:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    5bfa:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    5bfe:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    5c02:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
			}
		}
		
		SC status = STATUS_CODE_IDLE;
    5c06:	1f 82       	std	Y+7, r1	; 0x07
		result = launchEvent(&status);
    5c08:	ce 01       	movw	r24, r28
    5c0a:	07 96       	adiw	r24, 0x07	; 7
    5c0c:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <_Z11launchEventP2SC>
    5c10:	8e 83       	std	Y+6, r24	; 0x06
		
		if(g_go_to_sleep && g_sleepType)
    5c12:	80 91 8c 47 	lds	r24, 0x478C	; 0x80478c <_ZL13g_go_to_sleep>
    5c16:	88 23       	and	r24, r24
    5c18:	31 f0       	breq	.+12     	; 0x5c26 <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5c1a:	80 91 51 47 	lds	r24, 0x4751	; 0x804751 <_ZL11g_sleepType>
    5c1e:	88 23       	and	r24, r24
    5c20:	11 f0       	breq	.+4      	; 0x5c26 <_Z11setupForFoxP5Fox_t13EventAction_t+0x522>
    5c22:	81 e0       	ldi	r24, 0x01	; 1
    5c24:	01 c0       	rjmp	.+2      	; 0x5c28 <_Z11setupForFoxP5Fox_t13EventAction_t+0x524>
    5c26:	80 e0       	ldi	r24, 0x00	; 0
    5c28:	88 23       	and	r24, r24
    5c2a:	29 f0       	breq	.+10     	; 0x5c36 <_Z11setupForFoxP5Fox_t13EventAction_t+0x532>
		{
			g_sleepType = SLEEP_AFTER_WIFI_GOES_OFF;
    5c2c:	83 e0       	ldi	r24, 0x03	; 3
    5c2e:	80 93 51 47 	sts	0x4751, r24	; 0x804751 <_ZL11g_sleepType>
			g_go_to_sleep = false;
    5c32:	10 92 8c 47 	sts	0x478C, r1	; 0x80478c <_ZL13g_go_to_sleep>
		}

		g_WiFi_shutdown_seconds = 60;
    5c36:	8c e3       	ldi	r24, 0x3C	; 60
    5c38:	80 93 09 40 	sts	0x4009, r24	; 0x804009 <_ZL23g_WiFi_shutdown_seconds>

		if(!result)
    5c3c:	8e 81       	ldd	r24, Y+6	; 0x06
    5c3e:	88 23       	and	r24, r24
    5c40:	09 f0       	breq	.+2      	; 0x5c44 <_Z11setupForFoxP5Fox_t13EventAction_t+0x540>
    5c42:	3e c0       	rjmp	.+124    	; 0x5cc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		{
			g_ee_mgr.saveAllEEPROM();
    5c44:	8f e9       	ldi	r24, 0x9F	; 159
    5c46:	97 e4       	ldi	r25, 0x47	; 71
    5c48:	0e 94 4a 45 	call	0x8a94	; 0x8a94 <_ZN13EepromManager13saveAllEEPROMEv>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5c4c:	39 c0       	rjmp	.+114    	; 0x5cc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
		if(!result)
		{
			g_ee_mgr.saveAllEEPROM();
		}
	}
	else if(action == START_TRANSMISSIONS_NOW)                                  /* Immediately start transmitting, regardless RTC or time slot */
    5c4e:	8c 85       	ldd	r24, Y+12	; 0x0c
    5c50:	82 30       	cpi	r24, 0x02	; 2
    5c52:	91 f5       	brne	.+100    	; 0x5cb8 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5b4>
	{
		bool repeat = true;
    5c54:	81 e0       	ldi	r24, 0x01	; 1
    5c56:	88 87       	std	Y+8, r24	; 0x08
		makeMorse(g_messages_text[PATTERN_TEXT], &repeat, NULL);
    5c58:	ce 01       	movw	r24, r28
    5c5a:	08 96       	adiw	r24, 0x08	; 8
    5c5c:	40 e0       	ldi	r20, 0x00	; 0
    5c5e:	50 e0       	ldi	r21, 0x00	; 0
    5c60:	bc 01       	movw	r22, r24
    5c62:	82 e5       	ldi	r24, 0x52	; 82
    5c64:	97 e4       	ldi	r25, 0x47	; 71
    5c66:	0e 94 9c 56 	call	0xad38	; 0xad38 <_Z9makeMorsePcPbS0_>
		g_code_throttle = throttleValue(g_pattern_codespeed);
    5c6a:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <g_pattern_codespeed>
    5c6e:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_Z13throttleValueh>
    5c72:	80 93 07 40 	sts	0x4007, r24	; 0x804007 <_ZL15g_code_throttle>
    5c76:	90 93 08 40 	sts	0x4008, r25	; 0x804008 <_ZL15g_code_throttle+0x1>

// 		g_event_start_epoch = 1;                     /* have it start a long time ago */
// 		g_event_finish_epoch = MAX_TIME;             /* run for a long long time */
		g_on_the_air = g_on_air_seconds;			/* start out transmitting */
    5c7a:	80 91 0d 40 	lds	r24, 0x400D	; 0x80400d <g_on_air_seconds>
    5c7e:	90 91 0e 40 	lds	r25, 0x400E	; 0x80400e <g_on_air_seconds+0x1>
    5c82:	09 2e       	mov	r0, r25
    5c84:	00 0c       	add	r0, r0
    5c86:	aa 0b       	sbc	r26, r26
    5c88:	bb 0b       	sbc	r27, r27
    5c8a:	80 93 48 47 	sts	0x4748, r24	; 0x804748 <_ZL12g_on_the_air>
    5c8e:	90 93 49 47 	sts	0x4749, r25	; 0x804749 <_ZL12g_on_the_air+0x1>
    5c92:	a0 93 4a 47 	sts	0x474A, r26	; 0x80474a <_ZL12g_on_the_air+0x2>
    5c96:	b0 93 4b 47 	sts	0x474B, r27	; 0x80474b <_ZL12g_on_the_air+0x3>
		g_event_commenced = true;                   /* get things running immediately */
    5c9a:	81 e0       	ldi	r24, 0x01	; 1
    5c9c:	80 93 89 47 	sts	0x4789, r24	; 0x804789 <g_event_commenced>
		g_event_enabled = true;                     /* get things running immediately */
    5ca0:	81 e0       	ldi	r24, 0x01	; 1
    5ca2:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_event_enabled>
		g_last_status_code = STATUS_CODE_EVENT_STARTED_NOW_TRANSMITTING;
    5ca6:	8d ef       	ldi	r24, 0xFD	; 253
    5ca8:	80 93 40 47 	sts	0x4740, r24	; 0x804740 <_ZL18g_last_status_code>
		
// 		g_seconds_since_sync = (g_fox_counter - 1) * g_on_air_interval_seconds; /* Total elapsed time since start of event */
 		g_use_rtc_for_startstop = false;
    5cac:	10 92 ad 47 	sts	0x47AD, r1	; 0x8047ad <g_use_rtc_for_startstop>
 		g_event_enabled = true;
    5cb0:	81 e0       	ldi	r24, 0x01	; 1
    5cb2:	80 93 88 47 	sts	0x4788, r24	; 0x804788 <g_event_enabled>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5cb6:	04 c0       	rjmp	.+8      	; 0x5cc0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x5bc>
	}
	else         /* if(action == START_EVENT_WITH_STARTFINISH_TIMES) */
	{
		SC sc;
 //		EC ec = 
		launchEvent(&sc);
    5cb8:	ce 01       	movw	r24, r28
    5cba:	09 96       	adiw	r24, 0x09	; 9
    5cbc:	0e 94 c6 27 	call	0x4f8c	; 0x4f8c <_Z11launchEventP2SC>
// 
// 	digitalWrite(PIN_CW_KEY_LOGIC, OFF);    /* TX key line */
// 	g_sendAMmodulation = false;
// 	g_LED_enunciating = false;
// 	g_config_error = NULL_CONFIG;           /* Trigger a new configuration enunciation */
}
    5cc0:	00 00       	nop
    5cc2:	2c 96       	adiw	r28, 0x0c	; 12
    5cc4:	cd bf       	out	0x3d, r28	; 61
    5cc6:	de bf       	out	0x3e, r29	; 62
    5cc8:	df 91       	pop	r29
    5cca:	cf 91       	pop	r28
    5ccc:	08 95       	ret

00005cce <_Z18validateTimeStringPcPma>:

time_t validateTimeString(char* str, time_t* epochVar, int8_t offsetHours)
{
    5cce:	cf 93       	push	r28
    5cd0:	df 93       	push	r29
    5cd2:	cd b7       	in	r28, 0x3d	; 61
    5cd4:	de b7       	in	r29, 0x3e	; 62
    5cd6:	a4 97       	sbiw	r28, 0x24	; 36
    5cd8:	cd bf       	out	0x3d, r28	; 61
    5cda:	de bf       	out	0x3e, r29	; 62
    5cdc:	88 a3       	std	Y+32, r24	; 0x20
    5cde:	99 a3       	std	Y+33, r25	; 0x21
    5ce0:	6a a3       	std	Y+34, r22	; 0x22
    5ce2:	7b a3       	std	Y+35, r23	; 0x23
    5ce4:	4c a3       	std	Y+36, r20	; 0x24
	time_t valid = 0;
    5ce6:	19 82       	std	Y+1, r1	; 0x01
    5ce8:	1a 82       	std	Y+2, r1	; 0x02
    5cea:	1b 82       	std	Y+3, r1	; 0x03
    5cec:	1c 82       	std	Y+4, r1	; 0x04
	int len = strlen(str);
    5cee:	88 a1       	ldd	r24, Y+32	; 0x20
    5cf0:	99 a1       	ldd	r25, Y+33	; 0x21
    5cf2:	0e 94 ac 77 	call	0xef58	; 0xef58 <strlen>
    5cf6:	8d 83       	std	Y+5, r24	; 0x05
    5cf8:	9e 83       	std	Y+6, r25	; 0x06
	time_t minimumEpoch = MINIMUM_EPOCH;
    5cfa:	80 e0       	ldi	r24, 0x00	; 0
    5cfc:	96 e6       	ldi	r25, 0x66	; 102
    5cfe:	ae ee       	ldi	r26, 0xEE	; 238
    5d00:	bf e5       	ldi	r27, 0x5F	; 95
    5d02:	8f 83       	std	Y+7, r24	; 0x07
    5d04:	98 87       	std	Y+8, r25	; 0x08
    5d06:	a9 87       	std	Y+9, r26	; 0x09
    5d08:	ba 87       	std	Y+10, r27	; 0x0a
	uint8_t validationType = 0;
    5d0a:	1b 86       	std	Y+11, r1	; 0x0b

	if(epochVar == &g_event_start_epoch)
    5d0c:	8a a1       	ldd	r24, Y+34	; 0x22
    5d0e:	9b a1       	ldd	r25, Y+35	; 0x23
    5d10:	80 58       	subi	r24, 0x80	; 128
    5d12:	97 44       	sbci	r25, 0x47	; 71
    5d14:	89 f5       	brne	.+98     	; 0x5d78 <_Z18validateTimeStringPcPma+0xaa>
	{
		minimumEpoch = MAX(g_current_epoch, MINIMUM_EPOCH);
    5d16:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    5d1a:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5d1e:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    5d22:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5d26:	8c 87       	std	Y+12, r24	; 0x0c
    5d28:	9d 87       	std	Y+13, r25	; 0x0d
    5d2a:	ae 87       	std	Y+14, r26	; 0x0e
    5d2c:	bf 87       	std	Y+15, r27	; 0x0f
    5d2e:	80 e0       	ldi	r24, 0x00	; 0
    5d30:	96 e6       	ldi	r25, 0x66	; 102
    5d32:	ae ee       	ldi	r26, 0xEE	; 238
    5d34:	bf e5       	ldi	r27, 0x5F	; 95
    5d36:	88 8b       	std	Y+16, r24	; 0x10
    5d38:	99 8b       	std	Y+17, r25	; 0x11
    5d3a:	aa 8b       	std	Y+18, r26	; 0x12
    5d3c:	bb 8b       	std	Y+19, r27	; 0x13
    5d3e:	2c 85       	ldd	r18, Y+12	; 0x0c
    5d40:	3d 85       	ldd	r19, Y+13	; 0x0d
    5d42:	4e 85       	ldd	r20, Y+14	; 0x0e
    5d44:	5f 85       	ldd	r21, Y+15	; 0x0f
    5d46:	88 89       	ldd	r24, Y+16	; 0x10
    5d48:	99 89       	ldd	r25, Y+17	; 0x11
    5d4a:	aa 89       	ldd	r26, Y+18	; 0x12
    5d4c:	bb 89       	ldd	r27, Y+19	; 0x13
    5d4e:	28 17       	cp	r18, r24
    5d50:	39 07       	cpc	r19, r25
    5d52:	4a 07       	cpc	r20, r26
    5d54:	5b 07       	cpc	r21, r27
    5d56:	28 f4       	brcc	.+10     	; 0x5d62 <_Z18validateTimeStringPcPma+0x94>
    5d58:	88 89       	ldd	r24, Y+16	; 0x10
    5d5a:	99 89       	ldd	r25, Y+17	; 0x11
    5d5c:	aa 89       	ldd	r26, Y+18	; 0x12
    5d5e:	bb 89       	ldd	r27, Y+19	; 0x13
    5d60:	04 c0       	rjmp	.+8      	; 0x5d6a <_Z18validateTimeStringPcPma+0x9c>
    5d62:	8c 85       	ldd	r24, Y+12	; 0x0c
    5d64:	9d 85       	ldd	r25, Y+13	; 0x0d
    5d66:	ae 85       	ldd	r26, Y+14	; 0x0e
    5d68:	bf 85       	ldd	r27, Y+15	; 0x0f
    5d6a:	8f 83       	std	Y+7, r24	; 0x07
    5d6c:	98 87       	std	Y+8, r25	; 0x08
    5d6e:	a9 87       	std	Y+9, r26	; 0x09
    5d70:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 1;
    5d72:	81 e0       	ldi	r24, 0x01	; 1
    5d74:	8b 87       	std	Y+11, r24	; 0x0b
    5d76:	39 c0       	rjmp	.+114    	; 0x5dea <_Z18validateTimeStringPcPma+0x11c>
	}
	else if(epochVar == &g_event_finish_epoch)
    5d78:	8a a1       	ldd	r24, Y+34	; 0x22
    5d7a:	9b a1       	ldd	r25, Y+35	; 0x23
    5d7c:	84 58       	subi	r24, 0x84	; 132
    5d7e:	97 44       	sbci	r25, 0x47	; 71
    5d80:	a1 f5       	brne	.+104    	; 0x5dea <_Z18validateTimeStringPcPma+0x11c>
	{
		minimumEpoch = MAX(g_event_start_epoch, g_current_epoch);
    5d82:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    5d86:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    5d8a:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    5d8e:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    5d92:	88 8f       	std	Y+24, r24	; 0x18
    5d94:	99 8f       	std	Y+25, r25	; 0x19
    5d96:	aa 8f       	std	Y+26, r26	; 0x1a
    5d98:	bb 8f       	std	Y+27, r27	; 0x1b
    5d9a:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    5d9e:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5da2:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    5da6:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5daa:	8c 8f       	std	Y+28, r24	; 0x1c
    5dac:	9d 8f       	std	Y+29, r25	; 0x1d
    5dae:	ae 8f       	std	Y+30, r26	; 0x1e
    5db0:	bf 8f       	std	Y+31, r27	; 0x1f
    5db2:	28 8d       	ldd	r18, Y+24	; 0x18
    5db4:	39 8d       	ldd	r19, Y+25	; 0x19
    5db6:	4a 8d       	ldd	r20, Y+26	; 0x1a
    5db8:	5b 8d       	ldd	r21, Y+27	; 0x1b
    5dba:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5dbc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5dbe:	ae 8d       	ldd	r26, Y+30	; 0x1e
    5dc0:	bf 8d       	ldd	r27, Y+31	; 0x1f
    5dc2:	28 17       	cp	r18, r24
    5dc4:	39 07       	cpc	r19, r25
    5dc6:	4a 07       	cpc	r20, r26
    5dc8:	5b 07       	cpc	r21, r27
    5dca:	28 f4       	brcc	.+10     	; 0x5dd6 <_Z18validateTimeStringPcPma+0x108>
    5dcc:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5dce:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5dd0:	ae 8d       	ldd	r26, Y+30	; 0x1e
    5dd2:	bf 8d       	ldd	r27, Y+31	; 0x1f
    5dd4:	04 c0       	rjmp	.+8      	; 0x5dde <_Z18validateTimeStringPcPma+0x110>
    5dd6:	88 8d       	ldd	r24, Y+24	; 0x18
    5dd8:	99 8d       	ldd	r25, Y+25	; 0x19
    5dda:	aa 8d       	ldd	r26, Y+26	; 0x1a
    5ddc:	bb 8d       	ldd	r27, Y+27	; 0x1b
    5dde:	8f 83       	std	Y+7, r24	; 0x07
    5de0:	98 87       	std	Y+8, r25	; 0x08
    5de2:	a9 87       	std	Y+9, r26	; 0x09
    5de4:	ba 87       	std	Y+10, r27	; 0x0a
		validationType = 2;
    5de6:	82 e0       	ldi	r24, 0x02	; 2
    5de8:	8b 87       	std	Y+11, r24	; 0x0b
	}
	
	if(len == 10)
    5dea:	8d 81       	ldd	r24, Y+5	; 0x05
    5dec:	9e 81       	ldd	r25, Y+6	; 0x06
    5dee:	0a 97       	sbiw	r24, 0x0a	; 10
    5df0:	a9 f4       	brne	.+42     	; 0x5e1c <_Z18validateTimeStringPcPma+0x14e>
	{
		str[10] = '0';
    5df2:	88 a1       	ldd	r24, Y+32	; 0x20
    5df4:	99 a1       	ldd	r25, Y+33	; 0x21
    5df6:	0a 96       	adiw	r24, 0x0a	; 10
    5df8:	20 e3       	ldi	r18, 0x30	; 48
    5dfa:	fc 01       	movw	r30, r24
    5dfc:	20 83       	st	Z, r18
		str[11] = '0';
    5dfe:	88 a1       	ldd	r24, Y+32	; 0x20
    5e00:	99 a1       	ldd	r25, Y+33	; 0x21
    5e02:	0b 96       	adiw	r24, 0x0b	; 11
    5e04:	20 e3       	ldi	r18, 0x30	; 48
    5e06:	fc 01       	movw	r30, r24
    5e08:	20 83       	st	Z, r18
		str[12] = '\0';
    5e0a:	88 a1       	ldd	r24, Y+32	; 0x20
    5e0c:	99 a1       	ldd	r25, Y+33	; 0x21
    5e0e:	0c 96       	adiw	r24, 0x0c	; 12
    5e10:	fc 01       	movw	r30, r24
    5e12:	10 82       	st	Z, r1
		len = 12;
    5e14:	8c e0       	ldi	r24, 0x0C	; 12
    5e16:	90 e0       	ldi	r25, 0x00	; 0
    5e18:	8d 83       	std	Y+5, r24	; 0x05
    5e1a:	9e 83       	std	Y+6, r25	; 0x06
	}

	if((len == 12) && (only_digits(str)))
    5e1c:	8d 81       	ldd	r24, Y+5	; 0x05
    5e1e:	9e 81       	ldd	r25, Y+6	; 0x06
    5e20:	0c 97       	sbiw	r24, 0x0c	; 12
    5e22:	41 f4       	brne	.+16     	; 0x5e34 <_Z18validateTimeStringPcPma+0x166>
    5e24:	88 a1       	ldd	r24, Y+32	; 0x20
    5e26:	99 a1       	ldd	r25, Y+33	; 0x21
    5e28:	0e 94 8c 6f 	call	0xdf18	; 0xdf18 <_Z11only_digitsPc>
    5e2c:	88 23       	and	r24, r24
    5e2e:	11 f0       	breq	.+4      	; 0x5e34 <_Z18validateTimeStringPcPma+0x166>
    5e30:	81 e0       	ldi	r24, 0x01	; 1
    5e32:	01 c0       	rjmp	.+2      	; 0x5e36 <_Z18validateTimeStringPcPma+0x168>
    5e34:	80 e0       	ldi	r24, 0x00	; 0
    5e36:	88 23       	and	r24, r24
    5e38:	09 f4       	brne	.+2      	; 0x5e3c <_Z18validateTimeStringPcPma+0x16e>
    5e3a:	67 c0       	rjmp	.+206    	; 0x5f0a <_Z18validateTimeStringPcPma+0x23c>
	{
		time_t ep = RTC_String2Epoch(NULL, str);    /* String format "YYMMDDhhmmss" */
    5e3c:	88 a1       	ldd	r24, Y+32	; 0x20
    5e3e:	99 a1       	ldd	r25, Y+33	; 0x21
    5e40:	bc 01       	movw	r22, r24
    5e42:	80 e0       	ldi	r24, 0x00	; 0
    5e44:	90 e0       	ldi	r25, 0x00	; 0
    5e46:	0e 94 3e 3c 	call	0x787c	; 0x787c <RTC_String2Epoch>
    5e4a:	dc 01       	movw	r26, r24
    5e4c:	cb 01       	movw	r24, r22
    5e4e:	8c 8b       	std	Y+20, r24	; 0x14
    5e50:	9d 8b       	std	Y+21, r25	; 0x15
    5e52:	ae 8b       	std	Y+22, r26	; 0x16
    5e54:	bf 8b       	std	Y+23, r27	; 0x17

		ep += (HOUR * offsetHours);
    5e56:	8c a1       	ldd	r24, Y+36	; 0x24
    5e58:	28 2f       	mov	r18, r24
    5e5a:	88 0f       	add	r24, r24
    5e5c:	33 0b       	sbc	r19, r19
    5e5e:	44 0b       	sbc	r20, r20
    5e60:	55 0b       	sbc	r21, r21
    5e62:	80 e1       	ldi	r24, 0x10	; 16
    5e64:	9e e0       	ldi	r25, 0x0E	; 14
    5e66:	dc 01       	movw	r26, r24
    5e68:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    5e6c:	9b 01       	movw	r18, r22
    5e6e:	ac 01       	movw	r20, r24
    5e70:	8c 89       	ldd	r24, Y+20	; 0x14
    5e72:	9d 89       	ldd	r25, Y+21	; 0x15
    5e74:	ae 89       	ldd	r26, Y+22	; 0x16
    5e76:	bf 89       	ldd	r27, Y+23	; 0x17
    5e78:	82 0f       	add	r24, r18
    5e7a:	93 1f       	adc	r25, r19
    5e7c:	a4 1f       	adc	r26, r20
    5e7e:	b5 1f       	adc	r27, r21
    5e80:	8c 8b       	std	Y+20, r24	; 0x14
    5e82:	9d 8b       	std	Y+21, r25	; 0x15
    5e84:	ae 8b       	std	Y+22, r26	; 0x16
    5e86:	bf 8b       	std	Y+23, r27	; 0x17

		if(ep > minimumEpoch)
    5e88:	2c 89       	ldd	r18, Y+20	; 0x14
    5e8a:	3d 89       	ldd	r19, Y+21	; 0x15
    5e8c:	4e 89       	ldd	r20, Y+22	; 0x16
    5e8e:	5f 89       	ldd	r21, Y+23	; 0x17
    5e90:	8f 81       	ldd	r24, Y+7	; 0x07
    5e92:	98 85       	ldd	r25, Y+8	; 0x08
    5e94:	a9 85       	ldd	r26, Y+9	; 0x09
    5e96:	ba 85       	ldd	r27, Y+10	; 0x0a
    5e98:	82 17       	cp	r24, r18
    5e9a:	93 07       	cpc	r25, r19
    5e9c:	a4 07       	cpc	r26, r20
    5e9e:	b5 07       	cpc	r27, r21
    5ea0:	48 f4       	brcc	.+18     	; 0x5eb4 <_Z18validateTimeStringPcPma+0x1e6>
		{
			valid = ep;
    5ea2:	8c 89       	ldd	r24, Y+20	; 0x14
    5ea4:	9d 89       	ldd	r25, Y+21	; 0x15
    5ea6:	ae 89       	ldd	r26, Y+22	; 0x16
    5ea8:	bf 89       	ldd	r27, Y+23	; 0x17
    5eaa:	89 83       	std	Y+1, r24	; 0x01
    5eac:	9a 83       	std	Y+2, r25	; 0x02
    5eae:	ab 83       	std	Y+3, r26	; 0x03
    5eb0:	bc 83       	std	Y+4, r27	; 0x04
    5eb2:	33 c0       	rjmp	.+102    	; 0x5f1a <_Z18validateTimeStringPcPma+0x24c>
		}
		else
		{
			if(validationType == 1)         /* start time validation */
    5eb4:	8b 85       	ldd	r24, Y+11	; 0x0b
    5eb6:	81 30       	cpi	r24, 0x01	; 1
    5eb8:	29 f4       	brne	.+10     	; 0x5ec4 <_Z18validateTimeStringPcPma+0x1f6>
			{
				sb_send_string(TEXT_ERR_START_IN_PAST_TXT);
    5eba:	80 ef       	ldi	r24, 0xF0	; 240
    5ebc:	92 e4       	ldi	r25, 0x42	; 66
    5ebe:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    5ec2:	2b c0       	rjmp	.+86     	; 0x5f1a <_Z18validateTimeStringPcPma+0x24c>
			}
			else if(validationType == 2)    /* finish time validation */
    5ec4:	8b 85       	ldd	r24, Y+11	; 0x0b
    5ec6:	82 30       	cpi	r24, 0x02	; 2
    5ec8:	d9 f4       	brne	.+54     	; 0x5f00 <_Z18validateTimeStringPcPma+0x232>
			{
				if(ep < g_current_epoch)
    5eca:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    5ece:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    5ed2:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    5ed6:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    5eda:	2c 89       	ldd	r18, Y+20	; 0x14
    5edc:	3d 89       	ldd	r19, Y+21	; 0x15
    5ede:	4e 89       	ldd	r20, Y+22	; 0x16
    5ee0:	5f 89       	ldd	r21, Y+23	; 0x17
    5ee2:	28 17       	cp	r18, r24
    5ee4:	39 07       	cpc	r19, r25
    5ee6:	4a 07       	cpc	r20, r26
    5ee8:	5b 07       	cpc	r21, r27
    5eea:	28 f4       	brcc	.+10     	; 0x5ef6 <_Z18validateTimeStringPcPma+0x228>
				{
					sb_send_string(TEXT_ERR_FINISH_IN_PAST_TXT);
    5eec:	85 e0       	ldi	r24, 0x05	; 5
    5eee:	93 e4       	ldi	r25, 0x43	; 67
    5ef0:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    5ef4:	12 c0       	rjmp	.+36     	; 0x5f1a <_Z18validateTimeStringPcPma+0x24c>
				}
				else
				{
					sb_send_string(TEXT_ERR_FINISH_BEFORE_START_TXT);
    5ef6:	8b e1       	ldi	r24, 0x1B	; 27
    5ef8:	93 e4       	ldi	r25, 0x43	; 67
    5efa:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    5efe:	0d c0       	rjmp	.+26     	; 0x5f1a <_Z18validateTimeStringPcPma+0x24c>
				}
			}
			else    /* current time validation */
			{
				sb_send_string(TEXT_ERR_TIME_IN_PAST_TXT);
    5f00:	86 e3       	ldi	r24, 0x36	; 54
    5f02:	93 e4       	ldi	r25, 0x43	; 67
    5f04:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    5f08:	08 c0       	rjmp	.+16     	; 0x5f1a <_Z18validateTimeStringPcPma+0x24c>
			}
		}
	}
	else if(len)
    5f0a:	8d 81       	ldd	r24, Y+5	; 0x05
    5f0c:	9e 81       	ldd	r25, Y+6	; 0x06
    5f0e:	89 2b       	or	r24, r25
    5f10:	21 f0       	breq	.+8      	; 0x5f1a <_Z18validateTimeStringPcPma+0x24c>
	{
		sb_send_string(TEXT_ERR_INVALID_TIME_TXT);
    5f12:	8a e4       	ldi	r24, 0x4A	; 74
    5f14:	93 e4       	ldi	r25, 0x43	; 67
    5f16:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
	}

	return(valid);
    5f1a:	89 81       	ldd	r24, Y+1	; 0x01
    5f1c:	9a 81       	ldd	r25, Y+2	; 0x02
    5f1e:	ab 81       	ldd	r26, Y+3	; 0x03
    5f20:	bc 81       	ldd	r27, Y+4	; 0x04
}
    5f22:	bc 01       	movw	r22, r24
    5f24:	cd 01       	movw	r24, r26
    5f26:	a4 96       	adiw	r28, 0x24	; 36
    5f28:	cd bf       	out	0x3d, r28	; 61
    5f2a:	de bf       	out	0x3e, r29	; 62
    5f2c:	df 91       	pop	r29
    5f2e:	cf 91       	pop	r28
    5f30:	08 95       	ret

00005f32 <_Z14reportTimeTillmmPKcS0_>:


bool reportTimeTill(time_t from, time_t until, const char* prefix, const char* failMsg)
{
    5f32:	ef 92       	push	r14
    5f34:	ff 92       	push	r15
    5f36:	0f 93       	push	r16
    5f38:	1f 93       	push	r17
    5f3a:	cf 93       	push	r28
    5f3c:	df 93       	push	r29
    5f3e:	cd b7       	in	r28, 0x3d	; 61
    5f40:	de b7       	in	r29, 0x3e	; 62
    5f42:	6f 97       	sbiw	r28, 0x1f	; 31
    5f44:	cd bf       	out	0x3d, r28	; 61
    5f46:	de bf       	out	0x3e, r29	; 62
    5f48:	6c 8b       	std	Y+20, r22	; 0x14
    5f4a:	7d 8b       	std	Y+21, r23	; 0x15
    5f4c:	8e 8b       	std	Y+22, r24	; 0x16
    5f4e:	9f 8b       	std	Y+23, r25	; 0x17
    5f50:	28 8f       	std	Y+24, r18	; 0x18
    5f52:	39 8f       	std	Y+25, r19	; 0x19
    5f54:	4a 8f       	std	Y+26, r20	; 0x1a
    5f56:	5b 8f       	std	Y+27, r21	; 0x1b
    5f58:	0c 8f       	std	Y+28, r16	; 0x1c
    5f5a:	1d 8f       	std	Y+29, r17	; 0x1d
    5f5c:	ee 8e       	std	Y+30, r14	; 0x1e
    5f5e:	ff 8e       	std	Y+31, r15	; 0x1f
	bool failure = false;
    5f60:	19 82       	std	Y+1, r1	; 0x01

	if(from >= until)   /* Negative time */
    5f62:	2c 89       	ldd	r18, Y+20	; 0x14
    5f64:	3d 89       	ldd	r19, Y+21	; 0x15
    5f66:	4e 89       	ldd	r20, Y+22	; 0x16
    5f68:	5f 89       	ldd	r21, Y+23	; 0x17
    5f6a:	88 8d       	ldd	r24, Y+24	; 0x18
    5f6c:	99 8d       	ldd	r25, Y+25	; 0x19
    5f6e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    5f70:	bb 8d       	ldd	r27, Y+27	; 0x1b
    5f72:	28 17       	cp	r18, r24
    5f74:	39 07       	cpc	r19, r25
    5f76:	4a 07       	cpc	r20, r26
    5f78:	5b 07       	cpc	r21, r27
    5f7a:	60 f0       	brcs	.+24     	; 0x5f94 <_Z14reportTimeTillmmPKcS0_+0x62>
	{
		failure = true;
    5f7c:	81 e0       	ldi	r24, 0x01	; 1
    5f7e:	89 83       	std	Y+1, r24	; 0x01
		if(failMsg)
    5f80:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5f82:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5f84:	89 2b       	or	r24, r25
    5f86:	09 f4       	brne	.+2      	; 0x5f8a <_Z14reportTimeTillmmPKcS0_+0x58>
    5f88:	6b c1       	rjmp	.+726    	; 0x6260 <_Z14reportTimeTillmmPKcS0_+0x32e>
		{
			sb_send_string((char*)failMsg);
    5f8a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5f8c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    5f8e:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
    5f92:	66 c1       	rjmp	.+716    	; 0x6260 <_Z14reportTimeTillmmPKcS0_+0x32e>
		}
	}
	else
	{
		if(prefix)
    5f94:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5f96:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5f98:	89 2b       	or	r24, r25
    5f9a:	21 f0       	breq	.+8      	; 0x5fa4 <_Z14reportTimeTillmmPKcS0_+0x72>
		{
			sb_send_string((char*)prefix);
    5f9c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    5f9e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    5fa0:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}
		time_t dif = until - from;
    5fa4:	28 8d       	ldd	r18, Y+24	; 0x18
    5fa6:	39 8d       	ldd	r19, Y+25	; 0x19
    5fa8:	4a 8d       	ldd	r20, Y+26	; 0x1a
    5faa:	5b 8d       	ldd	r21, Y+27	; 0x1b
    5fac:	8c 89       	ldd	r24, Y+20	; 0x14
    5fae:	9d 89       	ldd	r25, Y+21	; 0x15
    5fb0:	ae 89       	ldd	r26, Y+22	; 0x16
    5fb2:	bf 89       	ldd	r27, Y+23	; 0x17
    5fb4:	79 01       	movw	r14, r18
    5fb6:	8a 01       	movw	r16, r20
    5fb8:	e8 1a       	sub	r14, r24
    5fba:	f9 0a       	sbc	r15, r25
    5fbc:	0a 0b       	sbc	r16, r26
    5fbe:	1b 0b       	sbc	r17, r27
    5fc0:	d8 01       	movw	r26, r16
    5fc2:	c7 01       	movw	r24, r14
    5fc4:	8a 83       	std	Y+2, r24	; 0x02
    5fc6:	9b 83       	std	Y+3, r25	; 0x03
    5fc8:	ac 83       	std	Y+4, r26	; 0x04
    5fca:	bd 83       	std	Y+5, r27	; 0x05
		uint16_t years = dif / YEAR;
    5fcc:	8a 81       	ldd	r24, Y+2	; 0x02
    5fce:	9b 81       	ldd	r25, Y+3	; 0x03
    5fd0:	ac 81       	ldd	r26, Y+4	; 0x04
    5fd2:	bd 81       	ldd	r27, Y+5	; 0x05
    5fd4:	20 e8       	ldi	r18, 0x80	; 128
    5fd6:	33 e3       	ldi	r19, 0x33	; 51
    5fd8:	41 ee       	ldi	r20, 0xE1	; 225
    5fda:	51 e0       	ldi	r21, 0x01	; 1
    5fdc:	bc 01       	movw	r22, r24
    5fde:	cd 01       	movw	r24, r26
    5fe0:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    5fe4:	da 01       	movw	r26, r20
    5fe6:	c9 01       	movw	r24, r18
    5fe8:	8e 83       	std	Y+6, r24	; 0x06
    5fea:	9f 83       	std	Y+7, r25	; 0x07
		time_t hold = dif - (years * YEAR);
    5fec:	8e 81       	ldd	r24, Y+6	; 0x06
    5fee:	9f 81       	ldd	r25, Y+7	; 0x07
    5ff0:	cc 01       	movw	r24, r24
    5ff2:	a0 e0       	ldi	r26, 0x00	; 0
    5ff4:	b0 e0       	ldi	r27, 0x00	; 0
    5ff6:	9c 01       	movw	r18, r24
    5ff8:	ad 01       	movw	r20, r26
    5ffa:	60 e8       	ldi	r22, 0x80	; 128
    5ffc:	73 e3       	ldi	r23, 0x33	; 51
    5ffe:	81 ee       	ldi	r24, 0xE1	; 225
    6000:	91 e0       	ldi	r25, 0x01	; 1
    6002:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    6006:	9b 01       	movw	r18, r22
    6008:	ac 01       	movw	r20, r24
    600a:	8a 81       	ldd	r24, Y+2	; 0x02
    600c:	9b 81       	ldd	r25, Y+3	; 0x03
    600e:	ac 81       	ldd	r26, Y+4	; 0x04
    6010:	bd 81       	ldd	r27, Y+5	; 0x05
    6012:	82 1b       	sub	r24, r18
    6014:	93 0b       	sbc	r25, r19
    6016:	a4 0b       	sbc	r26, r20
    6018:	b5 0b       	sbc	r27, r21
    601a:	88 87       	std	Y+8, r24	; 0x08
    601c:	99 87       	std	Y+9, r25	; 0x09
    601e:	aa 87       	std	Y+10, r26	; 0x0a
    6020:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t days = hold / DAY;
    6022:	88 85       	ldd	r24, Y+8	; 0x08
    6024:	99 85       	ldd	r25, Y+9	; 0x09
    6026:	aa 85       	ldd	r26, Y+10	; 0x0a
    6028:	bb 85       	ldd	r27, Y+11	; 0x0b
    602a:	20 e8       	ldi	r18, 0x80	; 128
    602c:	31 e5       	ldi	r19, 0x51	; 81
    602e:	41 e0       	ldi	r20, 0x01	; 1
    6030:	50 e0       	ldi	r21, 0x00	; 0
    6032:	bc 01       	movw	r22, r24
    6034:	cd 01       	movw	r24, r26
    6036:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    603a:	da 01       	movw	r26, r20
    603c:	c9 01       	movw	r24, r18
    603e:	8c 87       	std	Y+12, r24	; 0x0c
    6040:	9d 87       	std	Y+13, r25	; 0x0d
		hold -= (days * DAY);
    6042:	8c 85       	ldd	r24, Y+12	; 0x0c
    6044:	9d 85       	ldd	r25, Y+13	; 0x0d
    6046:	cc 01       	movw	r24, r24
    6048:	a0 e0       	ldi	r26, 0x00	; 0
    604a:	b0 e0       	ldi	r27, 0x00	; 0
    604c:	9c 01       	movw	r18, r24
    604e:	ad 01       	movw	r20, r26
    6050:	60 e8       	ldi	r22, 0x80	; 128
    6052:	71 e5       	ldi	r23, 0x51	; 81
    6054:	81 e0       	ldi	r24, 0x01	; 1
    6056:	90 e0       	ldi	r25, 0x00	; 0
    6058:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    605c:	9b 01       	movw	r18, r22
    605e:	ac 01       	movw	r20, r24
    6060:	88 85       	ldd	r24, Y+8	; 0x08
    6062:	99 85       	ldd	r25, Y+9	; 0x09
    6064:	aa 85       	ldd	r26, Y+10	; 0x0a
    6066:	bb 85       	ldd	r27, Y+11	; 0x0b
    6068:	82 1b       	sub	r24, r18
    606a:	93 0b       	sbc	r25, r19
    606c:	a4 0b       	sbc	r26, r20
    606e:	b5 0b       	sbc	r27, r21
    6070:	88 87       	std	Y+8, r24	; 0x08
    6072:	99 87       	std	Y+9, r25	; 0x09
    6074:	aa 87       	std	Y+10, r26	; 0x0a
    6076:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t hours = hold / HOUR;
    6078:	88 85       	ldd	r24, Y+8	; 0x08
    607a:	99 85       	ldd	r25, Y+9	; 0x09
    607c:	aa 85       	ldd	r26, Y+10	; 0x0a
    607e:	bb 85       	ldd	r27, Y+11	; 0x0b
    6080:	20 e1       	ldi	r18, 0x10	; 16
    6082:	3e e0       	ldi	r19, 0x0E	; 14
    6084:	40 e0       	ldi	r20, 0x00	; 0
    6086:	50 e0       	ldi	r21, 0x00	; 0
    6088:	bc 01       	movw	r22, r24
    608a:	cd 01       	movw	r24, r26
    608c:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    6090:	da 01       	movw	r26, r20
    6092:	c9 01       	movw	r24, r18
    6094:	8e 87       	std	Y+14, r24	; 0x0e
    6096:	9f 87       	std	Y+15, r25	; 0x0f
		hold -= (hours * HOUR);
    6098:	8e 85       	ldd	r24, Y+14	; 0x0e
    609a:	9f 85       	ldd	r25, Y+15	; 0x0f
    609c:	9c 01       	movw	r18, r24
    609e:	40 e0       	ldi	r20, 0x00	; 0
    60a0:	50 e0       	ldi	r21, 0x00	; 0
    60a2:	80 e1       	ldi	r24, 0x10	; 16
    60a4:	9e e0       	ldi	r25, 0x0E	; 14
    60a6:	dc 01       	movw	r26, r24
    60a8:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    60ac:	9b 01       	movw	r18, r22
    60ae:	ac 01       	movw	r20, r24
    60b0:	88 85       	ldd	r24, Y+8	; 0x08
    60b2:	99 85       	ldd	r25, Y+9	; 0x09
    60b4:	aa 85       	ldd	r26, Y+10	; 0x0a
    60b6:	bb 85       	ldd	r27, Y+11	; 0x0b
    60b8:	82 1b       	sub	r24, r18
    60ba:	93 0b       	sbc	r25, r19
    60bc:	a4 0b       	sbc	r26, r20
    60be:	b5 0b       	sbc	r27, r21
    60c0:	88 87       	std	Y+8, r24	; 0x08
    60c2:	99 87       	std	Y+9, r25	; 0x09
    60c4:	aa 87       	std	Y+10, r26	; 0x0a
    60c6:	bb 87       	std	Y+11, r27	; 0x0b
		uint16_t minutes = hold / MINUTE;
    60c8:	88 85       	ldd	r24, Y+8	; 0x08
    60ca:	99 85       	ldd	r25, Y+9	; 0x09
    60cc:	aa 85       	ldd	r26, Y+10	; 0x0a
    60ce:	bb 85       	ldd	r27, Y+11	; 0x0b
    60d0:	2c e3       	ldi	r18, 0x3C	; 60
    60d2:	30 e0       	ldi	r19, 0x00	; 0
    60d4:	40 e0       	ldi	r20, 0x00	; 0
    60d6:	50 e0       	ldi	r21, 0x00	; 0
    60d8:	bc 01       	movw	r22, r24
    60da:	cd 01       	movw	r24, r26
    60dc:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    60e0:	da 01       	movw	r26, r20
    60e2:	c9 01       	movw	r24, r18
    60e4:	88 8b       	std	Y+16, r24	; 0x10
    60e6:	99 8b       	std	Y+17, r25	; 0x11
		uint16_t seconds = hold - (minutes * MINUTE);
    60e8:	28 85       	ldd	r18, Y+8	; 0x08
    60ea:	39 85       	ldd	r19, Y+9	; 0x09
    60ec:	48 89       	ldd	r20, Y+16	; 0x10
    60ee:	59 89       	ldd	r21, Y+17	; 0x11
    60f0:	6c e3       	ldi	r22, 0x3C	; 60
    60f2:	64 9f       	mul	r22, r20
    60f4:	c0 01       	movw	r24, r0
    60f6:	65 9f       	mul	r22, r21
    60f8:	90 0d       	add	r25, r0
    60fa:	11 24       	eor	r1, r1
    60fc:	89 01       	movw	r16, r18
    60fe:	08 1b       	sub	r16, r24
    6100:	19 0b       	sbc	r17, r25
    6102:	c8 01       	movw	r24, r16
    6104:	8a 8b       	std	Y+18, r24	; 0x12
    6106:	9b 8b       	std	Y+19, r25	; 0x13

		g_tempStr[0] = '\0';
    6108:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZL9g_tempStr>

		if(years)
    610c:	8e 81       	ldd	r24, Y+6	; 0x06
    610e:	9f 81       	ldd	r25, Y+7	; 0x07
    6110:	89 2b       	or	r24, r25
    6112:	f1 f0       	breq	.+60     	; 0x6150 <_Z14reportTimeTillmmPKcS0_+0x21e>
		{
			sprintf(g_tempStr, "%d yrs ", years);
    6114:	8f 81       	ldd	r24, Y+7	; 0x07
    6116:	8f 93       	push	r24
    6118:	8e 81       	ldd	r24, Y+6	; 0x06
    611a:	8f 93       	push	r24
    611c:	8e e5       	ldi	r24, 0x5E	; 94
    611e:	93 e4       	ldi	r25, 0x43	; 67
    6120:	89 2f       	mov	r24, r25
    6122:	8f 93       	push	r24
    6124:	8e e5       	ldi	r24, 0x5E	; 94
    6126:	93 e4       	ldi	r25, 0x43	; 67
    6128:	8f 93       	push	r24
    612a:	8d e0       	ldi	r24, 0x0D	; 13
    612c:	97 e4       	ldi	r25, 0x47	; 71
    612e:	89 2f       	mov	r24, r25
    6130:	8f 93       	push	r24
    6132:	8d e0       	ldi	r24, 0x0D	; 13
    6134:	97 e4       	ldi	r25, 0x47	; 71
    6136:	8f 93       	push	r24
    6138:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    613c:	0f 90       	pop	r0
    613e:	0f 90       	pop	r0
    6140:	0f 90       	pop	r0
    6142:	0f 90       	pop	r0
    6144:	0f 90       	pop	r0
    6146:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6148:	8d e0       	ldi	r24, 0x0D	; 13
    614a:	97 e4       	ldi	r25, 0x47	; 71
    614c:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}

		if(days)
    6150:	8c 85       	ldd	r24, Y+12	; 0x0c
    6152:	9d 85       	ldd	r25, Y+13	; 0x0d
    6154:	89 2b       	or	r24, r25
    6156:	f1 f0       	breq	.+60     	; 0x6194 <_Z14reportTimeTillmmPKcS0_+0x262>
		{
			sprintf(g_tempStr, "%d days ", days);
    6158:	8d 85       	ldd	r24, Y+13	; 0x0d
    615a:	8f 93       	push	r24
    615c:	8c 85       	ldd	r24, Y+12	; 0x0c
    615e:	8f 93       	push	r24
    6160:	86 e6       	ldi	r24, 0x66	; 102
    6162:	93 e4       	ldi	r25, 0x43	; 67
    6164:	89 2f       	mov	r24, r25
    6166:	8f 93       	push	r24
    6168:	86 e6       	ldi	r24, 0x66	; 102
    616a:	93 e4       	ldi	r25, 0x43	; 67
    616c:	8f 93       	push	r24
    616e:	8d e0       	ldi	r24, 0x0D	; 13
    6170:	97 e4       	ldi	r25, 0x47	; 71
    6172:	89 2f       	mov	r24, r25
    6174:	8f 93       	push	r24
    6176:	8d e0       	ldi	r24, 0x0D	; 13
    6178:	97 e4       	ldi	r25, 0x47	; 71
    617a:	8f 93       	push	r24
    617c:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    6180:	0f 90       	pop	r0
    6182:	0f 90       	pop	r0
    6184:	0f 90       	pop	r0
    6186:	0f 90       	pop	r0
    6188:	0f 90       	pop	r0
    618a:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    618c:	8d e0       	ldi	r24, 0x0D	; 13
    618e:	97 e4       	ldi	r25, 0x47	; 71
    6190:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}

		if(hours)
    6194:	8e 85       	ldd	r24, Y+14	; 0x0e
    6196:	9f 85       	ldd	r25, Y+15	; 0x0f
    6198:	89 2b       	or	r24, r25
    619a:	f1 f0       	breq	.+60     	; 0x61d8 <_Z14reportTimeTillmmPKcS0_+0x2a6>
		{
			sprintf(g_tempStr, "%d hrs ", hours);
    619c:	8f 85       	ldd	r24, Y+15	; 0x0f
    619e:	8f 93       	push	r24
    61a0:	8e 85       	ldd	r24, Y+14	; 0x0e
    61a2:	8f 93       	push	r24
    61a4:	8f e6       	ldi	r24, 0x6F	; 111
    61a6:	93 e4       	ldi	r25, 0x43	; 67
    61a8:	89 2f       	mov	r24, r25
    61aa:	8f 93       	push	r24
    61ac:	8f e6       	ldi	r24, 0x6F	; 111
    61ae:	93 e4       	ldi	r25, 0x43	; 67
    61b0:	8f 93       	push	r24
    61b2:	8d e0       	ldi	r24, 0x0D	; 13
    61b4:	97 e4       	ldi	r25, 0x47	; 71
    61b6:	89 2f       	mov	r24, r25
    61b8:	8f 93       	push	r24
    61ba:	8d e0       	ldi	r24, 0x0D	; 13
    61bc:	97 e4       	ldi	r25, 0x47	; 71
    61be:	8f 93       	push	r24
    61c0:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    61c4:	0f 90       	pop	r0
    61c6:	0f 90       	pop	r0
    61c8:	0f 90       	pop	r0
    61ca:	0f 90       	pop	r0
    61cc:	0f 90       	pop	r0
    61ce:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    61d0:	8d e0       	ldi	r24, 0x0D	; 13
    61d2:	97 e4       	ldi	r25, 0x47	; 71
    61d4:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}

		if(minutes)
    61d8:	88 89       	ldd	r24, Y+16	; 0x10
    61da:	99 89       	ldd	r25, Y+17	; 0x11
    61dc:	89 2b       	or	r24, r25
    61de:	f1 f0       	breq	.+60     	; 0x621c <_Z14reportTimeTillmmPKcS0_+0x2ea>
		{
			sprintf(g_tempStr, "%d min ", minutes);
    61e0:	89 89       	ldd	r24, Y+17	; 0x11
    61e2:	8f 93       	push	r24
    61e4:	88 89       	ldd	r24, Y+16	; 0x10
    61e6:	8f 93       	push	r24
    61e8:	87 e7       	ldi	r24, 0x77	; 119
    61ea:	93 e4       	ldi	r25, 0x43	; 67
    61ec:	89 2f       	mov	r24, r25
    61ee:	8f 93       	push	r24
    61f0:	87 e7       	ldi	r24, 0x77	; 119
    61f2:	93 e4       	ldi	r25, 0x43	; 67
    61f4:	8f 93       	push	r24
    61f6:	8d e0       	ldi	r24, 0x0D	; 13
    61f8:	97 e4       	ldi	r25, 0x47	; 71
    61fa:	89 2f       	mov	r24, r25
    61fc:	8f 93       	push	r24
    61fe:	8d e0       	ldi	r24, 0x0D	; 13
    6200:	97 e4       	ldi	r25, 0x47	; 71
    6202:	8f 93       	push	r24
    6204:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    6208:	0f 90       	pop	r0
    620a:	0f 90       	pop	r0
    620c:	0f 90       	pop	r0
    620e:	0f 90       	pop	r0
    6210:	0f 90       	pop	r0
    6212:	0f 90       	pop	r0
			sb_send_string(g_tempStr);
    6214:	8d e0       	ldi	r24, 0x0D	; 13
    6216:	97 e4       	ldi	r25, 0x47	; 71
    6218:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}

		sprintf(g_tempStr, "%d sec", seconds);
    621c:	8b 89       	ldd	r24, Y+19	; 0x13
    621e:	8f 93       	push	r24
    6220:	8a 89       	ldd	r24, Y+18	; 0x12
    6222:	8f 93       	push	r24
    6224:	8f e7       	ldi	r24, 0x7F	; 127
    6226:	93 e4       	ldi	r25, 0x43	; 67
    6228:	89 2f       	mov	r24, r25
    622a:	8f 93       	push	r24
    622c:	8f e7       	ldi	r24, 0x7F	; 127
    622e:	93 e4       	ldi	r25, 0x43	; 67
    6230:	8f 93       	push	r24
    6232:	8d e0       	ldi	r24, 0x0D	; 13
    6234:	97 e4       	ldi	r25, 0x47	; 71
    6236:	89 2f       	mov	r24, r25
    6238:	8f 93       	push	r24
    623a:	8d e0       	ldi	r24, 0x0D	; 13
    623c:	97 e4       	ldi	r25, 0x47	; 71
    623e:	8f 93       	push	r24
    6240:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    6244:	0f 90       	pop	r0
    6246:	0f 90       	pop	r0
    6248:	0f 90       	pop	r0
    624a:	0f 90       	pop	r0
    624c:	0f 90       	pop	r0
    624e:	0f 90       	pop	r0
		sb_send_string(g_tempStr);
    6250:	8d e0       	ldi	r24, 0x0D	; 13
    6252:	97 e4       	ldi	r25, 0x47	; 71
    6254:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>

		sb_send_NewLine();
    6258:	0e 94 7c 5e 	call	0xbcf8	; 0xbcf8 <sb_send_NewLine>
		g_tempStr[0] = '\0';
    625c:	10 92 0d 47 	sts	0x470D, r1	; 0x80470d <_ZL9g_tempStr>
	}

	return( failure);
    6260:	89 81       	ldd	r24, Y+1	; 0x01
}
    6262:	6f 96       	adiw	r28, 0x1f	; 31
    6264:	cd bf       	out	0x3d, r28	; 61
    6266:	de bf       	out	0x3e, r29	; 62
    6268:	df 91       	pop	r29
    626a:	cf 91       	pop	r28
    626c:	1f 91       	pop	r17
    626e:	0f 91       	pop	r16
    6270:	ff 90       	pop	r15
    6272:	ef 90       	pop	r14
    6274:	08 95       	ret

00006276 <_Z23clockConfigurationCheckv>:



ConfigurationState_t clockConfigurationCheck(void)
{
    6276:	cf 93       	push	r28
    6278:	df 93       	push	r29
    627a:	cd b7       	in	r28, 0x3d	; 61
    627c:	de b7       	in	r29, 0x3e	; 62
	if((g_event_finish_epoch < MINIMUM_EPOCH) || (g_event_start_epoch < MINIMUM_EPOCH) || (g_current_epoch < MINIMUM_EPOCH))
    627e:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    6282:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    6286:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    628a:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    628e:	81 15       	cp	r24, r1
    6290:	96 46       	sbci	r25, 0x66	; 102
    6292:	ae 4e       	sbci	r26, 0xEE	; 238
    6294:	bf 45       	sbci	r27, 0x5F	; 95
    6296:	d0 f0       	brcs	.+52     	; 0x62cc <_Z23clockConfigurationCheckv+0x56>
    6298:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    629c:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    62a0:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    62a4:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    62a8:	81 15       	cp	r24, r1
    62aa:	96 46       	sbci	r25, 0x66	; 102
    62ac:	ae 4e       	sbci	r26, 0xEE	; 238
    62ae:	bf 45       	sbci	r27, 0x5F	; 95
    62b0:	68 f0       	brcs	.+26     	; 0x62cc <_Z23clockConfigurationCheckv+0x56>
    62b2:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    62b6:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    62ba:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    62be:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    62c2:	81 15       	cp	r24, r1
    62c4:	96 46       	sbci	r25, 0x66	; 102
    62c6:	ae 4e       	sbci	r26, 0xEE	; 238
    62c8:	bf 45       	sbci	r27, 0x5F	; 95
    62ca:	10 f4       	brcc	.+4      	; 0x62d0 <_Z23clockConfigurationCheckv+0x5a>
    62cc:	81 e0       	ldi	r24, 0x01	; 1
    62ce:	01 c0       	rjmp	.+2      	; 0x62d2 <_Z23clockConfigurationCheckv+0x5c>
    62d0:	80 e0       	ldi	r24, 0x00	; 0
    62d2:	88 23       	and	r24, r24
    62d4:	11 f0       	breq	.+4      	; 0x62da <_Z23clockConfigurationCheckv+0x64>
	{
		return(CONFIGURATION_ERROR);
    62d6:	82 e0       	ldi	r24, 0x02	; 2
    62d8:	62 c0       	rjmp	.+196    	; 0x639e <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_event_finish_epoch <= g_event_start_epoch) /* Event configured to finish before it started */
    62da:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    62de:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    62e2:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    62e6:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    62ea:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    62ee:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    62f2:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    62f6:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    62fa:	61 e0       	ldi	r22, 0x01	; 1
    62fc:	82 17       	cp	r24, r18
    62fe:	93 07       	cpc	r25, r19
    6300:	a4 07       	cpc	r26, r20
    6302:	b5 07       	cpc	r27, r21
    6304:	08 f4       	brcc	.+2      	; 0x6308 <_Z23clockConfigurationCheckv+0x92>
    6306:	60 e0       	ldi	r22, 0x00	; 0
    6308:	66 23       	and	r22, r22
    630a:	11 f0       	breq	.+4      	; 0x6310 <_Z23clockConfigurationCheckv+0x9a>
	{
		return(CONFIGURATION_ERROR);
    630c:	82 e0       	ldi	r24, 0x02	; 2
    630e:	47 c0       	rjmp	.+142    	; 0x639e <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_finish_epoch)  /* The scheduled event is over */
    6310:	20 91 a9 47 	lds	r18, 0x47A9	; 0x8047a9 <g_current_epoch>
    6314:	30 91 aa 47 	lds	r19, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    6318:	40 91 ab 47 	lds	r20, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    631c:	50 91 ac 47 	lds	r21, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    6320:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    6324:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    6328:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    632c:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    6330:	61 e0       	ldi	r22, 0x01	; 1
    6332:	82 17       	cp	r24, r18
    6334:	93 07       	cpc	r25, r19
    6336:	a4 07       	cpc	r26, r20
    6338:	b5 07       	cpc	r27, r21
    633a:	08 f0       	brcs	.+2      	; 0x633e <_Z23clockConfigurationCheckv+0xc8>
    633c:	60 e0       	ldi	r22, 0x00	; 0
    633e:	66 23       	and	r22, r22
    6340:	11 f0       	breq	.+4      	; 0x6346 <_Z23clockConfigurationCheckv+0xd0>
	{
		return(CONFIGURATION_ERROR);
    6342:	82 e0       	ldi	r24, 0x02	; 2
    6344:	2c c0       	rjmp	.+88     	; 0x639e <_Z23clockConfigurationCheckv+0x128>
	}

	if(g_current_epoch > g_event_start_epoch)       /* Event should be running */
    6346:	20 91 a9 47 	lds	r18, 0x47A9	; 0x8047a9 <g_current_epoch>
    634a:	30 91 aa 47 	lds	r19, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    634e:	40 91 ab 47 	lds	r20, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    6352:	50 91 ac 47 	lds	r21, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    6356:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    635a:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    635e:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    6362:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    6366:	61 e0       	ldi	r22, 0x01	; 1
    6368:	82 17       	cp	r24, r18
    636a:	93 07       	cpc	r25, r19
    636c:	a4 07       	cpc	r26, r20
    636e:	b5 07       	cpc	r27, r21
    6370:	08 f0       	brcs	.+2      	; 0x6374 <_Z23clockConfigurationCheckv+0xfe>
    6372:	60 e0       	ldi	r22, 0x00	; 0
    6374:	66 23       	and	r22, r22
    6376:	51 f0       	breq	.+20     	; 0x638c <_Z23clockConfigurationCheckv+0x116>
	{
		if(!g_event_enabled)
    6378:	90 91 88 47 	lds	r25, 0x4788	; 0x804788 <g_event_enabled>
    637c:	81 e0       	ldi	r24, 0x01	; 1
    637e:	89 27       	eor	r24, r25
    6380:	88 23       	and	r24, r24
    6382:	11 f0       	breq	.+4      	; 0x6388 <_Z23clockConfigurationCheckv+0x112>
		{
			return(SCHEDULED_EVENT_DID_NOT_START);  /* Event scheduled to be running isn't */
    6384:	83 e0       	ldi	r24, 0x03	; 3
    6386:	0b c0       	rjmp	.+22     	; 0x639e <_Z23clockConfigurationCheckv+0x128>
		}
		else
		{
			return(EVENT_IN_PROGRESS);              /* Event is running, so clock settings don't matter */
    6388:	85 e0       	ldi	r24, 0x05	; 5
    638a:	09 c0       	rjmp	.+18     	; 0x639e <_Z23clockConfigurationCheckv+0x128>
		}
	}
	else if(!g_use_rtc_for_startstop)
    638c:	90 91 ad 47 	lds	r25, 0x47AD	; 0x8047ad <g_use_rtc_for_startstop>
    6390:	81 e0       	ldi	r24, 0x01	; 1
    6392:	89 27       	eor	r24, r25
    6394:	88 23       	and	r24, r24
    6396:	11 f0       	breq	.+4      	; 0x639c <_Z23clockConfigurationCheckv+0x126>
	{
		return(SCHEDULED_EVENT_WILL_NEVER_RUN);
    6398:	84 e0       	ldi	r24, 0x04	; 4
    639a:	01 c0       	rjmp	.+2      	; 0x639e <_Z23clockConfigurationCheckv+0x128>
	}

	return(WAITING_FOR_START);  /* Future event hasn't started yet */
    639c:	81 e0       	ldi	r24, 0x01	; 1
}
    639e:	df 91       	pop	r29
    63a0:	cf 91       	pop	r28
    63a2:	08 95       	ret

000063a4 <_Z18reportConfigErrorsv>:

void reportConfigErrors(void)
{
    63a4:	cf 93       	push	r28
    63a6:	df 93       	push	r29
    63a8:	cd b7       	in	r28, 0x3d	; 61
    63aa:	de b7       	in	r29, 0x3e	; 62
	g_current_epoch = ds3231_get_epoch(null);
    63ac:	80 e0       	ldi	r24, 0x00	; 0
    63ae:	90 e0       	ldi	r25, 0x00	; 0
    63b0:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    63b4:	dc 01       	movw	r26, r24
    63b6:	cb 01       	movw	r24, r22
    63b8:	80 93 a9 47 	sts	0x47A9, r24	; 0x8047a9 <g_current_epoch>
    63bc:	90 93 aa 47 	sts	0x47AA, r25	; 0x8047aa <g_current_epoch+0x1>
    63c0:	a0 93 ab 47 	sts	0x47AB, r26	; 0x8047ab <g_current_epoch+0x2>
    63c4:	b0 93 ac 47 	sts	0x47AC, r27	; 0x8047ac <g_current_epoch+0x3>

	if(g_messages_text[STATION_ID][0] == '\0')
    63c8:	80 91 67 47 	lds	r24, 0x4767	; 0x804767 <g_messages_text+0x15>
    63cc:	88 23       	and	r24, r24
    63ce:	21 f4       	brne	.+8      	; 0x63d8 <_Z18reportConfigErrorsv+0x34>
	{
		sb_send_string(TEXT_SET_ID_TXT);
    63d0:	86 e8       	ldi	r24, 0x86	; 134
    63d2:	93 e4       	ldi	r25, 0x43	; 67
    63d4:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
	}

	if(g_current_epoch < MINIMUM_EPOCH) /* Current time is invalid */
    63d8:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    63dc:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    63e0:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    63e4:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    63e8:	81 15       	cp	r24, r1
    63ea:	96 46       	sbci	r25, 0x66	; 102
    63ec:	ae 4e       	sbci	r26, 0xEE	; 238
    63ee:	bf 45       	sbci	r27, 0x5F	; 95
    63f0:	20 f4       	brcc	.+8      	; 0x63fa <_Z18reportConfigErrorsv+0x56>
	{
		sb_send_string(TEXT_SET_TIME_TXT);
    63f2:	87 ea       	ldi	r24, 0xA7	; 167
    63f4:	93 e4       	ldi	r25, 0x43	; 67
    63f6:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
	}

	if(g_event_finish_epoch < g_current_epoch)      /* Event has already finished */
    63fa:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    63fe:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    6402:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    6406:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    640a:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    640e:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    6412:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    6416:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    641a:	61 e0       	ldi	r22, 0x01	; 1
    641c:	28 17       	cp	r18, r24
    641e:	39 07       	cpc	r19, r25
    6420:	4a 07       	cpc	r20, r26
    6422:	5b 07       	cpc	r21, r27
    6424:	08 f0       	brcs	.+2      	; 0x6428 <_Z18reportConfigErrorsv+0x84>
    6426:	60 e0       	ldi	r22, 0x00	; 0
    6428:	66 23       	and	r22, r22
    642a:	11 f1       	breq	.+68     	; 0x6470 <_Z18reportConfigErrorsv+0xcc>
	{
		if(g_event_start_epoch < g_current_epoch)   /* Event has already started */
    642c:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    6430:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    6434:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    6438:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    643c:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    6440:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    6444:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    6448:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    644c:	61 e0       	ldi	r22, 0x01	; 1
    644e:	28 17       	cp	r18, r24
    6450:	39 07       	cpc	r19, r25
    6452:	4a 07       	cpc	r20, r26
    6454:	5b 07       	cpc	r21, r27
    6456:	08 f0       	brcs	.+2      	; 0x645a <_Z18reportConfigErrorsv+0xb6>
    6458:	60 e0       	ldi	r22, 0x00	; 0
    645a:	66 23       	and	r22, r22
    645c:	21 f0       	breq	.+8      	; 0x6466 <_Z18reportConfigErrorsv+0xc2>
		{
			sb_send_string(TEXT_SET_START_TXT);
    645e:	8f ec       	ldi	r24, 0xCF	; 207
    6460:	93 e4       	ldi	r25, 0x43	; 67
    6462:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
    6466:	85 ef       	ldi	r24, 0xF5	; 245
    6468:	93 e4       	ldi	r25, 0x43	; 67
    646a:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    646e:	33 c0       	rjmp	.+102    	; 0x64d6 <_Z18reportConfigErrorsv+0x132>
			sb_send_string(TEXT_SET_START_TXT);
		}

		sb_send_string(TEXT_SET_FINISH_TXT);
	}
	else if(g_event_start_epoch < g_current_epoch)  /* Event has already started */
    6470:	20 91 80 47 	lds	r18, 0x4780	; 0x804780 <g_event_start_epoch>
    6474:	30 91 81 47 	lds	r19, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    6478:	40 91 82 47 	lds	r20, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    647c:	50 91 83 47 	lds	r21, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    6480:	80 91 a9 47 	lds	r24, 0x47A9	; 0x8047a9 <g_current_epoch>
    6484:	90 91 aa 47 	lds	r25, 0x47AA	; 0x8047aa <g_current_epoch+0x1>
    6488:	a0 91 ab 47 	lds	r26, 0x47AB	; 0x8047ab <g_current_epoch+0x2>
    648c:	b0 91 ac 47 	lds	r27, 0x47AC	; 0x8047ac <g_current_epoch+0x3>
    6490:	61 e0       	ldi	r22, 0x01	; 1
    6492:	28 17       	cp	r18, r24
    6494:	39 07       	cpc	r19, r25
    6496:	4a 07       	cpc	r20, r26
    6498:	5b 07       	cpc	r21, r27
    649a:	08 f0       	brcs	.+2      	; 0x649e <_Z18reportConfigErrorsv+0xfa>
    649c:	60 e0       	ldi	r22, 0x00	; 0
    649e:	66 23       	and	r22, r22
    64a0:	d1 f0       	breq	.+52     	; 0x64d6 <_Z18reportConfigErrorsv+0x132>
	{
		if(g_event_start_epoch < MINIMUM_EPOCH)     /* Start in invalid */
    64a2:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    64a6:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    64aa:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    64ae:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    64b2:	21 e0       	ldi	r18, 0x01	; 1
    64b4:	81 15       	cp	r24, r1
    64b6:	96 46       	sbci	r25, 0x66	; 102
    64b8:	ae 4e       	sbci	r26, 0xEE	; 238
    64ba:	bf 45       	sbci	r27, 0x5F	; 95
    64bc:	08 f0       	brcs	.+2      	; 0x64c0 <_Z18reportConfigErrorsv+0x11c>
    64be:	20 e0       	ldi	r18, 0x00	; 0
    64c0:	22 23       	and	r18, r18
    64c2:	29 f0       	breq	.+10     	; 0x64ce <_Z18reportConfigErrorsv+0x12a>
		{
			sb_send_string(TEXT_SET_START_TXT);
    64c4:	8f ec       	ldi	r24, 0xCF	; 207
    64c6:	93 e4       	ldi	r25, 0x43	; 67
    64c8:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    64cc:	04 c0       	rjmp	.+8      	; 0x64d6 <_Z18reportConfigErrorsv+0x132>
		{
			sb_send_string(TEXT_SET_START_TXT);
		}
		else
		{
			sb_send_string((char*)"Event running...\n");
    64ce:	8c e1       	ldi	r24, 0x1C	; 28
    64d0:	94 e4       	ldi	r25, 0x44	; 68
    64d2:	0e 94 a6 5e 	call	0xbd4c	; 0xbd4c <sb_send_string>
		}
	}
}
    64d6:	00 00       	nop
    64d8:	df 91       	pop	r29
    64da:	cf 91       	pop	r28
    64dc:	08 95       	ret

000064de <_Z41__static_initialization_and_destruction_0ii>:
    64de:	cf 93       	push	r28
    64e0:	df 93       	push	r29
    64e2:	00 d0       	rcall	.+0      	; 0x64e4 <_Z41__static_initialization_and_destruction_0ii+0x6>
    64e4:	00 d0       	rcall	.+0      	; 0x64e6 <_Z41__static_initialization_and_destruction_0ii+0x8>
    64e6:	cd b7       	in	r28, 0x3d	; 61
    64e8:	de b7       	in	r29, 0x3e	; 62
    64ea:	89 83       	std	Y+1, r24	; 0x01
    64ec:	9a 83       	std	Y+2, r25	; 0x02
    64ee:	6b 83       	std	Y+3, r22	; 0x03
    64f0:	7c 83       	std	Y+4, r23	; 0x04
    64f2:	89 81       	ldd	r24, Y+1	; 0x01
    64f4:	9a 81       	ldd	r25, Y+2	; 0x02
    64f6:	01 97       	sbiw	r24, 0x01	; 1
    64f8:	61 f4       	brne	.+24     	; 0x6512 <_Z41__static_initialization_and_destruction_0ii+0x34>
    64fa:	8b 81       	ldd	r24, Y+3	; 0x03
    64fc:	9c 81       	ldd	r25, Y+4	; 0x04
    64fe:	01 96       	adiw	r24, 0x01	; 1
    6500:	41 f4       	brne	.+16     	; 0x6512 <_Z41__static_initialization_and_destruction_0ii+0x34>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    6502:	8e e9       	ldi	r24, 0x9E	; 158
    6504:	97 e4       	ldi	r25, 0x47	; 71
    6506:	0e 94 f5 4d 	call	0x9bea	; 0x9bea <_ZN4ledsC1Ev>

EepromManager g_ee_mgr;
    650a:	8f e9       	ldi	r24, 0x9F	; 159
    650c:	97 e4       	ldi	r25, 0x47	; 71
    650e:	0e 94 92 43 	call	0x8724	; 0x8724 <_ZN13EepromManagerC1Ev>
    6512:	89 81       	ldd	r24, Y+1	; 0x01
    6514:	9a 81       	ldd	r25, Y+2	; 0x02
    6516:	89 2b       	or	r24, r25
    6518:	61 f4       	brne	.+24     	; 0x6532 <_Z41__static_initialization_and_destruction_0ii+0x54>
    651a:	8b 81       	ldd	r24, Y+3	; 0x03
    651c:	9c 81       	ldd	r25, Y+4	; 0x04
    651e:	01 96       	adiw	r24, 0x01	; 1
    6520:	41 f4       	brne	.+16     	; 0x6532 <_Z41__static_initialization_and_destruction_0ii+0x54>
    6522:	8f e9       	ldi	r24, 0x9F	; 159
    6524:	97 e4       	ldi	r25, 0x47	; 71
    6526:	0e 94 9f 43 	call	0x873e	; 0x873e <_ZN13EepromManagerD1Ev>

extern Goertzel g_goertzel;
volatile uint16_t g_switch_closed_count = 0;
volatile bool g_long_button_press = false;

leds LEDS = leds();
    652a:	8e e9       	ldi	r24, 0x9E	; 158
    652c:	97 e4       	ldi	r25, 0x47	; 71
    652e:	0e 94 02 4e 	call	0x9c04	; 0x9c04 <_ZN4ledsD1Ev>
		else
		{
			sb_send_string((char*)"Event running...\n");
		}
	}
}
    6532:	00 00       	nop
    6534:	24 96       	adiw	r28, 0x04	; 4
    6536:	cd bf       	out	0x3d, r28	; 61
    6538:	de bf       	out	0x3e, r29	; 62
    653a:	df 91       	pop	r29
    653c:	cf 91       	pop	r28
    653e:	08 95       	ret

00006540 <_GLOBAL__sub_I_g_antenna_connect_state>:
    6540:	cf 93       	push	r28
    6542:	df 93       	push	r29
    6544:	cd b7       	in	r28, 0x3d	; 61
    6546:	de b7       	in	r29, 0x3e	; 62
    6548:	6f ef       	ldi	r22, 0xFF	; 255
    654a:	7f ef       	ldi	r23, 0xFF	; 255
    654c:	81 e0       	ldi	r24, 0x01	; 1
    654e:	90 e0       	ldi	r25, 0x00	; 0
    6550:	0e 94 6f 32 	call	0x64de	; 0x64de <_Z41__static_initialization_and_destruction_0ii>
    6554:	df 91       	pop	r29
    6556:	cf 91       	pop	r28
    6558:	08 95       	ret

0000655a <_GLOBAL__sub_D_g_antenna_connect_state>:
    655a:	cf 93       	push	r28
    655c:	df 93       	push	r29
    655e:	cd b7       	in	r28, 0x3d	; 61
    6560:	de b7       	in	r29, 0x3e	; 62
    6562:	6f ef       	ldi	r22, 0xFF	; 255
    6564:	7f ef       	ldi	r23, 0xFF	; 255
    6566:	80 e0       	ldi	r24, 0x00	; 0
    6568:	90 e0       	ldi	r25, 0x00	; 0
    656a:	0e 94 6f 32 	call	0x64de	; 0x64de <_Z41__static_initialization_and_destruction_0ii>
    656e:	df 91       	pop	r29
    6570:	cf 91       	pop	r28
    6572:	08 95       	ret

00006574 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t>:
	}
	
	ADC0.MUXPOS = holdMux; /* Restore ADC registers */
	
	return(temperature_in_C);
}
    6574:	cf 93       	push	r28
    6576:	df 93       	push	r29
    6578:	1f 92       	push	r1
    657a:	cd b7       	in	r28, 0x3d	; 61
    657c:	de b7       	in	r29, 0x3e	; 62
    657e:	89 83       	std	Y+1, r24	; 0x01
    6580:	89 81       	ldd	r24, Y+1	; 0x01
    6582:	88 2f       	mov	r24, r24
    6584:	90 e0       	ldi	r25, 0x00	; 0
    6586:	82 30       	cpi	r24, 0x02	; 2
    6588:	91 05       	cpc	r25, r1
    658a:	41 f1       	breq	.+80     	; 0x65dc <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x68>
    658c:	83 30       	cpi	r24, 0x03	; 3
    658e:	91 05       	cpc	r25, r1
    6590:	2c f4       	brge	.+10     	; 0x659c <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x28>
    6592:	00 97       	sbiw	r24, 0x00	; 0
    6594:	49 f0       	breq	.+18     	; 0x65a8 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x34>
    6596:	01 97       	sbiw	r24, 0x01	; 1
    6598:	a1 f0       	breq	.+40     	; 0x65c2 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x4e>
    659a:	47 c0       	rjmp	.+142    	; 0x662a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    659c:	83 30       	cpi	r24, 0x03	; 3
    659e:	91 05       	cpc	r25, r1
    65a0:	51 f1       	breq	.+84     	; 0x65f6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x82>
    65a2:	04 97       	sbiw	r24, 0x04	; 4
    65a4:	a9 f1       	breq	.+106    	; 0x6610 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x9c>
    65a6:	41 c0       	rjmp	.+130    	; 0x662a <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xb6>
    65a8:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZL20g_adc_initialization>
    65ac:	81 30       	cpi	r24, 0x01	; 1
    65ae:	19 f0       	breq	.+6      	; 0x65b6 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x42>
    65b0:	81 e0       	ldi	r24, 0x01	; 1
    65b2:	0e 94 05 34 	call	0x680a	; 0x680a <_ZL16ADC0_SYSTEM_initb>
    65b6:	80 e0       	ldi	r24, 0x00	; 0
    65b8:	96 e0       	ldi	r25, 0x06	; 6
    65ba:	22 e0       	ldi	r18, 0x02	; 2
    65bc:	fc 01       	movw	r30, r24
    65be:	20 87       	std	Z+8, r18	; 0x08
    65c0:	37 c0       	rjmp	.+110    	; 0x6630 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
    65c2:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZL20g_adc_initialization>
    65c6:	82 30       	cpi	r24, 0x02	; 2
    65c8:	19 f0       	breq	.+6      	; 0x65d0 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x5c>
    65ca:	80 e0       	ldi	r24, 0x00	; 0
    65cc:	0e 94 05 34 	call	0x680a	; 0x680a <_ZL16ADC0_SYSTEM_initb>
    65d0:	80 e0       	ldi	r24, 0x00	; 0
    65d2:	96 e0       	ldi	r25, 0x06	; 6
    65d4:	23 e0       	ldi	r18, 0x03	; 3
    65d6:	fc 01       	movw	r30, r24
    65d8:	20 87       	std	Z+8, r18	; 0x08
    65da:	2a c0       	rjmp	.+84     	; 0x6630 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
    65dc:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZL20g_adc_initialization>
    65e0:	82 30       	cpi	r24, 0x02	; 2
    65e2:	19 f0       	breq	.+6      	; 0x65ea <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x76>
    65e4:	80 e0       	ldi	r24, 0x00	; 0
    65e6:	0e 94 05 34 	call	0x680a	; 0x680a <_ZL16ADC0_SYSTEM_initb>
    65ea:	80 e0       	ldi	r24, 0x00	; 0
    65ec:	96 e0       	ldi	r25, 0x06	; 6
    65ee:	24 e0       	ldi	r18, 0x04	; 4
    65f0:	fc 01       	movw	r30, r24
    65f2:	20 87       	std	Z+8, r18	; 0x08
    65f4:	1d c0       	rjmp	.+58     	; 0x6630 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
    65f6:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZL20g_adc_initialization>
    65fa:	82 30       	cpi	r24, 0x02	; 2
    65fc:	19 f0       	breq	.+6      	; 0x6604 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0x90>
    65fe:	80 e0       	ldi	r24, 0x00	; 0
    6600:	0e 94 05 34 	call	0x680a	; 0x680a <_ZL16ADC0_SYSTEM_initb>
    6604:	80 e0       	ldi	r24, 0x00	; 0
    6606:	96 e0       	ldi	r25, 0x06	; 6
    6608:	25 e0       	ldi	r18, 0x05	; 5
    660a:	fc 01       	movw	r30, r24
    660c:	20 87       	std	Z+8, r18	; 0x08
    660e:	10 c0       	rjmp	.+32     	; 0x6630 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
    6610:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZL20g_adc_initialization>
    6614:	82 30       	cpi	r24, 0x02	; 2
    6616:	19 f0       	breq	.+6      	; 0x661e <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xaa>
    6618:	80 e0       	ldi	r24, 0x00	; 0
    661a:	0e 94 05 34 	call	0x680a	; 0x680a <_ZL16ADC0_SYSTEM_initb>
    661e:	80 e0       	ldi	r24, 0x00	; 0
    6620:	96 e0       	ldi	r25, 0x06	; 6
    6622:	22 e4       	ldi	r18, 0x42	; 66
    6624:	fc 01       	movw	r30, r24
    6626:	20 87       	std	Z+8, r18	; 0x08
    6628:	03 c0       	rjmp	.+6      	; 0x6630 <_Z18ADC0_setADCChannel20ADC_Active_Channel_t+0xbc>
    662a:	0e 94 17 34 	call	0x682e	; 0x682e <_ZL20ADC0_SYSTEM_shutdownv>
    662e:	00 00       	nop
    6630:	00 00       	nop
    6632:	0f 90       	pop	r0
    6634:	df 91       	pop	r29
    6636:	cf 91       	pop	r28
    6638:	08 95       	ret

0000663a <_Z20ADC0_startConversionv>:
    663a:	cf 93       	push	r28
    663c:	df 93       	push	r29
    663e:	cd b7       	in	r28, 0x3d	; 61
    6640:	de b7       	in	r29, 0x3e	; 62
    6642:	80 91 c7 47 	lds	r24, 0x47C7	; 0x8047c7 <_ZL20g_adc_initialization>
    6646:	88 23       	and	r24, r24
    6648:	49 f0       	breq	.+18     	; 0x665c <_Z20ADC0_startConversionv+0x22>
    664a:	80 e0       	ldi	r24, 0x00	; 0
    664c:	96 e0       	ldi	r25, 0x06	; 6
    664e:	fc 01       	movw	r30, r24
    6650:	14 86       	std	Z+12, r1	; 0x0c
    6652:	80 e0       	ldi	r24, 0x00	; 0
    6654:	96 e0       	ldi	r25, 0x06	; 6
    6656:	21 e0       	ldi	r18, 0x01	; 1
    6658:	fc 01       	movw	r30, r24
    665a:	22 87       	std	Z+10, r18	; 0x0a
    665c:	00 00       	nop
    665e:	df 91       	pop	r29
    6660:	cf 91       	pop	r28
    6662:	08 95       	ret

00006664 <_Z19ADC0_conversionDonev>:
    6664:	cf 93       	push	r28
    6666:	df 93       	push	r29
    6668:	cd b7       	in	r28, 0x3d	; 61
    666a:	de b7       	in	r29, 0x3e	; 62
    666c:	80 e0       	ldi	r24, 0x00	; 0
    666e:	96 e0       	ldi	r25, 0x06	; 6
    6670:	fc 01       	movw	r30, r24
    6672:	85 85       	ldd	r24, Z+13	; 0x0d
    6674:	88 2f       	mov	r24, r24
    6676:	90 e0       	ldi	r25, 0x00	; 0
    6678:	81 70       	andi	r24, 0x01	; 1
    667a:	99 27       	eor	r25, r25
    667c:	21 e0       	ldi	r18, 0x01	; 1
    667e:	89 2b       	or	r24, r25
    6680:	09 f4       	brne	.+2      	; 0x6684 <_Z19ADC0_conversionDonev+0x20>
    6682:	20 e0       	ldi	r18, 0x00	; 0
    6684:	82 2f       	mov	r24, r18
    6686:	df 91       	pop	r29
    6688:	cf 91       	pop	r28
    668a:	08 95       	ret

0000668c <_Z9ADC0_readv>:
    668c:	cf 93       	push	r28
    668e:	df 93       	push	r29
    6690:	cd b7       	in	r28, 0x3d	; 61
    6692:	de b7       	in	r29, 0x3e	; 62
    6694:	80 e0       	ldi	r24, 0x00	; 0
    6696:	96 e0       	ldi	r25, 0x06	; 6
    6698:	fc 01       	movw	r30, r24
    669a:	80 89       	ldd	r24, Z+16	; 0x10
    669c:	91 89       	ldd	r25, Z+17	; 0x11
    669e:	df 91       	pop	r29
    66a0:	cf 91       	pop	r28
    66a2:	08 95       	ret

000066a4 <_ZL9PORT_initv>:


static void PORT_init(void)
{
    66a4:	cf 93       	push	r28
    66a6:	df 93       	push	r29
    66a8:	cd b7       	in	r28, 0x3d	; 61
    66aa:	de b7       	in	r29, 0x3e	; 62
	/* Disable interrupt and digital input buffer on PD2 */
	PORTD.PIN2CTRL &= ~PORT_ISC_gm;
    66ac:	80 e6       	ldi	r24, 0x60	; 96
    66ae:	94 e0       	ldi	r25, 0x04	; 4
    66b0:	20 e6       	ldi	r18, 0x60	; 96
    66b2:	34 e0       	ldi	r19, 0x04	; 4
    66b4:	f9 01       	movw	r30, r18
    66b6:	22 89       	ldd	r18, Z+18	; 0x12
    66b8:	28 7f       	andi	r18, 0xF8	; 248
    66ba:	fc 01       	movw	r30, r24
    66bc:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN2CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    66be:	80 e6       	ldi	r24, 0x60	; 96
    66c0:	94 e0       	ldi	r25, 0x04	; 4
    66c2:	20 e6       	ldi	r18, 0x60	; 96
    66c4:	34 e0       	ldi	r19, 0x04	; 4
    66c6:	f9 01       	movw	r30, r18
    66c8:	22 89       	ldd	r18, Z+18	; 0x12
    66ca:	24 60       	ori	r18, 0x04	; 4
    66cc:	fc 01       	movw	r30, r24
    66ce:	22 8b       	std	Z+18, r18	; 0x12
	/* Disable interrupt and digital input buffer on PD3 */
	PORTD.PIN3CTRL &= ~PORT_ISC_gm;
    66d0:	80 e6       	ldi	r24, 0x60	; 96
    66d2:	94 e0       	ldi	r25, 0x04	; 4
    66d4:	20 e6       	ldi	r18, 0x60	; 96
    66d6:	34 e0       	ldi	r19, 0x04	; 4
    66d8:	f9 01       	movw	r30, r18
    66da:	23 89       	ldd	r18, Z+19	; 0x13
    66dc:	28 7f       	andi	r18, 0xF8	; 248
    66de:	fc 01       	movw	r30, r24
    66e0:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN3CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    66e2:	80 e6       	ldi	r24, 0x60	; 96
    66e4:	94 e0       	ldi	r25, 0x04	; 4
    66e6:	20 e6       	ldi	r18, 0x60	; 96
    66e8:	34 e0       	ldi	r19, 0x04	; 4
    66ea:	f9 01       	movw	r30, r18
    66ec:	23 89       	ldd	r18, Z+19	; 0x13
    66ee:	24 60       	ori	r18, 0x04	; 4
    66f0:	fc 01       	movw	r30, r24
    66f2:	23 8b       	std	Z+19, r18	; 0x13
	/* Disable interrupt and digital input buffer on PD4 */
	PORTD.PIN4CTRL &= ~PORT_ISC_gm;
    66f4:	80 e6       	ldi	r24, 0x60	; 96
    66f6:	94 e0       	ldi	r25, 0x04	; 4
    66f8:	20 e6       	ldi	r18, 0x60	; 96
    66fa:	34 e0       	ldi	r19, 0x04	; 4
    66fc:	f9 01       	movw	r30, r18
    66fe:	24 89       	ldd	r18, Z+20	; 0x14
    6700:	28 7f       	andi	r18, 0xF8	; 248
    6702:	fc 01       	movw	r30, r24
    6704:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    6706:	80 e6       	ldi	r24, 0x60	; 96
    6708:	94 e0       	ldi	r25, 0x04	; 4
    670a:	20 e6       	ldi	r18, 0x60	; 96
    670c:	34 e0       	ldi	r19, 0x04	; 4
    670e:	f9 01       	movw	r30, r18
    6710:	24 89       	ldd	r18, Z+20	; 0x14
    6712:	24 60       	ori	r18, 0x04	; 4
    6714:	fc 01       	movw	r30, r24
    6716:	24 8b       	std	Z+20, r18	; 0x14
	/* Disable interrupt and digital input buffer on PD5 */
	PORTD.PIN5CTRL &= ~PORT_ISC_gm;
    6718:	80 e6       	ldi	r24, 0x60	; 96
    671a:	94 e0       	ldi	r25, 0x04	; 4
    671c:	20 e6       	ldi	r18, 0x60	; 96
    671e:	34 e0       	ldi	r19, 0x04	; 4
    6720:	f9 01       	movw	r30, r18
    6722:	25 89       	ldd	r18, Z+21	; 0x15
    6724:	28 7f       	andi	r18, 0xF8	; 248
    6726:	fc 01       	movw	r30, r24
    6728:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    672a:	80 e6       	ldi	r24, 0x60	; 96
    672c:	94 e0       	ldi	r25, 0x04	; 4
    672e:	20 e6       	ldi	r18, 0x60	; 96
    6730:	34 e0       	ldi	r19, 0x04	; 4
    6732:	f9 01       	movw	r30, r18
    6734:	25 89       	ldd	r18, Z+21	; 0x15
    6736:	24 60       	ori	r18, 0x04	; 4
    6738:	fc 01       	movw	r30, r24
    673a:	25 8b       	std	Z+21, r18	; 0x15
	
	/* Disable pull-up resistor */
	PORTD.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    673c:	80 e6       	ldi	r24, 0x60	; 96
    673e:	94 e0       	ldi	r25, 0x04	; 4
    6740:	20 e6       	ldi	r18, 0x60	; 96
    6742:	34 e0       	ldi	r19, 0x04	; 4
    6744:	f9 01       	movw	r30, r18
    6746:	22 89       	ldd	r18, Z+18	; 0x12
    6748:	27 7f       	andi	r18, 0xF7	; 247
    674a:	fc 01       	movw	r30, r24
    674c:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN3CTRL &= ~PORT_PULLUPEN_bm;
    674e:	80 e6       	ldi	r24, 0x60	; 96
    6750:	94 e0       	ldi	r25, 0x04	; 4
    6752:	20 e6       	ldi	r18, 0x60	; 96
    6754:	34 e0       	ldi	r19, 0x04	; 4
    6756:	f9 01       	movw	r30, r18
    6758:	23 89       	ldd	r18, Z+19	; 0x13
    675a:	27 7f       	andi	r18, 0xF7	; 247
    675c:	fc 01       	movw	r30, r24
    675e:	23 8b       	std	Z+19, r18	; 0x13
	PORTD.PIN4CTRL &= ~PORT_PULLUPEN_bm;
    6760:	80 e6       	ldi	r24, 0x60	; 96
    6762:	94 e0       	ldi	r25, 0x04	; 4
    6764:	20 e6       	ldi	r18, 0x60	; 96
    6766:	34 e0       	ldi	r19, 0x04	; 4
    6768:	f9 01       	movw	r30, r18
    676a:	24 89       	ldd	r18, Z+20	; 0x14
    676c:	27 7f       	andi	r18, 0xF7	; 247
    676e:	fc 01       	movw	r30, r24
    6770:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL &= ~PORT_PULLUPEN_bm;
    6772:	80 e6       	ldi	r24, 0x60	; 96
    6774:	94 e0       	ldi	r25, 0x04	; 4
    6776:	20 e6       	ldi	r18, 0x60	; 96
    6778:	34 e0       	ldi	r19, 0x04	; 4
    677a:	f9 01       	movw	r30, r18
    677c:	25 89       	ldd	r18, Z+21	; 0x15
    677e:	27 7f       	andi	r18, 0xF7	; 247
    6780:	fc 01       	movw	r30, r24
    6782:	25 8b       	std	Z+21, r18	; 0x15
}
    6784:	00 00       	nop
    6786:	df 91       	pop	r29
    6788:	cf 91       	pop	r28
    678a:	08 95       	ret

0000678c <_ZL10VREF0_initv>:

static void VREF0_init(void)
{
    678c:	cf 93       	push	r28
    678e:	df 93       	push	r29
    6790:	cd b7       	in	r28, 0x3d	; 61
    6792:	de b7       	in	r29, 0x3e	; 62
	VREF.ADC0REF = VREF_REFSEL_2V048_gc;  /* Internal 2.048V reference */
    6794:	80 ea       	ldi	r24, 0xA0	; 160
    6796:	90 e0       	ldi	r25, 0x00	; 0
    6798:	21 e0       	ldi	r18, 0x01	; 1
    679a:	fc 01       	movw	r30, r24
    679c:	20 83       	st	Z, r18
}
    679e:	00 00       	nop
    67a0:	df 91       	pop	r29
    67a2:	cf 91       	pop	r28
    67a4:	08 95       	ret

000067a6 <_ZL9ADC0_initb>:

static void ADC0_init(bool freerun)
{
    67a6:	cf 93       	push	r28
    67a8:	df 93       	push	r29
    67aa:	1f 92       	push	r1
    67ac:	cd b7       	in	r28, 0x3d	; 61
    67ae:	de b7       	in	r29, 0x3e	; 62
    67b0:	89 83       	std	Y+1, r24	; 0x01
	ADC0.CTRLC = ADC_PRESC_DIV64_gc;   /* CLK_PER divided by 4 => 24096 sps */
    67b2:	80 e0       	ldi	r24, 0x00	; 0
    67b4:	96 e0       	ldi	r25, 0x06	; 6
    67b6:	2a e0       	ldi	r18, 0x0A	; 10
    67b8:	fc 01       	movw	r30, r24
    67ba:	22 83       	std	Z+2, r18	; 0x02
	
	if(freerun)
    67bc:	89 81       	ldd	r24, Y+1	; 0x01
    67be:	88 23       	and	r24, r24
    67c0:	99 f0       	breq	.+38     	; 0x67e8 <_ZL9ADC0_initb+0x42>
	{
		ADC0.CTRLA = ADC_ENABLE_bm /* ADC Enable: enabled */
    67c2:	80 e0       	ldi	r24, 0x00	; 0
    67c4:	96 e0       	ldi	r25, 0x06	; 6
		| ADC_RESSEL_12BIT_gc      /* 12-bit mode */
		| ADC_FREERUN_bm;          /* Enable Free-Run mode */
    67c6:	23 e0       	ldi	r18, 0x03	; 3
    67c8:	fc 01       	movw	r30, r24
    67ca:	20 83       	st	Z, r18
		
		ADC0.INTCTRL = 0x01; /* Enable interrupt */
    67cc:	80 e0       	ldi	r24, 0x00	; 0
    67ce:	96 e0       	ldi	r25, 0x06	; 6
    67d0:	21 e0       	ldi	r18, 0x01	; 1
    67d2:	fc 01       	movw	r30, r24
    67d4:	24 87       	std	Z+12, r18	; 0x0c
		
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
    67d6:	80 e0       	ldi	r24, 0x00	; 0
    67d8:	96 e0       	ldi	r25, 0x06	; 6
    67da:	21 e0       	ldi	r18, 0x01	; 1
    67dc:	fc 01       	movw	r30, r24
    67de:	22 87       	std	Z+10, r18	; 0x0a
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
    67e0:	81 e0       	ldi	r24, 0x01	; 1
    67e2:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZL20g_adc_initialization>
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
	}
}
    67e6:	0c c0       	rjmp	.+24     	; 0x6800 <_ZL9ADC0_initb+0x5a>
		ADC0.COMMAND = ADC_STCONV_bm; /* Start conversion */
		g_adc_initialization = ADC_FREE_RUN_INITIALIZED;
	}
	else
	{
		ADC0.CTRLA = ADC_ENABLE_bm;  /* ADC Enable: enabled; 12-bit mode is default */
    67e8:	80 e0       	ldi	r24, 0x00	; 0
    67ea:	96 e0       	ldi	r25, 0x06	; 6
    67ec:	21 e0       	ldi	r18, 0x01	; 1
    67ee:	fc 01       	movw	r30, r24
    67f0:	20 83       	st	Z, r18
		ADC0.INTCTRL = 0x00; /* Disable interrupt */
    67f2:	80 e0       	ldi	r24, 0x00	; 0
    67f4:	96 e0       	ldi	r25, 0x06	; 6
    67f6:	fc 01       	movw	r30, r24
    67f8:	14 86       	std	Z+12, r1	; 0x0c
		g_adc_initialization = ADC_SINGLE_CONVERSION_INITIALIZED;
    67fa:	82 e0       	ldi	r24, 0x02	; 2
    67fc:	80 93 c7 47 	sts	0x47C7, r24	; 0x8047c7 <_ZL20g_adc_initialization>
	}
}
    6800:	00 00       	nop
    6802:	0f 90       	pop	r0
    6804:	df 91       	pop	r29
    6806:	cf 91       	pop	r28
    6808:	08 95       	ret

0000680a <_ZL16ADC0_SYSTEM_initb>:

static void ADC0_SYSTEM_init(bool freerun)
{
    680a:	cf 93       	push	r28
    680c:	df 93       	push	r29
    680e:	1f 92       	push	r1
    6810:	cd b7       	in	r28, 0x3d	; 61
    6812:	de b7       	in	r29, 0x3e	; 62
    6814:	89 83       	std	Y+1, r24	; 0x01
	PORT_init();
    6816:	0e 94 52 33 	call	0x66a4	; 0x66a4 <_ZL9PORT_initv>
	VREF0_init();
    681a:	0e 94 c6 33 	call	0x678c	; 0x678c <_ZL10VREF0_initv>
	ADC0_init(freerun);
    681e:	89 81       	ldd	r24, Y+1	; 0x01
    6820:	0e 94 d3 33 	call	0x67a6	; 0x67a6 <_ZL9ADC0_initb>
}
    6824:	00 00       	nop
    6826:	0f 90       	pop	r0
    6828:	df 91       	pop	r29
    682a:	cf 91       	pop	r28
    682c:	08 95       	ret

0000682e <_ZL20ADC0_SYSTEM_shutdownv>:

static void ADC0_SYSTEM_shutdown(void)
{
    682e:	cf 93       	push	r28
    6830:	df 93       	push	r29
    6832:	cd b7       	in	r28, 0x3d	; 61
    6834:	de b7       	in	r29, 0x3e	; 62
	ADC0.INTCTRL = 0x00; /* Disable interrupt */
    6836:	80 e0       	ldi	r24, 0x00	; 0
    6838:	96 e0       	ldi	r25, 0x06	; 6
    683a:	fc 01       	movw	r30, r24
    683c:	14 86       	std	Z+12, r1	; 0x0c
	ADC0.CTRLA = ADC_RESSEL_12BIT_gc; /* Turn off ADC leaving 12-bit resolution set */
    683e:	80 e0       	ldi	r24, 0x00	; 0
    6840:	96 e0       	ldi	r25, 0x06	; 6
    6842:	fc 01       	movw	r30, r24
    6844:	10 82       	st	Z, r1
	g_adc_initialization = ADC_NOT_INITIALIZED;
    6846:	10 92 c7 47 	sts	0x47C7, r1	; 0x8047c7 <_ZL20g_adc_initialization>
}
    684a:	00 00       	nop
    684c:	df 91       	pop	r29
    684e:	cf 91       	pop	r28
    6850:	08 95       	ret

00006852 <__vector_24>:

ISR(ADC0_RESRDY_vect)
{
    6852:	1f 92       	push	r1
    6854:	0f 92       	push	r0
    6856:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    685a:	0f 92       	push	r0
    685c:	11 24       	eor	r1, r1
    685e:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    6862:	0f 92       	push	r0
    6864:	2f 93       	push	r18
    6866:	3f 93       	push	r19
    6868:	4f 93       	push	r20
    686a:	5f 93       	push	r21
    686c:	6f 93       	push	r22
    686e:	7f 93       	push	r23
    6870:	8f 93       	push	r24
    6872:	9f 93       	push	r25
    6874:	af 93       	push	r26
    6876:	bf 93       	push	r27
    6878:	ef 93       	push	r30
    687a:	ff 93       	push	r31
    687c:	cf 93       	push	r28
    687e:	df 93       	push	r29
    6880:	00 d0       	rcall	.+0      	; 0x6882 <__vector_24+0x30>
    6882:	cd b7       	in	r28, 0x3d	; 61
    6884:	de b7       	in	r29, 0x3e	; 62
	/* Clear the interrupt flag by reading the result */
	int val = ADC0_read();
    6886:	0e 94 46 33 	call	0x668c	; 0x668c <_Z9ADC0_readv>
    688a:	89 83       	std	Y+1, r24	; 0x01
    688c:	9a 83       	std	Y+2, r25	; 0x02
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
    688e:	89 81       	ldd	r24, Y+1	; 0x01
    6890:	9a 81       	ldd	r25, Y+2	; 0x02
    6892:	bc 01       	movw	r22, r24
    6894:	86 ec       	ldi	r24, 0xC6	; 198
    6896:	97 e4       	ldi	r25, 0x47	; 71
    6898:	0e 94 76 49 	call	0x92ec	; 0x92ec <_ZN8Goertzel9DataPointEi>
    689c:	88 23       	and	r24, r24
    689e:	21 f0       	breq	.+8      	; 0x68a8 <__vector_24+0x56>
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
    68a0:	80 e0       	ldi	r24, 0x00	; 0
    68a2:	96 e0       	ldi	r25, 0x06	; 6
    68a4:	fc 01       	movw	r30, r24
    68a6:	14 86       	std	Z+12, r1	; 0x0c
	}
    68a8:	00 00       	nop
    68aa:	0f 90       	pop	r0
    68ac:	0f 90       	pop	r0
    68ae:	df 91       	pop	r29
    68b0:	cf 91       	pop	r28
    68b2:	ff 91       	pop	r31
    68b4:	ef 91       	pop	r30
    68b6:	bf 91       	pop	r27
    68b8:	af 91       	pop	r26
    68ba:	9f 91       	pop	r25
    68bc:	8f 91       	pop	r24
    68be:	7f 91       	pop	r23
    68c0:	6f 91       	pop	r22
    68c2:	5f 91       	pop	r21
    68c4:	4f 91       	pop	r20
    68c6:	3f 91       	pop	r19
    68c8:	2f 91       	pop	r18
    68ca:	0f 90       	pop	r0
    68cc:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    68d0:	0f 90       	pop	r0
    68d2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    68d6:	0f 90       	pop	r0
    68d8:	1f 90       	pop	r1
    68da:	18 95       	reti

000068dc <_Z41__static_initialization_and_destruction_0ii>:
    68dc:	0f 93       	push	r16
    68de:	1f 93       	push	r17
    68e0:	cf 93       	push	r28
    68e2:	df 93       	push	r29
    68e4:	00 d0       	rcall	.+0      	; 0x68e6 <_Z41__static_initialization_and_destruction_0ii+0xa>
    68e6:	00 d0       	rcall	.+0      	; 0x68e8 <_Z41__static_initialization_and_destruction_0ii+0xc>
    68e8:	cd b7       	in	r28, 0x3d	; 61
    68ea:	de b7       	in	r29, 0x3e	; 62
    68ec:	89 83       	std	Y+1, r24	; 0x01
    68ee:	9a 83       	std	Y+2, r25	; 0x02
    68f0:	6b 83       	std	Y+3, r22	; 0x03
    68f2:	7c 83       	std	Y+4, r23	; 0x04
    68f4:	89 81       	ldd	r24, Y+1	; 0x01
    68f6:	9a 81       	ldd	r25, Y+2	; 0x02
    68f8:	01 97       	sbiw	r24, 0x01	; 1
    68fa:	91 f4       	brne	.+36     	; 0x6920 <_Z41__static_initialization_and_destruction_0ii+0x44>
    68fc:	8b 81       	ldd	r24, Y+3	; 0x03
    68fe:	9c 81       	ldd	r25, Y+4	; 0x04
    6900:	01 96       	adiw	r24, 0x01	; 1
    6902:	71 f4       	brne	.+28     	; 0x6920 <_Z41__static_initialization_and_destruction_0ii+0x44>
	
#define FREE_RUNNING true
#define SINGLE_CONVERSION false
	
volatile int16_t g_adcVal;
Goertzel g_goertzel(N, sampling_freq);
    6904:	80 e0       	ldi	r24, 0x00	; 0
    6906:	90 e4       	ldi	r25, 0x40	; 64
    6908:	ac eb       	ldi	r26, 0xBC	; 188
    690a:	b6 e4       	ldi	r27, 0x46	; 70
    690c:	8c 01       	movw	r16, r24
    690e:	9d 01       	movw	r18, r26
    6910:	40 e0       	ldi	r20, 0x00	; 0
    6912:	50 e0       	ldi	r21, 0x00	; 0
    6914:	69 e4       	ldi	r22, 0x49	; 73
    6916:	73 e4       	ldi	r23, 0x43	; 67
    6918:	86 ec       	ldi	r24, 0xC6	; 198
    691a:	97 e4       	ldi	r25, 0x47	; 71
    691c:	0e 94 cb 48 	call	0x9196	; 0x9196 <_ZN8GoertzelC1Eff>
    6920:	89 81       	ldd	r24, Y+1	; 0x01
    6922:	9a 81       	ldd	r25, Y+2	; 0x02
    6924:	89 2b       	or	r24, r25
    6926:	41 f4       	brne	.+16     	; 0x6938 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6928:	8b 81       	ldd	r24, Y+3	; 0x03
    692a:	9c 81       	ldd	r25, Y+4	; 0x04
    692c:	01 96       	adiw	r24, 0x01	; 1
    692e:	21 f4       	brne	.+8      	; 0x6938 <_Z41__static_initialization_and_destruction_0ii+0x5c>
    6930:	86 ec       	ldi	r24, 0xC6	; 198
    6932:	97 e4       	ldi	r25, 0x47	; 71
    6934:	0e 94 63 49 	call	0x92c6	; 0x92c6 <_ZN8GoertzelD1Ev>
//	LED_toggle_level();
	if(g_goertzel.DataPoint(val))
	{
		ADC0.INTCTRL = 0x00; /* disable ADC interrupt */
	}
    6938:	00 00       	nop
    693a:	24 96       	adiw	r28, 0x04	; 4
    693c:	cd bf       	out	0x3d, r28	; 61
    693e:	de bf       	out	0x3e, r29	; 62
    6940:	df 91       	pop	r29
    6942:	cf 91       	pop	r28
    6944:	1f 91       	pop	r17
    6946:	0f 91       	pop	r16
    6948:	08 95       	ret

0000694a <_GLOBAL__sub_I_g_adcVal>:
    694a:	cf 93       	push	r28
    694c:	df 93       	push	r29
    694e:	cd b7       	in	r28, 0x3d	; 61
    6950:	de b7       	in	r29, 0x3e	; 62
    6952:	6f ef       	ldi	r22, 0xFF	; 255
    6954:	7f ef       	ldi	r23, 0xFF	; 255
    6956:	81 e0       	ldi	r24, 0x01	; 1
    6958:	90 e0       	ldi	r25, 0x00	; 0
    695a:	0e 94 6e 34 	call	0x68dc	; 0x68dc <_Z41__static_initialization_and_destruction_0ii>
    695e:	df 91       	pop	r29
    6960:	cf 91       	pop	r28
    6962:	08 95       	ret

00006964 <_GLOBAL__sub_D_g_adcVal>:
    6964:	cf 93       	push	r28
    6966:	df 93       	push	r29
    6968:	cd b7       	in	r28, 0x3d	; 61
    696a:	de b7       	in	r29, 0x3e	; 62
    696c:	6f ef       	ldi	r22, 0xFF	; 255
    696e:	7f ef       	ldi	r23, 0xFF	; 255
    6970:	80 e0       	ldi	r24, 0x00	; 0
    6972:	90 e0       	ldi	r25, 0x00	; 0
    6974:	0e 94 6e 34 	call	0x68dc	; 0x68dc <_Z41__static_initialization_and_destruction_0ii>
    6978:	df 91       	pop	r29
    697a:	cf 91       	pop	r28
    697c:	08 95       	ret

0000697e <PORTA_set_pin_pull_mode>:
} //binio

// default destructor
binio::~binio()
{
} //~binio
    697e:	cf 93       	push	r28
    6980:	df 93       	push	r29
    6982:	00 d0       	rcall	.+0      	; 0x6984 <PORTA_set_pin_pull_mode+0x6>
    6984:	00 d0       	rcall	.+0      	; 0x6986 <PORTA_set_pin_pull_mode+0x8>
    6986:	cd b7       	in	r28, 0x3d	; 61
    6988:	de b7       	in	r29, 0x3e	; 62
    698a:	8b 83       	std	Y+3, r24	; 0x03
    698c:	6c 83       	std	Y+4, r22	; 0x04
    698e:	8b 81       	ldd	r24, Y+3	; 0x03
    6990:	88 2f       	mov	r24, r24
    6992:	90 e0       	ldi	r25, 0x00	; 0
    6994:	80 5f       	subi	r24, 0xF0	; 240
    6996:	9b 4f       	sbci	r25, 0xFB	; 251
    6998:	89 83       	std	Y+1, r24	; 0x01
    699a:	9a 83       	std	Y+2, r25	; 0x02
    699c:	8c 81       	ldd	r24, Y+4	; 0x04
    699e:	81 30       	cpi	r24, 0x01	; 1
    69a0:	59 f4       	brne	.+22     	; 0x69b8 <PORTA_set_pin_pull_mode+0x3a>
    69a2:	89 81       	ldd	r24, Y+1	; 0x01
    69a4:	9a 81       	ldd	r25, Y+2	; 0x02
    69a6:	fc 01       	movw	r30, r24
    69a8:	80 81       	ld	r24, Z
    69aa:	28 2f       	mov	r18, r24
    69ac:	28 60       	ori	r18, 0x08	; 8
    69ae:	89 81       	ldd	r24, Y+1	; 0x01
    69b0:	9a 81       	ldd	r25, Y+2	; 0x02
    69b2:	fc 01       	movw	r30, r24
    69b4:	20 83       	st	Z, r18
    69b6:	0d c0       	rjmp	.+26     	; 0x69d2 <PORTA_set_pin_pull_mode+0x54>
    69b8:	8c 81       	ldd	r24, Y+4	; 0x04
    69ba:	88 23       	and	r24, r24
    69bc:	51 f4       	brne	.+20     	; 0x69d2 <PORTA_set_pin_pull_mode+0x54>
    69be:	89 81       	ldd	r24, Y+1	; 0x01
    69c0:	9a 81       	ldd	r25, Y+2	; 0x02
    69c2:	fc 01       	movw	r30, r24
    69c4:	80 81       	ld	r24, Z
    69c6:	28 2f       	mov	r18, r24
    69c8:	27 7f       	andi	r18, 0xF7	; 247
    69ca:	89 81       	ldd	r24, Y+1	; 0x01
    69cc:	9a 81       	ldd	r25, Y+2	; 0x02
    69ce:	fc 01       	movw	r30, r24
    69d0:	20 83       	st	Z, r18
    69d2:	00 00       	nop
    69d4:	24 96       	adiw	r28, 0x04	; 4
    69d6:	cd bf       	out	0x3d, r28	; 61
    69d8:	de bf       	out	0x3e, r29	; 62
    69da:	df 91       	pop	r29
    69dc:	cf 91       	pop	r28
    69de:	08 95       	ret

000069e0 <PORTA_pin_set_isc>:
    69e0:	cf 93       	push	r28
    69e2:	df 93       	push	r29
    69e4:	00 d0       	rcall	.+0      	; 0x69e6 <PORTA_pin_set_isc+0x6>
    69e6:	00 d0       	rcall	.+0      	; 0x69e8 <PORTA_pin_set_isc+0x8>
    69e8:	cd b7       	in	r28, 0x3d	; 61
    69ea:	de b7       	in	r29, 0x3e	; 62
    69ec:	8b 83       	std	Y+3, r24	; 0x03
    69ee:	6c 83       	std	Y+4, r22	; 0x04
    69f0:	8b 81       	ldd	r24, Y+3	; 0x03
    69f2:	88 2f       	mov	r24, r24
    69f4:	90 e0       	ldi	r25, 0x00	; 0
    69f6:	80 5f       	subi	r24, 0xF0	; 240
    69f8:	9b 4f       	sbci	r25, 0xFB	; 251
    69fa:	89 83       	std	Y+1, r24	; 0x01
    69fc:	9a 83       	std	Y+2, r25	; 0x02
    69fe:	89 81       	ldd	r24, Y+1	; 0x01
    6a00:	9a 81       	ldd	r25, Y+2	; 0x02
    6a02:	fc 01       	movw	r30, r24
    6a04:	80 81       	ld	r24, Z
    6a06:	98 2f       	mov	r25, r24
    6a08:	98 7f       	andi	r25, 0xF8	; 248
    6a0a:	8c 81       	ldd	r24, Y+4	; 0x04
    6a0c:	89 2b       	or	r24, r25
    6a0e:	28 2f       	mov	r18, r24
    6a10:	89 81       	ldd	r24, Y+1	; 0x01
    6a12:	9a 81       	ldd	r25, Y+2	; 0x02
    6a14:	fc 01       	movw	r30, r24
    6a16:	20 83       	st	Z, r18
    6a18:	00 00       	nop
    6a1a:	24 96       	adiw	r28, 0x04	; 4
    6a1c:	cd bf       	out	0x3d, r28	; 61
    6a1e:	de bf       	out	0x3e, r29	; 62
    6a20:	df 91       	pop	r29
    6a22:	cf 91       	pop	r28
    6a24:	08 95       	ret

00006a26 <PORTA_set_pin_dir>:
    6a26:	cf 93       	push	r28
    6a28:	df 93       	push	r29
    6a2a:	00 d0       	rcall	.+0      	; 0x6a2c <PORTA_set_pin_dir+0x6>
    6a2c:	cd b7       	in	r28, 0x3d	; 61
    6a2e:	de b7       	in	r29, 0x3e	; 62
    6a30:	89 83       	std	Y+1, r24	; 0x01
    6a32:	6a 83       	std	Y+2, r22	; 0x02
    6a34:	8a 81       	ldd	r24, Y+2	; 0x02
    6a36:	88 2f       	mov	r24, r24
    6a38:	90 e0       	ldi	r25, 0x00	; 0
    6a3a:	81 30       	cpi	r24, 0x01	; 1
    6a3c:	91 05       	cpc	r25, r1
    6a3e:	e1 f0       	breq	.+56     	; 0x6a78 <PORTA_set_pin_dir+0x52>
    6a40:	82 30       	cpi	r24, 0x02	; 2
    6a42:	91 05       	cpc	r25, r1
    6a44:	71 f1       	breq	.+92     	; 0x6aa2 <PORTA_set_pin_dir+0x7c>
    6a46:	89 2b       	or	r24, r25
    6a48:	09 f0       	breq	.+2      	; 0x6a4c <PORTA_set_pin_dir+0x26>
    6a4a:	3b c0       	rjmp	.+118    	; 0x6ac2 <PORTA_set_pin_dir+0x9c>
    6a4c:	20 e0       	ldi	r18, 0x00	; 0
    6a4e:	30 e0       	ldi	r19, 0x00	; 0
    6a50:	80 e0       	ldi	r24, 0x00	; 0
    6a52:	90 e0       	ldi	r25, 0x00	; 0
    6a54:	fc 01       	movw	r30, r24
    6a56:	80 81       	ld	r24, Z
    6a58:	68 2f       	mov	r22, r24
    6a5a:	89 81       	ldd	r24, Y+1	; 0x01
    6a5c:	48 2f       	mov	r20, r24
    6a5e:	50 e0       	ldi	r21, 0x00	; 0
    6a60:	81 e0       	ldi	r24, 0x01	; 1
    6a62:	90 e0       	ldi	r25, 0x00	; 0
    6a64:	02 c0       	rjmp	.+4      	; 0x6a6a <PORTA_set_pin_dir+0x44>
    6a66:	88 0f       	add	r24, r24
    6a68:	99 1f       	adc	r25, r25
    6a6a:	4a 95       	dec	r20
    6a6c:	e2 f7       	brpl	.-8      	; 0x6a66 <PORTA_set_pin_dir+0x40>
    6a6e:	80 95       	com	r24
    6a70:	86 23       	and	r24, r22
    6a72:	f9 01       	movw	r30, r18
    6a74:	80 83       	st	Z, r24
    6a76:	25 c0       	rjmp	.+74     	; 0x6ac2 <PORTA_set_pin_dir+0x9c>
    6a78:	20 e0       	ldi	r18, 0x00	; 0
    6a7a:	30 e0       	ldi	r19, 0x00	; 0
    6a7c:	80 e0       	ldi	r24, 0x00	; 0
    6a7e:	90 e0       	ldi	r25, 0x00	; 0
    6a80:	fc 01       	movw	r30, r24
    6a82:	80 81       	ld	r24, Z
    6a84:	68 2f       	mov	r22, r24
    6a86:	89 81       	ldd	r24, Y+1	; 0x01
    6a88:	48 2f       	mov	r20, r24
    6a8a:	50 e0       	ldi	r21, 0x00	; 0
    6a8c:	81 e0       	ldi	r24, 0x01	; 1
    6a8e:	90 e0       	ldi	r25, 0x00	; 0
    6a90:	02 c0       	rjmp	.+4      	; 0x6a96 <PORTA_set_pin_dir+0x70>
    6a92:	88 0f       	add	r24, r24
    6a94:	99 1f       	adc	r25, r25
    6a96:	4a 95       	dec	r20
    6a98:	e2 f7       	brpl	.-8      	; 0x6a92 <PORTA_set_pin_dir+0x6c>
    6a9a:	86 2b       	or	r24, r22
    6a9c:	f9 01       	movw	r30, r18
    6a9e:	80 83       	st	Z, r24
    6aa0:	10 c0       	rjmp	.+32     	; 0x6ac2 <PORTA_set_pin_dir+0x9c>
    6aa2:	89 81       	ldd	r24, Y+1	; 0x01
    6aa4:	88 2f       	mov	r24, r24
    6aa6:	90 e0       	ldi	r25, 0x00	; 0
    6aa8:	80 5f       	subi	r24, 0xF0	; 240
    6aaa:	9b 4f       	sbci	r25, 0xFB	; 251
    6aac:	29 81       	ldd	r18, Y+1	; 0x01
    6aae:	22 2f       	mov	r18, r18
    6ab0:	30 e0       	ldi	r19, 0x00	; 0
    6ab2:	20 5f       	subi	r18, 0xF0	; 240
    6ab4:	3b 4f       	sbci	r19, 0xFB	; 251
    6ab6:	f9 01       	movw	r30, r18
    6ab8:	20 81       	ld	r18, Z
    6aba:	28 60       	ori	r18, 0x08	; 8
    6abc:	fc 01       	movw	r30, r24
    6abe:	20 83       	st	Z, r18
    6ac0:	00 00       	nop
    6ac2:	00 00       	nop
    6ac4:	0f 90       	pop	r0
    6ac6:	0f 90       	pop	r0
    6ac8:	df 91       	pop	r29
    6aca:	cf 91       	pop	r28
    6acc:	08 95       	ret

00006ace <PORTA_set_pin_level>:
    6ace:	cf 93       	push	r28
    6ad0:	df 93       	push	r29
    6ad2:	00 d0       	rcall	.+0      	; 0x6ad4 <PORTA_set_pin_level+0x6>
    6ad4:	cd b7       	in	r28, 0x3d	; 61
    6ad6:	de b7       	in	r29, 0x3e	; 62
    6ad8:	89 83       	std	Y+1, r24	; 0x01
    6ada:	6a 83       	std	Y+2, r22	; 0x02
    6adc:	8a 81       	ldd	r24, Y+2	; 0x02
    6ade:	88 23       	and	r24, r24
    6ae0:	a9 f0       	breq	.+42     	; 0x6b0c <PORTA_set_pin_level+0x3e>
    6ae2:	20 e0       	ldi	r18, 0x00	; 0
    6ae4:	30 e0       	ldi	r19, 0x00	; 0
    6ae6:	80 e0       	ldi	r24, 0x00	; 0
    6ae8:	90 e0       	ldi	r25, 0x00	; 0
    6aea:	fc 01       	movw	r30, r24
    6aec:	81 81       	ldd	r24, Z+1	; 0x01
    6aee:	68 2f       	mov	r22, r24
    6af0:	89 81       	ldd	r24, Y+1	; 0x01
    6af2:	48 2f       	mov	r20, r24
    6af4:	50 e0       	ldi	r21, 0x00	; 0
    6af6:	81 e0       	ldi	r24, 0x01	; 1
    6af8:	90 e0       	ldi	r25, 0x00	; 0
    6afa:	02 c0       	rjmp	.+4      	; 0x6b00 <PORTA_set_pin_level+0x32>
    6afc:	88 0f       	add	r24, r24
    6afe:	99 1f       	adc	r25, r25
    6b00:	4a 95       	dec	r20
    6b02:	e2 f7       	brpl	.-8      	; 0x6afc <PORTA_set_pin_level+0x2e>
    6b04:	86 2b       	or	r24, r22
    6b06:	f9 01       	movw	r30, r18
    6b08:	81 83       	std	Z+1, r24	; 0x01
    6b0a:	15 c0       	rjmp	.+42     	; 0x6b36 <PORTA_set_pin_level+0x68>
    6b0c:	20 e0       	ldi	r18, 0x00	; 0
    6b0e:	30 e0       	ldi	r19, 0x00	; 0
    6b10:	80 e0       	ldi	r24, 0x00	; 0
    6b12:	90 e0       	ldi	r25, 0x00	; 0
    6b14:	fc 01       	movw	r30, r24
    6b16:	81 81       	ldd	r24, Z+1	; 0x01
    6b18:	68 2f       	mov	r22, r24
    6b1a:	89 81       	ldd	r24, Y+1	; 0x01
    6b1c:	48 2f       	mov	r20, r24
    6b1e:	50 e0       	ldi	r21, 0x00	; 0
    6b20:	81 e0       	ldi	r24, 0x01	; 1
    6b22:	90 e0       	ldi	r25, 0x00	; 0
    6b24:	02 c0       	rjmp	.+4      	; 0x6b2a <PORTA_set_pin_level+0x5c>
    6b26:	88 0f       	add	r24, r24
    6b28:	99 1f       	adc	r25, r25
    6b2a:	4a 95       	dec	r20
    6b2c:	e2 f7       	brpl	.-8      	; 0x6b26 <PORTA_set_pin_level+0x58>
    6b2e:	80 95       	com	r24
    6b30:	86 23       	and	r24, r22
    6b32:	f9 01       	movw	r30, r18
    6b34:	81 83       	std	Z+1, r24	; 0x01
    6b36:	00 00       	nop
    6b38:	0f 90       	pop	r0
    6b3a:	0f 90       	pop	r0
    6b3c:	df 91       	pop	r29
    6b3e:	cf 91       	pop	r28
    6b40:	08 95       	ret

00006b42 <PORTB_set_pin_dir>:
    6b42:	cf 93       	push	r28
    6b44:	df 93       	push	r29
    6b46:	00 d0       	rcall	.+0      	; 0x6b48 <PORTB_set_pin_dir+0x6>
    6b48:	cd b7       	in	r28, 0x3d	; 61
    6b4a:	de b7       	in	r29, 0x3e	; 62
    6b4c:	89 83       	std	Y+1, r24	; 0x01
    6b4e:	6a 83       	std	Y+2, r22	; 0x02
    6b50:	8a 81       	ldd	r24, Y+2	; 0x02
    6b52:	88 2f       	mov	r24, r24
    6b54:	90 e0       	ldi	r25, 0x00	; 0
    6b56:	81 30       	cpi	r24, 0x01	; 1
    6b58:	91 05       	cpc	r25, r1
    6b5a:	e1 f0       	breq	.+56     	; 0x6b94 <PORTB_set_pin_dir+0x52>
    6b5c:	82 30       	cpi	r24, 0x02	; 2
    6b5e:	91 05       	cpc	r25, r1
    6b60:	71 f1       	breq	.+92     	; 0x6bbe <PORTB_set_pin_dir+0x7c>
    6b62:	89 2b       	or	r24, r25
    6b64:	09 f0       	breq	.+2      	; 0x6b68 <PORTB_set_pin_dir+0x26>
    6b66:	3b c0       	rjmp	.+118    	; 0x6bde <PORTB_set_pin_dir+0x9c>
    6b68:	84 e0       	ldi	r24, 0x04	; 4
    6b6a:	90 e0       	ldi	r25, 0x00	; 0
    6b6c:	24 e0       	ldi	r18, 0x04	; 4
    6b6e:	30 e0       	ldi	r19, 0x00	; 0
    6b70:	f9 01       	movw	r30, r18
    6b72:	20 81       	ld	r18, Z
    6b74:	62 2f       	mov	r22, r18
    6b76:	29 81       	ldd	r18, Y+1	; 0x01
    6b78:	42 2f       	mov	r20, r18
    6b7a:	50 e0       	ldi	r21, 0x00	; 0
    6b7c:	21 e0       	ldi	r18, 0x01	; 1
    6b7e:	30 e0       	ldi	r19, 0x00	; 0
    6b80:	02 c0       	rjmp	.+4      	; 0x6b86 <PORTB_set_pin_dir+0x44>
    6b82:	22 0f       	add	r18, r18
    6b84:	33 1f       	adc	r19, r19
    6b86:	4a 95       	dec	r20
    6b88:	e2 f7       	brpl	.-8      	; 0x6b82 <PORTB_set_pin_dir+0x40>
    6b8a:	20 95       	com	r18
    6b8c:	26 23       	and	r18, r22
    6b8e:	fc 01       	movw	r30, r24
    6b90:	20 83       	st	Z, r18
    6b92:	25 c0       	rjmp	.+74     	; 0x6bde <PORTB_set_pin_dir+0x9c>
    6b94:	84 e0       	ldi	r24, 0x04	; 4
    6b96:	90 e0       	ldi	r25, 0x00	; 0
    6b98:	24 e0       	ldi	r18, 0x04	; 4
    6b9a:	30 e0       	ldi	r19, 0x00	; 0
    6b9c:	f9 01       	movw	r30, r18
    6b9e:	20 81       	ld	r18, Z
    6ba0:	62 2f       	mov	r22, r18
    6ba2:	29 81       	ldd	r18, Y+1	; 0x01
    6ba4:	42 2f       	mov	r20, r18
    6ba6:	50 e0       	ldi	r21, 0x00	; 0
    6ba8:	21 e0       	ldi	r18, 0x01	; 1
    6baa:	30 e0       	ldi	r19, 0x00	; 0
    6bac:	02 c0       	rjmp	.+4      	; 0x6bb2 <PORTB_set_pin_dir+0x70>
    6bae:	22 0f       	add	r18, r18
    6bb0:	33 1f       	adc	r19, r19
    6bb2:	4a 95       	dec	r20
    6bb4:	e2 f7       	brpl	.-8      	; 0x6bae <PORTB_set_pin_dir+0x6c>
    6bb6:	26 2b       	or	r18, r22
    6bb8:	fc 01       	movw	r30, r24
    6bba:	20 83       	st	Z, r18
    6bbc:	10 c0       	rjmp	.+32     	; 0x6bde <PORTB_set_pin_dir+0x9c>
    6bbe:	89 81       	ldd	r24, Y+1	; 0x01
    6bc0:	88 2f       	mov	r24, r24
    6bc2:	90 e0       	ldi	r25, 0x00	; 0
    6bc4:	80 5d       	subi	r24, 0xD0	; 208
    6bc6:	9b 4f       	sbci	r25, 0xFB	; 251
    6bc8:	29 81       	ldd	r18, Y+1	; 0x01
    6bca:	22 2f       	mov	r18, r18
    6bcc:	30 e0       	ldi	r19, 0x00	; 0
    6bce:	20 5d       	subi	r18, 0xD0	; 208
    6bd0:	3b 4f       	sbci	r19, 0xFB	; 251
    6bd2:	f9 01       	movw	r30, r18
    6bd4:	20 81       	ld	r18, Z
    6bd6:	28 60       	ori	r18, 0x08	; 8
    6bd8:	fc 01       	movw	r30, r24
    6bda:	20 83       	st	Z, r18
    6bdc:	00 00       	nop
    6bde:	00 00       	nop
    6be0:	0f 90       	pop	r0
    6be2:	0f 90       	pop	r0
    6be4:	df 91       	pop	r29
    6be6:	cf 91       	pop	r28
    6be8:	08 95       	ret

00006bea <PORTB_set_pin_level>:
    6bea:	cf 93       	push	r28
    6bec:	df 93       	push	r29
    6bee:	00 d0       	rcall	.+0      	; 0x6bf0 <PORTB_set_pin_level+0x6>
    6bf0:	cd b7       	in	r28, 0x3d	; 61
    6bf2:	de b7       	in	r29, 0x3e	; 62
    6bf4:	89 83       	std	Y+1, r24	; 0x01
    6bf6:	6a 83       	std	Y+2, r22	; 0x02
    6bf8:	8a 81       	ldd	r24, Y+2	; 0x02
    6bfa:	88 23       	and	r24, r24
    6bfc:	a9 f0       	breq	.+42     	; 0x6c28 <PORTB_set_pin_level+0x3e>
    6bfe:	84 e0       	ldi	r24, 0x04	; 4
    6c00:	90 e0       	ldi	r25, 0x00	; 0
    6c02:	24 e0       	ldi	r18, 0x04	; 4
    6c04:	30 e0       	ldi	r19, 0x00	; 0
    6c06:	f9 01       	movw	r30, r18
    6c08:	21 81       	ldd	r18, Z+1	; 0x01
    6c0a:	62 2f       	mov	r22, r18
    6c0c:	29 81       	ldd	r18, Y+1	; 0x01
    6c0e:	42 2f       	mov	r20, r18
    6c10:	50 e0       	ldi	r21, 0x00	; 0
    6c12:	21 e0       	ldi	r18, 0x01	; 1
    6c14:	30 e0       	ldi	r19, 0x00	; 0
    6c16:	02 c0       	rjmp	.+4      	; 0x6c1c <PORTB_set_pin_level+0x32>
    6c18:	22 0f       	add	r18, r18
    6c1a:	33 1f       	adc	r19, r19
    6c1c:	4a 95       	dec	r20
    6c1e:	e2 f7       	brpl	.-8      	; 0x6c18 <PORTB_set_pin_level+0x2e>
    6c20:	26 2b       	or	r18, r22
    6c22:	fc 01       	movw	r30, r24
    6c24:	21 83       	std	Z+1, r18	; 0x01
    6c26:	15 c0       	rjmp	.+42     	; 0x6c52 <PORTB_set_pin_level+0x68>
    6c28:	84 e0       	ldi	r24, 0x04	; 4
    6c2a:	90 e0       	ldi	r25, 0x00	; 0
    6c2c:	24 e0       	ldi	r18, 0x04	; 4
    6c2e:	30 e0       	ldi	r19, 0x00	; 0
    6c30:	f9 01       	movw	r30, r18
    6c32:	21 81       	ldd	r18, Z+1	; 0x01
    6c34:	62 2f       	mov	r22, r18
    6c36:	29 81       	ldd	r18, Y+1	; 0x01
    6c38:	42 2f       	mov	r20, r18
    6c3a:	50 e0       	ldi	r21, 0x00	; 0
    6c3c:	21 e0       	ldi	r18, 0x01	; 1
    6c3e:	30 e0       	ldi	r19, 0x00	; 0
    6c40:	02 c0       	rjmp	.+4      	; 0x6c46 <PORTB_set_pin_level+0x5c>
    6c42:	22 0f       	add	r18, r18
    6c44:	33 1f       	adc	r19, r19
    6c46:	4a 95       	dec	r20
    6c48:	e2 f7       	brpl	.-8      	; 0x6c42 <PORTB_set_pin_level+0x58>
    6c4a:	20 95       	com	r18
    6c4c:	26 23       	and	r18, r22
    6c4e:	fc 01       	movw	r30, r24
    6c50:	21 83       	std	Z+1, r18	; 0x01
    6c52:	00 00       	nop
    6c54:	0f 90       	pop	r0
    6c56:	0f 90       	pop	r0
    6c58:	df 91       	pop	r29
    6c5a:	cf 91       	pop	r28
    6c5c:	08 95       	ret

00006c5e <PORTC_set_pin_pull_mode>:
    6c5e:	cf 93       	push	r28
    6c60:	df 93       	push	r29
    6c62:	00 d0       	rcall	.+0      	; 0x6c64 <PORTC_set_pin_pull_mode+0x6>
    6c64:	00 d0       	rcall	.+0      	; 0x6c66 <PORTC_set_pin_pull_mode+0x8>
    6c66:	cd b7       	in	r28, 0x3d	; 61
    6c68:	de b7       	in	r29, 0x3e	; 62
    6c6a:	8b 83       	std	Y+3, r24	; 0x03
    6c6c:	6c 83       	std	Y+4, r22	; 0x04
    6c6e:	8b 81       	ldd	r24, Y+3	; 0x03
    6c70:	88 2f       	mov	r24, r24
    6c72:	90 e0       	ldi	r25, 0x00	; 0
    6c74:	80 5b       	subi	r24, 0xB0	; 176
    6c76:	9b 4f       	sbci	r25, 0xFB	; 251
    6c78:	89 83       	std	Y+1, r24	; 0x01
    6c7a:	9a 83       	std	Y+2, r25	; 0x02
    6c7c:	8c 81       	ldd	r24, Y+4	; 0x04
    6c7e:	81 30       	cpi	r24, 0x01	; 1
    6c80:	59 f4       	brne	.+22     	; 0x6c98 <PORTC_set_pin_pull_mode+0x3a>
    6c82:	89 81       	ldd	r24, Y+1	; 0x01
    6c84:	9a 81       	ldd	r25, Y+2	; 0x02
    6c86:	fc 01       	movw	r30, r24
    6c88:	80 81       	ld	r24, Z
    6c8a:	28 2f       	mov	r18, r24
    6c8c:	28 60       	ori	r18, 0x08	; 8
    6c8e:	89 81       	ldd	r24, Y+1	; 0x01
    6c90:	9a 81       	ldd	r25, Y+2	; 0x02
    6c92:	fc 01       	movw	r30, r24
    6c94:	20 83       	st	Z, r18
    6c96:	0d c0       	rjmp	.+26     	; 0x6cb2 <PORTC_set_pin_pull_mode+0x54>
    6c98:	8c 81       	ldd	r24, Y+4	; 0x04
    6c9a:	88 23       	and	r24, r24
    6c9c:	51 f4       	brne	.+20     	; 0x6cb2 <PORTC_set_pin_pull_mode+0x54>
    6c9e:	89 81       	ldd	r24, Y+1	; 0x01
    6ca0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ca2:	fc 01       	movw	r30, r24
    6ca4:	80 81       	ld	r24, Z
    6ca6:	28 2f       	mov	r18, r24
    6ca8:	27 7f       	andi	r18, 0xF7	; 247
    6caa:	89 81       	ldd	r24, Y+1	; 0x01
    6cac:	9a 81       	ldd	r25, Y+2	; 0x02
    6cae:	fc 01       	movw	r30, r24
    6cb0:	20 83       	st	Z, r18
    6cb2:	00 00       	nop
    6cb4:	24 96       	adiw	r28, 0x04	; 4
    6cb6:	cd bf       	out	0x3d, r28	; 61
    6cb8:	de bf       	out	0x3e, r29	; 62
    6cba:	df 91       	pop	r29
    6cbc:	cf 91       	pop	r28
    6cbe:	08 95       	ret

00006cc0 <PORTC_pin_set_isc>:
    6cc0:	cf 93       	push	r28
    6cc2:	df 93       	push	r29
    6cc4:	00 d0       	rcall	.+0      	; 0x6cc6 <PORTC_pin_set_isc+0x6>
    6cc6:	00 d0       	rcall	.+0      	; 0x6cc8 <PORTC_pin_set_isc+0x8>
    6cc8:	cd b7       	in	r28, 0x3d	; 61
    6cca:	de b7       	in	r29, 0x3e	; 62
    6ccc:	8b 83       	std	Y+3, r24	; 0x03
    6cce:	6c 83       	std	Y+4, r22	; 0x04
    6cd0:	8b 81       	ldd	r24, Y+3	; 0x03
    6cd2:	88 2f       	mov	r24, r24
    6cd4:	90 e0       	ldi	r25, 0x00	; 0
    6cd6:	80 5b       	subi	r24, 0xB0	; 176
    6cd8:	9b 4f       	sbci	r25, 0xFB	; 251
    6cda:	89 83       	std	Y+1, r24	; 0x01
    6cdc:	9a 83       	std	Y+2, r25	; 0x02
    6cde:	89 81       	ldd	r24, Y+1	; 0x01
    6ce0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce2:	fc 01       	movw	r30, r24
    6ce4:	80 81       	ld	r24, Z
    6ce6:	98 2f       	mov	r25, r24
    6ce8:	98 7f       	andi	r25, 0xF8	; 248
    6cea:	8c 81       	ldd	r24, Y+4	; 0x04
    6cec:	89 2b       	or	r24, r25
    6cee:	28 2f       	mov	r18, r24
    6cf0:	89 81       	ldd	r24, Y+1	; 0x01
    6cf2:	9a 81       	ldd	r25, Y+2	; 0x02
    6cf4:	fc 01       	movw	r30, r24
    6cf6:	20 83       	st	Z, r18
    6cf8:	00 00       	nop
    6cfa:	24 96       	adiw	r28, 0x04	; 4
    6cfc:	cd bf       	out	0x3d, r28	; 61
    6cfe:	de bf       	out	0x3e, r29	; 62
    6d00:	df 91       	pop	r29
    6d02:	cf 91       	pop	r28
    6d04:	08 95       	ret

00006d06 <PORTC_set_pin_dir>:
    6d06:	cf 93       	push	r28
    6d08:	df 93       	push	r29
    6d0a:	00 d0       	rcall	.+0      	; 0x6d0c <PORTC_set_pin_dir+0x6>
    6d0c:	cd b7       	in	r28, 0x3d	; 61
    6d0e:	de b7       	in	r29, 0x3e	; 62
    6d10:	89 83       	std	Y+1, r24	; 0x01
    6d12:	6a 83       	std	Y+2, r22	; 0x02
    6d14:	8a 81       	ldd	r24, Y+2	; 0x02
    6d16:	88 2f       	mov	r24, r24
    6d18:	90 e0       	ldi	r25, 0x00	; 0
    6d1a:	81 30       	cpi	r24, 0x01	; 1
    6d1c:	91 05       	cpc	r25, r1
    6d1e:	e1 f0       	breq	.+56     	; 0x6d58 <PORTC_set_pin_dir+0x52>
    6d20:	82 30       	cpi	r24, 0x02	; 2
    6d22:	91 05       	cpc	r25, r1
    6d24:	71 f1       	breq	.+92     	; 0x6d82 <PORTC_set_pin_dir+0x7c>
    6d26:	89 2b       	or	r24, r25
    6d28:	09 f0       	breq	.+2      	; 0x6d2c <PORTC_set_pin_dir+0x26>
    6d2a:	3b c0       	rjmp	.+118    	; 0x6da2 <PORTC_set_pin_dir+0x9c>
    6d2c:	88 e0       	ldi	r24, 0x08	; 8
    6d2e:	90 e0       	ldi	r25, 0x00	; 0
    6d30:	28 e0       	ldi	r18, 0x08	; 8
    6d32:	30 e0       	ldi	r19, 0x00	; 0
    6d34:	f9 01       	movw	r30, r18
    6d36:	20 81       	ld	r18, Z
    6d38:	62 2f       	mov	r22, r18
    6d3a:	29 81       	ldd	r18, Y+1	; 0x01
    6d3c:	42 2f       	mov	r20, r18
    6d3e:	50 e0       	ldi	r21, 0x00	; 0
    6d40:	21 e0       	ldi	r18, 0x01	; 1
    6d42:	30 e0       	ldi	r19, 0x00	; 0
    6d44:	02 c0       	rjmp	.+4      	; 0x6d4a <PORTC_set_pin_dir+0x44>
    6d46:	22 0f       	add	r18, r18
    6d48:	33 1f       	adc	r19, r19
    6d4a:	4a 95       	dec	r20
    6d4c:	e2 f7       	brpl	.-8      	; 0x6d46 <PORTC_set_pin_dir+0x40>
    6d4e:	20 95       	com	r18
    6d50:	26 23       	and	r18, r22
    6d52:	fc 01       	movw	r30, r24
    6d54:	20 83       	st	Z, r18
    6d56:	25 c0       	rjmp	.+74     	; 0x6da2 <PORTC_set_pin_dir+0x9c>
    6d58:	88 e0       	ldi	r24, 0x08	; 8
    6d5a:	90 e0       	ldi	r25, 0x00	; 0
    6d5c:	28 e0       	ldi	r18, 0x08	; 8
    6d5e:	30 e0       	ldi	r19, 0x00	; 0
    6d60:	f9 01       	movw	r30, r18
    6d62:	20 81       	ld	r18, Z
    6d64:	62 2f       	mov	r22, r18
    6d66:	29 81       	ldd	r18, Y+1	; 0x01
    6d68:	42 2f       	mov	r20, r18
    6d6a:	50 e0       	ldi	r21, 0x00	; 0
    6d6c:	21 e0       	ldi	r18, 0x01	; 1
    6d6e:	30 e0       	ldi	r19, 0x00	; 0
    6d70:	02 c0       	rjmp	.+4      	; 0x6d76 <PORTC_set_pin_dir+0x70>
    6d72:	22 0f       	add	r18, r18
    6d74:	33 1f       	adc	r19, r19
    6d76:	4a 95       	dec	r20
    6d78:	e2 f7       	brpl	.-8      	; 0x6d72 <PORTC_set_pin_dir+0x6c>
    6d7a:	26 2b       	or	r18, r22
    6d7c:	fc 01       	movw	r30, r24
    6d7e:	20 83       	st	Z, r18
    6d80:	10 c0       	rjmp	.+32     	; 0x6da2 <PORTC_set_pin_dir+0x9c>
    6d82:	89 81       	ldd	r24, Y+1	; 0x01
    6d84:	88 2f       	mov	r24, r24
    6d86:	90 e0       	ldi	r25, 0x00	; 0
    6d88:	80 5b       	subi	r24, 0xB0	; 176
    6d8a:	9b 4f       	sbci	r25, 0xFB	; 251
    6d8c:	29 81       	ldd	r18, Y+1	; 0x01
    6d8e:	22 2f       	mov	r18, r18
    6d90:	30 e0       	ldi	r19, 0x00	; 0
    6d92:	20 5b       	subi	r18, 0xB0	; 176
    6d94:	3b 4f       	sbci	r19, 0xFB	; 251
    6d96:	f9 01       	movw	r30, r18
    6d98:	20 81       	ld	r18, Z
    6d9a:	28 60       	ori	r18, 0x08	; 8
    6d9c:	fc 01       	movw	r30, r24
    6d9e:	20 83       	st	Z, r18
    6da0:	00 00       	nop
    6da2:	00 00       	nop
    6da4:	0f 90       	pop	r0
    6da6:	0f 90       	pop	r0
    6da8:	df 91       	pop	r29
    6daa:	cf 91       	pop	r28
    6dac:	08 95       	ret

00006dae <PORTC_set_pin_level>:
    6dae:	cf 93       	push	r28
    6db0:	df 93       	push	r29
    6db2:	00 d0       	rcall	.+0      	; 0x6db4 <PORTC_set_pin_level+0x6>
    6db4:	cd b7       	in	r28, 0x3d	; 61
    6db6:	de b7       	in	r29, 0x3e	; 62
    6db8:	89 83       	std	Y+1, r24	; 0x01
    6dba:	6a 83       	std	Y+2, r22	; 0x02
    6dbc:	8a 81       	ldd	r24, Y+2	; 0x02
    6dbe:	88 23       	and	r24, r24
    6dc0:	a9 f0       	breq	.+42     	; 0x6dec <PORTC_set_pin_level+0x3e>
    6dc2:	88 e0       	ldi	r24, 0x08	; 8
    6dc4:	90 e0       	ldi	r25, 0x00	; 0
    6dc6:	28 e0       	ldi	r18, 0x08	; 8
    6dc8:	30 e0       	ldi	r19, 0x00	; 0
    6dca:	f9 01       	movw	r30, r18
    6dcc:	21 81       	ldd	r18, Z+1	; 0x01
    6dce:	62 2f       	mov	r22, r18
    6dd0:	29 81       	ldd	r18, Y+1	; 0x01
    6dd2:	42 2f       	mov	r20, r18
    6dd4:	50 e0       	ldi	r21, 0x00	; 0
    6dd6:	21 e0       	ldi	r18, 0x01	; 1
    6dd8:	30 e0       	ldi	r19, 0x00	; 0
    6dda:	02 c0       	rjmp	.+4      	; 0x6de0 <PORTC_set_pin_level+0x32>
    6ddc:	22 0f       	add	r18, r18
    6dde:	33 1f       	adc	r19, r19
    6de0:	4a 95       	dec	r20
    6de2:	e2 f7       	brpl	.-8      	; 0x6ddc <PORTC_set_pin_level+0x2e>
    6de4:	26 2b       	or	r18, r22
    6de6:	fc 01       	movw	r30, r24
    6de8:	21 83       	std	Z+1, r18	; 0x01
    6dea:	15 c0       	rjmp	.+42     	; 0x6e16 <PORTC_set_pin_level+0x68>
    6dec:	88 e0       	ldi	r24, 0x08	; 8
    6dee:	90 e0       	ldi	r25, 0x00	; 0
    6df0:	28 e0       	ldi	r18, 0x08	; 8
    6df2:	30 e0       	ldi	r19, 0x00	; 0
    6df4:	f9 01       	movw	r30, r18
    6df6:	21 81       	ldd	r18, Z+1	; 0x01
    6df8:	62 2f       	mov	r22, r18
    6dfa:	29 81       	ldd	r18, Y+1	; 0x01
    6dfc:	42 2f       	mov	r20, r18
    6dfe:	50 e0       	ldi	r21, 0x00	; 0
    6e00:	21 e0       	ldi	r18, 0x01	; 1
    6e02:	30 e0       	ldi	r19, 0x00	; 0
    6e04:	02 c0       	rjmp	.+4      	; 0x6e0a <PORTC_set_pin_level+0x5c>
    6e06:	22 0f       	add	r18, r18
    6e08:	33 1f       	adc	r19, r19
    6e0a:	4a 95       	dec	r20
    6e0c:	e2 f7       	brpl	.-8      	; 0x6e06 <PORTC_set_pin_level+0x58>
    6e0e:	20 95       	com	r18
    6e10:	26 23       	and	r18, r22
    6e12:	fc 01       	movw	r30, r24
    6e14:	21 83       	std	Z+1, r18	; 0x01
    6e16:	00 00       	nop
    6e18:	0f 90       	pop	r0
    6e1a:	0f 90       	pop	r0
    6e1c:	df 91       	pop	r29
    6e1e:	cf 91       	pop	r28
    6e20:	08 95       	ret

00006e22 <PORTD_set_pin_pull_mode>:
    6e22:	cf 93       	push	r28
    6e24:	df 93       	push	r29
    6e26:	00 d0       	rcall	.+0      	; 0x6e28 <PORTD_set_pin_pull_mode+0x6>
    6e28:	00 d0       	rcall	.+0      	; 0x6e2a <PORTD_set_pin_pull_mode+0x8>
    6e2a:	cd b7       	in	r28, 0x3d	; 61
    6e2c:	de b7       	in	r29, 0x3e	; 62
    6e2e:	8b 83       	std	Y+3, r24	; 0x03
    6e30:	6c 83       	std	Y+4, r22	; 0x04
    6e32:	8b 81       	ldd	r24, Y+3	; 0x03
    6e34:	88 2f       	mov	r24, r24
    6e36:	90 e0       	ldi	r25, 0x00	; 0
    6e38:	80 59       	subi	r24, 0x90	; 144
    6e3a:	9b 4f       	sbci	r25, 0xFB	; 251
    6e3c:	89 83       	std	Y+1, r24	; 0x01
    6e3e:	9a 83       	std	Y+2, r25	; 0x02
    6e40:	8c 81       	ldd	r24, Y+4	; 0x04
    6e42:	81 30       	cpi	r24, 0x01	; 1
    6e44:	59 f4       	brne	.+22     	; 0x6e5c <PORTD_set_pin_pull_mode+0x3a>
    6e46:	89 81       	ldd	r24, Y+1	; 0x01
    6e48:	9a 81       	ldd	r25, Y+2	; 0x02
    6e4a:	fc 01       	movw	r30, r24
    6e4c:	80 81       	ld	r24, Z
    6e4e:	28 2f       	mov	r18, r24
    6e50:	28 60       	ori	r18, 0x08	; 8
    6e52:	89 81       	ldd	r24, Y+1	; 0x01
    6e54:	9a 81       	ldd	r25, Y+2	; 0x02
    6e56:	fc 01       	movw	r30, r24
    6e58:	20 83       	st	Z, r18
    6e5a:	0d c0       	rjmp	.+26     	; 0x6e76 <PORTD_set_pin_pull_mode+0x54>
    6e5c:	8c 81       	ldd	r24, Y+4	; 0x04
    6e5e:	88 23       	and	r24, r24
    6e60:	51 f4       	brne	.+20     	; 0x6e76 <PORTD_set_pin_pull_mode+0x54>
    6e62:	89 81       	ldd	r24, Y+1	; 0x01
    6e64:	9a 81       	ldd	r25, Y+2	; 0x02
    6e66:	fc 01       	movw	r30, r24
    6e68:	80 81       	ld	r24, Z
    6e6a:	28 2f       	mov	r18, r24
    6e6c:	27 7f       	andi	r18, 0xF7	; 247
    6e6e:	89 81       	ldd	r24, Y+1	; 0x01
    6e70:	9a 81       	ldd	r25, Y+2	; 0x02
    6e72:	fc 01       	movw	r30, r24
    6e74:	20 83       	st	Z, r18
    6e76:	00 00       	nop
    6e78:	24 96       	adiw	r28, 0x04	; 4
    6e7a:	cd bf       	out	0x3d, r28	; 61
    6e7c:	de bf       	out	0x3e, r29	; 62
    6e7e:	df 91       	pop	r29
    6e80:	cf 91       	pop	r28
    6e82:	08 95       	ret

00006e84 <PORTD_pin_set_isc>:
    6e84:	cf 93       	push	r28
    6e86:	df 93       	push	r29
    6e88:	00 d0       	rcall	.+0      	; 0x6e8a <PORTD_pin_set_isc+0x6>
    6e8a:	00 d0       	rcall	.+0      	; 0x6e8c <PORTD_pin_set_isc+0x8>
    6e8c:	cd b7       	in	r28, 0x3d	; 61
    6e8e:	de b7       	in	r29, 0x3e	; 62
    6e90:	8b 83       	std	Y+3, r24	; 0x03
    6e92:	6c 83       	std	Y+4, r22	; 0x04
    6e94:	8b 81       	ldd	r24, Y+3	; 0x03
    6e96:	88 2f       	mov	r24, r24
    6e98:	90 e0       	ldi	r25, 0x00	; 0
    6e9a:	80 59       	subi	r24, 0x90	; 144
    6e9c:	9b 4f       	sbci	r25, 0xFB	; 251
    6e9e:	89 83       	std	Y+1, r24	; 0x01
    6ea0:	9a 83       	std	Y+2, r25	; 0x02
    6ea2:	89 81       	ldd	r24, Y+1	; 0x01
    6ea4:	9a 81       	ldd	r25, Y+2	; 0x02
    6ea6:	fc 01       	movw	r30, r24
    6ea8:	80 81       	ld	r24, Z
    6eaa:	98 2f       	mov	r25, r24
    6eac:	98 7f       	andi	r25, 0xF8	; 248
    6eae:	8c 81       	ldd	r24, Y+4	; 0x04
    6eb0:	89 2b       	or	r24, r25
    6eb2:	28 2f       	mov	r18, r24
    6eb4:	89 81       	ldd	r24, Y+1	; 0x01
    6eb6:	9a 81       	ldd	r25, Y+2	; 0x02
    6eb8:	fc 01       	movw	r30, r24
    6eba:	20 83       	st	Z, r18
    6ebc:	00 00       	nop
    6ebe:	24 96       	adiw	r28, 0x04	; 4
    6ec0:	cd bf       	out	0x3d, r28	; 61
    6ec2:	de bf       	out	0x3e, r29	; 62
    6ec4:	df 91       	pop	r29
    6ec6:	cf 91       	pop	r28
    6ec8:	08 95       	ret

00006eca <PORTD_set_pin_dir>:
    6eca:	cf 93       	push	r28
    6ecc:	df 93       	push	r29
    6ece:	00 d0       	rcall	.+0      	; 0x6ed0 <PORTD_set_pin_dir+0x6>
    6ed0:	cd b7       	in	r28, 0x3d	; 61
    6ed2:	de b7       	in	r29, 0x3e	; 62
    6ed4:	89 83       	std	Y+1, r24	; 0x01
    6ed6:	6a 83       	std	Y+2, r22	; 0x02
    6ed8:	8a 81       	ldd	r24, Y+2	; 0x02
    6eda:	88 2f       	mov	r24, r24
    6edc:	90 e0       	ldi	r25, 0x00	; 0
    6ede:	81 30       	cpi	r24, 0x01	; 1
    6ee0:	91 05       	cpc	r25, r1
    6ee2:	e1 f0       	breq	.+56     	; 0x6f1c <PORTD_set_pin_dir+0x52>
    6ee4:	82 30       	cpi	r24, 0x02	; 2
    6ee6:	91 05       	cpc	r25, r1
    6ee8:	71 f1       	breq	.+92     	; 0x6f46 <PORTD_set_pin_dir+0x7c>
    6eea:	89 2b       	or	r24, r25
    6eec:	09 f0       	breq	.+2      	; 0x6ef0 <PORTD_set_pin_dir+0x26>
    6eee:	3b c0       	rjmp	.+118    	; 0x6f66 <PORTD_set_pin_dir+0x9c>
    6ef0:	8c e0       	ldi	r24, 0x0C	; 12
    6ef2:	90 e0       	ldi	r25, 0x00	; 0
    6ef4:	2c e0       	ldi	r18, 0x0C	; 12
    6ef6:	30 e0       	ldi	r19, 0x00	; 0
    6ef8:	f9 01       	movw	r30, r18
    6efa:	20 81       	ld	r18, Z
    6efc:	62 2f       	mov	r22, r18
    6efe:	29 81       	ldd	r18, Y+1	; 0x01
    6f00:	42 2f       	mov	r20, r18
    6f02:	50 e0       	ldi	r21, 0x00	; 0
    6f04:	21 e0       	ldi	r18, 0x01	; 1
    6f06:	30 e0       	ldi	r19, 0x00	; 0
    6f08:	02 c0       	rjmp	.+4      	; 0x6f0e <PORTD_set_pin_dir+0x44>
    6f0a:	22 0f       	add	r18, r18
    6f0c:	33 1f       	adc	r19, r19
    6f0e:	4a 95       	dec	r20
    6f10:	e2 f7       	brpl	.-8      	; 0x6f0a <PORTD_set_pin_dir+0x40>
    6f12:	20 95       	com	r18
    6f14:	26 23       	and	r18, r22
    6f16:	fc 01       	movw	r30, r24
    6f18:	20 83       	st	Z, r18
    6f1a:	25 c0       	rjmp	.+74     	; 0x6f66 <PORTD_set_pin_dir+0x9c>
    6f1c:	8c e0       	ldi	r24, 0x0C	; 12
    6f1e:	90 e0       	ldi	r25, 0x00	; 0
    6f20:	2c e0       	ldi	r18, 0x0C	; 12
    6f22:	30 e0       	ldi	r19, 0x00	; 0
    6f24:	f9 01       	movw	r30, r18
    6f26:	20 81       	ld	r18, Z
    6f28:	62 2f       	mov	r22, r18
    6f2a:	29 81       	ldd	r18, Y+1	; 0x01
    6f2c:	42 2f       	mov	r20, r18
    6f2e:	50 e0       	ldi	r21, 0x00	; 0
    6f30:	21 e0       	ldi	r18, 0x01	; 1
    6f32:	30 e0       	ldi	r19, 0x00	; 0
    6f34:	02 c0       	rjmp	.+4      	; 0x6f3a <PORTD_set_pin_dir+0x70>
    6f36:	22 0f       	add	r18, r18
    6f38:	33 1f       	adc	r19, r19
    6f3a:	4a 95       	dec	r20
    6f3c:	e2 f7       	brpl	.-8      	; 0x6f36 <PORTD_set_pin_dir+0x6c>
    6f3e:	26 2b       	or	r18, r22
    6f40:	fc 01       	movw	r30, r24
    6f42:	20 83       	st	Z, r18
    6f44:	10 c0       	rjmp	.+32     	; 0x6f66 <PORTD_set_pin_dir+0x9c>
    6f46:	89 81       	ldd	r24, Y+1	; 0x01
    6f48:	88 2f       	mov	r24, r24
    6f4a:	90 e0       	ldi	r25, 0x00	; 0
    6f4c:	80 59       	subi	r24, 0x90	; 144
    6f4e:	9b 4f       	sbci	r25, 0xFB	; 251
    6f50:	29 81       	ldd	r18, Y+1	; 0x01
    6f52:	22 2f       	mov	r18, r18
    6f54:	30 e0       	ldi	r19, 0x00	; 0
    6f56:	20 59       	subi	r18, 0x90	; 144
    6f58:	3b 4f       	sbci	r19, 0xFB	; 251
    6f5a:	f9 01       	movw	r30, r18
    6f5c:	20 81       	ld	r18, Z
    6f5e:	28 60       	ori	r18, 0x08	; 8
    6f60:	fc 01       	movw	r30, r24
    6f62:	20 83       	st	Z, r18
    6f64:	00 00       	nop
    6f66:	00 00       	nop
    6f68:	0f 90       	pop	r0
    6f6a:	0f 90       	pop	r0
    6f6c:	df 91       	pop	r29
    6f6e:	cf 91       	pop	r28
    6f70:	08 95       	ret

00006f72 <PORTD_get_pin_level>:
    6f72:	cf 93       	push	r28
    6f74:	df 93       	push	r29
    6f76:	1f 92       	push	r1
    6f78:	cd b7       	in	r28, 0x3d	; 61
    6f7a:	de b7       	in	r29, 0x3e	; 62
    6f7c:	89 83       	std	Y+1, r24	; 0x01
    6f7e:	8c e0       	ldi	r24, 0x0C	; 12
    6f80:	90 e0       	ldi	r25, 0x00	; 0
    6f82:	fc 01       	movw	r30, r24
    6f84:	82 81       	ldd	r24, Z+2	; 0x02
    6f86:	88 2f       	mov	r24, r24
    6f88:	90 e0       	ldi	r25, 0x00	; 0
    6f8a:	29 81       	ldd	r18, Y+1	; 0x01
    6f8c:	22 2f       	mov	r18, r18
    6f8e:	30 e0       	ldi	r19, 0x00	; 0
    6f90:	02 c0       	rjmp	.+4      	; 0x6f96 <PORTD_get_pin_level+0x24>
    6f92:	95 95       	asr	r25
    6f94:	87 95       	ror	r24
    6f96:	2a 95       	dec	r18
    6f98:	e2 f7       	brpl	.-8      	; 0x6f92 <PORTD_get_pin_level+0x20>
    6f9a:	81 70       	andi	r24, 0x01	; 1
    6f9c:	99 27       	eor	r25, r25
    6f9e:	21 e0       	ldi	r18, 0x01	; 1
    6fa0:	89 2b       	or	r24, r25
    6fa2:	09 f4       	brne	.+2      	; 0x6fa6 <PORTD_get_pin_level+0x34>
    6fa4:	20 e0       	ldi	r18, 0x00	; 0
    6fa6:	82 2f       	mov	r24, r18
    6fa8:	0f 90       	pop	r0
    6faa:	df 91       	pop	r29
    6fac:	cf 91       	pop	r28
    6fae:	08 95       	ret

00006fb0 <PORTE_set_pin_dir>:
    6fb0:	cf 93       	push	r28
    6fb2:	df 93       	push	r29
    6fb4:	00 d0       	rcall	.+0      	; 0x6fb6 <PORTE_set_pin_dir+0x6>
    6fb6:	cd b7       	in	r28, 0x3d	; 61
    6fb8:	de b7       	in	r29, 0x3e	; 62
    6fba:	89 83       	std	Y+1, r24	; 0x01
    6fbc:	6a 83       	std	Y+2, r22	; 0x02
    6fbe:	8a 81       	ldd	r24, Y+2	; 0x02
    6fc0:	88 2f       	mov	r24, r24
    6fc2:	90 e0       	ldi	r25, 0x00	; 0
    6fc4:	81 30       	cpi	r24, 0x01	; 1
    6fc6:	91 05       	cpc	r25, r1
    6fc8:	e1 f0       	breq	.+56     	; 0x7002 <PORTE_set_pin_dir+0x52>
    6fca:	82 30       	cpi	r24, 0x02	; 2
    6fcc:	91 05       	cpc	r25, r1
    6fce:	71 f1       	breq	.+92     	; 0x702c <PORTE_set_pin_dir+0x7c>
    6fd0:	89 2b       	or	r24, r25
    6fd2:	09 f0       	breq	.+2      	; 0x6fd6 <PORTE_set_pin_dir+0x26>
    6fd4:	3b c0       	rjmp	.+118    	; 0x704c <PORTE_set_pin_dir+0x9c>
    6fd6:	80 e1       	ldi	r24, 0x10	; 16
    6fd8:	90 e0       	ldi	r25, 0x00	; 0
    6fda:	20 e1       	ldi	r18, 0x10	; 16
    6fdc:	30 e0       	ldi	r19, 0x00	; 0
    6fde:	f9 01       	movw	r30, r18
    6fe0:	20 81       	ld	r18, Z
    6fe2:	62 2f       	mov	r22, r18
    6fe4:	29 81       	ldd	r18, Y+1	; 0x01
    6fe6:	42 2f       	mov	r20, r18
    6fe8:	50 e0       	ldi	r21, 0x00	; 0
    6fea:	21 e0       	ldi	r18, 0x01	; 1
    6fec:	30 e0       	ldi	r19, 0x00	; 0
    6fee:	02 c0       	rjmp	.+4      	; 0x6ff4 <PORTE_set_pin_dir+0x44>
    6ff0:	22 0f       	add	r18, r18
    6ff2:	33 1f       	adc	r19, r19
    6ff4:	4a 95       	dec	r20
    6ff6:	e2 f7       	brpl	.-8      	; 0x6ff0 <PORTE_set_pin_dir+0x40>
    6ff8:	20 95       	com	r18
    6ffa:	26 23       	and	r18, r22
    6ffc:	fc 01       	movw	r30, r24
    6ffe:	20 83       	st	Z, r18
    7000:	25 c0       	rjmp	.+74     	; 0x704c <PORTE_set_pin_dir+0x9c>
    7002:	80 e1       	ldi	r24, 0x10	; 16
    7004:	90 e0       	ldi	r25, 0x00	; 0
    7006:	20 e1       	ldi	r18, 0x10	; 16
    7008:	30 e0       	ldi	r19, 0x00	; 0
    700a:	f9 01       	movw	r30, r18
    700c:	20 81       	ld	r18, Z
    700e:	62 2f       	mov	r22, r18
    7010:	29 81       	ldd	r18, Y+1	; 0x01
    7012:	42 2f       	mov	r20, r18
    7014:	50 e0       	ldi	r21, 0x00	; 0
    7016:	21 e0       	ldi	r18, 0x01	; 1
    7018:	30 e0       	ldi	r19, 0x00	; 0
    701a:	02 c0       	rjmp	.+4      	; 0x7020 <PORTE_set_pin_dir+0x70>
    701c:	22 0f       	add	r18, r18
    701e:	33 1f       	adc	r19, r19
    7020:	4a 95       	dec	r20
    7022:	e2 f7       	brpl	.-8      	; 0x701c <PORTE_set_pin_dir+0x6c>
    7024:	26 2b       	or	r18, r22
    7026:	fc 01       	movw	r30, r24
    7028:	20 83       	st	Z, r18
    702a:	10 c0       	rjmp	.+32     	; 0x704c <PORTE_set_pin_dir+0x9c>
    702c:	89 81       	ldd	r24, Y+1	; 0x01
    702e:	88 2f       	mov	r24, r24
    7030:	90 e0       	ldi	r25, 0x00	; 0
    7032:	80 57       	subi	r24, 0x70	; 112
    7034:	9b 4f       	sbci	r25, 0xFB	; 251
    7036:	29 81       	ldd	r18, Y+1	; 0x01
    7038:	22 2f       	mov	r18, r18
    703a:	30 e0       	ldi	r19, 0x00	; 0
    703c:	20 57       	subi	r18, 0x70	; 112
    703e:	3b 4f       	sbci	r19, 0xFB	; 251
    7040:	f9 01       	movw	r30, r18
    7042:	20 81       	ld	r18, Z
    7044:	28 60       	ori	r18, 0x08	; 8
    7046:	fc 01       	movw	r30, r24
    7048:	20 83       	st	Z, r18
    704a:	00 00       	nop
    704c:	00 00       	nop
    704e:	0f 90       	pop	r0
    7050:	0f 90       	pop	r0
    7052:	df 91       	pop	r29
    7054:	cf 91       	pop	r28
    7056:	08 95       	ret

00007058 <PORTF_set_pin_dir>:
    7058:	cf 93       	push	r28
    705a:	df 93       	push	r29
    705c:	00 d0       	rcall	.+0      	; 0x705e <PORTF_set_pin_dir+0x6>
    705e:	cd b7       	in	r28, 0x3d	; 61
    7060:	de b7       	in	r29, 0x3e	; 62
    7062:	89 83       	std	Y+1, r24	; 0x01
    7064:	6a 83       	std	Y+2, r22	; 0x02
    7066:	8a 81       	ldd	r24, Y+2	; 0x02
    7068:	88 2f       	mov	r24, r24
    706a:	90 e0       	ldi	r25, 0x00	; 0
    706c:	81 30       	cpi	r24, 0x01	; 1
    706e:	91 05       	cpc	r25, r1
    7070:	e1 f0       	breq	.+56     	; 0x70aa <PORTF_set_pin_dir+0x52>
    7072:	82 30       	cpi	r24, 0x02	; 2
    7074:	91 05       	cpc	r25, r1
    7076:	71 f1       	breq	.+92     	; 0x70d4 <PORTF_set_pin_dir+0x7c>
    7078:	89 2b       	or	r24, r25
    707a:	09 f0       	breq	.+2      	; 0x707e <PORTF_set_pin_dir+0x26>
    707c:	3b c0       	rjmp	.+118    	; 0x70f4 <PORTF_set_pin_dir+0x9c>
    707e:	84 e1       	ldi	r24, 0x14	; 20
    7080:	90 e0       	ldi	r25, 0x00	; 0
    7082:	24 e1       	ldi	r18, 0x14	; 20
    7084:	30 e0       	ldi	r19, 0x00	; 0
    7086:	f9 01       	movw	r30, r18
    7088:	20 81       	ld	r18, Z
    708a:	62 2f       	mov	r22, r18
    708c:	29 81       	ldd	r18, Y+1	; 0x01
    708e:	42 2f       	mov	r20, r18
    7090:	50 e0       	ldi	r21, 0x00	; 0
    7092:	21 e0       	ldi	r18, 0x01	; 1
    7094:	30 e0       	ldi	r19, 0x00	; 0
    7096:	02 c0       	rjmp	.+4      	; 0x709c <PORTF_set_pin_dir+0x44>
    7098:	22 0f       	add	r18, r18
    709a:	33 1f       	adc	r19, r19
    709c:	4a 95       	dec	r20
    709e:	e2 f7       	brpl	.-8      	; 0x7098 <PORTF_set_pin_dir+0x40>
    70a0:	20 95       	com	r18
    70a2:	26 23       	and	r18, r22
    70a4:	fc 01       	movw	r30, r24
    70a6:	20 83       	st	Z, r18
    70a8:	25 c0       	rjmp	.+74     	; 0x70f4 <PORTF_set_pin_dir+0x9c>
    70aa:	84 e1       	ldi	r24, 0x14	; 20
    70ac:	90 e0       	ldi	r25, 0x00	; 0
    70ae:	24 e1       	ldi	r18, 0x14	; 20
    70b0:	30 e0       	ldi	r19, 0x00	; 0
    70b2:	f9 01       	movw	r30, r18
    70b4:	20 81       	ld	r18, Z
    70b6:	62 2f       	mov	r22, r18
    70b8:	29 81       	ldd	r18, Y+1	; 0x01
    70ba:	42 2f       	mov	r20, r18
    70bc:	50 e0       	ldi	r21, 0x00	; 0
    70be:	21 e0       	ldi	r18, 0x01	; 1
    70c0:	30 e0       	ldi	r19, 0x00	; 0
    70c2:	02 c0       	rjmp	.+4      	; 0x70c8 <PORTF_set_pin_dir+0x70>
    70c4:	22 0f       	add	r18, r18
    70c6:	33 1f       	adc	r19, r19
    70c8:	4a 95       	dec	r20
    70ca:	e2 f7       	brpl	.-8      	; 0x70c4 <PORTF_set_pin_dir+0x6c>
    70cc:	26 2b       	or	r18, r22
    70ce:	fc 01       	movw	r30, r24
    70d0:	20 83       	st	Z, r18
    70d2:	10 c0       	rjmp	.+32     	; 0x70f4 <PORTF_set_pin_dir+0x9c>
    70d4:	89 81       	ldd	r24, Y+1	; 0x01
    70d6:	88 2f       	mov	r24, r24
    70d8:	90 e0       	ldi	r25, 0x00	; 0
    70da:	80 55       	subi	r24, 0x50	; 80
    70dc:	9b 4f       	sbci	r25, 0xFB	; 251
    70de:	29 81       	ldd	r18, Y+1	; 0x01
    70e0:	22 2f       	mov	r18, r18
    70e2:	30 e0       	ldi	r19, 0x00	; 0
    70e4:	20 55       	subi	r18, 0x50	; 80
    70e6:	3b 4f       	sbci	r19, 0xFB	; 251
    70e8:	f9 01       	movw	r30, r18
    70ea:	20 81       	ld	r18, Z
    70ec:	28 60       	ori	r18, 0x08	; 8
    70ee:	fc 01       	movw	r30, r24
    70f0:	20 83       	st	Z, r18
    70f2:	00 00       	nop
    70f4:	00 00       	nop
    70f6:	0f 90       	pop	r0
    70f8:	0f 90       	pop	r0
    70fa:	df 91       	pop	r29
    70fc:	cf 91       	pop	r28
    70fe:	08 95       	ret

00007100 <_Z10fet_driverb>:

void fet_driver(bool state)
{
    7100:	cf 93       	push	r28
    7102:	df 93       	push	r29
    7104:	1f 92       	push	r1
    7106:	cd b7       	in	r28, 0x3d	; 61
    7108:	de b7       	in	r29, 0x3e	; 62
    710a:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    710c:	89 81       	ldd	r24, Y+1	; 0x01
    710e:	88 23       	and	r24, r24
    7110:	29 f0       	breq	.+10     	; 0x711c <_Z10fet_driverb+0x1c>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
    7112:	61 e0       	ldi	r22, 0x01	; 1
    7114:	83 e0       	ldi	r24, 0x03	; 3
    7116:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
	}
}
    711a:	04 c0       	rjmp	.+8      	; 0x7124 <_Z10fet_driverb+0x24>
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    711c:	60 e0       	ldi	r22, 0x00	; 0
    711e:	83 e0       	ldi	r24, 0x03	; 3
    7120:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	}
}
    7124:	00 00       	nop
    7126:	0f 90       	pop	r0
    7128:	df 91       	pop	r29
    712a:	cf 91       	pop	r28
    712c:	08 95       	ret

0000712e <_Z10wifi_powerb>:


void wifi_power(bool state)
{
    712e:	cf 93       	push	r28
    7130:	df 93       	push	r29
    7132:	1f 92       	push	r1
    7134:	cd b7       	in	r28, 0x3d	; 61
    7136:	de b7       	in	r29, 0x3e	; 62
    7138:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    713a:	89 81       	ldd	r24, Y+1	; 0x01
    713c:	88 23       	and	r24, r24
    713e:	29 f0       	breq	.+10     	; 0x714a <_Z10wifi_powerb+0x1c>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    7140:	61 e0       	ldi	r22, 0x01	; 1
    7142:	85 e0       	ldi	r24, 0x05	; 5
    7144:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
	}
}
    7148:	04 c0       	rjmp	.+8      	; 0x7152 <_Z10wifi_powerb+0x24>
	{
		PORTA_set_pin_level(WIFI_ENABLE, HIGH);
	}
	else
	{
		PORTA_set_pin_level(WIFI_ENABLE, LOW);
    714a:	60 e0       	ldi	r22, 0x00	; 0
    714c:	85 e0       	ldi	r24, 0x05	; 5
    714e:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	}
}
    7152:	00 00       	nop
    7154:	0f 90       	pop	r0
    7156:	df 91       	pop	r29
    7158:	cf 91       	pop	r28
    715a:	08 95       	ret

0000715c <_Z10wifi_resetb>:

void wifi_reset(bool state)
{
    715c:	cf 93       	push	r28
    715e:	df 93       	push	r29
    7160:	1f 92       	push	r1
    7162:	cd b7       	in	r28, 0x3d	; 61
    7164:	de b7       	in	r29, 0x3e	; 62
    7166:	89 83       	std	Y+1, r24	; 0x01
	if(state == ON)
    7168:	89 81       	ldd	r24, Y+1	; 0x01
    716a:	88 23       	and	r24, r24
    716c:	29 f0       	breq	.+10     	; 0x7178 <_Z10wifi_resetb+0x1c>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
    716e:	60 e0       	ldi	r22, 0x00	; 0
    7170:	86 e0       	ldi	r24, 0x06	; 6
    7172:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
	}
}
    7176:	04 c0       	rjmp	.+8      	; 0x7180 <_Z10wifi_resetb+0x24>
	{
		PORTA_set_pin_level(WIFI_RESET, LOW);
	}
	else
	{
		PORTA_set_pin_level(WIFI_RESET, HIGH);
    7178:	61 e0       	ldi	r22, 0x01	; 1
    717a:	86 e0       	ldi	r24, 0x06	; 6
    717c:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	}
}
    7180:	00 00       	nop
    7182:	0f 90       	pop	r0
    7184:	df 91       	pop	r29
    7186:	cf 91       	pop	r28
    7188:	08 95       	ret

0000718a <_Z11wifiPresentv>:

bool wifiPresent(void)
{
    718a:	cf 93       	push	r28
    718c:	df 93       	push	r29
    718e:	cd b7       	in	r28, 0x3d	; 61
    7190:	de b7       	in	r29, 0x3e	; 62
	return(PORTD_get_pin_level(WIFI_MODULE_DETECT));
    7192:	87 e0       	ldi	r24, 0x07	; 7
    7194:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <PORTD_get_pin_level>
}
    7198:	df 91       	pop	r29
    719a:	cf 91       	pop	r28
    719c:	08 95       	ret

0000719e <_Z10BINIO_initv>:
// 	
// 	PORTA.INTFLAGS = 0xFF; /* Clear all flags */
// }

void BINIO_init(void)
{
    719e:	cf 93       	push	r28
    71a0:	df 93       	push	r29
    71a2:	cd b7       	in	r28, 0x3d	; 61
    71a4:	de b7       	in	r29, 0x3e	; 62
	/* PORTA *************************************************************************************/
	
	/* PORTA.PIN0 = TXDO USART */
	/* PORTA.PIN1 = RXD0 USART */
	
	PORTA_set_pin_dir(FAN_ENABLE, PORT_DIR_OUT);
    71a6:	61 e0       	ldi	r22, 0x01	; 1
    71a8:	81 e0       	ldi	r24, 0x01	; 1
    71aa:	0e 94 13 35 	call	0x6a26	; 0x6a26 <PORTA_set_pin_dir>
	PORTA_set_pin_level(FAN_ENABLE, LOW);
    71ae:	60 e0       	ldi	r22, 0x00	; 0
    71b0:	81 e0       	ldi	r24, 0x01	; 1
    71b2:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(RTC_SQW, PORT_DIR_IN);
    71b6:	60 e0       	ldi	r22, 0x00	; 0
    71b8:	82 e0       	ldi	r24, 0x02	; 2
    71ba:	0e 94 13 35 	call	0x6a26	; 0x6a26 <PORTA_set_pin_dir>
	PORTA_set_pin_pull_mode(RTC_SQW, PORT_PULL_UP);
    71be:	61 e0       	ldi	r22, 0x01	; 1
    71c0:	82 e0       	ldi	r24, 0x02	; 2
    71c2:	0e 94 bf 34 	call	0x697e	; 0x697e <PORTA_set_pin_pull_mode>
	PORTA_pin_set_isc(RTC_SQW, PORT_ISC_RISING_gc);
    71c6:	62 e0       	ldi	r22, 0x02	; 2
    71c8:	82 e0       	ldi	r24, 0x02	; 2
    71ca:	0e 94 f0 34 	call	0x69e0	; 0x69e0 <PORTA_pin_set_isc>
	
	PORTA_set_pin_dir(FET_DRIVER_ENABLE, PORT_DIR_OUT);
    71ce:	61 e0       	ldi	r22, 0x01	; 1
    71d0:	83 e0       	ldi	r24, 0x03	; 3
    71d2:	0e 94 13 35 	call	0x6a26	; 0x6a26 <PORTA_set_pin_dir>
	PORTA_set_pin_level(FET_DRIVER_ENABLE, LOW);
    71d6:	60 e0       	ldi	r22, 0x00	; 0
    71d8:	83 e0       	ldi	r24, 0x03	; 3
    71da:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	
// 	PORTA_set_pin_dir(ANT_CONNECT_INT, PORT_DIR_IN);
// 	PORTA_set_pin_pull_mode(ANT_CONNECT_INT, PORT_PULL_UP);
// 	PORTA_pin_set_isc(ANT_CONNECT_INT, PORT_ISC_FALLING_gc);

	PORTA_set_pin_dir(WIFI_ENABLE, PORT_DIR_OUT);
    71de:	61 e0       	ldi	r22, 0x01	; 1
    71e0:	85 e0       	ldi	r24, 0x05	; 5
    71e2:	0e 94 13 35 	call	0x6a26	; 0x6a26 <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_ENABLE, HIGH);
    71e6:	61 e0       	ldi	r22, 0x01	; 1
    71e8:	85 e0       	ldi	r24, 0x05	; 5
    71ea:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(WIFI_RESET, PORT_DIR_OUT);
    71ee:	61 e0       	ldi	r22, 0x01	; 1
    71f0:	86 e0       	ldi	r24, 0x06	; 6
    71f2:	0e 94 13 35 	call	0x6a26	; 0x6a26 <PORTA_set_pin_dir>
	PORTA_set_pin_level(WIFI_RESET, LOW);
    71f6:	60 e0       	ldi	r22, 0x00	; 0
    71f8:	86 e0       	ldi	r24, 0x06	; 6
    71fa:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	
	PORTA_set_pin_dir(V3V3_PWR_ENABLE, PORT_DIR_OUT);
    71fe:	61 e0       	ldi	r22, 0x01	; 1
    7200:	87 e0       	ldi	r24, 0x07	; 7
    7202:	0e 94 13 35 	call	0x6a26	; 0x6a26 <PORTA_set_pin_dir>
	PORTA_set_pin_level(V3V3_PWR_ENABLE, LOW);
    7206:	60 e0       	ldi	r22, 0x00	; 0
    7208:	87 e0       	ldi	r24, 0x07	; 7
    720a:	0e 94 67 35 	call	0x6ace	; 0x6ace <PORTA_set_pin_level>
	
	/* PORTB *************************************************************************************/

	PORTB_set_pin_dir(PROC_PTT_OUT, PORT_DIR_OUT);
    720e:	61 e0       	ldi	r22, 0x01	; 1
    7210:	80 e0       	ldi	r24, 0x00	; 0
    7212:	0e 94 a1 35 	call	0x6b42	; 0x6b42 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_PTT_OUT, LOW);
    7216:	60 e0       	ldi	r22, 0x00	; 0
    7218:	80 e0       	ldi	r24, 0x00	; 0
    721a:	0e 94 f5 35 	call	0x6bea	; 0x6bea <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(PROC_TONE_OUT, PORT_DIR_OUT);
    721e:	61 e0       	ldi	r22, 0x01	; 1
    7220:	81 e0       	ldi	r24, 0x01	; 1
    7222:	0e 94 a1 35 	call	0x6b42	; 0x6b42 <PORTB_set_pin_dir>
	PORTB_set_pin_level(PROC_TONE_OUT, LOW);
    7226:	60 e0       	ldi	r22, 0x00	; 0
    7228:	81 e0       	ldi	r24, 0x01	; 1
    722a:	0e 94 f5 35 	call	0x6bea	; 0x6bea <PORTB_set_pin_level>
	
	/* PORTB.PIN2 = SDA1 I2C */
	/* PORTB.PIN3 = SCL1 I2C */
	PORTB_set_pin_dir(MAIN_PWR_ENABLE, PORT_DIR_OUT);
    722e:	61 e0       	ldi	r22, 0x01	; 1
    7230:	84 e0       	ldi	r24, 0x04	; 4
    7232:	0e 94 a1 35 	call	0x6b42	; 0x6b42 <PORTB_set_pin_dir>
	PORTB_set_pin_level(MAIN_PWR_ENABLE, LOW);
    7236:	60 e0       	ldi	r22, 0x00	; 0
    7238:	84 e0       	ldi	r24, 0x04	; 4
    723a:	0e 94 f5 35 	call	0x6bea	; 0x6bea <PORTB_set_pin_level>
	
	PORTB_set_pin_dir(TX_FINAL_VOLTAGE_ENABLE, PORT_DIR_OUT);
    723e:	61 e0       	ldi	r22, 0x01	; 1
    7240:	85 e0       	ldi	r24, 0x05	; 5
    7242:	0e 94 a1 35 	call	0x6b42	; 0x6b42 <PORTB_set_pin_dir>
	PORTB_set_pin_level(TX_FINAL_VOLTAGE_ENABLE, LOW);
    7246:	60 e0       	ldi	r22, 0x00	; 0
    7248:	85 e0       	ldi	r24, 0x05	; 5
    724a:	0e 94 f5 35 	call	0x6bea	; 0x6bea <PORTB_set_pin_level>
	/* PORTC.PIN0 = TXD1 USART TO_WIFI_RX */
	/* PORTC.PIN1 = RXD1 USART FROM_WIFI_TX */
	/* PORTC.PIN2 = SDA0 I2C */
	/* PORTC.PIN3 = SCL0 I2C */

	PORTC_set_pin_dir(LED_GREEN, PORT_DIR_OUT);
    724e:	61 e0       	ldi	r22, 0x01	; 1
    7250:	85 e0       	ldi	r24, 0x05	; 5
    7252:	0e 94 83 36 	call	0x6d06	; 0x6d06 <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_GREEN, LOW);
    7256:	60 e0       	ldi	r22, 0x00	; 0
    7258:	85 e0       	ldi	r24, 0x05	; 5
    725a:	0e 94 d7 36 	call	0x6dae	; 0x6dae <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(LED_RED, PORT_DIR_OUT);
    725e:	61 e0       	ldi	r22, 0x01	; 1
    7260:	86 e0       	ldi	r24, 0x06	; 6
    7262:	0e 94 83 36 	call	0x6d06	; 0x6d06 <PORTC_set_pin_dir>
	PORTC_set_pin_level(LED_RED, LOW);
    7266:	60 e0       	ldi	r22, 0x00	; 0
    7268:	86 e0       	ldi	r24, 0x06	; 6
    726a:	0e 94 d7 36 	call	0x6dae	; 0x6dae <PORTC_set_pin_level>
	
	PORTC_set_pin_dir(SWITCH, PORT_DIR_IN);
    726e:	60 e0       	ldi	r22, 0x00	; 0
    7270:	87 e0       	ldi	r24, 0x07	; 7
    7272:	0e 94 83 36 	call	0x6d06	; 0x6d06 <PORTC_set_pin_dir>
	PORTC_set_pin_pull_mode(SWITCH, PORT_PULL_UP);
    7276:	61 e0       	ldi	r22, 0x01	; 1
    7278:	87 e0       	ldi	r24, 0x07	; 7
    727a:	0e 94 2f 36 	call	0x6c5e	; 0x6c5e <PORTC_set_pin_pull_mode>
	PORTC_pin_set_isc(SWITCH, PORT_ISC_RISING_gc);
    727e:	62 e0       	ldi	r22, 0x02	; 2
    7280:	87 e0       	ldi	r24, 0x07	; 7
    7282:	0e 94 60 36 	call	0x6cc0	; 0x6cc0 <PORTC_pin_set_isc>
	
	/* PORTD *************************************************************************************/
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT_V, PORT_DIR_IN); /* use ADC for reading voltage at antenna detect pin */
    7286:	60 e0       	ldi	r22, 0x00	; 0
    7288:	80 e0       	ldi	r24, 0x00	; 0
    728a:	0e 94 65 37 	call	0x6eca	; 0x6eca <PORTD_set_pin_dir>
	
	PORTD_set_pin_dir(X80M_ANTENNA_DETECT, PORT_DIR_IN);
    728e:	60 e0       	ldi	r22, 0x00	; 0
    7290:	81 e0       	ldi	r24, 0x01	; 1
    7292:	0e 94 65 37 	call	0x6eca	; 0x6eca <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(X80M_ANTENNA_DETECT, PORT_PULL_UP);
    7296:	61 e0       	ldi	r22, 0x01	; 1
    7298:	81 e0       	ldi	r24, 0x01	; 1
    729a:	0e 94 11 37 	call	0x6e22	; 0x6e22 <PORTD_set_pin_pull_mode>
	PORTD_pin_set_isc(X80M_ANTENNA_DETECT, PORT_ISC_BOTHEDGES_gc);
    729e:	61 e0       	ldi	r22, 0x01	; 1
    72a0:	81 e0       	ldi	r24, 0x01	; 1
    72a2:	0e 94 42 37 	call	0x6e84	; 0x6e84 <PORTD_pin_set_isc>
	/* PORTD.PIN3 = ACD3 Audio in TX_BATTERY_VOLTAGE */
	/* PORTD.PIN4 = ACD4 Audio in TX_12_VOLTAGE */
	/* PORTD.PIN5 = ACD5 Audio in TX_PA_VOLTAGE */
	/* PORTD.PIN6 = DAC0 voltage out DAC_OUTPUT */
	
	PORTD_set_pin_dir(WIFI_MODULE_DETECT, PORT_DIR_IN); /* Detect presence of Huzzah module */
    72a6:	60 e0       	ldi	r22, 0x00	; 0
    72a8:	87 e0       	ldi	r24, 0x07	; 7
    72aa:	0e 94 65 37 	call	0x6eca	; 0x6eca <PORTD_set_pin_dir>
	PORTD_set_pin_pull_mode(WIFI_MODULE_DETECT, PORT_PULL_OFF);
    72ae:	60 e0       	ldi	r22, 0x00	; 0
    72b0:	87 e0       	ldi	r24, 0x07	; 7
    72b2:	0e 94 11 37 	call	0x6e22	; 0x6e22 <PORTD_set_pin_pull_mode>

	/* PORTE *************************************************************************************/
	PORTE_set_pin_dir(0, PORT_DIR_OFF); /* Unused */
    72b6:	62 e0       	ldi	r22, 0x02	; 2
    72b8:	80 e0       	ldi	r24, 0x00	; 0
    72ba:	0e 94 d8 37 	call	0x6fb0	; 0x6fb0 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(1, PORT_DIR_OFF); /* Unused */
    72be:	62 e0       	ldi	r22, 0x02	; 2
    72c0:	81 e0       	ldi	r24, 0x01	; 1
    72c2:	0e 94 d8 37 	call	0x6fb0	; 0x6fb0 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    72c6:	62 e0       	ldi	r22, 0x02	; 2
    72c8:	82 e0       	ldi	r24, 0x02	; 2
    72ca:	0e 94 d8 37 	call	0x6fb0	; 0x6fb0 <PORTE_set_pin_dir>
	PORTE_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    72ce:	62 e0       	ldi	r22, 0x02	; 2
    72d0:	83 e0       	ldi	r24, 0x03	; 3
    72d2:	0e 94 d8 37 	call	0x6fb0	; 0x6fb0 <PORTE_set_pin_dir>

	/* PORTF *************************************************************************************/
	PORTF_set_pin_dir(X32KHZ_SQUAREWAVE, PORT_DIR_OFF);	
    72d6:	62 e0       	ldi	r22, 0x02	; 2
    72d8:	80 e0       	ldi	r24, 0x00	; 0
    72da:	0e 94 2c 38 	call	0x7058	; 0x7058 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(1, PORT_DIR_OFF);	/* Unused */
    72de:	62 e0       	ldi	r22, 0x02	; 2
    72e0:	81 e0       	ldi	r24, 0x01	; 1
    72e2:	0e 94 2c 38 	call	0x7058	; 0x7058 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(2, PORT_DIR_OFF); /* Unused */
    72e6:	62 e0       	ldi	r22, 0x02	; 2
    72e8:	82 e0       	ldi	r24, 0x02	; 2
    72ea:	0e 94 2c 38 	call	0x7058	; 0x7058 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(3, PORT_DIR_OFF); /* Unused */
    72ee:	62 e0       	ldi	r22, 0x02	; 2
    72f0:	83 e0       	ldi	r24, 0x03	; 3
    72f2:	0e 94 2c 38 	call	0x7058	; 0x7058 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(4, PORT_DIR_OFF); /* Unused */
    72f6:	62 e0       	ldi	r22, 0x02	; 2
    72f8:	84 e0       	ldi	r24, 0x04	; 4
    72fa:	0e 94 2c 38 	call	0x7058	; 0x7058 <PORTF_set_pin_dir>
	PORTF_set_pin_dir(5, PORT_DIR_OFF); /* Unused */
    72fe:	62 e0       	ldi	r22, 0x02	; 2
    7300:	85 e0       	ldi	r24, 0x05	; 5
    7302:	0e 94 2c 38 	call	0x7058	; 0x7058 <PORTF_set_pin_dir>
	/* PORTF.PIN6 = Reset */
	
	/* PORT Pin Interrupts */
	PORTA.PIN2CTRL = 0x0A; /* Enable RTC SQW 1-sec interrupts */
    7306:	80 e0       	ldi	r24, 0x00	; 0
    7308:	94 e0       	ldi	r25, 0x04	; 4
    730a:	2a e0       	ldi	r18, 0x0A	; 10
    730c:	fc 01       	movw	r30, r24
    730e:	22 8b       	std	Z+18, r18	; 0x12
	PORTD.PIN1CTRL = 0x09; /* Enable antenna change interrupts */
    7310:	80 e6       	ldi	r24, 0x60	; 96
    7312:	94 e0       	ldi	r25, 0x04	; 4
    7314:	29 e0       	ldi	r18, 0x09	; 9
    7316:	fc 01       	movw	r30, r24
    7318:	21 8b       	std	Z+17, r18	; 0x11
}
    731a:	00 00       	nop
    731c:	df 91       	pop	r29
    731e:	cf 91       	pop	r28
    7320:	08 95       	ret

00007322 <BOD_init>:
 * \brief Initialize Brownout Detector
 *
 * \return Initialization status.
 */
int8_t BOD_init()
{
    7322:	cf 93       	push	r28
    7324:	df 93       	push	r29
    7326:	cd b7       	in	r28, 0x3d	; 61
    7328:	de b7       	in	r29, 0x3e	; 62

	// ccp_write_io((void*)&(BOD.CTRLA),BOD_SLEEP_DIS_gc /* Disabled */);

	BOD.INTCTRL = 0 << BOD_VLMIE_bp        /* voltage level monitor interrrupt enable: disabled */
    732a:	80 e8       	ldi	r24, 0x80	; 128
    732c:	90 e0       	ldi	r25, 0x00	; 0
	              | BOD_VLMCFG_FALLING_gc; /* Interrupt when supply goes below VLM level */
    732e:	fc 01       	movw	r30, r24
    7330:	11 86       	std	Z+9, r1	; 0x09

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
    7332:	80 e0       	ldi	r24, 0x00	; 0
}
    7334:	df 91       	pop	r29
    7336:	cf 91       	pop	r28
    7338:	08 95       	ret

0000733a <ccp_write_io>:
 * \note Using IAR Embedded workbench, the choice of memory model has an impact
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
    733a:	cf 93       	push	r28
    733c:	df 93       	push	r29
    733e:	00 d0       	rcall	.+0      	; 0x7340 <ccp_write_io+0x6>
    7340:	1f 92       	push	r1
    7342:	cd b7       	in	r28, 0x3d	; 61
    7344:	de b7       	in	r29, 0x3e	; 62
    7346:	89 83       	std	Y+1, r24	; 0x01
    7348:	9a 83       	std	Y+2, r25	; 0x02
    734a:	6b 83       	std	Y+3, r22	; 0x03
	protected_write_io(addr, CCP_IOREG_gc, value);
    734c:	89 81       	ldd	r24, Y+1	; 0x01
    734e:	9a 81       	ldd	r25, Y+2	; 0x02
    7350:	4b 81       	ldd	r20, Y+3	; 0x03
    7352:	68 ed       	ldi	r22, 0xD8	; 216
    7354:	0e 94 fa 59 	call	0xb3f4	; 0xb3f4 <protected_write_io>
}
    7358:	00 00       	nop
    735a:	23 96       	adiw	r28, 0x03	; 3
    735c:	cd bf       	out	0x3d, r28	; 61
    735e:	de bf       	out	0x3e, r29	; 62
    7360:	df 91       	pop	r29
    7362:	cf 91       	pop	r28
    7364:	08 95       	ret

00007366 <CLKCTRL_init>:
 * \brief Initialize clkctrl interface
 *
 * \return Initialization status.
 */
int8_t CLKCTRL_init()
{
    7366:	cf 93       	push	r28
    7368:	df 93       	push	r29
    736a:	cd b7       	in	r28, 0x3d	; 61
    736c:	de b7       	in	r29, 0x3e	; 62
	//		 | CLKCTRL_MULFAC_DISABLE_gc /* 1 */
	//		 | 0 << CLKCTRL_SOURCE_bp /* Select Source for PLL: disabled */);

	ccp_write_io((void*)&(CLKCTRL.OSCHFCTRLA),CLKCTRL_FRQSEL_24M_gc /* 4 */
			 | 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
			 | 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
    736e:	64 e2       	ldi	r22, 0x24	; 36
    7370:	88 e6       	ldi	r24, 0x68	; 104
    7372:	90 e0       	ldi	r25, 0x00	; 0
    7374:	0e 94 9d 39 	call	0x733a	; 0x733a <ccp_write_io>
	// ccp_write_io((void*)&(CLKCTRL.MCLKCTRLA),CLKCTRL_CLKSEL_OSCHF_gc /* Internal high-frequency oscillator */
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
    7378:	80 e0       	ldi	r24, 0x00	; 0
}
    737a:	df 91       	pop	r29
    737c:	cf 91       	pop	r28
    737e:	08 95       	ret

00007380 <CPUINT_init>:
 * \brief Initialize cpuint interface
 *
 * \return Initialization status
 */
int8_t CPUINT_init()
{
    7380:	cf 93       	push	r28
    7382:	df 93       	push	r29
    7384:	cd b7       	in	r28, 0x3d	; 61
    7386:	de b7       	in	r29, 0x3e	; 62

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    7388:	78 94       	sei

	return 0;
    738a:	80 e0       	ldi	r24, 0x00	; 0
}
    738c:	df 91       	pop	r29
    738e:	cf 91       	pop	r28
    7390:	08 95       	ret

00007392 <_ZL9VREF_initv>:
#define LSB_MASK                 (0x03)



static void VREF_init(void)
{
    7392:	cf 93       	push	r28
    7394:	df 93       	push	r29
    7396:	cd b7       	in	r28, 0x3d	; 61
    7398:	de b7       	in	r29, 0x3e	; 62
//	VREF.DAC0REF = VREF_REFSEL_2V048_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	VREF.DAC0REF = VREF_REFSEL_2V500_gc /* Select the 2.048V Internal Voltage Reference for DAC */
//	| VREF_ALWAYSON_bm;    /* Set the Voltage Reference in Always On mode */
	VREF.DAC0REF = VREF_REFSEL_2V500_gc; /* Select the 2.048V Internal Voltage Reference for DAC */
    739a:	80 ea       	ldi	r24, 0xA0	; 160
    739c:	90 e0       	ldi	r25, 0x00	; 0
    739e:	23 e0       	ldi	r18, 0x03	; 3
    73a0:	fc 01       	movw	r30, r24
    73a2:	22 83       	std	Z+2, r18	; 0x02
	/* Wait VREF start-up time */
	while(util_delay_ms(VREF_STARTUP_TIME_MS));
    73a4:	6a e0       	ldi	r22, 0x0A	; 10
    73a6:	70 e0       	ldi	r23, 0x00	; 0
    73a8:	80 e0       	ldi	r24, 0x00	; 0
    73aa:	90 e0       	ldi	r25, 0x00	; 0
    73ac:	0e 94 c7 69 	call	0xd38e	; 0xd38e <util_delay_ms>
    73b0:	88 23       	and	r24, r24
    73b2:	09 f0       	breq	.+2      	; 0x73b6 <_ZL9VREF_initv+0x24>
    73b4:	f7 cf       	rjmp	.-18     	; 0x73a4 <_ZL9VREF_initv+0x12>
}
    73b6:	00 00       	nop
    73b8:	df 91       	pop	r29
    73ba:	cf 91       	pop	r28
    73bc:	08 95       	ret

000073be <_Z9DAC0_initv>:

void DAC0_init(void)
{
    73be:	cf 93       	push	r28
    73c0:	df 93       	push	r29
    73c2:	cd b7       	in	r28, 0x3d	; 61
    73c4:	de b7       	in	r29, 0x3e	; 62
	VREF_init();
    73c6:	0e 94 c9 39 	call	0x7392	; 0x7392 <_ZL9VREF_initv>
	/* Disable digital input buffer */
	PORTD.PIN6CTRL &= ~PORT_ISC_gm;
    73ca:	80 e6       	ldi	r24, 0x60	; 96
    73cc:	94 e0       	ldi	r25, 0x04	; 4
    73ce:	20 e6       	ldi	r18, 0x60	; 96
    73d0:	34 e0       	ldi	r19, 0x04	; 4
    73d2:	f9 01       	movw	r30, r18
    73d4:	26 89       	ldd	r18, Z+22	; 0x16
    73d6:	28 7f       	andi	r18, 0xF8	; 248
    73d8:	fc 01       	movw	r30, r24
    73da:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
    73dc:	80 e6       	ldi	r24, 0x60	; 96
    73de:	94 e0       	ldi	r25, 0x04	; 4
    73e0:	20 e6       	ldi	r18, 0x60	; 96
    73e2:	34 e0       	ldi	r19, 0x04	; 4
    73e4:	f9 01       	movw	r30, r18
    73e6:	26 89       	ldd	r18, Z+22	; 0x16
    73e8:	24 60       	ori	r18, 0x04	; 4
    73ea:	fc 01       	movw	r30, r24
    73ec:	26 8b       	std	Z+22, r18	; 0x16
	/* Disable pull-up resistor */
	PORTD.PIN6CTRL &= ~PORT_PULLUPEN_bm;
    73ee:	80 e6       	ldi	r24, 0x60	; 96
    73f0:	94 e0       	ldi	r25, 0x04	; 4
    73f2:	20 e6       	ldi	r18, 0x60	; 96
    73f4:	34 e0       	ldi	r19, 0x04	; 4
    73f6:	f9 01       	movw	r30, r18
    73f8:	26 89       	ldd	r18, Z+22	; 0x16
    73fa:	27 7f       	andi	r18, 0xF7	; 247
    73fc:	fc 01       	movw	r30, r24
    73fe:	26 8b       	std	Z+22, r18	; 0x16
	DAC0.CTRLA = DAC_ENABLE_bm          /* Enable DAC */
    7400:	80 ea       	ldi	r24, 0xA0	; 160
    7402:	96 e0       	ldi	r25, 0x06	; 6
	| DAC_OUTEN_bm           /* Enable output buffer */
	| DAC_RUNSTDBY_bm;       /* Enable Run in Standby mode */
    7404:	21 ec       	ldi	r18, 0xC1	; 193
    7406:	fc 01       	movw	r30, r24
    7408:	20 83       	st	Z, r18
	
	DAC0_setVal(DAC_DEFAULT_VALUE);
    740a:	80 e0       	ldi	r24, 0x00	; 0
    740c:	90 e0       	ldi	r25, 0x00	; 0
    740e:	0e 94 0d 3a 	call	0x741a	; 0x741a <_Z11DAC0_setValj>
}
    7412:	00 00       	nop
    7414:	df 91       	pop	r29
    7416:	cf 91       	pop	r28
    7418:	08 95       	ret

0000741a <_Z11DAC0_setValj>:

void DAC0_setVal(uint16_t value)
{
    741a:	cf 93       	push	r28
    741c:	df 93       	push	r29
    741e:	00 d0       	rcall	.+0      	; 0x7420 <_Z11DAC0_setValj+0x6>
    7420:	cd b7       	in	r28, 0x3d	; 61
    7422:	de b7       	in	r29, 0x3e	; 62
    7424:	89 83       	std	Y+1, r24	; 0x01
    7426:	9a 83       	std	Y+2, r25	; 0x02
	/* Store the two LSbs in DAC0.DATAL */
	DAC0.DATAL = (value & LSB_MASK) << 6;
    7428:	80 ea       	ldi	r24, 0xA0	; 160
    742a:	96 e0       	ldi	r25, 0x06	; 6
    742c:	29 81       	ldd	r18, Y+1	; 0x01
    742e:	22 95       	swap	r18
    7430:	22 0f       	add	r18, r18
    7432:	22 0f       	add	r18, r18
    7434:	20 7c       	andi	r18, 0xC0	; 192
    7436:	fc 01       	movw	r30, r24
    7438:	22 83       	std	Z+2, r18	; 0x02
	/* Store the eight MSbs in DAC0.DATAH */
	DAC0.DATAH = value >> 2;
    743a:	80 ea       	ldi	r24, 0xA0	; 160
    743c:	96 e0       	ldi	r25, 0x06	; 6
    743e:	29 81       	ldd	r18, Y+1	; 0x01
    7440:	3a 81       	ldd	r19, Y+2	; 0x02
    7442:	36 95       	lsr	r19
    7444:	27 95       	ror	r18
    7446:	36 95       	lsr	r19
    7448:	27 95       	ror	r18
    744a:	fc 01       	movw	r30, r24
    744c:	23 83       	std	Z+3, r18	; 0x03
}
    744e:	00 00       	nop
    7450:	0f 90       	pop	r0
    7452:	0f 90       	pop	r0
    7454:	df 91       	pop	r29
    7456:	cf 91       	pop	r28
    7458:	08 95       	ret

0000745a <PORTC_set_pin_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
    745a:	cf 93       	push	r28
    745c:	df 93       	push	r29
    745e:	00 d0       	rcall	.+0      	; 0x7460 <PORTC_set_pin_dir+0x6>
    7460:	cd b7       	in	r28, 0x3d	; 61
    7462:	de b7       	in	r29, 0x3e	; 62
    7464:	89 83       	std	Y+1, r24	; 0x01
    7466:	6a 83       	std	Y+2, r22	; 0x02
	switch (dir) {
    7468:	8a 81       	ldd	r24, Y+2	; 0x02
    746a:	88 2f       	mov	r24, r24
    746c:	90 e0       	ldi	r25, 0x00	; 0
    746e:	81 30       	cpi	r24, 0x01	; 1
    7470:	91 05       	cpc	r25, r1
    7472:	e1 f0       	breq	.+56     	; 0x74ac <PORTC_set_pin_dir+0x52>
    7474:	82 30       	cpi	r24, 0x02	; 2
    7476:	91 05       	cpc	r25, r1
    7478:	71 f1       	breq	.+92     	; 0x74d6 <PORTC_set_pin_dir+0x7c>
    747a:	89 2b       	or	r24, r25
    747c:	09 f0       	breq	.+2      	; 0x7480 <PORTC_set_pin_dir+0x26>
		break;
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
		break;
	default:
		break;
    747e:	3b c0       	rjmp	.+118    	; 0x74f6 <PORTC_set_pin_dir+0x9c>
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTC.DIR &= ~(1 << pin);
    7480:	88 e0       	ldi	r24, 0x08	; 8
    7482:	90 e0       	ldi	r25, 0x00	; 0
    7484:	28 e0       	ldi	r18, 0x08	; 8
    7486:	30 e0       	ldi	r19, 0x00	; 0
    7488:	f9 01       	movw	r30, r18
    748a:	20 81       	ld	r18, Z
    748c:	62 2f       	mov	r22, r18
    748e:	29 81       	ldd	r18, Y+1	; 0x01
    7490:	42 2f       	mov	r20, r18
    7492:	50 e0       	ldi	r21, 0x00	; 0
    7494:	21 e0       	ldi	r18, 0x01	; 1
    7496:	30 e0       	ldi	r19, 0x00	; 0
    7498:	02 c0       	rjmp	.+4      	; 0x749e <PORTC_set_pin_dir+0x44>
    749a:	22 0f       	add	r18, r18
    749c:	33 1f       	adc	r19, r19
    749e:	4a 95       	dec	r20
    74a0:	e2 f7       	brpl	.-8      	; 0x749a <PORTC_set_pin_dir+0x40>
    74a2:	20 95       	com	r18
    74a4:	26 23       	and	r18, r22
    74a6:	fc 01       	movw	r30, r24
    74a8:	20 83       	st	Z, r18
		break;
    74aa:	25 c0       	rjmp	.+74     	; 0x74f6 <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OUT:
		VPORTC.DIR |= (1 << pin);
    74ac:	88 e0       	ldi	r24, 0x08	; 8
    74ae:	90 e0       	ldi	r25, 0x00	; 0
    74b0:	28 e0       	ldi	r18, 0x08	; 8
    74b2:	30 e0       	ldi	r19, 0x00	; 0
    74b4:	f9 01       	movw	r30, r18
    74b6:	20 81       	ld	r18, Z
    74b8:	62 2f       	mov	r22, r18
    74ba:	29 81       	ldd	r18, Y+1	; 0x01
    74bc:	42 2f       	mov	r20, r18
    74be:	50 e0       	ldi	r21, 0x00	; 0
    74c0:	21 e0       	ldi	r18, 0x01	; 1
    74c2:	30 e0       	ldi	r19, 0x00	; 0
    74c4:	02 c0       	rjmp	.+4      	; 0x74ca <PORTC_set_pin_dir+0x70>
    74c6:	22 0f       	add	r18, r18
    74c8:	33 1f       	adc	r19, r19
    74ca:	4a 95       	dec	r20
    74cc:	e2 f7       	brpl	.-8      	; 0x74c6 <PORTC_set_pin_dir+0x6c>
    74ce:	26 2b       	or	r18, r22
    74d0:	fc 01       	movw	r30, r24
    74d2:	20 83       	st	Z, r18
		break;
    74d4:	10 c0       	rjmp	.+32     	; 0x74f6 <PORTC_set_pin_dir+0x9c>
	case PORT_DIR_OFF:
		*((uint8_t *)&PORTC + 0x10 + pin) |= 1 << PORT_PULLUPEN_bp;
    74d6:	89 81       	ldd	r24, Y+1	; 0x01
    74d8:	88 2f       	mov	r24, r24
    74da:	90 e0       	ldi	r25, 0x00	; 0
    74dc:	80 5b       	subi	r24, 0xB0	; 176
    74de:	9b 4f       	sbci	r25, 0xFB	; 251
    74e0:	29 81       	ldd	r18, Y+1	; 0x01
    74e2:	22 2f       	mov	r18, r18
    74e4:	30 e0       	ldi	r19, 0x00	; 0
    74e6:	20 5b       	subi	r18, 0xB0	; 176
    74e8:	3b 4f       	sbci	r19, 0xFB	; 251
    74ea:	f9 01       	movw	r30, r18
    74ec:	20 81       	ld	r18, Z
    74ee:	28 60       	ori	r18, 0x08	; 8
    74f0:	fc 01       	movw	r30, r24
    74f2:	20 83       	st	Z, r18
		break;
    74f4:	00 00       	nop
	default:
		break;
	}
}
    74f6:	00 00       	nop
    74f8:	0f 90       	pop	r0
    74fa:	0f 90       	pop	r0
    74fc:	df 91       	pop	r29
    74fe:	cf 91       	pop	r28
    7500:	08 95       	ret

00007502 <PORTC_set_pin_level>:
 * \param[in] pin       The pin number within port
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
    7502:	cf 93       	push	r28
    7504:	df 93       	push	r29
    7506:	00 d0       	rcall	.+0      	; 0x7508 <PORTC_set_pin_level+0x6>
    7508:	cd b7       	in	r28, 0x3d	; 61
    750a:	de b7       	in	r29, 0x3e	; 62
    750c:	89 83       	std	Y+1, r24	; 0x01
    750e:	6a 83       	std	Y+2, r22	; 0x02
	if (level == true) {
    7510:	8a 81       	ldd	r24, Y+2	; 0x02
    7512:	88 23       	and	r24, r24
    7514:	a9 f0       	breq	.+42     	; 0x7540 <PORTC_set_pin_level+0x3e>
		VPORTC.OUT |= (1 << pin);
    7516:	88 e0       	ldi	r24, 0x08	; 8
    7518:	90 e0       	ldi	r25, 0x00	; 0
    751a:	28 e0       	ldi	r18, 0x08	; 8
    751c:	30 e0       	ldi	r19, 0x00	; 0
    751e:	f9 01       	movw	r30, r18
    7520:	21 81       	ldd	r18, Z+1	; 0x01
    7522:	62 2f       	mov	r22, r18
    7524:	29 81       	ldd	r18, Y+1	; 0x01
    7526:	42 2f       	mov	r20, r18
    7528:	50 e0       	ldi	r21, 0x00	; 0
    752a:	21 e0       	ldi	r18, 0x01	; 1
    752c:	30 e0       	ldi	r19, 0x00	; 0
    752e:	02 c0       	rjmp	.+4      	; 0x7534 <PORTC_set_pin_level+0x32>
    7530:	22 0f       	add	r18, r18
    7532:	33 1f       	adc	r19, r19
    7534:	4a 95       	dec	r20
    7536:	e2 f7       	brpl	.-8      	; 0x7530 <PORTC_set_pin_level+0x2e>
    7538:	26 2b       	or	r18, r22
    753a:	fc 01       	movw	r30, r24
    753c:	21 83       	std	Z+1, r18	; 0x01
	} else {
		VPORTC.OUT &= ~(1 << pin);
	}
}
    753e:	15 c0       	rjmp	.+42     	; 0x756a <PORTC_set_pin_level+0x68>
static inline void PORTC_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTC.OUT |= (1 << pin);
	} else {
		VPORTC.OUT &= ~(1 << pin);
    7540:	88 e0       	ldi	r24, 0x08	; 8
    7542:	90 e0       	ldi	r25, 0x00	; 0
    7544:	28 e0       	ldi	r18, 0x08	; 8
    7546:	30 e0       	ldi	r19, 0x00	; 0
    7548:	f9 01       	movw	r30, r18
    754a:	21 81       	ldd	r18, Z+1	; 0x01
    754c:	62 2f       	mov	r22, r18
    754e:	29 81       	ldd	r18, Y+1	; 0x01
    7550:	42 2f       	mov	r20, r18
    7552:	50 e0       	ldi	r21, 0x00	; 0
    7554:	21 e0       	ldi	r18, 0x01	; 1
    7556:	30 e0       	ldi	r19, 0x00	; 0
    7558:	02 c0       	rjmp	.+4      	; 0x755e <PORTC_set_pin_level+0x5c>
    755a:	22 0f       	add	r18, r18
    755c:	33 1f       	adc	r19, r19
    755e:	4a 95       	dec	r20
    7560:	e2 f7       	brpl	.-8      	; 0x755a <PORTC_set_pin_level+0x58>
    7562:	20 95       	com	r18
    7564:	26 23       	and	r18, r22
    7566:	fc 01       	movw	r30, r24
    7568:	21 83       	std	Z+1, r18	; 0x01
	}
}
    756a:	00 00       	nop
    756c:	0f 90       	pop	r0
    756e:	0f 90       	pop	r0
    7570:	df 91       	pop	r29
    7572:	cf 91       	pop	r28
    7574:	08 95       	ret

00007576 <_ZL15LED_set_RED_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_RED_dir(const enum port_dir dir)
{
    7576:	cf 93       	push	r28
    7578:	df 93       	push	r29
    757a:	1f 92       	push	r1
    757c:	cd b7       	in	r28, 0x3d	; 61
    757e:	de b7       	in	r29, 0x3e	; 62
    7580:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(6, dir);
    7582:	69 81       	ldd	r22, Y+1	; 0x01
    7584:	86 e0       	ldi	r24, 0x06	; 6
    7586:	0e 94 2d 3a 	call	0x745a	; 0x745a <PORTC_set_pin_dir>
}
    758a:	00 00       	nop
    758c:	0f 90       	pop	r0
    758e:	df 91       	pop	r29
    7590:	cf 91       	pop	r28
    7592:	08 95       	ret

00007594 <_ZL17LED_set_GREEN_dir8port_dir>:
 *                      PORT_DIR_OUT = Data direction out
 *                      PORT_DIR_OFF = Disables the pin
 *                      (low power state)
 */
static inline void LED_set_GREEN_dir(const enum port_dir dir)
{
    7594:	cf 93       	push	r28
    7596:	df 93       	push	r29
    7598:	1f 92       	push	r1
    759a:	cd b7       	in	r28, 0x3d	; 61
    759c:	de b7       	in	r29, 0x3e	; 62
    759e:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_dir(5, dir);
    75a0:	69 81       	ldd	r22, Y+1	; 0x01
    75a2:	85 e0       	ldi	r24, 0x05	; 5
    75a4:	0e 94 2d 3a 	call	0x745a	; 0x745a <PORTC_set_pin_dir>
}
    75a8:	00 00       	nop
    75aa:	0f 90       	pop	r0
    75ac:	df 91       	pop	r29
    75ae:	cf 91       	pop	r28
    75b0:	08 95       	ret

000075b2 <_ZL17LED_set_RED_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_RED_level(const bool level)
{
    75b2:	cf 93       	push	r28
    75b4:	df 93       	push	r29
    75b6:	1f 92       	push	r1
    75b8:	cd b7       	in	r28, 0x3d	; 61
    75ba:	de b7       	in	r29, 0x3e	; 62
    75bc:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(6, level); /* Low == LED off */
    75be:	69 81       	ldd	r22, Y+1	; 0x01
    75c0:	86 e0       	ldi	r24, 0x06	; 6
    75c2:	0e 94 81 3a 	call	0x7502	; 0x7502 <PORTC_set_pin_level>
}
    75c6:	00 00       	nop
    75c8:	0f 90       	pop	r0
    75ca:	df 91       	pop	r29
    75cc:	cf 91       	pop	r28
    75ce:	08 95       	ret

000075d0 <_ZL19LED_set_GREEN_levelb>:
 *
 * \param[in] level true  = Pin level set to "high" state
 *                  false = Pin level set to "low" state
 */
static inline void LED_set_GREEN_level(const bool level)
{
    75d0:	cf 93       	push	r28
    75d2:	df 93       	push	r29
    75d4:	1f 92       	push	r1
    75d6:	cd b7       	in	r28, 0x3d	; 61
    75d8:	de b7       	in	r29, 0x3e	; 62
    75da:	89 83       	std	Y+1, r24	; 0x01
	PORTC_set_pin_level(5, level); /* Low == LED off */
    75dc:	69 81       	ldd	r22, Y+1	; 0x01
    75de:	85 e0       	ldi	r24, 0x05	; 5
    75e0:	0e 94 81 3a 	call	0x7502	; 0x7502 <PORTC_set_pin_level>
}
    75e4:	00 00       	nop
    75e6:	0f 90       	pop	r0
    75e8:	df 91       	pop	r29
    75ea:	cf 91       	pop	r28
    75ec:	08 95       	ret

000075ee <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
    75ee:	cf 93       	push	r28
    75f0:	df 93       	push	r29
    75f2:	cd b7       	in	r28, 0x3d	; 61
    75f4:	de b7       	in	r29, 0x3e	; 62
    75f6:	26 97       	sbiw	r28, 0x06	; 6
    75f8:	cd bf       	out	0x3d, r28	; 61
    75fa:	de bf       	out	0x3e, r29	; 62
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    75fc:	19 82       	std	Y+1, r1	; 0x01
    75fe:	89 81       	ldd	r24, Y+1	; 0x01
    7600:	88 30       	cpi	r24, 0x08	; 8
    7602:	98 f4       	brcc	.+38     	; 0x762a <mcu_init+0x3c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7604:	89 81       	ldd	r24, Y+1	; 0x01
    7606:	88 2f       	mov	r24, r24
    7608:	90 e0       	ldi	r25, 0x00	; 0
    760a:	80 5f       	subi	r24, 0xF0	; 240
    760c:	9b 4f       	sbci	r25, 0xFB	; 251
    760e:	29 81       	ldd	r18, Y+1	; 0x01
    7610:	22 2f       	mov	r18, r18
    7612:	30 e0       	ldi	r19, 0x00	; 0
    7614:	20 5f       	subi	r18, 0xF0	; 240
    7616:	3b 4f       	sbci	r19, 0xFB	; 251
    7618:	f9 01       	movw	r30, r18
    761a:	20 81       	ld	r18, Z
    761c:	28 60       	ori	r18, 0x08	; 8
    761e:	fc 01       	movw	r30, r24
    7620:	20 83       	st	Z, r18
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    7622:	89 81       	ldd	r24, Y+1	; 0x01
    7624:	8f 5f       	subi	r24, 0xFF	; 255
    7626:	89 83       	std	Y+1, r24	; 0x01
    7628:	ea cf       	rjmp	.-44     	; 0x75fe <mcu_init+0x10>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    762a:	1a 82       	std	Y+2, r1	; 0x02
    762c:	8a 81       	ldd	r24, Y+2	; 0x02
    762e:	88 30       	cpi	r24, 0x08	; 8
    7630:	98 f4       	brcc	.+38     	; 0x7658 <mcu_init+0x6a>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7632:	8a 81       	ldd	r24, Y+2	; 0x02
    7634:	88 2f       	mov	r24, r24
    7636:	90 e0       	ldi	r25, 0x00	; 0
    7638:	80 5d       	subi	r24, 0xD0	; 208
    763a:	9b 4f       	sbci	r25, 0xFB	; 251
    763c:	2a 81       	ldd	r18, Y+2	; 0x02
    763e:	22 2f       	mov	r18, r18
    7640:	30 e0       	ldi	r19, 0x00	; 0
    7642:	20 5d       	subi	r18, 0xD0	; 208
    7644:	3b 4f       	sbci	r19, 0xFB	; 251
    7646:	f9 01       	movw	r30, r18
    7648:	20 81       	ld	r18, Z
    764a:	28 60       	ori	r18, 0x08	; 8
    764c:	fc 01       	movw	r30, r24
    764e:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7650:	8a 81       	ldd	r24, Y+2	; 0x02
    7652:	8f 5f       	subi	r24, 0xFF	; 255
    7654:	8a 83       	std	Y+2, r24	; 0x02
    7656:	ea cf       	rjmp	.-44     	; 0x762c <mcu_init+0x3e>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7658:	1b 82       	std	Y+3, r1	; 0x03
    765a:	8b 81       	ldd	r24, Y+3	; 0x03
    765c:	88 30       	cpi	r24, 0x08	; 8
    765e:	98 f4       	brcc	.+38     	; 0x7686 <mcu_init+0x98>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    7660:	8b 81       	ldd	r24, Y+3	; 0x03
    7662:	88 2f       	mov	r24, r24
    7664:	90 e0       	ldi	r25, 0x00	; 0
    7666:	80 5b       	subi	r24, 0xB0	; 176
    7668:	9b 4f       	sbci	r25, 0xFB	; 251
    766a:	2b 81       	ldd	r18, Y+3	; 0x03
    766c:	22 2f       	mov	r18, r18
    766e:	30 e0       	ldi	r19, 0x00	; 0
    7670:	20 5b       	subi	r18, 0xB0	; 176
    7672:	3b 4f       	sbci	r19, 0xFB	; 251
    7674:	f9 01       	movw	r30, r18
    7676:	20 81       	ld	r18, Z
    7678:	28 60       	ori	r18, 0x08	; 8
    767a:	fc 01       	movw	r30, r24
    767c:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    767e:	8b 81       	ldd	r24, Y+3	; 0x03
    7680:	8f 5f       	subi	r24, 0xFF	; 255
    7682:	8b 83       	std	Y+3, r24	; 0x03
    7684:	ea cf       	rjmp	.-44     	; 0x765a <mcu_init+0x6c>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7686:	1c 82       	std	Y+4, r1	; 0x04
    7688:	8c 81       	ldd	r24, Y+4	; 0x04
    768a:	88 30       	cpi	r24, 0x08	; 8
    768c:	98 f4       	brcc	.+38     	; 0x76b4 <mcu_init+0xc6>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    768e:	8c 81       	ldd	r24, Y+4	; 0x04
    7690:	88 2f       	mov	r24, r24
    7692:	90 e0       	ldi	r25, 0x00	; 0
    7694:	80 59       	subi	r24, 0x90	; 144
    7696:	9b 4f       	sbci	r25, 0xFB	; 251
    7698:	2c 81       	ldd	r18, Y+4	; 0x04
    769a:	22 2f       	mov	r18, r18
    769c:	30 e0       	ldi	r19, 0x00	; 0
    769e:	20 59       	subi	r18, 0x90	; 144
    76a0:	3b 4f       	sbci	r19, 0xFB	; 251
    76a2:	f9 01       	movw	r30, r18
    76a4:	20 81       	ld	r18, Z
    76a6:	28 60       	ori	r18, 0x08	; 8
    76a8:	fc 01       	movw	r30, r24
    76aa:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    76ac:	8c 81       	ldd	r24, Y+4	; 0x04
    76ae:	8f 5f       	subi	r24, 0xFF	; 255
    76b0:	8c 83       	std	Y+4, r24	; 0x04
    76b2:	ea cf       	rjmp	.-44     	; 0x7688 <mcu_init+0x9a>
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    76b4:	1d 82       	std	Y+5, r1	; 0x05
    76b6:	8d 81       	ldd	r24, Y+5	; 0x05
    76b8:	88 30       	cpi	r24, 0x08	; 8
    76ba:	98 f4       	brcc	.+38     	; 0x76e2 <mcu_init+0xf4>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    76bc:	8d 81       	ldd	r24, Y+5	; 0x05
    76be:	88 2f       	mov	r24, r24
    76c0:	90 e0       	ldi	r25, 0x00	; 0
    76c2:	80 57       	subi	r24, 0x70	; 112
    76c4:	9b 4f       	sbci	r25, 0xFB	; 251
    76c6:	2d 81       	ldd	r18, Y+5	; 0x05
    76c8:	22 2f       	mov	r18, r18
    76ca:	30 e0       	ldi	r19, 0x00	; 0
    76cc:	20 57       	subi	r18, 0x70	; 112
    76ce:	3b 4f       	sbci	r19, 0xFB	; 251
    76d0:	f9 01       	movw	r30, r18
    76d2:	20 81       	ld	r18, Z
    76d4:	28 60       	ori	r18, 0x08	; 8
    76d6:	fc 01       	movw	r30, r24
    76d8:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTD + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    76da:	8d 81       	ldd	r24, Y+5	; 0x05
    76dc:	8f 5f       	subi	r24, 0xFF	; 255
    76de:	8d 83       	std	Y+5, r24	; 0x05
    76e0:	ea cf       	rjmp	.-44     	; 0x76b6 <mcu_init+0xc8>
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    76e2:	1e 82       	std	Y+6, r1	; 0x06
    76e4:	8e 81       	ldd	r24, Y+6	; 0x06
    76e6:	88 30       	cpi	r24, 0x08	; 8
    76e8:	98 f4       	brcc	.+38     	; 0x7710 <mcu_init+0x122>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    76ea:	8e 81       	ldd	r24, Y+6	; 0x06
    76ec:	88 2f       	mov	r24, r24
    76ee:	90 e0       	ldi	r25, 0x00	; 0
    76f0:	80 55       	subi	r24, 0x50	; 80
    76f2:	9b 4f       	sbci	r25, 0xFB	; 251
    76f4:	2e 81       	ldd	r18, Y+6	; 0x06
    76f6:	22 2f       	mov	r18, r18
    76f8:	30 e0       	ldi	r19, 0x00	; 0
    76fa:	20 55       	subi	r18, 0x50	; 80
    76fc:	3b 4f       	sbci	r19, 0xFB	; 251
    76fe:	f9 01       	movw	r30, r18
    7700:	20 81       	ld	r18, Z
    7702:	28 60       	ori	r18, 0x08	; 8
    7704:	fc 01       	movw	r30, r24
    7706:	20 83       	st	Z, r18

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTE + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    7708:	8e 81       	ldd	r24, Y+6	; 0x06
    770a:	8f 5f       	subi	r24, 0xFF	; 255
    770c:	8e 83       	std	Y+6, r24	; 0x06
    770e:	ea cf       	rjmp	.-44     	; 0x76e4 <mcu_init+0xf6>
		*((uint8_t *)&PORTF + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    7710:	00 00       	nop
    7712:	26 96       	adiw	r28, 0x06	; 6
    7714:	cd bf       	out	0x3d, r28	; 61
    7716:	de bf       	out	0x3e, r29	; 62
    7718:	df 91       	pop	r29
    771a:	cf 91       	pop	r28
    771c:	08 95       	ret

0000771e <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
    771e:	cf 93       	push	r28
    7720:	df 93       	push	r29
    7722:	cd b7       	in	r28, 0x3d	; 61
    7724:	de b7       	in	r29, 0x3e	; 62
	mcu_init();
    7726:	0e 94 f7 3a 	call	0x75ee	; 0x75ee <mcu_init>

	CLKCTRL_init(); /* Set CPU clock speed appropriately */
    772a:	0e 94 b3 39 	call	0x7366	; 0x7366 <CLKCTRL_init>
	TIMERB_init(); /* Timers must be initialized before utility_delay functions will work */
    772e:	0e 94 7d 69 	call	0xd2fa	; 0xd2fa <TIMERB_init>
	CPUINT_init(); /* Interrupts must also be enabled before timer interrupts will function */
    7732:	0e 94 c0 39 	call	0x7380	; 0x7380 <CPUINT_init>
	BINIO_init();
    7736:	0e 94 cf 38 	call	0x719e	; 0x719e <_Z10BINIO_initv>

	LED_set_RED_dir(PORT_DIR_OUT);
    773a:	81 e0       	ldi	r24, 0x01	; 1
    773c:	0e 94 bb 3a 	call	0x7576	; 0x7576 <_ZL15LED_set_RED_dir8port_dir>
	LED_set_RED_level(OFF);
    7740:	80 e0       	ldi	r24, 0x00	; 0
    7742:	0e 94 d9 3a 	call	0x75b2	; 0x75b2 <_ZL17LED_set_RED_levelb>
	LED_set_GREEN_dir(PORT_DIR_OUT);
    7746:	81 e0       	ldi	r24, 0x01	; 1
    7748:	0e 94 ca 3a 	call	0x7594	; 0x7594 <_ZL17LED_set_GREEN_dir8port_dir>
	LED_set_GREEN_level(OFF);
    774c:	80 e0       	ldi	r24, 0x00	; 0
    774e:	0e 94 e8 3a 	call	0x75d0	; 0x75d0 <_ZL19LED_set_GREEN_levelb>

	SLPCTRL_init();
    7752:	0e 94 75 69 	call	0xd2ea	; 0xd2ea <SLPCTRL_init>
	
	DAC0_init();
    7756:	0e 94 df 39 	call	0x73be	; 0x73be <_Z9DAC0_initv>

	linkbus_init(LB_BAUD, LINKBUS_USART);
    775a:	41 e0       	ldi	r20, 0x01	; 1
    775c:	60 e8       	ldi	r22, 0x80	; 128
    775e:	75 e2       	ldi	r23, 0x25	; 37
    7760:	80 e0       	ldi	r24, 0x00	; 0
    7762:	90 e0       	ldi	r25, 0x00	; 0
    7764:	0e 94 06 55 	call	0xaa0c	; 0xaa0c <_Z12linkbus_initm14USART_Number_t>
	serialbus_init(SB_BAUD, SERIALBUS_USART);
    7768:	44 e0       	ldi	r20, 0x04	; 4
    776a:	60 e8       	ldi	r22, 0x80	; 128
    776c:	75 e2       	ldi	r23, 0x25	; 37
    776e:	80 e0       	ldi	r24, 0x00	; 0
    7770:	90 e0       	ldi	r25, 0x00	; 0
    7772:	0e 94 b9 5d 	call	0xbb72	; 0xbb72 <serialbus_init>

	BOD_init();
    7776:	0e 94 91 39 	call	0x7322	; 0x7322 <BOD_init>
}
    777a:	00 00       	nop
    777c:	df 91       	pop	r29
    777e:	cf 91       	pop	r28
    7780:	08 95       	ret

00007782 <ds3231_init>:
				*val = second + 10 * second10 + 60 * (int32_t)minute + 600 * (int32_t)minute10 +  3600 * (int32_t)hour + 36000 * (int32_t)hour10;
			}
		}
		
		return(failure);
	}
    7782:	cf 93       	push	r28
    7784:	df 93       	push	r29
    7786:	cd b7       	in	r28, 0x3d	; 61
    7788:	de b7       	in	r29, 0x3e	; 62
    778a:	0e 94 21 4a 	call	0x9442	; 0x9442 <I2C_0_Init>
    778e:	0e 94 3f 42 	call	0x847e	; 0x847e <ds3231_responding>
    7792:	98 2f       	mov	r25, r24
    7794:	81 e0       	ldi	r24, 0x01	; 1
    7796:	89 27       	eor	r24, r25
    7798:	df 91       	pop	r29
    779a:	cf 91       	pop	r28
    779c:	08 95       	ret

0000779e <_Z7bcd2dech>:
    779e:	cf 93       	push	r28
    77a0:	df 93       	push	r29
    77a2:	00 d0       	rcall	.+0      	; 0x77a4 <_Z7bcd2dech+0x6>
    77a4:	cd b7       	in	r28, 0x3d	; 61
    77a6:	de b7       	in	r29, 0x3e	; 62
    77a8:	8a 83       	std	Y+2, r24	; 0x02
    77aa:	8a 81       	ldd	r24, Y+2	; 0x02
    77ac:	88 2f       	mov	r24, r24
    77ae:	90 e0       	ldi	r25, 0x00	; 0
    77b0:	95 95       	asr	r25
    77b2:	87 95       	ror	r24
    77b4:	95 95       	asr	r25
    77b6:	87 95       	ror	r24
    77b8:	95 95       	asr	r25
    77ba:	87 95       	ror	r24
    77bc:	95 95       	asr	r25
    77be:	87 95       	ror	r24
    77c0:	88 0f       	add	r24, r24
    77c2:	98 2f       	mov	r25, r24
    77c4:	99 0f       	add	r25, r25
    77c6:	99 0f       	add	r25, r25
    77c8:	98 0f       	add	r25, r24
    77ca:	8a 81       	ldd	r24, Y+2	; 0x02
    77cc:	8f 70       	andi	r24, 0x0F	; 15
    77ce:	89 0f       	add	r24, r25
    77d0:	89 83       	std	Y+1, r24	; 0x01
    77d2:	89 81       	ldd	r24, Y+1	; 0x01
    77d4:	0f 90       	pop	r0
    77d6:	0f 90       	pop	r0
    77d8:	df 91       	pop	r29
    77da:	cf 91       	pop	r28
    77dc:	08 95       	ret

000077de <_Z7dec2bcdh>:
    77de:	cf 93       	push	r28
    77e0:	df 93       	push	r29
    77e2:	00 d0       	rcall	.+0      	; 0x77e4 <_Z7dec2bcdh+0x6>
    77e4:	cd b7       	in	r28, 0x3d	; 61
    77e6:	de b7       	in	r29, 0x3e	; 62
    77e8:	8a 83       	std	Y+2, r24	; 0x02
    77ea:	9a 81       	ldd	r25, Y+2	; 0x02
    77ec:	8d ec       	ldi	r24, 0xCD	; 205
    77ee:	98 9f       	mul	r25, r24
    77f0:	81 2d       	mov	r24, r1
    77f2:	11 24       	eor	r1, r1
    77f4:	86 95       	lsr	r24
    77f6:	86 95       	lsr	r24
    77f8:	86 95       	lsr	r24
    77fa:	88 0f       	add	r24, r24
    77fc:	28 2f       	mov	r18, r24
    77fe:	22 0f       	add	r18, r18
    7800:	22 0f       	add	r18, r18
    7802:	82 0f       	add	r24, r18
    7804:	29 2f       	mov	r18, r25
    7806:	28 1b       	sub	r18, r24
    7808:	82 2f       	mov	r24, r18
    780a:	89 83       	std	Y+1, r24	; 0x01
    780c:	9a 81       	ldd	r25, Y+2	; 0x02
    780e:	8d ec       	ldi	r24, 0xCD	; 205
    7810:	98 9f       	mul	r25, r24
    7812:	81 2d       	mov	r24, r1
    7814:	11 24       	eor	r1, r1
    7816:	86 95       	lsr	r24
    7818:	86 95       	lsr	r24
    781a:	86 95       	lsr	r24
    781c:	88 2f       	mov	r24, r24
    781e:	90 e0       	ldi	r25, 0x00	; 0
    7820:	82 95       	swap	r24
    7822:	92 95       	swap	r25
    7824:	90 7f       	andi	r25, 0xF0	; 240
    7826:	98 27       	eor	r25, r24
    7828:	80 7f       	andi	r24, 0xF0	; 240
    782a:	98 27       	eor	r25, r24
    782c:	98 2f       	mov	r25, r24
    782e:	89 81       	ldd	r24, Y+1	; 0x01
    7830:	89 2b       	or	r24, r25
    7832:	89 83       	std	Y+1, r24	; 0x01
    7834:	89 81       	ldd	r24, Y+1	; 0x01
    7836:	0f 90       	pop	r0
    7838:	0f 90       	pop	r0
    783a:	df 91       	pop	r29
    783c:	cf 91       	pop	r28
    783e:	08 95       	ret

00007840 <_Z8char2bcdPc>:
    7840:	cf 93       	push	r28
    7842:	df 93       	push	r29
    7844:	00 d0       	rcall	.+0      	; 0x7846 <_Z8char2bcdPc+0x6>
    7846:	1f 92       	push	r1
    7848:	cd b7       	in	r28, 0x3d	; 61
    784a:	de b7       	in	r29, 0x3e	; 62
    784c:	8a 83       	std	Y+2, r24	; 0x02
    784e:	9b 83       	std	Y+3, r25	; 0x03
    7850:	8a 81       	ldd	r24, Y+2	; 0x02
    7852:	9b 81       	ldd	r25, Y+3	; 0x03
    7854:	01 96       	adiw	r24, 0x01	; 1
    7856:	fc 01       	movw	r30, r24
    7858:	20 81       	ld	r18, Z
    785a:	8a 81       	ldd	r24, Y+2	; 0x02
    785c:	9b 81       	ldd	r25, Y+3	; 0x03
    785e:	fc 01       	movw	r30, r24
    7860:	80 81       	ld	r24, Z
    7862:	80 53       	subi	r24, 0x30	; 48
    7864:	82 95       	swap	r24
    7866:	80 7f       	andi	r24, 0xF0	; 240
    7868:	82 0f       	add	r24, r18
    786a:	80 53       	subi	r24, 0x30	; 48
    786c:	89 83       	std	Y+1, r24	; 0x01
    786e:	89 81       	ldd	r24, Y+1	; 0x01
    7870:	23 96       	adiw	r28, 0x03	; 3
    7872:	cd bf       	out	0x3d, r28	; 61
    7874:	de bf       	out	0x3e, r29	; 62
    7876:	df 91       	pop	r29
    7878:	cf 91       	pop	r28
    787a:	08 95       	ret

0000787c <RTC_String2Epoch>:
    787c:	cf 93       	push	r28
    787e:	df 93       	push	r29
    7880:	cd b7       	in	r28, 0x3d	; 61
    7882:	de b7       	in	r29, 0x3e	; 62
    7884:	a3 97       	sbiw	r28, 0x23	; 35
    7886:	cd bf       	out	0x3d, r28	; 61
    7888:	de bf       	out	0x3e, r29	; 62
    788a:	88 a3       	std	Y+32, r24	; 0x20
    788c:	99 a3       	std	Y+33, r25	; 0x21
    788e:	6a a3       	std	Y+34, r22	; 0x22
    7890:	7b a3       	std	Y+35, r23	; 0x23
    7892:	19 82       	std	Y+1, r1	; 0x01
    7894:	1a 82       	std	Y+2, r1	; 0x02
    7896:	1b 82       	std	Y+3, r1	; 0x03
    7898:	1c 82       	std	Y+4, r1	; 0x04
    789a:	27 e0       	ldi	r18, 0x07	; 7
    789c:	ce 01       	movw	r24, r28
    789e:	0d 96       	adiw	r24, 0x0d	; 13
    78a0:	fc 01       	movw	r30, r24
    78a2:	32 2f       	mov	r19, r18
    78a4:	11 92       	st	Z+, r1
    78a6:	3a 95       	dec	r19
    78a8:	e9 f7       	brne	.-6      	; 0x78a4 <RTC_String2Epoch+0x28>
    78aa:	2c e0       	ldi	r18, 0x0C	; 12
    78ac:	ce 01       	movw	r24, r28
    78ae:	44 96       	adiw	r24, 0x14	; 20
    78b0:	fc 01       	movw	r30, r24
    78b2:	32 2f       	mov	r19, r18
    78b4:	11 92       	st	Z+, r1
    78b6:	3a 95       	dec	r19
    78b8:	e9 f7       	brne	.-6      	; 0x78b4 <RTC_String2Epoch+0x38>
    78ba:	84 e6       	ldi	r24, 0x64	; 100
    78bc:	90 e0       	ldi	r25, 0x00	; 0
    78be:	8e 83       	std	Y+6, r24	; 0x06
    78c0:	9f 83       	std	Y+7, r25	; 0x07
    78c2:	8a a1       	ldd	r24, Y+34	; 0x22
    78c4:	9b a1       	ldd	r25, Y+35	; 0x23
    78c6:	89 2b       	or	r24, r25
    78c8:	09 f4       	brne	.+2      	; 0x78cc <RTC_String2Epoch+0x50>
    78ca:	86 c0       	rjmp	.+268    	; 0x79d8 <RTC_String2Epoch+0x15c>
    78cc:	8a a1       	ldd	r24, Y+34	; 0x22
    78ce:	9b a1       	ldd	r25, Y+35	; 0x23
    78d0:	0a 96       	adiw	r24, 0x0a	; 10
    78d2:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    78d6:	8d 87       	std	Y+13, r24	; 0x0d
    78d8:	8a a1       	ldd	r24, Y+34	; 0x22
    78da:	9b a1       	ldd	r25, Y+35	; 0x23
    78dc:	08 96       	adiw	r24, 0x08	; 8
    78de:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    78e2:	8e 87       	std	Y+14, r24	; 0x0e
    78e4:	8a a1       	ldd	r24, Y+34	; 0x22
    78e6:	9b a1       	ldd	r25, Y+35	; 0x23
    78e8:	06 96       	adiw	r24, 0x06	; 6
    78ea:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    78ee:	8f 87       	std	Y+15, r24	; 0x0f
    78f0:	8a a1       	ldd	r24, Y+34	; 0x22
    78f2:	9b a1       	ldd	r25, Y+35	; 0x23
    78f4:	04 96       	adiw	r24, 0x04	; 4
    78f6:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    78fa:	89 8b       	std	Y+17, r24	; 0x11
    78fc:	8a a1       	ldd	r24, Y+34	; 0x22
    78fe:	9b a1       	ldd	r25, Y+35	; 0x23
    7900:	02 96       	adiw	r24, 0x02	; 2
    7902:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    7906:	8a 8b       	std	Y+18, r24	; 0x12
    7908:	8a a1       	ldd	r24, Y+34	; 0x22
    790a:	9b a1       	ldd	r25, Y+35	; 0x23
    790c:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    7910:	8b 8b       	std	Y+19, r24	; 0x13
    7912:	8f 85       	ldd	r24, Y+15	; 0x0f
    7914:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    7918:	88 87       	std	Y+8, r24	; 0x08
    791a:	8b 89       	ldd	r24, Y+19	; 0x13
    791c:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    7920:	88 2f       	mov	r24, r24
    7922:	90 e0       	ldi	r25, 0x00	; 0
    7924:	2e 81       	ldd	r18, Y+6	; 0x06
    7926:	3f 81       	ldd	r19, Y+7	; 0x07
    7928:	82 0f       	add	r24, r18
    792a:	93 1f       	adc	r25, r19
    792c:	8e 83       	std	Y+6, r24	; 0x06
    792e:	9f 83       	std	Y+7, r25	; 0x07
    7930:	8e 81       	ldd	r24, Y+6	; 0x06
    7932:	9f 81       	ldd	r25, Y+7	; 0x07
    7934:	8a 8f       	std	Y+26, r24	; 0x1a
    7936:	9b 8f       	std	Y+27, r25	; 0x1b
    7938:	8e 81       	ldd	r24, Y+6	; 0x06
    793a:	9f 81       	ldd	r25, Y+7	; 0x07
    793c:	84 59       	subi	r24, 0x94	; 148
    793e:	98 4f       	sbci	r25, 0xF8	; 248
    7940:	8e 83       	std	Y+6, r24	; 0x06
    7942:	9f 83       	std	Y+7, r25	; 0x07
    7944:	8a 89       	ldd	r24, Y+18	; 0x12
    7946:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    794a:	89 87       	std	Y+9, r24	; 0x09
    794c:	89 85       	ldd	r24, Y+9	; 0x09
    794e:	81 50       	subi	r24, 0x01	; 1
    7950:	89 8f       	std	Y+25, r24	; 0x19
    7952:	89 89       	ldd	r24, Y+17	; 0x11
    7954:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    7958:	8a 87       	std	Y+10, r24	; 0x0a
    795a:	8a 85       	ldd	r24, Y+10	; 0x0a
    795c:	8f 8b       	std	Y+23, r24	; 0x17
    795e:	1c 8e       	std	Y+28, r1	; 0x1c
    7960:	1d 8e       	std	Y+29, r1	; 0x1d
    7962:	81 e0       	ldi	r24, 0x01	; 1
    7964:	8d 83       	std	Y+5, r24	; 0x05
    7966:	9d 81       	ldd	r25, Y+5	; 0x05
    7968:	89 85       	ldd	r24, Y+9	; 0x09
    796a:	98 17       	cp	r25, r24
    796c:	88 f4       	brcc	.+34     	; 0x7990 <RTC_String2Epoch+0x114>
    796e:	8e 81       	ldd	r24, Y+6	; 0x06
    7970:	9f 81       	ldd	r25, Y+7	; 0x07
    7972:	6d 81       	ldd	r22, Y+5	; 0x05
    7974:	0e 94 54 02 	call	0x4a8	; 0x4a8 <month_length>
    7978:	2c 8d       	ldd	r18, Y+28	; 0x1c
    797a:	3d 8d       	ldd	r19, Y+29	; 0x1d
    797c:	88 2f       	mov	r24, r24
    797e:	90 e0       	ldi	r25, 0x00	; 0
    7980:	82 0f       	add	r24, r18
    7982:	93 1f       	adc	r25, r19
    7984:	8c 8f       	std	Y+28, r24	; 0x1c
    7986:	9d 8f       	std	Y+29, r25	; 0x1d
    7988:	8d 81       	ldd	r24, Y+5	; 0x05
    798a:	8f 5f       	subi	r24, 0xFF	; 255
    798c:	8d 83       	std	Y+5, r24	; 0x05
    798e:	eb cf       	rjmp	.-42     	; 0x7966 <RTC_String2Epoch+0xea>
    7990:	2c 8d       	ldd	r18, Y+28	; 0x1c
    7992:	3d 8d       	ldd	r19, Y+29	; 0x1d
    7994:	8f 89       	ldd	r24, Y+23	; 0x17
    7996:	08 2e       	mov	r0, r24
    7998:	00 0c       	add	r0, r0
    799a:	99 0b       	sbc	r25, r25
    799c:	01 97       	sbiw	r24, 0x01	; 1
    799e:	82 0f       	add	r24, r18
    79a0:	93 1f       	adc	r25, r19
    79a2:	8c 8f       	std	Y+28, r24	; 0x1c
    79a4:	9d 8f       	std	Y+29, r25	; 0x1d
    79a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    79a8:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    79ac:	8b 87       	std	Y+11, r24	; 0x0b
    79ae:	8e 85       	ldd	r24, Y+14	; 0x0e
    79b0:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    79b4:	8c 87       	std	Y+12, r24	; 0x0c
    79b6:	88 85       	ldd	r24, Y+8	; 0x08
    79b8:	8e 8b       	std	Y+22, r24	; 0x16
    79ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    79bc:	8d 8b       	std	Y+21, r24	; 0x15
    79be:	8b 85       	ldd	r24, Y+11	; 0x0b
    79c0:	8c 8b       	std	Y+20, r24	; 0x14
    79c2:	ce 01       	movw	r24, r28
    79c4:	44 96       	adiw	r24, 0x14	; 20
    79c6:	0e 94 14 3d 	call	0x7a28	; 0x7a28 <_Z14epoch_from_ltmP2tm>
    79ca:	dc 01       	movw	r26, r24
    79cc:	cb 01       	movw	r24, r22
    79ce:	89 83       	std	Y+1, r24	; 0x01
    79d0:	9a 83       	std	Y+2, r25	; 0x02
    79d2:	ab 83       	std	Y+3, r26	; 0x03
    79d4:	bc 83       	std	Y+4, r27	; 0x04
    79d6:	0a c0       	rjmp	.+20     	; 0x79ec <RTC_String2Epoch+0x170>
    79d8:	80 e0       	ldi	r24, 0x00	; 0
    79da:	90 e0       	ldi	r25, 0x00	; 0
    79dc:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <ds3231_get_epoch>
    79e0:	dc 01       	movw	r26, r24
    79e2:	cb 01       	movw	r24, r22
    79e4:	89 83       	std	Y+1, r24	; 0x01
    79e6:	9a 83       	std	Y+2, r25	; 0x02
    79e8:	ab 83       	std	Y+3, r26	; 0x03
    79ea:	bc 83       	std	Y+4, r27	; 0x04
    79ec:	88 a1       	ldd	r24, Y+32	; 0x20
    79ee:	99 a1       	ldd	r25, Y+33	; 0x21
    79f0:	89 2b       	or	r24, r25
    79f2:	71 f0       	breq	.+28     	; 0x7a10 <RTC_String2Epoch+0x194>
    79f4:	21 e0       	ldi	r18, 0x01	; 1
    79f6:	89 81       	ldd	r24, Y+1	; 0x01
    79f8:	9a 81       	ldd	r25, Y+2	; 0x02
    79fa:	ab 81       	ldd	r26, Y+3	; 0x03
    79fc:	bc 81       	ldd	r27, Y+4	; 0x04
    79fe:	89 2b       	or	r24, r25
    7a00:	8a 2b       	or	r24, r26
    7a02:	8b 2b       	or	r24, r27
    7a04:	09 f0       	breq	.+2      	; 0x7a08 <RTC_String2Epoch+0x18c>
    7a06:	20 e0       	ldi	r18, 0x00	; 0
    7a08:	88 a1       	ldd	r24, Y+32	; 0x20
    7a0a:	99 a1       	ldd	r25, Y+33	; 0x21
    7a0c:	fc 01       	movw	r30, r24
    7a0e:	20 83       	st	Z, r18
    7a10:	89 81       	ldd	r24, Y+1	; 0x01
    7a12:	9a 81       	ldd	r25, Y+2	; 0x02
    7a14:	ab 81       	ldd	r26, Y+3	; 0x03
    7a16:	bc 81       	ldd	r27, Y+4	; 0x04
    7a18:	bc 01       	movw	r22, r24
    7a1a:	cd 01       	movw	r24, r26
    7a1c:	a3 96       	adiw	r28, 0x23	; 35
    7a1e:	cd bf       	out	0x3d, r28	; 61
    7a20:	de bf       	out	0x3e, r29	; 62
    7a22:	df 91       	pop	r29
    7a24:	cf 91       	pop	r28
    7a26:	08 95       	ret

00007a28 <_Z14epoch_from_ltmP2tm>:
    7a28:	ef 92       	push	r14
    7a2a:	ff 92       	push	r15
    7a2c:	0f 93       	push	r16
    7a2e:	1f 93       	push	r17
    7a30:	cf 93       	push	r28
    7a32:	df 93       	push	r29
    7a34:	cd b7       	in	r28, 0x3d	; 61
    7a36:	de b7       	in	r29, 0x3e	; 62
    7a38:	26 97       	sbiw	r28, 0x06	; 6
    7a3a:	cd bf       	out	0x3d, r28	; 61
    7a3c:	de bf       	out	0x3e, r29	; 62
    7a3e:	8d 83       	std	Y+5, r24	; 0x05
    7a40:	9e 83       	std	Y+6, r25	; 0x06
    7a42:	8d 81       	ldd	r24, Y+5	; 0x05
    7a44:	9e 81       	ldd	r25, Y+6	; 0x06
    7a46:	fc 01       	movw	r30, r24
    7a48:	80 81       	ld	r24, Z
    7a4a:	28 2f       	mov	r18, r24
    7a4c:	88 0f       	add	r24, r24
    7a4e:	33 0b       	sbc	r19, r19
    7a50:	8d 81       	ldd	r24, Y+5	; 0x05
    7a52:	9e 81       	ldd	r25, Y+6	; 0x06
    7a54:	fc 01       	movw	r30, r24
    7a56:	81 81       	ldd	r24, Z+1	; 0x01
    7a58:	48 2f       	mov	r20, r24
    7a5a:	88 0f       	add	r24, r24
    7a5c:	55 0b       	sbc	r21, r21
    7a5e:	6c e3       	ldi	r22, 0x3C	; 60
    7a60:	64 9f       	mul	r22, r20
    7a62:	c0 01       	movw	r24, r0
    7a64:	65 9f       	mul	r22, r21
    7a66:	90 0d       	add	r25, r0
    7a68:	11 24       	eor	r1, r1
    7a6a:	82 0f       	add	r24, r18
    7a6c:	93 1f       	adc	r25, r19
    7a6e:	7c 01       	movw	r14, r24
    7a70:	99 0f       	add	r25, r25
    7a72:	00 0b       	sbc	r16, r16
    7a74:	11 0b       	sbc	r17, r17
    7a76:	8d 81       	ldd	r24, Y+5	; 0x05
    7a78:	9e 81       	ldd	r25, Y+6	; 0x06
    7a7a:	fc 01       	movw	r30, r24
    7a7c:	82 81       	ldd	r24, Z+2	; 0x02
    7a7e:	28 2f       	mov	r18, r24
    7a80:	88 0f       	add	r24, r24
    7a82:	33 0b       	sbc	r19, r19
    7a84:	44 0b       	sbc	r20, r20
    7a86:	55 0b       	sbc	r21, r21
    7a88:	80 e1       	ldi	r24, 0x10	; 16
    7a8a:	9e e0       	ldi	r25, 0x0E	; 14
    7a8c:	dc 01       	movw	r26, r24
    7a8e:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    7a92:	dc 01       	movw	r26, r24
    7a94:	cb 01       	movw	r24, r22
    7a96:	e8 0e       	add	r14, r24
    7a98:	f9 1e       	adc	r15, r25
    7a9a:	0a 1f       	adc	r16, r26
    7a9c:	1b 1f       	adc	r17, r27
    7a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    7aa0:	9e 81       	ldd	r25, Y+6	; 0x06
    7aa2:	fc 01       	movw	r30, r24
    7aa4:	80 85       	ldd	r24, Z+8	; 0x08
    7aa6:	91 85       	ldd	r25, Z+9	; 0x09
    7aa8:	09 2e       	mov	r0, r25
    7aaa:	00 0c       	add	r0, r0
    7aac:	aa 0b       	sbc	r26, r26
    7aae:	bb 0b       	sbc	r27, r27
    7ab0:	9c 01       	movw	r18, r24
    7ab2:	ad 01       	movw	r20, r26
    7ab4:	60 e8       	ldi	r22, 0x80	; 128
    7ab6:	71 e5       	ldi	r23, 0x51	; 81
    7ab8:	81 e0       	ldi	r24, 0x01	; 1
    7aba:	90 e0       	ldi	r25, 0x00	; 0
    7abc:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7ac0:	dc 01       	movw	r26, r24
    7ac2:	cb 01       	movw	r24, r22
    7ac4:	e8 0e       	add	r14, r24
    7ac6:	f9 1e       	adc	r15, r25
    7ac8:	0a 1f       	adc	r16, r26
    7aca:	1b 1f       	adc	r17, r27
    7acc:	8d 81       	ldd	r24, Y+5	; 0x05
    7ace:	9e 81       	ldd	r25, Y+6	; 0x06
    7ad0:	fc 01       	movw	r30, r24
    7ad2:	86 81       	ldd	r24, Z+6	; 0x06
    7ad4:	97 81       	ldd	r25, Z+7	; 0x07
    7ad6:	86 54       	subi	r24, 0x46	; 70
    7ad8:	91 09       	sbc	r25, r1
    7ada:	09 2e       	mov	r0, r25
    7adc:	00 0c       	add	r0, r0
    7ade:	aa 0b       	sbc	r26, r26
    7ae0:	bb 0b       	sbc	r27, r27
    7ae2:	9c 01       	movw	r18, r24
    7ae4:	ad 01       	movw	r20, r26
    7ae6:	60 e8       	ldi	r22, 0x80	; 128
    7ae8:	73 e3       	ldi	r23, 0x33	; 51
    7aea:	81 ee       	ldi	r24, 0xE1	; 225
    7aec:	91 e0       	ldi	r25, 0x01	; 1
    7aee:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7af2:	dc 01       	movw	r26, r24
    7af4:	cb 01       	movw	r24, r22
    7af6:	e8 0e       	add	r14, r24
    7af8:	f9 1e       	adc	r15, r25
    7afa:	0a 1f       	adc	r16, r26
    7afc:	1b 1f       	adc	r17, r27
    7afe:	8d 81       	ldd	r24, Y+5	; 0x05
    7b00:	9e 81       	ldd	r25, Y+6	; 0x06
    7b02:	fc 01       	movw	r30, r24
    7b04:	86 81       	ldd	r24, Z+6	; 0x06
    7b06:	97 81       	ldd	r25, Z+7	; 0x07
    7b08:	85 54       	subi	r24, 0x45	; 69
    7b0a:	91 09       	sbc	r25, r1
    7b0c:	99 23       	and	r25, r25
    7b0e:	0c f4       	brge	.+2      	; 0x7b12 <_Z14epoch_from_ltmP2tm+0xea>
    7b10:	03 96       	adiw	r24, 0x03	; 3
    7b12:	95 95       	asr	r25
    7b14:	87 95       	ror	r24
    7b16:	95 95       	asr	r25
    7b18:	87 95       	ror	r24
    7b1a:	09 2e       	mov	r0, r25
    7b1c:	00 0c       	add	r0, r0
    7b1e:	aa 0b       	sbc	r26, r26
    7b20:	bb 0b       	sbc	r27, r27
    7b22:	9c 01       	movw	r18, r24
    7b24:	ad 01       	movw	r20, r26
    7b26:	60 e8       	ldi	r22, 0x80	; 128
    7b28:	71 e5       	ldi	r23, 0x51	; 81
    7b2a:	81 e0       	ldi	r24, 0x01	; 1
    7b2c:	90 e0       	ldi	r25, 0x00	; 0
    7b2e:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7b32:	dc 01       	movw	r26, r24
    7b34:	cb 01       	movw	r24, r22
    7b36:	e8 0e       	add	r14, r24
    7b38:	f9 1e       	adc	r15, r25
    7b3a:	0a 1f       	adc	r16, r26
    7b3c:	1b 1f       	adc	r17, r27
    7b3e:	8d 81       	ldd	r24, Y+5	; 0x05
    7b40:	9e 81       	ldd	r25, Y+6	; 0x06
    7b42:	fc 01       	movw	r30, r24
    7b44:	86 81       	ldd	r24, Z+6	; 0x06
    7b46:	97 81       	ldd	r25, Z+7	; 0x07
    7b48:	01 97       	sbiw	r24, 0x01	; 1
    7b4a:	24 e6       	ldi	r18, 0x64	; 100
    7b4c:	30 e0       	ldi	r19, 0x00	; 0
    7b4e:	b9 01       	movw	r22, r18
    7b50:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
    7b54:	cb 01       	movw	r24, r22
    7b56:	09 2e       	mov	r0, r25
    7b58:	00 0c       	add	r0, r0
    7b5a:	aa 0b       	sbc	r26, r26
    7b5c:	bb 0b       	sbc	r27, r27
    7b5e:	9c 01       	movw	r18, r24
    7b60:	ad 01       	movw	r20, r26
    7b62:	60 e8       	ldi	r22, 0x80	; 128
    7b64:	7e ea       	ldi	r23, 0xAE	; 174
    7b66:	8e ef       	ldi	r24, 0xFE	; 254
    7b68:	9f ef       	ldi	r25, 0xFF	; 255
    7b6a:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7b6e:	dc 01       	movw	r26, r24
    7b70:	cb 01       	movw	r24, r22
    7b72:	e8 0e       	add	r14, r24
    7b74:	f9 1e       	adc	r15, r25
    7b76:	0a 1f       	adc	r16, r26
    7b78:	1b 1f       	adc	r17, r27
    7b7a:	8d 81       	ldd	r24, Y+5	; 0x05
    7b7c:	9e 81       	ldd	r25, Y+6	; 0x06
    7b7e:	fc 01       	movw	r30, r24
    7b80:	86 81       	ldd	r24, Z+6	; 0x06
    7b82:	97 81       	ldd	r25, Z+7	; 0x07
    7b84:	85 5d       	subi	r24, 0xD5	; 213
    7b86:	9e 4f       	sbci	r25, 0xFE	; 254
    7b88:	20 e9       	ldi	r18, 0x90	; 144
    7b8a:	31 e0       	ldi	r19, 0x01	; 1
    7b8c:	b9 01       	movw	r22, r18
    7b8e:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
    7b92:	cb 01       	movw	r24, r22
    7b94:	09 2e       	mov	r0, r25
    7b96:	00 0c       	add	r0, r0
    7b98:	aa 0b       	sbc	r26, r26
    7b9a:	bb 0b       	sbc	r27, r27
    7b9c:	9c 01       	movw	r18, r24
    7b9e:	ad 01       	movw	r20, r26
    7ba0:	60 e8       	ldi	r22, 0x80	; 128
    7ba2:	71 e5       	ldi	r23, 0x51	; 81
    7ba4:	81 e0       	ldi	r24, 0x01	; 1
    7ba6:	90 e0       	ldi	r25, 0x00	; 0
    7ba8:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7bac:	dc 01       	movw	r26, r24
    7bae:	cb 01       	movw	r24, r22
    7bb0:	8e 0d       	add	r24, r14
    7bb2:	9f 1d       	adc	r25, r15
    7bb4:	a0 1f       	adc	r26, r16
    7bb6:	b1 1f       	adc	r27, r17
    7bb8:	89 83       	std	Y+1, r24	; 0x01
    7bba:	9a 83       	std	Y+2, r25	; 0x02
    7bbc:	ab 83       	std	Y+3, r26	; 0x03
    7bbe:	bc 83       	std	Y+4, r27	; 0x04
    7bc0:	89 81       	ldd	r24, Y+1	; 0x01
    7bc2:	9a 81       	ldd	r25, Y+2	; 0x02
    7bc4:	ab 81       	ldd	r26, Y+3	; 0x03
    7bc6:	bc 81       	ldd	r27, Y+4	; 0x04
    7bc8:	bc 01       	movw	r22, r24
    7bca:	cd 01       	movw	r24, r26
    7bcc:	26 96       	adiw	r28, 0x06	; 6
    7bce:	cd bf       	out	0x3d, r28	; 61
    7bd0:	de bf       	out	0x3e, r29	; 62
    7bd2:	df 91       	pop	r29
    7bd4:	cf 91       	pop	r28
    7bd6:	1f 91       	pop	r17
    7bd8:	0f 91       	pop	r16
    7bda:	ff 90       	pop	r15
    7bdc:	ef 90       	pop	r14
    7bde:	08 95       	ret

00007be0 <ds3231_get_epoch>:
    7be0:	ef 92       	push	r14
    7be2:	ff 92       	push	r15
    7be4:	0f 93       	push	r16
    7be6:	1f 93       	push	r17
    7be8:	cf 93       	push	r28
    7bea:	df 93       	push	r29
    7bec:	cd b7       	in	r28, 0x3d	; 61
    7bee:	de b7       	in	r29, 0x3e	; 62
    7bf0:	a5 97       	sbiw	r28, 0x25	; 37
    7bf2:	cd bf       	out	0x3d, r28	; 61
    7bf4:	de bf       	out	0x3e, r29	; 62
    7bf6:	8c a3       	std	Y+36, r24	; 0x24
    7bf8:	9d a3       	std	Y+37, r25	; 0x25
    7bfa:	8a e0       	ldi	r24, 0x0A	; 10
    7bfc:	89 83       	std	Y+1, r24	; 0x01
    7bfe:	1a 82       	std	Y+2, r1	; 0x02
    7c00:	1b 82       	std	Y+3, r1	; 0x03
    7c02:	1c 82       	std	Y+4, r1	; 0x04
    7c04:	1d 82       	std	Y+5, r1	; 0x05
    7c06:	27 e0       	ldi	r18, 0x07	; 7
    7c08:	ce 01       	movw	r24, r28
    7c0a:	41 96       	adiw	r24, 0x11	; 17
    7c0c:	fc 01       	movw	r30, r24
    7c0e:	32 2f       	mov	r19, r18
    7c10:	11 92       	st	Z+, r1
    7c12:	3a 95       	dec	r19
    7c14:	e9 f7       	brne	.-6      	; 0x7c10 <ds3231_get_epoch+0x30>
    7c16:	89 81       	ldd	r24, Y+1	; 0x01
    7c18:	9f ef       	ldi	r25, 0xFF	; 255
    7c1a:	98 0f       	add	r25, r24
    7c1c:	99 83       	std	Y+1, r25	; 0x01
    7c1e:	88 23       	and	r24, r24
    7c20:	99 f0       	breq	.+38     	; 0x7c48 <ds3231_get_epoch+0x68>
    7c22:	ce 01       	movw	r24, r28
    7c24:	41 96       	adiw	r24, 0x11	; 17
    7c26:	27 e0       	ldi	r18, 0x07	; 7
    7c28:	ac 01       	movw	r20, r24
    7c2a:	60 e0       	ldi	r22, 0x00	; 0
    7c2c:	80 ed       	ldi	r24, 0xD0	; 208
    7c2e:	0e 94 61 4b 	call	0x96c2	; 0x96c2 <I2C_0_GetData>
    7c32:	98 2f       	mov	r25, r24
    7c34:	81 e0       	ldi	r24, 0x01	; 1
    7c36:	97 30       	cpi	r25, 0x07	; 7
    7c38:	09 f4       	brne	.+2      	; 0x7c3c <ds3231_get_epoch+0x5c>
    7c3a:	80 e0       	ldi	r24, 0x00	; 0
    7c3c:	8e 83       	std	Y+6, r24	; 0x06
    7c3e:	8e 81       	ldd	r24, Y+6	; 0x06
    7c40:	88 23       	and	r24, r24
    7c42:	11 f0       	breq	.+4      	; 0x7c48 <ds3231_get_epoch+0x68>
    7c44:	81 e0       	ldi	r24, 0x01	; 1
    7c46:	01 c0       	rjmp	.+2      	; 0x7c4a <ds3231_get_epoch+0x6a>
    7c48:	80 e0       	ldi	r24, 0x00	; 0
    7c4a:	88 23       	and	r24, r24
    7c4c:	09 f0       	breq	.+2      	; 0x7c50 <ds3231_get_epoch+0x70>
    7c4e:	e3 cf       	rjmp	.-58     	; 0x7c16 <ds3231_get_epoch+0x36>
    7c50:	9e 81       	ldd	r25, Y+6	; 0x06
    7c52:	81 e0       	ldi	r24, 0x01	; 1
    7c54:	89 27       	eor	r24, r25
    7c56:	88 23       	and	r24, r24
    7c58:	09 f4       	brne	.+2      	; 0x7c5c <ds3231_get_epoch+0x7c>
    7c5a:	7e c1       	rjmp	.+764    	; 0x7f58 <ds3231_get_epoch+0x378>
    7c5c:	2c e0       	ldi	r18, 0x0C	; 12
    7c5e:	ce 01       	movw	r24, r28
    7c60:	48 96       	adiw	r24, 0x18	; 24
    7c62:	fc 01       	movw	r30, r24
    7c64:	32 2f       	mov	r19, r18
    7c66:	11 92       	st	Z+, r1
    7c68:	3a 95       	dec	r19
    7c6a:	e9 f7       	brne	.-6      	; 0x7c66 <ds3231_get_epoch+0x86>
    7c6c:	84 e6       	ldi	r24, 0x64	; 100
    7c6e:	90 e0       	ldi	r25, 0x00	; 0
    7c70:	89 87       	std	Y+9, r24	; 0x09
    7c72:	9a 87       	std	Y+10, r25	; 0x0a
    7c74:	8f 89       	ldd	r24, Y+23	; 0x17
    7c76:	88 2f       	mov	r24, r24
    7c78:	90 e0       	ldi	r25, 0x00	; 0
    7c7a:	8f 70       	andi	r24, 0x0F	; 15
    7c7c:	99 27       	eor	r25, r25
    7c7e:	29 85       	ldd	r18, Y+9	; 0x09
    7c80:	3a 85       	ldd	r19, Y+10	; 0x0a
    7c82:	82 0f       	add	r24, r18
    7c84:	93 1f       	adc	r25, r19
    7c86:	89 87       	std	Y+9, r24	; 0x09
    7c88:	9a 87       	std	Y+10, r25	; 0x0a
    7c8a:	8f 89       	ldd	r24, Y+23	; 0x17
    7c8c:	82 95       	swap	r24
    7c8e:	8f 70       	andi	r24, 0x0F	; 15
    7c90:	88 2f       	mov	r24, r24
    7c92:	90 e0       	ldi	r25, 0x00	; 0
    7c94:	88 0f       	add	r24, r24
    7c96:	99 1f       	adc	r25, r25
    7c98:	9c 01       	movw	r18, r24
    7c9a:	22 0f       	add	r18, r18
    7c9c:	33 1f       	adc	r19, r19
    7c9e:	22 0f       	add	r18, r18
    7ca0:	33 1f       	adc	r19, r19
    7ca2:	82 0f       	add	r24, r18
    7ca4:	93 1f       	adc	r25, r19
    7ca6:	29 85       	ldd	r18, Y+9	; 0x09
    7ca8:	3a 85       	ldd	r19, Y+10	; 0x0a
    7caa:	82 0f       	add	r24, r18
    7cac:	93 1f       	adc	r25, r19
    7cae:	89 87       	std	Y+9, r24	; 0x09
    7cb0:	9a 87       	std	Y+10, r25	; 0x0a
    7cb2:	89 85       	ldd	r24, Y+9	; 0x09
    7cb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    7cb6:	8e 8f       	std	Y+30, r24	; 0x1e
    7cb8:	9f 8f       	std	Y+31, r25	; 0x1f
    7cba:	89 85       	ldd	r24, Y+9	; 0x09
    7cbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    7cbe:	84 59       	subi	r24, 0x94	; 148
    7cc0:	98 4f       	sbci	r25, 0xF8	; 248
    7cc2:	89 87       	std	Y+9, r24	; 0x09
    7cc4:	9a 87       	std	Y+10, r25	; 0x0a
    7cc6:	8e 89       	ldd	r24, Y+22	; 0x16
    7cc8:	8f 70       	andi	r24, 0x0F	; 15
    7cca:	8b 87       	std	Y+11, r24	; 0x0b
    7ccc:	8e 89       	ldd	r24, Y+22	; 0x16
    7cce:	82 95       	swap	r24
    7cd0:	8f 70       	andi	r24, 0x0F	; 15
    7cd2:	88 0f       	add	r24, r24
    7cd4:	98 2f       	mov	r25, r24
    7cd6:	99 0f       	add	r25, r25
    7cd8:	99 0f       	add	r25, r25
    7cda:	89 0f       	add	r24, r25
    7cdc:	9b 85       	ldd	r25, Y+11	; 0x0b
    7cde:	89 0f       	add	r24, r25
    7ce0:	8b 87       	std	Y+11, r24	; 0x0b
    7ce2:	8b 85       	ldd	r24, Y+11	; 0x0b
    7ce4:	81 50       	subi	r24, 0x01	; 1
    7ce6:	8d 8f       	std	Y+29, r24	; 0x1d
    7ce8:	8d 89       	ldd	r24, Y+21	; 0x15
    7cea:	8f 70       	andi	r24, 0x0F	; 15
    7cec:	8c 87       	std	Y+12, r24	; 0x0c
    7cee:	8d 89       	ldd	r24, Y+21	; 0x15
    7cf0:	82 95       	swap	r24
    7cf2:	8f 70       	andi	r24, 0x0F	; 15
    7cf4:	88 0f       	add	r24, r24
    7cf6:	98 2f       	mov	r25, r24
    7cf8:	99 0f       	add	r25, r25
    7cfa:	99 0f       	add	r25, r25
    7cfc:	89 0f       	add	r24, r25
    7cfe:	9c 85       	ldd	r25, Y+12	; 0x0c
    7d00:	89 0f       	add	r24, r25
    7d02:	8c 87       	std	Y+12, r24	; 0x0c
    7d04:	8c 85       	ldd	r24, Y+12	; 0x0c
    7d06:	8b 8f       	std	Y+27, r24	; 0x1b
    7d08:	18 a2       	std	Y+32, r1	; 0x20
    7d0a:	19 a2       	std	Y+33, r1	; 0x21
    7d0c:	81 e0       	ldi	r24, 0x01	; 1
    7d0e:	88 87       	std	Y+8, r24	; 0x08
    7d10:	98 85       	ldd	r25, Y+8	; 0x08
    7d12:	8b 85       	ldd	r24, Y+11	; 0x0b
    7d14:	98 17       	cp	r25, r24
    7d16:	88 f4       	brcc	.+34     	; 0x7d3a <ds3231_get_epoch+0x15a>
    7d18:	89 85       	ldd	r24, Y+9	; 0x09
    7d1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    7d1c:	68 85       	ldd	r22, Y+8	; 0x08
    7d1e:	0e 94 54 02 	call	0x4a8	; 0x4a8 <month_length>
    7d22:	28 a1       	ldd	r18, Y+32	; 0x20
    7d24:	39 a1       	ldd	r19, Y+33	; 0x21
    7d26:	88 2f       	mov	r24, r24
    7d28:	90 e0       	ldi	r25, 0x00	; 0
    7d2a:	82 0f       	add	r24, r18
    7d2c:	93 1f       	adc	r25, r19
    7d2e:	88 a3       	std	Y+32, r24	; 0x20
    7d30:	99 a3       	std	Y+33, r25	; 0x21
    7d32:	88 85       	ldd	r24, Y+8	; 0x08
    7d34:	8f 5f       	subi	r24, 0xFF	; 255
    7d36:	88 87       	std	Y+8, r24	; 0x08
    7d38:	eb cf       	rjmp	.-42     	; 0x7d10 <ds3231_get_epoch+0x130>
    7d3a:	28 a1       	ldd	r18, Y+32	; 0x20
    7d3c:	39 a1       	ldd	r19, Y+33	; 0x21
    7d3e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    7d40:	08 2e       	mov	r0, r24
    7d42:	00 0c       	add	r0, r0
    7d44:	99 0b       	sbc	r25, r25
    7d46:	01 97       	sbiw	r24, 0x01	; 1
    7d48:	82 0f       	add	r24, r18
    7d4a:	93 1f       	adc	r25, r19
    7d4c:	88 a3       	std	Y+32, r24	; 0x20
    7d4e:	99 a3       	std	Y+33, r25	; 0x21
    7d50:	89 89       	ldd	r24, Y+17	; 0x11
    7d52:	82 95       	swap	r24
    7d54:	8f 70       	andi	r24, 0x0F	; 15
    7d56:	88 0f       	add	r24, r24
    7d58:	98 2f       	mov	r25, r24
    7d5a:	99 0f       	add	r25, r25
    7d5c:	99 0f       	add	r25, r25
    7d5e:	89 0f       	add	r24, r25
    7d60:	8d 87       	std	Y+13, r24	; 0x0d
    7d62:	89 89       	ldd	r24, Y+17	; 0x11
    7d64:	8f 70       	andi	r24, 0x0F	; 15
    7d66:	9d 85       	ldd	r25, Y+13	; 0x0d
    7d68:	89 0f       	add	r24, r25
    7d6a:	8d 87       	std	Y+13, r24	; 0x0d
    7d6c:	8a 89       	ldd	r24, Y+18	; 0x12
    7d6e:	82 95       	swap	r24
    7d70:	8f 70       	andi	r24, 0x0F	; 15
    7d72:	88 0f       	add	r24, r24
    7d74:	98 2f       	mov	r25, r24
    7d76:	99 0f       	add	r25, r25
    7d78:	99 0f       	add	r25, r25
    7d7a:	89 0f       	add	r24, r25
    7d7c:	8e 87       	std	Y+14, r24	; 0x0e
    7d7e:	8a 89       	ldd	r24, Y+18	; 0x12
    7d80:	8f 70       	andi	r24, 0x0F	; 15
    7d82:	9e 85       	ldd	r25, Y+14	; 0x0e
    7d84:	89 0f       	add	r24, r25
    7d86:	8e 87       	std	Y+14, r24	; 0x0e
    7d88:	8b 89       	ldd	r24, Y+19	; 0x13
    7d8a:	88 2f       	mov	r24, r24
    7d8c:	90 e0       	ldi	r25, 0x00	; 0
    7d8e:	80 72       	andi	r24, 0x20	; 32
    7d90:	99 27       	eor	r25, r25
    7d92:	21 e0       	ldi	r18, 0x01	; 1
    7d94:	89 2b       	or	r24, r25
    7d96:	09 f4       	brne	.+2      	; 0x7d9a <ds3231_get_epoch+0x1ba>
    7d98:	20 e0       	ldi	r18, 0x00	; 0
    7d9a:	2f 87       	std	Y+15, r18	; 0x0f
    7d9c:	8b 89       	ldd	r24, Y+19	; 0x13
    7d9e:	88 2f       	mov	r24, r24
    7da0:	90 e0       	ldi	r25, 0x00	; 0
    7da2:	95 95       	asr	r25
    7da4:	87 95       	ror	r24
    7da6:	95 95       	asr	r25
    7da8:	87 95       	ror	r24
    7daa:	95 95       	asr	r25
    7dac:	87 95       	ror	r24
    7dae:	95 95       	asr	r25
    7db0:	87 95       	ror	r24
    7db2:	81 70       	andi	r24, 0x01	; 1
    7db4:	88 0f       	add	r24, r24
    7db6:	98 2f       	mov	r25, r24
    7db8:	99 0f       	add	r25, r25
    7dba:	99 0f       	add	r25, r25
    7dbc:	89 0f       	add	r24, r25
    7dbe:	8f 83       	std	Y+7, r24	; 0x07
    7dc0:	8b 89       	ldd	r24, Y+19	; 0x13
    7dc2:	8f 70       	andi	r24, 0x0F	; 15
    7dc4:	9f 81       	ldd	r25, Y+7	; 0x07
    7dc6:	89 0f       	add	r24, r25
    7dc8:	8f 83       	std	Y+7, r24	; 0x07
    7dca:	8b 89       	ldd	r24, Y+19	; 0x13
    7dcc:	88 2f       	mov	r24, r24
    7dce:	90 e0       	ldi	r25, 0x00	; 0
    7dd0:	80 74       	andi	r24, 0x40	; 64
    7dd2:	99 27       	eor	r25, r25
    7dd4:	21 e0       	ldi	r18, 0x01	; 1
    7dd6:	89 2b       	or	r24, r25
    7dd8:	09 f4       	brne	.+2      	; 0x7ddc <ds3231_get_epoch+0x1fc>
    7dda:	20 e0       	ldi	r18, 0x00	; 0
    7ddc:	28 8b       	std	Y+16, r18	; 0x10
    7dde:	88 89       	ldd	r24, Y+16	; 0x10
    7de0:	88 23       	and	r24, r24
    7de2:	39 f0       	breq	.+14     	; 0x7df2 <ds3231_get_epoch+0x212>
    7de4:	8f 85       	ldd	r24, Y+15	; 0x0f
    7de6:	88 23       	and	r24, r24
    7de8:	51 f0       	breq	.+20     	; 0x7dfe <ds3231_get_epoch+0x21e>
    7dea:	8f 81       	ldd	r24, Y+7	; 0x07
    7dec:	84 5f       	subi	r24, 0xF4	; 244
    7dee:	8f 83       	std	Y+7, r24	; 0x07
    7df0:	06 c0       	rjmp	.+12     	; 0x7dfe <ds3231_get_epoch+0x21e>
    7df2:	8f 85       	ldd	r24, Y+15	; 0x0f
    7df4:	88 23       	and	r24, r24
    7df6:	19 f0       	breq	.+6      	; 0x7dfe <ds3231_get_epoch+0x21e>
    7df8:	8f 81       	ldd	r24, Y+7	; 0x07
    7dfa:	8c 5e       	subi	r24, 0xEC	; 236
    7dfc:	8f 83       	std	Y+7, r24	; 0x07
    7dfe:	8f 81       	ldd	r24, Y+7	; 0x07
    7e00:	8a 8f       	std	Y+26, r24	; 0x1a
    7e02:	8e 85       	ldd	r24, Y+14	; 0x0e
    7e04:	89 8f       	std	Y+25, r24	; 0x19
    7e06:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e08:	88 8f       	std	Y+24, r24	; 0x18
    7e0a:	88 8d       	ldd	r24, Y+24	; 0x18
    7e0c:	28 2f       	mov	r18, r24
    7e0e:	88 0f       	add	r24, r24
    7e10:	33 0b       	sbc	r19, r19
    7e12:	89 8d       	ldd	r24, Y+25	; 0x19
    7e14:	48 2f       	mov	r20, r24
    7e16:	88 0f       	add	r24, r24
    7e18:	55 0b       	sbc	r21, r21
    7e1a:	6c e3       	ldi	r22, 0x3C	; 60
    7e1c:	64 9f       	mul	r22, r20
    7e1e:	c0 01       	movw	r24, r0
    7e20:	65 9f       	mul	r22, r21
    7e22:	90 0d       	add	r25, r0
    7e24:	11 24       	eor	r1, r1
    7e26:	82 0f       	add	r24, r18
    7e28:	93 1f       	adc	r25, r19
    7e2a:	7c 01       	movw	r14, r24
    7e2c:	99 0f       	add	r25, r25
    7e2e:	00 0b       	sbc	r16, r16
    7e30:	11 0b       	sbc	r17, r17
    7e32:	8a 8d       	ldd	r24, Y+26	; 0x1a
    7e34:	28 2f       	mov	r18, r24
    7e36:	88 0f       	add	r24, r24
    7e38:	33 0b       	sbc	r19, r19
    7e3a:	44 0b       	sbc	r20, r20
    7e3c:	55 0b       	sbc	r21, r21
    7e3e:	80 e1       	ldi	r24, 0x10	; 16
    7e40:	9e e0       	ldi	r25, 0x0E	; 14
    7e42:	dc 01       	movw	r26, r24
    7e44:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    7e48:	dc 01       	movw	r26, r24
    7e4a:	cb 01       	movw	r24, r22
    7e4c:	e8 0e       	add	r14, r24
    7e4e:	f9 1e       	adc	r15, r25
    7e50:	0a 1f       	adc	r16, r26
    7e52:	1b 1f       	adc	r17, r27
    7e54:	88 a1       	ldd	r24, Y+32	; 0x20
    7e56:	99 a1       	ldd	r25, Y+33	; 0x21
    7e58:	09 2e       	mov	r0, r25
    7e5a:	00 0c       	add	r0, r0
    7e5c:	aa 0b       	sbc	r26, r26
    7e5e:	bb 0b       	sbc	r27, r27
    7e60:	9c 01       	movw	r18, r24
    7e62:	ad 01       	movw	r20, r26
    7e64:	60 e8       	ldi	r22, 0x80	; 128
    7e66:	71 e5       	ldi	r23, 0x51	; 81
    7e68:	81 e0       	ldi	r24, 0x01	; 1
    7e6a:	90 e0       	ldi	r25, 0x00	; 0
    7e6c:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7e70:	dc 01       	movw	r26, r24
    7e72:	cb 01       	movw	r24, r22
    7e74:	e8 0e       	add	r14, r24
    7e76:	f9 1e       	adc	r15, r25
    7e78:	0a 1f       	adc	r16, r26
    7e7a:	1b 1f       	adc	r17, r27
    7e7c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7e7e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7e80:	86 54       	subi	r24, 0x46	; 70
    7e82:	91 09       	sbc	r25, r1
    7e84:	09 2e       	mov	r0, r25
    7e86:	00 0c       	add	r0, r0
    7e88:	aa 0b       	sbc	r26, r26
    7e8a:	bb 0b       	sbc	r27, r27
    7e8c:	9c 01       	movw	r18, r24
    7e8e:	ad 01       	movw	r20, r26
    7e90:	60 e8       	ldi	r22, 0x80	; 128
    7e92:	73 e3       	ldi	r23, 0x33	; 51
    7e94:	81 ee       	ldi	r24, 0xE1	; 225
    7e96:	91 e0       	ldi	r25, 0x01	; 1
    7e98:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7e9c:	dc 01       	movw	r26, r24
    7e9e:	cb 01       	movw	r24, r22
    7ea0:	e8 0e       	add	r14, r24
    7ea2:	f9 1e       	adc	r15, r25
    7ea4:	0a 1f       	adc	r16, r26
    7ea6:	1b 1f       	adc	r17, r27
    7ea8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7eaa:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7eac:	85 54       	subi	r24, 0x45	; 69
    7eae:	91 09       	sbc	r25, r1
    7eb0:	99 23       	and	r25, r25
    7eb2:	0c f4       	brge	.+2      	; 0x7eb6 <ds3231_get_epoch+0x2d6>
    7eb4:	03 96       	adiw	r24, 0x03	; 3
    7eb6:	95 95       	asr	r25
    7eb8:	87 95       	ror	r24
    7eba:	95 95       	asr	r25
    7ebc:	87 95       	ror	r24
    7ebe:	09 2e       	mov	r0, r25
    7ec0:	00 0c       	add	r0, r0
    7ec2:	aa 0b       	sbc	r26, r26
    7ec4:	bb 0b       	sbc	r27, r27
    7ec6:	9c 01       	movw	r18, r24
    7ec8:	ad 01       	movw	r20, r26
    7eca:	60 e8       	ldi	r22, 0x80	; 128
    7ecc:	71 e5       	ldi	r23, 0x51	; 81
    7ece:	81 e0       	ldi	r24, 0x01	; 1
    7ed0:	90 e0       	ldi	r25, 0x00	; 0
    7ed2:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7ed6:	dc 01       	movw	r26, r24
    7ed8:	cb 01       	movw	r24, r22
    7eda:	e8 0e       	add	r14, r24
    7edc:	f9 1e       	adc	r15, r25
    7ede:	0a 1f       	adc	r16, r26
    7ee0:	1b 1f       	adc	r17, r27
    7ee2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7ee4:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7ee6:	01 97       	sbiw	r24, 0x01	; 1
    7ee8:	24 e6       	ldi	r18, 0x64	; 100
    7eea:	30 e0       	ldi	r19, 0x00	; 0
    7eec:	b9 01       	movw	r22, r18
    7eee:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
    7ef2:	cb 01       	movw	r24, r22
    7ef4:	09 2e       	mov	r0, r25
    7ef6:	00 0c       	add	r0, r0
    7ef8:	aa 0b       	sbc	r26, r26
    7efa:	bb 0b       	sbc	r27, r27
    7efc:	9c 01       	movw	r18, r24
    7efe:	ad 01       	movw	r20, r26
    7f00:	60 e8       	ldi	r22, 0x80	; 128
    7f02:	7e ea       	ldi	r23, 0xAE	; 174
    7f04:	8e ef       	ldi	r24, 0xFE	; 254
    7f06:	9f ef       	ldi	r25, 0xFF	; 255
    7f08:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7f0c:	dc 01       	movw	r26, r24
    7f0e:	cb 01       	movw	r24, r22
    7f10:	e8 0e       	add	r14, r24
    7f12:	f9 1e       	adc	r15, r25
    7f14:	0a 1f       	adc	r16, r26
    7f16:	1b 1f       	adc	r17, r27
    7f18:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7f1a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    7f1c:	85 5d       	subi	r24, 0xD5	; 213
    7f1e:	9e 4f       	sbci	r25, 0xFE	; 254
    7f20:	20 e9       	ldi	r18, 0x90	; 144
    7f22:	31 e0       	ldi	r19, 0x01	; 1
    7f24:	b9 01       	movw	r22, r18
    7f26:	0e 94 9e 75 	call	0xeb3c	; 0xeb3c <__divmodhi4>
    7f2a:	cb 01       	movw	r24, r22
    7f2c:	09 2e       	mov	r0, r25
    7f2e:	00 0c       	add	r0, r0
    7f30:	aa 0b       	sbc	r26, r26
    7f32:	bb 0b       	sbc	r27, r27
    7f34:	9c 01       	movw	r18, r24
    7f36:	ad 01       	movw	r20, r26
    7f38:	60 e8       	ldi	r22, 0x80	; 128
    7f3a:	71 e5       	ldi	r23, 0x51	; 81
    7f3c:	81 e0       	ldi	r24, 0x01	; 1
    7f3e:	90 e0       	ldi	r25, 0x00	; 0
    7f40:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    7f44:	dc 01       	movw	r26, r24
    7f46:	cb 01       	movw	r24, r22
    7f48:	8e 0d       	add	r24, r14
    7f4a:	9f 1d       	adc	r25, r15
    7f4c:	a0 1f       	adc	r26, r16
    7f4e:	b1 1f       	adc	r27, r17
    7f50:	8a 83       	std	Y+2, r24	; 0x02
    7f52:	9b 83       	std	Y+3, r25	; 0x03
    7f54:	ac 83       	std	Y+4, r26	; 0x04
    7f56:	bd 83       	std	Y+5, r27	; 0x05
    7f58:	8c a1       	ldd	r24, Y+36	; 0x24
    7f5a:	9d a1       	ldd	r25, Y+37	; 0x25
    7f5c:	89 2b       	or	r24, r25
    7f5e:	51 f0       	breq	.+20     	; 0x7f74 <ds3231_get_epoch+0x394>
    7f60:	8e 81       	ldd	r24, Y+6	; 0x06
    7f62:	88 23       	and	r24, r24
    7f64:	11 f0       	breq	.+4      	; 0x7f6a <ds3231_get_epoch+0x38a>
    7f66:	2c ef       	ldi	r18, 0xFC	; 252
    7f68:	01 c0       	rjmp	.+2      	; 0x7f6c <ds3231_get_epoch+0x38c>
    7f6a:	20 e0       	ldi	r18, 0x00	; 0
    7f6c:	8c a1       	ldd	r24, Y+36	; 0x24
    7f6e:	9d a1       	ldd	r25, Y+37	; 0x25
    7f70:	fc 01       	movw	r30, r24
    7f72:	20 83       	st	Z, r18
    7f74:	8a 81       	ldd	r24, Y+2	; 0x02
    7f76:	9b 81       	ldd	r25, Y+3	; 0x03
    7f78:	ac 81       	ldd	r26, Y+4	; 0x04
    7f7a:	bd 81       	ldd	r27, Y+5	; 0x05
    7f7c:	bc 01       	movw	r22, r24
    7f7e:	cd 01       	movw	r24, r26
    7f80:	a5 96       	adiw	r28, 0x25	; 37
    7f82:	cd bf       	out	0x3d, r28	; 61
    7f84:	de bf       	out	0x3e, r29	; 62
    7f86:	df 91       	pop	r29
    7f88:	cf 91       	pop	r28
    7f8a:	1f 91       	pop	r17
    7f8c:	0f 91       	pop	r16
    7f8e:	ff 90       	pop	r15
    7f90:	ef 90       	pop	r14
    7f92:	08 95       	ret

00007f94 <ds3231_get_temp>:
    7f94:	cf 93       	push	r28
    7f96:	df 93       	push	r29
    7f98:	cd b7       	in	r28, 0x3d	; 61
    7f9a:	de b7       	in	r29, 0x3e	; 62
    7f9c:	26 97       	sbiw	r28, 0x06	; 6
    7f9e:	cd bf       	out	0x3d, r28	; 61
    7fa0:	de bf       	out	0x3e, r29	; 62
    7fa2:	8d 83       	std	Y+5, r24	; 0x05
    7fa4:	9e 83       	std	Y+6, r25	; 0x06
    7fa6:	8a e0       	ldi	r24, 0x0A	; 10
    7fa8:	89 83       	std	Y+1, r24	; 0x01
    7faa:	1b 82       	std	Y+3, r1	; 0x03
    7fac:	1c 82       	std	Y+4, r1	; 0x04
    7fae:	89 81       	ldd	r24, Y+1	; 0x01
    7fb0:	9f ef       	ldi	r25, 0xFF	; 255
    7fb2:	98 0f       	add	r25, r24
    7fb4:	99 83       	std	Y+1, r25	; 0x01
    7fb6:	88 23       	and	r24, r24
    7fb8:	99 f0       	breq	.+38     	; 0x7fe0 <ds3231_get_temp+0x4c>
    7fba:	ce 01       	movw	r24, r28
    7fbc:	03 96       	adiw	r24, 0x03	; 3
    7fbe:	22 e0       	ldi	r18, 0x02	; 2
    7fc0:	ac 01       	movw	r20, r24
    7fc2:	61 e1       	ldi	r22, 0x11	; 17
    7fc4:	80 ed       	ldi	r24, 0xD0	; 208
    7fc6:	0e 94 61 4b 	call	0x96c2	; 0x96c2 <I2C_0_GetData>
    7fca:	98 2f       	mov	r25, r24
    7fcc:	81 e0       	ldi	r24, 0x01	; 1
    7fce:	92 30       	cpi	r25, 0x02	; 2
    7fd0:	09 f4       	brne	.+2      	; 0x7fd4 <ds3231_get_temp+0x40>
    7fd2:	80 e0       	ldi	r24, 0x00	; 0
    7fd4:	8a 83       	std	Y+2, r24	; 0x02
    7fd6:	8a 81       	ldd	r24, Y+2	; 0x02
    7fd8:	88 23       	and	r24, r24
    7fda:	11 f0       	breq	.+4      	; 0x7fe0 <ds3231_get_temp+0x4c>
    7fdc:	81 e0       	ldi	r24, 0x01	; 1
    7fde:	01 c0       	rjmp	.+2      	; 0x7fe2 <ds3231_get_temp+0x4e>
    7fe0:	80 e0       	ldi	r24, 0x00	; 0
    7fe2:	88 23       	and	r24, r24
    7fe4:	09 f0       	breq	.+2      	; 0x7fe8 <ds3231_get_temp+0x54>
    7fe6:	e3 cf       	rjmp	.-58     	; 0x7fae <ds3231_get_temp+0x1a>
    7fe8:	9a 81       	ldd	r25, Y+2	; 0x02
    7fea:	81 e0       	ldi	r24, 0x01	; 1
    7fec:	89 27       	eor	r24, r25
    7fee:	88 23       	and	r24, r24
    7ff0:	19 f1       	breq	.+70     	; 0x8038 <__RODATA_PM_OFFSET__+0x38>
    7ff2:	8b 81       	ldd	r24, Y+3	; 0x03
    7ff4:	28 2f       	mov	r18, r24
    7ff6:	30 e0       	ldi	r19, 0x00	; 0
    7ff8:	8d 81       	ldd	r24, Y+5	; 0x05
    7ffa:	9e 81       	ldd	r25, Y+6	; 0x06
    7ffc:	fc 01       	movw	r30, r24
    7ffe:	20 83       	st	Z, r18
    8000:	31 83       	std	Z+1, r19	; 0x01
    8002:	8d 81       	ldd	r24, Y+5	; 0x05
    8004:	9e 81       	ldd	r25, Y+6	; 0x06
    8006:	fc 01       	movw	r30, r24
    8008:	80 81       	ld	r24, Z
    800a:	91 81       	ldd	r25, Z+1	; 0x01
    800c:	38 2f       	mov	r19, r24
    800e:	22 27       	eor	r18, r18
    8010:	8d 81       	ldd	r24, Y+5	; 0x05
    8012:	9e 81       	ldd	r25, Y+6	; 0x06
    8014:	fc 01       	movw	r30, r24
    8016:	20 83       	st	Z, r18
    8018:	31 83       	std	Z+1, r19	; 0x01
    801a:	8d 81       	ldd	r24, Y+5	; 0x05
    801c:	9e 81       	ldd	r25, Y+6	; 0x06
    801e:	fc 01       	movw	r30, r24
    8020:	20 81       	ld	r18, Z
    8022:	31 81       	ldd	r19, Z+1	; 0x01
    8024:	8c 81       	ldd	r24, Y+4	; 0x04
    8026:	88 2f       	mov	r24, r24
    8028:	90 e0       	ldi	r25, 0x00	; 0
    802a:	28 2b       	or	r18, r24
    802c:	39 2b       	or	r19, r25
    802e:	8d 81       	ldd	r24, Y+5	; 0x05
    8030:	9e 81       	ldd	r25, Y+6	; 0x06
    8032:	fc 01       	movw	r30, r24
    8034:	20 83       	st	Z, r18
    8036:	31 83       	std	Z+1, r19	; 0x01
    8038:	8a 81       	ldd	r24, Y+2	; 0x02
    803a:	26 96       	adiw	r28, 0x06	; 6
    803c:	cd bf       	out	0x3d, r28	; 61
    803e:	de bf       	out	0x3e, r29	; 62
    8040:	df 91       	pop	r29
    8042:	cf 91       	pop	r28
    8044:	08 95       	ret

00008046 <ds3231_set_date_time_arducon>:
    8046:	cf 93       	push	r28
    8048:	df 93       	push	r29
    804a:	cd b7       	in	r28, 0x3d	; 61
    804c:	de b7       	in	r29, 0x3e	; 62
    804e:	2c 97       	sbiw	r28, 0x0c	; 12
    8050:	cd bf       	out	0x3d, r28	; 61
    8052:	de bf       	out	0x3e, r29	; 62
    8054:	8a 87       	std	Y+10, r24	; 0x0a
    8056:	9b 87       	std	Y+11, r25	; 0x0b
    8058:	6c 87       	std	Y+12, r22	; 0x0c
    805a:	8a e0       	ldi	r24, 0x0A	; 10
    805c:	89 83       	std	Y+1, r24	; 0x01
    805e:	81 e0       	ldi	r24, 0x01	; 1
    8060:	8a 83       	std	Y+2, r24	; 0x02
    8062:	27 e0       	ldi	r18, 0x07	; 7
    8064:	ce 01       	movw	r24, r28
    8066:	03 96       	adiw	r24, 0x03	; 3
    8068:	fc 01       	movw	r30, r24
    806a:	32 2f       	mov	r19, r18
    806c:	11 92       	st	Z+, r1
    806e:	3a 95       	dec	r19
    8070:	e9 f7       	brne	.-6      	; 0x806c <ds3231_set_date_time_arducon+0x26>
    8072:	8a 85       	ldd	r24, Y+10	; 0x0a
    8074:	9b 85       	ldd	r25, Y+11	; 0x0b
    8076:	89 2b       	or	r24, r25
    8078:	09 f4       	brne	.+2      	; 0x807c <ds3231_set_date_time_arducon+0x36>
    807a:	47 c0       	rjmp	.+142    	; 0x810a <ds3231_set_date_time_arducon+0xc4>
    807c:	8a 85       	ldd	r24, Y+10	; 0x0a
    807e:	9b 85       	ldd	r25, Y+11	; 0x0b
    8080:	0a 96       	adiw	r24, 0x0a	; 10
    8082:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    8086:	8b 83       	std	Y+3, r24	; 0x03
    8088:	8a 85       	ldd	r24, Y+10	; 0x0a
    808a:	9b 85       	ldd	r25, Y+11	; 0x0b
    808c:	08 96       	adiw	r24, 0x08	; 8
    808e:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    8092:	8c 83       	std	Y+4, r24	; 0x04
    8094:	8a 85       	ldd	r24, Y+10	; 0x0a
    8096:	9b 85       	ldd	r25, Y+11	; 0x0b
    8098:	06 96       	adiw	r24, 0x06	; 6
    809a:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    809e:	8d 83       	std	Y+5, r24	; 0x05
    80a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    80a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    80a4:	04 96       	adiw	r24, 0x04	; 4
    80a6:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    80aa:	8f 83       	std	Y+7, r24	; 0x07
    80ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    80ae:	9b 85       	ldd	r25, Y+11	; 0x0b
    80b0:	02 96       	adiw	r24, 0x02	; 2
    80b2:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    80b6:	88 87       	std	Y+8, r24	; 0x08
    80b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    80ba:	9b 85       	ldd	r25, Y+11	; 0x0b
    80bc:	0e 94 20 3c 	call	0x7840	; 0x7840 <_Z8char2bcdPc>
    80c0:	89 87       	std	Y+9, r24	; 0x09
    80c2:	89 81       	ldd	r24, Y+1	; 0x01
    80c4:	9f ef       	ldi	r25, 0xFF	; 255
    80c6:	98 0f       	add	r25, r24
    80c8:	99 83       	std	Y+1, r25	; 0x01
    80ca:	88 23       	and	r24, r24
    80cc:	d1 f0       	breq	.+52     	; 0x8102 <ds3231_set_date_time_arducon+0xbc>
    80ce:	9c 85       	ldd	r25, Y+12	; 0x0c
    80d0:	89 2f       	mov	r24, r25
    80d2:	88 0f       	add	r24, r24
    80d4:	88 0f       	add	r24, r24
    80d6:	88 0f       	add	r24, r24
    80d8:	38 2f       	mov	r19, r24
    80da:	39 1b       	sub	r19, r25
    80dc:	ce 01       	movw	r24, r28
    80de:	03 96       	adiw	r24, 0x03	; 3
    80e0:	27 e0       	ldi	r18, 0x07	; 7
    80e2:	ac 01       	movw	r20, r24
    80e4:	63 2f       	mov	r22, r19
    80e6:	80 ed       	ldi	r24, 0xD0	; 208
    80e8:	0e 94 f9 4a 	call	0x95f2	; 0x95f2 <I2C_0_SendData>
    80ec:	98 2f       	mov	r25, r24
    80ee:	81 e0       	ldi	r24, 0x01	; 1
    80f0:	97 30       	cpi	r25, 0x07	; 7
    80f2:	09 f4       	brne	.+2      	; 0x80f6 <ds3231_set_date_time_arducon+0xb0>
    80f4:	80 e0       	ldi	r24, 0x00	; 0
    80f6:	8a 83       	std	Y+2, r24	; 0x02
    80f8:	8a 81       	ldd	r24, Y+2	; 0x02
    80fa:	88 23       	and	r24, r24
    80fc:	11 f0       	breq	.+4      	; 0x8102 <ds3231_set_date_time_arducon+0xbc>
    80fe:	81 e0       	ldi	r24, 0x01	; 1
    8100:	01 c0       	rjmp	.+2      	; 0x8104 <ds3231_set_date_time_arducon+0xbe>
    8102:	80 e0       	ldi	r24, 0x00	; 0
    8104:	88 23       	and	r24, r24
    8106:	09 f0       	breq	.+2      	; 0x810a <ds3231_set_date_time_arducon+0xc4>
    8108:	dc cf       	rjmp	.-72     	; 0x80c2 <ds3231_set_date_time_arducon+0x7c>
    810a:	8a 81       	ldd	r24, Y+2	; 0x02
    810c:	2c 96       	adiw	r28, 0x0c	; 12
    810e:	cd bf       	out	0x3d, r28	; 61
    8110:	de bf       	out	0x3e, r29	; 62
    8112:	df 91       	pop	r29
    8114:	cf 91       	pop	r28
    8116:	08 95       	ret

00008118 <ds3231_set_date_time>:
    8118:	cf 93       	push	r28
    811a:	df 93       	push	r29
    811c:	cd b7       	in	r28, 0x3d	; 61
    811e:	de b7       	in	r29, 0x3e	; 62
    8120:	63 97       	sbiw	r28, 0x13	; 19
    8122:	cd bf       	out	0x3d, r28	; 61
    8124:	de bf       	out	0x3e, r29	; 62
    8126:	89 8b       	std	Y+17, r24	; 0x11
    8128:	9a 8b       	std	Y+18, r25	; 0x12
    812a:	6b 8b       	std	Y+19, r22	; 0x13
    812c:	8a e0       	ldi	r24, 0x0A	; 10
    812e:	89 83       	std	Y+1, r24	; 0x01
    8130:	1a 86       	std	Y+10, r1	; 0x0a
    8132:	1b 86       	std	Y+11, r1	; 0x0b
    8134:	1c 86       	std	Y+12, r1	; 0x0c
    8136:	81 e0       	ldi	r24, 0x01	; 1
    8138:	8d 87       	std	Y+13, r24	; 0x0d
    813a:	1e 86       	std	Y+14, r1	; 0x0e
    813c:	1f 86       	std	Y+15, r1	; 0x0f
    813e:	18 8a       	std	Y+16, r1	; 0x10
    8140:	80 ed       	ldi	r24, 0xD0	; 208
    8142:	97 e0       	ldi	r25, 0x07	; 7
    8144:	8a 83       	std	Y+2, r24	; 0x02
    8146:	9b 83       	std	Y+3, r25	; 0x03
    8148:	89 89       	ldd	r24, Y+17	; 0x11
    814a:	9a 89       	ldd	r25, Y+18	; 0x12
    814c:	42 96       	adiw	r24, 0x12	; 18
    814e:	fc 01       	movw	r30, r24
    8150:	80 81       	ld	r24, Z
    8152:	80 53       	subi	r24, 0x30	; 48
    8154:	8a 87       	std	Y+10, r24	; 0x0a
    8156:	8a 85       	ldd	r24, Y+10	; 0x0a
    8158:	28 2f       	mov	r18, r24
    815a:	89 89       	ldd	r24, Y+17	; 0x11
    815c:	9a 89       	ldd	r25, Y+18	; 0x12
    815e:	41 96       	adiw	r24, 0x11	; 17
    8160:	fc 01       	movw	r30, r24
    8162:	80 81       	ld	r24, Z
    8164:	88 2f       	mov	r24, r24
    8166:	90 e0       	ldi	r25, 0x00	; 0
    8168:	c0 97       	sbiw	r24, 0x30	; 48
    816a:	82 95       	swap	r24
    816c:	92 95       	swap	r25
    816e:	90 7f       	andi	r25, 0xF0	; 240
    8170:	98 27       	eor	r25, r24
    8172:	80 7f       	andi	r24, 0xF0	; 240
    8174:	98 27       	eor	r25, r24
    8176:	82 2b       	or	r24, r18
    8178:	8a 87       	std	Y+10, r24	; 0x0a
    817a:	89 89       	ldd	r24, Y+17	; 0x11
    817c:	9a 89       	ldd	r25, Y+18	; 0x12
    817e:	0f 96       	adiw	r24, 0x0f	; 15
    8180:	fc 01       	movw	r30, r24
    8182:	80 81       	ld	r24, Z
    8184:	80 53       	subi	r24, 0x30	; 48
    8186:	8b 87       	std	Y+11, r24	; 0x0b
    8188:	8b 85       	ldd	r24, Y+11	; 0x0b
    818a:	28 2f       	mov	r18, r24
    818c:	89 89       	ldd	r24, Y+17	; 0x11
    818e:	9a 89       	ldd	r25, Y+18	; 0x12
    8190:	0e 96       	adiw	r24, 0x0e	; 14
    8192:	fc 01       	movw	r30, r24
    8194:	80 81       	ld	r24, Z
    8196:	88 2f       	mov	r24, r24
    8198:	90 e0       	ldi	r25, 0x00	; 0
    819a:	c0 97       	sbiw	r24, 0x30	; 48
    819c:	82 95       	swap	r24
    819e:	92 95       	swap	r25
    81a0:	90 7f       	andi	r25, 0xF0	; 240
    81a2:	98 27       	eor	r25, r24
    81a4:	80 7f       	andi	r24, 0xF0	; 240
    81a6:	98 27       	eor	r25, r24
    81a8:	82 2b       	or	r24, r18
    81aa:	8b 87       	std	Y+11, r24	; 0x0b
    81ac:	89 89       	ldd	r24, Y+17	; 0x11
    81ae:	9a 89       	ldd	r25, Y+18	; 0x12
    81b0:	0c 96       	adiw	r24, 0x0c	; 12
    81b2:	fc 01       	movw	r30, r24
    81b4:	80 81       	ld	r24, Z
    81b6:	80 53       	subi	r24, 0x30	; 48
    81b8:	8c 87       	std	Y+12, r24	; 0x0c
    81ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    81bc:	28 2f       	mov	r18, r24
    81be:	89 89       	ldd	r24, Y+17	; 0x11
    81c0:	9a 89       	ldd	r25, Y+18	; 0x12
    81c2:	0b 96       	adiw	r24, 0x0b	; 11
    81c4:	fc 01       	movw	r30, r24
    81c6:	80 81       	ld	r24, Z
    81c8:	88 2f       	mov	r24, r24
    81ca:	90 e0       	ldi	r25, 0x00	; 0
    81cc:	c0 97       	sbiw	r24, 0x30	; 48
    81ce:	82 95       	swap	r24
    81d0:	92 95       	swap	r25
    81d2:	90 7f       	andi	r25, 0xF0	; 240
    81d4:	98 27       	eor	r25, r24
    81d6:	80 7f       	andi	r24, 0xF0	; 240
    81d8:	98 27       	eor	r25, r24
    81da:	82 2b       	or	r24, r18
    81dc:	8c 87       	std	Y+12, r24	; 0x0c
    81de:	89 89       	ldd	r24, Y+17	; 0x11
    81e0:	9a 89       	ldd	r25, Y+18	; 0x12
    81e2:	09 96       	adiw	r24, 0x09	; 9
    81e4:	fc 01       	movw	r30, r24
    81e6:	80 81       	ld	r24, Z
    81e8:	80 53       	subi	r24, 0x30	; 48
    81ea:	8e 87       	std	Y+14, r24	; 0x0e
    81ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    81ee:	88 2f       	mov	r24, r24
    81f0:	90 e0       	ldi	r25, 0x00	; 0
    81f2:	8c 83       	std	Y+4, r24	; 0x04
    81f4:	9d 83       	std	Y+5, r25	; 0x05
    81f6:	89 89       	ldd	r24, Y+17	; 0x11
    81f8:	9a 89       	ldd	r25, Y+18	; 0x12
    81fa:	08 96       	adiw	r24, 0x08	; 8
    81fc:	fc 01       	movw	r30, r24
    81fe:	80 81       	ld	r24, Z
    8200:	88 2f       	mov	r24, r24
    8202:	90 e0       	ldi	r25, 0x00	; 0
    8204:	c0 97       	sbiw	r24, 0x30	; 48
    8206:	8e 83       	std	Y+6, r24	; 0x06
    8208:	9f 83       	std	Y+7, r25	; 0x07
    820a:	8e 81       	ldd	r24, Y+6	; 0x06
    820c:	9f 81       	ldd	r25, Y+7	; 0x07
    820e:	88 0f       	add	r24, r24
    8210:	99 1f       	adc	r25, r25
    8212:	9c 01       	movw	r18, r24
    8214:	22 0f       	add	r18, r18
    8216:	33 1f       	adc	r19, r19
    8218:	22 0f       	add	r18, r18
    821a:	33 1f       	adc	r19, r19
    821c:	82 0f       	add	r24, r18
    821e:	93 1f       	adc	r25, r19
    8220:	2c 81       	ldd	r18, Y+4	; 0x04
    8222:	3d 81       	ldd	r19, Y+5	; 0x05
    8224:	82 0f       	add	r24, r18
    8226:	93 1f       	adc	r25, r19
    8228:	8c 83       	std	Y+4, r24	; 0x04
    822a:	9d 83       	std	Y+5, r25	; 0x05
    822c:	8e 85       	ldd	r24, Y+14	; 0x0e
    822e:	28 2f       	mov	r18, r24
    8230:	8e 81       	ldd	r24, Y+6	; 0x06
    8232:	9f 81       	ldd	r25, Y+7	; 0x07
    8234:	82 95       	swap	r24
    8236:	92 95       	swap	r25
    8238:	90 7f       	andi	r25, 0xF0	; 240
    823a:	98 27       	eor	r25, r24
    823c:	80 7f       	andi	r24, 0xF0	; 240
    823e:	98 27       	eor	r25, r24
    8240:	82 2b       	or	r24, r18
    8242:	8e 87       	std	Y+14, r24	; 0x0e
    8244:	89 89       	ldd	r24, Y+17	; 0x11
    8246:	9a 89       	ldd	r25, Y+18	; 0x12
    8248:	06 96       	adiw	r24, 0x06	; 6
    824a:	fc 01       	movw	r30, r24
    824c:	80 81       	ld	r24, Z
    824e:	80 53       	subi	r24, 0x30	; 48
    8250:	8f 87       	std	Y+15, r24	; 0x0f
    8252:	88 89       	ldd	r24, Y+16	; 0x10
    8254:	88 2f       	mov	r24, r24
    8256:	90 e0       	ldi	r25, 0x00	; 0
    8258:	88 87       	std	Y+8, r24	; 0x08
    825a:	99 87       	std	Y+9, r25	; 0x09
    825c:	89 89       	ldd	r24, Y+17	; 0x11
    825e:	9a 89       	ldd	r25, Y+18	; 0x12
    8260:	05 96       	adiw	r24, 0x05	; 5
    8262:	fc 01       	movw	r30, r24
    8264:	80 81       	ld	r24, Z
    8266:	88 2f       	mov	r24, r24
    8268:	90 e0       	ldi	r25, 0x00	; 0
    826a:	c0 97       	sbiw	r24, 0x30	; 48
    826c:	8e 83       	std	Y+6, r24	; 0x06
    826e:	9f 83       	std	Y+7, r25	; 0x07
    8270:	8e 81       	ldd	r24, Y+6	; 0x06
    8272:	9f 81       	ldd	r25, Y+7	; 0x07
    8274:	88 0f       	add	r24, r24
    8276:	99 1f       	adc	r25, r25
    8278:	9c 01       	movw	r18, r24
    827a:	22 0f       	add	r18, r18
    827c:	33 1f       	adc	r19, r19
    827e:	22 0f       	add	r18, r18
    8280:	33 1f       	adc	r19, r19
    8282:	82 0f       	add	r24, r18
    8284:	93 1f       	adc	r25, r19
    8286:	28 85       	ldd	r18, Y+8	; 0x08
    8288:	39 85       	ldd	r19, Y+9	; 0x09
    828a:	82 0f       	add	r24, r18
    828c:	93 1f       	adc	r25, r19
    828e:	88 87       	std	Y+8, r24	; 0x08
    8290:	99 87       	std	Y+9, r25	; 0x09
    8292:	8f 85       	ldd	r24, Y+15	; 0x0f
    8294:	28 2f       	mov	r18, r24
    8296:	8e 81       	ldd	r24, Y+6	; 0x06
    8298:	9f 81       	ldd	r25, Y+7	; 0x07
    829a:	82 95       	swap	r24
    829c:	92 95       	swap	r25
    829e:	90 7f       	andi	r25, 0xF0	; 240
    82a0:	98 27       	eor	r25, r24
    82a2:	80 7f       	andi	r24, 0xF0	; 240
    82a4:	98 27       	eor	r25, r24
    82a6:	82 2b       	or	r24, r18
    82a8:	8f 87       	std	Y+15, r24	; 0x0f
    82aa:	89 89       	ldd	r24, Y+17	; 0x11
    82ac:	9a 89       	ldd	r25, Y+18	; 0x12
    82ae:	03 96       	adiw	r24, 0x03	; 3
    82b0:	fc 01       	movw	r30, r24
    82b2:	80 81       	ld	r24, Z
    82b4:	80 53       	subi	r24, 0x30	; 48
    82b6:	88 8b       	std	Y+16, r24	; 0x10
    82b8:	89 89       	ldd	r24, Y+17	; 0x11
    82ba:	88 2f       	mov	r24, r24
    82bc:	90 e0       	ldi	r25, 0x00	; 0
    82be:	2a 81       	ldd	r18, Y+2	; 0x02
    82c0:	3b 81       	ldd	r19, Y+3	; 0x03
    82c2:	82 0f       	add	r24, r18
    82c4:	93 1f       	adc	r25, r19
    82c6:	8a 83       	std	Y+2, r24	; 0x02
    82c8:	9b 83       	std	Y+3, r25	; 0x03
    82ca:	89 89       	ldd	r24, Y+17	; 0x11
    82cc:	9a 89       	ldd	r25, Y+18	; 0x12
    82ce:	02 96       	adiw	r24, 0x02	; 2
    82d0:	fc 01       	movw	r30, r24
    82d2:	80 81       	ld	r24, Z
    82d4:	88 2f       	mov	r24, r24
    82d6:	90 e0       	ldi	r25, 0x00	; 0
    82d8:	c0 97       	sbiw	r24, 0x30	; 48
    82da:	8e 83       	std	Y+6, r24	; 0x06
    82dc:	9f 83       	std	Y+7, r25	; 0x07
    82de:	8e 81       	ldd	r24, Y+6	; 0x06
    82e0:	9f 81       	ldd	r25, Y+7	; 0x07
    82e2:	88 0f       	add	r24, r24
    82e4:	99 1f       	adc	r25, r25
    82e6:	9c 01       	movw	r18, r24
    82e8:	22 0f       	add	r18, r18
    82ea:	33 1f       	adc	r19, r19
    82ec:	22 0f       	add	r18, r18
    82ee:	33 1f       	adc	r19, r19
    82f0:	82 0f       	add	r24, r18
    82f2:	93 1f       	adc	r25, r19
    82f4:	2a 81       	ldd	r18, Y+2	; 0x02
    82f6:	3b 81       	ldd	r19, Y+3	; 0x03
    82f8:	82 0f       	add	r24, r18
    82fa:	93 1f       	adc	r25, r19
    82fc:	8a 83       	std	Y+2, r24	; 0x02
    82fe:	9b 83       	std	Y+3, r25	; 0x03
    8300:	88 89       	ldd	r24, Y+16	; 0x10
    8302:	28 2f       	mov	r18, r24
    8304:	8e 81       	ldd	r24, Y+6	; 0x06
    8306:	9f 81       	ldd	r25, Y+7	; 0x07
    8308:	82 95       	swap	r24
    830a:	92 95       	swap	r25
    830c:	90 7f       	andi	r25, 0xF0	; 240
    830e:	98 27       	eor	r25, r24
    8310:	80 7f       	andi	r24, 0xF0	; 240
    8312:	98 27       	eor	r25, r24
    8314:	82 2b       	or	r24, r18
    8316:	88 8b       	std	Y+16, r24	; 0x10
    8318:	89 81       	ldd	r24, Y+1	; 0x01
    831a:	9f ef       	ldi	r25, 0xFF	; 255
    831c:	98 0f       	add	r25, r24
    831e:	99 83       	std	Y+1, r25	; 0x01
    8320:	88 23       	and	r24, r24
    8322:	99 f0       	breq	.+38     	; 0x834a <ds3231_set_date_time+0x232>
    8324:	9b 89       	ldd	r25, Y+19	; 0x13
    8326:	89 2f       	mov	r24, r25
    8328:	88 0f       	add	r24, r24
    832a:	88 0f       	add	r24, r24
    832c:	88 0f       	add	r24, r24
    832e:	38 2f       	mov	r19, r24
    8330:	39 1b       	sub	r19, r25
    8332:	ce 01       	movw	r24, r28
    8334:	0a 96       	adiw	r24, 0x0a	; 10
    8336:	27 e0       	ldi	r18, 0x07	; 7
    8338:	ac 01       	movw	r20, r24
    833a:	63 2f       	mov	r22, r19
    833c:	80 ed       	ldi	r24, 0xD0	; 208
    833e:	0e 94 f9 4a 	call	0x95f2	; 0x95f2 <I2C_0_SendData>
    8342:	87 30       	cpi	r24, 0x07	; 7
    8344:	11 f0       	breq	.+4      	; 0x834a <ds3231_set_date_time+0x232>
    8346:	81 e0       	ldi	r24, 0x01	; 1
    8348:	01 c0       	rjmp	.+2      	; 0x834c <ds3231_set_date_time+0x234>
    834a:	80 e0       	ldi	r24, 0x00	; 0
    834c:	88 23       	and	r24, r24
    834e:	09 f0       	breq	.+2      	; 0x8352 <ds3231_set_date_time+0x23a>
    8350:	e3 cf       	rjmp	.-58     	; 0x8318 <ds3231_set_date_time+0x200>
    8352:	00 00       	nop
    8354:	63 96       	adiw	r28, 0x13	; 19
    8356:	cd bf       	out	0x3d, r28	; 61
    8358:	de bf       	out	0x3e, r29	; 62
    835a:	df 91       	pop	r29
    835c:	cf 91       	pop	r28
    835e:	08 95       	ret

00008360 <ds3231_1s_sqw>:
#endif // DATE_STRING_SUPPORT_ENABLED
	
	bool ds3231_1s_sqw(bool enable)
	{
    8360:	cf 93       	push	r28
    8362:	df 93       	push	r29
    8364:	00 d0       	rcall	.+0      	; 0x8366 <ds3231_1s_sqw+0x6>
    8366:	00 d0       	rcall	.+0      	; 0x8368 <ds3231_1s_sqw+0x8>
    8368:	cd b7       	in	r28, 0x3d	; 61
    836a:	de b7       	in	r29, 0x3e	; 62
    836c:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    836e:	8a e0       	ldi	r24, 0x0A	; 10
    8370:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		uint8_t data[1];
		
		data[0] = enable ? 0x00:0x04;	
    8372:	8c 81       	ldd	r24, Y+4	; 0x04
    8374:	88 23       	and	r24, r24
    8376:	11 f0       	breq	.+4      	; 0x837c <ds3231_1s_sqw+0x1c>
    8378:	80 e0       	ldi	r24, 0x00	; 0
    837a:	01 c0       	rjmp	.+2      	; 0x837e <ds3231_1s_sqw+0x1e>
    837c:	84 e0       	ldi	r24, 0x04	; 4
    837e:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_CONTROL, data, 1) != 1)));
    8380:	89 81       	ldd	r24, Y+1	; 0x01
    8382:	9f ef       	ldi	r25, 0xFF	; 255
    8384:	98 0f       	add	r25, r24
    8386:	99 83       	std	Y+1, r25	; 0x01
    8388:	88 23       	and	r24, r24
    838a:	99 f0       	breq	.+38     	; 0x83b2 <ds3231_1s_sqw+0x52>
    838c:	ce 01       	movw	r24, r28
    838e:	03 96       	adiw	r24, 0x03	; 3
    8390:	21 e0       	ldi	r18, 0x01	; 1
    8392:	ac 01       	movw	r20, r24
    8394:	6e e0       	ldi	r22, 0x0E	; 14
    8396:	80 ed       	ldi	r24, 0xD0	; 208
    8398:	0e 94 f9 4a 	call	0x95f2	; 0x95f2 <I2C_0_SendData>
    839c:	98 2f       	mov	r25, r24
    839e:	81 e0       	ldi	r24, 0x01	; 1
    83a0:	91 30       	cpi	r25, 0x01	; 1
    83a2:	09 f4       	brne	.+2      	; 0x83a6 <ds3231_1s_sqw+0x46>
    83a4:	80 e0       	ldi	r24, 0x00	; 0
    83a6:	8a 83       	std	Y+2, r24	; 0x02
    83a8:	8a 81       	ldd	r24, Y+2	; 0x02
    83aa:	88 23       	and	r24, r24
    83ac:	11 f0       	breq	.+4      	; 0x83b2 <ds3231_1s_sqw+0x52>
    83ae:	81 e0       	ldi	r24, 0x01	; 1
    83b0:	01 c0       	rjmp	.+2      	; 0x83b4 <ds3231_1s_sqw+0x54>
    83b2:	80 e0       	ldi	r24, 0x00	; 0
    83b4:	88 23       	and	r24, r24
    83b6:	09 f0       	breq	.+2      	; 0x83ba <ds3231_1s_sqw+0x5a>
    83b8:	e3 cf       	rjmp	.-58     	; 0x8380 <ds3231_1s_sqw+0x20>
		
		return(failure);
    83ba:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    83bc:	24 96       	adiw	r28, 0x04	; 4
    83be:	cd bf       	out	0x3d, r28	; 61
    83c0:	de bf       	out	0x3e, r29	; 62
    83c2:	df 91       	pop	r29
    83c4:	cf 91       	pop	r28
    83c6:	08 95       	ret

000083c8 <ds3231_set_aging>:


	bool ds3231_set_aging(int8_t data_in)
	{
    83c8:	cf 93       	push	r28
    83ca:	df 93       	push	r29
    83cc:	00 d0       	rcall	.+0      	; 0x83ce <ds3231_set_aging+0x6>
    83ce:	00 d0       	rcall	.+0      	; 0x83d0 <ds3231_set_aging+0x8>
    83d0:	cd b7       	in	r28, 0x3d	; 61
    83d2:	de b7       	in	r29, 0x3e	; 62
    83d4:	8c 83       	std	Y+4, r24	; 0x04
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    83d6:	8a e0       	ldi	r24, 0x0A	; 10
    83d8:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		data[0] = data_in;
    83da:	8c 81       	ldd	r24, Y+4	; 0x04
    83dc:	8b 83       	std	Y+3, r24	; 0x03
		while(tries-- && (failure = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    83de:	89 81       	ldd	r24, Y+1	; 0x01
    83e0:	9f ef       	ldi	r25, 0xFF	; 255
    83e2:	98 0f       	add	r25, r24
    83e4:	99 83       	std	Y+1, r25	; 0x01
    83e6:	88 23       	and	r24, r24
    83e8:	99 f0       	breq	.+38     	; 0x8410 <ds3231_set_aging+0x48>
    83ea:	ce 01       	movw	r24, r28
    83ec:	03 96       	adiw	r24, 0x03	; 3
    83ee:	21 e0       	ldi	r18, 0x01	; 1
    83f0:	ac 01       	movw	r20, r24
    83f2:	60 e1       	ldi	r22, 0x10	; 16
    83f4:	80 ed       	ldi	r24, 0xD0	; 208
    83f6:	0e 94 f9 4a 	call	0x95f2	; 0x95f2 <I2C_0_SendData>
    83fa:	98 2f       	mov	r25, r24
    83fc:	81 e0       	ldi	r24, 0x01	; 1
    83fe:	91 30       	cpi	r25, 0x01	; 1
    8400:	09 f4       	brne	.+2      	; 0x8404 <ds3231_set_aging+0x3c>
    8402:	80 e0       	ldi	r24, 0x00	; 0
    8404:	8a 83       	std	Y+2, r24	; 0x02
    8406:	8a 81       	ldd	r24, Y+2	; 0x02
    8408:	88 23       	and	r24, r24
    840a:	11 f0       	breq	.+4      	; 0x8410 <ds3231_set_aging+0x48>
    840c:	81 e0       	ldi	r24, 0x01	; 1
    840e:	01 c0       	rjmp	.+2      	; 0x8412 <ds3231_set_aging+0x4a>
    8410:	80 e0       	ldi	r24, 0x00	; 0
    8412:	88 23       	and	r24, r24
    8414:	09 f0       	breq	.+2      	; 0x8418 <ds3231_set_aging+0x50>
    8416:	e3 cf       	rjmp	.-58     	; 0x83de <ds3231_set_aging+0x16>
		return(failure);
    8418:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    841a:	24 96       	adiw	r28, 0x04	; 4
    841c:	cd bf       	out	0x3d, r28	; 61
    841e:	de bf       	out	0x3e, r29	; 62
    8420:	df 91       	pop	r29
    8422:	cf 91       	pop	r28
    8424:	08 95       	ret

00008426 <ds3231_get_aging>:


	int8_t ds3231_get_aging()
	{
    8426:	cf 93       	push	r28
    8428:	df 93       	push	r29
    842a:	00 d0       	rcall	.+0      	; 0x842c <ds3231_get_aging+0x6>
    842c:	1f 92       	push	r1
    842e:	cd b7       	in	r28, 0x3d	; 61
    8430:	de b7       	in	r29, 0x3e	; 62
		uint8_t tries = 10; /* try several times in case of transient bus issues */
    8432:	8a e0       	ldi	r24, 0x0A	; 10
    8434:	89 83       	std	Y+1, r24	; 0x01
		bool failure;
		int8_t data[1];
		
		while(tries-- && (failure = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) != 1)));
    8436:	89 81       	ldd	r24, Y+1	; 0x01
    8438:	9f ef       	ldi	r25, 0xFF	; 255
    843a:	98 0f       	add	r25, r24
    843c:	99 83       	std	Y+1, r25	; 0x01
    843e:	88 23       	and	r24, r24
    8440:	99 f0       	breq	.+38     	; 0x8468 <ds3231_get_aging+0x42>
    8442:	ce 01       	movw	r24, r28
    8444:	03 96       	adiw	r24, 0x03	; 3
    8446:	21 e0       	ldi	r18, 0x01	; 1
    8448:	ac 01       	movw	r20, r24
    844a:	60 e1       	ldi	r22, 0x10	; 16
    844c:	80 ed       	ldi	r24, 0xD0	; 208
    844e:	0e 94 61 4b 	call	0x96c2	; 0x96c2 <I2C_0_GetData>
    8452:	98 2f       	mov	r25, r24
    8454:	81 e0       	ldi	r24, 0x01	; 1
    8456:	91 30       	cpi	r25, 0x01	; 1
    8458:	09 f4       	brne	.+2      	; 0x845c <ds3231_get_aging+0x36>
    845a:	80 e0       	ldi	r24, 0x00	; 0
    845c:	8a 83       	std	Y+2, r24	; 0x02
    845e:	8a 81       	ldd	r24, Y+2	; 0x02
    8460:	88 23       	and	r24, r24
    8462:	11 f0       	breq	.+4      	; 0x8468 <ds3231_get_aging+0x42>
    8464:	81 e0       	ldi	r24, 0x01	; 1
    8466:	01 c0       	rjmp	.+2      	; 0x846a <ds3231_get_aging+0x44>
    8468:	80 e0       	ldi	r24, 0x00	; 0
    846a:	88 23       	and	r24, r24
    846c:	09 f0       	breq	.+2      	; 0x8470 <ds3231_get_aging+0x4a>
    846e:	e3 cf       	rjmp	.-58     	; 0x8436 <ds3231_get_aging+0x10>
		return(data[0]);
    8470:	8b 81       	ldd	r24, Y+3	; 0x03
	}
    8472:	23 96       	adiw	r28, 0x03	; 3
    8474:	cd bf       	out	0x3d, r28	; 61
    8476:	de bf       	out	0x3e, r29	; 62
    8478:	df 91       	pop	r29
    847a:	cf 91       	pop	r28
    847c:	08 95       	ret

0000847e <ds3231_responding>:

	bool ds3231_responding()
	{
    847e:	cf 93       	push	r28
    8480:	df 93       	push	r29
    8482:	00 d0       	rcall	.+0      	; 0x8484 <ds3231_responding+0x6>
    8484:	1f 92       	push	r1
    8486:	cd b7       	in	r28, 0x3d	; 61
    8488:	de b7       	in	r29, 0x3e	; 62
		bool responseReceived = false;
    848a:	19 82       	std	Y+1, r1	; 0x01
		uint8_t tries = 10;
    848c:	8a e0       	ldi	r24, 0x0A	; 10
    848e:	8a 83       	std	Y+2, r24	; 0x02
		int8_t data[1];		
		while(tries-- && !(responseReceived = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_AGING, (uint8_t *)data, 1) == 1)));
    8490:	8a 81       	ldd	r24, Y+2	; 0x02
    8492:	9f ef       	ldi	r25, 0xFF	; 255
    8494:	98 0f       	add	r25, r24
    8496:	9a 83       	std	Y+2, r25	; 0x02
    8498:	88 23       	and	r24, r24
    849a:	a9 f0       	breq	.+42     	; 0x84c6 <ds3231_responding+0x48>
    849c:	ce 01       	movw	r24, r28
    849e:	03 96       	adiw	r24, 0x03	; 3
    84a0:	21 e0       	ldi	r18, 0x01	; 1
    84a2:	ac 01       	movw	r20, r24
    84a4:	60 e1       	ldi	r22, 0x10	; 16
    84a6:	80 ed       	ldi	r24, 0xD0	; 208
    84a8:	0e 94 61 4b 	call	0x96c2	; 0x96c2 <I2C_0_GetData>
    84ac:	98 2f       	mov	r25, r24
    84ae:	81 e0       	ldi	r24, 0x01	; 1
    84b0:	91 30       	cpi	r25, 0x01	; 1
    84b2:	09 f0       	breq	.+2      	; 0x84b6 <ds3231_responding+0x38>
    84b4:	80 e0       	ldi	r24, 0x00	; 0
    84b6:	89 83       	std	Y+1, r24	; 0x01
    84b8:	99 81       	ldd	r25, Y+1	; 0x01
    84ba:	81 e0       	ldi	r24, 0x01	; 1
    84bc:	89 27       	eor	r24, r25
    84be:	88 23       	and	r24, r24
    84c0:	11 f0       	breq	.+4      	; 0x84c6 <ds3231_responding+0x48>
    84c2:	81 e0       	ldi	r24, 0x01	; 1
    84c4:	01 c0       	rjmp	.+2      	; 0x84c8 <ds3231_responding+0x4a>
    84c6:	80 e0       	ldi	r24, 0x00	; 0
    84c8:	88 23       	and	r24, r24
    84ca:	09 f0       	breq	.+2      	; 0x84ce <ds3231_responding+0x50>
    84cc:	e1 cf       	rjmp	.-62     	; 0x8490 <ds3231_responding+0x12>
		return(responseReceived);
    84ce:	89 81       	ldd	r24, Y+1	; 0x01
	}
    84d0:	23 96       	adiw	r28, 0x03	; 3
    84d2:	cd bf       	out	0x3d, r28	; 61
    84d4:	de bf       	out	0x3e, r29	; 62
    84d6:	df 91       	pop	r29
    84d8:	cf 91       	pop	r28
    84da:	08 95       	ret

000084dc <ds3231_sync2nearestMinute>:

/* This simple synchronization approach works for all times except 12 midnight. If synchronization
results in the advancement to the next day, then one day would be lost. Instead of introducing that
error, this function merely fails to synchronize at midnight. */
bool ds3231_sync2nearestMinute()
{
    84dc:	cf 93       	push	r28
    84de:	df 93       	push	r29
    84e0:	cd b7       	in	r28, 0x3d	; 61
    84e2:	de b7       	in	r29, 0x3e	; 62
    84e4:	61 97       	sbiw	r28, 0x11	; 17
    84e6:	cd bf       	out	0x3d, r28	; 61
    84e8:	de bf       	out	0x3e, r29	; 62
	uint8_t tries = 10; /* try several times in case of transient bus issues */
    84ea:	8a e0       	ldi	r24, 0x0A	; 10
    84ec:	89 83       	std	Y+1, r24	; 0x01
	bool err = false;
    84ee:	1a 82       	std	Y+2, r1	; 0x02
	uint8_t data[8] = { 0, 0, 0 };
    84f0:	28 e0       	ldi	r18, 0x08	; 8
    84f2:	ce 01       	movw	r24, r28
    84f4:	0a 96       	adiw	r24, 0x0a	; 10
    84f6:	fc 01       	movw	r30, r24
    84f8:	32 2f       	mov	r19, r18
    84fa:	11 92       	st	Z+, r1
    84fc:	3a 95       	dec	r19
    84fe:	e9 f7       	brne	.-6      	; 0x84fa <ds3231_sync2nearestMinute+0x1e>
		
	while(tries-- && (err = (I2C_0_GetData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 3) != 3)));
    8500:	89 81       	ldd	r24, Y+1	; 0x01
    8502:	9f ef       	ldi	r25, 0xFF	; 255
    8504:	98 0f       	add	r25, r24
    8506:	99 83       	std	Y+1, r25	; 0x01
    8508:	88 23       	and	r24, r24
    850a:	99 f0       	breq	.+38     	; 0x8532 <ds3231_sync2nearestMinute+0x56>
    850c:	ce 01       	movw	r24, r28
    850e:	0a 96       	adiw	r24, 0x0a	; 10
    8510:	23 e0       	ldi	r18, 0x03	; 3
    8512:	ac 01       	movw	r20, r24
    8514:	60 e0       	ldi	r22, 0x00	; 0
    8516:	80 ed       	ldi	r24, 0xD0	; 208
    8518:	0e 94 61 4b 	call	0x96c2	; 0x96c2 <I2C_0_GetData>
    851c:	98 2f       	mov	r25, r24
    851e:	81 e0       	ldi	r24, 0x01	; 1
    8520:	93 30       	cpi	r25, 0x03	; 3
    8522:	09 f4       	brne	.+2      	; 0x8526 <ds3231_sync2nearestMinute+0x4a>
    8524:	80 e0       	ldi	r24, 0x00	; 0
    8526:	8a 83       	std	Y+2, r24	; 0x02
    8528:	8a 81       	ldd	r24, Y+2	; 0x02
    852a:	88 23       	and	r24, r24
    852c:	11 f0       	breq	.+4      	; 0x8532 <ds3231_sync2nearestMinute+0x56>
    852e:	81 e0       	ldi	r24, 0x01	; 1
    8530:	01 c0       	rjmp	.+2      	; 0x8534 <ds3231_sync2nearestMinute+0x58>
    8532:	80 e0       	ldi	r24, 0x00	; 0
    8534:	88 23       	and	r24, r24
    8536:	09 f0       	breq	.+2      	; 0x853a <ds3231_sync2nearestMinute+0x5e>
    8538:	e3 cf       	rjmp	.-58     	; 0x8500 <ds3231_sync2nearestMinute+0x24>

	if(!err)
    853a:	9a 81       	ldd	r25, Y+2	; 0x02
    853c:	81 e0       	ldi	r24, 0x01	; 1
    853e:	89 27       	eor	r24, r25
    8540:	88 23       	and	r24, r24
    8542:	09 f4       	brne	.+2      	; 0x8546 <ds3231_sync2nearestMinute+0x6a>
    8544:	ad c0       	rjmp	.+346    	; 0x86a0 <ds3231_sync2nearestMinute+0x1c4>
		uint8_t hour10;
		uint8_t hour;
		bool am_pm;
		bool twelvehour;

		seconds = bcd2dec(data[0]);
    8546:	8a 85       	ldd	r24, Y+10	; 0x0a
    8548:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    854c:	8e 83       	std	Y+6, r24	; 0x06
		minutes = bcd2dec(data[1]);
    854e:	8b 85       	ldd	r24, Y+11	; 0x0b
    8550:	0e 94 cf 3b 	call	0x779e	; 0x779e <_Z7bcd2dech>
    8554:	8c 83       	std	Y+4, r24	; 0x04
		am_pm = ((data[2] >> 5) & 0x01);
    8556:	8c 85       	ldd	r24, Y+12	; 0x0c
    8558:	88 2f       	mov	r24, r24
    855a:	90 e0       	ldi	r25, 0x00	; 0
    855c:	80 72       	andi	r24, 0x20	; 32
    855e:	99 27       	eor	r25, r25
    8560:	21 e0       	ldi	r18, 0x01	; 1
    8562:	89 2b       	or	r24, r25
    8564:	09 f4       	brne	.+2      	; 0x8568 <ds3231_sync2nearestMinute+0x8c>
    8566:	20 e0       	ldi	r18, 0x00	; 0
    8568:	2f 83       	std	Y+7, r18	; 0x07
		hour10 = ((data[2] >> 4) & 0x01);
    856a:	8c 85       	ldd	r24, Y+12	; 0x0c
    856c:	88 2f       	mov	r24, r24
    856e:	90 e0       	ldi	r25, 0x00	; 0
    8570:	95 95       	asr	r25
    8572:	87 95       	ror	r24
    8574:	95 95       	asr	r25
    8576:	87 95       	ror	r24
    8578:	95 95       	asr	r25
    857a:	87 95       	ror	r24
    857c:	95 95       	asr	r25
    857e:	87 95       	ror	r24
    8580:	81 70       	andi	r24, 0x01	; 1
    8582:	8d 83       	std	Y+5, r24	; 0x05
		hour = (data[2] & 0x0f);
    8584:	8c 85       	ldd	r24, Y+12	; 0x0c
    8586:	8f 70       	andi	r24, 0x0F	; 15
    8588:	88 87       	std	Y+8, r24	; 0x08

		twelvehour = ((data[2] >> 6) & 0x01);
    858a:	8c 85       	ldd	r24, Y+12	; 0x0c
    858c:	88 2f       	mov	r24, r24
    858e:	90 e0       	ldi	r25, 0x00	; 0
    8590:	80 74       	andi	r24, 0x40	; 64
    8592:	99 27       	eor	r25, r25
    8594:	21 e0       	ldi	r18, 0x01	; 1
    8596:	89 2b       	or	r24, r25
    8598:	09 f4       	brne	.+2      	; 0x859c <ds3231_sync2nearestMinute+0xc0>
    859a:	20 e0       	ldi	r18, 0x00	; 0
    859c:	29 87       	std	Y+9, r18	; 0x09

		if(!twelvehour && am_pm)
    859e:	99 85       	ldd	r25, Y+9	; 0x09
    85a0:	81 e0       	ldi	r24, 0x01	; 1
    85a2:	89 27       	eor	r24, r25
    85a4:	88 23       	and	r24, r24
    85a6:	29 f0       	breq	.+10     	; 0x85b2 <ds3231_sync2nearestMinute+0xd6>
    85a8:	8f 81       	ldd	r24, Y+7	; 0x07
    85aa:	88 23       	and	r24, r24
    85ac:	11 f0       	breq	.+4      	; 0x85b2 <ds3231_sync2nearestMinute+0xd6>
		{
			hour10 = 2;
    85ae:	82 e0       	ldi	r24, 0x02	; 2
    85b0:	8d 83       	std	Y+5, r24	; 0x05
		}

		hours = 10 * hour10 + hour;
    85b2:	8d 81       	ldd	r24, Y+5	; 0x05
    85b4:	88 0f       	add	r24, r24
    85b6:	98 2f       	mov	r25, r24
    85b8:	99 0f       	add	r25, r25
    85ba:	99 0f       	add	r25, r25
    85bc:	98 0f       	add	r25, r24
    85be:	88 85       	ldd	r24, Y+8	; 0x08
    85c0:	89 0f       	add	r24, r25
    85c2:	8b 83       	std	Y+3, r24	; 0x03

		if(seconds > 30)
    85c4:	8e 81       	ldd	r24, Y+6	; 0x06
    85c6:	8f 31       	cpi	r24, 0x1F	; 31
    85c8:	78 f0       	brcs	.+30     	; 0x85e8 <ds3231_sync2nearestMinute+0x10c>
		{
			minutes++;
    85ca:	8c 81       	ldd	r24, Y+4	; 0x04
    85cc:	8f 5f       	subi	r24, 0xFF	; 255
    85ce:	8c 83       	std	Y+4, r24	; 0x04

			if(minutes > 59)
    85d0:	8c 81       	ldd	r24, Y+4	; 0x04
    85d2:	8c 33       	cpi	r24, 0x3C	; 60
    85d4:	48 f0       	brcs	.+18     	; 0x85e8 <ds3231_sync2nearestMinute+0x10c>
			{
				minutes = 0;
    85d6:	1c 82       	std	Y+4, r1	; 0x04
				hours++;
    85d8:	8b 81       	ldd	r24, Y+3	; 0x03
    85da:	8f 5f       	subi	r24, 0xFF	; 255
    85dc:	8b 83       	std	Y+3, r24	; 0x03

				if(hours > 23) /* Don't attempt to synchronize at midnight */
    85de:	8b 81       	ldd	r24, Y+3	; 0x03
    85e0:	88 31       	cpi	r24, 0x18	; 24
    85e2:	10 f0       	brcs	.+4      	; 0x85e8 <ds3231_sync2nearestMinute+0x10c>
				{
					err = true;
    85e4:	81 e0       	ldi	r24, 0x01	; 1
    85e6:	8a 83       	std	Y+2, r24	; 0x02
				}
			}
		}

		if(!err)
    85e8:	9a 81       	ldd	r25, Y+2	; 0x02
    85ea:	81 e0       	ldi	r24, 0x01	; 1
    85ec:	89 27       	eor	r24, r25
    85ee:	88 23       	and	r24, r24
    85f0:	09 f4       	brne	.+2      	; 0x85f4 <ds3231_sync2nearestMinute+0x118>
    85f2:	56 c0       	rjmp	.+172    	; 0x86a0 <ds3231_sync2nearestMinute+0x1c4>
		{
			data[0] = 0; /* seconds = 00 */
    85f4:	1a 86       	std	Y+10, r1	; 0x0a
			data[1] = dec2bcd(minutes);
    85f6:	8c 81       	ldd	r24, Y+4	; 0x04
    85f8:	0e 94 ef 3b 	call	0x77de	; 0x77de <_Z7dec2bcdh>
    85fc:	8b 87       	std	Y+11, r24	; 0x0b
			data[2] = 0;
    85fe:	1c 86       	std	Y+12, r1	; 0x0c

			if(twelvehour)
    8600:	89 85       	ldd	r24, Y+9	; 0x09
    8602:	88 23       	and	r24, r24
    8604:	81 f0       	breq	.+32     	; 0x8626 <ds3231_sync2nearestMinute+0x14a>
			{
				data[2] |= 0x40; /* set  12-hour bit */
    8606:	8c 85       	ldd	r24, Y+12	; 0x0c
    8608:	80 64       	ori	r24, 0x40	; 64
    860a:	8c 87       	std	Y+12, r24	; 0x0c

				if(hours >= 12)
    860c:	8b 81       	ldd	r24, Y+3	; 0x03
    860e:	8c 30       	cpi	r24, 0x0C	; 12
    8610:	18 f0       	brcs	.+6      	; 0x8618 <ds3231_sync2nearestMinute+0x13c>
				{
					data[2] |= 0x20; /* set pm bit */
    8612:	8c 85       	ldd	r24, Y+12	; 0x0c
    8614:	80 62       	ori	r24, 0x20	; 32
    8616:	8c 87       	std	Y+12, r24	; 0x0c
				}

				if(hours >= 10)
    8618:	8b 81       	ldd	r24, Y+3	; 0x03
    861a:	8a 30       	cpi	r24, 0x0A	; 10
    861c:	88 f0       	brcs	.+34     	; 0x8640 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10;
    861e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8620:	80 61       	ori	r24, 0x10	; 16
    8622:	8c 87       	std	Y+12, r24	; 0x0c
    8624:	0d c0       	rjmp	.+26     	; 0x8640 <ds3231_sync2nearestMinute+0x164>
				}
			}
			else
			{
				if(hours >= 20)
    8626:	8b 81       	ldd	r24, Y+3	; 0x03
    8628:	84 31       	cpi	r24, 0x14	; 20
    862a:	20 f0       	brcs	.+8      	; 0x8634 <ds3231_sync2nearestMinute+0x158>
				{
					data[2] |= 0x20; /* set 20 bit */
    862c:	8c 85       	ldd	r24, Y+12	; 0x0c
    862e:	80 62       	ori	r24, 0x20	; 32
    8630:	8c 87       	std	Y+12, r24	; 0x0c
    8632:	06 c0       	rjmp	.+12     	; 0x8640 <ds3231_sync2nearestMinute+0x164>
				}
				else if(hours >= 10)
    8634:	8b 81       	ldd	r24, Y+3	; 0x03
    8636:	8a 30       	cpi	r24, 0x0A	; 10
    8638:	18 f0       	brcs	.+6      	; 0x8640 <ds3231_sync2nearestMinute+0x164>
				{
					data[2] |= 0x10; /* set 10 bit */
    863a:	8c 85       	ldd	r24, Y+12	; 0x0c
    863c:	80 61       	ori	r24, 0x10	; 16
    863e:	8c 87       	std	Y+12, r24	; 0x0c
				}
			}

			data[2] |= hours % 10;
    8640:	2c 85       	ldd	r18, Y+12	; 0x0c
    8642:	9b 81       	ldd	r25, Y+3	; 0x03
    8644:	8d ec       	ldi	r24, 0xCD	; 205
    8646:	98 9f       	mul	r25, r24
    8648:	81 2d       	mov	r24, r1
    864a:	11 24       	eor	r1, r1
    864c:	86 95       	lsr	r24
    864e:	86 95       	lsr	r24
    8650:	86 95       	lsr	r24
    8652:	88 0f       	add	r24, r24
    8654:	38 2f       	mov	r19, r24
    8656:	33 0f       	add	r19, r19
    8658:	33 0f       	add	r19, r19
    865a:	83 0f       	add	r24, r19
    865c:	e9 2f       	mov	r30, r25
    865e:	e8 1b       	sub	r30, r24
    8660:	8e 2f       	mov	r24, r30
    8662:	82 2b       	or	r24, r18
    8664:	8c 87       	std	Y+12, r24	; 0x0c
			
			while(tries-- && (err = (I2C_0_SendData(DS3231_I2C_SLAVE_ADDR, RTC_SECONDS, (uint8_t *)data, 4) != 4)));
    8666:	89 81       	ldd	r24, Y+1	; 0x01
    8668:	9f ef       	ldi	r25, 0xFF	; 255
    866a:	98 0f       	add	r25, r24
    866c:	99 83       	std	Y+1, r25	; 0x01
    866e:	88 23       	and	r24, r24
    8670:	99 f0       	breq	.+38     	; 0x8698 <ds3231_sync2nearestMinute+0x1bc>
    8672:	ce 01       	movw	r24, r28
    8674:	0a 96       	adiw	r24, 0x0a	; 10
    8676:	24 e0       	ldi	r18, 0x04	; 4
    8678:	ac 01       	movw	r20, r24
    867a:	60 e0       	ldi	r22, 0x00	; 0
    867c:	80 ed       	ldi	r24, 0xD0	; 208
    867e:	0e 94 f9 4a 	call	0x95f2	; 0x95f2 <I2C_0_SendData>
    8682:	98 2f       	mov	r25, r24
    8684:	81 e0       	ldi	r24, 0x01	; 1
    8686:	94 30       	cpi	r25, 0x04	; 4
    8688:	09 f4       	brne	.+2      	; 0x868c <ds3231_sync2nearestMinute+0x1b0>
    868a:	80 e0       	ldi	r24, 0x00	; 0
    868c:	8a 83       	std	Y+2, r24	; 0x02
    868e:	8a 81       	ldd	r24, Y+2	; 0x02
    8690:	88 23       	and	r24, r24
    8692:	11 f0       	breq	.+4      	; 0x8698 <ds3231_sync2nearestMinute+0x1bc>
    8694:	81 e0       	ldi	r24, 0x01	; 1
    8696:	01 c0       	rjmp	.+2      	; 0x869a <ds3231_sync2nearestMinute+0x1be>
    8698:	80 e0       	ldi	r24, 0x00	; 0
    869a:	88 23       	and	r24, r24
    869c:	09 f0       	breq	.+2      	; 0x86a0 <ds3231_sync2nearestMinute+0x1c4>
    869e:	e3 cf       	rjmp	.-58     	; 0x8666 <ds3231_sync2nearestMinute+0x18a>
		}
	}

	return err;
    86a0:	8a 81       	ldd	r24, Y+2	; 0x02
}
    86a2:	61 96       	adiw	r28, 0x11	; 17
    86a4:	cd bf       	out	0x3d, r28	; 61
    86a6:	de bf       	out	0x3e, r29	; 62
    86a8:	df 91       	pop	r29
    86aa:	cf 91       	pop	r28
    86ac:	08 95       	ret

000086ae <convertEpochToTimeString>:
/**
 *   Converts an epoch (seconds since 1900)  into a string with format "ddd dd-mon-yyyy hh:mm:ss zzz"
 */
#define THIRTY_YEARS 946684800
char* convertEpochToTimeString(time_t epoch, char* buf, size_t size)
 {
    86ae:	cf 93       	push	r28
    86b0:	df 93       	push	r29
    86b2:	cd b7       	in	r28, 0x3d	; 61
    86b4:	de b7       	in	r29, 0x3e	; 62
    86b6:	68 97       	sbiw	r28, 0x18	; 24
    86b8:	cd bf       	out	0x3d, r28	; 61
    86ba:	de bf       	out	0x3e, r29	; 62
    86bc:	69 8b       	std	Y+17, r22	; 0x11
    86be:	7a 8b       	std	Y+18, r23	; 0x12
    86c0:	8b 8b       	std	Y+19, r24	; 0x13
    86c2:	9c 8b       	std	Y+20, r25	; 0x14
    86c4:	4d 8b       	std	Y+21, r20	; 0x15
    86c6:	5e 8b       	std	Y+22, r21	; 0x16
    86c8:	2f 8b       	std	Y+23, r18	; 0x17
    86ca:	38 8f       	std	Y+24, r19	; 0x18
   struct tm  ts;
	time_t t = epoch - THIRTY_YEARS;
    86cc:	89 89       	ldd	r24, Y+17	; 0x11
    86ce:	9a 89       	ldd	r25, Y+18	; 0x12
    86d0:	ab 89       	ldd	r26, Y+19	; 0x13
    86d2:	bc 89       	ldd	r27, Y+20	; 0x14
    86d4:	80 58       	subi	r24, 0x80	; 128
    86d6:	93 44       	sbci	r25, 0x43	; 67
    86d8:	ad 46       	sbci	r26, 0x6D	; 109
    86da:	b8 43       	sbci	r27, 0x38	; 56
    86dc:	8d 87       	std	Y+13, r24	; 0x0d
    86de:	9e 87       	std	Y+14, r25	; 0x0e
    86e0:	af 87       	std	Y+15, r26	; 0x0f
    86e2:	b8 8b       	std	Y+16, r27	; 0x10

    // Format time, "ddd dd-mon-yyyy hh:mm:ss zzz"
    ts = *localtime(&t);
    86e4:	ce 01       	movw	r24, r28
    86e6:	0d 96       	adiw	r24, 0x0d	; 13
    86e8:	0e 94 fd 01 	call	0x3fa	; 0x3fa <localtime>
    86ec:	2c e0       	ldi	r18, 0x0C	; 12
    86ee:	fc 01       	movw	r30, r24
    86f0:	ce 01       	movw	r24, r28
    86f2:	01 96       	adiw	r24, 0x01	; 1
    86f4:	dc 01       	movw	r26, r24
    86f6:	01 90       	ld	r0, Z+
    86f8:	0d 92       	st	X+, r0
    86fa:	2a 95       	dec	r18
    86fc:	e1 f7       	brne	.-8      	; 0x86f6 <convertEpochToTimeString+0x48>
    strftime(buf, size, "%a %d-%b-%Y %H:%M:%S", &ts);
    86fe:	6f 89       	ldd	r22, Y+23	; 0x17
    8700:	78 8d       	ldd	r23, Y+24	; 0x18
    8702:	8d 89       	ldd	r24, Y+21	; 0x15
    8704:	9e 89       	ldd	r25, Y+22	; 0x16
    8706:	9e 01       	movw	r18, r28
    8708:	2f 5f       	subi	r18, 0xFF	; 255
    870a:	3f 4f       	sbci	r19, 0xFF	; 255
    870c:	41 e9       	ldi	r20, 0x91	; 145
    870e:	54 e4       	ldi	r21, 0x44	; 68
    8710:	0e 94 a6 02 	call	0x54c	; 0x54c <strftime>
   return buf;
    8714:	8d 89       	ldd	r24, Y+21	; 0x15
    8716:	9e 89       	ldd	r25, Y+22	; 0x16
 }
    8718:	68 96       	adiw	r28, 0x18	; 24
    871a:	cd bf       	out	0x3d, r28	; 61
    871c:	de bf       	out	0x3e, r29	; 62
    871e:	df 91       	pop	r29
    8720:	cf 91       	pop	r28
    8722:	08 95       	ret

00008724 <_ZN13EepromManagerC1Ev>:
extern uint16_t g_80m_power_level_mW;

extern char g_tempStr[];

/* default constructor */
EepromManager::EepromManager()
    8724:	cf 93       	push	r28
    8726:	df 93       	push	r29
    8728:	00 d0       	rcall	.+0      	; 0x872a <_ZN13EepromManagerC1Ev+0x6>
    872a:	cd b7       	in	r28, 0x3d	; 61
    872c:	de b7       	in	r29, 0x3e	; 62
    872e:	89 83       	std	Y+1, r24	; 0x01
    8730:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*EepromManager */
    8732:	00 00       	nop
    8734:	0f 90       	pop	r0
    8736:	0f 90       	pop	r0
    8738:	df 91       	pop	r29
    873a:	cf 91       	pop	r28
    873c:	08 95       	ret

0000873e <_ZN13EepromManagerD1Ev>:

/* default destructor */
EepromManager::~EepromManager()
    873e:	cf 93       	push	r28
    8740:	df 93       	push	r29
    8742:	00 d0       	rcall	.+0      	; 0x8744 <_ZN13EepromManagerD1Ev+0x6>
    8744:	cd b7       	in	r28, 0x3d	; 61
    8746:	de b7       	in	r29, 0x3e	; 62
    8748:	89 83       	std	Y+1, r24	; 0x01
    874a:	9a 83       	std	Y+2, r25	; 0x02
{
}   /*~EepromManager */
    874c:	00 00       	nop
    874e:	0f 90       	pop	r0
    8750:	0f 90       	pop	r0
    8752:	df 91       	pop	r29
    8754:	cf 91       	pop	r28
    8756:	08 95       	ret

00008758 <_Z21avr_eeprom_write_bytejh>:
#include <avr/io.h>

typedef uint16_t eeprom_addr_t;

// to write
void avr_eeprom_write_byte(eeprom_addr_t index, uint8_t in) {
    8758:	cf 93       	push	r28
    875a:	df 93       	push	r29
    875c:	00 d0       	rcall	.+0      	; 0x875e <_Z21avr_eeprom_write_bytejh+0x6>
    875e:	1f 92       	push	r1
    8760:	cd b7       	in	r28, 0x3d	; 61
    8762:	de b7       	in	r29, 0x3e	; 62
    8764:	89 83       	std	Y+1, r24	; 0x01
    8766:	9a 83       	std	Y+2, r25	; 0x02
    8768:	6b 83       	std	Y+3, r22	; 0x03
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    876a:	80 e0       	ldi	r24, 0x00	; 0
    876c:	90 e1       	ldi	r25, 0x10	; 16
    876e:	fc 01       	movw	r30, r24
    8770:	82 81       	ldd	r24, Z+2	; 0x02
    8772:	88 2f       	mov	r24, r24
    8774:	90 e0       	ldi	r25, 0x00	; 0
    8776:	82 70       	andi	r24, 0x02	; 2
    8778:	99 27       	eor	r25, r25
    877a:	21 e0       	ldi	r18, 0x01	; 1
    877c:	89 2b       	or	r24, r25
    877e:	09 f4       	brne	.+2      	; 0x8782 <_Z21avr_eeprom_write_bytejh+0x2a>
    8780:	20 e0       	ldi	r18, 0x00	; 0
    8782:	22 23       	and	r18, r18
    8784:	09 f0       	breq	.+2      	; 0x8788 <_Z21avr_eeprom_write_bytejh+0x30>
    8786:	f1 cf       	rjmp	.-30     	; 0x876a <_Z21avr_eeprom_write_bytejh+0x12>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8788:	8d e9       	ldi	r24, 0x9D	; 157
    878a:	93 e1       	ldi	r25, 0x13	; 19
    878c:	84 bf       	out	0x34, r24	; 52
    878e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint8_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    8792:	89 81       	ldd	r24, Y+1	; 0x01
    8794:	9a 81       	ldd	r25, Y+2	; 0x02
    8796:	9c 5e       	subi	r25, 0xEC	; 236
    8798:	2b 81       	ldd	r18, Y+3	; 0x03
    879a:	fc 01       	movw	r30, r24
    879c:	20 83       	st	Z, r18
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    879e:	8d e9       	ldi	r24, 0x9D	; 157
    87a0:	90 e0       	ldi	r25, 0x00	; 0
    87a2:	84 bf       	out	0x34, r24	; 52
    87a4:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    87a8:	00 00       	nop
    87aa:	23 96       	adiw	r28, 0x03	; 3
    87ac:	cd bf       	out	0x3d, r28	; 61
    87ae:	de bf       	out	0x3e, r29	; 62
    87b0:	df 91       	pop	r29
    87b2:	cf 91       	pop	r28
    87b4:	08 95       	ret

000087b6 <_Z21avr_eeprom_write_wordjj>:

void avr_eeprom_write_word(eeprom_addr_t index, uint16_t in) {
    87b6:	cf 93       	push	r28
    87b8:	df 93       	push	r29
    87ba:	00 d0       	rcall	.+0      	; 0x87bc <_Z21avr_eeprom_write_wordjj+0x6>
    87bc:	00 d0       	rcall	.+0      	; 0x87be <_Z21avr_eeprom_write_wordjj+0x8>
    87be:	cd b7       	in	r28, 0x3d	; 61
    87c0:	de b7       	in	r29, 0x3e	; 62
    87c2:	89 83       	std	Y+1, r24	; 0x01
    87c4:	9a 83       	std	Y+2, r25	; 0x02
    87c6:	6b 83       	std	Y+3, r22	; 0x03
    87c8:	7c 83       	std	Y+4, r23	; 0x04
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    87ca:	80 e0       	ldi	r24, 0x00	; 0
    87cc:	90 e1       	ldi	r25, 0x10	; 16
    87ce:	fc 01       	movw	r30, r24
    87d0:	82 81       	ldd	r24, Z+2	; 0x02
    87d2:	88 2f       	mov	r24, r24
    87d4:	90 e0       	ldi	r25, 0x00	; 0
    87d6:	82 70       	andi	r24, 0x02	; 2
    87d8:	99 27       	eor	r25, r25
    87da:	21 e0       	ldi	r18, 0x01	; 1
    87dc:	89 2b       	or	r24, r25
    87de:	09 f4       	brne	.+2      	; 0x87e2 <_Z21avr_eeprom_write_wordjj+0x2c>
    87e0:	20 e0       	ldi	r18, 0x00	; 0
    87e2:	22 23       	and	r18, r18
    87e4:	09 f0       	breq	.+2      	; 0x87e8 <_Z21avr_eeprom_write_wordjj+0x32>
    87e6:	f1 cf       	rjmp	.-30     	; 0x87ca <_Z21avr_eeprom_write_wordjj+0x14>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    87e8:	8d e9       	ldi	r24, 0x9D	; 157
    87ea:	93 e1       	ldi	r25, 0x13	; 19
    87ec:	84 bf       	out	0x34, r24	; 52
    87ee:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint16_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    87f2:	89 81       	ldd	r24, Y+1	; 0x01
    87f4:	9a 81       	ldd	r25, Y+2	; 0x02
    87f6:	9c 5e       	subi	r25, 0xEC	; 236
    87f8:	9c 01       	movw	r18, r24
    87fa:	8b 81       	ldd	r24, Y+3	; 0x03
    87fc:	9c 81       	ldd	r25, Y+4	; 0x04
    87fe:	f9 01       	movw	r30, r18
    8800:	80 83       	st	Z, r24
    8802:	91 83       	std	Z+1, r25	; 0x01
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8804:	8d e9       	ldi	r24, 0x9D	; 157
    8806:	90 e0       	ldi	r25, 0x00	; 0
    8808:	84 bf       	out	0x34, r24	; 52
    880a:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    880e:	00 00       	nop
    8810:	24 96       	adiw	r28, 0x04	; 4
    8812:	cd bf       	out	0x3d, r28	; 61
    8814:	de bf       	out	0x3e, r29	; 62
    8816:	df 91       	pop	r29
    8818:	cf 91       	pop	r28
    881a:	08 95       	ret

0000881c <_Z22avr_eeprom_write_dwordjm>:

void avr_eeprom_write_dword(eeprom_addr_t index, uint32_t in) {
    881c:	cf 93       	push	r28
    881e:	df 93       	push	r29
    8820:	cd b7       	in	r28, 0x3d	; 61
    8822:	de b7       	in	r29, 0x3e	; 62
    8824:	26 97       	sbiw	r28, 0x06	; 6
    8826:	cd bf       	out	0x3d, r28	; 61
    8828:	de bf       	out	0x3e, r29	; 62
    882a:	89 83       	std	Y+1, r24	; 0x01
    882c:	9a 83       	std	Y+2, r25	; 0x02
    882e:	4b 83       	std	Y+3, r20	; 0x03
    8830:	5c 83       	std	Y+4, r21	; 0x04
    8832:	6d 83       	std	Y+5, r22	; 0x05
    8834:	7e 83       	std	Y+6, r23	; 0x06
	while (NVMCTRL.STATUS & NVMCTRL_EEBUSY_bm);
    8836:	80 e0       	ldi	r24, 0x00	; 0
    8838:	90 e1       	ldi	r25, 0x10	; 16
    883a:	fc 01       	movw	r30, r24
    883c:	82 81       	ldd	r24, Z+2	; 0x02
    883e:	88 2f       	mov	r24, r24
    8840:	90 e0       	ldi	r25, 0x00	; 0
    8842:	82 70       	andi	r24, 0x02	; 2
    8844:	99 27       	eor	r25, r25
    8846:	21 e0       	ldi	r18, 0x01	; 1
    8848:	89 2b       	or	r24, r25
    884a:	09 f4       	brne	.+2      	; 0x884e <_Z22avr_eeprom_write_dwordjm+0x32>
    884c:	20 e0       	ldi	r18, 0x00	; 0
    884e:	22 23       	and	r18, r18
    8850:	09 f0       	breq	.+2      	; 0x8854 <_Z22avr_eeprom_write_dwordjm+0x38>
    8852:	f1 cf       	rjmp	.-30     	; 0x8836 <_Z22avr_eeprom_write_dwordjm+0x1a>
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_EEERWR_gc);
    8854:	8d e9       	ldi	r24, 0x9D	; 157
    8856:	93 e1       	ldi	r25, 0x13	; 19
    8858:	84 bf       	out	0x34, r24	; 52
    885a:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
	*(uint32_t*)(eeprom_addr_t)(MAPPED_EEPROM_START+index) = in;
    885e:	89 81       	ldd	r24, Y+1	; 0x01
    8860:	9a 81       	ldd	r25, Y+2	; 0x02
    8862:	9c 5e       	subi	r25, 0xEC	; 236
    8864:	9c 01       	movw	r18, r24
    8866:	8b 81       	ldd	r24, Y+3	; 0x03
    8868:	9c 81       	ldd	r25, Y+4	; 0x04
    886a:	ad 81       	ldd	r26, Y+5	; 0x05
    886c:	be 81       	ldd	r27, Y+6	; 0x06
    886e:	f9 01       	movw	r30, r18
    8870:	80 83       	st	Z, r24
    8872:	91 83       	std	Z+1, r25	; 0x01
    8874:	a2 83       	std	Z+2, r26	; 0x02
    8876:	b3 83       	std	Z+3, r27	; 0x03
	_PROTECTED_WRITE_SPM(NVMCTRL.CTRLA, NVMCTRL_CMD_NONE_gc);
    8878:	8d e9       	ldi	r24, 0x9D	; 157
    887a:	90 e0       	ldi	r25, 0x00	; 0
    887c:	84 bf       	out	0x34, r24	; 52
    887e:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__TEXT_REGION_LENGTH__+0x7e1000>
}
    8882:	00 00       	nop
    8884:	26 96       	adiw	r28, 0x06	; 6
    8886:	cd bf       	out	0x3d, r28	; 61
    8888:	de bf       	out	0x3e, r29	; 62
    888a:	df 91       	pop	r29
    888c:	cf 91       	pop	r28
    888e:	08 95       	ret

00008890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>:

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
    8890:	cf 93       	push	r28
    8892:	df 93       	push	r29
    8894:	cd b7       	in	r28, 0x3d	; 61
    8896:	de b7       	in	r29, 0x3e	; 62
    8898:	60 97       	sbiw	r28, 0x10	; 16
    889a:	cd bf       	out	0x3d, r28	; 61
    889c:	de bf       	out	0x3e, r29	; 62
    889e:	8c 87       	std	Y+12, r24	; 0x0c
    88a0:	9d 87       	std	Y+13, r25	; 0x0d
    88a2:	6e 87       	std	Y+14, r22	; 0x0e
    88a4:	4f 87       	std	Y+15, r20	; 0x0f
    88a6:	58 8b       	std	Y+16, r21	; 0x10
	if(!val)
    88a8:	8f 85       	ldd	r24, Y+15	; 0x0f
    88aa:	98 89       	ldd	r25, Y+16	; 0x10
    88ac:	89 2b       	or	r24, r25
    88ae:	09 f4       	brne	.+2      	; 0x88b2 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x22>
    88b0:	e8 c0       	rjmp	.+464    	; 0x8a82 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f2>
	{
		return;
	}

	switch(v)
    88b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    88b4:	88 2f       	mov	r24, r24
    88b6:	90 e0       	ldi	r25, 0x00	; 0
    88b8:	09 2e       	mov	r0, r25
    88ba:	00 0c       	add	r0, r0
    88bc:	aa 0b       	sbc	r26, r26
    88be:	bb 0b       	sbc	r27, r27
    88c0:	40 e0       	ldi	r20, 0x00	; 0
    88c2:	50 e0       	ldi	r21, 0x00	; 0
    88c4:	23 e3       	ldi	r18, 0x33	; 51
    88c6:	30 e0       	ldi	r19, 0x00	; 0
    88c8:	84 1b       	sub	r24, r20
    88ca:	95 0b       	sbc	r25, r21
    88cc:	28 17       	cp	r18, r24
    88ce:	39 07       	cpc	r19, r25
    88d0:	08 f4       	brcc	.+2      	; 0x88d4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x44>
    88d2:	d9 c0       	rjmp	.+434    	; 0x8a86 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f6>
    88d4:	8b 57       	subi	r24, 0x7B	; 123
    88d6:	9f 4f       	sbci	r25, 0xFF	; 255
    88d8:	fc 01       	movw	r30, r24
    88da:	0c 94 f3 75 	jmp	0xebe6	; 0xebe6 <__tablejump2__>
	{
		case Frequency:
		{
			avr_eeprom_write_dword(Frequency, *(uint32_t*)val);
    88de:	8f 85       	ldd	r24, Y+15	; 0x0f
    88e0:	98 89       	ldd	r25, Y+16	; 0x10
    88e2:	fc 01       	movw	r30, r24
    88e4:	80 81       	ld	r24, Z
    88e6:	91 81       	ldd	r25, Z+1	; 0x01
    88e8:	a2 81       	ldd	r26, Z+2	; 0x02
    88ea:	b3 81       	ldd	r27, Z+3	; 0x03
    88ec:	ac 01       	movw	r20, r24
    88ee:	bd 01       	movw	r22, r26
    88f0:	8b e2       	ldi	r24, 0x2B	; 43
    88f2:	90 e0       	ldi	r25, 0x00	; 0
    88f4:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    88f8:	c7 c0       	rjmp	.+398    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case RTTY_offset:
		{
			avr_eeprom_write_dword(RTTY_offset, *(uint32_t*)val);
    88fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    88fc:	98 89       	ldd	r25, Y+16	; 0x10
    88fe:	fc 01       	movw	r30, r24
    8900:	80 81       	ld	r24, Z
    8902:	91 81       	ldd	r25, Z+1	; 0x01
    8904:	a2 81       	ldd	r26, Z+2	; 0x02
    8906:	b3 81       	ldd	r27, Z+3	; 0x03
    8908:	ac 01       	movw	r20, r24
    890a:	bd 01       	movw	r22, r26
    890c:	8f e2       	ldi	r24, 0x2F	; 47
    890e:	90 e0       	ldi	r25, 0x00	; 0
    8910:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8914:	b9 c0       	rjmp	.+370    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case RF_Power:
		{
			avr_eeprom_write_word(RF_Power, *(uint32_t*)val);			
    8916:	8f 85       	ldd	r24, Y+15	; 0x0f
    8918:	98 89       	ldd	r25, Y+16	; 0x10
    891a:	fc 01       	movw	r30, r24
    891c:	80 81       	ld	r24, Z
    891e:	91 81       	ldd	r25, Z+1	; 0x01
    8920:	a2 81       	ldd	r26, Z+2	; 0x02
    8922:	b3 81       	ldd	r27, Z+3	; 0x03
    8924:	bc 01       	movw	r22, r24
    8926:	83 e3       	ldi	r24, 0x33	; 51
    8928:	90 e0       	ldi	r25, 0x00	; 0
    892a:	0e 94 db 43 	call	0x87b6	; 0x87b6 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    892e:	ac c0       	rjmp	.+344    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>
		
		case StationID_text:
		{
			char* char_addr = (char*)val;
    8930:	8f 85       	ldd	r24, Y+15	; 0x0f
    8932:	98 89       	ldd	r25, Y+16	; 0x10
    8934:	89 83       	std	Y+1, r24	; 0x01
    8936:	9a 83       	std	Y+2, r25	; 0x02
			char c = *char_addr++;
    8938:	89 81       	ldd	r24, Y+1	; 0x01
    893a:	9a 81       	ldd	r25, Y+2	; 0x02
    893c:	9c 01       	movw	r18, r24
    893e:	2f 5f       	subi	r18, 0xFF	; 255
    8940:	3f 4f       	sbci	r19, 0xFF	; 255
    8942:	29 83       	std	Y+1, r18	; 0x01
    8944:	3a 83       	std	Y+2, r19	; 0x02
    8946:	fc 01       	movw	r30, r24
    8948:	80 81       	ld	r24, Z
    894a:	8b 83       	std	Y+3, r24	; 0x03
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;
    894c:	8a e0       	ldi	r24, 0x0A	; 10
    894e:	90 e0       	ldi	r25, 0x00	; 0
    8950:	8c 83       	std	Y+4, r24	; 0x04
    8952:	9d 83       	std	Y+5, r25	; 0x05

			while(c)
    8954:	8b 81       	ldd	r24, Y+3	; 0x03
    8956:	88 23       	and	r24, r24
    8958:	a9 f0       	breq	.+42     	; 0x8984 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xf4>
			{
				avr_eeprom_write_byte(j++, c);
    895a:	8c 81       	ldd	r24, Y+4	; 0x04
    895c:	9d 81       	ldd	r25, Y+5	; 0x05
    895e:	9c 01       	movw	r18, r24
    8960:	2f 5f       	subi	r18, 0xFF	; 255
    8962:	3f 4f       	sbci	r19, 0xFF	; 255
    8964:	2c 83       	std	Y+4, r18	; 0x04
    8966:	3d 83       	std	Y+5, r19	; 0x05
    8968:	6b 81       	ldd	r22, Y+3	; 0x03
    896a:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
				c = *char_addr++;
    896e:	89 81       	ldd	r24, Y+1	; 0x01
    8970:	9a 81       	ldd	r25, Y+2	; 0x02
    8972:	9c 01       	movw	r18, r24
    8974:	2f 5f       	subi	r18, 0xFF	; 255
    8976:	3f 4f       	sbci	r19, 0xFF	; 255
    8978:	29 83       	std	Y+1, r18	; 0x01
    897a:	3a 83       	std	Y+2, r19	; 0x02
    897c:	fc 01       	movw	r30, r24
    897e:	80 81       	ld	r24, Z
    8980:	8b 83       	std	Y+3, r24	; 0x03
			char* char_addr = (char*)val;
			char c = *char_addr++;
			
			eeprom_addr_t j = (eeprom_addr_t)StationID_text;

			while(c)
    8982:	e8 cf       	rjmp	.-48     	; 0x8954 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0xc4>
			{
				avr_eeprom_write_byte(j++, c);
				c = *char_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    8984:	8c 81       	ldd	r24, Y+4	; 0x04
    8986:	9d 81       	ldd	r25, Y+5	; 0x05
    8988:	60 e0       	ldi	r22, 0x00	; 0
    898a:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    898e:	7c c0       	rjmp	.+248    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case UnlockCode:
		{
			uint8_t* uint8_addr = (uint8_t*)val;
    8990:	8f 85       	ldd	r24, Y+15	; 0x0f
    8992:	98 89       	ldd	r25, Y+16	; 0x10
    8994:	8e 83       	std	Y+6, r24	; 0x06
    8996:	9f 83       	std	Y+7, r25	; 0x07
			uint8_t c = *uint8_addr++;
    8998:	8e 81       	ldd	r24, Y+6	; 0x06
    899a:	9f 81       	ldd	r25, Y+7	; 0x07
    899c:	9c 01       	movw	r18, r24
    899e:	2f 5f       	subi	r18, 0xFF	; 255
    89a0:	3f 4f       	sbci	r19, 0xFF	; 255
    89a2:	2e 83       	std	Y+6, r18	; 0x06
    89a4:	3f 83       	std	Y+7, r19	; 0x07
    89a6:	fc 01       	movw	r30, r24
    89a8:	80 81       	ld	r24, Z
    89aa:	88 87       	std	Y+8, r24	; 0x08
			int i = 0;
    89ac:	1a 86       	std	Y+10, r1	; 0x0a
    89ae:	1b 86       	std	Y+11, r1	; 0x0b
			uint8_t j = (uint8_t)UnlockCode;
    89b0:	8f e1       	ldi	r24, 0x1F	; 31
    89b2:	89 87       	std	Y+9, r24	; 0x09
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    89b4:	88 85       	ldd	r24, Y+8	; 0x08
    89b6:	88 23       	and	r24, r24
    89b8:	c1 f0       	breq	.+48     	; 0x89ea <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x15a>
    89ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    89bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    89be:	08 97       	sbiw	r24, 0x08	; 8
    89c0:	a4 f4       	brge	.+40     	; 0x89ea <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x15a>
			{
				avr_eeprom_write_byte(j++, c);
    89c2:	89 85       	ldd	r24, Y+9	; 0x09
    89c4:	91 e0       	ldi	r25, 0x01	; 1
    89c6:	98 0f       	add	r25, r24
    89c8:	99 87       	std	Y+9, r25	; 0x09
    89ca:	88 2f       	mov	r24, r24
    89cc:	90 e0       	ldi	r25, 0x00	; 0
    89ce:	68 85       	ldd	r22, Y+8	; 0x08
    89d0:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
				c = *uint8_addr++;
    89d4:	8e 81       	ldd	r24, Y+6	; 0x06
    89d6:	9f 81       	ldd	r25, Y+7	; 0x07
    89d8:	9c 01       	movw	r18, r24
    89da:	2f 5f       	subi	r18, 0xFF	; 255
    89dc:	3f 4f       	sbci	r19, 0xFF	; 255
    89de:	2e 83       	std	Y+6, r18	; 0x06
    89e0:	3f 83       	std	Y+7, r19	; 0x07
    89e2:	fc 01       	movw	r30, r24
    89e4:	80 81       	ld	r24, Z
    89e6:	88 87       	std	Y+8, r24	; 0x08
			uint8_t* uint8_addr = (uint8_t*)val;
			uint8_t c = *uint8_addr++;
			int i = 0;
			uint8_t j = (uint8_t)UnlockCode;
			
			while(c && (i < MAX_UNLOCK_CODE_LENGTH))
    89e8:	e5 cf       	rjmp	.-54     	; 0x89b4 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x124>
			{
				avr_eeprom_write_byte(j++, c);
				c = *uint8_addr++;
			}

			avr_eeprom_write_byte(j, 0);
    89ea:	89 85       	ldd	r24, Y+9	; 0x09
    89ec:	88 2f       	mov	r24, r24
    89ee:	90 e0       	ldi	r25, 0x00	; 0
    89f0:	60 e0       	ldi	r22, 0x00	; 0
    89f2:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    89f6:	48 c0       	rjmp	.+144    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Id_codespeed:
		{
			avr_eeprom_write_byte(Id_codespeed, *(uint8_t*)val);
    89f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    89fa:	98 89       	ldd	r25, Y+16	; 0x10
    89fc:	fc 01       	movw	r30, r24
    89fe:	80 81       	ld	r24, Z
    8a00:	68 2f       	mov	r22, r24
    8a02:	88 e2       	ldi	r24, 0x28	; 40
    8a04:	90 e0       	ldi	r25, 0x00	; 0
    8a06:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8a0a:	3e c0       	rjmp	.+124    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Fox_setting:
		{
			avr_eeprom_write_byte(Fox_setting, *(uint8_t*)val);
    8a0c:	8f 85       	ldd	r24, Y+15	; 0x0f
    8a0e:	98 89       	ldd	r25, Y+16	; 0x10
    8a10:	fc 01       	movw	r30, r24
    8a12:	80 81       	ld	r24, Z
    8a14:	68 2f       	mov	r22, r24
    8a16:	89 e2       	ldi	r24, 0x29	; 41
    8a18:	90 e0       	ldi	r25, 0x00	; 0
    8a1a:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8a1e:	34 c0       	rjmp	.+104    	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Event_start_epoch:
		{
			avr_eeprom_write_dword(Event_start_epoch, *(uint32_t*)val);
    8a20:	8f 85       	ldd	r24, Y+15	; 0x0f
    8a22:	98 89       	ldd	r25, Y+16	; 0x10
    8a24:	fc 01       	movw	r30, r24
    8a26:	80 81       	ld	r24, Z
    8a28:	91 81       	ldd	r25, Z+1	; 0x01
    8a2a:	a2 81       	ldd	r26, Z+2	; 0x02
    8a2c:	b3 81       	ldd	r27, Z+3	; 0x03
    8a2e:	ac 01       	movw	r20, r24
    8a30:	bd 01       	movw	r22, r26
    8a32:	82 e0       	ldi	r24, 0x02	; 2
    8a34:	90 e0       	ldi	r25, 0x00	; 0
    8a36:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8a3a:	26 c0       	rjmp	.+76     	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Event_finish_epoch:
		{
			avr_eeprom_write_dword(Event_finish_epoch, *(uint32_t*)val);
    8a3c:	8f 85       	ldd	r24, Y+15	; 0x0f
    8a3e:	98 89       	ldd	r25, Y+16	; 0x10
    8a40:	fc 01       	movw	r30, r24
    8a42:	80 81       	ld	r24, Z
    8a44:	91 81       	ldd	r25, Z+1	; 0x01
    8a46:	a2 81       	ldd	r26, Z+2	; 0x02
    8a48:	b3 81       	ldd	r27, Z+3	; 0x03
    8a4a:	ac 01       	movw	r20, r24
    8a4c:	bd 01       	movw	r22, r26
    8a4e:	86 e0       	ldi	r24, 0x06	; 6
    8a50:	90 e0       	ldi	r25, 0x00	; 0
    8a52:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>
		}
		break;
    8a56:	18 c0       	rjmp	.+48     	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Utc_offset:
		{
			avr_eeprom_write_byte(Utc_offset, *(uint8_t*)val);
    8a58:	8f 85       	ldd	r24, Y+15	; 0x0f
    8a5a:	98 89       	ldd	r25, Y+16	; 0x10
    8a5c:	fc 01       	movw	r30, r24
    8a5e:	80 81       	ld	r24, Z
    8a60:	68 2f       	mov	r22, r24
    8a62:	8a e2       	ldi	r24, 0x2A	; 42
    8a64:	90 e0       	ldi	r25, 0x00	; 0
    8a66:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
		}
		break;
    8a6a:	0e c0       	rjmp	.+28     	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		case Eeprom_initialization_flag:
		{
			avr_eeprom_write_word(Eeprom_initialization_flag, *(uint16_t*)val);
    8a6c:	8f 85       	ldd	r24, Y+15	; 0x0f
    8a6e:	98 89       	ldd	r25, Y+16	; 0x10
    8a70:	fc 01       	movw	r30, r24
    8a72:	80 81       	ld	r24, Z
    8a74:	91 81       	ldd	r25, Z+1	; 0x01
    8a76:	bc 01       	movw	r22, r24
    8a78:	80 e0       	ldi	r24, 0x00	; 0
    8a7a:	90 e0       	ldi	r25, 0x00	; 0
    8a7c:	0e 94 db 43 	call	0x87b6	; 0x87b6 <_Z21avr_eeprom_write_wordjj>
		}
		break;
    8a80:	03 c0       	rjmp	.+6      	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

void EepromManager::updateEEPROMVar(EE_var_t v, void* val)
{
	if(!val)
	{
		return;
    8a82:	00 00       	nop
    8a84:	01 c0       	rjmp	.+2      	; 0x8a88 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv+0x1f8>

		default:
		{

		}
		break;
    8a86:	00 00       	nop
	}
}
    8a88:	60 96       	adiw	r28, 0x10	; 16
    8a8a:	cd bf       	out	0x3d, r28	; 61
    8a8c:	de bf       	out	0x3e, r29	; 62
    8a8e:	df 91       	pop	r29
    8a90:	cf 91       	pop	r28
    8a92:	08 95       	ret

00008a94 <_ZN13EepromManager13saveAllEEPROMEv>:

/** 
 * Store any changed EEPROM variables
 */
void EepromManager::saveAllEEPROM(void)
{
    8a94:	0f 93       	push	r16
    8a96:	1f 93       	push	r17
    8a98:	cf 93       	push	r28
    8a9a:	df 93       	push	r29
    8a9c:	00 d0       	rcall	.+0      	; 0x8a9e <_ZN13EepromManager13saveAllEEPROMEv+0xa>
    8a9e:	00 d0       	rcall	.+0      	; 0x8aa0 <_ZN13EepromManager13saveAllEEPROMEv+0xc>
    8aa0:	cd b7       	in	r28, 0x3d	; 61
    8aa2:	de b7       	in	r29, 0x3e	; 62
    8aa4:	8b 83       	std	Y+3, r24	; 0x03
    8aa6:	9c 83       	std	Y+4, r25	; 0x04
	uint16_t i;
	
	if(g_id_codespeed != eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)))
    8aa8:	88 e2       	ldi	r24, 0x28	; 40
    8aaa:	90 e0       	ldi	r25, 0x00	; 0
    8aac:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8ab0:	28 2f       	mov	r18, r24
    8ab2:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <g_id_codespeed>
    8ab6:	81 e0       	ldi	r24, 0x01	; 1
    8ab8:	29 17       	cp	r18, r25
    8aba:	09 f4       	brne	.+2      	; 0x8abe <_ZN13EepromManager13saveAllEEPROMEv+0x2a>
    8abc:	80 e0       	ldi	r24, 0x00	; 0
    8abe:	88 23       	and	r24, r24
    8ac0:	39 f0       	breq	.+14     	; 0x8ad0 <_ZN13EepromManager13saveAllEEPROMEv+0x3c>
	{
		updateEEPROMVar(Id_codespeed, (void*)&g_id_codespeed);
    8ac2:	8b 81       	ldd	r24, Y+3	; 0x03
    8ac4:	9c 81       	ldd	r25, Y+4	; 0x04
    8ac6:	4b e0       	ldi	r20, 0x0B	; 11
    8ac8:	50 e4       	ldi	r21, 0x40	; 64
    8aca:	68 e2       	ldi	r22, 0x28	; 40
    8acc:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_fox != eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)))
    8ad0:	89 e2       	ldi	r24, 0x29	; 41
    8ad2:	90 e0       	ldi	r25, 0x00	; 0
    8ad4:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8ad8:	28 2f       	mov	r18, r24
    8ada:	90 91 22 40 	lds	r25, 0x4022	; 0x804022 <g_fox>
    8ade:	81 e0       	ldi	r24, 0x01	; 1
    8ae0:	29 17       	cp	r18, r25
    8ae2:	09 f4       	brne	.+2      	; 0x8ae6 <_ZN13EepromManager13saveAllEEPROMEv+0x52>
    8ae4:	80 e0       	ldi	r24, 0x00	; 0
    8ae6:	88 23       	and	r24, r24
    8ae8:	39 f0       	breq	.+14     	; 0x8af8 <_ZN13EepromManager13saveAllEEPROMEv+0x64>
	{
		updateEEPROMVar(Fox_setting, (void*)&g_fox);
    8aea:	8b 81       	ldd	r24, Y+3	; 0x03
    8aec:	9c 81       	ldd	r25, Y+4	; 0x04
    8aee:	42 e2       	ldi	r20, 0x22	; 34
    8af0:	50 e4       	ldi	r21, 0x40	; 64
    8af2:	69 e2       	ldi	r22, 0x29	; 41
    8af4:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_start_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch)))
    8af8:	82 e0       	ldi	r24, 0x02	; 2
    8afa:	90 e0       	ldi	r25, 0x00	; 0
    8afc:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8b00:	9b 01       	movw	r18, r22
    8b02:	ac 01       	movw	r20, r24
    8b04:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    8b08:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    8b0c:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    8b10:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    8b14:	61 e0       	ldi	r22, 0x01	; 1
    8b16:	28 17       	cp	r18, r24
    8b18:	39 07       	cpc	r19, r25
    8b1a:	4a 07       	cpc	r20, r26
    8b1c:	5b 07       	cpc	r21, r27
    8b1e:	09 f4       	brne	.+2      	; 0x8b22 <_ZN13EepromManager13saveAllEEPROMEv+0x8e>
    8b20:	60 e0       	ldi	r22, 0x00	; 0
    8b22:	66 23       	and	r22, r22
    8b24:	39 f0       	breq	.+14     	; 0x8b34 <_ZN13EepromManager13saveAllEEPROMEv+0xa0>
	{
		updateEEPROMVar(Event_start_epoch, (void*)&g_event_start_epoch);
    8b26:	8b 81       	ldd	r24, Y+3	; 0x03
    8b28:	9c 81       	ldd	r25, Y+4	; 0x04
    8b2a:	40 e8       	ldi	r20, 0x80	; 128
    8b2c:	57 e4       	ldi	r21, 0x47	; 71
    8b2e:	62 e0       	ldi	r22, 0x02	; 2
    8b30:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_event_finish_epoch != eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch)))
    8b34:	86 e0       	ldi	r24, 0x06	; 6
    8b36:	90 e0       	ldi	r25, 0x00	; 0
    8b38:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8b3c:	9b 01       	movw	r18, r22
    8b3e:	ac 01       	movw	r20, r24
    8b40:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    8b44:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    8b48:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    8b4c:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    8b50:	61 e0       	ldi	r22, 0x01	; 1
    8b52:	28 17       	cp	r18, r24
    8b54:	39 07       	cpc	r19, r25
    8b56:	4a 07       	cpc	r20, r26
    8b58:	5b 07       	cpc	r21, r27
    8b5a:	09 f4       	brne	.+2      	; 0x8b5e <_ZN13EepromManager13saveAllEEPROMEv+0xca>
    8b5c:	60 e0       	ldi	r22, 0x00	; 0
    8b5e:	66 23       	and	r22, r22
    8b60:	39 f0       	breq	.+14     	; 0x8b70 <_ZN13EepromManager13saveAllEEPROMEv+0xdc>
	{
		updateEEPROMVar(Event_finish_epoch, (void*)&g_event_finish_epoch);
    8b62:	8b 81       	ldd	r24, Y+3	; 0x03
    8b64:	9c 81       	ldd	r25, Y+4	; 0x04
    8b66:	44 e8       	ldi	r20, 0x84	; 132
    8b68:	57 e4       	ldi	r21, 0x47	; 71
    8b6a:	66 e0       	ldi	r22, 0x06	; 6
    8b6c:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
    8b70:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <g_utc_offset>
    8b74:	08 2f       	mov	r16, r24
    8b76:	88 0f       	add	r24, r24
    8b78:	11 0b       	sbc	r17, r17
    8b7a:	8a e2       	ldi	r24, 0x2A	; 42
    8b7c:	90 e0       	ldi	r25, 0x00	; 0
    8b7e:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8b82:	88 2f       	mov	r24, r24
    8b84:	90 e0       	ldi	r25, 0x00	; 0
    8b86:	21 e0       	ldi	r18, 0x01	; 1
    8b88:	08 17       	cp	r16, r24
    8b8a:	19 07       	cpc	r17, r25
    8b8c:	09 f4       	brne	.+2      	; 0x8b90 <_ZN13EepromManager13saveAllEEPROMEv+0xfc>
    8b8e:	20 e0       	ldi	r18, 0x00	; 0
    8b90:	22 23       	and	r18, r18
    8b92:	39 f0       	breq	.+14     	; 0x8ba2 <_ZN13EepromManager13saveAllEEPROMEv+0x10e>
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
    8b94:	8b 81       	ldd	r24, Y+3	; 0x03
    8b96:	9c 81       	ldd	r25, Y+4	; 0x04
    8b98:	40 ea       	ldi	r20, 0xA0	; 160
    8b9a:	57 e4       	ldi	r21, 0x47	; 71
    8b9c:	6a e2       	ldi	r22, 0x2A	; 42
    8b9e:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8ba2:	19 82       	std	Y+1, r1	; 0x01
    8ba4:	1a 82       	std	Y+2, r1	; 0x02
    8ba6:	89 81       	ldd	r24, Y+1	; 0x01
    8ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    8baa:	44 97       	sbiw	r24, 0x14	; 20
    8bac:	e8 f4       	brcc	.+58     	; 0x8be8 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	{
		if(g_messages_text[STATION_ID][i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i]))))
    8bae:	89 81       	ldd	r24, Y+1	; 0x01
    8bb0:	9a 81       	ldd	r25, Y+2	; 0x02
    8bb2:	89 59       	subi	r24, 0x99	; 153
    8bb4:	98 4b       	sbci	r25, 0xB8	; 184
    8bb6:	fc 01       	movw	r30, r24
    8bb8:	10 81       	ld	r17, Z
    8bba:	89 81       	ldd	r24, Y+1	; 0x01
    8bbc:	9a 81       	ldd	r25, Y+2	; 0x02
    8bbe:	0a 96       	adiw	r24, 0x0a	; 10
    8bc0:	80 50       	subi	r24, 0x00	; 0
    8bc2:	90 40       	sbci	r25, 0x00	; 0
    8bc4:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8bc8:	18 17       	cp	r17, r24
    8bca:	41 f0       	breq	.+16     	; 0x8bdc <_ZN13EepromManager13saveAllEEPROMEv+0x148>
		{
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
    8bcc:	8b 81       	ldd	r24, Y+3	; 0x03
    8bce:	9c 81       	ldd	r25, Y+4	; 0x04
    8bd0:	47 e6       	ldi	r20, 0x67	; 103
    8bd2:	57 e4       	ldi	r21, 0x47	; 71
    8bd4:	6a e0       	ldi	r22, 0x0A	; 10
    8bd6:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    8bda:	06 c0       	rjmp	.+12     	; 0x8be8 <_ZN13EepromManager13saveAllEEPROMEv+0x154>
	if(g_utc_offset != eeprom_read_byte(&(EepromManager::ee_vars.utc_offset)))
	{
		updateEEPROMVar(Utc_offset, (void*)&g_utc_offset);
	}
	
	for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8bdc:	89 81       	ldd	r24, Y+1	; 0x01
    8bde:	9a 81       	ldd	r25, Y+2	; 0x02
    8be0:	01 96       	adiw	r24, 0x01	; 1
    8be2:	89 83       	std	Y+1, r24	; 0x01
    8be4:	9a 83       	std	Y+2, r25	; 0x02
    8be6:	df cf       	rjmp	.-66     	; 0x8ba6 <_ZN13EepromManager13saveAllEEPROMEv+0x112>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8be8:	19 82       	std	Y+1, r1	; 0x01
    8bea:	1a 82       	std	Y+2, r1	; 0x02
    8bec:	89 81       	ldd	r24, Y+1	; 0x01
    8bee:	9a 81       	ldd	r25, Y+2	; 0x02
    8bf0:	08 97       	sbiw	r24, 0x08	; 8
    8bf2:	e8 f4       	brcc	.+58     	; 0x8c2e <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
	{
		if(g_unlockCode[i] != (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i]))))
    8bf4:	89 81       	ldd	r24, Y+1	; 0x01
    8bf6:	9a 81       	ldd	r25, Y+2	; 0x02
    8bf8:	8f 55       	subi	r24, 0x5F	; 95
    8bfa:	98 4b       	sbci	r25, 0xB8	; 184
    8bfc:	fc 01       	movw	r30, r24
    8bfe:	10 81       	ld	r17, Z
    8c00:	89 81       	ldd	r24, Y+1	; 0x01
    8c02:	9a 81       	ldd	r25, Y+2	; 0x02
    8c04:	4f 96       	adiw	r24, 0x1f	; 31
    8c06:	80 50       	subi	r24, 0x00	; 0
    8c08:	90 40       	sbci	r25, 0x00	; 0
    8c0a:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8c0e:	18 17       	cp	r17, r24
    8c10:	41 f0       	breq	.+16     	; 0x8c22 <_ZN13EepromManager13saveAllEEPROMEv+0x18e>
		{
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
    8c12:	8b 81       	ldd	r24, Y+3	; 0x03
    8c14:	9c 81       	ldd	r25, Y+4	; 0x04
    8c16:	41 ea       	ldi	r20, 0xA1	; 161
    8c18:	57 e4       	ldi	r21, 0x47	; 71
    8c1a:	6f e1       	ldi	r22, 0x1F	; 31
    8c1c:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
			break;
    8c20:	06 c0       	rjmp	.+12     	; 0x8c2e <_ZN13EepromManager13saveAllEEPROMEv+0x19a>
			updateEEPROMVar(StationID_text, (void*)g_messages_text[STATION_ID]);
			break;
		}
	}

	for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8c22:	89 81       	ldd	r24, Y+1	; 0x01
    8c24:	9a 81       	ldd	r25, Y+2	; 0x02
    8c26:	01 96       	adiw	r24, 0x01	; 1
    8c28:	89 83       	std	Y+1, r24	; 0x01
    8c2a:	9a 83       	std	Y+2, r25	; 0x02
    8c2c:	df cf       	rjmp	.-66     	; 0x8bec <_ZN13EepromManager13saveAllEEPROMEv+0x158>
			updateEEPROMVar(UnlockCode, (void*)g_unlockCode);
			break;
		}
	}
	
	if(g_80m_frequency != eeprom_read_dword(&(EepromManager::ee_vars.frequency)))
    8c2e:	8b e2       	ldi	r24, 0x2B	; 43
    8c30:	90 e0       	ldi	r25, 0x00	; 0
    8c32:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8c36:	9b 01       	movw	r18, r22
    8c38:	ac 01       	movw	r20, r24
    8c3a:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_80m_frequency>
    8c3e:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_80m_frequency+0x1>
    8c42:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_80m_frequency+0x2>
    8c46:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_80m_frequency+0x3>
    8c4a:	28 17       	cp	r18, r24
    8c4c:	39 07       	cpc	r19, r25
    8c4e:	4a 07       	cpc	r20, r26
    8c50:	5b 07       	cpc	r21, r27
    8c52:	39 f0       	breq	.+14     	; 0x8c62 <_ZN13EepromManager13saveAllEEPROMEv+0x1ce>
	{
		updateEEPROMVar(Frequency, (void*)&g_80m_frequency);
    8c54:	8b 81       	ldd	r24, Y+3	; 0x03
    8c56:	9c 81       	ldd	r25, Y+4	; 0x04
    8c58:	42 e3       	ldi	r20, 0x32	; 50
    8c5a:	50 e4       	ldi	r21, 0x40	; 64
    8c5c:	6b e2       	ldi	r22, 0x2B	; 43
    8c5e:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_rtty_offset != eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset)))
    8c62:	8f e2       	ldi	r24, 0x2F	; 47
    8c64:	90 e0       	ldi	r25, 0x00	; 0
    8c66:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8c6a:	9b 01       	movw	r18, r22
    8c6c:	ac 01       	movw	r20, r24
    8c6e:	80 91 38 40 	lds	r24, 0x4038	; 0x804038 <g_rtty_offset>
    8c72:	90 91 39 40 	lds	r25, 0x4039	; 0x804039 <g_rtty_offset+0x1>
    8c76:	a0 91 3a 40 	lds	r26, 0x403A	; 0x80403a <g_rtty_offset+0x2>
    8c7a:	b0 91 3b 40 	lds	r27, 0x403B	; 0x80403b <g_rtty_offset+0x3>
    8c7e:	28 17       	cp	r18, r24
    8c80:	39 07       	cpc	r19, r25
    8c82:	4a 07       	cpc	r20, r26
    8c84:	5b 07       	cpc	r21, r27
    8c86:	39 f0       	breq	.+14     	; 0x8c96 <_ZN13EepromManager13saveAllEEPROMEv+0x202>
	{
		updateEEPROMVar(RTTY_offset, (void*)&g_rtty_offset);
    8c88:	8b 81       	ldd	r24, Y+3	; 0x03
    8c8a:	9c 81       	ldd	r25, Y+4	; 0x04
    8c8c:	48 e3       	ldi	r20, 0x38	; 56
    8c8e:	50 e4       	ldi	r21, 0x40	; 64
    8c90:	6f e2       	ldi	r22, 0x2F	; 47
    8c92:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
	
	if(g_80m_power_level_mW != eeprom_read_word(&(EepromManager::ee_vars.rf_power)))
    8c96:	83 e3       	ldi	r24, 0x33	; 51
    8c98:	90 e0       	ldi	r25, 0x00	; 0
    8c9a:	0e 94 4d 7c 	call	0xf89a	; 0xf89a <eeprom_read_word>
    8c9e:	9c 01       	movw	r18, r24
    8ca0:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_power_level_mW>
    8ca4:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_power_level_mW+0x1>
    8ca8:	28 17       	cp	r18, r24
    8caa:	39 07       	cpc	r19, r25
    8cac:	39 f0       	breq	.+14     	; 0x8cbc <_ZN13EepromManager13saveAllEEPROMEv+0x228>
	{
		updateEEPROMVar(RF_Power, (void*)&g_80m_power_level_mW);
    8cae:	8b 81       	ldd	r24, Y+3	; 0x03
    8cb0:	9c 81       	ldd	r25, Y+4	; 0x04
    8cb2:	46 e3       	ldi	r20, 0x36	; 54
    8cb4:	50 e4       	ldi	r21, 0x40	; 64
    8cb6:	63 e3       	ldi	r22, 0x33	; 51
    8cb8:	0e 94 48 44 	call	0x8890	; 0x8890 <_ZN13EepromManager15updateEEPROMVarE8EE_var_tPv>
	}
}
    8cbc:	00 00       	nop
    8cbe:	24 96       	adiw	r28, 0x04	; 4
    8cc0:	cd bf       	out	0x3d, r28	; 61
    8cc2:	de bf       	out	0x3e, r29	; 62
    8cc4:	df 91       	pop	r29
    8cc6:	cf 91       	pop	r28
    8cc8:	1f 91       	pop	r17
    8cca:	0f 91       	pop	r16
    8ccc:	08 95       	ret

00008cce <_ZN13EepromManager11readNonVolsEv>:


bool EepromManager::readNonVols(void)
{
    8cce:	cf 93       	push	r28
    8cd0:	df 93       	push	r29
    8cd2:	cd b7       	in	r28, 0x3d	; 61
    8cd4:	de b7       	in	r29, 0x3e	; 62
    8cd6:	6f 97       	sbiw	r28, 0x1f	; 31
    8cd8:	cd bf       	out	0x3d, r28	; 61
    8cda:	de bf       	out	0x3e, r29	; 62
    8cdc:	8e 8f       	std	Y+30, r24	; 0x1e
    8cde:	9f 8f       	std	Y+31, r25	; 0x1f
	bool failure = true;
    8ce0:	81 e0       	ldi	r24, 0x01	; 1
    8ce2:	89 83       	std	Y+1, r24	; 0x01
	uint16_t i;
	uint16_t initialization_flag = eeprom_read_word(0);
    8ce4:	80 e0       	ldi	r24, 0x00	; 0
    8ce6:	90 e0       	ldi	r25, 0x00	; 0
    8ce8:	0e 94 4d 7c 	call	0xf89a	; 0xf89a <eeprom_read_word>
    8cec:	8c 83       	std	Y+4, r24	; 0x04
    8cee:	9d 83       	std	Y+5, r25	; 0x05

	if(initialization_flag == EEPROM_INITIALIZED_FLAG)  /* EEPROM is up to date */
    8cf0:	8c 81       	ldd	r24, Y+4	; 0x04
    8cf2:	9d 81       	ldd	r25, Y+5	; 0x05
    8cf4:	8e 3c       	cpi	r24, 0xCE	; 206
    8cf6:	91 05       	cpc	r25, r1
    8cf8:	09 f0       	breq	.+2      	; 0x8cfc <_ZN13EepromManager11readNonVolsEv+0x2e>
    8cfa:	50 c1       	rjmp	.+672    	; 0x8f9c <_ZN13EepromManager11readNonVolsEv+0x2ce>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM, eeprom_read_byte(&(EepromManager::ee_vars.id_codespeed)), MAX_CODE_SPEED_WPM);
    8cfc:	88 e2       	ldi	r24, 0x28	; 40
    8cfe:	90 e0       	ldi	r25, 0x00	; 0
    8d00:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8d04:	8e 83       	std	Y+6, r24	; 0x06
    8d06:	85 e0       	ldi	r24, 0x05	; 5
    8d08:	8f 83       	std	Y+7, r24	; 0x07
    8d0a:	84 e1       	ldi	r24, 0x14	; 20
    8d0c:	88 87       	std	Y+8, r24	; 0x08
    8d0e:	9e 81       	ldd	r25, Y+6	; 0x06
    8d10:	88 85       	ldd	r24, Y+8	; 0x08
    8d12:	89 17       	cp	r24, r25
    8d14:	40 f0       	brcs	.+16     	; 0x8d26 <_ZN13EepromManager11readNonVolsEv+0x58>
    8d16:	9e 81       	ldd	r25, Y+6	; 0x06
    8d18:	8f 81       	ldd	r24, Y+7	; 0x07
    8d1a:	98 17       	cp	r25, r24
    8d1c:	10 f4       	brcc	.+4      	; 0x8d22 <_ZN13EepromManager11readNonVolsEv+0x54>
    8d1e:	8f 81       	ldd	r24, Y+7	; 0x07
    8d20:	03 c0       	rjmp	.+6      	; 0x8d28 <_ZN13EepromManager11readNonVolsEv+0x5a>
    8d22:	8e 81       	ldd	r24, Y+6	; 0x06
    8d24:	01 c0       	rjmp	.+2      	; 0x8d28 <_ZN13EepromManager11readNonVolsEv+0x5a>
    8d26:	88 85       	ldd	r24, Y+8	; 0x08
    8d28:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
    8d2c:	89 e2       	ldi	r24, 0x29	; 41
    8d2e:	90 e0       	ldi	r25, 0x00	; 0
    8d30:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8d34:	89 87       	std	Y+9, r24	; 0x09
    8d36:	1a 86       	std	Y+10, r1	; 0x0a
    8d38:	81 e1       	ldi	r24, 0x11	; 17
    8d3a:	8b 87       	std	Y+11, r24	; 0x0b
    8d3c:	99 85       	ldd	r25, Y+9	; 0x09
    8d3e:	8b 85       	ldd	r24, Y+11	; 0x0b
    8d40:	89 17       	cp	r24, r25
    8d42:	40 f0       	brcs	.+16     	; 0x8d54 <_ZN13EepromManager11readNonVolsEv+0x86>
    8d44:	99 85       	ldd	r25, Y+9	; 0x09
    8d46:	8a 85       	ldd	r24, Y+10	; 0x0a
    8d48:	98 17       	cp	r25, r24
    8d4a:	10 f4       	brcc	.+4      	; 0x8d50 <_ZN13EepromManager11readNonVolsEv+0x82>
    8d4c:	8a 85       	ldd	r24, Y+10	; 0x0a
    8d4e:	03 c0       	rjmp	.+6      	; 0x8d56 <_ZN13EepromManager11readNonVolsEv+0x88>
    8d50:	89 85       	ldd	r24, Y+9	; 0x09
    8d52:	01 c0       	rjmp	.+2      	; 0x8d56 <_ZN13EepromManager11readNonVolsEv+0x88>
    8d54:	8b 85       	ldd	r24, Y+11	; 0x0b
    8d56:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
    8d5a:	82 e0       	ldi	r24, 0x02	; 2
    8d5c:	90 e0       	ldi	r25, 0x00	; 0
    8d5e:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8d62:	dc 01       	movw	r26, r24
    8d64:	cb 01       	movw	r24, r22
    8d66:	80 93 80 47 	sts	0x4780, r24	; 0x804780 <g_event_start_epoch>
    8d6a:	90 93 81 47 	sts	0x4781, r25	; 0x804781 <g_event_start_epoch+0x1>
    8d6e:	a0 93 82 47 	sts	0x4782, r26	; 0x804782 <g_event_start_epoch+0x2>
    8d72:	b0 93 83 47 	sts	0x4783, r27	; 0x804783 <g_event_start_epoch+0x3>
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
    8d76:	86 e0       	ldi	r24, 0x06	; 6
    8d78:	90 e0       	ldi	r25, 0x00	; 0
    8d7a:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8d7e:	dc 01       	movw	r26, r24
    8d80:	cb 01       	movw	r24, r22
    8d82:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    8d86:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    8d8a:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    8d8e:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));
    8d92:	8a e2       	ldi	r24, 0x2A	; 42
    8d94:	90 e0       	ldi	r25, 0x00	; 0
    8d96:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8d9a:	80 93 a0 47 	sts	0x47A0, r24	; 0x8047a0 <g_utc_offset>

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8d9e:	1a 82       	std	Y+2, r1	; 0x02
    8da0:	1b 82       	std	Y+3, r1	; 0x03
    8da2:	8a 81       	ldd	r24, Y+2	; 0x02
    8da4:	9b 81       	ldd	r25, Y+3	; 0x03
    8da6:	44 97       	sbiw	r24, 0x14	; 20
    8da8:	e8 f4       	brcc	.+58     	; 0x8de4 <_ZN13EepromManager11readNonVolsEv+0x116>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
    8daa:	8a 81       	ldd	r24, Y+2	; 0x02
    8dac:	9b 81       	ldd	r25, Y+3	; 0x03
    8dae:	0a 96       	adiw	r24, 0x0a	; 10
    8db0:	80 50       	subi	r24, 0x00	; 0
    8db2:	90 40       	sbci	r25, 0x00	; 0
    8db4:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8db8:	28 2f       	mov	r18, r24
    8dba:	8a 81       	ldd	r24, Y+2	; 0x02
    8dbc:	9b 81       	ldd	r25, Y+3	; 0x03
    8dbe:	89 59       	subi	r24, 0x99	; 153
    8dc0:	98 4b       	sbci	r25, 0xB8	; 184
    8dc2:	fc 01       	movw	r30, r24
    8dc4:	20 83       	st	Z, r18
			if(!g_messages_text[STATION_ID][i])
    8dc6:	8a 81       	ldd	r24, Y+2	; 0x02
    8dc8:	9b 81       	ldd	r25, Y+3	; 0x03
    8dca:	89 59       	subi	r24, 0x99	; 153
    8dcc:	98 4b       	sbci	r25, 0xB8	; 184
    8dce:	fc 01       	movw	r30, r24
    8dd0:	80 81       	ld	r24, Z
    8dd2:	88 23       	and	r24, r24
    8dd4:	31 f0       	breq	.+12     	; 0x8de2 <_ZN13EepromManager11readNonVolsEv+0x114>
		g_fox = CLAMP(BEACON, (Fox_t)eeprom_read_byte(&(EepromManager::ee_vars.fox_setting)), SPRINT_F5);
		g_event_start_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_start_epoch));
		g_event_finish_epoch = eeprom_read_dword(&(EepromManager::ee_vars.event_finish_epoch));
		g_utc_offset = (int8_t)eeprom_read_byte(&(EepromManager::ee_vars.utc_offset));

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    8dd6:	8a 81       	ldd	r24, Y+2	; 0x02
    8dd8:	9b 81       	ldd	r25, Y+3	; 0x03
    8dda:	01 96       	adiw	r24, 0x01	; 1
    8ddc:	8a 83       	std	Y+2, r24	; 0x02
    8dde:	9b 83       	std	Y+3, r25	; 0x03
    8de0:	e0 cf       	rjmp	.-64     	; 0x8da2 <_ZN13EepromManager11readNonVolsEv+0xd4>
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.stationID_text[i])));
			if(!g_messages_text[STATION_ID][i])
			{
				break;
    8de2:	00 00       	nop
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8de4:	1a 82       	std	Y+2, r1	; 0x02
    8de6:	1b 82       	std	Y+3, r1	; 0x03
    8de8:	8a 81       	ldd	r24, Y+2	; 0x02
    8dea:	9b 81       	ldd	r25, Y+3	; 0x03
    8dec:	08 97       	sbiw	r24, 0x08	; 8
    8dee:	e8 f4       	brcc	.+58     	; 0x8e2a <_ZN13EepromManager11readNonVolsEv+0x15c>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
    8df0:	8a 81       	ldd	r24, Y+2	; 0x02
    8df2:	9b 81       	ldd	r25, Y+3	; 0x03
    8df4:	4f 96       	adiw	r24, 0x1f	; 31
    8df6:	80 50       	subi	r24, 0x00	; 0
    8df8:	90 40       	sbci	r25, 0x00	; 0
    8dfa:	0e 94 3e 7c 	call	0xf87c	; 0xf87c <eeprom_read_byte>
    8dfe:	28 2f       	mov	r18, r24
    8e00:	8a 81       	ldd	r24, Y+2	; 0x02
    8e02:	9b 81       	ldd	r25, Y+3	; 0x03
    8e04:	8f 55       	subi	r24, 0x5F	; 95
    8e06:	98 4b       	sbci	r25, 0xB8	; 184
    8e08:	fc 01       	movw	r30, r24
    8e0a:	20 83       	st	Z, r18
			if(!g_unlockCode[i])
    8e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    8e0e:	9b 81       	ldd	r25, Y+3	; 0x03
    8e10:	8f 55       	subi	r24, 0x5F	; 95
    8e12:	98 4b       	sbci	r25, 0xB8	; 184
    8e14:	fc 01       	movw	r30, r24
    8e16:	80 81       	ld	r24, Z
    8e18:	88 23       	and	r24, r24
    8e1a:	31 f0       	breq	.+12     	; 0x8e28 <_ZN13EepromManager11readNonVolsEv+0x15a>
			{
				break;
			}
		}

		for(i = 0; i < MAX_UNLOCK_CODE_LENGTH; i++)
    8e1c:	8a 81       	ldd	r24, Y+2	; 0x02
    8e1e:	9b 81       	ldd	r25, Y+3	; 0x03
    8e20:	01 96       	adiw	r24, 0x01	; 1
    8e22:	8a 83       	std	Y+2, r24	; 0x02
    8e24:	9b 83       	std	Y+3, r25	; 0x03
    8e26:	e0 cf       	rjmp	.-64     	; 0x8de8 <_ZN13EepromManager11readNonVolsEv+0x11a>
		{
			g_unlockCode[i] = (char)eeprom_read_byte((uint8_t*)(&(EepromManager::ee_vars.unlockCode[i])));
			if(!g_unlockCode[i])
			{
				break;
    8e28:	00 00       	nop
			}
		}
		
		g_80m_frequency = CLAMP(TX_MINIMUM_80M_FREQUENCY, eeprom_read_dword(&(EepromManager::ee_vars.frequency)), TX_MAXIMUM_80M_FREQUENCY);
    8e2a:	8b e2       	ldi	r24, 0x2B	; 43
    8e2c:	90 e0       	ldi	r25, 0x00	; 0
    8e2e:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8e32:	dc 01       	movw	r26, r24
    8e34:	cb 01       	movw	r24, r22
    8e36:	8c 87       	std	Y+12, r24	; 0x0c
    8e38:	9d 87       	std	Y+13, r25	; 0x0d
    8e3a:	ae 87       	std	Y+14, r26	; 0x0e
    8e3c:	bf 87       	std	Y+15, r27	; 0x0f
    8e3e:	80 ee       	ldi	r24, 0xE0	; 224
    8e40:	97 e6       	ldi	r25, 0x67	; 103
    8e42:	a5 e3       	ldi	r26, 0x35	; 53
    8e44:	b0 e0       	ldi	r27, 0x00	; 0
    8e46:	88 8b       	std	Y+16, r24	; 0x10
    8e48:	99 8b       	std	Y+17, r25	; 0x11
    8e4a:	aa 8b       	std	Y+18, r26	; 0x12
    8e4c:	bb 8b       	std	Y+19, r27	; 0x13
    8e4e:	80 e0       	ldi	r24, 0x00	; 0
    8e50:	99 e0       	ldi	r25, 0x09	; 9
    8e52:	ad e3       	ldi	r26, 0x3D	; 61
    8e54:	b0 e0       	ldi	r27, 0x00	; 0
    8e56:	8c 8b       	std	Y+20, r24	; 0x14
    8e58:	9d 8b       	std	Y+21, r25	; 0x15
    8e5a:	ae 8b       	std	Y+22, r26	; 0x16
    8e5c:	bf 8b       	std	Y+23, r27	; 0x17
    8e5e:	2c 85       	ldd	r18, Y+12	; 0x0c
    8e60:	3d 85       	ldd	r19, Y+13	; 0x0d
    8e62:	4e 85       	ldd	r20, Y+14	; 0x0e
    8e64:	5f 85       	ldd	r21, Y+15	; 0x0f
    8e66:	8c 89       	ldd	r24, Y+20	; 0x14
    8e68:	9d 89       	ldd	r25, Y+21	; 0x15
    8e6a:	ae 89       	ldd	r26, Y+22	; 0x16
    8e6c:	bf 89       	ldd	r27, Y+23	; 0x17
    8e6e:	82 17       	cp	r24, r18
    8e70:	93 07       	cpc	r25, r19
    8e72:	a4 07       	cpc	r26, r20
    8e74:	b5 07       	cpc	r27, r21
    8e76:	b8 f0       	brcs	.+46     	; 0x8ea6 <_ZN13EepromManager11readNonVolsEv+0x1d8>
    8e78:	2c 85       	ldd	r18, Y+12	; 0x0c
    8e7a:	3d 85       	ldd	r19, Y+13	; 0x0d
    8e7c:	4e 85       	ldd	r20, Y+14	; 0x0e
    8e7e:	5f 85       	ldd	r21, Y+15	; 0x0f
    8e80:	88 89       	ldd	r24, Y+16	; 0x10
    8e82:	99 89       	ldd	r25, Y+17	; 0x11
    8e84:	aa 89       	ldd	r26, Y+18	; 0x12
    8e86:	bb 89       	ldd	r27, Y+19	; 0x13
    8e88:	28 17       	cp	r18, r24
    8e8a:	39 07       	cpc	r19, r25
    8e8c:	4a 07       	cpc	r20, r26
    8e8e:	5b 07       	cpc	r21, r27
    8e90:	28 f4       	brcc	.+10     	; 0x8e9c <_ZN13EepromManager11readNonVolsEv+0x1ce>
    8e92:	88 89       	ldd	r24, Y+16	; 0x10
    8e94:	99 89       	ldd	r25, Y+17	; 0x11
    8e96:	aa 89       	ldd	r26, Y+18	; 0x12
    8e98:	bb 89       	ldd	r27, Y+19	; 0x13
    8e9a:	09 c0       	rjmp	.+18     	; 0x8eae <_ZN13EepromManager11readNonVolsEv+0x1e0>
    8e9c:	8c 85       	ldd	r24, Y+12	; 0x0c
    8e9e:	9d 85       	ldd	r25, Y+13	; 0x0d
    8ea0:	ae 85       	ldd	r26, Y+14	; 0x0e
    8ea2:	bf 85       	ldd	r27, Y+15	; 0x0f
    8ea4:	04 c0       	rjmp	.+8      	; 0x8eae <_ZN13EepromManager11readNonVolsEv+0x1e0>
    8ea6:	8c 89       	ldd	r24, Y+20	; 0x14
    8ea8:	9d 89       	ldd	r25, Y+21	; 0x15
    8eaa:	ae 89       	ldd	r26, Y+22	; 0x16
    8eac:	bf 89       	ldd	r27, Y+23	; 0x17
    8eae:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_80m_frequency>
    8eb2:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_80m_frequency+0x1>
    8eb6:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_80m_frequency+0x2>
    8eba:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_80m_frequency+0x3>
		g_rtty_offset =eeprom_read_dword(&(EepromManager::ee_vars.rtty_offset));
    8ebe:	8f e2       	ldi	r24, 0x2F	; 47
    8ec0:	90 e0       	ldi	r25, 0x00	; 0
    8ec2:	0e 94 46 7c 	call	0xf88c	; 0xf88c <eeprom_read_dword>
    8ec6:	dc 01       	movw	r26, r24
    8ec8:	cb 01       	movw	r24, r22
    8eca:	80 93 38 40 	sts	0x4038, r24	; 0x804038 <g_rtty_offset>
    8ece:	90 93 39 40 	sts	0x4039, r25	; 0x804039 <g_rtty_offset+0x1>
    8ed2:	a0 93 3a 40 	sts	0x403A, r26	; 0x80403a <g_rtty_offset+0x2>
    8ed6:	b0 93 3b 40 	sts	0x403B, r27	; 0x80403b <g_rtty_offset+0x3>
		g_80m_power_level_mW = CLAMP(MIN_RF_POWER_MW, eeprom_read_word(&(EepromManager::ee_vars.rf_power)), MAX_TX_POWER_80M_MW);
    8eda:	83 e3       	ldi	r24, 0x33	; 51
    8edc:	90 e0       	ldi	r25, 0x00	; 0
    8ede:	0e 94 4d 7c 	call	0xf89a	; 0xf89a <eeprom_read_word>
    8ee2:	88 8f       	std	Y+24, r24	; 0x18
    8ee4:	99 8f       	std	Y+25, r25	; 0x19
    8ee6:	1a 8e       	std	Y+26, r1	; 0x1a
    8ee8:	1b 8e       	std	Y+27, r1	; 0x1b
    8eea:	88 e8       	ldi	r24, 0x88	; 136
    8eec:	93 e1       	ldi	r25, 0x13	; 19
    8eee:	8c 8f       	std	Y+28, r24	; 0x1c
    8ef0:	9d 8f       	std	Y+29, r25	; 0x1d
    8ef2:	28 8d       	ldd	r18, Y+24	; 0x18
    8ef4:	39 8d       	ldd	r19, Y+25	; 0x19
    8ef6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8ef8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8efa:	82 17       	cp	r24, r18
    8efc:	93 07       	cpc	r25, r19
    8efe:	68 f0       	brcs	.+26     	; 0x8f1a <_ZN13EepromManager11readNonVolsEv+0x24c>
    8f00:	28 8d       	ldd	r18, Y+24	; 0x18
    8f02:	39 8d       	ldd	r19, Y+25	; 0x19
    8f04:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8f06:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8f08:	28 17       	cp	r18, r24
    8f0a:	39 07       	cpc	r19, r25
    8f0c:	18 f4       	brcc	.+6      	; 0x8f14 <_ZN13EepromManager11readNonVolsEv+0x246>
    8f0e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    8f10:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8f12:	05 c0       	rjmp	.+10     	; 0x8f1e <_ZN13EepromManager11readNonVolsEv+0x250>
    8f14:	88 8d       	ldd	r24, Y+24	; 0x18
    8f16:	99 8d       	ldd	r25, Y+25	; 0x19
    8f18:	02 c0       	rjmp	.+4      	; 0x8f1e <_ZN13EepromManager11readNonVolsEv+0x250>
    8f1a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8f1c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    8f1e:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_power_level_mW>
    8f22:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_power_level_mW+0x1>

		/* Perform sanity checks */
		if(g_event_start_epoch && (g_event_finish_epoch <= g_event_start_epoch))
    8f26:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    8f2a:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    8f2e:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    8f32:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    8f36:	89 2b       	or	r24, r25
    8f38:	8a 2b       	or	r24, r26
    8f3a:	8b 2b       	or	r24, r27
    8f3c:	b9 f0       	breq	.+46     	; 0x8f6c <_ZN13EepromManager11readNonVolsEv+0x29e>
    8f3e:	20 91 84 47 	lds	r18, 0x4784	; 0x804784 <g_event_finish_epoch>
    8f42:	30 91 85 47 	lds	r19, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    8f46:	40 91 86 47 	lds	r20, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    8f4a:	50 91 87 47 	lds	r21, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    8f4e:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    8f52:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    8f56:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    8f5a:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    8f5e:	82 17       	cp	r24, r18
    8f60:	93 07       	cpc	r25, r19
    8f62:	a4 07       	cpc	r26, r20
    8f64:	b5 07       	cpc	r27, r21
    8f66:	10 f0       	brcs	.+4      	; 0x8f6c <_ZN13EepromManager11readNonVolsEv+0x29e>
    8f68:	81 e0       	ldi	r24, 0x01	; 1
    8f6a:	01 c0       	rjmp	.+2      	; 0x8f6e <_ZN13EepromManager11readNonVolsEv+0x2a0>
    8f6c:	80 e0       	ldi	r24, 0x00	; 0
    8f6e:	88 23       	and	r24, r24
    8f70:	a1 f0       	breq	.+40     	; 0x8f9a <_ZN13EepromManager11readNonVolsEv+0x2cc>
		{
			g_event_finish_epoch = g_event_start_epoch + SECONDS_24H;
    8f72:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    8f76:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    8f7a:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    8f7e:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    8f82:	80 58       	subi	r24, 0x80	; 128
    8f84:	9e 4a       	sbci	r25, 0xAE	; 174
    8f86:	ae 4f       	sbci	r26, 0xFE	; 254
    8f88:	bf 4f       	sbci	r27, 0xFF	; 255
    8f8a:	80 93 84 47 	sts	0x4784, r24	; 0x804784 <g_event_finish_epoch>
    8f8e:	90 93 85 47 	sts	0x4785, r25	; 0x804785 <g_event_finish_epoch+0x1>
    8f92:	a0 93 86 47 	sts	0x4786, r26	; 0x804786 <g_event_finish_epoch+0x2>
    8f96:	b0 93 87 47 	sts	0x4787, r27	; 0x804787 <g_event_finish_epoch+0x3>
		}

		failure = false;
    8f9a:	19 82       	std	Y+1, r1	; 0x01
	}

	return( failure);
    8f9c:	89 81       	ldd	r24, Y+1	; 0x01
}
    8f9e:	6f 96       	adiw	r28, 0x1f	; 31
    8fa0:	cd bf       	out	0x3d, r28	; 61
    8fa2:	de bf       	out	0x3e, r29	; 62
    8fa4:	df 91       	pop	r29
    8fa6:	cf 91       	pop	r28
    8fa8:	08 95       	ret

00008faa <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	bool EepromManager::initializeEEPROMVars(void)
	{
    8faa:	cf 93       	push	r28
    8fac:	df 93       	push	r29
    8fae:	cd b7       	in	r28, 0x3d	; 61
    8fb0:	de b7       	in	r29, 0x3e	; 62
    8fb2:	2b 97       	sbiw	r28, 0x0b	; 11
    8fb4:	cd bf       	out	0x3d, r28	; 61
    8fb6:	de bf       	out	0x3e, r29	; 62
    8fb8:	8a 87       	std	Y+10, r24	; 0x0a
    8fba:	9b 87       	std	Y+11, r25	; 0x0b
		bool err = false;
    8fbc:	1f 82       	std	Y+7, r1	; 0x07
		uint16_t i, j;

		uint16_t initialization_flag = eeprom_read_word(0);
    8fbe:	80 e0       	ldi	r24, 0x00	; 0
    8fc0:	90 e0       	ldi	r25, 0x00	; 0
    8fc2:	0e 94 4d 7c 	call	0xf89a	; 0xf89a <eeprom_read_word>
    8fc6:	88 87       	std	Y+8, r24	; 0x08
    8fc8:	99 87       	std	Y+9, r25	; 0x09

		if(initialization_flag != EEPROM_INITIALIZED_FLAG)
    8fca:	88 85       	ldd	r24, Y+8	; 0x08
    8fcc:	99 85       	ldd	r25, Y+9	; 0x09
    8fce:	8e 3c       	cpi	r24, 0xCE	; 206
    8fd0:	91 05       	cpc	r25, r1
    8fd2:	09 f4       	brne	.+2      	; 0x8fd6 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2c>
    8fd4:	d9 c0       	rjmp	.+434    	; 0x9188 <_ZN13EepromManager20initializeEEPROMVarsEv+0x1de>
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    8fd6:	84 e1       	ldi	r24, 0x14	; 20
    8fd8:	80 93 0b 40 	sts	0x400B, r24	; 0x80400b <g_id_codespeed>
			avr_eeprom_write_byte(Id_codespeed, g_id_codespeed);
    8fdc:	80 91 0b 40 	lds	r24, 0x400B	; 0x80400b <g_id_codespeed>
    8fe0:	68 2f       	mov	r22, r24
    8fe2:	88 e2       	ldi	r24, 0x28	; 40
    8fe4:	90 e0       	ldi	r25, 0x00	; 0
    8fe6:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>

			g_fox = EEPROM_FOX_SETTING_DEFAULT;
    8fea:	81 e0       	ldi	r24, 0x01	; 1
    8fec:	80 93 22 40 	sts	0x4022, r24	; 0x804022 <g_fox>
			avr_eeprom_write_byte(Fox_setting, g_fox);
    8ff0:	80 91 22 40 	lds	r24, 0x4022	; 0x804022 <g_fox>
    8ff4:	68 2f       	mov	r22, r24
    8ff6:	89 e2       	ldi	r24, 0x29	; 41
    8ff8:	90 e0       	ldi	r25, 0x00	; 0
    8ffa:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>

			g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
    8ffe:	10 92 80 47 	sts	0x4780, r1	; 0x804780 <g_event_start_epoch>
    9002:	10 92 81 47 	sts	0x4781, r1	; 0x804781 <g_event_start_epoch+0x1>
    9006:	10 92 82 47 	sts	0x4782, r1	; 0x804782 <g_event_start_epoch+0x2>
    900a:	10 92 83 47 	sts	0x4783, r1	; 0x804783 <g_event_start_epoch+0x3>
			avr_eeprom_write_dword(Event_start_epoch, g_event_start_epoch);
    900e:	80 91 80 47 	lds	r24, 0x4780	; 0x804780 <g_event_start_epoch>
    9012:	90 91 81 47 	lds	r25, 0x4781	; 0x804781 <g_event_start_epoch+0x1>
    9016:	a0 91 82 47 	lds	r26, 0x4782	; 0x804782 <g_event_start_epoch+0x2>
    901a:	b0 91 83 47 	lds	r27, 0x4783	; 0x804783 <g_event_start_epoch+0x3>
    901e:	ac 01       	movw	r20, r24
    9020:	bd 01       	movw	r22, r26
    9022:	82 e0       	ldi	r24, 0x02	; 2
    9024:	90 e0       	ldi	r25, 0x00	; 0
    9026:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>

			g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
    902a:	10 92 84 47 	sts	0x4784, r1	; 0x804784 <g_event_finish_epoch>
    902e:	10 92 85 47 	sts	0x4785, r1	; 0x804785 <g_event_finish_epoch+0x1>
    9032:	10 92 86 47 	sts	0x4786, r1	; 0x804786 <g_event_finish_epoch+0x2>
    9036:	10 92 87 47 	sts	0x4787, r1	; 0x804787 <g_event_finish_epoch+0x3>
			avr_eeprom_write_dword(Event_finish_epoch, g_event_finish_epoch);
    903a:	80 91 84 47 	lds	r24, 0x4784	; 0x804784 <g_event_finish_epoch>
    903e:	90 91 85 47 	lds	r25, 0x4785	; 0x804785 <g_event_finish_epoch+0x1>
    9042:	a0 91 86 47 	lds	r26, 0x4786	; 0x804786 <g_event_finish_epoch+0x2>
    9046:	b0 91 87 47 	lds	r27, 0x4787	; 0x804787 <g_event_finish_epoch+0x3>
    904a:	ac 01       	movw	r20, r24
    904c:	bd 01       	movw	r22, r26
    904e:	86 e0       	ldi	r24, 0x06	; 6
    9050:	90 e0       	ldi	r25, 0x00	; 0
    9052:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>

			g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
    9056:	10 92 a0 47 	sts	0x47A0, r1	; 0x8047a0 <g_utc_offset>
			avr_eeprom_write_byte(Utc_offset, (uint8_t)g_utc_offset);
    905a:	80 91 a0 47 	lds	r24, 0x47A0	; 0x8047a0 <g_utc_offset>
    905e:	68 2f       	mov	r22, r24
    9060:	8a e2       	ldi	r24, 0x2A	; 42
    9062:	90 e0       	ldi	r25, 0x00	; 0
    9064:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>

			g_messages_text[STATION_ID][0] = '\0';
    9068:	10 92 67 47 	sts	0x4767, r1	; 0x804767 <g_messages_text+0x15>
			avr_eeprom_write_byte(StationID_text, 0);
    906c:	60 e0       	ldi	r22, 0x00	; 0
    906e:	8a e0       	ldi	r24, 0x0A	; 10
    9070:	90 e0       	ldi	r25, 0x00	; 0
    9072:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
    9076:	86 ea       	ldi	r24, 0xA6	; 166
    9078:	94 e4       	ldi	r25, 0x44	; 68
    907a:	8d 83       	std	Y+5, r24	; 0x05
    907c:	9e 83       	std	Y+6, r25	; 0x06
			i = UnlockCode;
    907e:	8f e1       	ldi	r24, 0x1F	; 31
    9080:	90 e0       	ldi	r25, 0x00	; 0
    9082:	89 83       	std	Y+1, r24	; 0x01
    9084:	9a 83       	std	Y+2, r25	; 0x02
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    9086:	1b 82       	std	Y+3, r1	; 0x03
    9088:	1c 82       	std	Y+4, r1	; 0x04
    908a:	8b 81       	ldd	r24, Y+3	; 0x03
    908c:	9c 81       	ldd	r25, Y+4	; 0x04
    908e:	04 97       	sbiw	r24, 0x04	; 4
    9090:	18 f5       	brcc	.+70     	; 0x90d8 <_ZN13EepromManager20initializeEEPROMVarsEv+0x12e>
			{
				g_unlockCode[j] = *v;
    9092:	8d 81       	ldd	r24, Y+5	; 0x05
    9094:	9e 81       	ldd	r25, Y+6	; 0x06
    9096:	fc 01       	movw	r30, r24
    9098:	20 81       	ld	r18, Z
    909a:	8b 81       	ldd	r24, Y+3	; 0x03
    909c:	9c 81       	ldd	r25, Y+4	; 0x04
    909e:	8f 55       	subi	r24, 0x5F	; 95
    90a0:	98 4b       	sbci	r25, 0xB8	; 184
    90a2:	fc 01       	movw	r30, r24
    90a4:	20 83       	st	Z, r18
				avr_eeprom_write_byte(i++, *v++);
    90a6:	8d 81       	ldd	r24, Y+5	; 0x05
    90a8:	9e 81       	ldd	r25, Y+6	; 0x06
    90aa:	9c 01       	movw	r18, r24
    90ac:	2f 5f       	subi	r18, 0xFF	; 255
    90ae:	3f 4f       	sbci	r19, 0xFF	; 255
    90b0:	2d 83       	std	Y+5, r18	; 0x05
    90b2:	3e 83       	std	Y+6, r19	; 0x06
    90b4:	fc 01       	movw	r30, r24
    90b6:	40 81       	ld	r20, Z
    90b8:	89 81       	ldd	r24, Y+1	; 0x01
    90ba:	9a 81       	ldd	r25, Y+2	; 0x02
    90bc:	9c 01       	movw	r18, r24
    90be:	2f 5f       	subi	r18, 0xFF	; 255
    90c0:	3f 4f       	sbci	r19, 0xFF	; 255
    90c2:	29 83       	std	Y+1, r18	; 0x01
    90c4:	3a 83       	std	Y+2, r19	; 0x02
    90c6:	64 2f       	mov	r22, r20
    90c8:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
			g_messages_text[STATION_ID][0] = '\0';
			avr_eeprom_write_byte(StationID_text, 0);

			uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
			i = UnlockCode;
			for(j = 0; j < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); j++)
    90cc:	8b 81       	ldd	r24, Y+3	; 0x03
    90ce:	9c 81       	ldd	r25, Y+4	; 0x04
    90d0:	01 96       	adiw	r24, 0x01	; 1
    90d2:	8b 83       	std	Y+3, r24	; 0x03
    90d4:	9c 83       	std	Y+4, r25	; 0x04
    90d6:	d9 cf       	rjmp	.-78     	; 0x908a <_ZN13EepromManager20initializeEEPROMVarsEv+0xe0>
			{
				g_unlockCode[j] = *v;
				avr_eeprom_write_byte(i++, *v++);
			}

			avr_eeprom_write_byte(i, 0);
    90d8:	89 81       	ldd	r24, Y+1	; 0x01
    90da:	9a 81       	ldd	r25, Y+2	; 0x02
    90dc:	60 e0       	ldi	r22, 0x00	; 0
    90de:	0e 94 ac 43 	call	0x8758	; 0x8758 <_Z21avr_eeprom_write_bytejh>
			g_unlockCode[j] = '\0';
    90e2:	8b 81       	ldd	r24, Y+3	; 0x03
    90e4:	9c 81       	ldd	r25, Y+4	; 0x04
    90e6:	8f 55       	subi	r24, 0x5F	; 95
    90e8:	98 4b       	sbci	r25, 0xB8	; 184
    90ea:	fc 01       	movw	r30, r24
    90ec:	10 82       	st	Z, r1
			
			g_80m_frequency = EEPROM_TX_80M_FREQUENCY_DEFAULT;
    90ee:	80 e2       	ldi	r24, 0x20	; 32
    90f0:	94 e0       	ldi	r25, 0x04	; 4
    90f2:	a6 e3       	ldi	r26, 0x36	; 54
    90f4:	b0 e0       	ldi	r27, 0x00	; 0
    90f6:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_80m_frequency>
    90fa:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_80m_frequency+0x1>
    90fe:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_80m_frequency+0x2>
    9102:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_80m_frequency+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    9106:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_80m_frequency>
    910a:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_80m_frequency+0x1>
    910e:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_80m_frequency+0x2>
    9112:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_80m_frequency+0x3>
    9116:	ac 01       	movw	r20, r24
    9118:	bd 01       	movw	r22, r26
    911a:	8b e2       	ldi	r24, 0x2B	; 43
    911c:	90 e0       	ldi	r25, 0x00	; 0
    911e:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>

			g_rtty_offset = EEPROM_RTTY_OFFSET_FREQUENCY_DEFAULT;
    9122:	8a ea       	ldi	r24, 0xAA	; 170
    9124:	90 e0       	ldi	r25, 0x00	; 0
    9126:	a0 e0       	ldi	r26, 0x00	; 0
    9128:	b0 e0       	ldi	r27, 0x00	; 0
    912a:	80 93 38 40 	sts	0x4038, r24	; 0x804038 <g_rtty_offset>
    912e:	90 93 39 40 	sts	0x4039, r25	; 0x804039 <g_rtty_offset+0x1>
    9132:	a0 93 3a 40 	sts	0x403A, r26	; 0x80403a <g_rtty_offset+0x2>
    9136:	b0 93 3b 40 	sts	0x403B, r27	; 0x80403b <g_rtty_offset+0x3>
			avr_eeprom_write_dword(Frequency, g_80m_frequency);
    913a:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_80m_frequency>
    913e:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_80m_frequency+0x1>
    9142:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_80m_frequency+0x2>
    9146:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_80m_frequency+0x3>
    914a:	ac 01       	movw	r20, r24
    914c:	bd 01       	movw	r22, r26
    914e:	8b e2       	ldi	r24, 0x2B	; 43
    9150:	90 e0       	ldi	r25, 0x00	; 0
    9152:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>

			g_80m_power_level_mW = EEPROM_TX_80M_POWER_MW_DEFAULT;
    9156:	84 ef       	ldi	r24, 0xF4	; 244
    9158:	91 e0       	ldi	r25, 0x01	; 1
    915a:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_power_level_mW>
    915e:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_power_level_mW+0x1>
			avr_eeprom_write_dword(RF_Power, g_80m_power_level_mW);
    9162:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_power_level_mW>
    9166:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_power_level_mW+0x1>
    916a:	cc 01       	movw	r24, r24
    916c:	a0 e0       	ldi	r26, 0x00	; 0
    916e:	b0 e0       	ldi	r27, 0x00	; 0
    9170:	ac 01       	movw	r20, r24
    9172:	bd 01       	movw	r22, r26
    9174:	83 e3       	ldi	r24, 0x33	; 51
    9176:	90 e0       	ldi	r25, 0x00	; 0
    9178:	0e 94 0e 44 	call	0x881c	; 0x881c <_Z22avr_eeprom_write_dwordjm>

			/* Done */

			avr_eeprom_write_word(0, EEPROM_INITIALIZED_FLAG);
    917c:	6e ec       	ldi	r22, 0xCE	; 206
    917e:	70 e0       	ldi	r23, 0x00	; 0
    9180:	80 e0       	ldi	r24, 0x00	; 0
    9182:	90 e0       	ldi	r25, 0x00	; 0
    9184:	0e 94 db 43 	call	0x87b6	; 0x87b6 <_Z21avr_eeprom_write_wordjj>
		}
		
		return(err);
    9188:	8f 81       	ldd	r24, Y+7	; 0x07
	}
    918a:	2b 96       	adiw	r28, 0x0b	; 11
    918c:	cd bf       	out	0x3d, r28	; 61
    918e:	de bf       	out	0x3e, r29	; 62
    9190:	df 91       	pop	r29
    9192:	cf 91       	pop	r28
    9194:	08 95       	ret

00009196 <_ZN8GoertzelC1Eff>:
		highValueCount++;
	}

	Q2 = Q1;
	Q1 = Q0;
}
    9196:	0f 93       	push	r16
    9198:	1f 93       	push	r17
    919a:	cf 93       	push	r28
    919c:	df 93       	push	r29
    919e:	cd b7       	in	r28, 0x3d	; 61
    91a0:	de b7       	in	r29, 0x3e	; 62
    91a2:	62 97       	sbiw	r28, 0x12	; 18
    91a4:	cd bf       	out	0x3d, r28	; 61
    91a6:	de bf       	out	0x3e, r29	; 62
    91a8:	89 87       	std	Y+9, r24	; 0x09
    91aa:	9a 87       	std	Y+10, r25	; 0x0a
    91ac:	4b 87       	std	Y+11, r20	; 0x0b
    91ae:	5c 87       	std	Y+12, r21	; 0x0c
    91b0:	6d 87       	std	Y+13, r22	; 0x0d
    91b2:	7e 87       	std	Y+14, r23	; 0x0e
    91b4:	0f 87       	std	Y+15, r16	; 0x0f
    91b6:	18 8b       	std	Y+16, r17	; 0x10
    91b8:	29 8b       	std	Y+17, r18	; 0x11
    91ba:	3a 8b       	std	Y+18, r19	; 0x12
    91bc:	8f 85       	ldd	r24, Y+15	; 0x0f
    91be:	98 89       	ldd	r25, Y+16	; 0x10
    91c0:	a9 89       	ldd	r26, Y+17	; 0x11
    91c2:	ba 89       	ldd	r27, Y+18	; 0x12
    91c4:	80 93 c8 47 	sts	0x47C8, r24	; 0x8047c8 <_SAMPLING_FREQUENCY>
    91c8:	90 93 c9 47 	sts	0x47C9, r25	; 0x8047c9 <_SAMPLING_FREQUENCY+0x1>
    91cc:	a0 93 ca 47 	sts	0x47CA, r26	; 0x8047ca <_SAMPLING_FREQUENCY+0x2>
    91d0:	b0 93 cb 47 	sts	0x47CB, r27	; 0x8047cb <_SAMPLING_FREQUENCY+0x3>
    91d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    91d6:	9c 85       	ldd	r25, Y+12	; 0x0c
    91d8:	ad 85       	ldd	r26, Y+13	; 0x0d
    91da:	be 85       	ldd	r27, Y+14	; 0x0e
    91dc:	89 83       	std	Y+1, r24	; 0x01
    91de:	9a 83       	std	Y+2, r25	; 0x02
    91e0:	ab 83       	std	Y+3, r26	; 0x03
    91e2:	bc 83       	std	Y+4, r27	; 0x04
    91e4:	84 e6       	ldi	r24, 0x64	; 100
    91e6:	90 e0       	ldi	r25, 0x00	; 0
    91e8:	8d 83       	std	Y+5, r24	; 0x05
    91ea:	9e 83       	std	Y+6, r25	; 0x06
    91ec:	81 ed       	ldi	r24, 0xD1	; 209
    91ee:	90 e0       	ldi	r25, 0x00	; 0
    91f0:	8f 83       	std	Y+7, r24	; 0x07
    91f2:	98 87       	std	Y+8, r25	; 0x08
    91f4:	8f 81       	ldd	r24, Y+7	; 0x07
    91f6:	98 85       	ldd	r25, Y+8	; 0x08
    91f8:	09 2e       	mov	r0, r25
    91fa:	00 0c       	add	r0, r0
    91fc:	aa 0b       	sbc	r26, r26
    91fe:	bb 0b       	sbc	r27, r27
    9200:	bc 01       	movw	r22, r24
    9202:	cd 01       	movw	r24, r26
    9204:	0e 94 17 74 	call	0xe82e	; 0xe82e <__floatsisf>
    9208:	dc 01       	movw	r26, r24
    920a:	cb 01       	movw	r24, r22
    920c:	29 81       	ldd	r18, Y+1	; 0x01
    920e:	3a 81       	ldd	r19, Y+2	; 0x02
    9210:	4b 81       	ldd	r20, Y+3	; 0x03
    9212:	5c 81       	ldd	r21, Y+4	; 0x04
    9214:	bc 01       	movw	r22, r24
    9216:	cd 01       	movw	r24, r26
    9218:	0e 94 68 73 	call	0xe6d0	; 0xe6d0 <__cmpsf2>
    921c:	88 23       	and	r24, r24
    921e:	6c f4       	brge	.+26     	; 0x923a <_ZN8GoertzelC1Eff+0xa4>
    9220:	8f 81       	ldd	r24, Y+7	; 0x07
    9222:	98 85       	ldd	r25, Y+8	; 0x08
    9224:	09 2e       	mov	r0, r25
    9226:	00 0c       	add	r0, r0
    9228:	aa 0b       	sbc	r26, r26
    922a:	bb 0b       	sbc	r27, r27
    922c:	bc 01       	movw	r22, r24
    922e:	cd 01       	movw	r24, r26
    9230:	0e 94 17 74 	call	0xe82e	; 0xe82e <__floatsisf>
    9234:	dc 01       	movw	r26, r24
    9236:	cb 01       	movw	r24, r22
    9238:	27 c0       	rjmp	.+78     	; 0x9288 <_ZN8GoertzelC1Eff+0xf2>
    923a:	8d 81       	ldd	r24, Y+5	; 0x05
    923c:	9e 81       	ldd	r25, Y+6	; 0x06
    923e:	09 2e       	mov	r0, r25
    9240:	00 0c       	add	r0, r0
    9242:	aa 0b       	sbc	r26, r26
    9244:	bb 0b       	sbc	r27, r27
    9246:	bc 01       	movw	r22, r24
    9248:	cd 01       	movw	r24, r26
    924a:	0e 94 17 74 	call	0xe82e	; 0xe82e <__floatsisf>
    924e:	dc 01       	movw	r26, r24
    9250:	cb 01       	movw	r24, r22
    9252:	29 81       	ldd	r18, Y+1	; 0x01
    9254:	3a 81       	ldd	r19, Y+2	; 0x02
    9256:	4b 81       	ldd	r20, Y+3	; 0x03
    9258:	5c 81       	ldd	r21, Y+4	; 0x04
    925a:	bc 01       	movw	r22, r24
    925c:	cd 01       	movw	r24, r26
    925e:	0e 94 08 75 	call	0xea10	; 0xea10 <__gesf2>
    9262:	18 16       	cp	r1, r24
    9264:	6c f4       	brge	.+26     	; 0x9280 <_ZN8GoertzelC1Eff+0xea>
    9266:	8d 81       	ldd	r24, Y+5	; 0x05
    9268:	9e 81       	ldd	r25, Y+6	; 0x06
    926a:	09 2e       	mov	r0, r25
    926c:	00 0c       	add	r0, r0
    926e:	aa 0b       	sbc	r26, r26
    9270:	bb 0b       	sbc	r27, r27
    9272:	bc 01       	movw	r22, r24
    9274:	cd 01       	movw	r24, r26
    9276:	0e 94 17 74 	call	0xe82e	; 0xe82e <__floatsisf>
    927a:	dc 01       	movw	r26, r24
    927c:	cb 01       	movw	r24, r22
    927e:	04 c0       	rjmp	.+8      	; 0x9288 <_ZN8GoertzelC1Eff+0xf2>
    9280:	89 81       	ldd	r24, Y+1	; 0x01
    9282:	9a 81       	ldd	r25, Y+2	; 0x02
    9284:	ab 81       	ldd	r26, Y+3	; 0x03
    9286:	bc 81       	ldd	r27, Y+4	; 0x04
    9288:	bc 01       	movw	r22, r24
    928a:	cd 01       	movw	r24, r26
    928c:	0e 94 df 73 	call	0xe7be	; 0xe7be <__fixsfsi>
    9290:	dc 01       	movw	r26, r24
    9292:	cb 01       	movw	r24, r22
    9294:	80 93 cc 47 	sts	0x47CC, r24	; 0x8047cc <_N>
    9298:	90 93 cd 47 	sts	0x47CD, r25	; 0x8047cd <_N+0x1>
    929c:	80 91 cc 47 	lds	r24, 0x47CC	; 0x8047cc <_N>
    92a0:	90 91 cd 47 	lds	r25, 0x47CD	; 0x8047cd <_N+0x1>
    92a4:	88 0f       	add	r24, r24
    92a6:	99 1f       	adc	r25, r25
    92a8:	0e 94 16 76 	call	0xec2c	; 0xec2c <malloc>
    92ac:	80 93 d1 47 	sts	0x47D1, r24	; 0x8047d1 <testData>
    92b0:	90 93 d2 47 	sts	0x47D2, r25	; 0x8047d2 <testData+0x1>
    92b4:	00 00       	nop
    92b6:	62 96       	adiw	r28, 0x12	; 18
    92b8:	cd bf       	out	0x3d, r28	; 61
    92ba:	de bf       	out	0x3e, r29	; 62
    92bc:	df 91       	pop	r29
    92be:	cf 91       	pop	r28
    92c0:	1f 91       	pop	r17
    92c2:	0f 91       	pop	r16
    92c4:	08 95       	ret

000092c6 <_ZN8GoertzelD1Ev>:
    92c6:	cf 93       	push	r28
    92c8:	df 93       	push	r29
    92ca:	00 d0       	rcall	.+0      	; 0x92cc <_ZN8GoertzelD1Ev+0x6>
    92cc:	cd b7       	in	r28, 0x3d	; 61
    92ce:	de b7       	in	r29, 0x3e	; 62
    92d0:	89 83       	std	Y+1, r24	; 0x01
    92d2:	9a 83       	std	Y+2, r25	; 0x02
    92d4:	80 91 d1 47 	lds	r24, 0x47D1	; 0x8047d1 <testData>
    92d8:	90 91 d2 47 	lds	r25, 0x47D2	; 0x8047d2 <testData+0x1>
    92dc:	0e 94 ae 76 	call	0xed5c	; 0xed5c <free>
    92e0:	00 00       	nop
    92e2:	0f 90       	pop	r0
    92e4:	0f 90       	pop	r0
    92e6:	df 91       	pop	r29
    92e8:	cf 91       	pop	r28
    92ea:	08 95       	ret

000092ec <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
    92ec:	cf 93       	push	r28
    92ee:	df 93       	push	r29
    92f0:	00 d0       	rcall	.+0      	; 0x92f2 <_ZN8Goertzel9DataPointEi+0x6>
    92f2:	00 d0       	rcall	.+0      	; 0x92f4 <_ZN8Goertzel9DataPointEi+0x8>
    92f4:	cd b7       	in	r28, 0x3d	; 61
    92f6:	de b7       	in	r29, 0x3e	; 62
    92f8:	89 83       	std	Y+1, r24	; 0x01
    92fa:	9a 83       	std	Y+2, r25	; 0x02
    92fc:	6b 83       	std	Y+3, r22	; 0x03
    92fe:	7c 83       	std	Y+4, r23	; 0x04
	if(_samplesReady)
    9300:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_samplesReady>
    9304:	88 23       	and	r24, r24
    9306:	19 f0       	breq	.+6      	; 0x930e <_ZN8Goertzel9DataPointEi+0x22>
	{
		return(_samplesReady);
    9308:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_samplesReady>
    930c:	32 c0       	rjmp	.+100    	; 0x9372 <_ZN8Goertzel9DataPointEi+0x86>
	}

	testData[_index] = data;
    930e:	20 91 d1 47 	lds	r18, 0x47D1	; 0x8047d1 <testData>
    9312:	30 91 d2 47 	lds	r19, 0x47D2	; 0x8047d2 <testData+0x1>
    9316:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_index>
    931a:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_index+0x1>
    931e:	88 0f       	add	r24, r24
    9320:	99 1f       	adc	r25, r25
    9322:	82 0f       	add	r24, r18
    9324:	93 1f       	adc	r25, r19
    9326:	2b 81       	ldd	r18, Y+3	; 0x03
    9328:	3c 81       	ldd	r19, Y+4	; 0x04
    932a:	fc 01       	movw	r30, r24
    932c:	20 83       	st	Z, r18
    932e:	31 83       	std	Z+1, r19	; 0x01
	_index++;
    9330:	80 91 ce 47 	lds	r24, 0x47CE	; 0x8047ce <_index>
    9334:	90 91 cf 47 	lds	r25, 0x47CF	; 0x8047cf <_index+0x1>
    9338:	01 96       	adiw	r24, 0x01	; 1
    933a:	80 93 ce 47 	sts	0x47CE, r24	; 0x8047ce <_index>
    933e:	90 93 cf 47 	sts	0x47CF, r25	; 0x8047cf <_index+0x1>
	if(_index >= _N)
    9342:	20 91 ce 47 	lds	r18, 0x47CE	; 0x8047ce <_index>
    9346:	30 91 cf 47 	lds	r19, 0x47CF	; 0x8047cf <_index+0x1>
    934a:	80 91 cc 47 	lds	r24, 0x47CC	; 0x8047cc <_N>
    934e:	90 91 cd 47 	lds	r25, 0x47CD	; 0x8047cd <_N+0x1>
    9352:	41 e0       	ldi	r20, 0x01	; 1
    9354:	28 17       	cp	r18, r24
    9356:	39 07       	cpc	r19, r25
    9358:	0c f4       	brge	.+2      	; 0x935c <_ZN8Goertzel9DataPointEi+0x70>
    935a:	40 e0       	ldi	r20, 0x00	; 0
    935c:	44 23       	and	r20, r20
    935e:	39 f0       	breq	.+14     	; 0x936e <_ZN8Goertzel9DataPointEi+0x82>
	{
		_index = 0;
    9360:	10 92 ce 47 	sts	0x47CE, r1	; 0x8047ce <_index>
    9364:	10 92 cf 47 	sts	0x47CF, r1	; 0x8047cf <_index+0x1>
		_samplesReady = true;
    9368:	81 e0       	ldi	r24, 0x01	; 1
    936a:	80 93 d0 47 	sts	0x47D0, r24	; 0x8047d0 <_samplesReady>
	}

	return(_samplesReady);
    936e:	80 91 d0 47 	lds	r24, 0x47D0	; 0x8047d0 <_samplesReady>
}
    9372:	24 96       	adiw	r28, 0x04	; 4
    9374:	cd bf       	out	0x3d, r28	; 61
    9376:	de bf       	out	0x3e, r29	; 62
    9378:	df 91       	pop	r29
    937a:	cf 91       	pop	r28
    937c:	08 95       	ret

0000937e <PORTB_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTB_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    937e:	cf 93       	push	r28
    9380:	df 93       	push	r29
    9382:	00 d0       	rcall	.+0      	; 0x9384 <PORTB_set_pin_pull_mode+0x6>
    9384:	00 d0       	rcall	.+0      	; 0x9386 <PORTB_set_pin_pull_mode+0x8>
    9386:	cd b7       	in	r28, 0x3d	; 61
    9388:	de b7       	in	r29, 0x3e	; 62
    938a:	8b 83       	std	Y+3, r24	; 0x03
    938c:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);
    938e:	8b 81       	ldd	r24, Y+3	; 0x03
    9390:	88 2f       	mov	r24, r24
    9392:	90 e0       	ldi	r25, 0x00	; 0
    9394:	80 5d       	subi	r24, 0xD0	; 208
    9396:	9b 4f       	sbci	r25, 0xFB	; 251
    9398:	89 83       	std	Y+1, r24	; 0x01
    939a:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    939c:	8c 81       	ldd	r24, Y+4	; 0x04
    939e:	81 30       	cpi	r24, 0x01	; 1
    93a0:	59 f4       	brne	.+22     	; 0x93b8 <PORTB_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    93a2:	89 81       	ldd	r24, Y+1	; 0x01
    93a4:	9a 81       	ldd	r25, Y+2	; 0x02
    93a6:	fc 01       	movw	r30, r24
    93a8:	80 81       	ld	r24, Z
    93aa:	28 2f       	mov	r18, r24
    93ac:	28 60       	ori	r18, 0x08	; 8
    93ae:	89 81       	ldd	r24, Y+1	; 0x01
    93b0:	9a 81       	ldd	r25, Y+2	; 0x02
    93b2:	fc 01       	movw	r30, r24
    93b4:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    93b6:	0d c0       	rjmp	.+26     	; 0x93d2 <PORTB_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    93b8:	8c 81       	ldd	r24, Y+4	; 0x04
    93ba:	88 23       	and	r24, r24
    93bc:	51 f4       	brne	.+20     	; 0x93d2 <PORTB_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    93be:	89 81       	ldd	r24, Y+1	; 0x01
    93c0:	9a 81       	ldd	r25, Y+2	; 0x02
    93c2:	fc 01       	movw	r30, r24
    93c4:	80 81       	ld	r24, Z
    93c6:	28 2f       	mov	r18, r24
    93c8:	27 7f       	andi	r18, 0xF7	; 247
    93ca:	89 81       	ldd	r24, Y+1	; 0x01
    93cc:	9a 81       	ldd	r25, Y+2	; 0x02
    93ce:	fc 01       	movw	r30, r24
    93d0:	20 83       	st	Z, r18
	}
}
    93d2:	00 00       	nop
    93d4:	24 96       	adiw	r28, 0x04	; 4
    93d6:	cd bf       	out	0x3d, r28	; 61
    93d8:	de bf       	out	0x3e, r29	; 62
    93da:	df 91       	pop	r29
    93dc:	cf 91       	pop	r28
    93de:	08 95       	ret

000093e0 <PORTC_set_pin_pull_mode>:
 *
 * \param[in] pin       The pin number within port
 * \param[in] pull_mode Pin pull mode
 */
static inline void PORTC_set_pin_pull_mode(const uint8_t pin, const enum port_pull_mode pull_mode)
{
    93e0:	cf 93       	push	r28
    93e2:	df 93       	push	r29
    93e4:	00 d0       	rcall	.+0      	; 0x93e6 <PORTC_set_pin_pull_mode+0x6>
    93e6:	00 d0       	rcall	.+0      	; 0x93e8 <PORTC_set_pin_pull_mode+0x8>
    93e8:	cd b7       	in	r28, 0x3d	; 61
    93ea:	de b7       	in	r29, 0x3e	; 62
    93ec:	8b 83       	std	Y+3, r24	; 0x03
    93ee:	6c 83       	std	Y+4, r22	; 0x04
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);
    93f0:	8b 81       	ldd	r24, Y+3	; 0x03
    93f2:	88 2f       	mov	r24, r24
    93f4:	90 e0       	ldi	r25, 0x00	; 0
    93f6:	80 5b       	subi	r24, 0xB0	; 176
    93f8:	9b 4f       	sbci	r25, 0xFB	; 251
    93fa:	89 83       	std	Y+1, r24	; 0x01
    93fc:	9a 83       	std	Y+2, r25	; 0x02

	if (pull_mode == PORT_PULL_UP) {
    93fe:	8c 81       	ldd	r24, Y+4	; 0x04
    9400:	81 30       	cpi	r24, 0x01	; 1
    9402:	59 f4       	brne	.+22     	; 0x941a <PORTC_set_pin_pull_mode+0x3a>
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
    9404:	89 81       	ldd	r24, Y+1	; 0x01
    9406:	9a 81       	ldd	r25, Y+2	; 0x02
    9408:	fc 01       	movw	r30, r24
    940a:	80 81       	ld	r24, Z
    940c:	28 2f       	mov	r18, r24
    940e:	28 60       	ori	r18, 0x08	; 8
    9410:	89 81       	ldd	r24, Y+1	; 0x01
    9412:	9a 81       	ldd	r25, Y+2	; 0x02
    9414:	fc 01       	movw	r30, r24
    9416:	20 83       	st	Z, r18
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
	}
}
    9418:	0d c0       	rjmp	.+26     	; 0x9434 <PORTC_set_pin_pull_mode+0x54>
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTC + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
    941a:	8c 81       	ldd	r24, Y+4	; 0x04
    941c:	88 23       	and	r24, r24
    941e:	51 f4       	brne	.+20     	; 0x9434 <PORTC_set_pin_pull_mode+0x54>
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    9420:	89 81       	ldd	r24, Y+1	; 0x01
    9422:	9a 81       	ldd	r25, Y+2	; 0x02
    9424:	fc 01       	movw	r30, r24
    9426:	80 81       	ld	r24, Z
    9428:	28 2f       	mov	r18, r24
    942a:	27 7f       	andi	r18, 0xF7	; 247
    942c:	89 81       	ldd	r24, Y+1	; 0x01
    942e:	9a 81       	ldd	r25, Y+2	; 0x02
    9430:	fc 01       	movw	r30, r24
    9432:	20 83       	st	Z, r18
	}
}
    9434:	00 00       	nop
    9436:	24 96       	adiw	r28, 0x04	; 4
    9438:	cd bf       	out	0x3d, r28	; 61
    943a:	de bf       	out	0x3e, r29	; 62
    943c:	df 91       	pop	r29
    943e:	cf 91       	pop	r28
    9440:	08 95       	ret

00009442 <I2C_0_Init>:
/************************************************************************/
/* I2C_0                                                               */
/************************************************************************/

void I2C_0_Init(void)
{
    9442:	cf 93       	push	r28
    9444:	df 93       	push	r29
    9446:	cd b7       	in	r28, 0x3d	; 61
    9448:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PC2/PC3 */
	PORTMUX.TWIROUTEA &= 0x0A;
    944a:	80 ee       	ldi	r24, 0xE0	; 224
    944c:	95 e0       	ldi	r25, 0x05	; 5
    944e:	20 ee       	ldi	r18, 0xE0	; 224
    9450:	35 e0       	ldi	r19, 0x05	; 5
    9452:	f9 01       	movw	r30, r18
    9454:	25 81       	ldd	r18, Z+5	; 0x05
    9456:	2a 70       	andi	r18, 0x0A	; 10
    9458:	fc 01       	movw	r30, r24
    945a:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x02;
    945c:	80 ee       	ldi	r24, 0xE0	; 224
    945e:	95 e0       	ldi	r25, 0x05	; 5
    9460:	20 ee       	ldi	r18, 0xE0	; 224
    9462:	35 e0       	ldi	r19, 0x05	; 5
    9464:	f9 01       	movw	r30, r18
    9466:	25 81       	ldd	r18, Z+5	; 0x05
    9468:	22 60       	ori	r18, 0x02	; 2
    946a:	fc 01       	movw	r30, r24
    946c:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI0.MBAUD = TWI0_BAUD((I2C_SCL_FREQ), 0.3);
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    946e:	80 e0       	ldi	r24, 0x00	; 0
    9470:	99 e0       	ldi	r25, 0x09	; 9
    9472:	23 e7       	ldi	r18, 0x73	; 115
    9474:	fc 01       	movw	r30, r24
    9476:	26 83       	std	Z+6, r18	; 0x06
	
	/* Enable TWI */
	TWI0.MCTRLA = TWI_ENABLE_bm;
    9478:	80 e0       	ldi	r24, 0x00	; 0
    947a:	99 e0       	ldi	r25, 0x09	; 9
    947c:	21 e0       	ldi	r18, 0x01	; 1
    947e:	fc 01       	movw	r30, r24
    9480:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI0.MADDR = 0x00;
    9482:	80 e0       	ldi	r24, 0x00	; 0
    9484:	99 e0       	ldi	r25, 0x09	; 9
    9486:	fc 01       	movw	r30, r24
    9488:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI0.MDATA = 0x00;
    948a:	80 e0       	ldi	r24, 0x00	; 0
    948c:	99 e0       	ldi	r25, 0x09	; 9
    948e:	fc 01       	movw	r30, r24
    9490:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    9492:	80 e0       	ldi	r24, 0x00	; 0
    9494:	99 e0       	ldi	r25, 0x09	; 9
    9496:	21 e0       	ldi	r18, 0x01	; 1
    9498:	fc 01       	movw	r30, r24
    949a:	25 83       	std	Z+5, r18	; 0x05
	/* Select I2C pins PC2/PC3 */
	
	PORTC_set_pin_pull_mode(2, PORT_PULL_UP);
    949c:	61 e0       	ldi	r22, 0x01	; 1
    949e:	82 e0       	ldi	r24, 0x02	; 2
    94a0:	0e 94 f0 49 	call	0x93e0	; 0x93e0 <PORTC_set_pin_pull_mode>
	PORTC_set_pin_pull_mode(3, PORT_PULL_UP);
    94a4:	61 e0       	ldi	r22, 0x01	; 1
    94a6:	83 e0       	ldi	r24, 0x03	; 3
    94a8:	0e 94 f0 49 	call	0x93e0	; 0x93e0 <PORTC_set_pin_pull_mode>
}
    94ac:	00 00       	nop
    94ae:	df 91       	pop	r29
    94b0:	cf 91       	pop	r28
    94b2:	08 95       	ret

000094b4 <_ZL11i2c_0_WaitWv>:

static uint8_t i2c_0_WaitW(void)
{
    94b4:	cf 93       	push	r28
    94b6:	df 93       	push	r29
    94b8:	1f 92       	push	r1
    94ba:	cd b7       	in	r28, 0x3d	; 61
    94bc:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    94be:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 300;
    94c0:	8c e2       	ldi	r24, 0x2C	; 44
    94c2:	91 e0       	ldi	r25, 0x01	; 1
    94c4:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <g_i2c0_timeout_ticks>
    94c8:	90 93 25 40 	sts	0x4025, r25	; 0x804025 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    94cc:	80 e0       	ldi	r24, 0x00	; 0
    94ce:	99 e0       	ldi	r25, 0x09	; 9
    94d0:	fc 01       	movw	r30, r24
    94d2:	85 81       	ldd	r24, Z+5	; 0x05
    94d4:	88 2f       	mov	r24, r24
    94d6:	90 e0       	ldi	r25, 0x00	; 0
    94d8:	80 7c       	andi	r24, 0xC0	; 192
    94da:	99 27       	eor	r25, r25
    94dc:	21 e0       	ldi	r18, 0x01	; 1
    94de:	89 2b       	or	r24, r25
    94e0:	09 f4       	brne	.+2      	; 0x94e4 <_ZL11i2c_0_WaitWv+0x30>
    94e2:	20 e0       	ldi	r18, 0x00	; 0
    94e4:	22 23       	and	r18, r18
    94e6:	a1 f0       	breq	.+40     	; 0x9510 <_ZL11i2c_0_WaitWv+0x5c>
		{
			if(!(TWI0.MSTATUS & TWI_RXACK_bm))
    94e8:	80 e0       	ldi	r24, 0x00	; 0
    94ea:	99 e0       	ldi	r25, 0x09	; 9
    94ec:	fc 01       	movw	r30, r24
    94ee:	85 81       	ldd	r24, Z+5	; 0x05
    94f0:	88 2f       	mov	r24, r24
    94f2:	90 e0       	ldi	r25, 0x00	; 0
    94f4:	80 71       	andi	r24, 0x10	; 16
    94f6:	99 27       	eor	r25, r25
    94f8:	21 e0       	ldi	r18, 0x01	; 1
    94fa:	89 2b       	or	r24, r25
    94fc:	09 f0       	breq	.+2      	; 0x9500 <_ZL11i2c_0_WaitWv+0x4c>
    94fe:	20 e0       	ldi	r18, 0x00	; 0
    9500:	22 23       	and	r18, r18
    9502:	19 f0       	breq	.+6      	; 0x950a <_ZL11i2c_0_WaitWv+0x56>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9504:	81 e0       	ldi	r24, 0x01	; 1
    9506:	89 83       	std	Y+1, r24	; 0x01
    9508:	13 c0       	rjmp	.+38     	; 0x9530 <_ZL11i2c_0_WaitWv+0x7c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    950a:	82 e0       	ldi	r24, 0x02	; 2
    950c:	89 83       	std	Y+1, r24	; 0x01
    950e:	10 c0       	rjmp	.+32     	; 0x9530 <_ZL11i2c_0_WaitWv+0x7c>
			}
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9510:	80 e0       	ldi	r24, 0x00	; 0
    9512:	99 e0       	ldi	r25, 0x09	; 9
    9514:	fc 01       	movw	r30, r24
    9516:	85 81       	ldd	r24, Z+5	; 0x05
    9518:	88 2f       	mov	r24, r24
    951a:	90 e0       	ldi	r25, 0x00	; 0
    951c:	8c 70       	andi	r24, 0x0C	; 12
    951e:	99 27       	eor	r25, r25
    9520:	21 e0       	ldi	r18, 0x01	; 1
    9522:	89 2b       	or	r24, r25
    9524:	09 f4       	brne	.+2      	; 0x9528 <_ZL11i2c_0_WaitWv+0x74>
    9526:	20 e0       	ldi	r18, 0x00	; 0
    9528:	22 23       	and	r18, r18
    952a:	11 f0       	breq	.+4      	; 0x9530 <_ZL11i2c_0_WaitWv+0x7c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    952c:	84 e0       	ldi	r24, 0x04	; 4
    952e:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    9530:	89 81       	ldd	r24, Y+1	; 0x01
    9532:	88 23       	and	r24, r24
    9534:	41 f4       	brne	.+16     	; 0x9546 <_ZL11i2c_0_WaitWv+0x92>
    9536:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <g_i2c0_timeout_ticks>
    953a:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    953e:	89 2b       	or	r24, r25
    9540:	11 f0       	breq	.+4      	; 0x9546 <_ZL11i2c_0_WaitWv+0x92>
    9542:	81 e0       	ldi	r24, 0x01	; 1
    9544:	01 c0       	rjmp	.+2      	; 0x9548 <_ZL11i2c_0_WaitWv+0x94>
    9546:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 300;
	
	do
    9548:	88 23       	and	r24, r24
    954a:	09 f0       	breq	.+2      	; 0x954e <_ZL11i2c_0_WaitWv+0x9a>
    954c:	bf cf       	rjmp	.-130    	; 0x94cc <_ZL11i2c_0_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	if(!g_i2c0_timeout_ticks) 
    954e:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <g_i2c0_timeout_ticks>
    9552:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    9556:	21 e0       	ldi	r18, 0x01	; 1
    9558:	89 2b       	or	r24, r25
    955a:	09 f0       	breq	.+2      	; 0x955e <_ZL11i2c_0_WaitWv+0xaa>
    955c:	20 e0       	ldi	r18, 0x00	; 0
    955e:	22 23       	and	r18, r18
    9560:	11 f0       	breq	.+4      	; 0x9566 <_ZL11i2c_0_WaitWv+0xb2>
	{
		state = I2C_ERROR;
    9562:	84 e0       	ldi	r24, 0x04	; 4
    9564:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return state;
    9566:	89 81       	ldd	r24, Y+1	; 0x01
}
    9568:	0f 90       	pop	r0
    956a:	df 91       	pop	r29
    956c:	cf 91       	pop	r28
    956e:	08 95       	ret

00009570 <_ZL11i2c_0_WaitRv>:

static uint8_t i2c_0_WaitR(void)
{
    9570:	cf 93       	push	r28
    9572:	df 93       	push	r29
    9574:	1f 92       	push	r1
    9576:	cd b7       	in	r28, 0x3d	; 61
    9578:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    957a:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    957c:	88 ec       	ldi	r24, 0xC8	; 200
    957e:	90 e0       	ldi	r25, 0x00	; 0
    9580:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <g_i2c0_timeout_ticks>
    9584:	90 93 25 40 	sts	0x4025, r25	; 0x804025 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI0.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    9588:	80 e0       	ldi	r24, 0x00	; 0
    958a:	99 e0       	ldi	r25, 0x09	; 9
    958c:	fc 01       	movw	r30, r24
    958e:	85 81       	ldd	r24, Z+5	; 0x05
    9590:	88 2f       	mov	r24, r24
    9592:	90 e0       	ldi	r25, 0x00	; 0
    9594:	80 7c       	andi	r24, 0xC0	; 192
    9596:	99 27       	eor	r25, r25
    9598:	21 e0       	ldi	r18, 0x01	; 1
    959a:	89 2b       	or	r24, r25
    959c:	09 f4       	brne	.+2      	; 0x95a0 <_ZL11i2c_0_WaitRv+0x30>
    959e:	20 e0       	ldi	r18, 0x00	; 0
    95a0:	22 23       	and	r18, r18
    95a2:	19 f0       	breq	.+6      	; 0x95aa <_ZL11i2c_0_WaitRv+0x3a>
		{
			state = I2C_READY;
    95a4:	83 e0       	ldi	r24, 0x03	; 3
    95a6:	89 83       	std	Y+1, r24	; 0x01
    95a8:	10 c0       	rjmp	.+32     	; 0x95ca <_ZL11i2c_0_WaitRv+0x5a>
		}
		else if(TWI0.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    95aa:	80 e0       	ldi	r24, 0x00	; 0
    95ac:	99 e0       	ldi	r25, 0x09	; 9
    95ae:	fc 01       	movw	r30, r24
    95b0:	85 81       	ldd	r24, Z+5	; 0x05
    95b2:	88 2f       	mov	r24, r24
    95b4:	90 e0       	ldi	r25, 0x00	; 0
    95b6:	8c 70       	andi	r24, 0x0C	; 12
    95b8:	99 27       	eor	r25, r25
    95ba:	21 e0       	ldi	r18, 0x01	; 1
    95bc:	89 2b       	or	r24, r25
    95be:	09 f4       	brne	.+2      	; 0x95c2 <_ZL11i2c_0_WaitRv+0x52>
    95c0:	20 e0       	ldi	r18, 0x00	; 0
    95c2:	22 23       	and	r18, r18
    95c4:	11 f0       	breq	.+4      	; 0x95ca <_ZL11i2c_0_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    95c6:	84 e0       	ldi	r24, 0x04	; 4
    95c8:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    95ca:	89 81       	ldd	r24, Y+1	; 0x01
    95cc:	88 23       	and	r24, r24
    95ce:	41 f4       	brne	.+16     	; 0x95e0 <_ZL11i2c_0_WaitRv+0x70>
    95d0:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <g_i2c0_timeout_ticks>
    95d4:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    95d8:	89 2b       	or	r24, r25
    95da:	11 f0       	breq	.+4      	; 0x95e0 <_ZL11i2c_0_WaitRv+0x70>
    95dc:	81 e0       	ldi	r24, 0x01	; 1
    95de:	01 c0       	rjmp	.+2      	; 0x95e2 <_ZL11i2c_0_WaitRv+0x72>
    95e0:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    95e2:	88 23       	and	r24, r24
    95e4:	09 f0       	breq	.+2      	; 0x95e8 <_ZL11i2c_0_WaitRv+0x78>
    95e6:	d0 cf       	rjmp	.-96     	; 0x9588 <_ZL11i2c_0_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    95e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    95ea:	0f 90       	pop	r0
    95ec:	df 91       	pop	r29
    95ee:	cf 91       	pop	r28
    95f0:	08 95       	ret

000095f2 <I2C_0_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_0_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    95f2:	cf 93       	push	r28
    95f4:	df 93       	push	r29
    95f6:	cd b7       	in	r28, 0x3d	; 61
    95f8:	de b7       	in	r29, 0x3e	; 62
    95fa:	26 97       	sbiw	r28, 0x06	; 6
    95fc:	cd bf       	out	0x3d, r28	; 61
    95fe:	de bf       	out	0x3e, r29	; 62
    9600:	8a 83       	std	Y+2, r24	; 0x02
    9602:	6b 83       	std	Y+3, r22	; 0x03
    9604:	4c 83       	std	Y+4, r20	; 0x04
    9606:	5d 83       	std	Y+5, r21	; 0x05
    9608:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    960a:	8f ef       	ldi	r24, 0xFF	; 255
    960c:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send slave address */
	TWI0.MADDR = slaveAddr;
    960e:	80 e0       	ldi	r24, 0x00	; 0
    9610:	99 e0       	ldi	r25, 0x09	; 9
    9612:	2a 81       	ldd	r18, Y+2	; 0x02
    9614:	fc 01       	movw	r30, r24
    9616:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    9618:	0e 94 5a 4a 	call	0x94b4	; 0x94b4 <_ZL11i2c_0_WaitWv>
    961c:	98 2f       	mov	r25, r24
    961e:	81 e0       	ldi	r24, 0x01	; 1
    9620:	91 30       	cpi	r25, 0x01	; 1
    9622:	09 f4       	brne	.+2      	; 0x9626 <I2C_0_SendData+0x34>
    9624:	80 e0       	ldi	r24, 0x00	; 0
    9626:	88 23       	and	r24, r24
    9628:	11 f0       	breq	.+4      	; 0x962e <I2C_0_SendData+0x3c>
	{
		return retVal;
    962a:	89 81       	ldd	r24, Y+1	; 0x01
    962c:	44 c0       	rjmp	.+136    	; 0x96b6 <I2C_0_SendData+0xc4>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    962e:	80 e0       	ldi	r24, 0x00	; 0
    9630:	99 e0       	ldi	r25, 0x09	; 9
    9632:	2b 81       	ldd	r18, Y+3	; 0x03
    9634:	fc 01       	movw	r30, r24
    9636:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9638:	0e 94 5a 4a 	call	0x94b4	; 0x94b4 <_ZL11i2c_0_WaitWv>
    963c:	98 2f       	mov	r25, r24
    963e:	81 e0       	ldi	r24, 0x01	; 1
    9640:	91 30       	cpi	r25, 0x01	; 1
    9642:	09 f4       	brne	.+2      	; 0x9646 <I2C_0_SendData+0x54>
    9644:	80 e0       	ldi	r24, 0x00	; 0
    9646:	88 23       	and	r24, r24
    9648:	11 f0       	breq	.+4      	; 0x964e <I2C_0_SendData+0x5c>
	{
		return retVal;
    964a:	89 81       	ldd	r24, Y+1	; 0x01
    964c:	34 c0       	rjmp	.+104    	; 0x96b6 <I2C_0_SendData+0xc4>
	}

	retVal = 0;
    964e:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    9650:	8e 81       	ldd	r24, Y+6	; 0x06
    9652:	88 23       	and	r24, r24
    9654:	79 f1       	breq	.+94     	; 0x96b4 <I2C_0_SendData+0xc2>
    9656:	8c 81       	ldd	r24, Y+4	; 0x04
    9658:	9d 81       	ldd	r25, Y+5	; 0x05
    965a:	89 2b       	or	r24, r25
    965c:	59 f1       	breq	.+86     	; 0x96b4 <I2C_0_SendData+0xc2>
	{
		while(len--)
    965e:	8e 81       	ldd	r24, Y+6	; 0x06
    9660:	9f ef       	ldi	r25, 0xFF	; 255
    9662:	98 0f       	add	r25, r24
    9664:	9e 83       	std	Y+6, r25	; 0x06
    9666:	91 e0       	ldi	r25, 0x01	; 1
    9668:	88 23       	and	r24, r24
    966a:	09 f4       	brne	.+2      	; 0x966e <I2C_0_SendData+0x7c>
    966c:	90 e0       	ldi	r25, 0x00	; 0
    966e:	99 23       	and	r25, r25
    9670:	09 f1       	breq	.+66     	; 0x96b4 <I2C_0_SendData+0xc2>
		{
			TWI0.MDATA = *pData;
    9672:	80 e0       	ldi	r24, 0x00	; 0
    9674:	99 e0       	ldi	r25, 0x09	; 9
    9676:	2c 81       	ldd	r18, Y+4	; 0x04
    9678:	3d 81       	ldd	r19, Y+5	; 0x05
    967a:	f9 01       	movw	r30, r18
    967c:	20 81       	ld	r18, Z
    967e:	fc 01       	movw	r30, r24
    9680:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_0_WaitW() == I2C_ACKED)
    9682:	0e 94 5a 4a 	call	0x94b4	; 0x94b4 <_ZL11i2c_0_WaitWv>
    9686:	98 2f       	mov	r25, r24
    9688:	81 e0       	ldi	r24, 0x01	; 1
    968a:	91 30       	cpi	r25, 0x01	; 1
    968c:	09 f0       	breq	.+2      	; 0x9690 <I2C_0_SendData+0x9e>
    968e:	80 e0       	ldi	r24, 0x00	; 0
    9690:	88 23       	and	r24, r24
    9692:	79 f0       	breq	.+30     	; 0x96b2 <I2C_0_SendData+0xc0>
			{
				retVal++;
    9694:	89 81       	ldd	r24, Y+1	; 0x01
    9696:	8f 5f       	subi	r24, 0xFF	; 255
    9698:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    969a:	8c 81       	ldd	r24, Y+4	; 0x04
    969c:	9d 81       	ldd	r25, Y+5	; 0x05
    969e:	01 96       	adiw	r24, 0x01	; 1
    96a0:	8c 83       	std	Y+4, r24	; 0x04
    96a2:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_0_EndSession();
    96a4:	8e 81       	ldd	r24, Y+6	; 0x06
    96a6:	88 23       	and	r24, r24
    96a8:	11 f4       	brne	.+4      	; 0x96ae <I2C_0_SendData+0xbc>
    96aa:	0e 94 df 4b 	call	0x97be	; 0x97be <I2C_0_EndSession>
				continue;
    96ae:	00 00       	nop
	}

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    96b0:	d6 cf       	rjmp	.-84     	; 0x965e <I2C_0_SendData+0x6c>
				if(!len) I2C_0_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    96b2:	00 00       	nop
			}
		}
	}
	
	return retVal;
    96b4:	89 81       	ldd	r24, Y+1	; 0x01
}
    96b6:	26 96       	adiw	r28, 0x06	; 6
    96b8:	cd bf       	out	0x3d, r28	; 61
    96ba:	de bf       	out	0x3e, r29	; 62
    96bc:	df 91       	pop	r29
    96be:	cf 91       	pop	r28
    96c0:	08 95       	ret

000096c2 <I2C_0_GetData>:

/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_0_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    96c2:	cf 93       	push	r28
    96c4:	df 93       	push	r29
    96c6:	cd b7       	in	r28, 0x3d	; 61
    96c8:	de b7       	in	r29, 0x3e	; 62
    96ca:	26 97       	sbiw	r28, 0x06	; 6
    96cc:	cd bf       	out	0x3d, r28	; 61
    96ce:	de bf       	out	0x3e, r29	; 62
    96d0:	8a 83       	std	Y+2, r24	; 0x02
    96d2:	6b 83       	std	Y+3, r22	; 0x03
    96d4:	4c 83       	std	Y+4, r20	; 0x04
    96d6:	5d 83       	std	Y+5, r21	; 0x05
    96d8:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    96da:	8f ef       	ldi	r24, 0xFF	; 255
    96dc:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI0.MADDR = slaveAddr;
    96de:	80 e0       	ldi	r24, 0x00	; 0
    96e0:	99 e0       	ldi	r25, 0x09	; 9
    96e2:	2a 81       	ldd	r18, Y+2	; 0x02
    96e4:	fc 01       	movw	r30, r24
    96e6:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    96e8:	0e 94 5a 4a 	call	0x94b4	; 0x94b4 <_ZL11i2c_0_WaitWv>
    96ec:	98 2f       	mov	r25, r24
    96ee:	81 e0       	ldi	r24, 0x01	; 1
    96f0:	91 30       	cpi	r25, 0x01	; 1
    96f2:	09 f4       	brne	.+2      	; 0x96f6 <I2C_0_GetData+0x34>
    96f4:	80 e0       	ldi	r24, 0x00	; 0
    96f6:	88 23       	and	r24, r24
    96f8:	11 f0       	breq	.+4      	; 0x96fe <I2C_0_GetData+0x3c>
	{
		return retVal;
    96fa:	89 81       	ldd	r24, Y+1	; 0x01
    96fc:	5a c0       	rjmp	.+180    	; 0x97b2 <I2C_0_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI0.MDATA = regAddr;
    96fe:	80 e0       	ldi	r24, 0x00	; 0
    9700:	99 e0       	ldi	r25, 0x09	; 9
    9702:	2b 81       	ldd	r18, Y+3	; 0x03
    9704:	fc 01       	movw	r30, r24
    9706:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_0_WaitW() != I2C_ACKED)
    9708:	0e 94 5a 4a 	call	0x94b4	; 0x94b4 <_ZL11i2c_0_WaitWv>
    970c:	98 2f       	mov	r25, r24
    970e:	81 e0       	ldi	r24, 0x01	; 1
    9710:	91 30       	cpi	r25, 0x01	; 1
    9712:	09 f4       	brne	.+2      	; 0x9716 <I2C_0_GetData+0x54>
    9714:	80 e0       	ldi	r24, 0x00	; 0
    9716:	88 23       	and	r24, r24
    9718:	11 f0       	breq	.+4      	; 0x971e <I2C_0_GetData+0x5c>
	{
		return retVal;
    971a:	89 81       	ldd	r24, Y+1	; 0x01
    971c:	4a c0       	rjmp	.+148    	; 0x97b2 <I2C_0_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI0.MADDR = slaveAddr | 0x01;
    971e:	80 e0       	ldi	r24, 0x00	; 0
    9720:	99 e0       	ldi	r25, 0x09	; 9
    9722:	2a 81       	ldd	r18, Y+2	; 0x02
    9724:	21 60       	ori	r18, 0x01	; 1
    9726:	fc 01       	movw	r30, r24
    9728:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_0_WaitW() != I2C_ACKED)
    972a:	0e 94 5a 4a 	call	0x94b4	; 0x94b4 <_ZL11i2c_0_WaitWv>
    972e:	98 2f       	mov	r25, r24
    9730:	81 e0       	ldi	r24, 0x01	; 1
    9732:	91 30       	cpi	r25, 0x01	; 1
    9734:	09 f4       	brne	.+2      	; 0x9738 <I2C_0_GetData+0x76>
    9736:	80 e0       	ldi	r24, 0x00	; 0
    9738:	88 23       	and	r24, r24
    973a:	11 f0       	breq	.+4      	; 0x9740 <I2C_0_GetData+0x7e>
	{
		return retVal;
    973c:	89 81       	ldd	r24, Y+1	; 0x01
    973e:	39 c0       	rjmp	.+114    	; 0x97b2 <I2C_0_GetData+0xf0>
	}
	
	retVal = 0;
    9740:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    9742:	8e 81       	ldd	r24, Y+6	; 0x06
    9744:	88 23       	and	r24, r24
    9746:	a1 f1       	breq	.+104    	; 0x97b0 <I2C_0_GetData+0xee>
    9748:	8c 81       	ldd	r24, Y+4	; 0x04
    974a:	9d 81       	ldd	r25, Y+5	; 0x05
    974c:	89 2b       	or	r24, r25
    974e:	81 f1       	breq	.+96     	; 0x97b0 <I2C_0_GetData+0xee>
	{
		while(len--)
    9750:	8e 81       	ldd	r24, Y+6	; 0x06
    9752:	9f ef       	ldi	r25, 0xFF	; 255
    9754:	98 0f       	add	r25, r24
    9756:	9e 83       	std	Y+6, r25	; 0x06
    9758:	91 e0       	ldi	r25, 0x01	; 1
    975a:	88 23       	and	r24, r24
    975c:	09 f4       	brne	.+2      	; 0x9760 <I2C_0_GetData+0x9e>
    975e:	90 e0       	ldi	r25, 0x00	; 0
    9760:	99 23       	and	r25, r25
    9762:	31 f1       	breq	.+76     	; 0x97b0 <I2C_0_GetData+0xee>
		{
			if(i2c_0_WaitR() == I2C_READY)
    9764:	0e 94 b8 4a 	call	0x9570	; 0x9570 <_ZL11i2c_0_WaitRv>
    9768:	98 2f       	mov	r25, r24
    976a:	81 e0       	ldi	r24, 0x01	; 1
    976c:	93 30       	cpi	r25, 0x03	; 3
    976e:	09 f0       	breq	.+2      	; 0x9772 <I2C_0_GetData+0xb0>
    9770:	80 e0       	ldi	r24, 0x00	; 0
    9772:	88 23       	and	r24, r24
    9774:	e1 f0       	breq	.+56     	; 0x97ae <I2C_0_GetData+0xec>
			{
				*pData = TWI0.MDATA;
    9776:	80 e0       	ldi	r24, 0x00	; 0
    9778:	99 e0       	ldi	r25, 0x09	; 9
    977a:	fc 01       	movw	r30, r24
    977c:	20 85       	ldd	r18, Z+8	; 0x08
    977e:	8c 81       	ldd	r24, Y+4	; 0x04
    9780:	9d 81       	ldd	r25, Y+5	; 0x05
    9782:	fc 01       	movw	r30, r24
    9784:	20 83       	st	Z, r18
				TWI0.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    9786:	80 e0       	ldi	r24, 0x00	; 0
    9788:	99 e0       	ldi	r25, 0x09	; 9
    978a:	2e 81       	ldd	r18, Y+6	; 0x06
    978c:	22 23       	and	r18, r18
    978e:	11 f4       	brne	.+4      	; 0x9794 <I2C_0_GetData+0xd2>
    9790:	27 e0       	ldi	r18, 0x07	; 7
    9792:	01 c0       	rjmp	.+2      	; 0x9796 <I2C_0_GetData+0xd4>
    9794:	22 e0       	ldi	r18, 0x02	; 2
    9796:	fc 01       	movw	r30, r24
    9798:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    979a:	89 81       	ldd	r24, Y+1	; 0x01
    979c:	8f 5f       	subi	r24, 0xFF	; 255
    979e:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    97a0:	8c 81       	ldd	r24, Y+4	; 0x04
    97a2:	9d 81       	ldd	r25, Y+5	; 0x05
    97a4:	01 96       	adiw	r24, 0x01	; 1
    97a6:	8c 83       	std	Y+4, r24	; 0x04
    97a8:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    97aa:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    97ac:	d1 cf       	rjmp	.-94     	; 0x9750 <I2C_0_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    97ae:	00 00       	nop
		}
	}
	
	return retVal;
    97b0:	89 81       	ldd	r24, Y+1	; 0x01
}
    97b2:	26 96       	adiw	r28, 0x06	; 6
    97b4:	cd bf       	out	0x3d, r28	; 61
    97b6:	de bf       	out	0x3e, r29	; 62
    97b8:	df 91       	pop	r29
    97ba:	cf 91       	pop	r28
    97bc:	08 95       	ret

000097be <I2C_0_EndSession>:

void I2C_0_EndSession(void)
{
    97be:	cf 93       	push	r28
    97c0:	df 93       	push	r29
    97c2:	cd b7       	in	r28, 0x3d	; 61
    97c4:	de b7       	in	r29, 0x3e	; 62
	TWI0.MCTRLB = TWI_MCMD_STOP_gc;
    97c6:	80 e0       	ldi	r24, 0x00	; 0
    97c8:	99 e0       	ldi	r25, 0x09	; 9
    97ca:	23 e0       	ldi	r18, 0x03	; 3
    97cc:	fc 01       	movw	r30, r24
    97ce:	24 83       	std	Z+4, r18	; 0x04
}
    97d0:	00 00       	nop
    97d2:	df 91       	pop	r29
    97d4:	cf 91       	pop	r28
    97d6:	08 95       	ret

000097d8 <I2C_1_Init>:
/* I2C_1                                                               */
/************************************************************************/


void I2C_1_Init(void)
{
    97d8:	cf 93       	push	r28
    97da:	df 93       	push	r29
    97dc:	cd b7       	in	r28, 0x3d	; 61
    97de:	de b7       	in	r29, 0x3e	; 62
	/* Select I2C pins PB2/PB3 */
	PORTMUX.TWIROUTEA &= 0x03;
    97e0:	80 ee       	ldi	r24, 0xE0	; 224
    97e2:	95 e0       	ldi	r25, 0x05	; 5
    97e4:	20 ee       	ldi	r18, 0xE0	; 224
    97e6:	35 e0       	ldi	r19, 0x05	; 5
    97e8:	f9 01       	movw	r30, r18
    97ea:	25 81       	ldd	r18, Z+5	; 0x05
    97ec:	23 70       	andi	r18, 0x03	; 3
    97ee:	fc 01       	movw	r30, r24
    97f0:	25 83       	std	Z+5, r18	; 0x05
	PORTMUX.TWIROUTEA |= 0x08;
    97f2:	80 ee       	ldi	r24, 0xE0	; 224
    97f4:	95 e0       	ldi	r25, 0x05	; 5
    97f6:	20 ee       	ldi	r18, 0xE0	; 224
    97f8:	35 e0       	ldi	r19, 0x05	; 5
    97fa:	f9 01       	movw	r30, r18
    97fc:	25 81       	ldd	r18, Z+5	; 0x05
    97fe:	28 60       	ori	r18, 0x08	; 8
    9800:	fc 01       	movw	r30, r24
    9802:	25 83       	std	Z+5, r18	; 0x05
	
	/* Host Baud Rate Control */
//	TWI1.MBAUD = TWI1_BAUD((I2C_SCL_FREQ), 0.3);
	TWI1.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);
    9804:	80 e2       	ldi	r24, 0x20	; 32
    9806:	99 e0       	ldi	r25, 0x09	; 9
    9808:	23 e7       	ldi	r18, 0x73	; 115
    980a:	fc 01       	movw	r30, r24
    980c:	26 83       	std	Z+6, r18	; 0x06
		
	/* Enable TWI */
	TWI1.MCTRLA = TWI_ENABLE_bm;
    980e:	80 e2       	ldi	r24, 0x20	; 32
    9810:	99 e0       	ldi	r25, 0x09	; 9
    9812:	21 e0       	ldi	r18, 0x01	; 1
    9814:	fc 01       	movw	r30, r24
    9816:	23 83       	std	Z+3, r18	; 0x03
	
	/* Initialize the address register */
	TWI1.MADDR = 0x00;
    9818:	80 e2       	ldi	r24, 0x20	; 32
    981a:	99 e0       	ldi	r25, 0x09	; 9
    981c:	fc 01       	movw	r30, r24
    981e:	17 82       	std	Z+7, r1	; 0x07
	
	/* Initialize the data register */
	TWI1.MDATA = 0x00;
    9820:	80 e2       	ldi	r24, 0x20	; 32
    9822:	99 e0       	ldi	r25, 0x09	; 9
    9824:	fc 01       	movw	r30, r24
    9826:	10 86       	std	Z+8, r1	; 0x08
	
	/* Set bus state idle */
	TWI1.MSTATUS = TWI_BUSSTATE_IDLE_gc;
    9828:	80 e2       	ldi	r24, 0x20	; 32
    982a:	99 e0       	ldi	r25, 0x09	; 9
    982c:	21 e0       	ldi	r18, 0x01	; 1
    982e:	fc 01       	movw	r30, r24
    9830:	25 83       	std	Z+5, r18	; 0x05
	
	PORTB_set_pin_pull_mode(2, PORT_PULL_UP);
    9832:	61 e0       	ldi	r22, 0x01	; 1
    9834:	82 e0       	ldi	r24, 0x02	; 2
    9836:	0e 94 bf 49 	call	0x937e	; 0x937e <PORTB_set_pin_pull_mode>
	PORTB_set_pin_pull_mode(3, PORT_PULL_UP);
    983a:	61 e0       	ldi	r22, 0x01	; 1
    983c:	83 e0       	ldi	r24, 0x03	; 3
    983e:	0e 94 bf 49 	call	0x937e	; 0x937e <PORTB_set_pin_pull_mode>
}
    9842:	00 00       	nop
    9844:	df 91       	pop	r29
    9846:	cf 91       	pop	r28
    9848:	08 95       	ret

0000984a <_ZL11i2c_1_WaitWv>:

static uint8_t i2c_1_WaitW(void)
{
    984a:	cf 93       	push	r28
    984c:	df 93       	push	r29
    984e:	00 d0       	rcall	.+0      	; 0x9850 <_ZL11i2c_1_WaitWv+0x6>
    9850:	cd b7       	in	r28, 0x3d	; 61
    9852:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    9854:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c1_timeout_ticks = 200;
    9856:	88 ec       	ldi	r24, 0xC8	; 200
    9858:	90 e0       	ldi	r25, 0x00	; 0
    985a:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <g_i2c1_timeout_ticks>
    985e:	90 93 27 40 	sts	0x4027, r25	; 0x804027 <g_i2c1_timeout_ticks+0x1>
	
	do
	{
		uint8_t stat = TWI1.MSTATUS;
    9862:	80 e2       	ldi	r24, 0x20	; 32
    9864:	99 e0       	ldi	r25, 0x09	; 9
    9866:	fc 01       	movw	r30, r24
    9868:	85 81       	ldd	r24, Z+5	; 0x05
    986a:	8a 83       	std	Y+2, r24	; 0x02
		if(stat & (TWI_WIF_bm | TWI_RIF_bm))
    986c:	8a 81       	ldd	r24, Y+2	; 0x02
    986e:	88 2f       	mov	r24, r24
    9870:	90 e0       	ldi	r25, 0x00	; 0
    9872:	80 7c       	andi	r24, 0xC0	; 192
    9874:	99 27       	eor	r25, r25
    9876:	89 2b       	or	r24, r25
    9878:	69 f0       	breq	.+26     	; 0x9894 <_ZL11i2c_1_WaitWv+0x4a>
		{
			if(!(stat & TWI_RXACK_bm))
    987a:	8a 81       	ldd	r24, Y+2	; 0x02
    987c:	88 2f       	mov	r24, r24
    987e:	90 e0       	ldi	r25, 0x00	; 0
    9880:	80 71       	andi	r24, 0x10	; 16
    9882:	99 27       	eor	r25, r25
    9884:	89 2b       	or	r24, r25
    9886:	19 f4       	brne	.+6      	; 0x988e <_ZL11i2c_1_WaitWv+0x44>
			{
				/* client responded with ack - TWI goes to M1 state */
				state = I2C_ACKED;
    9888:	81 e0       	ldi	r24, 0x01	; 1
    988a:	89 83       	std	Y+1, r24	; 0x01
    988c:	0c c0       	rjmp	.+24     	; 0x98a6 <_ZL11i2c_1_WaitWv+0x5c>
			}
			else
			{
				/* address sent but no ack received - TWI goes to M3 state */
				state = I2C_NACKED;
    988e:	82 e0       	ldi	r24, 0x02	; 2
    9890:	89 83       	std	Y+1, r24	; 0x01
    9892:	09 c0       	rjmp	.+18     	; 0x98a6 <_ZL11i2c_1_WaitWv+0x5c>
			}
		}
		else if(stat & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    9894:	8a 81       	ldd	r24, Y+2	; 0x02
    9896:	88 2f       	mov	r24, r24
    9898:	90 e0       	ldi	r25, 0x00	; 0
    989a:	8c 70       	andi	r24, 0x0C	; 12
    989c:	99 27       	eor	r25, r25
    989e:	89 2b       	or	r24, r25
    98a0:	11 f0       	breq	.+4      	; 0x98a6 <_ZL11i2c_1_WaitWv+0x5c>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    98a2:	84 e0       	ldi	r24, 0x04	; 4
    98a4:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c1_timeout_ticks);
    98a6:	89 81       	ldd	r24, Y+1	; 0x01
    98a8:	88 23       	and	r24, r24
    98aa:	41 f4       	brne	.+16     	; 0x98bc <_ZL11i2c_1_WaitWv+0x72>
    98ac:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <g_i2c1_timeout_ticks>
    98b0:	90 91 27 40 	lds	r25, 0x4027	; 0x804027 <g_i2c1_timeout_ticks+0x1>
    98b4:	89 2b       	or	r24, r25
    98b6:	11 f0       	breq	.+4      	; 0x98bc <_ZL11i2c_1_WaitWv+0x72>
    98b8:	81 e0       	ldi	r24, 0x01	; 1
    98ba:	01 c0       	rjmp	.+2      	; 0x98be <_ZL11i2c_1_WaitWv+0x74>
    98bc:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c1_timeout_ticks = 200;
	
	do
    98be:	88 23       	and	r24, r24
    98c0:	09 f0       	breq	.+2      	; 0x98c4 <_ZL11i2c_1_WaitWv+0x7a>
    98c2:	cf cf       	rjmp	.-98     	; 0x9862 <_ZL11i2c_1_WaitWv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c1_timeout_ticks);
	
	return state;
    98c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    98c6:	0f 90       	pop	r0
    98c8:	0f 90       	pop	r0
    98ca:	df 91       	pop	r29
    98cc:	cf 91       	pop	r28
    98ce:	08 95       	ret

000098d0 <_ZL11I2C_1_WaitRv>:

static uint8_t I2C_1_WaitR(void)
{
    98d0:	cf 93       	push	r28
    98d2:	df 93       	push	r29
    98d4:	1f 92       	push	r1
    98d6:	cd b7       	in	r28, 0x3d	; 61
    98d8:	de b7       	in	r29, 0x3e	; 62
	uint8_t state = I2C_INIT;
    98da:	19 82       	std	Y+1, r1	; 0x01
	
	g_i2c0_timeout_ticks = 200;
    98dc:	88 ec       	ldi	r24, 0xC8	; 200
    98de:	90 e0       	ldi	r25, 0x00	; 0
    98e0:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <g_i2c0_timeout_ticks>
    98e4:	90 93 25 40 	sts	0x4025, r25	; 0x804025 <g_i2c0_timeout_ticks+0x1>
	
	do
	{
		if(TWI1.MSTATUS & (TWI_WIF_bm | TWI_RIF_bm))
    98e8:	80 e2       	ldi	r24, 0x20	; 32
    98ea:	99 e0       	ldi	r25, 0x09	; 9
    98ec:	fc 01       	movw	r30, r24
    98ee:	85 81       	ldd	r24, Z+5	; 0x05
    98f0:	88 2f       	mov	r24, r24
    98f2:	90 e0       	ldi	r25, 0x00	; 0
    98f4:	80 7c       	andi	r24, 0xC0	; 192
    98f6:	99 27       	eor	r25, r25
    98f8:	21 e0       	ldi	r18, 0x01	; 1
    98fa:	89 2b       	or	r24, r25
    98fc:	09 f4       	brne	.+2      	; 0x9900 <_ZL11I2C_1_WaitRv+0x30>
    98fe:	20 e0       	ldi	r18, 0x00	; 0
    9900:	22 23       	and	r18, r18
    9902:	19 f0       	breq	.+6      	; 0x990a <_ZL11I2C_1_WaitRv+0x3a>
		{
			state = I2C_READY;
    9904:	83 e0       	ldi	r24, 0x03	; 3
    9906:	89 83       	std	Y+1, r24	; 0x01
    9908:	10 c0       	rjmp	.+32     	; 0x992a <_ZL11I2C_1_WaitRv+0x5a>
		}
		else if(TWI1.MSTATUS & (TWI_BUSERR_bm | TWI_ARBLOST_bm))
    990a:	80 e2       	ldi	r24, 0x20	; 32
    990c:	99 e0       	ldi	r25, 0x09	; 9
    990e:	fc 01       	movw	r30, r24
    9910:	85 81       	ldd	r24, Z+5	; 0x05
    9912:	88 2f       	mov	r24, r24
    9914:	90 e0       	ldi	r25, 0x00	; 0
    9916:	8c 70       	andi	r24, 0x0C	; 12
    9918:	99 27       	eor	r25, r25
    991a:	21 e0       	ldi	r18, 0x01	; 1
    991c:	89 2b       	or	r24, r25
    991e:	09 f4       	brne	.+2      	; 0x9922 <_ZL11I2C_1_WaitRv+0x52>
    9920:	20 e0       	ldi	r18, 0x00	; 0
    9922:	22 23       	and	r18, r18
    9924:	11 f0       	breq	.+4      	; 0x992a <_ZL11I2C_1_WaitRv+0x5a>
		{
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
    9926:	84 e0       	ldi	r24, 0x04	; 4
    9928:	89 83       	std	Y+1, r24	; 0x01
		}
	} while(!state && g_i2c0_timeout_ticks);
    992a:	89 81       	ldd	r24, Y+1	; 0x01
    992c:	88 23       	and	r24, r24
    992e:	41 f4       	brne	.+16     	; 0x9940 <_ZL11I2C_1_WaitRv+0x70>
    9930:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <g_i2c0_timeout_ticks>
    9934:	90 91 25 40 	lds	r25, 0x4025	; 0x804025 <g_i2c0_timeout_ticks+0x1>
    9938:	89 2b       	or	r24, r25
    993a:	11 f0       	breq	.+4      	; 0x9940 <_ZL11I2C_1_WaitRv+0x70>
    993c:	81 e0       	ldi	r24, 0x01	; 1
    993e:	01 c0       	rjmp	.+2      	; 0x9942 <_ZL11I2C_1_WaitRv+0x72>
    9940:	80 e0       	ldi	r24, 0x00	; 0
{
	uint8_t state = I2C_INIT;
	
	g_i2c0_timeout_ticks = 200;
	
	do
    9942:	88 23       	and	r24, r24
    9944:	09 f0       	breq	.+2      	; 0x9948 <_ZL11I2C_1_WaitRv+0x78>
    9946:	d0 cf       	rjmp	.-96     	; 0x98e8 <_ZL11I2C_1_WaitRv+0x18>
			/* get here only in case of bus error or arbitration lost - M4 state */
			state = I2C_ERROR;
		}
	} while(!state && g_i2c0_timeout_ticks);
	
	return state;
    9948:	89 81       	ldd	r24, Y+1	; 0x01
}
    994a:	0f 90       	pop	r0
    994c:	df 91       	pop	r29
    994e:	cf 91       	pop	r28
    9950:	08 95       	ret

00009952 <I2C_1_SendData>:

/* Returns how many bytes have been sent, -1 means NACK at address, 0 means client ACKed to client address */
uint8_t I2C_1_SendData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9952:	cf 93       	push	r28
    9954:	df 93       	push	r29
    9956:	cd b7       	in	r28, 0x3d	; 61
    9958:	de b7       	in	r29, 0x3e	; 62
    995a:	26 97       	sbiw	r28, 0x06	; 6
    995c:	cd bf       	out	0x3d, r28	; 61
    995e:	de bf       	out	0x3e, r29	; 62
    9960:	8a 83       	std	Y+2, r24	; 0x02
    9962:	6b 83       	std	Y+3, r22	; 0x03
    9964:	4c 83       	std	Y+4, r20	; 0x04
    9966:	5d 83       	std	Y+5, r21	; 0x05
    9968:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) - 1;
    996a:	8f ef       	ldi	r24, 0xFF	; 255
    996c:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the slave address */
	TWI1.MADDR = slaveAddr & ~0x01;
    996e:	80 e2       	ldi	r24, 0x20	; 32
    9970:	99 e0       	ldi	r25, 0x09	; 9
    9972:	2a 81       	ldd	r18, Y+2	; 0x02
    9974:	2e 7f       	andi	r18, 0xFE	; 254
    9976:	fc 01       	movw	r30, r24
    9978:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    997a:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZL11i2c_1_WaitWv>
    997e:	98 2f       	mov	r25, r24
    9980:	81 e0       	ldi	r24, 0x01	; 1
    9982:	91 30       	cpi	r25, 0x01	; 1
    9984:	09 f4       	brne	.+2      	; 0x9988 <I2C_1_SendData+0x36>
    9986:	80 e0       	ldi	r24, 0x00	; 0
    9988:	88 23       	and	r24, r24
    998a:	11 f0       	breq	.+4      	; 0x9990 <I2C_1_SendData+0x3e>
	{
		return retVal;
    998c:	89 81       	ldd	r24, Y+1	; 0x01
    998e:	44 c0       	rjmp	.+136    	; 0x9a18 <I2C_1_SendData+0xc6>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    9990:	80 e2       	ldi	r24, 0x20	; 32
    9992:	99 e0       	ldi	r25, 0x09	; 9
    9994:	2b 81       	ldd	r18, Y+3	; 0x03
    9996:	fc 01       	movw	r30, r24
    9998:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    999a:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZL11i2c_1_WaitWv>
    999e:	98 2f       	mov	r25, r24
    99a0:	81 e0       	ldi	r24, 0x01	; 1
    99a2:	91 30       	cpi	r25, 0x01	; 1
    99a4:	09 f4       	brne	.+2      	; 0x99a8 <I2C_1_SendData+0x56>
    99a6:	80 e0       	ldi	r24, 0x00	; 0
    99a8:	88 23       	and	r24, r24
    99aa:	11 f0       	breq	.+4      	; 0x99b0 <I2C_1_SendData+0x5e>
	{
		return retVal;
    99ac:	89 81       	ldd	r24, Y+1	; 0x01
    99ae:	34 c0       	rjmp	.+104    	; 0x9a18 <I2C_1_SendData+0xc6>
	}	

	retVal = 0;
    99b0:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData != null))
    99b2:	8e 81       	ldd	r24, Y+6	; 0x06
    99b4:	88 23       	and	r24, r24
    99b6:	79 f1       	breq	.+94     	; 0x9a16 <I2C_1_SendData+0xc4>
    99b8:	8c 81       	ldd	r24, Y+4	; 0x04
    99ba:	9d 81       	ldd	r25, Y+5	; 0x05
    99bc:	89 2b       	or	r24, r25
    99be:	59 f1       	breq	.+86     	; 0x9a16 <I2C_1_SendData+0xc4>
	{
		while(len--)
    99c0:	8e 81       	ldd	r24, Y+6	; 0x06
    99c2:	9f ef       	ldi	r25, 0xFF	; 255
    99c4:	98 0f       	add	r25, r24
    99c6:	9e 83       	std	Y+6, r25	; 0x06
    99c8:	91 e0       	ldi	r25, 0x01	; 1
    99ca:	88 23       	and	r24, r24
    99cc:	09 f4       	brne	.+2      	; 0x99d0 <I2C_1_SendData+0x7e>
    99ce:	90 e0       	ldi	r25, 0x00	; 0
    99d0:	99 23       	and	r25, r25
    99d2:	09 f1       	breq	.+66     	; 0x9a16 <I2C_1_SendData+0xc4>
		{
			TWI1.MDATA = *pData;
    99d4:	80 e2       	ldi	r24, 0x20	; 32
    99d6:	99 e0       	ldi	r25, 0x09	; 9
    99d8:	2c 81       	ldd	r18, Y+4	; 0x04
    99da:	3d 81       	ldd	r19, Y+5	; 0x05
    99dc:	f9 01       	movw	r30, r18
    99de:	20 81       	ld	r18, Z
    99e0:	fc 01       	movw	r30, r24
    99e2:	20 87       	std	Z+8, r18	; 0x08
			if(i2c_1_WaitW() == I2C_ACKED)
    99e4:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZL11i2c_1_WaitWv>
    99e8:	98 2f       	mov	r25, r24
    99ea:	81 e0       	ldi	r24, 0x01	; 1
    99ec:	91 30       	cpi	r25, 0x01	; 1
    99ee:	09 f0       	breq	.+2      	; 0x99f2 <I2C_1_SendData+0xa0>
    99f0:	80 e0       	ldi	r24, 0x00	; 0
    99f2:	88 23       	and	r24, r24
    99f4:	79 f0       	breq	.+30     	; 0x9a14 <I2C_1_SendData+0xc2>
			{
				retVal++;
    99f6:	89 81       	ldd	r24, Y+1	; 0x01
    99f8:	8f 5f       	subi	r24, 0xFF	; 255
    99fa:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    99fc:	8c 81       	ldd	r24, Y+4	; 0x04
    99fe:	9d 81       	ldd	r25, Y+5	; 0x05
    9a00:	01 96       	adiw	r24, 0x01	; 1
    9a02:	8c 83       	std	Y+4, r24	; 0x04
    9a04:	9d 83       	std	Y+5, r25	; 0x05
				if(!len) I2C_1_EndSession();
    9a06:	8e 81       	ldd	r24, Y+6	; 0x06
    9a08:	88 23       	and	r24, r24
    9a0a:	11 f4       	brne	.+4      	; 0x9a10 <I2C_1_SendData+0xbe>
    9a0c:	0e 94 90 4d 	call	0x9b20	; 0x9b20 <I2C_1_EndSession>
				continue;
    9a10:	00 00       	nop
	}	

	retVal = 0;
	if((len != 0) && (pData != null))
	{
		while(len--)
    9a12:	d6 cf       	rjmp	.-84     	; 0x99c0 <I2C_1_SendData+0x6e>
				if(!len) I2C_1_EndSession();
				continue;
			}
			else // did not get ACK after client address
			{
				break;
    9a14:	00 00       	nop
			}
		}
	}
	
	return retVal;
    9a16:	89 81       	ldd	r24, Y+1	; 0x01
}
    9a18:	26 96       	adiw	r28, 0x06	; 6
    9a1a:	cd bf       	out	0x3d, r28	; 61
    9a1c:	de bf       	out	0x3e, r29	; 62
    9a1e:	df 91       	pop	r29
    9a20:	cf 91       	pop	r28
    9a22:	08 95       	ret

00009a24 <I2C_1_GetData>:


/* Returns how many bytes have been received, -1 means NACK at address */
uint8_t I2C_1_GetData(uint8_t slaveAddr, uint8_t regAddr, uint8_t *pData, uint8_t len)
{
    9a24:	cf 93       	push	r28
    9a26:	df 93       	push	r29
    9a28:	cd b7       	in	r28, 0x3d	; 61
    9a2a:	de b7       	in	r29, 0x3e	; 62
    9a2c:	26 97       	sbiw	r28, 0x06	; 6
    9a2e:	cd bf       	out	0x3d, r28	; 61
    9a30:	de bf       	out	0x3e, r29	; 62
    9a32:	8a 83       	std	Y+2, r24	; 0x02
    9a34:	6b 83       	std	Y+3, r22	; 0x03
    9a36:	4c 83       	std	Y+4, r20	; 0x04
    9a38:	5d 83       	std	Y+5, r21	; 0x05
    9a3a:	2e 83       	std	Y+6, r18	; 0x06
	uint8_t retVal = (uint8_t) -1;
    9a3c:	8f ef       	ldi	r24, 0xFF	; 255
    9a3e:	89 83       	std	Y+1, r24	; 0x01
	
	/* Send the client address for write */
	TWI1.MADDR = slaveAddr;
    9a40:	80 e2       	ldi	r24, 0x20	; 32
    9a42:	99 e0       	ldi	r25, 0x09	; 9
    9a44:	2a 81       	ldd	r18, Y+2	; 0x02
    9a46:	fc 01       	movw	r30, r24
    9a48:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9a4a:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZL11i2c_1_WaitWv>
    9a4e:	98 2f       	mov	r25, r24
    9a50:	81 e0       	ldi	r24, 0x01	; 1
    9a52:	91 30       	cpi	r25, 0x01	; 1
    9a54:	09 f4       	brne	.+2      	; 0x9a58 <I2C_1_GetData+0x34>
    9a56:	80 e0       	ldi	r24, 0x00	; 0
    9a58:	88 23       	and	r24, r24
    9a5a:	11 f0       	breq	.+4      	; 0x9a60 <I2C_1_GetData+0x3c>
	{
		return retVal;
    9a5c:	89 81       	ldd	r24, Y+1	; 0x01
    9a5e:	5a c0       	rjmp	.+180    	; 0x9b14 <I2C_1_GetData+0xf0>
	}
	
	/* Send the register address */
	TWI1.MDATA = regAddr;	
    9a60:	80 e2       	ldi	r24, 0x20	; 32
    9a62:	99 e0       	ldi	r25, 0x09	; 9
    9a64:	2b 81       	ldd	r18, Y+3	; 0x03
    9a66:	fc 01       	movw	r30, r24
    9a68:	20 87       	std	Z+8, r18	; 0x08
	if(i2c_1_WaitW() != I2C_ACKED)
    9a6a:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZL11i2c_1_WaitWv>
    9a6e:	98 2f       	mov	r25, r24
    9a70:	81 e0       	ldi	r24, 0x01	; 1
    9a72:	91 30       	cpi	r25, 0x01	; 1
    9a74:	09 f4       	brne	.+2      	; 0x9a78 <I2C_1_GetData+0x54>
    9a76:	80 e0       	ldi	r24, 0x00	; 0
    9a78:	88 23       	and	r24, r24
    9a7a:	11 f0       	breq	.+4      	; 0x9a80 <I2C_1_GetData+0x5c>
	{
		return retVal;
    9a7c:	89 81       	ldd	r24, Y+1	; 0x01
    9a7e:	4a c0       	rjmp	.+148    	; 0x9b14 <I2C_1_GetData+0xf0>
	}
	
	/* Send the client address for read */
	TWI1.MADDR = slaveAddr | 0x01;
    9a80:	80 e2       	ldi	r24, 0x20	; 32
    9a82:	99 e0       	ldi	r25, 0x09	; 9
    9a84:	2a 81       	ldd	r18, Y+2	; 0x02
    9a86:	21 60       	ori	r18, 0x01	; 1
    9a88:	fc 01       	movw	r30, r24
    9a8a:	27 83       	std	Z+7, r18	; 0x07
	if(i2c_1_WaitW() != I2C_ACKED)
    9a8c:	0e 94 25 4c 	call	0x984a	; 0x984a <_ZL11i2c_1_WaitWv>
    9a90:	98 2f       	mov	r25, r24
    9a92:	81 e0       	ldi	r24, 0x01	; 1
    9a94:	91 30       	cpi	r25, 0x01	; 1
    9a96:	09 f4       	brne	.+2      	; 0x9a9a <I2C_1_GetData+0x76>
    9a98:	80 e0       	ldi	r24, 0x00	; 0
    9a9a:	88 23       	and	r24, r24
    9a9c:	11 f0       	breq	.+4      	; 0x9aa2 <I2C_1_GetData+0x7e>
	{
		return retVal;	
    9a9e:	89 81       	ldd	r24, Y+1	; 0x01
    9aa0:	39 c0       	rjmp	.+114    	; 0x9b14 <I2C_1_GetData+0xf0>
	}
	
	retVal = 0;
    9aa2:	19 82       	std	Y+1, r1	; 0x01
	if((len != 0) && (pData !=null ))
    9aa4:	8e 81       	ldd	r24, Y+6	; 0x06
    9aa6:	88 23       	and	r24, r24
    9aa8:	a1 f1       	breq	.+104    	; 0x9b12 <I2C_1_GetData+0xee>
    9aaa:	8c 81       	ldd	r24, Y+4	; 0x04
    9aac:	9d 81       	ldd	r25, Y+5	; 0x05
    9aae:	89 2b       	or	r24, r25
    9ab0:	81 f1       	breq	.+96     	; 0x9b12 <I2C_1_GetData+0xee>
	{
		while(len--)
    9ab2:	8e 81       	ldd	r24, Y+6	; 0x06
    9ab4:	9f ef       	ldi	r25, 0xFF	; 255
    9ab6:	98 0f       	add	r25, r24
    9ab8:	9e 83       	std	Y+6, r25	; 0x06
    9aba:	91 e0       	ldi	r25, 0x01	; 1
    9abc:	88 23       	and	r24, r24
    9abe:	09 f4       	brne	.+2      	; 0x9ac2 <I2C_1_GetData+0x9e>
    9ac0:	90 e0       	ldi	r25, 0x00	; 0
    9ac2:	99 23       	and	r25, r25
    9ac4:	31 f1       	breq	.+76     	; 0x9b12 <I2C_1_GetData+0xee>
		{
			if(I2C_1_WaitR() == I2C_READY)
    9ac6:	0e 94 68 4c 	call	0x98d0	; 0x98d0 <_ZL11I2C_1_WaitRv>
    9aca:	98 2f       	mov	r25, r24
    9acc:	81 e0       	ldi	r24, 0x01	; 1
    9ace:	93 30       	cpi	r25, 0x03	; 3
    9ad0:	09 f0       	breq	.+2      	; 0x9ad4 <I2C_1_GetData+0xb0>
    9ad2:	80 e0       	ldi	r24, 0x00	; 0
    9ad4:	88 23       	and	r24, r24
    9ad6:	e1 f0       	breq	.+56     	; 0x9b10 <I2C_1_GetData+0xec>
			{
				*pData = TWI1.MDATA;
    9ad8:	80 e2       	ldi	r24, 0x20	; 32
    9ada:	99 e0       	ldi	r25, 0x09	; 9
    9adc:	fc 01       	movw	r30, r24
    9ade:	20 85       	ldd	r18, Z+8	; 0x08
    9ae0:	8c 81       	ldd	r24, Y+4	; 0x04
    9ae2:	9d 81       	ldd	r25, Y+5	; 0x05
    9ae4:	fc 01       	movw	r30, r24
    9ae6:	20 83       	st	Z, r18
				TWI1.MCTRLB = (len == 0)? TWI_ACKACT_bm | TWI_MCMD_STOP_gc : TWI_MCMD_RECVTRANS_gc;
    9ae8:	80 e2       	ldi	r24, 0x20	; 32
    9aea:	99 e0       	ldi	r25, 0x09	; 9
    9aec:	2e 81       	ldd	r18, Y+6	; 0x06
    9aee:	22 23       	and	r18, r18
    9af0:	11 f4       	brne	.+4      	; 0x9af6 <I2C_1_GetData+0xd2>
    9af2:	27 e0       	ldi	r18, 0x07	; 7
    9af4:	01 c0       	rjmp	.+2      	; 0x9af8 <I2C_1_GetData+0xd4>
    9af6:	22 e0       	ldi	r18, 0x02	; 2
    9af8:	fc 01       	movw	r30, r24
    9afa:	24 83       	std	Z+4, r18	; 0x04
				retVal++;
    9afc:	89 81       	ldd	r24, Y+1	; 0x01
    9afe:	8f 5f       	subi	r24, 0xFF	; 255
    9b00:	89 83       	std	Y+1, r24	; 0x01
				pData++;
    9b02:	8c 81       	ldd	r24, Y+4	; 0x04
    9b04:	9d 81       	ldd	r25, Y+5	; 0x05
    9b06:	01 96       	adiw	r24, 0x01	; 1
    9b08:	8c 83       	std	Y+4, r24	; 0x04
    9b0a:	9d 83       	std	Y+5, r25	; 0x05
				continue;
    9b0c:	00 00       	nop
	}
	
	retVal = 0;
	if((len != 0) && (pData !=null ))
	{
		while(len--)
    9b0e:	d1 cf       	rjmp	.-94     	; 0x9ab2 <I2C_1_GetData+0x8e>
				retVal++;
				pData++;
				continue;
			}
			else
			break;
    9b10:	00 00       	nop
		}
	}
	
	return retVal;
    9b12:	89 81       	ldd	r24, Y+1	; 0x01
}
    9b14:	26 96       	adiw	r28, 0x06	; 6
    9b16:	cd bf       	out	0x3d, r28	; 61
    9b18:	de bf       	out	0x3e, r29	; 62
    9b1a:	df 91       	pop	r29
    9b1c:	cf 91       	pop	r28
    9b1e:	08 95       	ret

00009b20 <I2C_1_EndSession>:

void I2C_1_EndSession(void)
{
    9b20:	cf 93       	push	r28
    9b22:	df 93       	push	r29
    9b24:	cd b7       	in	r28, 0x3d	; 61
    9b26:	de b7       	in	r29, 0x3e	; 62
	TWI1.MCTRLB = TWI_MCMD_STOP_gc;
    9b28:	80 e2       	ldi	r24, 0x20	; 32
    9b2a:	99 e0       	ldi	r25, 0x09	; 9
    9b2c:	23 e0       	ldi	r18, 0x03	; 3
    9b2e:	fc 01       	movw	r30, r24
    9b30:	24 83       	std	Z+4, r18	; 0x04
}
    9b32:	00 00       	nop
    9b34:	df 91       	pop	r29
    9b36:	cf 91       	pop	r28
    9b38:	08 95       	ret

00009b3a <PORTC_set_pin_level>:
}

Blink_t leds::setting(void)
{
	return lastBlinkSetting;
}
    9b3a:	cf 93       	push	r28
    9b3c:	df 93       	push	r29
    9b3e:	00 d0       	rcall	.+0      	; 0x9b40 <PORTC_set_pin_level+0x6>
    9b40:	cd b7       	in	r28, 0x3d	; 61
    9b42:	de b7       	in	r29, 0x3e	; 62
    9b44:	89 83       	std	Y+1, r24	; 0x01
    9b46:	6a 83       	std	Y+2, r22	; 0x02
    9b48:	8a 81       	ldd	r24, Y+2	; 0x02
    9b4a:	88 23       	and	r24, r24
    9b4c:	a9 f0       	breq	.+42     	; 0x9b78 <PORTC_set_pin_level+0x3e>
    9b4e:	88 e0       	ldi	r24, 0x08	; 8
    9b50:	90 e0       	ldi	r25, 0x00	; 0
    9b52:	28 e0       	ldi	r18, 0x08	; 8
    9b54:	30 e0       	ldi	r19, 0x00	; 0
    9b56:	f9 01       	movw	r30, r18
    9b58:	21 81       	ldd	r18, Z+1	; 0x01
    9b5a:	62 2f       	mov	r22, r18
    9b5c:	29 81       	ldd	r18, Y+1	; 0x01
    9b5e:	42 2f       	mov	r20, r18
    9b60:	50 e0       	ldi	r21, 0x00	; 0
    9b62:	21 e0       	ldi	r18, 0x01	; 1
    9b64:	30 e0       	ldi	r19, 0x00	; 0
    9b66:	02 c0       	rjmp	.+4      	; 0x9b6c <PORTC_set_pin_level+0x32>
    9b68:	22 0f       	add	r18, r18
    9b6a:	33 1f       	adc	r19, r19
    9b6c:	4a 95       	dec	r20
    9b6e:	e2 f7       	brpl	.-8      	; 0x9b68 <PORTC_set_pin_level+0x2e>
    9b70:	26 2b       	or	r18, r22
    9b72:	fc 01       	movw	r30, r24
    9b74:	21 83       	std	Z+1, r18	; 0x01
    9b76:	15 c0       	rjmp	.+42     	; 0x9ba2 <PORTC_set_pin_level+0x68>
    9b78:	88 e0       	ldi	r24, 0x08	; 8
    9b7a:	90 e0       	ldi	r25, 0x00	; 0
    9b7c:	28 e0       	ldi	r18, 0x08	; 8
    9b7e:	30 e0       	ldi	r19, 0x00	; 0
    9b80:	f9 01       	movw	r30, r18
    9b82:	21 81       	ldd	r18, Z+1	; 0x01
    9b84:	62 2f       	mov	r22, r18
    9b86:	29 81       	ldd	r18, Y+1	; 0x01
    9b88:	42 2f       	mov	r20, r18
    9b8a:	50 e0       	ldi	r21, 0x00	; 0
    9b8c:	21 e0       	ldi	r18, 0x01	; 1
    9b8e:	30 e0       	ldi	r19, 0x00	; 0
    9b90:	02 c0       	rjmp	.+4      	; 0x9b96 <PORTC_set_pin_level+0x5c>
    9b92:	22 0f       	add	r18, r18
    9b94:	33 1f       	adc	r19, r19
    9b96:	4a 95       	dec	r20
    9b98:	e2 f7       	brpl	.-8      	; 0x9b92 <PORTC_set_pin_level+0x58>
    9b9a:	20 95       	com	r18
    9b9c:	26 23       	and	r18, r22
    9b9e:	fc 01       	movw	r30, r24
    9ba0:	21 83       	std	Z+1, r18	; 0x01
    9ba2:	00 00       	nop
    9ba4:	0f 90       	pop	r0
    9ba6:	0f 90       	pop	r0
    9ba8:	df 91       	pop	r29
    9baa:	cf 91       	pop	r28
    9bac:	08 95       	ret

00009bae <_ZL17LED_set_RED_levelb>:
    9bae:	cf 93       	push	r28
    9bb0:	df 93       	push	r29
    9bb2:	1f 92       	push	r1
    9bb4:	cd b7       	in	r28, 0x3d	; 61
    9bb6:	de b7       	in	r29, 0x3e	; 62
    9bb8:	89 83       	std	Y+1, r24	; 0x01
    9bba:	69 81       	ldd	r22, Y+1	; 0x01
    9bbc:	86 e0       	ldi	r24, 0x06	; 6
    9bbe:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <PORTC_set_pin_level>
    9bc2:	00 00       	nop
    9bc4:	0f 90       	pop	r0
    9bc6:	df 91       	pop	r29
    9bc8:	cf 91       	pop	r28
    9bca:	08 95       	ret

00009bcc <_ZL19LED_set_GREEN_levelb>:
    9bcc:	cf 93       	push	r28
    9bce:	df 93       	push	r29
    9bd0:	1f 92       	push	r1
    9bd2:	cd b7       	in	r28, 0x3d	; 61
    9bd4:	de b7       	in	r29, 0x3e	; 62
    9bd6:	89 83       	std	Y+1, r24	; 0x01
    9bd8:	69 81       	ldd	r22, Y+1	; 0x01
    9bda:	85 e0       	ldi	r24, 0x05	; 5
    9bdc:	0e 94 9d 4d 	call	0x9b3a	; 0x9b3a <PORTC_set_pin_level>
    9be0:	00 00       	nop
    9be2:	0f 90       	pop	r0
    9be4:	df 91       	pop	r29
    9be6:	cf 91       	pop	r28
    9be8:	08 95       	ret

00009bea <_ZN4ledsC1Ev>:
    9bea:	cf 93       	push	r28
    9bec:	df 93       	push	r29
    9bee:	00 d0       	rcall	.+0      	; 0x9bf0 <_ZN4ledsC1Ev+0x6>
    9bf0:	cd b7       	in	r28, 0x3d	; 61
    9bf2:	de b7       	in	r29, 0x3e	; 62
    9bf4:	89 83       	std	Y+1, r24	; 0x01
    9bf6:	9a 83       	std	Y+2, r25	; 0x02
    9bf8:	00 00       	nop
    9bfa:	0f 90       	pop	r0
    9bfc:	0f 90       	pop	r0
    9bfe:	df 91       	pop	r29
    9c00:	cf 91       	pop	r28
    9c02:	08 95       	ret

00009c04 <_ZN4ledsD1Ev>:
    9c04:	cf 93       	push	r28
    9c06:	df 93       	push	r29
    9c08:	00 d0       	rcall	.+0      	; 0x9c0a <_ZN4ledsD1Ev+0x6>
    9c0a:	cd b7       	in	r28, 0x3d	; 61
    9c0c:	de b7       	in	r29, 0x3e	; 62
    9c0e:	89 83       	std	Y+1, r24	; 0x01
    9c10:	9a 83       	std	Y+2, r25	; 0x02
    9c12:	00 00       	nop
    9c14:	0f 90       	pop	r0
    9c16:	0f 90       	pop	r0
    9c18:	df 91       	pop	r29
    9c1a:	cf 91       	pop	r28
    9c1c:	08 95       	ret

00009c1e <__vector_41>:
    9c1e:	1f 92       	push	r1
    9c20:	0f 92       	push	r0
    9c22:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9c26:	0f 92       	push	r0
    9c28:	11 24       	eor	r1, r1
    9c2a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    9c2e:	0f 92       	push	r0
    9c30:	2f 93       	push	r18
    9c32:	3f 93       	push	r19
    9c34:	4f 93       	push	r20
    9c36:	5f 93       	push	r21
    9c38:	6f 93       	push	r22
    9c3a:	7f 93       	push	r23
    9c3c:	8f 93       	push	r24
    9c3e:	9f 93       	push	r25
    9c40:	af 93       	push	r26
    9c42:	bf 93       	push	r27
    9c44:	ef 93       	push	r30
    9c46:	ff 93       	push	r31
    9c48:	cf 93       	push	r28
    9c4a:	df 93       	push	r29
    9c4c:	cd b7       	in	r28, 0x3d	; 61
    9c4e:	de b7       	in	r29, 0x3e	; 62
    9c50:	80 91 d4 47 	lds	r24, 0x47D4	; 0x8047d4 <_ZL17led_timeout_count>
    9c54:	90 91 d5 47 	lds	r25, 0x47D5	; 0x8047d5 <_ZL17led_timeout_count+0x1>
    9c58:	a0 91 d6 47 	lds	r26, 0x47D6	; 0x8047d6 <_ZL17led_timeout_count+0x2>
    9c5c:	b0 91 d7 47 	lds	r27, 0x47D7	; 0x8047d7 <_ZL17led_timeout_count+0x3>
    9c60:	21 e0       	ldi	r18, 0x01	; 1
    9c62:	89 2b       	or	r24, r25
    9c64:	8a 2b       	or	r24, r26
    9c66:	8b 2b       	or	r24, r27
    9c68:	09 f4       	brne	.+2      	; 0x9c6c <__vector_41+0x4e>
    9c6a:	20 e0       	ldi	r18, 0x00	; 0
    9c6c:	22 23       	and	r18, r18
    9c6e:	09 f4       	brne	.+2      	; 0x9c72 <__vector_41+0x54>
    9c70:	1b c1       	rjmp	.+566    	; 0x9ea8 <__vector_41+0x28a>
    9c72:	80 91 d4 47 	lds	r24, 0x47D4	; 0x8047d4 <_ZL17led_timeout_count>
    9c76:	90 91 d5 47 	lds	r25, 0x47D5	; 0x8047d5 <_ZL17led_timeout_count+0x1>
    9c7a:	a0 91 d6 47 	lds	r26, 0x47D6	; 0x8047d6 <_ZL17led_timeout_count+0x2>
    9c7e:	b0 91 d7 47 	lds	r27, 0x47D7	; 0x8047d7 <_ZL17led_timeout_count+0x3>
    9c82:	01 97       	sbiw	r24, 0x01	; 1
    9c84:	a1 09       	sbc	r26, r1
    9c86:	b1 09       	sbc	r27, r1
    9c88:	80 93 d4 47 	sts	0x47D4, r24	; 0x8047d4 <_ZL17led_timeout_count>
    9c8c:	90 93 d5 47 	sts	0x47D5, r25	; 0x8047d5 <_ZL17led_timeout_count+0x1>
    9c90:	a0 93 d6 47 	sts	0x47D6, r26	; 0x8047d6 <_ZL17led_timeout_count+0x2>
    9c94:	b0 93 d7 47 	sts	0x47D7, r27	; 0x8047d7 <_ZL17led_timeout_count+0x3>
    9c98:	80 e3       	ldi	r24, 0x30	; 48
    9c9a:	9b e0       	ldi	r25, 0x0B	; 11
    9c9c:	fc 01       	movw	r30, r24
    9c9e:	86 81       	ldd	r24, Z+6	; 0x06
    9ca0:	88 2f       	mov	r24, r24
    9ca2:	90 e0       	ldi	r25, 0x00	; 0
    9ca4:	81 70       	andi	r24, 0x01	; 1
    9ca6:	99 27       	eor	r25, r25
    9ca8:	21 e0       	ldi	r18, 0x01	; 1
    9caa:	89 2b       	or	r24, r25
    9cac:	09 f4       	brne	.+2      	; 0x9cb0 <__vector_41+0x92>
    9cae:	20 e0       	ldi	r18, 0x00	; 0
    9cb0:	22 23       	and	r18, r18
    9cb2:	09 f4       	brne	.+2      	; 0x9cb6 <__vector_41+0x98>
    9cb4:	0c c1       	rjmp	.+536    	; 0x9ece <__vector_41+0x2b0>
    9cb6:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9cba:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9cbe:	21 e0       	ldi	r18, 0x01	; 1
    9cc0:	89 2b       	or	r24, r25
    9cc2:	09 f4       	brne	.+2      	; 0x9cc6 <__vector_41+0xa8>
    9cc4:	20 e0       	ldi	r18, 0x00	; 0
    9cc6:	22 23       	and	r18, r18
    9cc8:	09 f4       	brne	.+2      	; 0x9ccc <__vector_41+0xae>
    9cca:	6a c0       	rjmp	.+212    	; 0x9da0 <__vector_41+0x182>
    9ccc:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9cd0:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9cd4:	21 e0       	ldi	r18, 0x01	; 1
    9cd6:	02 97       	sbiw	r24, 0x02	; 2
    9cd8:	0c f4       	brge	.+2      	; 0x9cdc <__vector_41+0xbe>
    9cda:	20 e0       	ldi	r18, 0x00	; 0
    9cdc:	22 23       	and	r18, r18
    9cde:	69 f0       	breq	.+26     	; 0x9cfa <__vector_41+0xdc>
    9ce0:	81 e0       	ldi	r24, 0x01	; 1
    9ce2:	0e 94 d7 4d 	call	0x9bae	; 0x9bae <_ZL17LED_set_RED_levelb>
    9ce6:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9cea:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9cee:	01 97       	sbiw	r24, 0x01	; 1
    9cf0:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    9cf4:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9cf8:	17 c0       	rjmp	.+46     	; 0x9d28 <__vector_41+0x10a>
    9cfa:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9cfe:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d02:	21 e0       	ldi	r18, 0x01	; 1
    9d04:	8f 3f       	cpi	r24, 0xFF	; 255
    9d06:	9f 4f       	sbci	r25, 0xFF	; 255
    9d08:	0c f0       	brlt	.+2      	; 0x9d0c <__vector_41+0xee>
    9d0a:	20 e0       	ldi	r18, 0x00	; 0
    9d0c:	22 23       	and	r18, r18
    9d0e:	61 f0       	breq	.+24     	; 0x9d28 <__vector_41+0x10a>
    9d10:	80 e0       	ldi	r24, 0x00	; 0
    9d12:	0e 94 d7 4d 	call	0x9bae	; 0x9bae <_ZL17LED_set_RED_levelb>
    9d16:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9d1a:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d1e:	01 96       	adiw	r24, 0x01	; 1
    9d20:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    9d24:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d28:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9d2c:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d30:	21 e0       	ldi	r18, 0x01	; 1
    9d32:	01 97       	sbiw	r24, 0x01	; 1
    9d34:	09 f0       	breq	.+2      	; 0x9d38 <__vector_41+0x11a>
    9d36:	20 e0       	ldi	r18, 0x00	; 0
    9d38:	22 23       	and	r18, r18
    9d3a:	f9 f0       	breq	.+62     	; 0x9d7a <__vector_41+0x15c>
    9d3c:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL20red_blink_off_period>
    9d40:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL20red_blink_off_period+0x1>
    9d44:	21 e0       	ldi	r18, 0x01	; 1
    9d46:	89 2b       	or	r24, r25
    9d48:	09 f4       	brne	.+2      	; 0x9d4c <__vector_41+0x12e>
    9d4a:	20 e0       	ldi	r18, 0x00	; 0
    9d4c:	22 23       	and	r18, r18
    9d4e:	61 f0       	breq	.+24     	; 0x9d68 <__vector_41+0x14a>
    9d50:	80 91 da 47 	lds	r24, 0x47DA	; 0x8047da <_ZL20red_blink_off_period>
    9d54:	90 91 db 47 	lds	r25, 0x47DB	; 0x8047db <_ZL20red_blink_off_period+0x1>
    9d58:	91 95       	neg	r25
    9d5a:	81 95       	neg	r24
    9d5c:	91 09       	sbc	r25, r1
    9d5e:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    9d62:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d66:	23 c0       	rjmp	.+70     	; 0x9dae <__vector_41+0x190>
    9d68:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    9d6c:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    9d70:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    9d74:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d78:	1a c0       	rjmp	.+52     	; 0x9dae <__vector_41+0x190>
    9d7a:	80 91 e0 47 	lds	r24, 0x47E0	; 0x8047e0 <_ZL15red_blink_count>
    9d7e:	90 91 e1 47 	lds	r25, 0x47E1	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d82:	21 e0       	ldi	r18, 0x01	; 1
    9d84:	01 96       	adiw	r24, 0x01	; 1
    9d86:	09 f0       	breq	.+2      	; 0x9d8a <__vector_41+0x16c>
    9d88:	20 e0       	ldi	r18, 0x00	; 0
    9d8a:	22 23       	and	r18, r18
    9d8c:	81 f0       	breq	.+32     	; 0x9dae <__vector_41+0x190>
    9d8e:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    9d92:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    9d96:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    9d9a:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
    9d9e:	07 c0       	rjmp	.+14     	; 0x9dae <__vector_41+0x190>
    9da0:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL18red_led_configured>
    9da4:	88 23       	and	r24, r24
    9da6:	19 f0       	breq	.+6      	; 0x9dae <__vector_41+0x190>
    9da8:	80 e0       	ldi	r24, 0x00	; 0
    9daa:	0e 94 d7 4d 	call	0x9bae	; 0x9bae <_ZL17LED_set_RED_levelb>
    9dae:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9db2:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9db6:	21 e0       	ldi	r18, 0x01	; 1
    9db8:	89 2b       	or	r24, r25
    9dba:	09 f4       	brne	.+2      	; 0x9dbe <__vector_41+0x1a0>
    9dbc:	20 e0       	ldi	r18, 0x00	; 0
    9dbe:	22 23       	and	r18, r18
    9dc0:	09 f4       	brne	.+2      	; 0x9dc4 <__vector_41+0x1a6>
    9dc2:	6a c0       	rjmp	.+212    	; 0x9e98 <__vector_41+0x27a>
    9dc4:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9dc8:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9dcc:	21 e0       	ldi	r18, 0x01	; 1
    9dce:	02 97       	sbiw	r24, 0x02	; 2
    9dd0:	0c f4       	brge	.+2      	; 0x9dd4 <__vector_41+0x1b6>
    9dd2:	20 e0       	ldi	r18, 0x00	; 0
    9dd4:	22 23       	and	r18, r18
    9dd6:	69 f0       	breq	.+26     	; 0x9df2 <__vector_41+0x1d4>
    9dd8:	81 e0       	ldi	r24, 0x01	; 1
    9dda:	0e 94 e6 4d 	call	0x9bcc	; 0x9bcc <_ZL19LED_set_GREEN_levelb>
    9dde:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9de2:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9de6:	01 97       	sbiw	r24, 0x01	; 1
    9de8:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    9dec:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9df0:	17 c0       	rjmp	.+46     	; 0x9e20 <__vector_41+0x202>
    9df2:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9df6:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9dfa:	21 e0       	ldi	r18, 0x01	; 1
    9dfc:	8f 3f       	cpi	r24, 0xFF	; 255
    9dfe:	9f 4f       	sbci	r25, 0xFF	; 255
    9e00:	0c f0       	brlt	.+2      	; 0x9e04 <__vector_41+0x1e6>
    9e02:	20 e0       	ldi	r18, 0x00	; 0
    9e04:	22 23       	and	r18, r18
    9e06:	61 f0       	breq	.+24     	; 0x9e20 <__vector_41+0x202>
    9e08:	80 e0       	ldi	r24, 0x00	; 0
    9e0a:	0e 94 e6 4d 	call	0x9bcc	; 0x9bcc <_ZL19LED_set_GREEN_levelb>
    9e0e:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9e12:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e16:	01 96       	adiw	r24, 0x01	; 1
    9e18:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    9e1c:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e20:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9e24:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e28:	21 e0       	ldi	r18, 0x01	; 1
    9e2a:	01 97       	sbiw	r24, 0x01	; 1
    9e2c:	09 f0       	breq	.+2      	; 0x9e30 <__vector_41+0x212>
    9e2e:	20 e0       	ldi	r18, 0x00	; 0
    9e30:	22 23       	and	r18, r18
    9e32:	f9 f0       	breq	.+62     	; 0x9e72 <__vector_41+0x254>
    9e34:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL22green_blink_off_period>
    9e38:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL22green_blink_off_period+0x1>
    9e3c:	21 e0       	ldi	r18, 0x01	; 1
    9e3e:	89 2b       	or	r24, r25
    9e40:	09 f4       	brne	.+2      	; 0x9e44 <__vector_41+0x226>
    9e42:	20 e0       	ldi	r18, 0x00	; 0
    9e44:	22 23       	and	r18, r18
    9e46:	61 f0       	breq	.+24     	; 0x9e60 <__vector_41+0x242>
    9e48:	80 91 de 47 	lds	r24, 0x47DE	; 0x8047de <_ZL22green_blink_off_period>
    9e4c:	90 91 df 47 	lds	r25, 0x47DF	; 0x8047df <_ZL22green_blink_off_period+0x1>
    9e50:	91 95       	neg	r25
    9e52:	81 95       	neg	r24
    9e54:	91 09       	sbc	r25, r1
    9e56:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    9e5a:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e5e:	37 c0       	rjmp	.+110    	; 0x9ece <__vector_41+0x2b0>
    9e60:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    9e64:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    9e68:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    9e6c:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e70:	2e c0       	rjmp	.+92     	; 0x9ece <__vector_41+0x2b0>
    9e72:	80 91 e2 47 	lds	r24, 0x47E2	; 0x8047e2 <_ZL17green_blink_count>
    9e76:	90 91 e3 47 	lds	r25, 0x47E3	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e7a:	21 e0       	ldi	r18, 0x01	; 1
    9e7c:	01 96       	adiw	r24, 0x01	; 1
    9e7e:	09 f0       	breq	.+2      	; 0x9e82 <__vector_41+0x264>
    9e80:	20 e0       	ldi	r18, 0x00	; 0
    9e82:	22 23       	and	r18, r18
    9e84:	21 f1       	breq	.+72     	; 0x9ece <__vector_41+0x2b0>
    9e86:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    9e8a:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    9e8e:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    9e92:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
    9e96:	1b c0       	rjmp	.+54     	; 0x9ece <__vector_41+0x2b0>
    9e98:	80 91 e5 47 	lds	r24, 0x47E5	; 0x8047e5 <_ZL20green_led_configured>
    9e9c:	88 23       	and	r24, r24
    9e9e:	b9 f0       	breq	.+46     	; 0x9ece <__vector_41+0x2b0>
    9ea0:	80 e0       	ldi	r24, 0x00	; 0
    9ea2:	0e 94 e6 4d 	call	0x9bcc	; 0x9bcc <_ZL19LED_set_GREEN_levelb>
    9ea6:	13 c0       	rjmp	.+38     	; 0x9ece <__vector_41+0x2b0>
    9ea8:	80 e3       	ldi	r24, 0x30	; 48
    9eaa:	9b e0       	ldi	r25, 0x0B	; 11
    9eac:	20 e3       	ldi	r18, 0x30	; 48
    9eae:	3b e0       	ldi	r19, 0x0B	; 11
    9eb0:	f9 01       	movw	r30, r18
    9eb2:	25 81       	ldd	r18, Z+5	; 0x05
    9eb4:	2e 7f       	andi	r18, 0xFE	; 254
    9eb6:	fc 01       	movw	r30, r24
    9eb8:	25 83       	std	Z+5, r18	; 0x05
    9eba:	80 e0       	ldi	r24, 0x00	; 0
    9ebc:	0e 94 d7 4d 	call	0x9bae	; 0x9bae <_ZL17LED_set_RED_levelb>
    9ec0:	80 e0       	ldi	r24, 0x00	; 0
    9ec2:	0e 94 e6 4d 	call	0x9bcc	; 0x9bcc <_ZL19LED_set_GREEN_levelb>
    9ec6:	10 92 e4 47 	sts	0x47E4, r1	; 0x8047e4 <_ZL18red_led_configured>
    9eca:	10 92 e5 47 	sts	0x47E5, r1	; 0x8047e5 <_ZL20green_led_configured>
    9ece:	80 e3       	ldi	r24, 0x30	; 48
    9ed0:	9b e0       	ldi	r25, 0x0B	; 11
    9ed2:	20 e3       	ldi	r18, 0x30	; 48
    9ed4:	3b e0       	ldi	r19, 0x0B	; 11
    9ed6:	f9 01       	movw	r30, r18
    9ed8:	26 81       	ldd	r18, Z+6	; 0x06
    9eda:	21 60       	ori	r18, 0x01	; 1
    9edc:	fc 01       	movw	r30, r24
    9ede:	26 83       	std	Z+6, r18	; 0x06
    9ee0:	00 00       	nop
    9ee2:	df 91       	pop	r29
    9ee4:	cf 91       	pop	r28
    9ee6:	ff 91       	pop	r31
    9ee8:	ef 91       	pop	r30
    9eea:	bf 91       	pop	r27
    9eec:	af 91       	pop	r26
    9eee:	9f 91       	pop	r25
    9ef0:	8f 91       	pop	r24
    9ef2:	7f 91       	pop	r23
    9ef4:	6f 91       	pop	r22
    9ef6:	5f 91       	pop	r21
    9ef8:	4f 91       	pop	r20
    9efa:	3f 91       	pop	r19
    9efc:	2f 91       	pop	r18
    9efe:	0f 90       	pop	r0
    9f00:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    9f04:	0f 90       	pop	r0
    9f06:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    9f0a:	0f 90       	pop	r0
    9f0c:	1f 90       	pop	r1
    9f0e:	18 95       	reti

00009f10 <_ZN4leds5blinkE7Blink_t>:


void leds::blink(Blink_t blinkMode)
{
    9f10:	cf 93       	push	r28
    9f12:	df 93       	push	r29
    9f14:	00 d0       	rcall	.+0      	; 0x9f16 <_ZN4leds5blinkE7Blink_t+0x6>
    9f16:	1f 92       	push	r1
    9f18:	cd b7       	in	r28, 0x3d	; 61
    9f1a:	de b7       	in	r29, 0x3e	; 62
    9f1c:	89 83       	std	Y+1, r24	; 0x01
    9f1e:	9a 83       	std	Y+2, r25	; 0x02
    9f20:	6b 83       	std	Y+3, r22	; 0x03
	led_timeout_count = LED_TIMEOUT;
    9f22:	80 e6       	ldi	r24, 0x60	; 96
    9f24:	9a ee       	ldi	r25, 0xEA	; 234
    9f26:	a0 e0       	ldi	r26, 0x00	; 0
    9f28:	b0 e0       	ldi	r27, 0x00	; 0
    9f2a:	80 93 d4 47 	sts	0x47D4, r24	; 0x8047d4 <_ZL17led_timeout_count>
    9f2e:	90 93 d5 47 	sts	0x47D5, r25	; 0x8047d5 <_ZL17led_timeout_count+0x1>
    9f32:	a0 93 d6 47 	sts	0x47D6, r26	; 0x8047d6 <_ZL17led_timeout_count+0x2>
    9f36:	b0 93 d7 47 	sts	0x47D7, r27	; 0x8047d7 <_ZL17led_timeout_count+0x3>
	
	if(blinkMode != lastBlinkSetting)
    9f3a:	90 91 d3 47 	lds	r25, 0x47D3	; 0x8047d3 <_ZL16lastBlinkSetting>
    9f3e:	81 e0       	ldi	r24, 0x01	; 1
    9f40:	2b 81       	ldd	r18, Y+3	; 0x03
    9f42:	29 17       	cp	r18, r25
    9f44:	09 f4       	brne	.+2      	; 0x9f48 <_ZN4leds5blinkE7Blink_t+0x38>
    9f46:	80 e0       	ldi	r24, 0x00	; 0
    9f48:	88 23       	and	r24, r24
    9f4a:	09 f4       	brne	.+2      	; 0x9f4e <_ZN4leds5blinkE7Blink_t+0x3e>
    9f4c:	ab c1       	rjmp	.+854    	; 0xa2a4 <_ZN4leds5blinkE7Blink_t+0x394>
	{
		TCB3.INTCTRL &= ~TCB_CAPT_bm;   /* Capture or Timeout: disabled */
    9f4e:	80 e3       	ldi	r24, 0x30	; 48
    9f50:	9b e0       	ldi	r25, 0x0B	; 11
    9f52:	20 e3       	ldi	r18, 0x30	; 48
    9f54:	3b e0       	ldi	r19, 0x0B	; 11
    9f56:	f9 01       	movw	r30, r18
    9f58:	25 81       	ldd	r18, Z+5	; 0x05
    9f5a:	2e 7f       	andi	r18, 0xFE	; 254
    9f5c:	fc 01       	movw	r30, r24
    9f5e:	25 83       	std	Z+5, r18	; 0x05

		switch(blinkMode)
    9f60:	8b 81       	ldd	r24, Y+3	; 0x03
    9f62:	88 2f       	mov	r24, r24
    9f64:	90 e0       	ldi	r25, 0x00	; 0
    9f66:	09 2e       	mov	r0, r25
    9f68:	00 0c       	add	r0, r0
    9f6a:	aa 0b       	sbc	r26, r26
    9f6c:	bb 0b       	sbc	r27, r27
    9f6e:	40 e0       	ldi	r20, 0x00	; 0
    9f70:	50 e0       	ldi	r21, 0x00	; 0
    9f72:	2c e0       	ldi	r18, 0x0C	; 12
    9f74:	30 e0       	ldi	r19, 0x00	; 0
    9f76:	84 1b       	sub	r24, r20
    9f78:	95 0b       	sbc	r25, r21
    9f7a:	28 17       	cp	r18, r24
    9f7c:	39 07       	cpc	r19, r25
    9f7e:	08 f4       	brcc	.+2      	; 0x9f82 <_ZN4leds5blinkE7Blink_t+0x72>
    9f80:	7a c1       	rjmp	.+756    	; 0xa276 <_ZN4leds5blinkE7Blink_t+0x366>
    9f82:	87 54       	subi	r24, 0x47	; 71
    9f84:	9f 4f       	sbci	r25, 0xFF	; 255
    9f86:	fc 01       	movw	r30, r24
    9f88:	0c 94 f3 75 	jmp	0xebe6	; 0xebe6 <__tablejump2__>
		{
			case LEDS_OFF:
			{
				red_blink_count = 0;
    9f8c:	10 92 e0 47 	sts	0x47E0, r1	; 0x8047e0 <_ZL15red_blink_count>
    9f90:	10 92 e1 47 	sts	0x47E1, r1	; 0x8047e1 <_ZL15red_blink_count+0x1>
				green_blink_count = 0;
    9f94:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <_ZL17green_blink_count>
    9f98:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <_ZL17green_blink_count+0x1>
				LED_set_RED_level(OFF);
    9f9c:	80 e0       	ldi	r24, 0x00	; 0
    9f9e:	0e 94 d7 4d 	call	0x9bae	; 0x9bae <_ZL17LED_set_RED_levelb>
				LED_set_GREEN_level(OFF);
    9fa2:	80 e0       	ldi	r24, 0x00	; 0
    9fa4:	0e 94 e6 4d 	call	0x9bcc	; 0x9bcc <_ZL19LED_set_GREEN_levelb>
				red_led_configured = false;
    9fa8:	10 92 e4 47 	sts	0x47E4, r1	; 0x8047e4 <_ZL18red_led_configured>
				green_led_configured = false;
    9fac:	10 92 e5 47 	sts	0x47E5, r1	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    9fb0:	63 c1       	rjmp	.+710    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_OFF:
			{
				LED_set_RED_level(OFF);
    9fb2:	80 e0       	ldi	r24, 0x00	; 0
    9fb4:	0e 94 d7 4d 	call	0x9bae	; 0x9bae <_ZL17LED_set_RED_levelb>
				red_blink_count = 0;
    9fb8:	10 92 e0 47 	sts	0x47E0, r1	; 0x8047e0 <_ZL15red_blink_count>
    9fbc:	10 92 e1 47 	sts	0x47E1, r1	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = false;
    9fc0:	10 92 e4 47 	sts	0x47E4, r1	; 0x8047e4 <_ZL18red_led_configured>
			}
			break;
    9fc4:	59 c1       	rjmp	.+690    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_OFF:
			{
				LED_set_GREEN_level(OFF);
    9fc6:	80 e0       	ldi	r24, 0x00	; 0
    9fc8:	0e 94 e6 4d 	call	0x9bcc	; 0x9bcc <_ZL19LED_set_GREEN_levelb>
				green_blink_count = 0;
    9fcc:	10 92 e2 47 	sts	0x47E2, r1	; 0x8047e2 <_ZL17green_blink_count>
    9fd0:	10 92 e3 47 	sts	0x47E3, r1	; 0x8047e3 <_ZL17green_blink_count+0x1>
				green_led_configured = false;
    9fd4:	10 92 e5 47 	sts	0x47E5, r1	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    9fd8:	4f c1       	rjmp	.+670    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_FAST:
			{
				red_blink_on_period = BRIEF_ON;
    9fda:	89 e1       	ldi	r24, 0x19	; 25
    9fdc:	90 e0       	ldi	r25, 0x00	; 0
    9fde:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    9fe2:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = BRIEF_OFF;
    9fe6:	86 e9       	ldi	r24, 0x96	; 150
    9fe8:	90 e0       	ldi	r25, 0x00	; 0
    9fea:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL20red_blink_off_period>
    9fee:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;	
    9ff2:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    9ff6:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    9ffa:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    9ffe:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a002:	81 e0       	ldi	r24, 0x01	; 1
    a004:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
			}
			break;
    a008:	37 c1       	rjmp	.+622    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_FAST:
			{
				green_blink_on_period = BRIEF_ON;
    a00a:	89 e1       	ldi	r24, 0x19	; 25
    a00c:	90 e0       	ldi	r25, 0x00	; 0
    a00e:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a012:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = BRIEF_OFF;	
    a016:	86 e9       	ldi	r24, 0x96	; 150
    a018:	90 e0       	ldi	r25, 0x00	; 0
    a01a:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL22green_blink_off_period>
    a01e:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a022:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a026:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a02a:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a02e:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a032:	81 e0       	ldi	r24, 0x01	; 1
    a034:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a038:	1f c1       	rjmp	.+574    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_BLINK_SLOW:
			{
				red_blink_on_period = SLOW_ON;
    a03a:	84 ef       	ldi	r24, 0xF4	; 244
    a03c:	91 e0       	ldi	r25, 0x01	; 1
    a03e:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    a042:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a046:	84 ef       	ldi	r24, 0xF4	; 244
    a048:	91 e0       	ldi	r25, 0x01	; 1
    a04a:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL20red_blink_off_period>
    a04e:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a052:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    a056:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    a05a:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    a05e:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a062:	81 e0       	ldi	r24, 0x01	; 1
    a064:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
			}
			break;
    a068:	07 c1       	rjmp	.+526    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    a06a:	84 ef       	ldi	r24, 0xF4	; 244
    a06c:	91 e0       	ldi	r25, 0x01	; 1
    a06e:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a072:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    a076:	84 ef       	ldi	r24, 0xF4	; 244
    a078:	91 e0       	ldi	r25, 0x01	; 1
    a07a:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL22green_blink_off_period>
    a07e:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a082:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a086:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a08a:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a08e:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a092:	81 e0       	ldi	r24, 0x01	; 1
    a094:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a098:	ef c0       	rjmp	.+478    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    a09a:	84 ef       	ldi	r24, 0xF4	; 244
    a09c:	91 e0       	ldi	r25, 0x01	; 1
    a09e:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a0a2:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    a0a6:	84 ef       	ldi	r24, 0xF4	; 244
    a0a8:	91 e0       	ldi	r25, 0x01	; 1
    a0aa:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL22green_blink_off_period>
    a0ae:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    a0b2:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a0b6:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a0ba:	91 95       	neg	r25
    a0bc:	81 95       	neg	r24
    a0be:	91 09       	sbc	r25, r1
    a0c0:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a0c4:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    a0c8:	84 ef       	ldi	r24, 0xF4	; 244
    a0ca:	91 e0       	ldi	r25, 0x01	; 1
    a0cc:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    a0d0:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a0d4:	84 ef       	ldi	r24, 0xF4	; 244
    a0d6:	91 e0       	ldi	r25, 0x01	; 1
    a0d8:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL20red_blink_off_period>
    a0dc:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a0e0:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    a0e4:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    a0e8:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    a0ec:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a0f0:	81 e0       	ldi	r24, 0x01	; 1
    a0f2:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
				green_led_configured = true;			
    a0f6:	81 e0       	ldi	r24, 0x01	; 1
    a0f8:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a0fc:	bd c0       	rjmp	.+378    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_THEN_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    a0fe:	89 e1       	ldi	r24, 0x19	; 25
    a100:	90 e0       	ldi	r25, 0x00	; 0
    a102:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a106:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    a10a:	89 e1       	ldi	r24, 0x19	; 25
    a10c:	90 e0       	ldi	r25, 0x00	; 0
    a10e:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL22green_blink_off_period>
    a112:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = -green_blink_on_period;			
    a116:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a11a:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a11e:	91 95       	neg	r25
    a120:	81 95       	neg	r24
    a122:	91 09       	sbc	r25, r1
    a124:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a128:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    a12c:	89 e1       	ldi	r24, 0x19	; 25
    a12e:	90 e0       	ldi	r25, 0x00	; 0
    a130:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    a134:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    a138:	89 e1       	ldi	r24, 0x19	; 25
    a13a:	90 e0       	ldi	r25, 0x00	; 0
    a13c:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL20red_blink_off_period>
    a140:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a144:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    a148:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    a14c:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    a150:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a154:	81 e0       	ldi	r24, 0x01	; 1
    a156:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
				green_led_configured = true;			
    a15a:	81 e0       	ldi	r24, 0x01	; 1
    a15c:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a160:	8b c0       	rjmp	.+278    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_SLOW:
			{
				green_blink_on_period = SLOW_ON;
    a162:	84 ef       	ldi	r24, 0xF4	; 244
    a164:	91 e0       	ldi	r25, 0x01	; 1
    a166:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a16a:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = SLOW_OFF;	
    a16e:	84 ef       	ldi	r24, 0xF4	; 244
    a170:	91 e0       	ldi	r25, 0x01	; 1
    a172:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL22green_blink_off_period>
    a176:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a17a:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a17e:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a182:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a186:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = SLOW_ON;
    a18a:	84 ef       	ldi	r24, 0xF4	; 244
    a18c:	91 e0       	ldi	r25, 0x01	; 1
    a18e:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    a192:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = SLOW_OFF;
    a196:	84 ef       	ldi	r24, 0xF4	; 244
    a198:	91 e0       	ldi	r25, 0x01	; 1
    a19a:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL20red_blink_off_period>
    a19e:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a1a2:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    a1a6:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    a1aa:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    a1ae:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a1b2:	81 e0       	ldi	r24, 0x01	; 1
    a1b4:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
				green_led_configured = true;			
    a1b8:	81 e0       	ldi	r24, 0x01	; 1
    a1ba:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a1be:	5c c0       	rjmp	.+184    	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_AND_GREEN_BLINK_FAST:
			{
				green_blink_on_period = FAST_ON;
    a1c0:	89 e1       	ldi	r24, 0x19	; 25
    a1c2:	90 e0       	ldi	r25, 0x00	; 0
    a1c4:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a1c8:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = FAST_OFF;	
    a1cc:	89 e1       	ldi	r24, 0x19	; 25
    a1ce:	90 e0       	ldi	r25, 0x00	; 0
    a1d0:	80 93 de 47 	sts	0x47DE, r24	; 0x8047de <_ZL22green_blink_off_period>
    a1d4:	90 93 df 47 	sts	0x47DF, r25	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;			
    a1d8:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a1dc:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a1e0:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a1e4:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				red_blink_on_period = FAST_ON;
    a1e8:	89 e1       	ldi	r24, 0x19	; 25
    a1ea:	90 e0       	ldi	r25, 0x00	; 0
    a1ec:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    a1f0:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = FAST_OFF;
    a1f4:	89 e1       	ldi	r24, 0x19	; 25
    a1f6:	90 e0       	ldi	r25, 0x00	; 0
    a1f8:	80 93 da 47 	sts	0x47DA, r24	; 0x8047da <_ZL20red_blink_off_period>
    a1fc:	90 93 db 47 	sts	0x47DB, r25	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;				
    a200:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    a204:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    a208:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    a20c:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a210:	81 e0       	ldi	r24, 0x01	; 1
    a212:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
				green_led_configured = true;			
    a216:	81 e0       	ldi	r24, 0x01	; 1
    a218:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a21c:	2d c0       	rjmp	.+90     	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_RED_ON_CONSTANT:
			{
				red_blink_on_period = SLOW_ON;
    a21e:	84 ef       	ldi	r24, 0xF4	; 244
    a220:	91 e0       	ldi	r25, 0x01	; 1
    a222:	80 93 d8 47 	sts	0x47D8, r24	; 0x8047d8 <_ZL19red_blink_on_period>
    a226:	90 93 d9 47 	sts	0x47D9, r25	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
				red_blink_off_period = 0;
    a22a:	10 92 da 47 	sts	0x47DA, r1	; 0x8047da <_ZL20red_blink_off_period>
    a22e:	10 92 db 47 	sts	0x47DB, r1	; 0x8047db <_ZL20red_blink_off_period+0x1>
				red_blink_count = red_blink_on_period;
    a232:	80 91 d8 47 	lds	r24, 0x47D8	; 0x8047d8 <_ZL19red_blink_on_period>
    a236:	90 91 d9 47 	lds	r25, 0x47D9	; 0x8047d9 <_ZL19red_blink_on_period+0x1>
    a23a:	80 93 e0 47 	sts	0x47E0, r24	; 0x8047e0 <_ZL15red_blink_count>
    a23e:	90 93 e1 47 	sts	0x47E1, r25	; 0x8047e1 <_ZL15red_blink_count+0x1>
				red_led_configured = true;			
    a242:	81 e0       	ldi	r24, 0x01	; 1
    a244:	80 93 e4 47 	sts	0x47E4, r24	; 0x8047e4 <_ZL18red_led_configured>
			}
			break;
    a248:	17 c0       	rjmp	.+46     	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			case LEDS_GREEN_ON_CONSTANT:
			{
				green_blink_on_period = SLOW_ON;
    a24a:	84 ef       	ldi	r24, 0xF4	; 244
    a24c:	91 e0       	ldi	r25, 0x01	; 1
    a24e:	80 93 dc 47 	sts	0x47DC, r24	; 0x8047dc <_ZL21green_blink_on_period>
    a252:	90 93 dd 47 	sts	0x47DD, r25	; 0x8047dd <_ZL21green_blink_on_period+0x1>
				green_blink_off_period = 0;
    a256:	10 92 de 47 	sts	0x47DE, r1	; 0x8047de <_ZL22green_blink_off_period>
    a25a:	10 92 df 47 	sts	0x47DF, r1	; 0x8047df <_ZL22green_blink_off_period+0x1>
				green_blink_count = green_blink_on_period;
    a25e:	80 91 dc 47 	lds	r24, 0x47DC	; 0x8047dc <_ZL21green_blink_on_period>
    a262:	90 91 dd 47 	lds	r25, 0x47DD	; 0x8047dd <_ZL21green_blink_on_period+0x1>
    a266:	80 93 e2 47 	sts	0x47E2, r24	; 0x8047e2 <_ZL17green_blink_count>
    a26a:	90 93 e3 47 	sts	0x47E3, r25	; 0x8047e3 <_ZL17green_blink_count+0x1>
				green_led_configured = true;			
    a26e:	81 e0       	ldi	r24, 0x01	; 1
    a270:	80 93 e5 47 	sts	0x47E5, r24	; 0x8047e5 <_ZL20green_led_configured>
			}
			break;
    a274:	01 c0       	rjmp	.+2      	; 0xa278 <_ZN4leds5blinkE7Blink_t+0x368>
			
			default:
			{
				
			}
			break;
    a276:	00 00       	nop
		}
		
		if(red_led_configured || green_led_configured) 
    a278:	80 91 e4 47 	lds	r24, 0x47E4	; 0x8047e4 <_ZL18red_led_configured>
    a27c:	88 23       	and	r24, r24
    a27e:	21 f4       	brne	.+8      	; 0xa288 <_ZN4leds5blinkE7Blink_t+0x378>
    a280:	80 91 e5 47 	lds	r24, 0x47E5	; 0x8047e5 <_ZL20green_led_configured>
    a284:	88 23       	and	r24, r24
    a286:	11 f0       	breq	.+4      	; 0xa28c <_ZN4leds5blinkE7Blink_t+0x37c>
    a288:	81 e0       	ldi	r24, 0x01	; 1
    a28a:	01 c0       	rjmp	.+2      	; 0xa28e <_ZN4leds5blinkE7Blink_t+0x37e>
    a28c:	80 e0       	ldi	r24, 0x00	; 0
    a28e:	88 23       	and	r24, r24
    a290:	49 f0       	breq	.+18     	; 0xa2a4 <_ZN4leds5blinkE7Blink_t+0x394>
		{
			TCB3.INTCTRL |= TCB_CAPT_bm;   /* Capture or Timeout: enabled */
    a292:	80 e3       	ldi	r24, 0x30	; 48
    a294:	9b e0       	ldi	r25, 0x0B	; 11
    a296:	20 e3       	ldi	r18, 0x30	; 48
    a298:	3b e0       	ldi	r19, 0x0B	; 11
    a29a:	f9 01       	movw	r30, r18
    a29c:	25 81       	ldd	r18, Z+5	; 0x05
    a29e:	21 60       	ori	r18, 0x01	; 1
    a2a0:	fc 01       	movw	r30, r24
    a2a2:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	lastBlinkSetting = blinkMode;
    a2a4:	8b 81       	ldd	r24, Y+3	; 0x03
    a2a6:	80 93 d3 47 	sts	0x47D3, r24	; 0x8047d3 <_ZL16lastBlinkSetting>
}
    a2aa:	00 00       	nop
    a2ac:	23 96       	adiw	r28, 0x03	; 3
    a2ae:	cd bf       	out	0x3d, r28	; 61
    a2b0:	de bf       	out	0x3e, r29	; 62
    a2b2:	df 91       	pop	r29
    a2b4:	cf 91       	pop	r28
    a2b6:	08 95       	ret

0000a2b8 <PORTC_set_pin_pull_mode>:

void lb_send_sync(void)
{
	sprintf(g_tempMsgBuff, ".....");
	lb_send_text(g_tempMsgBuff);
}
    a2b8:	cf 93       	push	r28
    a2ba:	df 93       	push	r29
    a2bc:	00 d0       	rcall	.+0      	; 0xa2be <PORTC_set_pin_pull_mode+0x6>
    a2be:	00 d0       	rcall	.+0      	; 0xa2c0 <PORTC_set_pin_pull_mode+0x8>
    a2c0:	cd b7       	in	r28, 0x3d	; 61
    a2c2:	de b7       	in	r29, 0x3e	; 62
    a2c4:	8b 83       	std	Y+3, r24	; 0x03
    a2c6:	6c 83       	std	Y+4, r22	; 0x04
    a2c8:	8b 81       	ldd	r24, Y+3	; 0x03
    a2ca:	88 2f       	mov	r24, r24
    a2cc:	90 e0       	ldi	r25, 0x00	; 0
    a2ce:	80 5b       	subi	r24, 0xB0	; 176
    a2d0:	9b 4f       	sbci	r25, 0xFB	; 251
    a2d2:	89 83       	std	Y+1, r24	; 0x01
    a2d4:	9a 83       	std	Y+2, r25	; 0x02
    a2d6:	8c 81       	ldd	r24, Y+4	; 0x04
    a2d8:	81 30       	cpi	r24, 0x01	; 1
    a2da:	59 f4       	brne	.+22     	; 0xa2f2 <PORTC_set_pin_pull_mode+0x3a>
    a2dc:	89 81       	ldd	r24, Y+1	; 0x01
    a2de:	9a 81       	ldd	r25, Y+2	; 0x02
    a2e0:	fc 01       	movw	r30, r24
    a2e2:	80 81       	ld	r24, Z
    a2e4:	28 2f       	mov	r18, r24
    a2e6:	28 60       	ori	r18, 0x08	; 8
    a2e8:	89 81       	ldd	r24, Y+1	; 0x01
    a2ea:	9a 81       	ldd	r25, Y+2	; 0x02
    a2ec:	fc 01       	movw	r30, r24
    a2ee:	20 83       	st	Z, r18
    a2f0:	0d c0       	rjmp	.+26     	; 0xa30c <PORTC_set_pin_pull_mode+0x54>
    a2f2:	8c 81       	ldd	r24, Y+4	; 0x04
    a2f4:	88 23       	and	r24, r24
    a2f6:	51 f4       	brne	.+20     	; 0xa30c <PORTC_set_pin_pull_mode+0x54>
    a2f8:	89 81       	ldd	r24, Y+1	; 0x01
    a2fa:	9a 81       	ldd	r25, Y+2	; 0x02
    a2fc:	fc 01       	movw	r30, r24
    a2fe:	80 81       	ld	r24, Z
    a300:	28 2f       	mov	r18, r24
    a302:	27 7f       	andi	r18, 0xF7	; 247
    a304:	89 81       	ldd	r24, Y+1	; 0x01
    a306:	9a 81       	ldd	r25, Y+2	; 0x02
    a308:	fc 01       	movw	r30, r24
    a30a:	20 83       	st	Z, r18
    a30c:	00 00       	nop
    a30e:	24 96       	adiw	r28, 0x04	; 4
    a310:	cd bf       	out	0x3d, r28	; 61
    a312:	de bf       	out	0x3e, r29	; 62
    a314:	df 91       	pop	r29
    a316:	cf 91       	pop	r28
    a318:	08 95       	ret

0000a31a <PORTC_set_pin_dir>:
    a31a:	cf 93       	push	r28
    a31c:	df 93       	push	r29
    a31e:	00 d0       	rcall	.+0      	; 0xa320 <PORTC_set_pin_dir+0x6>
    a320:	cd b7       	in	r28, 0x3d	; 61
    a322:	de b7       	in	r29, 0x3e	; 62
    a324:	89 83       	std	Y+1, r24	; 0x01
    a326:	6a 83       	std	Y+2, r22	; 0x02
    a328:	8a 81       	ldd	r24, Y+2	; 0x02
    a32a:	88 2f       	mov	r24, r24
    a32c:	90 e0       	ldi	r25, 0x00	; 0
    a32e:	81 30       	cpi	r24, 0x01	; 1
    a330:	91 05       	cpc	r25, r1
    a332:	e1 f0       	breq	.+56     	; 0xa36c <PORTC_set_pin_dir+0x52>
    a334:	82 30       	cpi	r24, 0x02	; 2
    a336:	91 05       	cpc	r25, r1
    a338:	71 f1       	breq	.+92     	; 0xa396 <PORTC_set_pin_dir+0x7c>
    a33a:	89 2b       	or	r24, r25
    a33c:	09 f0       	breq	.+2      	; 0xa340 <PORTC_set_pin_dir+0x26>
    a33e:	3b c0       	rjmp	.+118    	; 0xa3b6 <PORTC_set_pin_dir+0x9c>
    a340:	88 e0       	ldi	r24, 0x08	; 8
    a342:	90 e0       	ldi	r25, 0x00	; 0
    a344:	28 e0       	ldi	r18, 0x08	; 8
    a346:	30 e0       	ldi	r19, 0x00	; 0
    a348:	f9 01       	movw	r30, r18
    a34a:	20 81       	ld	r18, Z
    a34c:	62 2f       	mov	r22, r18
    a34e:	29 81       	ldd	r18, Y+1	; 0x01
    a350:	42 2f       	mov	r20, r18
    a352:	50 e0       	ldi	r21, 0x00	; 0
    a354:	21 e0       	ldi	r18, 0x01	; 1
    a356:	30 e0       	ldi	r19, 0x00	; 0
    a358:	02 c0       	rjmp	.+4      	; 0xa35e <PORTC_set_pin_dir+0x44>
    a35a:	22 0f       	add	r18, r18
    a35c:	33 1f       	adc	r19, r19
    a35e:	4a 95       	dec	r20
    a360:	e2 f7       	brpl	.-8      	; 0xa35a <PORTC_set_pin_dir+0x40>
    a362:	20 95       	com	r18
    a364:	26 23       	and	r18, r22
    a366:	fc 01       	movw	r30, r24
    a368:	20 83       	st	Z, r18
    a36a:	25 c0       	rjmp	.+74     	; 0xa3b6 <PORTC_set_pin_dir+0x9c>
    a36c:	88 e0       	ldi	r24, 0x08	; 8
    a36e:	90 e0       	ldi	r25, 0x00	; 0
    a370:	28 e0       	ldi	r18, 0x08	; 8
    a372:	30 e0       	ldi	r19, 0x00	; 0
    a374:	f9 01       	movw	r30, r18
    a376:	20 81       	ld	r18, Z
    a378:	62 2f       	mov	r22, r18
    a37a:	29 81       	ldd	r18, Y+1	; 0x01
    a37c:	42 2f       	mov	r20, r18
    a37e:	50 e0       	ldi	r21, 0x00	; 0
    a380:	21 e0       	ldi	r18, 0x01	; 1
    a382:	30 e0       	ldi	r19, 0x00	; 0
    a384:	02 c0       	rjmp	.+4      	; 0xa38a <PORTC_set_pin_dir+0x70>
    a386:	22 0f       	add	r18, r18
    a388:	33 1f       	adc	r19, r19
    a38a:	4a 95       	dec	r20
    a38c:	e2 f7       	brpl	.-8      	; 0xa386 <PORTC_set_pin_dir+0x6c>
    a38e:	26 2b       	or	r18, r22
    a390:	fc 01       	movw	r30, r24
    a392:	20 83       	st	Z, r18
    a394:	10 c0       	rjmp	.+32     	; 0xa3b6 <PORTC_set_pin_dir+0x9c>
    a396:	89 81       	ldd	r24, Y+1	; 0x01
    a398:	88 2f       	mov	r24, r24
    a39a:	90 e0       	ldi	r25, 0x00	; 0
    a39c:	80 5b       	subi	r24, 0xB0	; 176
    a39e:	9b 4f       	sbci	r25, 0xFB	; 251
    a3a0:	29 81       	ldd	r18, Y+1	; 0x01
    a3a2:	22 2f       	mov	r18, r18
    a3a4:	30 e0       	ldi	r19, 0x00	; 0
    a3a6:	20 5b       	subi	r18, 0xB0	; 176
    a3a8:	3b 4f       	sbci	r19, 0xFB	; 251
    a3aa:	f9 01       	movw	r30, r18
    a3ac:	20 81       	ld	r18, Z
    a3ae:	28 60       	ori	r18, 0x08	; 8
    a3b0:	fc 01       	movw	r30, r24
    a3b2:	20 83       	st	Z, r18
    a3b4:	00 00       	nop
    a3b6:	00 00       	nop
    a3b8:	0f 90       	pop	r0
    a3ba:	0f 90       	pop	r0
    a3bc:	df 91       	pop	r29
    a3be:	cf 91       	pop	r28
    a3c0:	08 95       	ret

0000a3c2 <PORTC_set_pin_level>:
    a3c2:	cf 93       	push	r28
    a3c4:	df 93       	push	r29
    a3c6:	00 d0       	rcall	.+0      	; 0xa3c8 <PORTC_set_pin_level+0x6>
    a3c8:	cd b7       	in	r28, 0x3d	; 61
    a3ca:	de b7       	in	r29, 0x3e	; 62
    a3cc:	89 83       	std	Y+1, r24	; 0x01
    a3ce:	6a 83       	std	Y+2, r22	; 0x02
    a3d0:	8a 81       	ldd	r24, Y+2	; 0x02
    a3d2:	88 23       	and	r24, r24
    a3d4:	a9 f0       	breq	.+42     	; 0xa400 <PORTC_set_pin_level+0x3e>
    a3d6:	88 e0       	ldi	r24, 0x08	; 8
    a3d8:	90 e0       	ldi	r25, 0x00	; 0
    a3da:	28 e0       	ldi	r18, 0x08	; 8
    a3dc:	30 e0       	ldi	r19, 0x00	; 0
    a3de:	f9 01       	movw	r30, r18
    a3e0:	21 81       	ldd	r18, Z+1	; 0x01
    a3e2:	62 2f       	mov	r22, r18
    a3e4:	29 81       	ldd	r18, Y+1	; 0x01
    a3e6:	42 2f       	mov	r20, r18
    a3e8:	50 e0       	ldi	r21, 0x00	; 0
    a3ea:	21 e0       	ldi	r18, 0x01	; 1
    a3ec:	30 e0       	ldi	r19, 0x00	; 0
    a3ee:	02 c0       	rjmp	.+4      	; 0xa3f4 <PORTC_set_pin_level+0x32>
    a3f0:	22 0f       	add	r18, r18
    a3f2:	33 1f       	adc	r19, r19
    a3f4:	4a 95       	dec	r20
    a3f6:	e2 f7       	brpl	.-8      	; 0xa3f0 <PORTC_set_pin_level+0x2e>
    a3f8:	26 2b       	or	r18, r22
    a3fa:	fc 01       	movw	r30, r24
    a3fc:	21 83       	std	Z+1, r18	; 0x01
    a3fe:	15 c0       	rjmp	.+42     	; 0xa42a <PORTC_set_pin_level+0x68>
    a400:	88 e0       	ldi	r24, 0x08	; 8
    a402:	90 e0       	ldi	r25, 0x00	; 0
    a404:	28 e0       	ldi	r18, 0x08	; 8
    a406:	30 e0       	ldi	r19, 0x00	; 0
    a408:	f9 01       	movw	r30, r18
    a40a:	21 81       	ldd	r18, Z+1	; 0x01
    a40c:	62 2f       	mov	r22, r18
    a40e:	29 81       	ldd	r18, Y+1	; 0x01
    a410:	42 2f       	mov	r20, r18
    a412:	50 e0       	ldi	r21, 0x00	; 0
    a414:	21 e0       	ldi	r18, 0x01	; 1
    a416:	30 e0       	ldi	r19, 0x00	; 0
    a418:	02 c0       	rjmp	.+4      	; 0xa41e <PORTC_set_pin_level+0x5c>
    a41a:	22 0f       	add	r18, r18
    a41c:	33 1f       	adc	r19, r19
    a41e:	4a 95       	dec	r20
    a420:	e2 f7       	brpl	.-8      	; 0xa41a <PORTC_set_pin_level+0x58>
    a422:	20 95       	com	r18
    a424:	26 23       	and	r18, r22
    a426:	fc 01       	movw	r30, r24
    a428:	21 83       	std	Z+1, r18	; 0x01
    a42a:	00 00       	nop
    a42c:	0f 90       	pop	r0
    a42e:	0f 90       	pop	r0
    a430:	df 91       	pop	r29
    a432:	cf 91       	pop	r28
    a434:	08 95       	ret

0000a436 <PORTE_set_pin_pull_mode>:
    a436:	cf 93       	push	r28
    a438:	df 93       	push	r29
    a43a:	00 d0       	rcall	.+0      	; 0xa43c <PORTE_set_pin_pull_mode+0x6>
    a43c:	00 d0       	rcall	.+0      	; 0xa43e <PORTE_set_pin_pull_mode+0x8>
    a43e:	cd b7       	in	r28, 0x3d	; 61
    a440:	de b7       	in	r29, 0x3e	; 62
    a442:	8b 83       	std	Y+3, r24	; 0x03
    a444:	6c 83       	std	Y+4, r22	; 0x04
    a446:	8b 81       	ldd	r24, Y+3	; 0x03
    a448:	88 2f       	mov	r24, r24
    a44a:	90 e0       	ldi	r25, 0x00	; 0
    a44c:	80 57       	subi	r24, 0x70	; 112
    a44e:	9b 4f       	sbci	r25, 0xFB	; 251
    a450:	89 83       	std	Y+1, r24	; 0x01
    a452:	9a 83       	std	Y+2, r25	; 0x02
    a454:	8c 81       	ldd	r24, Y+4	; 0x04
    a456:	81 30       	cpi	r24, 0x01	; 1
    a458:	59 f4       	brne	.+22     	; 0xa470 <PORTE_set_pin_pull_mode+0x3a>
    a45a:	89 81       	ldd	r24, Y+1	; 0x01
    a45c:	9a 81       	ldd	r25, Y+2	; 0x02
    a45e:	fc 01       	movw	r30, r24
    a460:	80 81       	ld	r24, Z
    a462:	28 2f       	mov	r18, r24
    a464:	28 60       	ori	r18, 0x08	; 8
    a466:	89 81       	ldd	r24, Y+1	; 0x01
    a468:	9a 81       	ldd	r25, Y+2	; 0x02
    a46a:	fc 01       	movw	r30, r24
    a46c:	20 83       	st	Z, r18
    a46e:	0d c0       	rjmp	.+26     	; 0xa48a <PORTE_set_pin_pull_mode+0x54>
    a470:	8c 81       	ldd	r24, Y+4	; 0x04
    a472:	88 23       	and	r24, r24
    a474:	51 f4       	brne	.+20     	; 0xa48a <PORTE_set_pin_pull_mode+0x54>
    a476:	89 81       	ldd	r24, Y+1	; 0x01
    a478:	9a 81       	ldd	r25, Y+2	; 0x02
    a47a:	fc 01       	movw	r30, r24
    a47c:	80 81       	ld	r24, Z
    a47e:	28 2f       	mov	r18, r24
    a480:	27 7f       	andi	r18, 0xF7	; 247
    a482:	89 81       	ldd	r24, Y+1	; 0x01
    a484:	9a 81       	ldd	r25, Y+2	; 0x02
    a486:	fc 01       	movw	r30, r24
    a488:	20 83       	st	Z, r18
    a48a:	00 00       	nop
    a48c:	24 96       	adiw	r28, 0x04	; 4
    a48e:	cd bf       	out	0x3d, r28	; 61
    a490:	de bf       	out	0x3e, r29	; 62
    a492:	df 91       	pop	r29
    a494:	cf 91       	pop	r28
    a496:	08 95       	ret

0000a498 <PORTE_set_pin_dir>:
    a498:	cf 93       	push	r28
    a49a:	df 93       	push	r29
    a49c:	00 d0       	rcall	.+0      	; 0xa49e <PORTE_set_pin_dir+0x6>
    a49e:	cd b7       	in	r28, 0x3d	; 61
    a4a0:	de b7       	in	r29, 0x3e	; 62
    a4a2:	89 83       	std	Y+1, r24	; 0x01
    a4a4:	6a 83       	std	Y+2, r22	; 0x02
    a4a6:	8a 81       	ldd	r24, Y+2	; 0x02
    a4a8:	88 2f       	mov	r24, r24
    a4aa:	90 e0       	ldi	r25, 0x00	; 0
    a4ac:	81 30       	cpi	r24, 0x01	; 1
    a4ae:	91 05       	cpc	r25, r1
    a4b0:	e1 f0       	breq	.+56     	; 0xa4ea <PORTE_set_pin_dir+0x52>
    a4b2:	82 30       	cpi	r24, 0x02	; 2
    a4b4:	91 05       	cpc	r25, r1
    a4b6:	71 f1       	breq	.+92     	; 0xa514 <PORTE_set_pin_dir+0x7c>
    a4b8:	89 2b       	or	r24, r25
    a4ba:	09 f0       	breq	.+2      	; 0xa4be <PORTE_set_pin_dir+0x26>
    a4bc:	3b c0       	rjmp	.+118    	; 0xa534 <PORTE_set_pin_dir+0x9c>
    a4be:	80 e1       	ldi	r24, 0x10	; 16
    a4c0:	90 e0       	ldi	r25, 0x00	; 0
    a4c2:	20 e1       	ldi	r18, 0x10	; 16
    a4c4:	30 e0       	ldi	r19, 0x00	; 0
    a4c6:	f9 01       	movw	r30, r18
    a4c8:	20 81       	ld	r18, Z
    a4ca:	62 2f       	mov	r22, r18
    a4cc:	29 81       	ldd	r18, Y+1	; 0x01
    a4ce:	42 2f       	mov	r20, r18
    a4d0:	50 e0       	ldi	r21, 0x00	; 0
    a4d2:	21 e0       	ldi	r18, 0x01	; 1
    a4d4:	30 e0       	ldi	r19, 0x00	; 0
    a4d6:	02 c0       	rjmp	.+4      	; 0xa4dc <PORTE_set_pin_dir+0x44>
    a4d8:	22 0f       	add	r18, r18
    a4da:	33 1f       	adc	r19, r19
    a4dc:	4a 95       	dec	r20
    a4de:	e2 f7       	brpl	.-8      	; 0xa4d8 <PORTE_set_pin_dir+0x40>
    a4e0:	20 95       	com	r18
    a4e2:	26 23       	and	r18, r22
    a4e4:	fc 01       	movw	r30, r24
    a4e6:	20 83       	st	Z, r18
    a4e8:	25 c0       	rjmp	.+74     	; 0xa534 <PORTE_set_pin_dir+0x9c>
    a4ea:	80 e1       	ldi	r24, 0x10	; 16
    a4ec:	90 e0       	ldi	r25, 0x00	; 0
    a4ee:	20 e1       	ldi	r18, 0x10	; 16
    a4f0:	30 e0       	ldi	r19, 0x00	; 0
    a4f2:	f9 01       	movw	r30, r18
    a4f4:	20 81       	ld	r18, Z
    a4f6:	62 2f       	mov	r22, r18
    a4f8:	29 81       	ldd	r18, Y+1	; 0x01
    a4fa:	42 2f       	mov	r20, r18
    a4fc:	50 e0       	ldi	r21, 0x00	; 0
    a4fe:	21 e0       	ldi	r18, 0x01	; 1
    a500:	30 e0       	ldi	r19, 0x00	; 0
    a502:	02 c0       	rjmp	.+4      	; 0xa508 <PORTE_set_pin_dir+0x70>
    a504:	22 0f       	add	r18, r18
    a506:	33 1f       	adc	r19, r19
    a508:	4a 95       	dec	r20
    a50a:	e2 f7       	brpl	.-8      	; 0xa504 <PORTE_set_pin_dir+0x6c>
    a50c:	26 2b       	or	r18, r22
    a50e:	fc 01       	movw	r30, r24
    a510:	20 83       	st	Z, r18
    a512:	10 c0       	rjmp	.+32     	; 0xa534 <PORTE_set_pin_dir+0x9c>
    a514:	89 81       	ldd	r24, Y+1	; 0x01
    a516:	88 2f       	mov	r24, r24
    a518:	90 e0       	ldi	r25, 0x00	; 0
    a51a:	80 57       	subi	r24, 0x70	; 112
    a51c:	9b 4f       	sbci	r25, 0xFB	; 251
    a51e:	29 81       	ldd	r18, Y+1	; 0x01
    a520:	22 2f       	mov	r18, r18
    a522:	30 e0       	ldi	r19, 0x00	; 0
    a524:	20 57       	subi	r18, 0x70	; 112
    a526:	3b 4f       	sbci	r19, 0xFB	; 251
    a528:	f9 01       	movw	r30, r18
    a52a:	20 81       	ld	r18, Z
    a52c:	28 60       	ori	r18, 0x08	; 8
    a52e:	fc 01       	movw	r30, r24
    a530:	20 83       	st	Z, r18
    a532:	00 00       	nop
    a534:	00 00       	nop
    a536:	0f 90       	pop	r0
    a538:	0f 90       	pop	r0
    a53a:	df 91       	pop	r29
    a53c:	cf 91       	pop	r28
    a53e:	08 95       	ret

0000a540 <PORTE_set_pin_level>:
    a540:	cf 93       	push	r28
    a542:	df 93       	push	r29
    a544:	00 d0       	rcall	.+0      	; 0xa546 <PORTE_set_pin_level+0x6>
    a546:	cd b7       	in	r28, 0x3d	; 61
    a548:	de b7       	in	r29, 0x3e	; 62
    a54a:	89 83       	std	Y+1, r24	; 0x01
    a54c:	6a 83       	std	Y+2, r22	; 0x02
    a54e:	8a 81       	ldd	r24, Y+2	; 0x02
    a550:	88 23       	and	r24, r24
    a552:	a9 f0       	breq	.+42     	; 0xa57e <PORTE_set_pin_level+0x3e>
    a554:	80 e1       	ldi	r24, 0x10	; 16
    a556:	90 e0       	ldi	r25, 0x00	; 0
    a558:	20 e1       	ldi	r18, 0x10	; 16
    a55a:	30 e0       	ldi	r19, 0x00	; 0
    a55c:	f9 01       	movw	r30, r18
    a55e:	21 81       	ldd	r18, Z+1	; 0x01
    a560:	62 2f       	mov	r22, r18
    a562:	29 81       	ldd	r18, Y+1	; 0x01
    a564:	42 2f       	mov	r20, r18
    a566:	50 e0       	ldi	r21, 0x00	; 0
    a568:	21 e0       	ldi	r18, 0x01	; 1
    a56a:	30 e0       	ldi	r19, 0x00	; 0
    a56c:	02 c0       	rjmp	.+4      	; 0xa572 <PORTE_set_pin_level+0x32>
    a56e:	22 0f       	add	r18, r18
    a570:	33 1f       	adc	r19, r19
    a572:	4a 95       	dec	r20
    a574:	e2 f7       	brpl	.-8      	; 0xa56e <PORTE_set_pin_level+0x2e>
    a576:	26 2b       	or	r18, r22
    a578:	fc 01       	movw	r30, r24
    a57a:	21 83       	std	Z+1, r18	; 0x01
    a57c:	15 c0       	rjmp	.+42     	; 0xa5a8 <PORTE_set_pin_level+0x68>
    a57e:	80 e1       	ldi	r24, 0x10	; 16
    a580:	90 e0       	ldi	r25, 0x00	; 0
    a582:	20 e1       	ldi	r18, 0x10	; 16
    a584:	30 e0       	ldi	r19, 0x00	; 0
    a586:	f9 01       	movw	r30, r18
    a588:	21 81       	ldd	r18, Z+1	; 0x01
    a58a:	62 2f       	mov	r22, r18
    a58c:	29 81       	ldd	r18, Y+1	; 0x01
    a58e:	42 2f       	mov	r20, r18
    a590:	50 e0       	ldi	r21, 0x00	; 0
    a592:	21 e0       	ldi	r18, 0x01	; 1
    a594:	30 e0       	ldi	r19, 0x00	; 0
    a596:	02 c0       	rjmp	.+4      	; 0xa59c <PORTE_set_pin_level+0x5c>
    a598:	22 0f       	add	r18, r18
    a59a:	33 1f       	adc	r19, r19
    a59c:	4a 95       	dec	r20
    a59e:	e2 f7       	brpl	.-8      	; 0xa598 <PORTE_set_pin_level+0x58>
    a5a0:	20 95       	com	r18
    a5a2:	26 23       	and	r18, r22
    a5a4:	fc 01       	movw	r30, r24
    a5a6:	21 83       	std	Z+1, r18	; 0x01
    a5a8:	00 00       	nop
    a5aa:	0f 90       	pop	r0
    a5ac:	0f 90       	pop	r0
    a5ae:	df 91       	pop	r29
    a5b0:	cf 91       	pop	r28
    a5b2:	08 95       	ret

0000a5b4 <PC0_set_dir>:
    a5b4:	cf 93       	push	r28
    a5b6:	df 93       	push	r29
    a5b8:	1f 92       	push	r1
    a5ba:	cd b7       	in	r28, 0x3d	; 61
    a5bc:	de b7       	in	r29, 0x3e	; 62
    a5be:	89 83       	std	Y+1, r24	; 0x01
    a5c0:	69 81       	ldd	r22, Y+1	; 0x01
    a5c2:	80 e0       	ldi	r24, 0x00	; 0
    a5c4:	0e 94 8d 51 	call	0xa31a	; 0xa31a <PORTC_set_pin_dir>
    a5c8:	00 00       	nop
    a5ca:	0f 90       	pop	r0
    a5cc:	df 91       	pop	r29
    a5ce:	cf 91       	pop	r28
    a5d0:	08 95       	ret

0000a5d2 <PC0_set_level>:
    a5d2:	cf 93       	push	r28
    a5d4:	df 93       	push	r29
    a5d6:	1f 92       	push	r1
    a5d8:	cd b7       	in	r28, 0x3d	; 61
    a5da:	de b7       	in	r29, 0x3e	; 62
    a5dc:	89 83       	std	Y+1, r24	; 0x01
    a5de:	69 81       	ldd	r22, Y+1	; 0x01
    a5e0:	80 e0       	ldi	r24, 0x00	; 0
    a5e2:	0e 94 e1 51 	call	0xa3c2	; 0xa3c2 <PORTC_set_pin_level>
    a5e6:	00 00       	nop
    a5e8:	0f 90       	pop	r0
    a5ea:	df 91       	pop	r29
    a5ec:	cf 91       	pop	r28
    a5ee:	08 95       	ret

0000a5f0 <PC1_set_pull_mode>:
    a5f0:	cf 93       	push	r28
    a5f2:	df 93       	push	r29
    a5f4:	1f 92       	push	r1
    a5f6:	cd b7       	in	r28, 0x3d	; 61
    a5f8:	de b7       	in	r29, 0x3e	; 62
    a5fa:	89 83       	std	Y+1, r24	; 0x01
    a5fc:	69 81       	ldd	r22, Y+1	; 0x01
    a5fe:	81 e0       	ldi	r24, 0x01	; 1
    a600:	0e 94 5c 51 	call	0xa2b8	; 0xa2b8 <PORTC_set_pin_pull_mode>
    a604:	00 00       	nop
    a606:	0f 90       	pop	r0
    a608:	df 91       	pop	r29
    a60a:	cf 91       	pop	r28
    a60c:	08 95       	ret

0000a60e <PC1_set_dir>:
    a60e:	cf 93       	push	r28
    a610:	df 93       	push	r29
    a612:	1f 92       	push	r1
    a614:	cd b7       	in	r28, 0x3d	; 61
    a616:	de b7       	in	r29, 0x3e	; 62
    a618:	89 83       	std	Y+1, r24	; 0x01
    a61a:	69 81       	ldd	r22, Y+1	; 0x01
    a61c:	81 e0       	ldi	r24, 0x01	; 1
    a61e:	0e 94 8d 51 	call	0xa31a	; 0xa31a <PORTC_set_pin_dir>
    a622:	00 00       	nop
    a624:	0f 90       	pop	r0
    a626:	df 91       	pop	r29
    a628:	cf 91       	pop	r28
    a62a:	08 95       	ret

0000a62c <PE0_set_dir>:
    a62c:	cf 93       	push	r28
    a62e:	df 93       	push	r29
    a630:	1f 92       	push	r1
    a632:	cd b7       	in	r28, 0x3d	; 61
    a634:	de b7       	in	r29, 0x3e	; 62
    a636:	89 83       	std	Y+1, r24	; 0x01
    a638:	69 81       	ldd	r22, Y+1	; 0x01
    a63a:	80 e0       	ldi	r24, 0x00	; 0
    a63c:	0e 94 4c 52 	call	0xa498	; 0xa498 <PORTE_set_pin_dir>
    a640:	00 00       	nop
    a642:	0f 90       	pop	r0
    a644:	df 91       	pop	r29
    a646:	cf 91       	pop	r28
    a648:	08 95       	ret

0000a64a <PE0_set_level>:
    a64a:	cf 93       	push	r28
    a64c:	df 93       	push	r29
    a64e:	1f 92       	push	r1
    a650:	cd b7       	in	r28, 0x3d	; 61
    a652:	de b7       	in	r29, 0x3e	; 62
    a654:	89 83       	std	Y+1, r24	; 0x01
    a656:	69 81       	ldd	r22, Y+1	; 0x01
    a658:	80 e0       	ldi	r24, 0x00	; 0
    a65a:	0e 94 a0 52 	call	0xa540	; 0xa540 <PORTE_set_pin_level>
    a65e:	00 00       	nop
    a660:	0f 90       	pop	r0
    a662:	df 91       	pop	r29
    a664:	cf 91       	pop	r28
    a666:	08 95       	ret

0000a668 <PE1_set_pull_mode>:
    a668:	cf 93       	push	r28
    a66a:	df 93       	push	r29
    a66c:	1f 92       	push	r1
    a66e:	cd b7       	in	r28, 0x3d	; 61
    a670:	de b7       	in	r29, 0x3e	; 62
    a672:	89 83       	std	Y+1, r24	; 0x01
    a674:	69 81       	ldd	r22, Y+1	; 0x01
    a676:	81 e0       	ldi	r24, 0x01	; 1
    a678:	0e 94 1b 52 	call	0xa436	; 0xa436 <PORTE_set_pin_pull_mode>
    a67c:	00 00       	nop
    a67e:	0f 90       	pop	r0
    a680:	df 91       	pop	r29
    a682:	cf 91       	pop	r28
    a684:	08 95       	ret

0000a686 <PE1_set_dir>:
    a686:	cf 93       	push	r28
    a688:	df 93       	push	r29
    a68a:	1f 92       	push	r1
    a68c:	cd b7       	in	r28, 0x3d	; 61
    a68e:	de b7       	in	r29, 0x3e	; 62
    a690:	89 83       	std	Y+1, r24	; 0x01
    a692:	69 81       	ldd	r22, Y+1	; 0x01
    a694:	81 e0       	ldi	r24, 0x01	; 1
    a696:	0e 94 4c 52 	call	0xa498	; 0xa498 <PORTE_set_pin_dir>
    a69a:	00 00       	nop
    a69c:	0f 90       	pop	r0
    a69e:	df 91       	pop	r29
    a6a0:	cf 91       	pop	r28
    a6a2:	08 95       	ret

0000a6a4 <_Z18nextFullLBTxBufferv>:
    a6a4:	cf 93       	push	r28
    a6a6:	df 93       	push	r29
    a6a8:	00 d0       	rcall	.+0      	; 0xa6aa <_Z18nextFullLBTxBufferv+0x6>
    a6aa:	cd b7       	in	r28, 0x3d	; 61
    a6ac:	de b7       	in	r29, 0x3e	; 62
    a6ae:	81 e0       	ldi	r24, 0x01	; 1
    a6b0:	89 83       	std	Y+1, r24	; 0x01
    a6b2:	1a 82       	std	Y+2, r1	; 0x02
    a6b4:	80 91 65 49 	lds	r24, 0x4965	; 0x804965 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a6b8:	28 2f       	mov	r18, r24
    a6ba:	30 e0       	ldi	r19, 0x00	; 0
    a6bc:	42 e3       	ldi	r20, 0x32	; 50
    a6be:	42 9f       	mul	r20, r18
    a6c0:	c0 01       	movw	r24, r0
    a6c2:	43 9f       	mul	r20, r19
    a6c4:	90 0d       	add	r25, r0
    a6c6:	11 24       	eor	r1, r1
    a6c8:	87 5e       	subi	r24, 0xE7	; 231
    a6ca:	97 4b       	sbci	r25, 0xB7	; 183
    a6cc:	fc 01       	movw	r30, r24
    a6ce:	80 81       	ld	r24, Z
    a6d0:	88 23       	and	r24, r24
    a6d2:	c1 f4       	brne	.+48     	; 0xa704 <_Z18nextFullLBTxBufferv+0x60>
    a6d4:	8a 81       	ldd	r24, Y+2	; 0x02
    a6d6:	8f 5f       	subi	r24, 0xFF	; 255
    a6d8:	8a 83       	std	Y+2, r24	; 0x02
    a6da:	81 e0       	ldi	r24, 0x01	; 1
    a6dc:	9a 81       	ldd	r25, Y+2	; 0x02
    a6de:	94 30       	cpi	r25, 0x04	; 4
    a6e0:	08 f4       	brcc	.+2      	; 0xa6e4 <_Z18nextFullLBTxBufferv+0x40>
    a6e2:	80 e0       	ldi	r24, 0x00	; 0
    a6e4:	88 23       	and	r24, r24
    a6e6:	11 f0       	breq	.+4      	; 0xa6ec <_Z18nextFullLBTxBufferv+0x48>
    a6e8:	19 82       	std	Y+1, r1	; 0x01
    a6ea:	0c c0       	rjmp	.+24     	; 0xa704 <_Z18nextFullLBTxBufferv+0x60>
    a6ec:	80 91 65 49 	lds	r24, 0x4965	; 0x804965 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a6f0:	8f 5f       	subi	r24, 0xFF	; 255
    a6f2:	80 93 65 49 	sts	0x4965, r24	; 0x804965 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a6f6:	80 91 65 49 	lds	r24, 0x4965	; 0x804965 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a6fa:	84 30       	cpi	r24, 0x04	; 4
    a6fc:	d8 f2       	brcs	.-74     	; 0xa6b4 <_Z18nextFullLBTxBufferv+0x10>
    a6fe:	10 92 65 49 	sts	0x4965, r1	; 0x804965 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a702:	d8 cf       	rjmp	.-80     	; 0xa6b4 <_Z18nextFullLBTxBufferv+0x10>
    a704:	89 81       	ldd	r24, Y+1	; 0x01
    a706:	88 23       	and	r24, r24
    a708:	69 f0       	breq	.+26     	; 0xa724 <_Z18nextFullLBTxBufferv+0x80>
    a70a:	80 91 65 49 	lds	r24, 0x4965	; 0x804965 <_ZZ18nextFullLBTxBuffervE11bufferIndex>
    a70e:	28 2f       	mov	r18, r24
    a710:	30 e0       	ldi	r19, 0x00	; 0
    a712:	42 e3       	ldi	r20, 0x32	; 50
    a714:	42 9f       	mul	r20, r18
    a716:	c0 01       	movw	r24, r0
    a718:	43 9f       	mul	r20, r19
    a71a:	90 0d       	add	r25, r0
    a71c:	11 24       	eor	r1, r1
    a71e:	87 5e       	subi	r24, 0xE7	; 231
    a720:	97 4b       	sbci	r25, 0xB7	; 183
    a722:	02 c0       	rjmp	.+4      	; 0xa728 <_Z18nextFullLBTxBufferv+0x84>
    a724:	80 e0       	ldi	r24, 0x00	; 0
    a726:	90 e0       	ldi	r25, 0x00	; 0
    a728:	0f 90       	pop	r0
    a72a:	0f 90       	pop	r0
    a72c:	df 91       	pop	r29
    a72e:	cf 91       	pop	r28
    a730:	08 95       	ret

0000a732 <_Z19nextEmptyLBTxBufferv>:
    a732:	cf 93       	push	r28
    a734:	df 93       	push	r29
    a736:	00 d0       	rcall	.+0      	; 0xa738 <_Z19nextEmptyLBTxBufferv+0x6>
    a738:	cd b7       	in	r28, 0x3d	; 61
    a73a:	de b7       	in	r29, 0x3e	; 62
    a73c:	81 e0       	ldi	r24, 0x01	; 1
    a73e:	89 83       	std	Y+1, r24	; 0x01
    a740:	1a 82       	std	Y+2, r1	; 0x02
    a742:	80 91 66 49 	lds	r24, 0x4966	; 0x804966 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a746:	28 2f       	mov	r18, r24
    a748:	30 e0       	ldi	r19, 0x00	; 0
    a74a:	42 e3       	ldi	r20, 0x32	; 50
    a74c:	42 9f       	mul	r20, r18
    a74e:	c0 01       	movw	r24, r0
    a750:	43 9f       	mul	r20, r19
    a752:	90 0d       	add	r25, r0
    a754:	11 24       	eor	r1, r1
    a756:	87 5e       	subi	r24, 0xE7	; 231
    a758:	97 4b       	sbci	r25, 0xB7	; 183
    a75a:	fc 01       	movw	r30, r24
    a75c:	80 81       	ld	r24, Z
    a75e:	88 23       	and	r24, r24
    a760:	c1 f0       	breq	.+48     	; 0xa792 <_Z19nextEmptyLBTxBufferv+0x60>
    a762:	8a 81       	ldd	r24, Y+2	; 0x02
    a764:	8f 5f       	subi	r24, 0xFF	; 255
    a766:	8a 83       	std	Y+2, r24	; 0x02
    a768:	81 e0       	ldi	r24, 0x01	; 1
    a76a:	9a 81       	ldd	r25, Y+2	; 0x02
    a76c:	94 30       	cpi	r25, 0x04	; 4
    a76e:	08 f4       	brcc	.+2      	; 0xa772 <_Z19nextEmptyLBTxBufferv+0x40>
    a770:	80 e0       	ldi	r24, 0x00	; 0
    a772:	88 23       	and	r24, r24
    a774:	11 f0       	breq	.+4      	; 0xa77a <_Z19nextEmptyLBTxBufferv+0x48>
    a776:	19 82       	std	Y+1, r1	; 0x01
    a778:	0c c0       	rjmp	.+24     	; 0xa792 <_Z19nextEmptyLBTxBufferv+0x60>
    a77a:	80 91 66 49 	lds	r24, 0x4966	; 0x804966 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a77e:	8f 5f       	subi	r24, 0xFF	; 255
    a780:	80 93 66 49 	sts	0x4966, r24	; 0x804966 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a784:	80 91 66 49 	lds	r24, 0x4966	; 0x804966 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a788:	84 30       	cpi	r24, 0x04	; 4
    a78a:	d8 f2       	brcs	.-74     	; 0xa742 <_Z19nextEmptyLBTxBufferv+0x10>
    a78c:	10 92 66 49 	sts	0x4966, r1	; 0x804966 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a790:	d8 cf       	rjmp	.-80     	; 0xa742 <_Z19nextEmptyLBTxBufferv+0x10>
    a792:	89 81       	ldd	r24, Y+1	; 0x01
    a794:	88 23       	and	r24, r24
    a796:	69 f0       	breq	.+26     	; 0xa7b2 <_Z19nextEmptyLBTxBufferv+0x80>
    a798:	80 91 66 49 	lds	r24, 0x4966	; 0x804966 <_ZZ19nextEmptyLBTxBuffervE11bufferIndex>
    a79c:	28 2f       	mov	r18, r24
    a79e:	30 e0       	ldi	r19, 0x00	; 0
    a7a0:	42 e3       	ldi	r20, 0x32	; 50
    a7a2:	42 9f       	mul	r20, r18
    a7a4:	c0 01       	movw	r24, r0
    a7a6:	43 9f       	mul	r20, r19
    a7a8:	90 0d       	add	r25, r0
    a7aa:	11 24       	eor	r1, r1
    a7ac:	87 5e       	subi	r24, 0xE7	; 231
    a7ae:	97 4b       	sbci	r25, 0xB7	; 183
    a7b0:	02 c0       	rjmp	.+4      	; 0xa7b6 <_Z19nextEmptyLBTxBufferv+0x84>
    a7b2:	80 e0       	ldi	r24, 0x00	; 0
    a7b4:	90 e0       	ldi	r25, 0x00	; 0
    a7b6:	0f 90       	pop	r0
    a7b8:	0f 90       	pop	r0
    a7ba:	df 91       	pop	r29
    a7bc:	cf 91       	pop	r28
    a7be:	08 95       	ret

0000a7c0 <_Z19nextEmptyLBRxBufferv>:
    a7c0:	cf 93       	push	r28
    a7c2:	df 93       	push	r29
    a7c4:	00 d0       	rcall	.+0      	; 0xa7c6 <_Z19nextEmptyLBRxBufferv+0x6>
    a7c6:	cd b7       	in	r28, 0x3d	; 61
    a7c8:	de b7       	in	r29, 0x3e	; 62
    a7ca:	81 e0       	ldi	r24, 0x01	; 1
    a7cc:	89 83       	std	Y+1, r24	; 0x01
    a7ce:	1a 82       	std	Y+2, r1	; 0x02
    a7d0:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a7d4:	28 2f       	mov	r18, r24
    a7d6:	30 e0       	ldi	r19, 0x00	; 0
    a7d8:	42 e4       	ldi	r20, 0x42	; 66
    a7da:	42 9f       	mul	r20, r18
    a7dc:	c0 01       	movw	r24, r0
    a7de:	43 9f       	mul	r20, r19
    a7e0:	90 0d       	add	r25, r0
    a7e2:	11 24       	eor	r1, r1
    a7e4:	8e 51       	subi	r24, 0x1E	; 30
    a7e6:	97 4b       	sbci	r25, 0xB7	; 183
    a7e8:	fc 01       	movw	r30, r24
    a7ea:	80 81       	ld	r24, Z
    a7ec:	91 81       	ldd	r25, Z+1	; 0x01
    a7ee:	89 2b       	or	r24, r25
    a7f0:	c1 f0       	breq	.+48     	; 0xa822 <_Z19nextEmptyLBRxBufferv+0x62>
    a7f2:	8a 81       	ldd	r24, Y+2	; 0x02
    a7f4:	8f 5f       	subi	r24, 0xFF	; 255
    a7f6:	8a 83       	std	Y+2, r24	; 0x02
    a7f8:	81 e0       	ldi	r24, 0x01	; 1
    a7fa:	9a 81       	ldd	r25, Y+2	; 0x02
    a7fc:	92 30       	cpi	r25, 0x02	; 2
    a7fe:	08 f4       	brcc	.+2      	; 0xa802 <_Z19nextEmptyLBRxBufferv+0x42>
    a800:	80 e0       	ldi	r24, 0x00	; 0
    a802:	88 23       	and	r24, r24
    a804:	11 f0       	breq	.+4      	; 0xa80a <_Z19nextEmptyLBRxBufferv+0x4a>
    a806:	19 82       	std	Y+1, r1	; 0x01
    a808:	0c c0       	rjmp	.+24     	; 0xa822 <_Z19nextEmptyLBRxBufferv+0x62>
    a80a:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a80e:	8f 5f       	subi	r24, 0xFF	; 255
    a810:	80 93 67 49 	sts	0x4967, r24	; 0x804967 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a814:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a818:	82 30       	cpi	r24, 0x02	; 2
    a81a:	d0 f2       	brcs	.-76     	; 0xa7d0 <_Z19nextEmptyLBRxBufferv+0x10>
    a81c:	10 92 67 49 	sts	0x4967, r1	; 0x804967 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a820:	d7 cf       	rjmp	.-82     	; 0xa7d0 <_Z19nextEmptyLBRxBufferv+0x10>
    a822:	89 81       	ldd	r24, Y+1	; 0x01
    a824:	88 23       	and	r24, r24
    a826:	69 f0       	breq	.+26     	; 0xa842 <_Z19nextEmptyLBRxBufferv+0x82>
    a828:	80 91 67 49 	lds	r24, 0x4967	; 0x804967 <_ZZ19nextEmptyLBRxBuffervE11bufferIndex>
    a82c:	28 2f       	mov	r18, r24
    a82e:	30 e0       	ldi	r19, 0x00	; 0
    a830:	42 e4       	ldi	r20, 0x42	; 66
    a832:	42 9f       	mul	r20, r18
    a834:	c0 01       	movw	r24, r0
    a836:	43 9f       	mul	r20, r19
    a838:	90 0d       	add	r25, r0
    a83a:	11 24       	eor	r1, r1
    a83c:	8f 51       	subi	r24, 0x1F	; 31
    a83e:	97 4b       	sbci	r25, 0xB7	; 183
    a840:	02 c0       	rjmp	.+4      	; 0xa846 <_Z19nextEmptyLBRxBufferv+0x86>
    a842:	80 e0       	ldi	r24, 0x00	; 0
    a844:	90 e0       	ldi	r25, 0x00	; 0
    a846:	0f 90       	pop	r0
    a848:	0f 90       	pop	r0
    a84a:	df 91       	pop	r29
    a84c:	cf 91       	pop	r28
    a84e:	08 95       	ret

0000a850 <_Z18nextFullLBRxBufferv>:
    a850:	cf 93       	push	r28
    a852:	df 93       	push	r29
    a854:	00 d0       	rcall	.+0      	; 0xa856 <_Z18nextFullLBRxBufferv+0x6>
    a856:	cd b7       	in	r28, 0x3d	; 61
    a858:	de b7       	in	r29, 0x3e	; 62
    a85a:	81 e0       	ldi	r24, 0x01	; 1
    a85c:	89 83       	std	Y+1, r24	; 0x01
    a85e:	1a 82       	std	Y+2, r1	; 0x02
    a860:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a864:	28 2f       	mov	r18, r24
    a866:	30 e0       	ldi	r19, 0x00	; 0
    a868:	42 e4       	ldi	r20, 0x42	; 66
    a86a:	42 9f       	mul	r20, r18
    a86c:	c0 01       	movw	r24, r0
    a86e:	43 9f       	mul	r20, r19
    a870:	90 0d       	add	r25, r0
    a872:	11 24       	eor	r1, r1
    a874:	8e 51       	subi	r24, 0x1E	; 30
    a876:	97 4b       	sbci	r25, 0xB7	; 183
    a878:	fc 01       	movw	r30, r24
    a87a:	80 81       	ld	r24, Z
    a87c:	91 81       	ldd	r25, Z+1	; 0x01
    a87e:	89 2b       	or	r24, r25
    a880:	c1 f4       	brne	.+48     	; 0xa8b2 <_Z18nextFullLBRxBufferv+0x62>
    a882:	8a 81       	ldd	r24, Y+2	; 0x02
    a884:	8f 5f       	subi	r24, 0xFF	; 255
    a886:	8a 83       	std	Y+2, r24	; 0x02
    a888:	81 e0       	ldi	r24, 0x01	; 1
    a88a:	9a 81       	ldd	r25, Y+2	; 0x02
    a88c:	92 30       	cpi	r25, 0x02	; 2
    a88e:	08 f4       	brcc	.+2      	; 0xa892 <_Z18nextFullLBRxBufferv+0x42>
    a890:	80 e0       	ldi	r24, 0x00	; 0
    a892:	88 23       	and	r24, r24
    a894:	11 f0       	breq	.+4      	; 0xa89a <_Z18nextFullLBRxBufferv+0x4a>
    a896:	19 82       	std	Y+1, r1	; 0x01
    a898:	0c c0       	rjmp	.+24     	; 0xa8b2 <_Z18nextFullLBRxBufferv+0x62>
    a89a:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a89e:	8f 5f       	subi	r24, 0xFF	; 255
    a8a0:	80 93 68 49 	sts	0x4968, r24	; 0x804968 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a8a4:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a8a8:	82 30       	cpi	r24, 0x02	; 2
    a8aa:	d0 f2       	brcs	.-76     	; 0xa860 <_Z18nextFullLBRxBufferv+0x10>
    a8ac:	10 92 68 49 	sts	0x4968, r1	; 0x804968 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a8b0:	d7 cf       	rjmp	.-82     	; 0xa860 <_Z18nextFullLBRxBufferv+0x10>
    a8b2:	89 81       	ldd	r24, Y+1	; 0x01
    a8b4:	88 23       	and	r24, r24
    a8b6:	69 f0       	breq	.+26     	; 0xa8d2 <_Z18nextFullLBRxBufferv+0x82>
    a8b8:	80 91 68 49 	lds	r24, 0x4968	; 0x804968 <_ZZ18nextFullLBRxBuffervE11bufferIndex>
    a8bc:	28 2f       	mov	r18, r24
    a8be:	30 e0       	ldi	r19, 0x00	; 0
    a8c0:	42 e4       	ldi	r20, 0x42	; 66
    a8c2:	42 9f       	mul	r20, r18
    a8c4:	c0 01       	movw	r24, r0
    a8c6:	43 9f       	mul	r20, r19
    a8c8:	90 0d       	add	r25, r0
    a8ca:	11 24       	eor	r1, r1
    a8cc:	8f 51       	subi	r24, 0x1F	; 31
    a8ce:	97 4b       	sbci	r25, 0xB7	; 183
    a8d0:	02 c0       	rjmp	.+4      	; 0xa8d6 <_Z18nextFullLBRxBufferv+0x86>
    a8d2:	80 e0       	ldi	r24, 0x00	; 0
    a8d4:	90 e0       	ldi	r25, 0x00	; 0
    a8d6:	0f 90       	pop	r0
    a8d8:	0f 90       	pop	r0
    a8da:	df 91       	pop	r29
    a8dc:	cf 91       	pop	r28
    a8de:	08 95       	ret

0000a8e0 <_Z19linkbusTxInProgressv>:
    a8e0:	cf 93       	push	r28
    a8e2:	df 93       	push	r29
    a8e4:	cd b7       	in	r28, 0x3d	; 61
    a8e6:	de b7       	in	r29, 0x3e	; 62
    a8e8:	80 91 18 48 	lds	r24, 0x4818	; 0x804818 <_ZL17linkbus_tx_active>
    a8ec:	df 91       	pop	r29
    a8ee:	cf 91       	pop	r28
    a8f0:	08 95       	ret

0000a8f2 <_ZL16linkbus_start_txv>:
    a8f2:	cf 93       	push	r28
    a8f4:	df 93       	push	r29
    a8f6:	1f 92       	push	r1
    a8f8:	cd b7       	in	r28, 0x3d	; 61
    a8fa:	de b7       	in	r29, 0x3e	; 62
    a8fc:	90 91 18 48 	lds	r25, 0x4818	; 0x804818 <_ZL17linkbus_tx_active>
    a900:	81 e0       	ldi	r24, 0x01	; 1
    a902:	89 27       	eor	r24, r25
    a904:	89 83       	std	Y+1, r24	; 0x01
    a906:	89 81       	ldd	r24, Y+1	; 0x01
    a908:	88 23       	and	r24, r24
    a90a:	61 f0       	breq	.+24     	; 0xa924 <_ZL16linkbus_start_txv+0x32>
    a90c:	81 e0       	ldi	r24, 0x01	; 1
    a90e:	80 93 18 48 	sts	0x4818, r24	; 0x804818 <_ZL17linkbus_tx_active>
    a912:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    a916:	84 30       	cpi	r24, 0x04	; 4
    a918:	19 f4       	brne	.+6      	; 0xa920 <_ZL16linkbus_start_txv+0x2e>
    a91a:	0e 94 fd 6e 	call	0xddfa	; 0xddfa <USART4_enable_tx>
    a91e:	02 c0       	rjmp	.+4      	; 0xa924 <_ZL16linkbus_start_txv+0x32>
    a920:	0e 94 77 6e 	call	0xdcee	; 0xdcee <USART1_enable_tx>
    a924:	89 81       	ldd	r24, Y+1	; 0x01
    a926:	0f 90       	pop	r0
    a928:	df 91       	pop	r29
    a92a:	cf 91       	pop	r28
    a92c:	08 95       	ret

0000a92e <_Z14linkbus_end_txv>:
    a92e:	cf 93       	push	r28
    a930:	df 93       	push	r29
    a932:	cd b7       	in	r28, 0x3d	; 61
    a934:	de b7       	in	r29, 0x3e	; 62
    a936:	80 91 18 48 	lds	r24, 0x4818	; 0x804818 <_ZL17linkbus_tx_active>
    a93a:	88 23       	and	r24, r24
    a93c:	c9 f0       	breq	.+50     	; 0xa970 <_Z14linkbus_end_txv+0x42>
    a93e:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    a942:	88 23       	and	r24, r24
    a944:	51 f4       	brne	.+20     	; 0xa95a <_Z14linkbus_end_txv+0x2c>
    a946:	80 e8       	ldi	r24, 0x80	; 128
    a948:	98 e0       	ldi	r25, 0x08	; 8
    a94a:	20 e8       	ldi	r18, 0x80	; 128
    a94c:	38 e0       	ldi	r19, 0x08	; 8
    a94e:	f9 01       	movw	r30, r18
    a950:	25 81       	ldd	r18, Z+5	; 0x05
    a952:	2f 7d       	andi	r18, 0xDF	; 223
    a954:	fc 01       	movw	r30, r24
    a956:	25 83       	std	Z+5, r18	; 0x05
    a958:	09 c0       	rjmp	.+18     	; 0xa96c <_Z14linkbus_end_txv+0x3e>
    a95a:	80 e2       	ldi	r24, 0x20	; 32
    a95c:	98 e0       	ldi	r25, 0x08	; 8
    a95e:	20 e2       	ldi	r18, 0x20	; 32
    a960:	38 e0       	ldi	r19, 0x08	; 8
    a962:	f9 01       	movw	r30, r18
    a964:	25 81       	ldd	r18, Z+5	; 0x05
    a966:	2f 7d       	andi	r18, 0xDF	; 223
    a968:	fc 01       	movw	r30, r24
    a96a:	25 83       	std	Z+5, r18	; 0x05
    a96c:	10 92 18 48 	sts	0x4818, r1	; 0x804818 <_ZL17linkbus_tx_active>
    a970:	00 00       	nop
    a972:	df 91       	pop	r29
    a974:	cf 91       	pop	r28
    a976:	08 95       	ret

0000a978 <_ZL21USART1_initializationm>:
    a978:	cf 93       	push	r28
    a97a:	df 93       	push	r29
    a97c:	00 d0       	rcall	.+0      	; 0xa97e <_ZL21USART1_initializationm+0x6>
    a97e:	00 d0       	rcall	.+0      	; 0xa980 <_ZL21USART1_initializationm+0x8>
    a980:	cd b7       	in	r28, 0x3d	; 61
    a982:	de b7       	in	r29, 0x3e	; 62
    a984:	69 83       	std	Y+1, r22	; 0x01
    a986:	7a 83       	std	Y+2, r23	; 0x02
    a988:	8b 83       	std	Y+3, r24	; 0x03
    a98a:	9c 83       	std	Y+4, r25	; 0x04
    a98c:	80 e0       	ldi	r24, 0x00	; 0
    a98e:	0e 94 07 53 	call	0xa60e	; 0xa60e <PC1_set_dir>
    a992:	80 e0       	ldi	r24, 0x00	; 0
    a994:	0e 94 f8 52 	call	0xa5f0	; 0xa5f0 <PC1_set_pull_mode>
    a998:	81 e0       	ldi	r24, 0x01	; 1
    a99a:	0e 94 da 52 	call	0xa5b4	; 0xa5b4 <PC0_set_dir>
    a99e:	81 e0       	ldi	r24, 0x01	; 1
    a9a0:	0e 94 e9 52 	call	0xa5d2	; 0xa5d2 <PC0_set_level>
    a9a4:	89 81       	ldd	r24, Y+1	; 0x01
    a9a6:	9a 81       	ldd	r25, Y+2	; 0x02
    a9a8:	ab 81       	ldd	r26, Y+3	; 0x03
    a9aa:	bc 81       	ldd	r27, Y+4	; 0x04
    a9ac:	bc 01       	movw	r22, r24
    a9ae:	cd 01       	movw	r24, r26
    a9b0:	0e 94 20 6e 	call	0xdc40	; 0xdc40 <USART1_init>
    a9b4:	00 00       	nop
    a9b6:	24 96       	adiw	r28, 0x04	; 4
    a9b8:	cd bf       	out	0x3d, r28	; 61
    a9ba:	de bf       	out	0x3e, r29	; 62
    a9bc:	df 91       	pop	r29
    a9be:	cf 91       	pop	r28
    a9c0:	08 95       	ret

0000a9c2 <_ZL21USART4_initializationm>:
    a9c2:	cf 93       	push	r28
    a9c4:	df 93       	push	r29
    a9c6:	00 d0       	rcall	.+0      	; 0xa9c8 <_ZL21USART4_initializationm+0x6>
    a9c8:	00 d0       	rcall	.+0      	; 0xa9ca <_ZL21USART4_initializationm+0x8>
    a9ca:	cd b7       	in	r28, 0x3d	; 61
    a9cc:	de b7       	in	r29, 0x3e	; 62
    a9ce:	69 83       	std	Y+1, r22	; 0x01
    a9d0:	7a 83       	std	Y+2, r23	; 0x02
    a9d2:	8b 83       	std	Y+3, r24	; 0x03
    a9d4:	9c 83       	std	Y+4, r25	; 0x04
    a9d6:	80 e0       	ldi	r24, 0x00	; 0
    a9d8:	0e 94 43 53 	call	0xa686	; 0xa686 <PE1_set_dir>
    a9dc:	80 e0       	ldi	r24, 0x00	; 0
    a9de:	0e 94 34 53 	call	0xa668	; 0xa668 <PE1_set_pull_mode>
    a9e2:	81 e0       	ldi	r24, 0x01	; 1
    a9e4:	0e 94 16 53 	call	0xa62c	; 0xa62c <PE0_set_dir>
    a9e8:	81 e0       	ldi	r24, 0x01	; 1
    a9ea:	0e 94 25 53 	call	0xa64a	; 0xa64a <PE0_set_level>
    a9ee:	89 81       	ldd	r24, Y+1	; 0x01
    a9f0:	9a 81       	ldd	r25, Y+2	; 0x02
    a9f2:	ab 81       	ldd	r26, Y+3	; 0x03
    a9f4:	bc 81       	ldd	r27, Y+4	; 0x04
    a9f6:	bc 01       	movw	r22, r24
    a9f8:	cd 01       	movw	r24, r26
    a9fa:	0e 94 ad 6e 	call	0xdd5a	; 0xdd5a <USART4_init>
    a9fe:	00 00       	nop
    aa00:	24 96       	adiw	r28, 0x04	; 4
    aa02:	cd bf       	out	0x3d, r28	; 61
    aa04:	de bf       	out	0x3e, r29	; 62
    aa06:	df 91       	pop	r29
    aa08:	cf 91       	pop	r28
    aa0a:	08 95       	ret

0000aa0c <_Z12linkbus_initm14USART_Number_t>:
    aa0c:	cf 93       	push	r28
    aa0e:	df 93       	push	r29
    aa10:	cd b7       	in	r28, 0x3d	; 61
    aa12:	de b7       	in	r29, 0x3e	; 62
    aa14:	27 97       	sbiw	r28, 0x07	; 7
    aa16:	cd bf       	out	0x3d, r28	; 61
    aa18:	de bf       	out	0x3e, r29	; 62
    aa1a:	6b 83       	std	Y+3, r22	; 0x03
    aa1c:	7c 83       	std	Y+4, r23	; 0x04
    aa1e:	8d 83       	std	Y+5, r24	; 0x05
    aa20:	9e 83       	std	Y+6, r25	; 0x06
    aa22:	4f 83       	std	Y+7, r20	; 0x07
    aa24:	44 e8       	ldi	r20, 0x84	; 132
    aa26:	50 e0       	ldi	r21, 0x00	; 0
    aa28:	60 e0       	ldi	r22, 0x00	; 0
    aa2a:	70 e0       	ldi	r23, 0x00	; 0
    aa2c:	81 ee       	ldi	r24, 0xE1	; 225
    aa2e:	98 e4       	ldi	r25, 0x48	; 72
    aa30:	0e 94 88 77 	call	0xef10	; 0xef10 <memset>
    aa34:	19 82       	std	Y+1, r1	; 0x01
    aa36:	1a 82       	std	Y+2, r1	; 0x02
    aa38:	89 81       	ldd	r24, Y+1	; 0x01
    aa3a:	9a 81       	ldd	r25, Y+2	; 0x02
    aa3c:	04 97       	sbiw	r24, 0x04	; 4
    aa3e:	94 f4       	brge	.+36     	; 0xaa64 <_Z12linkbus_initm14USART_Number_t+0x58>
    aa40:	29 81       	ldd	r18, Y+1	; 0x01
    aa42:	3a 81       	ldd	r19, Y+2	; 0x02
    aa44:	42 e3       	ldi	r20, 0x32	; 50
    aa46:	42 9f       	mul	r20, r18
    aa48:	c0 01       	movw	r24, r0
    aa4a:	43 9f       	mul	r20, r19
    aa4c:	90 0d       	add	r25, r0
    aa4e:	11 24       	eor	r1, r1
    aa50:	87 5e       	subi	r24, 0xE7	; 231
    aa52:	97 4b       	sbci	r25, 0xB7	; 183
    aa54:	fc 01       	movw	r30, r24
    aa56:	10 82       	st	Z, r1
    aa58:	89 81       	ldd	r24, Y+1	; 0x01
    aa5a:	9a 81       	ldd	r25, Y+2	; 0x02
    aa5c:	01 96       	adiw	r24, 0x01	; 1
    aa5e:	89 83       	std	Y+1, r24	; 0x01
    aa60:	9a 83       	std	Y+2, r25	; 0x02
    aa62:	ea cf       	rjmp	.-44     	; 0xaa38 <_Z12linkbus_initm14USART_Number_t+0x2c>
    aa64:	8f 81       	ldd	r24, Y+7	; 0x07
    aa66:	86 30       	cpi	r24, 0x06	; 6
    aa68:	21 f4       	brne	.+8      	; 0xaa72 <_Z12linkbus_initm14USART_Number_t+0x66>
    aa6a:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    aa6e:	87 30       	cpi	r24, 0x07	; 7
    aa70:	b9 f4       	brne	.+46     	; 0xaaa0 <_Z12linkbus_initm14USART_Number_t+0x94>
    aa72:	8f 81       	ldd	r24, Y+7	; 0x07
    aa74:	84 30       	cpi	r24, 0x04	; 4
    aa76:	49 f4       	brne	.+18     	; 0xaa8a <_Z12linkbus_initm14USART_Number_t+0x7e>
    aa78:	8b 81       	ldd	r24, Y+3	; 0x03
    aa7a:	9c 81       	ldd	r25, Y+4	; 0x04
    aa7c:	ad 81       	ldd	r26, Y+5	; 0x05
    aa7e:	be 81       	ldd	r27, Y+6	; 0x06
    aa80:	bc 01       	movw	r22, r24
    aa82:	cd 01       	movw	r24, r26
    aa84:	0e 94 e1 54 	call	0xa9c2	; 0xa9c2 <_ZL21USART4_initializationm>
    aa88:	08 c0       	rjmp	.+16     	; 0xaa9a <_Z12linkbus_initm14USART_Number_t+0x8e>
    aa8a:	8b 81       	ldd	r24, Y+3	; 0x03
    aa8c:	9c 81       	ldd	r25, Y+4	; 0x04
    aa8e:	ad 81       	ldd	r26, Y+5	; 0x05
    aa90:	be 81       	ldd	r27, Y+6	; 0x06
    aa92:	bc 01       	movw	r22, r24
    aa94:	cd 01       	movw	r24, r26
    aa96:	0e 94 bc 54 	call	0xa978	; 0xa978 <_ZL21USART1_initializationm>
    aa9a:	8f 81       	ldd	r24, Y+7	; 0x07
    aa9c:	80 93 29 40 	sts	0x4029, r24	; 0x804029 <g_linkbus_usart_number>
    aaa0:	10 92 28 40 	sts	0x4028, r1	; 0x804028 <_ZL14g_bus_disabled>
    aaa4:	00 00       	nop
    aaa6:	27 96       	adiw	r28, 0x07	; 7
    aaa8:	cd bf       	out	0x3d, r28	; 61
    aaaa:	de bf       	out	0x3e, r29	; 62
    aaac:	df 91       	pop	r29
    aaae:	cf 91       	pop	r28
    aab0:	08 95       	ret

0000aab2 <_Z15linkbus_disablev>:
    aab2:	cf 93       	push	r28
    aab4:	df 93       	push	r29
    aab6:	1f 92       	push	r1
    aab8:	cd b7       	in	r28, 0x3d	; 61
    aaba:	de b7       	in	r29, 0x3e	; 62
    aabc:	81 e0       	ldi	r24, 0x01	; 1
    aabe:	80 93 28 40 	sts	0x4028, r24	; 0x804028 <_ZL14g_bus_disabled>
    aac2:	80 91 29 40 	lds	r24, 0x4029	; 0x804029 <g_linkbus_usart_number>
    aac6:	84 30       	cpi	r24, 0x04	; 4
    aac8:	19 f4       	brne	.+6      	; 0xaad0 <_Z15linkbus_disablev+0x1e>
    aaca:	0e 94 17 6f 	call	0xde2e	; 0xde2e <USART4_disable>
    aace:	02 c0       	rjmp	.+4      	; 0xaad4 <_Z15linkbus_disablev+0x22>
    aad0:	0e 94 91 6e 	call	0xdd22	; 0xdd22 <USART1_disable>
    aad4:	0e 94 97 54 	call	0xa92e	; 0xa92e <_Z14linkbus_end_txv>
    aad8:	44 e8       	ldi	r20, 0x84	; 132
    aada:	50 e0       	ldi	r21, 0x00	; 0
    aadc:	60 e0       	ldi	r22, 0x00	; 0
    aade:	70 e0       	ldi	r23, 0x00	; 0
    aae0:	81 ee       	ldi	r24, 0xE1	; 225
    aae2:	98 e4       	ldi	r25, 0x48	; 72
    aae4:	0e 94 88 77 	call	0xef10	; 0xef10 <memset>
    aae8:	19 82       	std	Y+1, r1	; 0x01
    aaea:	89 81       	ldd	r24, Y+1	; 0x01
    aaec:	84 30       	cpi	r24, 0x04	; 4
    aaee:	88 f4       	brcc	.+34     	; 0xab12 <_Z15linkbus_disablev+0x60>
    aaf0:	89 81       	ldd	r24, Y+1	; 0x01
    aaf2:	28 2f       	mov	r18, r24
    aaf4:	30 e0       	ldi	r19, 0x00	; 0
    aaf6:	42 e3       	ldi	r20, 0x32	; 50
    aaf8:	42 9f       	mul	r20, r18
    aafa:	c0 01       	movw	r24, r0
    aafc:	43 9f       	mul	r20, r19
    aafe:	90 0d       	add	r25, r0
    ab00:	11 24       	eor	r1, r1
    ab02:	87 5e       	subi	r24, 0xE7	; 231
    ab04:	97 4b       	sbci	r25, 0xB7	; 183
    ab06:	fc 01       	movw	r30, r24
    ab08:	10 82       	st	Z, r1
    ab0a:	89 81       	ldd	r24, Y+1	; 0x01
    ab0c:	8f 5f       	subi	r24, 0xFF	; 255
    ab0e:	89 83       	std	Y+1, r24	; 0x01
    ab10:	ec cf       	rjmp	.-40     	; 0xaaea <_Z15linkbus_disablev+0x38>
    ab12:	00 00       	nop
    ab14:	0f 90       	pop	r0
    ab16:	df 91       	pop	r29
    ab18:	cf 91       	pop	r28
    ab1a:	08 95       	ret

0000ab1c <_Z12lb_send_textPc>:
    ab1c:	cf 93       	push	r28
    ab1e:	df 93       	push	r29
    ab20:	cd b7       	in	r28, 0x3d	; 61
    ab22:	de b7       	in	r29, 0x3e	; 62
    ab24:	27 97       	sbiw	r28, 0x07	; 7
    ab26:	cd bf       	out	0x3d, r28	; 61
    ab28:	de bf       	out	0x3e, r29	; 62
    ab2a:	8e 83       	std	Y+6, r24	; 0x06
    ab2c:	9f 83       	std	Y+7, r25	; 0x07
    ab2e:	81 e0       	ldi	r24, 0x01	; 1
    ab30:	89 83       	std	Y+1, r24	; 0x01
    ab32:	88 ec       	ldi	r24, 0xC8	; 200
    ab34:	90 e0       	ldi	r25, 0x00	; 0
    ab36:	8a 83       	std	Y+2, r24	; 0x02
    ab38:	9b 83       	std	Y+3, r25	; 0x03
    ab3a:	80 91 28 40 	lds	r24, 0x4028	; 0x804028 <_ZL14g_bus_disabled>
    ab3e:	88 23       	and	r24, r24
    ab40:	11 f0       	breq	.+4      	; 0xab46 <_Z12lb_send_textPc+0x2a>
    ab42:	89 81       	ldd	r24, Y+1	; 0x01
    ab44:	42 c0       	rjmp	.+132    	; 0xabca <_Z12lb_send_textPc+0xae>
    ab46:	8e 81       	ldd	r24, Y+6	; 0x06
    ab48:	9f 81       	ldd	r25, Y+7	; 0x07
    ab4a:	89 2b       	or	r24, r25
    ab4c:	e9 f1       	breq	.+122    	; 0xabc8 <_Z12lb_send_textPc+0xac>
    ab4e:	0e 94 99 53 	call	0xa732	; 0xa732 <_Z19nextEmptyLBTxBufferv>
    ab52:	8c 83       	std	Y+4, r24	; 0x04
    ab54:	9d 83       	std	Y+5, r25	; 0x05
    ab56:	8c 81       	ldd	r24, Y+4	; 0x04
    ab58:	9d 81       	ldd	r25, Y+5	; 0x05
    ab5a:	89 2b       	or	r24, r25
    ab5c:	01 f5       	brne	.+64     	; 0xab9e <_Z12lb_send_textPc+0x82>
    ab5e:	8a 81       	ldd	r24, Y+2	; 0x02
    ab60:	9b 81       	ldd	r25, Y+3	; 0x03
    ab62:	89 2b       	or	r24, r25
    ab64:	e1 f0       	breq	.+56     	; 0xab9e <_Z12lb_send_textPc+0x82>
    ab66:	0e 94 70 54 	call	0xa8e0	; 0xa8e0 <_Z19linkbusTxInProgressv>
    ab6a:	88 23       	and	r24, r24
    ab6c:	31 f0       	breq	.+12     	; 0xab7a <_Z12lb_send_textPc+0x5e>
    ab6e:	8a 81       	ldd	r24, Y+2	; 0x02
    ab70:	9b 81       	ldd	r25, Y+3	; 0x03
    ab72:	89 2b       	or	r24, r25
    ab74:	11 f0       	breq	.+4      	; 0xab7a <_Z12lb_send_textPc+0x5e>
    ab76:	81 e0       	ldi	r24, 0x01	; 1
    ab78:	01 c0       	rjmp	.+2      	; 0xab7c <_Z12lb_send_textPc+0x60>
    ab7a:	80 e0       	ldi	r24, 0x00	; 0
    ab7c:	88 23       	and	r24, r24
    ab7e:	51 f0       	breq	.+20     	; 0xab94 <_Z12lb_send_textPc+0x78>
    ab80:	8a 81       	ldd	r24, Y+2	; 0x02
    ab82:	9b 81       	ldd	r25, Y+3	; 0x03
    ab84:	89 2b       	or	r24, r25
    ab86:	79 f3       	breq	.-34     	; 0xab66 <_Z12lb_send_textPc+0x4a>
    ab88:	8a 81       	ldd	r24, Y+2	; 0x02
    ab8a:	9b 81       	ldd	r25, Y+3	; 0x03
    ab8c:	01 97       	sbiw	r24, 0x01	; 1
    ab8e:	8a 83       	std	Y+2, r24	; 0x02
    ab90:	9b 83       	std	Y+3, r25	; 0x03
    ab92:	e9 cf       	rjmp	.-46     	; 0xab66 <_Z12lb_send_textPc+0x4a>
    ab94:	0e 94 99 53 	call	0xa732	; 0xa732 <_Z19nextEmptyLBTxBufferv>
    ab98:	8c 83       	std	Y+4, r24	; 0x04
    ab9a:	9d 83       	std	Y+5, r25	; 0x05
    ab9c:	dc cf       	rjmp	.-72     	; 0xab56 <_Z12lb_send_textPc+0x3a>
    ab9e:	8c 81       	ldd	r24, Y+4	; 0x04
    aba0:	9d 81       	ldd	r25, Y+5	; 0x05
    aba2:	89 2b       	or	r24, r25
    aba4:	89 f0       	breq	.+34     	; 0xabc8 <_Z12lb_send_textPc+0xac>
    aba6:	8f 81       	ldd	r24, Y+7	; 0x07
    aba8:	8f 93       	push	r24
    abaa:	8e 81       	ldd	r24, Y+6	; 0x06
    abac:	8f 93       	push	r24
    abae:	8d 81       	ldd	r24, Y+5	; 0x05
    abb0:	8f 93       	push	r24
    abb2:	8c 81       	ldd	r24, Y+4	; 0x04
    abb4:	8f 93       	push	r24
    abb6:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    abba:	0f 90       	pop	r0
    abbc:	0f 90       	pop	r0
    abbe:	0f 90       	pop	r0
    abc0:	0f 90       	pop	r0
    abc2:	0e 94 79 54 	call	0xa8f2	; 0xa8f2 <_ZL16linkbus_start_txv>
    abc6:	19 82       	std	Y+1, r1	; 0x01
    abc8:	89 81       	ldd	r24, Y+1	; 0x01
    abca:	27 96       	adiw	r28, 0x07	; 7
    abcc:	cd bf       	out	0x3d, r28	; 61
    abce:	de bf       	out	0x3e, r29	; 62
    abd0:	df 91       	pop	r29
    abd2:	cf 91       	pop	r28
    abd4:	08 95       	ret

0000abd6 <_Z11lb_send_msg13LBMessageTypePKcPc>:
    abd6:	cf 93       	push	r28
    abd8:	df 93       	push	r29
    abda:	cd b7       	in	r28, 0x3d	; 61
    abdc:	de b7       	in	r29, 0x3e	; 62
    abde:	27 97       	sbiw	r28, 0x07	; 7
    abe0:	cd bf       	out	0x3d, r28	; 61
    abe2:	de bf       	out	0x3e, r29	; 62
    abe4:	8b 83       	std	Y+3, r24	; 0x03
    abe6:	6c 83       	std	Y+4, r22	; 0x04
    abe8:	7d 83       	std	Y+5, r23	; 0x05
    abea:	4e 83       	std	Y+6, r20	; 0x06
    abec:	5f 83       	std	Y+7, r21	; 0x07
    abee:	84 e2       	ldi	r24, 0x24	; 36
    abf0:	89 83       	std	Y+1, r24	; 0x01
    abf2:	8b e3       	ldi	r24, 0x3B	; 59
    abf4:	8a 83       	std	Y+2, r24	; 0x02
    abf6:	8b 81       	ldd	r24, Y+3	; 0x03
    abf8:	83 30       	cpi	r24, 0x03	; 3
    abfa:	19 f4       	brne	.+6      	; 0xac02 <_Z11lb_send_msg13LBMessageTypePKcPc+0x2c>
    abfc:	81 e2       	ldi	r24, 0x21	; 33
    abfe:	89 83       	std	Y+1, r24	; 0x01
    ac00:	05 c0       	rjmp	.+10     	; 0xac0c <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    ac02:	8b 81       	ldd	r24, Y+3	; 0x03
    ac04:	82 30       	cpi	r24, 0x02	; 2
    ac06:	11 f4       	brne	.+4      	; 0xac0c <_Z11lb_send_msg13LBMessageTypePKcPc+0x36>
    ac08:	8f e3       	ldi	r24, 0x3F	; 63
    ac0a:	8a 83       	std	Y+2, r24	; 0x02
    ac0c:	8a 81       	ldd	r24, Y+2	; 0x02
    ac0e:	28 2f       	mov	r18, r24
    ac10:	30 e0       	ldi	r19, 0x00	; 0
    ac12:	89 81       	ldd	r24, Y+1	; 0x01
    ac14:	88 2f       	mov	r24, r24
    ac16:	90 e0       	ldi	r25, 0x00	; 0
    ac18:	43 2f       	mov	r20, r19
    ac1a:	4f 93       	push	r20
    ac1c:	2f 93       	push	r18
    ac1e:	2f 81       	ldd	r18, Y+7	; 0x07
    ac20:	2f 93       	push	r18
    ac22:	2e 81       	ldd	r18, Y+6	; 0x06
    ac24:	2f 93       	push	r18
    ac26:	2d 81       	ldd	r18, Y+5	; 0x05
    ac28:	2f 93       	push	r18
    ac2a:	2c 81       	ldd	r18, Y+4	; 0x04
    ac2c:	2f 93       	push	r18
    ac2e:	29 2f       	mov	r18, r25
    ac30:	2f 93       	push	r18
    ac32:	8f 93       	push	r24
    ac34:	8b ea       	ldi	r24, 0xAB	; 171
    ac36:	94 e4       	ldi	r25, 0x44	; 68
    ac38:	89 2f       	mov	r24, r25
    ac3a:	8f 93       	push	r24
    ac3c:	8b ea       	ldi	r24, 0xAB	; 171
    ac3e:	94 e4       	ldi	r25, 0x44	; 68
    ac40:	8f 93       	push	r24
    ac42:	86 ee       	ldi	r24, 0xE6	; 230
    ac44:	97 e4       	ldi	r25, 0x47	; 71
    ac46:	89 2f       	mov	r24, r25
    ac48:	8f 93       	push	r24
    ac4a:	86 ee       	ldi	r24, 0xE6	; 230
    ac4c:	97 e4       	ldi	r25, 0x47	; 71
    ac4e:	8f 93       	push	r24
    ac50:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    ac54:	8d b7       	in	r24, 0x3d	; 61
    ac56:	9e b7       	in	r25, 0x3e	; 62
    ac58:	0c 96       	adiw	r24, 0x0c	; 12
    ac5a:	cd bf       	out	0x3d, r28	; 61
    ac5c:	de bf       	out	0x3e, r29	; 62
    ac5e:	86 ee       	ldi	r24, 0xE6	; 230
    ac60:	97 e4       	ldi	r25, 0x47	; 71
    ac62:	0e 94 8e 55 	call	0xab1c	; 0xab1c <_Z12lb_send_textPc>
    ac66:	00 00       	nop
    ac68:	27 96       	adiw	r28, 0x07	; 7
    ac6a:	cd bf       	out	0x3d, r28	; 61
    ac6c:	de bf       	out	0x3e, r29	; 62
    ac6e:	df 91       	pop	r29
    ac70:	cf 91       	pop	r28
    ac72:	08 95       	ret

0000ac74 <_Z16lb_broadcast_numjPKc>:


void lb_broadcast_num(uint16_t data, const char* str)
{
    ac74:	cf 93       	push	r28
    ac76:	df 93       	push	r29
    ac78:	cd b7       	in	r28, 0x3d	; 61
    ac7a:	de b7       	in	r29, 0x3e	; 62
    ac7c:	2a 97       	sbiw	r28, 0x0a	; 10
    ac7e:	cd bf       	out	0x3d, r28	; 61
    ac80:	de bf       	out	0x3e, r29	; 62
    ac82:	8f 83       	std	Y+7, r24	; 0x07
    ac84:	98 87       	std	Y+8, r25	; 0x08
    ac86:	69 87       	std	Y+9, r22	; 0x09
    ac88:	7a 87       	std	Y+10, r23	; 0x0a
	char t[6] = "\0";
    ac8a:	80 91 c5 44 	lds	r24, 0x44C5	; 0x8044c5 <g_80m_power_table+0x488>
    ac8e:	90 91 c6 44 	lds	r25, 0x44C6	; 0x8044c6 <g_80m_power_table+0x489>
    ac92:	89 83       	std	Y+1, r24	; 0x01
    ac94:	9a 83       	std	Y+2, r25	; 0x02
    ac96:	24 e0       	ldi	r18, 0x04	; 4
    ac98:	ce 01       	movw	r24, r28
    ac9a:	03 96       	adiw	r24, 0x03	; 3
    ac9c:	fc 01       	movw	r30, r24
    ac9e:	32 2f       	mov	r19, r18
    aca0:	11 92       	st	Z+, r1
    aca2:	3a 95       	dec	r19
    aca4:	e9 f7       	brne	.-6      	; 0xaca0 <_Z16lb_broadcast_numjPKc+0x2c>

	sprintf(t, "%u", data);
    aca6:	88 85       	ldd	r24, Y+8	; 0x08
    aca8:	8f 93       	push	r24
    acaa:	8f 81       	ldd	r24, Y+7	; 0x07
    acac:	8f 93       	push	r24
    acae:	8b eb       	ldi	r24, 0xBB	; 187
    acb0:	94 e4       	ldi	r25, 0x44	; 68
    acb2:	89 2f       	mov	r24, r25
    acb4:	8f 93       	push	r24
    acb6:	8b eb       	ldi	r24, 0xBB	; 187
    acb8:	94 e4       	ldi	r25, 0x44	; 68
    acba:	8f 93       	push	r24
    acbc:	ce 01       	movw	r24, r28
    acbe:	01 96       	adiw	r24, 0x01	; 1
    acc0:	9f 93       	push	r25
    acc2:	8f 93       	push	r24
    acc4:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    acc8:	0f 90       	pop	r0
    acca:	0f 90       	pop	r0
    accc:	0f 90       	pop	r0
    acce:	0f 90       	pop	r0
    acd0:	0f 90       	pop	r0
    acd2:	0f 90       	pop	r0
	g_tempMsgBuff[0] = '\0';
    acd4:	10 92 e6 47 	sts	0x47E6, r1	; 0x8047e6 <_ZL13g_tempMsgBuff>

	if(str)
    acd8:	89 85       	ldd	r24, Y+9	; 0x09
    acda:	9a 85       	ldd	r25, Y+10	; 0x0a
    acdc:	89 2b       	or	r24, r25
    acde:	e9 f0       	breq	.+58     	; 0xad1a <_Z16lb_broadcast_numjPKc+0xa6>
	{
		sprintf(g_tempMsgBuff, "%s,%s;", str, t);
    ace0:	ce 01       	movw	r24, r28
    ace2:	01 96       	adiw	r24, 0x01	; 1
    ace4:	9f 93       	push	r25
    ace6:	8f 93       	push	r24
    ace8:	8a 85       	ldd	r24, Y+10	; 0x0a
    acea:	8f 93       	push	r24
    acec:	89 85       	ldd	r24, Y+9	; 0x09
    acee:	8f 93       	push	r24
    acf0:	8e eb       	ldi	r24, 0xBE	; 190
    acf2:	94 e4       	ldi	r25, 0x44	; 68
    acf4:	89 2f       	mov	r24, r25
    acf6:	8f 93       	push	r24
    acf8:	8e eb       	ldi	r24, 0xBE	; 190
    acfa:	94 e4       	ldi	r25, 0x44	; 68
    acfc:	8f 93       	push	r24
    acfe:	86 ee       	ldi	r24, 0xE6	; 230
    ad00:	97 e4       	ldi	r25, 0x47	; 71
    ad02:	89 2f       	mov	r24, r25
    ad04:	8f 93       	push	r24
    ad06:	86 ee       	ldi	r24, 0xE6	; 230
    ad08:	97 e4       	ldi	r25, 0x47	; 71
    ad0a:	8f 93       	push	r24
    ad0c:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    ad10:	8d b7       	in	r24, 0x3d	; 61
    ad12:	9e b7       	in	r25, 0x3e	; 62
    ad14:	08 96       	adiw	r24, 0x08	; 8
    ad16:	cd bf       	out	0x3d, r28	; 61
    ad18:	de bf       	out	0x3e, r29	; 62
	}

	if(g_tempMsgBuff[0]) lb_send_text(g_tempMsgBuff);
    ad1a:	80 91 e6 47 	lds	r24, 0x47E6	; 0x8047e6 <_ZL13g_tempMsgBuff>
    ad1e:	88 23       	and	r24, r24
    ad20:	21 f0       	breq	.+8      	; 0xad2a <_Z16lb_broadcast_numjPKc+0xb6>
    ad22:	86 ee       	ldi	r24, 0xE6	; 230
    ad24:	97 e4       	ldi	r25, 0x47	; 71
    ad26:	0e 94 8e 55 	call	0xab1c	; 0xab1c <_Z12lb_send_textPc>
}
    ad2a:	00 00       	nop
    ad2c:	2a 96       	adiw	r28, 0x0a	; 10
    ad2e:	cd bf       	out	0x3d, r28	; 61
    ad30:	de bf       	out	0x3e, r29	; 62
    ad32:	df 91       	pop	r29
    ad34:	cf 91       	pop	r28
    ad36:	08 95       	ret

0000ad38 <_Z9makeMorsePcPbS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a bool indicating whether a CW carrier should be sent
 *  Pass in a pointer to a bool in the second and third arguments:
 */
bool makeMorse(char* s, bool* repeating, bool* finished)
{
    ad38:	cf 93       	push	r28
    ad3a:	df 93       	push	r29
    ad3c:	cd b7       	in	r28, 0x3d	; 61
    ad3e:	de b7       	in	r29, 0x3e	; 62
    ad40:	28 97       	sbiw	r28, 0x08	; 8
    ad42:	cd bf       	out	0x3d, r28	; 61
    ad44:	de bf       	out	0x3e, r29	; 62
    ad46:	8b 83       	std	Y+3, r24	; 0x03
    ad48:	9c 83       	std	Y+4, r25	; 0x04
    ad4a:	6d 83       	std	Y+5, r22	; 0x05
    ad4c:	7e 83       	std	Y+6, r23	; 0x06
    ad4e:	4f 83       	std	Y+7, r20	; 0x07
    ad50:	58 87       	std	Y+8, r21	; 0x08
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static bool completedString = false;
	static bool carrierOn = false;
	static bool holdKeyDown = false;

	if(s)   /* load a new NULL-terminated string to send */
    ad52:	8b 81       	ldd	r24, Y+3	; 0x03
    ad54:	9c 81       	ldd	r25, Y+4	; 0x04
    ad56:	89 2b       	or	r24, r25
    ad58:	09 f4       	brne	.+2      	; 0xad5c <_Z9makeMorsePcPbS0_+0x24>
    ad5a:	4a c0       	rjmp	.+148    	; 0xadf0 <_Z9makeMorsePcPbS0_+0xb8>
	{
		holdKeyDown = false;
    ad5c:	10 92 69 49 	sts	0x4969, r1	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>

		if(repeating)
    ad60:	8d 81       	ldd	r24, Y+5	; 0x05
    ad62:	9e 81       	ldd	r25, Y+6	; 0x06
    ad64:	89 2b       	or	r24, r25
    ad66:	31 f0       	breq	.+12     	; 0xad74 <_Z9makeMorsePcPbS0_+0x3c>
		{
			repeat = *repeating;
    ad68:	8d 81       	ldd	r24, Y+5	; 0x05
    ad6a:	9e 81       	ldd	r25, Y+6	; 0x06
    ad6c:	fc 01       	movw	r30, r24
    ad6e:	80 81       	ld	r24, Z
    ad70:	80 93 2a 40 	sts	0x402A, r24	; 0x80402a <_ZZ9makeMorsePcPbS0_E6repeat>
		}

		if(*s)
    ad74:	8b 81       	ldd	r24, Y+3	; 0x03
    ad76:	9c 81       	ldd	r25, Y+4	; 0x04
    ad78:	fc 01       	movw	r30, r24
    ad7a:	80 81       	ld	r24, Z
    ad7c:	88 23       	and	r24, r24
    ad7e:	21 f1       	breq	.+72     	; 0xadc8 <_Z9makeMorsePcPbS0_+0x90>
		{
			str = s;
    ad80:	8b 81       	ldd	r24, Y+3	; 0x03
    ad82:	9c 81       	ldd	r25, Y+4	; 0x04
    ad84:	80 93 6a 49 	sts	0x496A, r24	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    ad88:	90 93 6b 49 	sts	0x496B, r25	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
			c = ' ';
    ad8c:	80 e2       	ldi	r24, 0x20	; 32
    ad8e:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <_ZZ9makeMorsePcPbS0_E1c>
			morseInProgress = getMorseChar(*str);
    ad92:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    ad96:	90 91 6b 49 	lds	r25, 0x496B	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    ad9a:	fc 01       	movw	r30, r24
    ad9c:	80 81       	ld	r24, Z
    ad9e:	0e 94 44 58 	call	0xb088	; 0xb088 <_Z12getMorseCharc>
    ada2:	a8 2f       	mov	r26, r24
    ada4:	cb 01       	movw	r24, r22
    ada6:	80 93 6c 49 	sts	0x496C, r24	; 0x80496c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    adaa:	90 93 6d 49 	sts	0x496D, r25	; 0x80496d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    adae:	a0 93 6e 49 	sts	0x496E, r26	; 0x80496e <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
			charIndex = 0;
    adb2:	10 92 6f 49 	sts	0x496F, r1	; 0x80496f <_ZZ9makeMorsePcPbS0_E9charIndex>
			symbolIndex = 0;
    adb6:	10 92 70 49 	sts	0x4970, r1	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			elementIndex = 0;
    adba:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
			addedSpace = 0;
    adbe:	10 92 72 49 	sts	0x4972, r1	; 0x804972 <_ZZ9makeMorsePcPbS0_E10addedSpace>
			completedString = false;
    adc2:	10 92 73 49 	sts	0x4973, r1	; 0x804973 <_ZZ9makeMorsePcPbS0_E15completedString>
    adc6:	10 c0       	rjmp	.+32     	; 0xade8 <_Z9makeMorsePcPbS0_+0xb0>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    adc8:	10 92 6a 49 	sts	0x496A, r1	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    adcc:	10 92 6b 49 	sts	0x496B, r1	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
			completedString = true;
    add0:	81 e0       	ldi	r24, 0x01	; 1
    add2:	80 93 73 49 	sts	0x4973, r24	; 0x804973 <_ZZ9makeMorsePcPbS0_E15completedString>
			if(finished)
    add6:	8f 81       	ldd	r24, Y+7	; 0x07
    add8:	98 85       	ldd	r25, Y+8	; 0x08
    adda:	89 2b       	or	r24, r25
    addc:	29 f0       	breq	.+10     	; 0xade8 <_Z9makeMorsePcPbS0_+0xb0>
			{
				*finished = true;
    adde:	8f 81       	ldd	r24, Y+7	; 0x07
    ade0:	98 85       	ldd	r25, Y+8	; 0x08
    ade2:	21 e0       	ldi	r18, 0x01	; 1
    ade4:	fc 01       	movw	r30, r24
    ade6:	20 83       	st	Z, r18
			}
		}

		carrierOn = OFF;
    ade8:	10 92 74 49 	sts	0x4974, r1	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>
		return( OFF);
    adec:	80 e0       	ldi	r24, 0x00	; 0
    adee:	f6 c0       	rjmp	.+492    	; 0xafdc <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else if(str)
    adf0:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    adf4:	90 91 6b 49 	lds	r25, 0x496B	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    adf8:	89 2b       	or	r24, r25
    adfa:	09 f4       	brne	.+2      	; 0xadfe <_Z9makeMorsePcPbS0_+0xc6>
    adfc:	dd c0       	rjmp	.+442    	; 0xafb8 <_Z9makeMorsePcPbS0_+0x280>
	{
		if(repeating)
    adfe:	8d 81       	ldd	r24, Y+5	; 0x05
    ae00:	9e 81       	ldd	r25, Y+6	; 0x06
    ae02:	89 2b       	or	r24, r25
    ae04:	31 f0       	breq	.+12     	; 0xae12 <_Z9makeMorsePcPbS0_+0xda>
		{
			*repeating = repeat;
    ae06:	20 91 2a 40 	lds	r18, 0x402A	; 0x80402a <_ZZ9makeMorsePcPbS0_E6repeat>
    ae0a:	8d 81       	ldd	r24, Y+5	; 0x05
    ae0c:	9e 81       	ldd	r25, Y+6	; 0x06
    ae0e:	fc 01       	movw	r30, r24
    ae10:	20 83       	st	Z, r18
		}

		if(completedString)
    ae12:	80 91 73 49 	lds	r24, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E15completedString>
    ae16:	88 23       	and	r24, r24
    ae18:	69 f0       	breq	.+26     	; 0xae34 <_Z9makeMorsePcPbS0_+0xfc>
		{
			if(finished)
    ae1a:	8f 81       	ldd	r24, Y+7	; 0x07
    ae1c:	98 85       	ldd	r25, Y+8	; 0x08
    ae1e:	89 2b       	or	r24, r25
    ae20:	39 f0       	breq	.+14     	; 0xae30 <_Z9makeMorsePcPbS0_+0xf8>
			{
				*finished = true;
    ae22:	8f 81       	ldd	r24, Y+7	; 0x07
    ae24:	98 85       	ldd	r25, Y+8	; 0x08
    ae26:	21 e0       	ldi	r18, 0x01	; 1
    ae28:	fc 01       	movw	r30, r24
    ae2a:	20 83       	st	Z, r18
				holdKeyDown = false;
    ae2c:	10 92 69 49 	sts	0x4969, r1	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
			}
			return( OFF);
    ae30:	80 e0       	ldi	r24, 0x00	; 0
    ae32:	d4 c0       	rjmp	.+424    	; 0xafdc <_Z9makeMorsePcPbS0_+0x2a4>
		}

		if(elementIndex)
    ae34:	80 91 71 49 	lds	r24, 0x4971	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ae38:	88 23       	and	r24, r24
    ae3a:	31 f0       	breq	.+12     	; 0xae48 <_Z9makeMorsePcPbS0_+0x110>
		{
			elementIndex--;
    ae3c:	80 91 71 49 	lds	r24, 0x4971	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ae40:	81 50       	subi	r24, 0x01	; 1
    ae42:	80 93 71 49 	sts	0x4971, r24	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    ae46:	ae c0       	rjmp	.+348    	; 0xafa4 <_Z9makeMorsePcPbS0_+0x26c>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    ae48:	80 91 74 49 	lds	r24, 0x4974	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>
    ae4c:	88 23       	and	r24, r24
    ae4e:	a1 f0       	breq	.+40     	; 0xae78 <_Z9makeMorsePcPbS0_+0x140>
    ae50:	90 91 69 49 	lds	r25, 0x4969	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    ae54:	81 e0       	ldi	r24, 0x01	; 1
    ae56:	89 27       	eor	r24, r25
    ae58:	88 23       	and	r24, r24
    ae5a:	71 f0       	breq	.+28     	; 0xae78 <_Z9makeMorsePcPbS0_+0x140>
		{
			carrierOn = false;
    ae5c:	10 92 74 49 	sts	0x4974, r1	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    ae60:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    ae64:	88 23       	and	r24, r24
    ae66:	09 f4       	brne	.+2      	; 0xae6a <_Z9makeMorsePcPbS0_+0x132>
    ae68:	9d c0       	rjmp	.+314    	; 0xafa4 <_Z9makeMorsePcPbS0_+0x26c>
			{
				elementIndex = addedSpace;
    ae6a:	80 91 72 49 	lds	r24, 0x4972	; 0x804972 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    ae6e:	80 93 71 49 	sts	0x4971, r24	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				addedSpace = 0;
    ae72:	10 92 72 49 	sts	0x4972, r1	; 0x804972 <_ZZ9makeMorsePcPbS0_E10addedSpace>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
		{
			carrierOn = false;
			/* wait one element = inter-symbol space */
			if(addedSpace)
    ae76:	96 c0       	rjmp	.+300    	; 0xafa4 <_Z9makeMorsePcPbS0_+0x26c>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    ae78:	90 91 6d 49 	lds	r25, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    ae7c:	80 91 70 49 	lds	r24, 0x4970	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    ae80:	89 17       	cp	r24, r25
    ae82:	08 f4       	brcc	.+2      	; 0xae86 <_Z9makeMorsePcPbS0_+0x14e>
    ae84:	4a c0       	rjmp	.+148    	; 0xaf1a <_Z9makeMorsePcPbS0_+0x1e2>
			{
				c = (*(str + ++charIndex));
    ae86:	20 91 6a 49 	lds	r18, 0x496A	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    ae8a:	30 91 6b 49 	lds	r19, 0x496B	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    ae8e:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ9makeMorsePcPbS0_E9charIndex>
    ae92:	8f 5f       	subi	r24, 0xFF	; 255
    ae94:	80 93 6f 49 	sts	0x496F, r24	; 0x80496f <_ZZ9makeMorsePcPbS0_E9charIndex>
    ae98:	80 91 6f 49 	lds	r24, 0x496F	; 0x80496f <_ZZ9makeMorsePcPbS0_E9charIndex>
    ae9c:	88 2f       	mov	r24, r24
    ae9e:	90 e0       	ldi	r25, 0x00	; 0
    aea0:	82 0f       	add	r24, r18
    aea2:	93 1f       	adc	r25, r19
    aea4:	fc 01       	movw	r30, r24
    aea6:	80 81       	ld	r24, Z
    aea8:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <_ZZ9makeMorsePcPbS0_E1c>

				if(!c)  /* wrap to beginning of text */
    aeac:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <_ZZ9makeMorsePcPbS0_E1c>
    aeb0:	88 23       	and	r24, r24
    aeb2:	29 f5       	brne	.+74     	; 0xaefe <_Z9makeMorsePcPbS0_+0x1c6>
				{
					if(repeat)
    aeb4:	80 91 2a 40 	lds	r24, 0x402A	; 0x80402a <_ZZ9makeMorsePcPbS0_E6repeat>
    aeb8:	88 23       	and	r24, r24
    aeba:	59 f0       	breq	.+22     	; 0xaed2 <_Z9makeMorsePcPbS0_+0x19a>
					{
						c = *str;
    aebc:	80 91 6a 49 	lds	r24, 0x496A	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    aec0:	90 91 6b 49 	lds	r25, 0x496B	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
    aec4:	fc 01       	movw	r30, r24
    aec6:	80 81       	ld	r24, Z
    aec8:	80 93 2b 40 	sts	0x402B, r24	; 0x80402b <_ZZ9makeMorsePcPbS0_E1c>
						charIndex = 0;
    aecc:	10 92 6f 49 	sts	0x496F, r1	; 0x80496f <_ZZ9makeMorsePcPbS0_E9charIndex>
    aed0:	16 c0       	rjmp	.+44     	; 0xaefe <_Z9makeMorsePcPbS0_+0x1c6>
					}
					else
					{
						str = NULL;
    aed2:	10 92 6a 49 	sts	0x496A, r1	; 0x80496a <_ZZ9makeMorsePcPbS0_E3str>
    aed6:	10 92 6b 49 	sts	0x496B, r1	; 0x80496b <_ZZ9makeMorsePcPbS0_E3str+0x1>
						carrierOn = OFF;
    aeda:	10 92 74 49 	sts	0x4974, r1	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>
						completedString = true;
    aede:	81 e0       	ldi	r24, 0x01	; 1
    aee0:	80 93 73 49 	sts	0x4973, r24	; 0x804973 <_ZZ9makeMorsePcPbS0_E15completedString>
						if(finished)
    aee4:	8f 81       	ldd	r24, Y+7	; 0x07
    aee6:	98 85       	ldd	r25, Y+8	; 0x08
    aee8:	89 2b       	or	r24, r25
    aeea:	29 f0       	breq	.+10     	; 0xaef6 <_Z9makeMorsePcPbS0_+0x1be>
						{
							*finished = true;
    aeec:	8f 81       	ldd	r24, Y+7	; 0x07
    aeee:	98 85       	ldd	r25, Y+8	; 0x08
    aef0:	21 e0       	ldi	r18, 0x01	; 1
    aef2:	fc 01       	movw	r30, r24
    aef4:	20 83       	st	Z, r18
						}
						holdKeyDown = false;
    aef6:	10 92 69 49 	sts	0x4969, r1	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
						return( OFF );
    aefa:	80 e0       	ldi	r24, 0x00	; 0
    aefc:	6f c0       	rjmp	.+222    	; 0xafdc <_Z9makeMorsePcPbS0_+0x2a4>
					}
				}

				morseInProgress = getMorseChar(c);
    aefe:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <_ZZ9makeMorsePcPbS0_E1c>
    af02:	0e 94 44 58 	call	0xb088	; 0xb088 <_Z12getMorseCharc>
    af06:	a8 2f       	mov	r26, r24
    af08:	cb 01       	movw	r24, r22
    af0a:	80 93 6c 49 	sts	0x496C, r24	; 0x80496c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    af0e:	90 93 6d 49 	sts	0x496D, r25	; 0x80496d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    af12:	a0 93 6e 49 	sts	0x496E, r26	; 0x80496e <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    af16:	10 92 70 49 	sts	0x4970, r1	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    af1a:	80 91 6c 49 	lds	r24, 0x496C	; 0x80496c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    af1e:	8d 3f       	cpi	r24, 0xFD	; 253
    af20:	70 f5       	brcc	.+92     	; 0xaf7e <_Z9makeMorsePcPbS0_+0x246>
			{
				bool isDah = morseInProgress.pattern & (1 << symbolIndex++);
    af22:	80 91 6c 49 	lds	r24, 0x496C	; 0x80496c <_ZZ9makeMorsePcPbS0_E15morseInProgress>
    af26:	88 2f       	mov	r24, r24
    af28:	90 e0       	ldi	r25, 0x00	; 0
    af2a:	20 91 70 49 	lds	r18, 0x4970	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    af2e:	31 e0       	ldi	r19, 0x01	; 1
    af30:	32 0f       	add	r19, r18
    af32:	30 93 70 49 	sts	0x4970, r19	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    af36:	22 2f       	mov	r18, r18
    af38:	30 e0       	ldi	r19, 0x00	; 0
    af3a:	02 c0       	rjmp	.+4      	; 0xaf40 <_Z9makeMorsePcPbS0_+0x208>
    af3c:	95 95       	asr	r25
    af3e:	87 95       	ror	r24
    af40:	2a 95       	dec	r18
    af42:	e2 f7       	brpl	.-8      	; 0xaf3c <_Z9makeMorsePcPbS0_+0x204>
    af44:	81 70       	andi	r24, 0x01	; 1
    af46:	99 27       	eor	r25, r25
    af48:	21 e0       	ldi	r18, 0x01	; 1
    af4a:	89 2b       	or	r24, r25
    af4c:	09 f4       	brne	.+2      	; 0xaf50 <_Z9makeMorsePcPbS0_+0x218>
    af4e:	20 e0       	ldi	r18, 0x00	; 0
    af50:	29 83       	std	Y+1, r18	; 0x01

				if(isDah)
    af52:	89 81       	ldd	r24, Y+1	; 0x01
    af54:	88 23       	and	r24, r24
    af56:	21 f0       	breq	.+8      	; 0xaf60 <_Z9makeMorsePcPbS0_+0x228>
				{
					elementIndex = 2;
    af58:	82 e0       	ldi	r24, 0x02	; 2
    af5a:	80 93 71 49 	sts	0x4971, r24	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    af5e:	02 c0       	rjmp	.+4      	; 0xaf64 <_Z9makeMorsePcPbS0_+0x22c>
				}
				else
				{
					elementIndex = 0;
    af60:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}

				carrierOn = true;
    af64:	81 e0       	ldi	r24, 0x01	; 1
    af66:	80 93 74 49 	sts	0x4974, r24	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    af6a:	90 91 6d 49 	lds	r25, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    af6e:	80 91 70 49 	lds	r24, 0x4970	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
    af72:	89 17       	cp	r24, r25
    af74:	b8 f0       	brcs	.+46     	; 0xafa4 <_Z9makeMorsePcPbS0_+0x26c>
				{
					addedSpace = 2;
    af76:	82 e0       	ldi	r24, 0x02	; 2
    af78:	80 93 72 49 	sts	0x4972, r24	; 0x804972 <_ZZ9makeMorsePcPbS0_E10addedSpace>
    af7c:	13 c0       	rjmp	.+38     	; 0xafa4 <_Z9makeMorsePcPbS0_+0x26c>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    af7e:	80 91 6d 49 	lds	r24, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    af82:	8a 83       	std	Y+2, r24	; 0x02
				symbolIndex = 255;  /* ensure the next character gets read */
    af84:	8f ef       	ldi	r24, 0xFF	; 255
    af86:	80 93 70 49 	sts	0x4970, r24	; 0x804970 <_ZZ9makeMorsePcPbS0_E11symbolIndex>
				carrierOn = false;
    af8a:	10 92 74 49 	sts	0x4974, r1	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>
				if(sym >= 4 )
    af8e:	8a 81       	ldd	r24, Y+2	; 0x02
    af90:	84 30       	cpi	r24, 0x04	; 4
    af92:	30 f0       	brcs	.+12     	; 0xafa0 <_Z9makeMorsePcPbS0_+0x268>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    af94:	80 91 6d 49 	lds	r24, 0x496D	; 0x80496d <_ZZ9makeMorsePcPbS0_E15morseInProgress+0x1>
    af98:	84 50       	subi	r24, 0x04	; 4
    af9a:	80 93 71 49 	sts	0x4971, r24	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
    af9e:	02 c0       	rjmp	.+4      	; 0xafa4 <_Z9makeMorsePcPbS0_+0x26c>
				}
				else
				{
					elementIndex = 0;
    afa0:	10 92 71 49 	sts	0x4971, r1	; 0x804971 <_ZZ9makeMorsePcPbS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    afa4:	80 91 2b 40 	lds	r24, 0x402B	; 0x80402b <_ZZ9makeMorsePcPbS0_E1c>
    afa8:	8c 33       	cpi	r24, 0x3C	; 60
    afaa:	21 f4       	brne	.+8      	; 0xafb4 <_Z9makeMorsePcPbS0_+0x27c>
		{
			holdKeyDown = true;
    afac:	81 e0       	ldi	r24, 0x01	; 1
    afae:	80 93 69 49 	sts	0x4969, r24	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    afb2:	02 c0       	rjmp	.+4      	; 0xafb8 <_Z9makeMorsePcPbS0_+0x280>
		}
		else
		{
			holdKeyDown = false;
    afb4:	10 92 69 49 	sts	0x4969, r1	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
		}
	}

	if(finished)
    afb8:	8f 81       	ldd	r24, Y+7	; 0x07
    afba:	98 85       	ldd	r25, Y+8	; 0x08
    afbc:	89 2b       	or	r24, r25
    afbe:	31 f0       	breq	.+12     	; 0xafcc <_Z9makeMorsePcPbS0_+0x294>
	{
		*finished = completedString;
    afc0:	20 91 73 49 	lds	r18, 0x4973	; 0x804973 <_ZZ9makeMorsePcPbS0_E15completedString>
    afc4:	8f 81       	ldd	r24, Y+7	; 0x07
    afc6:	98 85       	ldd	r25, Y+8	; 0x08
    afc8:	fc 01       	movw	r30, r24
    afca:	20 83       	st	Z, r18
	}

	if(holdKeyDown)
    afcc:	80 91 69 49 	lds	r24, 0x4969	; 0x804969 <_ZZ9makeMorsePcPbS0_E11holdKeyDown>
    afd0:	88 23       	and	r24, r24
    afd2:	11 f0       	breq	.+4      	; 0xafd8 <_Z9makeMorsePcPbS0_+0x2a0>
	{
		return(true);
    afd4:	81 e0       	ldi	r24, 0x01	; 1
    afd6:	02 c0       	rjmp	.+4      	; 0xafdc <_Z9makeMorsePcPbS0_+0x2a4>
	}
	else
	{
		return( carrierOn);
    afd8:	80 91 74 49 	lds	r24, 0x4974	; 0x804974 <_ZZ9makeMorsePcPbS0_E9carrierOn>
	}
}
    afdc:	28 96       	adiw	r28, 0x08	; 8
    afde:	cd bf       	out	0x3d, r28	; 61
    afe0:	de bf       	out	0x3e, r29	; 62
    afe2:	df 91       	pop	r29
    afe4:	cf 91       	pop	r28
    afe6:	08 95       	ret

0000afe8 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    afe8:	cf 93       	push	r28
    afea:	df 93       	push	r29
    afec:	cd b7       	in	r28, 0x3d	; 61
    afee:	de b7       	in	r29, 0x3e	; 62
    aff0:	2b 97       	sbiw	r28, 0x0b	; 11
    aff2:	cd bf       	out	0x3d, r28	; 61
    aff4:	de bf       	out	0x3e, r29	; 62
    aff6:	88 87       	std	Y+8, r24	; 0x08
    aff8:	99 87       	std	Y+9, r25	; 0x09
    affa:	6a 87       	std	Y+10, r22	; 0x0a
    affc:	7b 87       	std	Y+11, r23	; 0x0b
	uint8_t elements = 0;
    affe:	19 82       	std	Y+1, r1	; 0x01
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b000:	1a 82       	std	Y+2, r1	; 0x02
    b002:	1b 82       	std	Y+3, r1	; 0x03
    b004:	8a 81       	ldd	r24, Y+2	; 0x02
    b006:	9b 81       	ldd	r25, Y+3	; 0x03
    b008:	44 97       	sbiw	r24, 0x14	; 20
    b00a:	2c f5       	brge	.+74     	; 0xb056 <_Z26timeRequiredToSendStrAtWPMPcj+0x6e>
	{
		c = str[i];
    b00c:	8a 81       	ldd	r24, Y+2	; 0x02
    b00e:	9b 81       	ldd	r25, Y+3	; 0x03
    b010:	28 85       	ldd	r18, Y+8	; 0x08
    b012:	39 85       	ldd	r19, Y+9	; 0x09
    b014:	82 0f       	add	r24, r18
    b016:	93 1f       	adc	r25, r19
    b018:	fc 01       	movw	r30, r24
    b01a:	80 81       	ld	r24, Z
    b01c:	8c 83       	std	Y+4, r24	; 0x04
		if(!c)
    b01e:	8c 81       	ldd	r24, Y+4	; 0x04
    b020:	88 23       	and	r24, r24
    b022:	c1 f0       	breq	.+48     	; 0xb054 <_Z26timeRequiredToSendStrAtWPMPcj+0x6c>
		{
			break;
		}
		m = getMorseChar(c);
    b024:	8c 81       	ldd	r24, Y+4	; 0x04
    b026:	0e 94 44 58 	call	0xb088	; 0xb088 <_Z12getMorseCharc>
    b02a:	a8 2f       	mov	r26, r24
    b02c:	cb 01       	movw	r24, r22
    b02e:	8d 83       	std	Y+5, r24	; 0x05
    b030:	9e 83       	std	Y+6, r25	; 0x06
    b032:	af 83       	std	Y+7, r26	; 0x07
		if(m.pattern < INTER_WORD_SPACE)
    b034:	8d 81       	ldd	r24, Y+5	; 0x05
    b036:	8d 3f       	cpi	r24, 0xFD	; 253
    b038:	18 f4       	brcc	.+6      	; 0xb040 <_Z26timeRequiredToSendStrAtWPMPcj+0x58>
		{
			elements += 3;
    b03a:	89 81       	ldd	r24, Y+1	; 0x01
    b03c:	8d 5f       	subi	r24, 0xFD	; 253
    b03e:	89 83       	std	Y+1, r24	; 0x01
		}
		elements += m.lengthInElements;
    b040:	8f 81       	ldd	r24, Y+7	; 0x07
    b042:	99 81       	ldd	r25, Y+1	; 0x01
    b044:	89 0f       	add	r24, r25
    b046:	89 83       	std	Y+1, r24	; 0x01
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    b048:	8a 81       	ldd	r24, Y+2	; 0x02
    b04a:	9b 81       	ldd	r25, Y+3	; 0x03
    b04c:	01 96       	adiw	r24, 0x01	; 1
    b04e:	8a 83       	std	Y+2, r24	; 0x02
    b050:	9b 83       	std	Y+3, r25	; 0x03
    b052:	d8 cf       	rjmp	.-80     	; 0xb004 <_Z26timeRequiredToSendStrAtWPMPcj+0x1c>
	{
		c = str[i];
		if(!c)
		{
			break;
    b054:	00 00       	nop
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    b056:	89 81       	ldd	r24, Y+1	; 0x01
    b058:	28 2f       	mov	r18, r24
    b05a:	30 e0       	ldi	r19, 0x00	; 0
    b05c:	80 eb       	ldi	r24, 0xB0	; 176
    b05e:	94 e0       	ldi	r25, 0x04	; 4
    b060:	4a 85       	ldd	r20, Y+10	; 0x0a
    b062:	5b 85       	ldd	r21, Y+11	; 0x0b
    b064:	ba 01       	movw	r22, r20
    b066:	0e 94 8a 75 	call	0xeb14	; 0xeb14 <__udivmodhi4>
    b06a:	cb 01       	movw	r24, r22
    b06c:	ac 01       	movw	r20, r24
    b06e:	24 9f       	mul	r18, r20
    b070:	c0 01       	movw	r24, r0
    b072:	25 9f       	mul	r18, r21
    b074:	90 0d       	add	r25, r0
    b076:	34 9f       	mul	r19, r20
    b078:	90 0d       	add	r25, r0
    b07a:	11 24       	eor	r1, r1
}
    b07c:	2b 96       	adiw	r28, 0x0b	; 11
    b07e:	cd bf       	out	0x3d, r28	; 61
    b080:	de bf       	out	0x3e, r29	; 62
    b082:	df 91       	pop	r29
    b084:	cf 91       	pop	r28
    b086:	08 95       	ret

0000b088 <_Z12getMorseCharc>:
 *  pattern = a sequence of up to 8 dit and dah symbols contained in an unsigned byte, sequentially read from LSB to MSB (first symbol is bit 0)
 *  lengthInSymbols = how many symbols (dits and dahs) the character contains; this is how many pattern bits are used to represent the character
 *  lengthInElements = how long (measured in "dit lengths") is the total character including all inter-symbol spaces.
 */
MorseCharacter getMorseChar(char c)
{
    b088:	cf 93       	push	r28
    b08a:	df 93       	push	r29
    b08c:	00 d0       	rcall	.+0      	; 0xb08e <_Z12getMorseCharc+0x6>
    b08e:	00 d0       	rcall	.+0      	; 0xb090 <_Z12getMorseCharc+0x8>
    b090:	cd b7       	in	r28, 0x3d	; 61
    b092:	de b7       	in	r29, 0x3e	; 62
    b094:	8c 83       	std	Y+4, r24	; 0x04
	MorseCharacter morse;

	switch( c )
    b096:	8c 81       	ldd	r24, Y+4	; 0x04
    b098:	88 2f       	mov	r24, r24
    b09a:	90 e0       	ldi	r25, 0x00	; 0
    b09c:	09 2e       	mov	r0, r25
    b09e:	00 0c       	add	r0, r0
    b0a0:	aa 0b       	sbc	r26, r26
    b0a2:	bb 0b       	sbc	r27, r27
    b0a4:	40 e2       	ldi	r20, 0x20	; 32
    b0a6:	50 e0       	ldi	r21, 0x00	; 0
    b0a8:	2c e5       	ldi	r18, 0x5C	; 92
    b0aa:	30 e0       	ldi	r19, 0x00	; 0
    b0ac:	84 1b       	sub	r24, r20
    b0ae:	95 0b       	sbc	r25, r21
    b0b0:	28 17       	cp	r18, r24
    b0b2:	39 07       	cpc	r19, r25
    b0b4:	08 f4       	brcc	.+2      	; 0xb0b8 <_Z12getMorseCharc+0x30>
    b0b6:	8f c1       	rjmp	.+798    	; 0xb3d6 <_Z12getMorseCharc+0x34e>
    b0b8:	8a 53       	subi	r24, 0x3A	; 58
    b0ba:	9f 4f       	sbci	r25, 0xFF	; 255
    b0bc:	fc 01       	movw	r30, r24
    b0be:	0c 94 f3 75 	jmp	0xebe6	; 0xebe6 <__tablejump2__>
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b0c2:	82 e0       	ldi	r24, 0x02	; 2
    b0c4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b0c6:	82 e0       	ldi	r24, 0x02	; 2
    b0c8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b0ca:	85 e0       	ldi	r24, 0x05	; 5
    b0cc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0ce:	87 c1       	rjmp	.+782    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b0d0:	81 e0       	ldi	r24, 0x01	; 1
    b0d2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b0d4:	84 e0       	ldi	r24, 0x04	; 4
    b0d6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b0d8:	89 e0       	ldi	r24, 0x09	; 9
    b0da:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0dc:	80 c1       	rjmp	.+768    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    b0de:	85 e0       	ldi	r24, 0x05	; 5
    b0e0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b0e2:	84 e0       	ldi	r24, 0x04	; 4
    b0e4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b0e6:	8b e0       	ldi	r24, 0x0B	; 11
    b0e8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0ea:	79 c1       	rjmp	.+754    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b0ec:	81 e0       	ldi	r24, 0x01	; 1
    b0ee:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b0f0:	83 e0       	ldi	r24, 0x03	; 3
    b0f2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b0f4:	87 e0       	ldi	r24, 0x07	; 7
    b0f6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b0f8:	72 c1       	rjmp	.+740    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b0fa:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 1;
    b0fc:	81 e0       	ldi	r24, 0x01	; 1
    b0fe:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 1;
    b100:	81 e0       	ldi	r24, 0x01	; 1
    b102:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b104:	6c c1       	rjmp	.+728    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    b106:	84 e0       	ldi	r24, 0x04	; 4
    b108:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b10a:	84 e0       	ldi	r24, 0x04	; 4
    b10c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b10e:	89 e0       	ldi	r24, 0x09	; 9
    b110:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b112:	65 c1       	rjmp	.+714    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b114:	83 e0       	ldi	r24, 0x03	; 3
    b116:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b118:	83 e0       	ldi	r24, 0x03	; 3
    b11a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b11c:	89 e0       	ldi	r24, 0x09	; 9
    b11e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b120:	5e c1       	rjmp	.+700    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b122:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 4;
    b124:	84 e0       	ldi	r24, 0x04	; 4
    b126:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b128:	87 e0       	ldi	r24, 0x07	; 7
    b12a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b12c:	58 c1       	rjmp	.+688    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b12e:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 2;
    b130:	82 e0       	ldi	r24, 0x02	; 2
    b132:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    b134:	83 e0       	ldi	r24, 0x03	; 3
    b136:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b138:	52 c1       	rjmp	.+676    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    b13a:	8e e0       	ldi	r24, 0x0E	; 14
    b13c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b13e:	84 e0       	ldi	r24, 0x04	; 4
    b140:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b142:	8d e0       	ldi	r24, 0x0D	; 13
    b144:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b146:	4b c1       	rjmp	.+662    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    b148:	85 e0       	ldi	r24, 0x05	; 5
    b14a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b14c:	83 e0       	ldi	r24, 0x03	; 3
    b14e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b150:	89 e0       	ldi	r24, 0x09	; 9
    b152:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b154:	44 c1       	rjmp	.+648    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b156:	82 e0       	ldi	r24, 0x02	; 2
    b158:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b15a:	84 e0       	ldi	r24, 0x04	; 4
    b15c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b15e:	89 e0       	ldi	r24, 0x09	; 9
    b160:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b162:	3d c1       	rjmp	.+634    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b164:	83 e0       	ldi	r24, 0x03	; 3
    b166:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b168:	82 e0       	ldi	r24, 0x02	; 2
    b16a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b16c:	87 e0       	ldi	r24, 0x07	; 7
    b16e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b170:	36 c1       	rjmp	.+620    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b172:	81 e0       	ldi	r24, 0x01	; 1
    b174:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 2;
    b176:	82 e0       	ldi	r24, 0x02	; 2
    b178:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b17a:	85 e0       	ldi	r24, 0x05	; 5
    b17c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b17e:	2f c1       	rjmp	.+606    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b180:	87 e0       	ldi	r24, 0x07	; 7
    b182:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b184:	83 e0       	ldi	r24, 0x03	; 3
    b186:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b188:	8b e0       	ldi	r24, 0x0B	; 11
    b18a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b18c:	28 c1       	rjmp	.+592    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    b18e:	86 e0       	ldi	r24, 0x06	; 6
    b190:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b192:	84 e0       	ldi	r24, 0x04	; 4
    b194:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b196:	8b e0       	ldi	r24, 0x0B	; 11
    b198:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b19a:	21 c1       	rjmp	.+578    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    b19c:	8b e0       	ldi	r24, 0x0B	; 11
    b19e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b1a0:	84 e0       	ldi	r24, 0x04	; 4
    b1a2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b1a4:	8d e0       	ldi	r24, 0x0D	; 13
    b1a6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1a8:	1a c1       	rjmp	.+564    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b1aa:	82 e0       	ldi	r24, 0x02	; 2
    b1ac:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b1ae:	83 e0       	ldi	r24, 0x03	; 3
    b1b0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b1b2:	87 e0       	ldi	r24, 0x07	; 7
    b1b4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1b6:	13 c1       	rjmp	.+550    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b1b8:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 3;
    b1ba:	83 e0       	ldi	r24, 0x03	; 3
    b1bc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 5;
    b1be:	85 e0       	ldi	r24, 0x05	; 5
    b1c0:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1c2:	0d c1       	rjmp	.+538    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b1c4:	81 e0       	ldi	r24, 0x01	; 1
    b1c6:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 1;
    b1c8:	81 e0       	ldi	r24, 0x01	; 1
    b1ca:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 3;
    b1cc:	83 e0       	ldi	r24, 0x03	; 3
    b1ce:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1d0:	06 c1       	rjmp	.+524    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    b1d2:	84 e0       	ldi	r24, 0x04	; 4
    b1d4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b1d6:	83 e0       	ldi	r24, 0x03	; 3
    b1d8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 7;
    b1da:	87 e0       	ldi	r24, 0x07	; 7
    b1dc:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1de:	ff c0       	rjmp	.+510    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    b1e0:	88 e0       	ldi	r24, 0x08	; 8
    b1e2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b1e4:	84 e0       	ldi	r24, 0x04	; 4
    b1e6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b1e8:	89 e0       	ldi	r24, 0x09	; 9
    b1ea:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1ec:	f8 c0       	rjmp	.+496    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    b1ee:	86 e0       	ldi	r24, 0x06	; 6
    b1f0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 3;
    b1f2:	83 e0       	ldi	r24, 0x03	; 3
    b1f4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b1f6:	89 e0       	ldi	r24, 0x09	; 9
    b1f8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b1fa:	f1 c0       	rjmp	.+482    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    b1fc:	89 e0       	ldi	r24, 0x09	; 9
    b1fe:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b200:	84 e0       	ldi	r24, 0x04	; 4
    b202:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b204:	8b e0       	ldi	r24, 0x0B	; 11
    b206:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b208:	ea c0       	rjmp	.+468    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    b20a:	8d e0       	ldi	r24, 0x0D	; 13
    b20c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b20e:	84 e0       	ldi	r24, 0x04	; 4
    b210:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b212:	8d e0       	ldi	r24, 0x0D	; 13
    b214:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b216:	e3 c0       	rjmp	.+454    	; 0xb3de <_Z12getMorseCharc+0x356>

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b218:	83 e0       	ldi	r24, 0x03	; 3
    b21a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 4;
    b21c:	84 e0       	ldi	r24, 0x04	; 4
    b21e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b220:	8b e0       	ldi	r24, 0x0B	; 11
    b222:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b224:	dc c0       	rjmp	.+440    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    b226:	8f e1       	ldi	r24, 0x1F	; 31
    b228:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b22a:	85 e0       	ldi	r24, 0x05	; 5
    b22c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b22e:	83 e1       	ldi	r24, 0x13	; 19
    b230:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b232:	d5 c0       	rjmp	.+426    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    b234:	8e e1       	ldi	r24, 0x1E	; 30
    b236:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b238:	85 e0       	ldi	r24, 0x05	; 5
    b23a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b23c:	81 e1       	ldi	r24, 0x11	; 17
    b23e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b240:	ce c0       	rjmp	.+412    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    b242:	8c e1       	ldi	r24, 0x1C	; 28
    b244:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b246:	85 e0       	ldi	r24, 0x05	; 5
    b248:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b24a:	8f e0       	ldi	r24, 0x0F	; 15
    b24c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b24e:	c7 c0       	rjmp	.+398    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    b250:	88 e1       	ldi	r24, 0x18	; 24
    b252:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b254:	85 e0       	ldi	r24, 0x05	; 5
    b256:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b258:	8d e0       	ldi	r24, 0x0D	; 13
    b25a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b25c:	c0 c0       	rjmp	.+384    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    b25e:	80 e1       	ldi	r24, 0x10	; 16
    b260:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b262:	85 e0       	ldi	r24, 0x05	; 5
    b264:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b266:	8b e0       	ldi	r24, 0x0B	; 11
    b268:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b26a:	b9 c0       	rjmp	.+370    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    b26c:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 5;
    b26e:	85 e0       	ldi	r24, 0x05	; 5
    b270:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 9;
    b272:	89 e0       	ldi	r24, 0x09	; 9
    b274:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b276:	b3 c0       	rjmp	.+358    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    b278:	81 e0       	ldi	r24, 0x01	; 1
    b27a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b27c:	85 e0       	ldi	r24, 0x05	; 5
    b27e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b280:	8b e0       	ldi	r24, 0x0B	; 11
    b282:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b284:	ac c0       	rjmp	.+344    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    b286:	83 e0       	ldi	r24, 0x03	; 3
    b288:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b28a:	85 e0       	ldi	r24, 0x05	; 5
    b28c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b28e:	8d e0       	ldi	r24, 0x0D	; 13
    b290:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b292:	a5 c0       	rjmp	.+330    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b294:	87 e0       	ldi	r24, 0x07	; 7
    b296:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b298:	85 e0       	ldi	r24, 0x05	; 5
    b29a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b29c:	8f e0       	ldi	r24, 0x0F	; 15
    b29e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2a0:	9e c0       	rjmp	.+316    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    b2a2:	8f e0       	ldi	r24, 0x0F	; 15
    b2a4:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b2a6:	85 e0       	ldi	r24, 0x05	; 5
    b2a8:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b2aa:	81 e1       	ldi	r24, 0x11	; 17
    b2ac:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2ae:	97 c0       	rjmp	.+302    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    b2b0:	8a e2       	ldi	r24, 0x2A	; 42
    b2b2:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b2b4:	86 e0       	ldi	r24, 0x06	; 6
    b2b6:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b2b8:	81 e1       	ldi	r24, 0x11	; 17
    b2ba:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2bc:	90 c0       	rjmp	.+288    	; 0xb3de <_Z12getMorseCharc+0x356>

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    b2be:	83 e3       	ldi	r24, 0x33	; 51
    b2c0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b2c2:	86 e0       	ldi	r24, 0x06	; 6
    b2c4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b2c6:	83 e1       	ldi	r24, 0x13	; 19
    b2c8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2ca:	89 c0       	rjmp	.+274    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    b2cc:	8c e0       	ldi	r24, 0x0C	; 12
    b2ce:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b2d0:	86 e0       	ldi	r24, 0x06	; 6
    b2d2:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b2d4:	8f e0       	ldi	r24, 0x0F	; 15
    b2d6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2d8:	82 c0       	rjmp	.+260    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    b2da:	8e e1       	ldi	r24, 0x1E	; 30
    b2dc:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b2de:	86 e0       	ldi	r24, 0x06	; 6
    b2e0:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b2e2:	83 e1       	ldi	r24, 0x13	; 19
    b2e4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2e6:	7b c0       	rjmp	.+246    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    b2e8:	85 e3       	ldi	r24, 0x35	; 53
    b2ea:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b2ec:	86 e0       	ldi	r24, 0x06	; 6
    b2ee:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b2f0:	83 e1       	ldi	r24, 0x13	; 19
    b2f2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b2f4:	74 c0       	rjmp	.+232    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    b2f6:	89 e0       	ldi	r24, 0x09	; 9
    b2f8:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b2fa:	85 e0       	ldi	r24, 0x05	; 5
    b2fc:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b2fe:	8d e0       	ldi	r24, 0x0D	; 13
    b300:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b302:	6d c0       	rjmp	.+218    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    b304:	8d e0       	ldi	r24, 0x0D	; 13
    b306:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b308:	85 e0       	ldi	r24, 0x05	; 5
    b30a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b30c:	8f e0       	ldi	r24, 0x0F	; 15
    b30e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b310:	66 c0       	rjmp	.+204    	; 0xb3de <_Z12getMorseCharc+0x356>

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    b312:	8d e2       	ldi	r24, 0x2D	; 45
    b314:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b316:	86 e0       	ldi	r24, 0x06	; 6
    b318:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b31a:	83 e1       	ldi	r24, 0x13	; 19
    b31c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b31e:	5f c0       	rjmp	.+190    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    b320:	82 e0       	ldi	r24, 0x02	; 2
    b322:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b324:	85 e0       	ldi	r24, 0x05	; 5
    b326:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 11;
    b328:	8b e0       	ldi	r24, 0x0B	; 11
    b32a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b32c:	58 c0       	rjmp	.+176    	; 0xb3de <_Z12getMorseCharc+0x356>

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    b32e:	87 e0       	ldi	r24, 0x07	; 7
    b330:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b332:	86 e0       	ldi	r24, 0x06	; 6
    b334:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b336:	81 e1       	ldi	r24, 0x11	; 17
    b338:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b33a:	51 c0       	rjmp	.+162    	; 0xb3de <_Z12getMorseCharc+0x356>

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    b33c:	85 e1       	ldi	r24, 0x15	; 21
    b33e:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b340:	86 e0       	ldi	r24, 0x06	; 6
    b342:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 12;
    b344:	8c e0       	ldi	r24, 0x0C	; 12
    b346:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b348:	4a c0       	rjmp	.+148    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    b34a:	81 e1       	ldi	r24, 0x11	; 17
    b34c:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b34e:	85 e0       	ldi	r24, 0x05	; 5
    b350:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b352:	8d e0       	ldi	r24, 0x0D	; 13
    b354:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b356:	43 c0       	rjmp	.+134    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    b358:	8a e0       	ldi	r24, 0x0A	; 10
    b35a:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b35c:	85 e0       	ldi	r24, 0x05	; 5
    b35e:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 13;
    b360:	8d e0       	ldi	r24, 0x0D	; 13
    b362:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b364:	3c c0       	rjmp	.+120    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    b366:	81 e2       	ldi	r24, 0x21	; 33
    b368:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b36a:	86 e0       	ldi	r24, 0x06	; 6
    b36c:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b36e:	8f e0       	ldi	r24, 0x0F	; 15
    b370:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b372:	35 c0       	rjmp	.+106    	; 0xb3de <_Z12getMorseCharc+0x356>

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    b374:	8c e2       	ldi	r24, 0x2C	; 44
    b376:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b378:	86 e0       	ldi	r24, 0x06	; 6
    b37a:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b37c:	81 e1       	ldi	r24, 0x11	; 17
    b37e:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b380:	2e c0       	rjmp	.+92     	; 0xb3de <_Z12getMorseCharc+0x356>

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    b382:	82 e1       	ldi	r24, 0x12	; 18
    b384:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b386:	86 e0       	ldi	r24, 0x06	; 6
    b388:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 15;
    b38a:	8f e0       	ldi	r24, 0x0F	; 15
    b38c:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b38e:	27 c0       	rjmp	.+78     	; 0xb3de <_Z12getMorseCharc+0x356>

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    b390:	88 e4       	ldi	r24, 0x48	; 72
    b392:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 7;
    b394:	87 e0       	ldi	r24, 0x07	; 7
    b396:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b398:	81 e1       	ldi	r24, 0x11	; 17
    b39a:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b39c:	20 c0       	rjmp	.+64     	; 0xb3de <_Z12getMorseCharc+0x356>

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    b39e:	86 e1       	ldi	r24, 0x16	; 22
    b3a0:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 6;
    b3a2:	86 e0       	ldi	r24, 0x06	; 6
    b3a4:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 17;
    b3a6:	81 e1       	ldi	r24, 0x11	; 17
    b3a8:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3aa:	19 c0       	rjmp	.+50     	; 0xb3de <_Z12getMorseCharc+0x356>

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    b3ac:	8f ef       	ldi	r24, 0xFF	; 255
    b3ae:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    b3b0:	87 e0       	ldi	r24, 0x07	; 7
    b3b2:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    b3b4:	84 e0       	ldi	r24, 0x04	; 4
    b3b6:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3b8:	12 c0       	rjmp	.+36     	; 0xb3de <_Z12getMorseCharc+0x356>

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    b3ba:	8e ef       	ldi	r24, 0xFE	; 254
    b3bc:	89 83       	std	Y+1, r24	; 0x01
		  morse.lengthInSymbols = 7;
    b3be:	87 e0       	ldi	r24, 0x07	; 7
    b3c0:	8a 83       	std	Y+2, r24	; 0x02
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    b3c2:	87 e0       	ldi	r24, 0x07	; 7
    b3c4:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3c6:	0b c0       	rjmp	.+22     	; 0xb3de <_Z12getMorseCharc+0x356>

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    b3c8:	8f e1       	ldi	r24, 0x1F	; 31
    b3ca:	89 83       	std	Y+1, r24	; 0x01
			morse.lengthInSymbols = 5;
    b3cc:	85 e0       	ldi	r24, 0x05	; 5
    b3ce:	8a 83       	std	Y+2, r24	; 0x02
			morse.lengthInElements = 19;
    b3d0:	83 e1       	ldi	r24, 0x13	; 19
    b3d2:	8b 83       	std	Y+3, r24	; 0x03
		}
		break;
    b3d4:	04 c0       	rjmp	.+8      	; 0xb3de <_Z12getMorseCharc+0x356>

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    b3d6:	19 82       	std	Y+1, r1	; 0x01
			morse.lengthInSymbols = 0;
    b3d8:	1a 82       	std	Y+2, r1	; 0x02
			morse.lengthInElements = 0;
    b3da:	1b 82       	std	Y+3, r1	; 0x03
		}
		break;
    b3dc:	00 00       	nop
	}

	return( morse);
    b3de:	89 81       	ldd	r24, Y+1	; 0x01
    b3e0:	9a 81       	ldd	r25, Y+2	; 0x02
    b3e2:	ab 81       	ldd	r26, Y+3	; 0x03
}
    b3e4:	bc 01       	movw	r22, r24
    b3e6:	8a 2f       	mov	r24, r26
    b3e8:	24 96       	adiw	r28, 0x04	; 4
    b3ea:	cd bf       	out	0x3d, r28	; 61
    b3ec:	de bf       	out	0x3e, r29	; 62
    b3ee:	df 91       	pop	r29
    b3f0:	cf 91       	pop	r28
    b3f2:	08 95       	ret

0000b3f4 <protected_write_io>:
	PUBLIC_FUNCTION(protected_write_io)

#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
    b3f4:	1b be       	out	0x3b, r1	; 59
#endif
	movw    r30, r24                // Load addr into Z
    b3f6:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    b3f8:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    b3fa:	40 83       	st	Z, r20
	ret                             // Return to caller
    b3fc:	08 95       	ret

0000b3fe <PORTC_set_pin_pull_mode>:

	for(bufferIndex=0; bufferIndex<SERIALBUS_NUMBER_OF_TX_MSG_BUFFERS; bufferIndex++)
	{
		tx_buffer[bufferIndex][0] = '\0';
	}
}
    b3fe:	cf 93       	push	r28
    b400:	df 93       	push	r29
    b402:	00 d0       	rcall	.+0      	; 0xb404 <PORTC_set_pin_pull_mode+0x6>
    b404:	00 d0       	rcall	.+0      	; 0xb406 <PORTC_set_pin_pull_mode+0x8>
    b406:	cd b7       	in	r28, 0x3d	; 61
    b408:	de b7       	in	r29, 0x3e	; 62
    b40a:	8b 83       	std	Y+3, r24	; 0x03
    b40c:	6c 83       	std	Y+4, r22	; 0x04
    b40e:	8b 81       	ldd	r24, Y+3	; 0x03
    b410:	88 2f       	mov	r24, r24
    b412:	90 e0       	ldi	r25, 0x00	; 0
    b414:	80 5b       	subi	r24, 0xB0	; 176
    b416:	9b 4f       	sbci	r25, 0xFB	; 251
    b418:	89 83       	std	Y+1, r24	; 0x01
    b41a:	9a 83       	std	Y+2, r25	; 0x02
    b41c:	8c 81       	ldd	r24, Y+4	; 0x04
    b41e:	81 30       	cpi	r24, 0x01	; 1
    b420:	59 f4       	brne	.+22     	; 0xb438 <PORTC_set_pin_pull_mode+0x3a>
    b422:	89 81       	ldd	r24, Y+1	; 0x01
    b424:	9a 81       	ldd	r25, Y+2	; 0x02
    b426:	fc 01       	movw	r30, r24
    b428:	80 81       	ld	r24, Z
    b42a:	28 2f       	mov	r18, r24
    b42c:	28 60       	ori	r18, 0x08	; 8
    b42e:	89 81       	ldd	r24, Y+1	; 0x01
    b430:	9a 81       	ldd	r25, Y+2	; 0x02
    b432:	fc 01       	movw	r30, r24
    b434:	20 83       	st	Z, r18
    b436:	0d c0       	rjmp	.+26     	; 0xb452 <PORTC_set_pin_pull_mode+0x54>
    b438:	8c 81       	ldd	r24, Y+4	; 0x04
    b43a:	88 23       	and	r24, r24
    b43c:	51 f4       	brne	.+20     	; 0xb452 <PORTC_set_pin_pull_mode+0x54>
    b43e:	89 81       	ldd	r24, Y+1	; 0x01
    b440:	9a 81       	ldd	r25, Y+2	; 0x02
    b442:	fc 01       	movw	r30, r24
    b444:	80 81       	ld	r24, Z
    b446:	28 2f       	mov	r18, r24
    b448:	27 7f       	andi	r18, 0xF7	; 247
    b44a:	89 81       	ldd	r24, Y+1	; 0x01
    b44c:	9a 81       	ldd	r25, Y+2	; 0x02
    b44e:	fc 01       	movw	r30, r24
    b450:	20 83       	st	Z, r18
    b452:	00 00       	nop
    b454:	24 96       	adiw	r28, 0x04	; 4
    b456:	cd bf       	out	0x3d, r28	; 61
    b458:	de bf       	out	0x3e, r29	; 62
    b45a:	df 91       	pop	r29
    b45c:	cf 91       	pop	r28
    b45e:	08 95       	ret

0000b460 <PORTC_set_pin_dir>:
    b460:	cf 93       	push	r28
    b462:	df 93       	push	r29
    b464:	00 d0       	rcall	.+0      	; 0xb466 <PORTC_set_pin_dir+0x6>
    b466:	cd b7       	in	r28, 0x3d	; 61
    b468:	de b7       	in	r29, 0x3e	; 62
    b46a:	89 83       	std	Y+1, r24	; 0x01
    b46c:	6a 83       	std	Y+2, r22	; 0x02
    b46e:	8a 81       	ldd	r24, Y+2	; 0x02
    b470:	88 2f       	mov	r24, r24
    b472:	90 e0       	ldi	r25, 0x00	; 0
    b474:	81 30       	cpi	r24, 0x01	; 1
    b476:	91 05       	cpc	r25, r1
    b478:	e1 f0       	breq	.+56     	; 0xb4b2 <PORTC_set_pin_dir+0x52>
    b47a:	82 30       	cpi	r24, 0x02	; 2
    b47c:	91 05       	cpc	r25, r1
    b47e:	71 f1       	breq	.+92     	; 0xb4dc <PORTC_set_pin_dir+0x7c>
    b480:	89 2b       	or	r24, r25
    b482:	09 f0       	breq	.+2      	; 0xb486 <PORTC_set_pin_dir+0x26>
    b484:	3b c0       	rjmp	.+118    	; 0xb4fc <PORTC_set_pin_dir+0x9c>
    b486:	88 e0       	ldi	r24, 0x08	; 8
    b488:	90 e0       	ldi	r25, 0x00	; 0
    b48a:	28 e0       	ldi	r18, 0x08	; 8
    b48c:	30 e0       	ldi	r19, 0x00	; 0
    b48e:	f9 01       	movw	r30, r18
    b490:	20 81       	ld	r18, Z
    b492:	62 2f       	mov	r22, r18
    b494:	29 81       	ldd	r18, Y+1	; 0x01
    b496:	42 2f       	mov	r20, r18
    b498:	50 e0       	ldi	r21, 0x00	; 0
    b49a:	21 e0       	ldi	r18, 0x01	; 1
    b49c:	30 e0       	ldi	r19, 0x00	; 0
    b49e:	02 c0       	rjmp	.+4      	; 0xb4a4 <PORTC_set_pin_dir+0x44>
    b4a0:	22 0f       	add	r18, r18
    b4a2:	33 1f       	adc	r19, r19
    b4a4:	4a 95       	dec	r20
    b4a6:	e2 f7       	brpl	.-8      	; 0xb4a0 <PORTC_set_pin_dir+0x40>
    b4a8:	20 95       	com	r18
    b4aa:	26 23       	and	r18, r22
    b4ac:	fc 01       	movw	r30, r24
    b4ae:	20 83       	st	Z, r18
    b4b0:	25 c0       	rjmp	.+74     	; 0xb4fc <PORTC_set_pin_dir+0x9c>
    b4b2:	88 e0       	ldi	r24, 0x08	; 8
    b4b4:	90 e0       	ldi	r25, 0x00	; 0
    b4b6:	28 e0       	ldi	r18, 0x08	; 8
    b4b8:	30 e0       	ldi	r19, 0x00	; 0
    b4ba:	f9 01       	movw	r30, r18
    b4bc:	20 81       	ld	r18, Z
    b4be:	62 2f       	mov	r22, r18
    b4c0:	29 81       	ldd	r18, Y+1	; 0x01
    b4c2:	42 2f       	mov	r20, r18
    b4c4:	50 e0       	ldi	r21, 0x00	; 0
    b4c6:	21 e0       	ldi	r18, 0x01	; 1
    b4c8:	30 e0       	ldi	r19, 0x00	; 0
    b4ca:	02 c0       	rjmp	.+4      	; 0xb4d0 <PORTC_set_pin_dir+0x70>
    b4cc:	22 0f       	add	r18, r18
    b4ce:	33 1f       	adc	r19, r19
    b4d0:	4a 95       	dec	r20
    b4d2:	e2 f7       	brpl	.-8      	; 0xb4cc <PORTC_set_pin_dir+0x6c>
    b4d4:	26 2b       	or	r18, r22
    b4d6:	fc 01       	movw	r30, r24
    b4d8:	20 83       	st	Z, r18
    b4da:	10 c0       	rjmp	.+32     	; 0xb4fc <PORTC_set_pin_dir+0x9c>
    b4dc:	89 81       	ldd	r24, Y+1	; 0x01
    b4de:	88 2f       	mov	r24, r24
    b4e0:	90 e0       	ldi	r25, 0x00	; 0
    b4e2:	80 5b       	subi	r24, 0xB0	; 176
    b4e4:	9b 4f       	sbci	r25, 0xFB	; 251
    b4e6:	29 81       	ldd	r18, Y+1	; 0x01
    b4e8:	22 2f       	mov	r18, r18
    b4ea:	30 e0       	ldi	r19, 0x00	; 0
    b4ec:	20 5b       	subi	r18, 0xB0	; 176
    b4ee:	3b 4f       	sbci	r19, 0xFB	; 251
    b4f0:	f9 01       	movw	r30, r18
    b4f2:	20 81       	ld	r18, Z
    b4f4:	28 60       	ori	r18, 0x08	; 8
    b4f6:	fc 01       	movw	r30, r24
    b4f8:	20 83       	st	Z, r18
    b4fa:	00 00       	nop
    b4fc:	00 00       	nop
    b4fe:	0f 90       	pop	r0
    b500:	0f 90       	pop	r0
    b502:	df 91       	pop	r29
    b504:	cf 91       	pop	r28
    b506:	08 95       	ret

0000b508 <PORTC_set_pin_level>:
    b508:	cf 93       	push	r28
    b50a:	df 93       	push	r29
    b50c:	00 d0       	rcall	.+0      	; 0xb50e <PORTC_set_pin_level+0x6>
    b50e:	cd b7       	in	r28, 0x3d	; 61
    b510:	de b7       	in	r29, 0x3e	; 62
    b512:	89 83       	std	Y+1, r24	; 0x01
    b514:	6a 83       	std	Y+2, r22	; 0x02
    b516:	8a 81       	ldd	r24, Y+2	; 0x02
    b518:	88 23       	and	r24, r24
    b51a:	a9 f0       	breq	.+42     	; 0xb546 <PORTC_set_pin_level+0x3e>
    b51c:	88 e0       	ldi	r24, 0x08	; 8
    b51e:	90 e0       	ldi	r25, 0x00	; 0
    b520:	28 e0       	ldi	r18, 0x08	; 8
    b522:	30 e0       	ldi	r19, 0x00	; 0
    b524:	f9 01       	movw	r30, r18
    b526:	21 81       	ldd	r18, Z+1	; 0x01
    b528:	62 2f       	mov	r22, r18
    b52a:	29 81       	ldd	r18, Y+1	; 0x01
    b52c:	42 2f       	mov	r20, r18
    b52e:	50 e0       	ldi	r21, 0x00	; 0
    b530:	21 e0       	ldi	r18, 0x01	; 1
    b532:	30 e0       	ldi	r19, 0x00	; 0
    b534:	02 c0       	rjmp	.+4      	; 0xb53a <PORTC_set_pin_level+0x32>
    b536:	22 0f       	add	r18, r18
    b538:	33 1f       	adc	r19, r19
    b53a:	4a 95       	dec	r20
    b53c:	e2 f7       	brpl	.-8      	; 0xb536 <PORTC_set_pin_level+0x2e>
    b53e:	26 2b       	or	r18, r22
    b540:	fc 01       	movw	r30, r24
    b542:	21 83       	std	Z+1, r18	; 0x01
    b544:	15 c0       	rjmp	.+42     	; 0xb570 <PORTC_set_pin_level+0x68>
    b546:	88 e0       	ldi	r24, 0x08	; 8
    b548:	90 e0       	ldi	r25, 0x00	; 0
    b54a:	28 e0       	ldi	r18, 0x08	; 8
    b54c:	30 e0       	ldi	r19, 0x00	; 0
    b54e:	f9 01       	movw	r30, r18
    b550:	21 81       	ldd	r18, Z+1	; 0x01
    b552:	62 2f       	mov	r22, r18
    b554:	29 81       	ldd	r18, Y+1	; 0x01
    b556:	42 2f       	mov	r20, r18
    b558:	50 e0       	ldi	r21, 0x00	; 0
    b55a:	21 e0       	ldi	r18, 0x01	; 1
    b55c:	30 e0       	ldi	r19, 0x00	; 0
    b55e:	02 c0       	rjmp	.+4      	; 0xb564 <PORTC_set_pin_level+0x5c>
    b560:	22 0f       	add	r18, r18
    b562:	33 1f       	adc	r19, r19
    b564:	4a 95       	dec	r20
    b566:	e2 f7       	brpl	.-8      	; 0xb560 <PORTC_set_pin_level+0x58>
    b568:	20 95       	com	r18
    b56a:	26 23       	and	r18, r22
    b56c:	fc 01       	movw	r30, r24
    b56e:	21 83       	std	Z+1, r18	; 0x01
    b570:	00 00       	nop
    b572:	0f 90       	pop	r0
    b574:	0f 90       	pop	r0
    b576:	df 91       	pop	r29
    b578:	cf 91       	pop	r28
    b57a:	08 95       	ret

0000b57c <PORTE_set_pin_pull_mode>:
    b57c:	cf 93       	push	r28
    b57e:	df 93       	push	r29
    b580:	00 d0       	rcall	.+0      	; 0xb582 <PORTE_set_pin_pull_mode+0x6>
    b582:	00 d0       	rcall	.+0      	; 0xb584 <PORTE_set_pin_pull_mode+0x8>
    b584:	cd b7       	in	r28, 0x3d	; 61
    b586:	de b7       	in	r29, 0x3e	; 62
    b588:	8b 83       	std	Y+3, r24	; 0x03
    b58a:	6c 83       	std	Y+4, r22	; 0x04
    b58c:	8b 81       	ldd	r24, Y+3	; 0x03
    b58e:	88 2f       	mov	r24, r24
    b590:	90 e0       	ldi	r25, 0x00	; 0
    b592:	80 57       	subi	r24, 0x70	; 112
    b594:	9b 4f       	sbci	r25, 0xFB	; 251
    b596:	89 83       	std	Y+1, r24	; 0x01
    b598:	9a 83       	std	Y+2, r25	; 0x02
    b59a:	8c 81       	ldd	r24, Y+4	; 0x04
    b59c:	81 30       	cpi	r24, 0x01	; 1
    b59e:	59 f4       	brne	.+22     	; 0xb5b6 <PORTE_set_pin_pull_mode+0x3a>
    b5a0:	89 81       	ldd	r24, Y+1	; 0x01
    b5a2:	9a 81       	ldd	r25, Y+2	; 0x02
    b5a4:	fc 01       	movw	r30, r24
    b5a6:	80 81       	ld	r24, Z
    b5a8:	28 2f       	mov	r18, r24
    b5aa:	28 60       	ori	r18, 0x08	; 8
    b5ac:	89 81       	ldd	r24, Y+1	; 0x01
    b5ae:	9a 81       	ldd	r25, Y+2	; 0x02
    b5b0:	fc 01       	movw	r30, r24
    b5b2:	20 83       	st	Z, r18
    b5b4:	0d c0       	rjmp	.+26     	; 0xb5d0 <PORTE_set_pin_pull_mode+0x54>
    b5b6:	8c 81       	ldd	r24, Y+4	; 0x04
    b5b8:	88 23       	and	r24, r24
    b5ba:	51 f4       	brne	.+20     	; 0xb5d0 <PORTE_set_pin_pull_mode+0x54>
    b5bc:	89 81       	ldd	r24, Y+1	; 0x01
    b5be:	9a 81       	ldd	r25, Y+2	; 0x02
    b5c0:	fc 01       	movw	r30, r24
    b5c2:	80 81       	ld	r24, Z
    b5c4:	28 2f       	mov	r18, r24
    b5c6:	27 7f       	andi	r18, 0xF7	; 247
    b5c8:	89 81       	ldd	r24, Y+1	; 0x01
    b5ca:	9a 81       	ldd	r25, Y+2	; 0x02
    b5cc:	fc 01       	movw	r30, r24
    b5ce:	20 83       	st	Z, r18
    b5d0:	00 00       	nop
    b5d2:	24 96       	adiw	r28, 0x04	; 4
    b5d4:	cd bf       	out	0x3d, r28	; 61
    b5d6:	de bf       	out	0x3e, r29	; 62
    b5d8:	df 91       	pop	r29
    b5da:	cf 91       	pop	r28
    b5dc:	08 95       	ret

0000b5de <PORTE_set_pin_dir>:
    b5de:	cf 93       	push	r28
    b5e0:	df 93       	push	r29
    b5e2:	00 d0       	rcall	.+0      	; 0xb5e4 <PORTE_set_pin_dir+0x6>
    b5e4:	cd b7       	in	r28, 0x3d	; 61
    b5e6:	de b7       	in	r29, 0x3e	; 62
    b5e8:	89 83       	std	Y+1, r24	; 0x01
    b5ea:	6a 83       	std	Y+2, r22	; 0x02
    b5ec:	8a 81       	ldd	r24, Y+2	; 0x02
    b5ee:	88 2f       	mov	r24, r24
    b5f0:	90 e0       	ldi	r25, 0x00	; 0
    b5f2:	81 30       	cpi	r24, 0x01	; 1
    b5f4:	91 05       	cpc	r25, r1
    b5f6:	e1 f0       	breq	.+56     	; 0xb630 <PORTE_set_pin_dir+0x52>
    b5f8:	82 30       	cpi	r24, 0x02	; 2
    b5fa:	91 05       	cpc	r25, r1
    b5fc:	71 f1       	breq	.+92     	; 0xb65a <PORTE_set_pin_dir+0x7c>
    b5fe:	89 2b       	or	r24, r25
    b600:	09 f0       	breq	.+2      	; 0xb604 <PORTE_set_pin_dir+0x26>
    b602:	3b c0       	rjmp	.+118    	; 0xb67a <PORTE_set_pin_dir+0x9c>
    b604:	80 e1       	ldi	r24, 0x10	; 16
    b606:	90 e0       	ldi	r25, 0x00	; 0
    b608:	20 e1       	ldi	r18, 0x10	; 16
    b60a:	30 e0       	ldi	r19, 0x00	; 0
    b60c:	f9 01       	movw	r30, r18
    b60e:	20 81       	ld	r18, Z
    b610:	62 2f       	mov	r22, r18
    b612:	29 81       	ldd	r18, Y+1	; 0x01
    b614:	42 2f       	mov	r20, r18
    b616:	50 e0       	ldi	r21, 0x00	; 0
    b618:	21 e0       	ldi	r18, 0x01	; 1
    b61a:	30 e0       	ldi	r19, 0x00	; 0
    b61c:	02 c0       	rjmp	.+4      	; 0xb622 <PORTE_set_pin_dir+0x44>
    b61e:	22 0f       	add	r18, r18
    b620:	33 1f       	adc	r19, r19
    b622:	4a 95       	dec	r20
    b624:	e2 f7       	brpl	.-8      	; 0xb61e <PORTE_set_pin_dir+0x40>
    b626:	20 95       	com	r18
    b628:	26 23       	and	r18, r22
    b62a:	fc 01       	movw	r30, r24
    b62c:	20 83       	st	Z, r18
    b62e:	25 c0       	rjmp	.+74     	; 0xb67a <PORTE_set_pin_dir+0x9c>
    b630:	80 e1       	ldi	r24, 0x10	; 16
    b632:	90 e0       	ldi	r25, 0x00	; 0
    b634:	20 e1       	ldi	r18, 0x10	; 16
    b636:	30 e0       	ldi	r19, 0x00	; 0
    b638:	f9 01       	movw	r30, r18
    b63a:	20 81       	ld	r18, Z
    b63c:	62 2f       	mov	r22, r18
    b63e:	29 81       	ldd	r18, Y+1	; 0x01
    b640:	42 2f       	mov	r20, r18
    b642:	50 e0       	ldi	r21, 0x00	; 0
    b644:	21 e0       	ldi	r18, 0x01	; 1
    b646:	30 e0       	ldi	r19, 0x00	; 0
    b648:	02 c0       	rjmp	.+4      	; 0xb64e <PORTE_set_pin_dir+0x70>
    b64a:	22 0f       	add	r18, r18
    b64c:	33 1f       	adc	r19, r19
    b64e:	4a 95       	dec	r20
    b650:	e2 f7       	brpl	.-8      	; 0xb64a <PORTE_set_pin_dir+0x6c>
    b652:	26 2b       	or	r18, r22
    b654:	fc 01       	movw	r30, r24
    b656:	20 83       	st	Z, r18
    b658:	10 c0       	rjmp	.+32     	; 0xb67a <PORTE_set_pin_dir+0x9c>
    b65a:	89 81       	ldd	r24, Y+1	; 0x01
    b65c:	88 2f       	mov	r24, r24
    b65e:	90 e0       	ldi	r25, 0x00	; 0
    b660:	80 57       	subi	r24, 0x70	; 112
    b662:	9b 4f       	sbci	r25, 0xFB	; 251
    b664:	29 81       	ldd	r18, Y+1	; 0x01
    b666:	22 2f       	mov	r18, r18
    b668:	30 e0       	ldi	r19, 0x00	; 0
    b66a:	20 57       	subi	r18, 0x70	; 112
    b66c:	3b 4f       	sbci	r19, 0xFB	; 251
    b66e:	f9 01       	movw	r30, r18
    b670:	20 81       	ld	r18, Z
    b672:	28 60       	ori	r18, 0x08	; 8
    b674:	fc 01       	movw	r30, r24
    b676:	20 83       	st	Z, r18
    b678:	00 00       	nop
    b67a:	00 00       	nop
    b67c:	0f 90       	pop	r0
    b67e:	0f 90       	pop	r0
    b680:	df 91       	pop	r29
    b682:	cf 91       	pop	r28
    b684:	08 95       	ret

0000b686 <PORTE_set_pin_level>:
    b686:	cf 93       	push	r28
    b688:	df 93       	push	r29
    b68a:	00 d0       	rcall	.+0      	; 0xb68c <PORTE_set_pin_level+0x6>
    b68c:	cd b7       	in	r28, 0x3d	; 61
    b68e:	de b7       	in	r29, 0x3e	; 62
    b690:	89 83       	std	Y+1, r24	; 0x01
    b692:	6a 83       	std	Y+2, r22	; 0x02
    b694:	8a 81       	ldd	r24, Y+2	; 0x02
    b696:	88 23       	and	r24, r24
    b698:	a9 f0       	breq	.+42     	; 0xb6c4 <PORTE_set_pin_level+0x3e>
    b69a:	80 e1       	ldi	r24, 0x10	; 16
    b69c:	90 e0       	ldi	r25, 0x00	; 0
    b69e:	20 e1       	ldi	r18, 0x10	; 16
    b6a0:	30 e0       	ldi	r19, 0x00	; 0
    b6a2:	f9 01       	movw	r30, r18
    b6a4:	21 81       	ldd	r18, Z+1	; 0x01
    b6a6:	62 2f       	mov	r22, r18
    b6a8:	29 81       	ldd	r18, Y+1	; 0x01
    b6aa:	42 2f       	mov	r20, r18
    b6ac:	50 e0       	ldi	r21, 0x00	; 0
    b6ae:	21 e0       	ldi	r18, 0x01	; 1
    b6b0:	30 e0       	ldi	r19, 0x00	; 0
    b6b2:	02 c0       	rjmp	.+4      	; 0xb6b8 <PORTE_set_pin_level+0x32>
    b6b4:	22 0f       	add	r18, r18
    b6b6:	33 1f       	adc	r19, r19
    b6b8:	4a 95       	dec	r20
    b6ba:	e2 f7       	brpl	.-8      	; 0xb6b4 <PORTE_set_pin_level+0x2e>
    b6bc:	26 2b       	or	r18, r22
    b6be:	fc 01       	movw	r30, r24
    b6c0:	21 83       	std	Z+1, r18	; 0x01
    b6c2:	15 c0       	rjmp	.+42     	; 0xb6ee <PORTE_set_pin_level+0x68>
    b6c4:	80 e1       	ldi	r24, 0x10	; 16
    b6c6:	90 e0       	ldi	r25, 0x00	; 0
    b6c8:	20 e1       	ldi	r18, 0x10	; 16
    b6ca:	30 e0       	ldi	r19, 0x00	; 0
    b6cc:	f9 01       	movw	r30, r18
    b6ce:	21 81       	ldd	r18, Z+1	; 0x01
    b6d0:	62 2f       	mov	r22, r18
    b6d2:	29 81       	ldd	r18, Y+1	; 0x01
    b6d4:	42 2f       	mov	r20, r18
    b6d6:	50 e0       	ldi	r21, 0x00	; 0
    b6d8:	21 e0       	ldi	r18, 0x01	; 1
    b6da:	30 e0       	ldi	r19, 0x00	; 0
    b6dc:	02 c0       	rjmp	.+4      	; 0xb6e2 <PORTE_set_pin_level+0x5c>
    b6de:	22 0f       	add	r18, r18
    b6e0:	33 1f       	adc	r19, r19
    b6e2:	4a 95       	dec	r20
    b6e4:	e2 f7       	brpl	.-8      	; 0xb6de <PORTE_set_pin_level+0x58>
    b6e6:	20 95       	com	r18
    b6e8:	26 23       	and	r18, r22
    b6ea:	fc 01       	movw	r30, r24
    b6ec:	21 83       	std	Z+1, r18	; 0x01
    b6ee:	00 00       	nop
    b6f0:	0f 90       	pop	r0
    b6f2:	0f 90       	pop	r0
    b6f4:	df 91       	pop	r29
    b6f6:	cf 91       	pop	r28
    b6f8:	08 95       	ret

0000b6fa <PC0_set_dir>:
    b6fa:	cf 93       	push	r28
    b6fc:	df 93       	push	r29
    b6fe:	1f 92       	push	r1
    b700:	cd b7       	in	r28, 0x3d	; 61
    b702:	de b7       	in	r29, 0x3e	; 62
    b704:	89 83       	std	Y+1, r24	; 0x01
    b706:	69 81       	ldd	r22, Y+1	; 0x01
    b708:	80 e0       	ldi	r24, 0x00	; 0
    b70a:	0e 94 30 5a 	call	0xb460	; 0xb460 <PORTC_set_pin_dir>
    b70e:	00 00       	nop
    b710:	0f 90       	pop	r0
    b712:	df 91       	pop	r29
    b714:	cf 91       	pop	r28
    b716:	08 95       	ret

0000b718 <PC0_set_level>:
    b718:	cf 93       	push	r28
    b71a:	df 93       	push	r29
    b71c:	1f 92       	push	r1
    b71e:	cd b7       	in	r28, 0x3d	; 61
    b720:	de b7       	in	r29, 0x3e	; 62
    b722:	89 83       	std	Y+1, r24	; 0x01
    b724:	69 81       	ldd	r22, Y+1	; 0x01
    b726:	80 e0       	ldi	r24, 0x00	; 0
    b728:	0e 94 84 5a 	call	0xb508	; 0xb508 <PORTC_set_pin_level>
    b72c:	00 00       	nop
    b72e:	0f 90       	pop	r0
    b730:	df 91       	pop	r29
    b732:	cf 91       	pop	r28
    b734:	08 95       	ret

0000b736 <PC1_set_pull_mode>:
    b736:	cf 93       	push	r28
    b738:	df 93       	push	r29
    b73a:	1f 92       	push	r1
    b73c:	cd b7       	in	r28, 0x3d	; 61
    b73e:	de b7       	in	r29, 0x3e	; 62
    b740:	89 83       	std	Y+1, r24	; 0x01
    b742:	69 81       	ldd	r22, Y+1	; 0x01
    b744:	81 e0       	ldi	r24, 0x01	; 1
    b746:	0e 94 ff 59 	call	0xb3fe	; 0xb3fe <PORTC_set_pin_pull_mode>
    b74a:	00 00       	nop
    b74c:	0f 90       	pop	r0
    b74e:	df 91       	pop	r29
    b750:	cf 91       	pop	r28
    b752:	08 95       	ret

0000b754 <PC1_set_dir>:
    b754:	cf 93       	push	r28
    b756:	df 93       	push	r29
    b758:	1f 92       	push	r1
    b75a:	cd b7       	in	r28, 0x3d	; 61
    b75c:	de b7       	in	r29, 0x3e	; 62
    b75e:	89 83       	std	Y+1, r24	; 0x01
    b760:	69 81       	ldd	r22, Y+1	; 0x01
    b762:	81 e0       	ldi	r24, 0x01	; 1
    b764:	0e 94 30 5a 	call	0xb460	; 0xb460 <PORTC_set_pin_dir>
    b768:	00 00       	nop
    b76a:	0f 90       	pop	r0
    b76c:	df 91       	pop	r29
    b76e:	cf 91       	pop	r28
    b770:	08 95       	ret

0000b772 <PE0_set_dir>:
    b772:	cf 93       	push	r28
    b774:	df 93       	push	r29
    b776:	1f 92       	push	r1
    b778:	cd b7       	in	r28, 0x3d	; 61
    b77a:	de b7       	in	r29, 0x3e	; 62
    b77c:	89 83       	std	Y+1, r24	; 0x01
    b77e:	69 81       	ldd	r22, Y+1	; 0x01
    b780:	80 e0       	ldi	r24, 0x00	; 0
    b782:	0e 94 ef 5a 	call	0xb5de	; 0xb5de <PORTE_set_pin_dir>
    b786:	00 00       	nop
    b788:	0f 90       	pop	r0
    b78a:	df 91       	pop	r29
    b78c:	cf 91       	pop	r28
    b78e:	08 95       	ret

0000b790 <PE0_set_level>:
    b790:	cf 93       	push	r28
    b792:	df 93       	push	r29
    b794:	1f 92       	push	r1
    b796:	cd b7       	in	r28, 0x3d	; 61
    b798:	de b7       	in	r29, 0x3e	; 62
    b79a:	89 83       	std	Y+1, r24	; 0x01
    b79c:	69 81       	ldd	r22, Y+1	; 0x01
    b79e:	80 e0       	ldi	r24, 0x00	; 0
    b7a0:	0e 94 43 5b 	call	0xb686	; 0xb686 <PORTE_set_pin_level>
    b7a4:	00 00       	nop
    b7a6:	0f 90       	pop	r0
    b7a8:	df 91       	pop	r29
    b7aa:	cf 91       	pop	r28
    b7ac:	08 95       	ret

0000b7ae <PE1_set_pull_mode>:
    b7ae:	cf 93       	push	r28
    b7b0:	df 93       	push	r29
    b7b2:	1f 92       	push	r1
    b7b4:	cd b7       	in	r28, 0x3d	; 61
    b7b6:	de b7       	in	r29, 0x3e	; 62
    b7b8:	89 83       	std	Y+1, r24	; 0x01
    b7ba:	69 81       	ldd	r22, Y+1	; 0x01
    b7bc:	81 e0       	ldi	r24, 0x01	; 1
    b7be:	0e 94 be 5a 	call	0xb57c	; 0xb57c <PORTE_set_pin_pull_mode>
    b7c2:	00 00       	nop
    b7c4:	0f 90       	pop	r0
    b7c6:	df 91       	pop	r29
    b7c8:	cf 91       	pop	r28
    b7ca:	08 95       	ret

0000b7cc <PE1_set_dir>:
    b7cc:	cf 93       	push	r28
    b7ce:	df 93       	push	r29
    b7d0:	1f 92       	push	r1
    b7d2:	cd b7       	in	r28, 0x3d	; 61
    b7d4:	de b7       	in	r29, 0x3e	; 62
    b7d6:	89 83       	std	Y+1, r24	; 0x01
    b7d8:	69 81       	ldd	r22, Y+1	; 0x01
    b7da:	81 e0       	ldi	r24, 0x01	; 1
    b7dc:	0e 94 ef 5a 	call	0xb5de	; 0xb5de <PORTE_set_pin_dir>
    b7e0:	00 00       	nop
    b7e2:	0f 90       	pop	r0
    b7e4:	df 91       	pop	r29
    b7e6:	cf 91       	pop	r28
    b7e8:	08 95       	ret

0000b7ea <nextFullSBTxBuffer>:
    b7ea:	cf 93       	push	r28
    b7ec:	df 93       	push	r29
    b7ee:	00 d0       	rcall	.+0      	; 0xb7f0 <nextFullSBTxBuffer+0x6>
    b7f0:	cd b7       	in	r28, 0x3d	; 61
    b7f2:	de b7       	in	r29, 0x3e	; 62
    b7f4:	81 e0       	ldi	r24, 0x01	; 1
    b7f6:	89 83       	std	Y+1, r24	; 0x01
    b7f8:	1a 82       	std	Y+2, r1	; 0x02
    b7fa:	80 91 a1 4a 	lds	r24, 0x4AA1	; 0x804aa1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b7fe:	28 2f       	mov	r18, r24
    b800:	30 e0       	ldi	r19, 0x00	; 0
    b802:	49 e2       	ldi	r20, 0x29	; 41
    b804:	42 9f       	mul	r20, r18
    b806:	c0 01       	movw	r24, r0
    b808:	43 9f       	mul	r20, r19
    b80a:	90 0d       	add	r25, r0
    b80c:	11 24       	eor	r1, r1
    b80e:	88 55       	subi	r24, 0x58	; 88
    b810:	96 4b       	sbci	r25, 0xB6	; 182
    b812:	fc 01       	movw	r30, r24
    b814:	90 81       	ld	r25, Z
    b816:	81 e0       	ldi	r24, 0x01	; 1
    b818:	99 23       	and	r25, r25
    b81a:	09 f0       	breq	.+2      	; 0xb81e <nextFullSBTxBuffer+0x34>
    b81c:	80 e0       	ldi	r24, 0x00	; 0
    b81e:	88 23       	and	r24, r24
    b820:	c1 f0       	breq	.+48     	; 0xb852 <nextFullSBTxBuffer+0x68>
    b822:	8a 81       	ldd	r24, Y+2	; 0x02
    b824:	8f 5f       	subi	r24, 0xFF	; 255
    b826:	8a 83       	std	Y+2, r24	; 0x02
    b828:	81 e0       	ldi	r24, 0x01	; 1
    b82a:	9a 81       	ldd	r25, Y+2	; 0x02
    b82c:	93 30       	cpi	r25, 0x03	; 3
    b82e:	08 f4       	brcc	.+2      	; 0xb832 <nextFullSBTxBuffer+0x48>
    b830:	80 e0       	ldi	r24, 0x00	; 0
    b832:	88 23       	and	r24, r24
    b834:	11 f0       	breq	.+4      	; 0xb83a <nextFullSBTxBuffer+0x50>
    b836:	19 82       	std	Y+1, r1	; 0x01
    b838:	0c c0       	rjmp	.+24     	; 0xb852 <nextFullSBTxBuffer+0x68>
    b83a:	80 91 a1 4a 	lds	r24, 0x4AA1	; 0x804aa1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b83e:	8f 5f       	subi	r24, 0xFF	; 255
    b840:	80 93 a1 4a 	sts	0x4AA1, r24	; 0x804aa1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b844:	80 91 a1 4a 	lds	r24, 0x4AA1	; 0x804aa1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b848:	83 30       	cpi	r24, 0x03	; 3
    b84a:	b8 f2       	brcs	.-82     	; 0xb7fa <nextFullSBTxBuffer+0x10>
    b84c:	10 92 a1 4a 	sts	0x4AA1, r1	; 0x804aa1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b850:	d4 cf       	rjmp	.-88     	; 0xb7fa <nextFullSBTxBuffer+0x10>
    b852:	89 81       	ldd	r24, Y+1	; 0x01
    b854:	88 23       	and	r24, r24
    b856:	69 f0       	breq	.+26     	; 0xb872 <nextFullSBTxBuffer+0x88>
    b858:	80 91 a1 4a 	lds	r24, 0x4AA1	; 0x804aa1 <_ZZ18nextFullSBTxBufferE11bufferIndex>
    b85c:	28 2f       	mov	r18, r24
    b85e:	30 e0       	ldi	r19, 0x00	; 0
    b860:	49 e2       	ldi	r20, 0x29	; 41
    b862:	42 9f       	mul	r20, r18
    b864:	c0 01       	movw	r24, r0
    b866:	43 9f       	mul	r20, r19
    b868:	90 0d       	add	r25, r0
    b86a:	11 24       	eor	r1, r1
    b86c:	88 55       	subi	r24, 0x58	; 88
    b86e:	96 4b       	sbci	r25, 0xB6	; 182
    b870:	02 c0       	rjmp	.+4      	; 0xb876 <nextFullSBTxBuffer+0x8c>
    b872:	80 e0       	ldi	r24, 0x00	; 0
    b874:	90 e0       	ldi	r25, 0x00	; 0
    b876:	0f 90       	pop	r0
    b878:	0f 90       	pop	r0
    b87a:	df 91       	pop	r29
    b87c:	cf 91       	pop	r28
    b87e:	08 95       	ret

0000b880 <nextEmptySBTxBuffer>:
    b880:	cf 93       	push	r28
    b882:	df 93       	push	r29
    b884:	00 d0       	rcall	.+0      	; 0xb886 <nextEmptySBTxBuffer+0x6>
    b886:	cd b7       	in	r28, 0x3d	; 61
    b888:	de b7       	in	r29, 0x3e	; 62
    b88a:	81 e0       	ldi	r24, 0x01	; 1
    b88c:	89 83       	std	Y+1, r24	; 0x01
    b88e:	1a 82       	std	Y+2, r1	; 0x02
    b890:	80 91 a2 4a 	lds	r24, 0x4AA2	; 0x804aa2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b894:	28 2f       	mov	r18, r24
    b896:	30 e0       	ldi	r19, 0x00	; 0
    b898:	49 e2       	ldi	r20, 0x29	; 41
    b89a:	42 9f       	mul	r20, r18
    b89c:	c0 01       	movw	r24, r0
    b89e:	43 9f       	mul	r20, r19
    b8a0:	90 0d       	add	r25, r0
    b8a2:	11 24       	eor	r1, r1
    b8a4:	88 55       	subi	r24, 0x58	; 88
    b8a6:	96 4b       	sbci	r25, 0xB6	; 182
    b8a8:	fc 01       	movw	r30, r24
    b8aa:	90 81       	ld	r25, Z
    b8ac:	81 e0       	ldi	r24, 0x01	; 1
    b8ae:	99 23       	and	r25, r25
    b8b0:	09 f4       	brne	.+2      	; 0xb8b4 <nextEmptySBTxBuffer+0x34>
    b8b2:	80 e0       	ldi	r24, 0x00	; 0
    b8b4:	88 23       	and	r24, r24
    b8b6:	c1 f0       	breq	.+48     	; 0xb8e8 <nextEmptySBTxBuffer+0x68>
    b8b8:	8a 81       	ldd	r24, Y+2	; 0x02
    b8ba:	8f 5f       	subi	r24, 0xFF	; 255
    b8bc:	8a 83       	std	Y+2, r24	; 0x02
    b8be:	81 e0       	ldi	r24, 0x01	; 1
    b8c0:	9a 81       	ldd	r25, Y+2	; 0x02
    b8c2:	93 30       	cpi	r25, 0x03	; 3
    b8c4:	08 f4       	brcc	.+2      	; 0xb8c8 <nextEmptySBTxBuffer+0x48>
    b8c6:	80 e0       	ldi	r24, 0x00	; 0
    b8c8:	88 23       	and	r24, r24
    b8ca:	11 f0       	breq	.+4      	; 0xb8d0 <nextEmptySBTxBuffer+0x50>
    b8cc:	19 82       	std	Y+1, r1	; 0x01
    b8ce:	0c c0       	rjmp	.+24     	; 0xb8e8 <nextEmptySBTxBuffer+0x68>
    b8d0:	80 91 a2 4a 	lds	r24, 0x4AA2	; 0x804aa2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b8d4:	8f 5f       	subi	r24, 0xFF	; 255
    b8d6:	80 93 a2 4a 	sts	0x4AA2, r24	; 0x804aa2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b8da:	80 91 a2 4a 	lds	r24, 0x4AA2	; 0x804aa2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b8de:	83 30       	cpi	r24, 0x03	; 3
    b8e0:	b8 f2       	brcs	.-82     	; 0xb890 <nextEmptySBTxBuffer+0x10>
    b8e2:	10 92 a2 4a 	sts	0x4AA2, r1	; 0x804aa2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b8e6:	d4 cf       	rjmp	.-88     	; 0xb890 <nextEmptySBTxBuffer+0x10>
    b8e8:	89 81       	ldd	r24, Y+1	; 0x01
    b8ea:	88 23       	and	r24, r24
    b8ec:	69 f0       	breq	.+26     	; 0xb908 <nextEmptySBTxBuffer+0x88>
    b8ee:	80 91 a2 4a 	lds	r24, 0x4AA2	; 0x804aa2 <_ZZ19nextEmptySBTxBufferE11bufferIndex>
    b8f2:	28 2f       	mov	r18, r24
    b8f4:	30 e0       	ldi	r19, 0x00	; 0
    b8f6:	49 e2       	ldi	r20, 0x29	; 41
    b8f8:	42 9f       	mul	r20, r18
    b8fa:	c0 01       	movw	r24, r0
    b8fc:	43 9f       	mul	r20, r19
    b8fe:	90 0d       	add	r25, r0
    b900:	11 24       	eor	r1, r1
    b902:	88 55       	subi	r24, 0x58	; 88
    b904:	96 4b       	sbci	r25, 0xB6	; 182
    b906:	02 c0       	rjmp	.+4      	; 0xb90c <nextEmptySBTxBuffer+0x8c>
    b908:	80 e0       	ldi	r24, 0x00	; 0
    b90a:	90 e0       	ldi	r25, 0x00	; 0
    b90c:	0f 90       	pop	r0
    b90e:	0f 90       	pop	r0
    b910:	df 91       	pop	r29
    b912:	cf 91       	pop	r28
    b914:	08 95       	ret

0000b916 <nextEmptySBRxBuffer>:
    b916:	cf 93       	push	r28
    b918:	df 93       	push	r29
    b91a:	00 d0       	rcall	.+0      	; 0xb91c <nextEmptySBRxBuffer+0x6>
    b91c:	cd b7       	in	r28, 0x3d	; 61
    b91e:	de b7       	in	r29, 0x3e	; 62
    b920:	81 e0       	ldi	r24, 0x01	; 1
    b922:	89 83       	std	Y+1, r24	; 0x01
    b924:	1a 82       	std	Y+2, r1	; 0x02
    b926:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b92a:	28 2f       	mov	r18, r24
    b92c:	30 e0       	ldi	r19, 0x00	; 0
    b92e:	4f e3       	ldi	r20, 0x3F	; 63
    b930:	42 9f       	mul	r20, r18
    b932:	c0 01       	movw	r24, r0
    b934:	43 9f       	mul	r20, r19
    b936:	90 0d       	add	r25, r0
    b938:	11 24       	eor	r1, r1
    b93a:	8c 5d       	subi	r24, 0xDC	; 220
    b93c:	95 4b       	sbci	r25, 0xB5	; 181
    b93e:	fc 01       	movw	r30, r24
    b940:	80 81       	ld	r24, Z
    b942:	91 81       	ldd	r25, Z+1	; 0x01
    b944:	21 e0       	ldi	r18, 0x01	; 1
    b946:	89 2b       	or	r24, r25
    b948:	09 f4       	brne	.+2      	; 0xb94c <nextEmptySBRxBuffer+0x36>
    b94a:	20 e0       	ldi	r18, 0x00	; 0
    b94c:	22 23       	and	r18, r18
    b94e:	c1 f0       	breq	.+48     	; 0xb980 <nextEmptySBRxBuffer+0x6a>
    b950:	8a 81       	ldd	r24, Y+2	; 0x02
    b952:	8f 5f       	subi	r24, 0xFF	; 255
    b954:	8a 83       	std	Y+2, r24	; 0x02
    b956:	81 e0       	ldi	r24, 0x01	; 1
    b958:	9a 81       	ldd	r25, Y+2	; 0x02
    b95a:	92 30       	cpi	r25, 0x02	; 2
    b95c:	08 f4       	brcc	.+2      	; 0xb960 <nextEmptySBRxBuffer+0x4a>
    b95e:	80 e0       	ldi	r24, 0x00	; 0
    b960:	88 23       	and	r24, r24
    b962:	11 f0       	breq	.+4      	; 0xb968 <nextEmptySBRxBuffer+0x52>
    b964:	19 82       	std	Y+1, r1	; 0x01
    b966:	0c c0       	rjmp	.+24     	; 0xb980 <nextEmptySBRxBuffer+0x6a>
    b968:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b96c:	8f 5f       	subi	r24, 0xFF	; 255
    b96e:	80 93 a3 4a 	sts	0x4AA3, r24	; 0x804aa3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b972:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b976:	82 30       	cpi	r24, 0x02	; 2
    b978:	b0 f2       	brcs	.-84     	; 0xb926 <nextEmptySBRxBuffer+0x10>
    b97a:	10 92 a3 4a 	sts	0x4AA3, r1	; 0x804aa3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b97e:	d3 cf       	rjmp	.-90     	; 0xb926 <nextEmptySBRxBuffer+0x10>
    b980:	89 81       	ldd	r24, Y+1	; 0x01
    b982:	88 23       	and	r24, r24
    b984:	69 f0       	breq	.+26     	; 0xb9a0 <nextEmptySBRxBuffer+0x8a>
    b986:	80 91 a3 4a 	lds	r24, 0x4AA3	; 0x804aa3 <_ZZ19nextEmptySBRxBufferE11bufferIndex>
    b98a:	28 2f       	mov	r18, r24
    b98c:	30 e0       	ldi	r19, 0x00	; 0
    b98e:	4f e3       	ldi	r20, 0x3F	; 63
    b990:	42 9f       	mul	r20, r18
    b992:	c0 01       	movw	r24, r0
    b994:	43 9f       	mul	r20, r19
    b996:	90 0d       	add	r25, r0
    b998:	11 24       	eor	r1, r1
    b99a:	8d 5d       	subi	r24, 0xDD	; 221
    b99c:	95 4b       	sbci	r25, 0xB5	; 181
    b99e:	02 c0       	rjmp	.+4      	; 0xb9a4 <nextEmptySBRxBuffer+0x8e>
    b9a0:	80 e0       	ldi	r24, 0x00	; 0
    b9a2:	90 e0       	ldi	r25, 0x00	; 0
    b9a4:	0f 90       	pop	r0
    b9a6:	0f 90       	pop	r0
    b9a8:	df 91       	pop	r29
    b9aa:	cf 91       	pop	r28
    b9ac:	08 95       	ret

0000b9ae <nextFullSBRxBuffer>:
    b9ae:	cf 93       	push	r28
    b9b0:	df 93       	push	r29
    b9b2:	00 d0       	rcall	.+0      	; 0xb9b4 <nextFullSBRxBuffer+0x6>
    b9b4:	cd b7       	in	r28, 0x3d	; 61
    b9b6:	de b7       	in	r29, 0x3e	; 62
    b9b8:	81 e0       	ldi	r24, 0x01	; 1
    b9ba:	89 83       	std	Y+1, r24	; 0x01
    b9bc:	1a 82       	std	Y+2, r1	; 0x02
    b9be:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    b9c2:	28 2f       	mov	r18, r24
    b9c4:	30 e0       	ldi	r19, 0x00	; 0
    b9c6:	4f e3       	ldi	r20, 0x3F	; 63
    b9c8:	42 9f       	mul	r20, r18
    b9ca:	c0 01       	movw	r24, r0
    b9cc:	43 9f       	mul	r20, r19
    b9ce:	90 0d       	add	r25, r0
    b9d0:	11 24       	eor	r1, r1
    b9d2:	8c 5d       	subi	r24, 0xDC	; 220
    b9d4:	95 4b       	sbci	r25, 0xB5	; 181
    b9d6:	fc 01       	movw	r30, r24
    b9d8:	80 81       	ld	r24, Z
    b9da:	91 81       	ldd	r25, Z+1	; 0x01
    b9dc:	21 e0       	ldi	r18, 0x01	; 1
    b9de:	89 2b       	or	r24, r25
    b9e0:	09 f0       	breq	.+2      	; 0xb9e4 <nextFullSBRxBuffer+0x36>
    b9e2:	20 e0       	ldi	r18, 0x00	; 0
    b9e4:	22 23       	and	r18, r18
    b9e6:	c1 f0       	breq	.+48     	; 0xba18 <nextFullSBRxBuffer+0x6a>
    b9e8:	8a 81       	ldd	r24, Y+2	; 0x02
    b9ea:	8f 5f       	subi	r24, 0xFF	; 255
    b9ec:	8a 83       	std	Y+2, r24	; 0x02
    b9ee:	81 e0       	ldi	r24, 0x01	; 1
    b9f0:	9a 81       	ldd	r25, Y+2	; 0x02
    b9f2:	92 30       	cpi	r25, 0x02	; 2
    b9f4:	08 f4       	brcc	.+2      	; 0xb9f8 <nextFullSBRxBuffer+0x4a>
    b9f6:	80 e0       	ldi	r24, 0x00	; 0
    b9f8:	88 23       	and	r24, r24
    b9fa:	11 f0       	breq	.+4      	; 0xba00 <nextFullSBRxBuffer+0x52>
    b9fc:	19 82       	std	Y+1, r1	; 0x01
    b9fe:	0c c0       	rjmp	.+24     	; 0xba18 <nextFullSBRxBuffer+0x6a>
    ba00:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    ba04:	8f 5f       	subi	r24, 0xFF	; 255
    ba06:	80 93 a4 4a 	sts	0x4AA4, r24	; 0x804aa4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    ba0a:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    ba0e:	82 30       	cpi	r24, 0x02	; 2
    ba10:	b0 f2       	brcs	.-84     	; 0xb9be <nextFullSBRxBuffer+0x10>
    ba12:	10 92 a4 4a 	sts	0x4AA4, r1	; 0x804aa4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    ba16:	d3 cf       	rjmp	.-90     	; 0xb9be <nextFullSBRxBuffer+0x10>
    ba18:	89 81       	ldd	r24, Y+1	; 0x01
    ba1a:	88 23       	and	r24, r24
    ba1c:	69 f0       	breq	.+26     	; 0xba38 <nextFullSBRxBuffer+0x8a>
    ba1e:	80 91 a4 4a 	lds	r24, 0x4AA4	; 0x804aa4 <_ZZ18nextFullSBRxBufferE11bufferIndex>
    ba22:	28 2f       	mov	r18, r24
    ba24:	30 e0       	ldi	r19, 0x00	; 0
    ba26:	4f e3       	ldi	r20, 0x3F	; 63
    ba28:	42 9f       	mul	r20, r18
    ba2a:	c0 01       	movw	r24, r0
    ba2c:	43 9f       	mul	r20, r19
    ba2e:	90 0d       	add	r25, r0
    ba30:	11 24       	eor	r1, r1
    ba32:	8d 5d       	subi	r24, 0xDD	; 221
    ba34:	95 4b       	sbci	r25, 0xB5	; 181
    ba36:	02 c0       	rjmp	.+4      	; 0xba3c <nextFullSBRxBuffer+0x8e>
    ba38:	80 e0       	ldi	r24, 0x00	; 0
    ba3a:	90 e0       	ldi	r25, 0x00	; 0
    ba3c:	0f 90       	pop	r0
    ba3e:	0f 90       	pop	r0
    ba40:	df 91       	pop	r29
    ba42:	cf 91       	pop	r28
    ba44:	08 95       	ret

0000ba46 <serialbusTxInProgress>:
    ba46:	cf 93       	push	r28
    ba48:	df 93       	push	r29
    ba4a:	cd b7       	in	r28, 0x3d	; 61
    ba4c:	de b7       	in	r29, 0x3e	; 62
    ba4e:	80 91 a7 49 	lds	r24, 0x49A7	; 0x8049a7 <_ZL19serialbus_tx_active>
    ba52:	df 91       	pop	r29
    ba54:	cf 91       	pop	r28
    ba56:	08 95       	ret

0000ba58 <_Z18serialbus_start_txv>:
    ba58:	cf 93       	push	r28
    ba5a:	df 93       	push	r29
    ba5c:	1f 92       	push	r1
    ba5e:	cd b7       	in	r28, 0x3d	; 61
    ba60:	de b7       	in	r29, 0x3e	; 62
    ba62:	90 91 a7 49 	lds	r25, 0x49A7	; 0x8049a7 <_ZL19serialbus_tx_active>
    ba66:	81 e0       	ldi	r24, 0x01	; 1
    ba68:	89 27       	eor	r24, r25
    ba6a:	89 83       	std	Y+1, r24	; 0x01
    ba6c:	89 81       	ldd	r24, Y+1	; 0x01
    ba6e:	88 23       	and	r24, r24
    ba70:	61 f0       	breq	.+24     	; 0xba8a <_Z18serialbus_start_txv+0x32>
    ba72:	81 e0       	ldi	r24, 0x01	; 1
    ba74:	80 93 a7 49 	sts	0x49A7, r24	; 0x8049a7 <_ZL19serialbus_tx_active>
    ba78:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    ba7c:	88 23       	and	r24, r24
    ba7e:	19 f4       	brne	.+6      	; 0xba86 <_Z18serialbus_start_txv+0x2e>
    ba80:	0e 94 fd 6e 	call	0xddfa	; 0xddfa <USART4_enable_tx>
    ba84:	02 c0       	rjmp	.+4      	; 0xba8a <_Z18serialbus_start_txv+0x32>
    ba86:	0e 94 77 6e 	call	0xdcee	; 0xdcee <USART1_enable_tx>
    ba8a:	89 81       	ldd	r24, Y+1	; 0x01
    ba8c:	0f 90       	pop	r0
    ba8e:	df 91       	pop	r29
    ba90:	cf 91       	pop	r28
    ba92:	08 95       	ret

0000ba94 <serialbus_end_tx>:
    ba94:	cf 93       	push	r28
    ba96:	df 93       	push	r29
    ba98:	cd b7       	in	r28, 0x3d	; 61
    ba9a:	de b7       	in	r29, 0x3e	; 62
    ba9c:	80 91 a7 49 	lds	r24, 0x49A7	; 0x8049a7 <_ZL19serialbus_tx_active>
    baa0:	88 23       	and	r24, r24
    baa2:	c9 f0       	breq	.+50     	; 0xbad6 <serialbus_end_tx+0x42>
    baa4:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    baa8:	84 30       	cpi	r24, 0x04	; 4
    baaa:	51 f4       	brne	.+20     	; 0xbac0 <serialbus_end_tx+0x2c>
    baac:	80 e8       	ldi	r24, 0x80	; 128
    baae:	98 e0       	ldi	r25, 0x08	; 8
    bab0:	20 e8       	ldi	r18, 0x80	; 128
    bab2:	38 e0       	ldi	r19, 0x08	; 8
    bab4:	f9 01       	movw	r30, r18
    bab6:	25 81       	ldd	r18, Z+5	; 0x05
    bab8:	2f 7d       	andi	r18, 0xDF	; 223
    baba:	fc 01       	movw	r30, r24
    babc:	25 83       	std	Z+5, r18	; 0x05
    babe:	09 c0       	rjmp	.+18     	; 0xbad2 <serialbus_end_tx+0x3e>
    bac0:	80 e2       	ldi	r24, 0x20	; 32
    bac2:	98 e0       	ldi	r25, 0x08	; 8
    bac4:	20 e2       	ldi	r18, 0x20	; 32
    bac6:	38 e0       	ldi	r19, 0x08	; 8
    bac8:	f9 01       	movw	r30, r18
    baca:	25 81       	ldd	r18, Z+5	; 0x05
    bacc:	2f 7d       	andi	r18, 0xDF	; 223
    bace:	fc 01       	movw	r30, r24
    bad0:	25 83       	std	Z+5, r18	; 0x05
    bad2:	10 92 a7 49 	sts	0x49A7, r1	; 0x8049a7 <_ZL19serialbus_tx_active>
    bad6:	00 00       	nop
    bad8:	df 91       	pop	r29
    bada:	cf 91       	pop	r28
    badc:	08 95       	ret

0000bade <_ZL21USART1_initializationm>:
    bade:	cf 93       	push	r28
    bae0:	df 93       	push	r29
    bae2:	00 d0       	rcall	.+0      	; 0xbae4 <_ZL21USART1_initializationm+0x6>
    bae4:	00 d0       	rcall	.+0      	; 0xbae6 <_ZL21USART1_initializationm+0x8>
    bae6:	cd b7       	in	r28, 0x3d	; 61
    bae8:	de b7       	in	r29, 0x3e	; 62
    baea:	69 83       	std	Y+1, r22	; 0x01
    baec:	7a 83       	std	Y+2, r23	; 0x02
    baee:	8b 83       	std	Y+3, r24	; 0x03
    baf0:	9c 83       	std	Y+4, r25	; 0x04
    baf2:	80 e0       	ldi	r24, 0x00	; 0
    baf4:	0e 94 aa 5b 	call	0xb754	; 0xb754 <PC1_set_dir>
    baf8:	80 e0       	ldi	r24, 0x00	; 0
    bafa:	0e 94 9b 5b 	call	0xb736	; 0xb736 <PC1_set_pull_mode>
    bafe:	81 e0       	ldi	r24, 0x01	; 1
    bb00:	0e 94 7d 5b 	call	0xb6fa	; 0xb6fa <PC0_set_dir>
    bb04:	81 e0       	ldi	r24, 0x01	; 1
    bb06:	0e 94 8c 5b 	call	0xb718	; 0xb718 <PC0_set_level>
    bb0a:	89 81       	ldd	r24, Y+1	; 0x01
    bb0c:	9a 81       	ldd	r25, Y+2	; 0x02
    bb0e:	ab 81       	ldd	r26, Y+3	; 0x03
    bb10:	bc 81       	ldd	r27, Y+4	; 0x04
    bb12:	bc 01       	movw	r22, r24
    bb14:	cd 01       	movw	r24, r26
    bb16:	0e 94 20 6e 	call	0xdc40	; 0xdc40 <USART1_init>
    bb1a:	00 00       	nop
    bb1c:	24 96       	adiw	r28, 0x04	; 4
    bb1e:	cd bf       	out	0x3d, r28	; 61
    bb20:	de bf       	out	0x3e, r29	; 62
    bb22:	df 91       	pop	r29
    bb24:	cf 91       	pop	r28
    bb26:	08 95       	ret

0000bb28 <_ZL21USART4_initializationm>:
    bb28:	cf 93       	push	r28
    bb2a:	df 93       	push	r29
    bb2c:	00 d0       	rcall	.+0      	; 0xbb2e <_ZL21USART4_initializationm+0x6>
    bb2e:	00 d0       	rcall	.+0      	; 0xbb30 <_ZL21USART4_initializationm+0x8>
    bb30:	cd b7       	in	r28, 0x3d	; 61
    bb32:	de b7       	in	r29, 0x3e	; 62
    bb34:	69 83       	std	Y+1, r22	; 0x01
    bb36:	7a 83       	std	Y+2, r23	; 0x02
    bb38:	8b 83       	std	Y+3, r24	; 0x03
    bb3a:	9c 83       	std	Y+4, r25	; 0x04
    bb3c:	80 e0       	ldi	r24, 0x00	; 0
    bb3e:	0e 94 e6 5b 	call	0xb7cc	; 0xb7cc <PE1_set_dir>
    bb42:	80 e0       	ldi	r24, 0x00	; 0
    bb44:	0e 94 d7 5b 	call	0xb7ae	; 0xb7ae <PE1_set_pull_mode>
    bb48:	81 e0       	ldi	r24, 0x01	; 1
    bb4a:	0e 94 b9 5b 	call	0xb772	; 0xb772 <PE0_set_dir>
    bb4e:	81 e0       	ldi	r24, 0x01	; 1
    bb50:	0e 94 c8 5b 	call	0xb790	; 0xb790 <PE0_set_level>
    bb54:	89 81       	ldd	r24, Y+1	; 0x01
    bb56:	9a 81       	ldd	r25, Y+2	; 0x02
    bb58:	ab 81       	ldd	r26, Y+3	; 0x03
    bb5a:	bc 81       	ldd	r27, Y+4	; 0x04
    bb5c:	bc 01       	movw	r22, r24
    bb5e:	cd 01       	movw	r24, r26
    bb60:	0e 94 ad 6e 	call	0xdd5a	; 0xdd5a <USART4_init>
    bb64:	00 00       	nop
    bb66:	24 96       	adiw	r28, 0x04	; 4
    bb68:	cd bf       	out	0x3d, r28	; 61
    bb6a:	de bf       	out	0x3e, r29	; 62
    bb6c:	df 91       	pop	r29
    bb6e:	cf 91       	pop	r28
    bb70:	08 95       	ret

0000bb72 <serialbus_init>:
    bb72:	cf 93       	push	r28
    bb74:	df 93       	push	r29
    bb76:	cd b7       	in	r28, 0x3d	; 61
    bb78:	de b7       	in	r29, 0x3e	; 62
    bb7a:	27 97       	sbiw	r28, 0x07	; 7
    bb7c:	cd bf       	out	0x3d, r28	; 61
    bb7e:	de bf       	out	0x3e, r29	; 62
    bb80:	6b 83       	std	Y+3, r22	; 0x03
    bb82:	7c 83       	std	Y+4, r23	; 0x04
    bb84:	8d 83       	std	Y+5, r24	; 0x05
    bb86:	9e 83       	std	Y+6, r25	; 0x06
    bb88:	4f 83       	std	Y+7, r20	; 0x07
    bb8a:	4f e3       	ldi	r20, 0x3F	; 63
    bb8c:	50 e0       	ldi	r21, 0x00	; 0
    bb8e:	60 e0       	ldi	r22, 0x00	; 0
    bb90:	70 e0       	ldi	r23, 0x00	; 0
    bb92:	83 e2       	ldi	r24, 0x23	; 35
    bb94:	9a e4       	ldi	r25, 0x4A	; 74
    bb96:	0e 94 88 77 	call	0xef10	; 0xef10 <memset>
    bb9a:	19 82       	std	Y+1, r1	; 0x01
    bb9c:	1a 82       	std	Y+2, r1	; 0x02
    bb9e:	89 81       	ldd	r24, Y+1	; 0x01
    bba0:	9a 81       	ldd	r25, Y+2	; 0x02
    bba2:	03 97       	sbiw	r24, 0x03	; 3
    bba4:	94 f4       	brge	.+36     	; 0xbbca <serialbus_init+0x58>
    bba6:	29 81       	ldd	r18, Y+1	; 0x01
    bba8:	3a 81       	ldd	r19, Y+2	; 0x02
    bbaa:	49 e2       	ldi	r20, 0x29	; 41
    bbac:	42 9f       	mul	r20, r18
    bbae:	c0 01       	movw	r24, r0
    bbb0:	43 9f       	mul	r20, r19
    bbb2:	90 0d       	add	r25, r0
    bbb4:	11 24       	eor	r1, r1
    bbb6:	88 55       	subi	r24, 0x58	; 88
    bbb8:	96 4b       	sbci	r25, 0xB6	; 182
    bbba:	fc 01       	movw	r30, r24
    bbbc:	10 82       	st	Z, r1
    bbbe:	89 81       	ldd	r24, Y+1	; 0x01
    bbc0:	9a 81       	ldd	r25, Y+2	; 0x02
    bbc2:	01 96       	adiw	r24, 0x01	; 1
    bbc4:	89 83       	std	Y+1, r24	; 0x01
    bbc6:	9a 83       	std	Y+2, r25	; 0x02
    bbc8:	ea cf       	rjmp	.-44     	; 0xbb9e <serialbus_init+0x2c>
    bbca:	8f 81       	ldd	r24, Y+7	; 0x07
    bbcc:	86 30       	cpi	r24, 0x06	; 6
    bbce:	21 f4       	brne	.+8      	; 0xbbd8 <serialbus_init+0x66>
    bbd0:	80 91 2c 40 	lds	r24, 0x402C	; 0x80402c <g_serialbus_usart_number>
    bbd4:	87 30       	cpi	r24, 0x07	; 7
    bbd6:	b9 f4       	brne	.+46     	; 0xbc06 <serialbus_init+0x94>
    bbd8:	8f 81       	ldd	r24, Y+7	; 0x07
    bbda:	84 30       	cpi	r24, 0x04	; 4
    bbdc:	49 f4       	brne	.+18     	; 0xbbf0 <serialbus_init+0x7e>
    bbde:	8b 81       	ldd	r24, Y+3	; 0x03
    bbe0:	9c 81       	ldd	r25, Y+4	; 0x04
    bbe2:	ad 81       	ldd	r26, Y+5	; 0x05
    bbe4:	be 81       	ldd	r27, Y+6	; 0x06
    bbe6:	bc 01       	movw	r22, r24
    bbe8:	cd 01       	movw	r24, r26
    bbea:	0e 94 94 5d 	call	0xbb28	; 0xbb28 <_ZL21USART4_initializationm>
    bbee:	08 c0       	rjmp	.+16     	; 0xbc00 <serialbus_init+0x8e>
    bbf0:	8b 81       	ldd	r24, Y+3	; 0x03
    bbf2:	9c 81       	ldd	r25, Y+4	; 0x04
    bbf4:	ad 81       	ldd	r26, Y+5	; 0x05
    bbf6:	be 81       	ldd	r27, Y+6	; 0x06
    bbf8:	bc 01       	movw	r22, r24
    bbfa:	cd 01       	movw	r24, r26
    bbfc:	0e 94 6f 5d 	call	0xbade	; 0xbade <_ZL21USART1_initializationm>
    bc00:	8f 81       	ldd	r24, Y+7	; 0x07
    bc02:	80 93 2c 40 	sts	0x402C, r24	; 0x80402c <g_serialbus_usart_number>
    bc06:	10 92 2d 40 	sts	0x402D, r1	; 0x80402d <_ZL14g_bus_disabled>
    bc0a:	00 00       	nop
    bc0c:	27 96       	adiw	r28, 0x07	; 7
    bc0e:	cd bf       	out	0x3d, r28	; 61
    bc10:	de bf       	out	0x3e, r29	; 62
    bc12:	df 91       	pop	r29
    bc14:	cf 91       	pop	r28
    bc16:	08 95       	ret

0000bc18 <_Z19serialbus_send_textPc>:


bool serialbus_send_text(char* text)
{
    bc18:	cf 93       	push	r28
    bc1a:	df 93       	push	r29
    bc1c:	cd b7       	in	r28, 0x3d	; 61
    bc1e:	de b7       	in	r29, 0x3e	; 62
    bc20:	27 97       	sbiw	r28, 0x07	; 7
    bc22:	cd bf       	out	0x3d, r28	; 61
    bc24:	de bf       	out	0x3e, r29	; 62
    bc26:	8e 83       	std	Y+6, r24	; 0x06
    bc28:	9f 83       	std	Y+7, r25	; 0x07
	bool err = true;
    bc2a:	81 e0       	ldi	r24, 0x01	; 1
    bc2c:	89 83       	std	Y+1, r24	; 0x01
	uint16_t tries = 200;
    bc2e:	88 ec       	ldi	r24, 0xC8	; 200
    bc30:	90 e0       	ldi	r25, 0x00	; 0
    bc32:	8a 83       	std	Y+2, r24	; 0x02
    bc34:	9b 83       	std	Y+3, r25	; 0x03

	if(g_bus_disabled)
    bc36:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZL14g_bus_disabled>
    bc3a:	88 23       	and	r24, r24
    bc3c:	11 f0       	breq	.+4      	; 0xbc42 <_Z19serialbus_send_textPc+0x2a>
	{
		return( err);
    bc3e:	89 81       	ldd	r24, Y+1	; 0x01
    bc40:	42 c0       	rjmp	.+132    	; 0xbcc6 <_Z19serialbus_send_textPc+0xae>
	}

	if(text)
    bc42:	8e 81       	ldd	r24, Y+6	; 0x06
    bc44:	9f 81       	ldd	r25, Y+7	; 0x07
    bc46:	89 2b       	or	r24, r25
    bc48:	e9 f1       	breq	.+122    	; 0xbcc4 <_Z19serialbus_send_textPc+0xac>
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();
    bc4a:	0e 94 40 5c 	call	0xb880	; 0xb880 <nextEmptySBTxBuffer>
    bc4e:	8c 83       	std	Y+4, r24	; 0x04
    bc50:	9d 83       	std	Y+5, r25	; 0x05

		while(!buff && tries)
    bc52:	8c 81       	ldd	r24, Y+4	; 0x04
    bc54:	9d 81       	ldd	r25, Y+5	; 0x05
    bc56:	89 2b       	or	r24, r25
    bc58:	01 f5       	brne	.+64     	; 0xbc9a <_Z19serialbus_send_textPc+0x82>
    bc5a:	8a 81       	ldd	r24, Y+2	; 0x02
    bc5c:	9b 81       	ldd	r25, Y+3	; 0x03
    bc5e:	89 2b       	or	r24, r25
    bc60:	e1 f0       	breq	.+56     	; 0xbc9a <_Z19serialbus_send_textPc+0x82>
		{
			while(serialbusTxInProgress() && tries)
    bc62:	0e 94 23 5d 	call	0xba46	; 0xba46 <serialbusTxInProgress>
    bc66:	88 23       	and	r24, r24
    bc68:	31 f0       	breq	.+12     	; 0xbc76 <_Z19serialbus_send_textPc+0x5e>
    bc6a:	8a 81       	ldd	r24, Y+2	; 0x02
    bc6c:	9b 81       	ldd	r25, Y+3	; 0x03
    bc6e:	89 2b       	or	r24, r25
    bc70:	11 f0       	breq	.+4      	; 0xbc76 <_Z19serialbus_send_textPc+0x5e>
    bc72:	81 e0       	ldi	r24, 0x01	; 1
    bc74:	01 c0       	rjmp	.+2      	; 0xbc78 <_Z19serialbus_send_textPc+0x60>
    bc76:	80 e0       	ldi	r24, 0x00	; 0
    bc78:	88 23       	and	r24, r24
    bc7a:	51 f0       	breq	.+20     	; 0xbc90 <_Z19serialbus_send_textPc+0x78>
			{
				if(tries)
    bc7c:	8a 81       	ldd	r24, Y+2	; 0x02
    bc7e:	9b 81       	ldd	r25, Y+3	; 0x03
    bc80:	89 2b       	or	r24, r25
    bc82:	79 f3       	breq	.-34     	; 0xbc62 <_Z19serialbus_send_textPc+0x4a>
				{
					tries--;    /* wait until transmit finishes */
    bc84:	8a 81       	ldd	r24, Y+2	; 0x02
    bc86:	9b 81       	ldd	r25, Y+3	; 0x03
    bc88:	01 97       	sbiw	r24, 0x01	; 1
    bc8a:	8a 83       	std	Y+2, r24	; 0x02
    bc8c:	9b 83       	std	Y+3, r25	; 0x03
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
		{
			while(serialbusTxInProgress() && tries)
    bc8e:	e9 cf       	rjmp	.-46     	; 0xbc62 <_Z19serialbus_send_textPc+0x4a>
				if(tries)
				{
					tries--;    /* wait until transmit finishes */
				}
			}
			buff = nextEmptySBTxBuffer();
    bc90:	0e 94 40 5c 	call	0xb880	; 0xb880 <nextEmptySBTxBuffer>
    bc94:	8c 83       	std	Y+4, r24	; 0x04
    bc96:	9d 83       	std	Y+5, r25	; 0x05

	if(text)
	{
		SerialbusTxBuffer* buff = nextEmptySBTxBuffer();

		while(!buff && tries)
    bc98:	dc cf       	rjmp	.-72     	; 0xbc52 <_Z19serialbus_send_textPc+0x3a>
				}
			}
			buff = nextEmptySBTxBuffer();
		}

		if(buff)
    bc9a:	8c 81       	ldd	r24, Y+4	; 0x04
    bc9c:	9d 81       	ldd	r25, Y+5	; 0x05
    bc9e:	89 2b       	or	r24, r25
    bca0:	89 f0       	breq	.+34     	; 0xbcc4 <_Z19serialbus_send_textPc+0xac>
		{
			sprintf(*buff, text);
    bca2:	8f 81       	ldd	r24, Y+7	; 0x07
    bca4:	8f 93       	push	r24
    bca6:	8e 81       	ldd	r24, Y+6	; 0x06
    bca8:	8f 93       	push	r24
    bcaa:	8d 81       	ldd	r24, Y+5	; 0x05
    bcac:	8f 93       	push	r24
    bcae:	8c 81       	ldd	r24, Y+4	; 0x04
    bcb0:	8f 93       	push	r24
    bcb2:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    bcb6:	0f 90       	pop	r0
    bcb8:	0f 90       	pop	r0
    bcba:	0f 90       	pop	r0
    bcbc:	0f 90       	pop	r0

			serialbus_start_tx();
    bcbe:	0e 94 2c 5d 	call	0xba58	; 0xba58 <_Z18serialbus_start_txv>
			err = false;
    bcc2:	19 82       	std	Y+1, r1	; 0x01
		}
	}

	return(err);
    bcc4:	89 81       	ldd	r24, Y+1	; 0x01
}
    bcc6:	27 96       	adiw	r28, 0x07	; 7
    bcc8:	cd bf       	out	0x3d, r28	; 61
    bcca:	de bf       	out	0x3e, r29	; 62
    bccc:	df 91       	pop	r29
    bcce:	cf 91       	pop	r28
    bcd0:	08 95       	ret

0000bcd2 <sb_send_NewPrompt>:
/***********************************************************************************
 *  Support for creating and sending various Terminal Mode Serialbus messages is provided below.
 ************************************************************************************/

void sb_send_NewPrompt(void)
{
    bcd2:	cf 93       	push	r28
    bcd4:	df 93       	push	r29
    bcd6:	cd b7       	in	r28, 0x3d	; 61
    bcd8:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    bcda:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZL14g_bus_disabled>
    bcde:	88 23       	and	r24, r24
    bce0:	39 f4       	brne	.+14     	; 0xbcf0 <sb_send_NewPrompt+0x1e>
	{
		return;
	}

	while(serialbus_send_text((char*)textPrompt))
    bce2:	87 e4       	ldi	r24, 0x47	; 71
    bce4:	96 e4       	ldi	r25, 0x46	; 70
    bce6:	0e 94 0c 5e 	call	0xbc18	; 0xbc18 <_Z19serialbus_send_textPc>
    bcea:	88 23       	and	r24, r24
    bcec:	11 f0       	breq	.+4      	; 0xbcf2 <sb_send_NewPrompt+0x20>
    bcee:	f9 cf       	rjmp	.-14     	; 0xbce2 <sb_send_NewPrompt+0x10>

void sb_send_NewPrompt(void)
{
	if(g_bus_disabled)
	{
		return;
    bcf0:	00 00       	nop

	while(serialbus_send_text((char*)textPrompt))
	{
		;
	}
}
    bcf2:	df 91       	pop	r29
    bcf4:	cf 91       	pop	r28
    bcf6:	08 95       	ret

0000bcf8 <sb_send_NewLine>:

void sb_send_NewLine(void)
{
    bcf8:	cf 93       	push	r28
    bcfa:	df 93       	push	r29
    bcfc:	cd b7       	in	r28, 0x3d	; 61
    bcfe:	de b7       	in	r29, 0x3e	; 62
	if(g_bus_disabled)
    bd00:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZL14g_bus_disabled>
    bd04:	88 23       	and	r24, r24
    bd06:	29 f4       	brne	.+10     	; 0xbd12 <sb_send_NewLine+0x1a>
	{
		return;
	}
	serialbus_send_text((char*)crlf);
    bd08:	85 e4       	ldi	r24, 0x45	; 69
    bd0a:	96 e4       	ldi	r25, 0x46	; 70
    bd0c:	0e 94 0c 5e 	call	0xbc18	; 0xbc18 <_Z19serialbus_send_textPc>
    bd10:	01 c0       	rjmp	.+2      	; 0xbd14 <sb_send_NewLine+0x1c>

void sb_send_NewLine(void)
{
	if(g_bus_disabled)
	{
		return;
    bd12:	00 00       	nop
	}
	serialbus_send_text((char*)crlf);
}
    bd14:	df 91       	pop	r29
    bd16:	cf 91       	pop	r28
    bd18:	08 95       	ret

0000bd1a <sb_echo_char>:

void sb_echo_char(uint8_t c)
{
    bd1a:	cf 93       	push	r28
    bd1c:	df 93       	push	r29
    bd1e:	1f 92       	push	r1
    bd20:	cd b7       	in	r28, 0x3d	; 61
    bd22:	de b7       	in	r29, 0x3e	; 62
    bd24:	89 83       	std	Y+1, r24	; 0x01
	if(g_bus_disabled)
    bd26:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZL14g_bus_disabled>
    bd2a:	88 23       	and	r24, r24
    bd2c:	51 f4       	brne	.+20     	; 0xbd42 <sb_echo_char+0x28>
	{
		return;
	}
	g_tempMsgBuff[0] = c;
    bd2e:	89 81       	ldd	r24, Y+1	; 0x01
    bd30:	80 93 75 49 	sts	0x4975, r24	; 0x804975 <_ZL13g_tempMsgBuff>
	g_tempMsgBuff[1] = '\0';
    bd34:	10 92 76 49 	sts	0x4976, r1	; 0x804976 <_ZL13g_tempMsgBuff+0x1>
	serialbus_send_text(g_tempMsgBuff);
    bd38:	85 e7       	ldi	r24, 0x75	; 117
    bd3a:	99 e4       	ldi	r25, 0x49	; 73
    bd3c:	0e 94 0c 5e 	call	0xbc18	; 0xbc18 <_Z19serialbus_send_textPc>
    bd40:	01 c0       	rjmp	.+2      	; 0xbd44 <sb_echo_char+0x2a>

void sb_echo_char(uint8_t c)
{
	if(g_bus_disabled)
	{
		return;
    bd42:	00 00       	nop
	}
	g_tempMsgBuff[0] = c;
	g_tempMsgBuff[1] = '\0';
	serialbus_send_text(g_tempMsgBuff);
}
    bd44:	0f 90       	pop	r0
    bd46:	df 91       	pop	r29
    bd48:	cf 91       	pop	r28
    bd4a:	08 95       	ret

0000bd4c <sb_send_string>:

bool sb_send_string(char* str)
{
    bd4c:	cf 93       	push	r28
    bd4e:	df 93       	push	r29
    bd50:	cd b7       	in	r28, 0x3d	; 61
    bd52:	de b7       	in	r29, 0x3e	; 62
    bd54:	e8 97       	sbiw	r28, 0x38	; 56
    bd56:	cd bf       	out	0x3d, r28	; 61
    bd58:	de bf       	out	0x3e, r29	; 62
    bd5a:	8f ab       	std	Y+55, r24	; 0x37
    bd5c:	98 af       	std	Y+56, r25	; 0x38
	char buf[SERIALBUS_MAX_TX_MSG_LENGTH+1];
	bool err = false;
    bd5e:	1b 82       	std	Y+3, r1	; 0x03
	uint16_t length, lengthToSend, lengthSent=0;
    bd60:	19 82       	std	Y+1, r1	; 0x01
    bd62:	1a 82       	std	Y+2, r1	; 0x02
	bool done = false;
    bd64:	1c 82       	std	Y+4, r1	; 0x04

	if(g_bus_disabled)
    bd66:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <_ZL14g_bus_disabled>
    bd6a:	88 23       	and	r24, r24
    bd6c:	11 f0       	breq	.+4      	; 0xbd72 <sb_send_string+0x26>
	{
		return( true);
    bd6e:	81 e0       	ldi	r24, 0x01	; 1
    bd70:	70 c0       	rjmp	.+224    	; 0xbe52 <sb_send_string+0x106>
	}

	if(str == NULL)
    bd72:	8f a9       	ldd	r24, Y+55	; 0x37
    bd74:	98 ad       	ldd	r25, Y+56	; 0x38
    bd76:	89 2b       	or	r24, r25
    bd78:	11 f4       	brne	.+4      	; 0xbd7e <sb_send_string+0x32>
	{
		return( true);
    bd7a:	81 e0       	ldi	r24, 0x01	; 1
    bd7c:	6a c0       	rjmp	.+212    	; 0xbe52 <sb_send_string+0x106>
	}

	if(!*str)
    bd7e:	8f a9       	ldd	r24, Y+55	; 0x37
    bd80:	98 ad       	ldd	r25, Y+56	; 0x38
    bd82:	fc 01       	movw	r30, r24
    bd84:	80 81       	ld	r24, Z
    bd86:	88 23       	and	r24, r24
    bd88:	11 f4       	brne	.+4      	; 0xbd8e <sb_send_string+0x42>
	{
		return(true);
    bd8a:	81 e0       	ldi	r24, 0x01	; 1
    bd8c:	62 c0       	rjmp	.+196    	; 0xbe52 <sb_send_string+0x106>
	}

	length = strlen(str);
    bd8e:	8f a9       	ldd	r24, Y+55	; 0x37
    bd90:	98 ad       	ldd	r25, Y+56	; 0x38
    bd92:	0e 94 ac 77 	call	0xef58	; 0xef58 <strlen>
    bd96:	8d 83       	std	Y+5, r24	; 0x05
    bd98:	9e 83       	std	Y+6, r25	; 0x06

	do
	{
		lengthToSend = MIN(length-lengthSent, (uint16_t)SERIALBUS_MAX_TX_MSG_LENGTH);
    bd9a:	2d 81       	ldd	r18, Y+5	; 0x05
    bd9c:	3e 81       	ldd	r19, Y+6	; 0x06
    bd9e:	89 81       	ldd	r24, Y+1	; 0x01
    bda0:	9a 81       	ldd	r25, Y+2	; 0x02
    bda2:	a9 01       	movw	r20, r18
    bda4:	48 1b       	sub	r20, r24
    bda6:	59 0b       	sbc	r21, r25
    bda8:	ca 01       	movw	r24, r20
    bdaa:	8f 83       	std	Y+7, r24	; 0x07
    bdac:	98 87       	std	Y+8, r25	; 0x08
    bdae:	89 e2       	ldi	r24, 0x29	; 41
    bdb0:	90 e0       	ldi	r25, 0x00	; 0
    bdb2:	89 87       	std	Y+9, r24	; 0x09
    bdb4:	9a 87       	std	Y+10, r25	; 0x0a
    bdb6:	2f 81       	ldd	r18, Y+7	; 0x07
    bdb8:	38 85       	ldd	r19, Y+8	; 0x08
    bdba:	89 85       	ldd	r24, Y+9	; 0x09
    bdbc:	9a 85       	ldd	r25, Y+10	; 0x0a
    bdbe:	28 17       	cp	r18, r24
    bdc0:	39 07       	cpc	r19, r25
    bdc2:	18 f4       	brcc	.+6      	; 0xbdca <sb_send_string+0x7e>
    bdc4:	8f 81       	ldd	r24, Y+7	; 0x07
    bdc6:	98 85       	ldd	r25, Y+8	; 0x08
    bdc8:	02 c0       	rjmp	.+4      	; 0xbdce <sb_send_string+0x82>
    bdca:	89 85       	ldd	r24, Y+9	; 0x09
    bdcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    bdce:	8b 87       	std	Y+11, r24	; 0x0b
    bdd0:	9c 87       	std	Y+12, r25	; 0x0c
		strncpy(buf, &str[lengthSent], lengthToSend);
    bdd2:	2f a9       	ldd	r18, Y+55	; 0x37
    bdd4:	38 ad       	ldd	r19, Y+56	; 0x38
    bdd6:	89 81       	ldd	r24, Y+1	; 0x01
    bdd8:	9a 81       	ldd	r25, Y+2	; 0x02
    bdda:	28 0f       	add	r18, r24
    bddc:	39 1f       	adc	r19, r25
    bdde:	4b 85       	ldd	r20, Y+11	; 0x0b
    bde0:	5c 85       	ldd	r21, Y+12	; 0x0c
    bde2:	ce 01       	movw	r24, r28
    bde4:	0d 96       	adiw	r24, 0x0d	; 13
    bde6:	b9 01       	movw	r22, r18
    bde8:	0e 94 b5 77 	call	0xef6a	; 0xef6a <strncpy>

		buf[lengthToSend] = '\0';
    bdec:	9e 01       	movw	r18, r28
    bdee:	23 5f       	subi	r18, 0xF3	; 243
    bdf0:	3f 4f       	sbci	r19, 0xFF	; 255
    bdf2:	8b 85       	ldd	r24, Y+11	; 0x0b
    bdf4:	9c 85       	ldd	r25, Y+12	; 0x0c
    bdf6:	82 0f       	add	r24, r18
    bdf8:	93 1f       	adc	r25, r19
    bdfa:	fc 01       	movw	r30, r24
    bdfc:	10 82       	st	Z, r1
		err = serialbus_send_text(buf);
    bdfe:	ce 01       	movw	r24, r28
    be00:	0d 96       	adiw	r24, 0x0d	; 13
    be02:	0e 94 0c 5e 	call	0xbc18	; 0xbc18 <_Z19serialbus_send_textPc>
    be06:	8b 83       	std	Y+3, r24	; 0x03
		
		if(!err)
    be08:	9b 81       	ldd	r25, Y+3	; 0x03
    be0a:	81 e0       	ldi	r24, 0x01	; 1
    be0c:	89 27       	eor	r24, r25
    be0e:	88 23       	and	r24, r24
    be10:	29 f0       	breq	.+10     	; 0xbe1c <sb_send_string+0xd0>
		{
			while(serialbusTxInProgress())
    be12:	0e 94 23 5d 	call	0xba46	; 0xba46 <serialbusTxInProgress>
    be16:	88 23       	and	r24, r24
    be18:	09 f0       	breq	.+2      	; 0xbe1c <sb_send_string+0xd0>
    be1a:	fb cf       	rjmp	.-10     	; 0xbe12 <sb_send_string+0xc6>
			{
				;
			}
		}

		lengthSent += lengthToSend;
    be1c:	29 81       	ldd	r18, Y+1	; 0x01
    be1e:	3a 81       	ldd	r19, Y+2	; 0x02
    be20:	8b 85       	ldd	r24, Y+11	; 0x0b
    be22:	9c 85       	ldd	r25, Y+12	; 0x0c
    be24:	82 0f       	add	r24, r18
    be26:	93 1f       	adc	r25, r19
    be28:	89 83       	std	Y+1, r24	; 0x01
    be2a:	9a 83       	std	Y+2, r25	; 0x02
		done = err || (lengthSent >= length);
    be2c:	8b 81       	ldd	r24, Y+3	; 0x03
    be2e:	88 23       	and	r24, r24
    be30:	39 f4       	brne	.+14     	; 0xbe40 <sb_send_string+0xf4>
    be32:	29 81       	ldd	r18, Y+1	; 0x01
    be34:	3a 81       	ldd	r19, Y+2	; 0x02
    be36:	8d 81       	ldd	r24, Y+5	; 0x05
    be38:	9e 81       	ldd	r25, Y+6	; 0x06
    be3a:	28 17       	cp	r18, r24
    be3c:	39 07       	cpc	r19, r25
    be3e:	10 f0       	brcs	.+4      	; 0xbe44 <sb_send_string+0xf8>
    be40:	81 e0       	ldi	r24, 0x01	; 1
    be42:	01 c0       	rjmp	.+2      	; 0xbe46 <sb_send_string+0xfa>
    be44:	80 e0       	ldi	r24, 0x00	; 0
    be46:	8c 83       	std	Y+4, r24	; 0x04
	}while(!done);
    be48:	8c 81       	ldd	r24, Y+4	; 0x04
    be4a:	88 23       	and	r24, r24
    be4c:	09 f4       	brne	.+2      	; 0xbe50 <sb_send_string+0x104>
		return(true);
	}

	length = strlen(str);

	do
    be4e:	a5 cf       	rjmp	.-182    	; 0xbd9a <sb_send_string+0x4e>

		lengthSent += lengthToSend;
		done = err || (lengthSent >= length);
	}while(!done);

	return( err);
    be50:	8b 81       	ldd	r24, Y+3	; 0x03
}
    be52:	e8 96       	adiw	r28, 0x38	; 56
    be54:	cd bf       	out	0x3d, r28	; 61
    be56:	de bf       	out	0x3e, r29	; 62
    be58:	df 91       	pop	r29
    be5a:	cf 91       	pop	r28
    be5c:	08 95       	ret

0000be5e <si5351_init>:
	void si5351_set_vcoB_freq(Frequency_Hz freq_VCO)
	{
		freqVCOB = freq_VCO;
		set_pll(freq_VCO, SI5351_PLLB);
		return;
	}
    be5e:	cf 93       	push	r28
    be60:	df 93       	push	r29
    be62:	cd b7       	in	r28, 0x3d	; 61
    be64:	de b7       	in	r29, 0x3e	; 62
    be66:	28 97       	sbiw	r28, 0x08	; 8
    be68:	cd bf       	out	0x3d, r28	; 61
    be6a:	de bf       	out	0x3e, r29	; 62
    be6c:	8c 83       	std	Y+4, r24	; 0x04
    be6e:	4d 83       	std	Y+5, r20	; 0x05
    be70:	5e 83       	std	Y+6, r21	; 0x06
    be72:	6f 83       	std	Y+7, r22	; 0x07
    be74:	78 87       	std	Y+8, r23	; 0x08
    be76:	0e 94 ec 4b 	call	0x97d8	; 0x97d8 <I2C_1_Init>
    be7a:	10 92 a5 4a 	sts	0x4AA5, r1	; 0x804aa5 <_ZL8freqVCOB>
    be7e:	10 92 a6 4a 	sts	0x4AA6, r1	; 0x804aa6 <_ZL8freqVCOB+0x1>
    be82:	10 92 a7 4a 	sts	0x4AA7, r1	; 0x804aa7 <_ZL8freqVCOB+0x2>
    be86:	10 92 a8 4a 	sts	0x4AA8, r1	; 0x804aa8 <_ZL8freqVCOB+0x3>
    be8a:	80 e4       	ldi	r24, 0x40	; 64
    be8c:	98 e7       	ldi	r25, 0x78	; 120
    be8e:	ad e7       	ldi	r26, 0x7D	; 125
    be90:	b1 e0       	ldi	r27, 0x01	; 1
    be92:	80 93 2e 40 	sts	0x402E, r24	; 0x80402e <_ZL9xtal_freq>
    be96:	90 93 2f 40 	sts	0x402F, r25	; 0x80402f <_ZL9xtal_freq+0x1>
    be9a:	a0 93 30 40 	sts	0x4030, r26	; 0x804030 <_ZL9xtal_freq+0x2>
    be9e:	b0 93 31 40 	sts	0x4031, r27	; 0x804031 <_ZL9xtal_freq+0x3>
    bea2:	10 92 a9 4a 	sts	0x4AA9, r1	; 0x804aa9 <_ZL17enabledClocksMask>
    bea6:	8f ef       	ldi	r24, 0xFF	; 255
    bea8:	8a 83       	std	Y+2, r24	; 0x02
    beaa:	ce 01       	movw	r24, r28
    beac:	02 96       	adiw	r24, 0x02	; 2
    beae:	41 e0       	ldi	r20, 0x01	; 1
    beb0:	bc 01       	movw	r22, r24
    beb2:	83 e0       	ldi	r24, 0x03	; 3
    beb4:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    beb8:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <_ZZ11si5351_initE3err>
    bebc:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bec0:	88 23       	and	r24, r24
    bec2:	19 f0       	breq	.+6      	; 0xbeca <si5351_init+0x6c>
    bec4:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bec8:	92 c0       	rjmp	.+292    	; 0xbfee <si5351_init+0x190>
    beca:	8c ec       	ldi	r24, 0xCC	; 204
    becc:	8a 83       	std	Y+2, r24	; 0x02
    bece:	ce 01       	movw	r24, r28
    bed0:	02 96       	adiw	r24, 0x02	; 2
    bed2:	41 e0       	ldi	r20, 0x01	; 1
    bed4:	bc 01       	movw	r22, r24
    bed6:	80 e1       	ldi	r24, 0x10	; 16
    bed8:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    bedc:	98 2f       	mov	r25, r24
    bede:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bee2:	89 2b       	or	r24, r25
    bee4:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <_ZZ11si5351_initE3err>
    bee8:	ce 01       	movw	r24, r28
    beea:	02 96       	adiw	r24, 0x02	; 2
    beec:	41 e0       	ldi	r20, 0x01	; 1
    beee:	bc 01       	movw	r22, r24
    bef0:	81 e1       	ldi	r24, 0x11	; 17
    bef2:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    bef6:	98 2f       	mov	r25, r24
    bef8:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    befc:	89 2b       	or	r24, r25
    befe:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <_ZZ11si5351_initE3err>
    bf02:	ce 01       	movw	r24, r28
    bf04:	02 96       	adiw	r24, 0x02	; 2
    bf06:	41 e0       	ldi	r20, 0x01	; 1
    bf08:	bc 01       	movw	r22, r24
    bf0a:	82 e1       	ldi	r24, 0x12	; 18
    bf0c:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    bf10:	98 2f       	mov	r25, r24
    bf12:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bf16:	89 2b       	or	r24, r25
    bf18:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <_ZZ11si5351_initE3err>
    bf1c:	82 e1       	ldi	r24, 0x12	; 18
    bf1e:	89 83       	std	Y+1, r24	; 0x01
    bf20:	99 81       	ldd	r25, Y+1	; 0x01
    bf22:	8c 81       	ldd	r24, Y+4	; 0x04
    bf24:	89 2b       	or	r24, r25
    bf26:	89 83       	std	Y+1, r24	; 0x01
    bf28:	89 81       	ldd	r24, Y+1	; 0x01
    bf2a:	8a 83       	std	Y+2, r24	; 0x02
    bf2c:	ce 01       	movw	r24, r28
    bf2e:	02 96       	adiw	r24, 0x02	; 2
    bf30:	41 e0       	ldi	r20, 0x01	; 1
    bf32:	bc 01       	movw	r22, r24
    bf34:	87 eb       	ldi	r24, 0xB7	; 183
    bf36:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    bf3a:	98 2f       	mov	r25, r24
    bf3c:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bf40:	89 2b       	or	r24, r25
    bf42:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <_ZZ11si5351_initE3err>
    bf46:	8d 81       	ldd	r24, Y+5	; 0x05
    bf48:	9e 81       	ldd	r25, Y+6	; 0x06
    bf4a:	af 81       	ldd	r26, Y+7	; 0x07
    bf4c:	b8 85       	ldd	r27, Y+8	; 0x08
    bf4e:	89 2b       	or	r24, r25
    bf50:	8a 2b       	or	r24, r26
    bf52:	8b 2b       	or	r24, r27
    bf54:	41 f4       	brne	.+16     	; 0xbf66 <si5351_init+0x108>
    bf56:	80 e4       	ldi	r24, 0x40	; 64
    bf58:	98 e7       	ldi	r25, 0x78	; 120
    bf5a:	ad e7       	ldi	r26, 0x7D	; 125
    bf5c:	b1 e0       	ldi	r27, 0x01	; 1
    bf5e:	8d 83       	std	Y+5, r24	; 0x05
    bf60:	9e 83       	std	Y+6, r25	; 0x06
    bf62:	af 83       	std	Y+7, r26	; 0x07
    bf64:	b8 87       	std	Y+8, r27	; 0x08
    bf66:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZL9xtal_freq>
    bf6a:	90 91 2f 40 	lds	r25, 0x402F	; 0x80402f <_ZL9xtal_freq+0x1>
    bf6e:	a0 91 30 40 	lds	r26, 0x4030	; 0x804030 <_ZL9xtal_freq+0x2>
    bf72:	b0 91 31 40 	lds	r27, 0x4031	; 0x804031 <_ZL9xtal_freq+0x3>
    bf76:	2d 81       	ldd	r18, Y+5	; 0x05
    bf78:	3e 81       	ldd	r19, Y+6	; 0x06
    bf7a:	4f 81       	ldd	r20, Y+7	; 0x07
    bf7c:	58 85       	ldd	r21, Y+8	; 0x08
    bf7e:	28 17       	cp	r18, r24
    bf80:	39 07       	cpc	r19, r25
    bf82:	4a 07       	cpc	r20, r26
    bf84:	5b 07       	cpc	r21, r27
    bf86:	59 f1       	breq	.+86     	; 0xbfde <si5351_init+0x180>
    bf88:	ce 01       	movw	r24, r28
    bf8a:	02 96       	adiw	r24, 0x02	; 2
    bf8c:	41 e0       	ldi	r20, 0x01	; 1
    bf8e:	bc 01       	movw	r22, r24
    bf90:	8f e0       	ldi	r24, 0x0F	; 15
    bf92:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    bf96:	88 23       	and	r24, r24
    bf98:	11 f0       	breq	.+4      	; 0xbf9e <si5351_init+0x140>
    bf9a:	81 e0       	ldi	r24, 0x01	; 1
    bf9c:	28 c0       	rjmp	.+80     	; 0xbfee <si5351_init+0x190>
    bf9e:	8a 81       	ldd	r24, Y+2	; 0x02
    bfa0:	89 83       	std	Y+1, r24	; 0x01
    bfa2:	89 81       	ldd	r24, Y+1	; 0x01
    bfa4:	8f 73       	andi	r24, 0x3F	; 63
    bfa6:	89 83       	std	Y+1, r24	; 0x01
    bfa8:	8d 81       	ldd	r24, Y+5	; 0x05
    bfaa:	9e 81       	ldd	r25, Y+6	; 0x06
    bfac:	af 81       	ldd	r26, Y+7	; 0x07
    bfae:	b8 85       	ldd	r27, Y+8	; 0x08
    bfb0:	80 93 2e 40 	sts	0x402E, r24	; 0x80402e <_ZL9xtal_freq>
    bfb4:	90 93 2f 40 	sts	0x402F, r25	; 0x80402f <_ZL9xtal_freq+0x1>
    bfb8:	a0 93 30 40 	sts	0x4030, r26	; 0x804030 <_ZL9xtal_freq+0x2>
    bfbc:	b0 93 31 40 	sts	0x4031, r27	; 0x804031 <_ZL9xtal_freq+0x3>
    bfc0:	89 81       	ldd	r24, Y+1	; 0x01
    bfc2:	8a 83       	std	Y+2, r24	; 0x02
    bfc4:	ce 01       	movw	r24, r28
    bfc6:	02 96       	adiw	r24, 0x02	; 2
    bfc8:	41 e0       	ldi	r20, 0x01	; 1
    bfca:	bc 01       	movw	r22, r24
    bfcc:	8f e0       	ldi	r24, 0x0F	; 15
    bfce:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    bfd2:	98 2f       	mov	r25, r24
    bfd4:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bfd8:	89 2b       	or	r24, r25
    bfda:	80 93 b7 4a 	sts	0x4AB7, r24	; 0x804ab7 <_ZZ11si5351_initE3err>
    bfde:	90 91 b7 4a 	lds	r25, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bfe2:	81 e0       	ldi	r24, 0x01	; 1
    bfe4:	89 27       	eor	r24, r25
    bfe6:	80 93 b6 4a 	sts	0x4AB6, r24	; 0x804ab6 <g_si5351_initialized>
    bfea:	80 91 b7 4a 	lds	r24, 0x4AB7	; 0x804ab7 <_ZZ11si5351_initE3err>
    bfee:	28 96       	adiw	r28, 0x08	; 8
    bff0:	cd bf       	out	0x3d, r28	; 61
    bff2:	de bf       	out	0x3e, r29	; 62
    bff4:	df 91       	pop	r29
    bff6:	cf 91       	pop	r28
    bff8:	08 95       	ret

0000bffa <si5351_set_freq>:
    bffa:	8f 92       	push	r8
    bffc:	af 92       	push	r10
    bffe:	cf 92       	push	r12
    c000:	df 92       	push	r13
    c002:	ef 92       	push	r14
    c004:	ff 92       	push	r15
    c006:	0f 93       	push	r16
    c008:	1f 93       	push	r17
    c00a:	cf 93       	push	r28
    c00c:	df 93       	push	r29
    c00e:	cd b7       	in	r28, 0x3d	; 61
    c010:	de b7       	in	r29, 0x3e	; 62
    c012:	6d 97       	sbiw	r28, 0x1d	; 29
    c014:	cd bf       	out	0x3d, r28	; 61
    c016:	de bf       	out	0x3e, r29	; 62
    c018:	68 8f       	std	Y+24, r22	; 0x18
    c01a:	79 8f       	std	Y+25, r23	; 0x19
    c01c:	8a 8f       	std	Y+26, r24	; 0x1a
    c01e:	9b 8f       	std	Y+27, r25	; 0x1b
    c020:	4c 8f       	std	Y+28, r20	; 0x1c
    c022:	2d 8f       	std	Y+29, r18	; 0x1d
    c024:	19 82       	std	Y+1, r1	; 0x01
    c026:	1a 82       	std	Y+2, r1	; 0x02
    c028:	1b 82       	std	Y+3, r1	; 0x03
    c02a:	1c 82       	std	Y+4, r1	; 0x04
    c02c:	1f 82       	std	Y+7, r1	; 0x07
    c02e:	1c 8a       	std	Y+20, r1	; 0x14
    c030:	1d 8a       	std	Y+21, r1	; 0x15
    c032:	90 91 b6 4a 	lds	r25, 0x4AB6	; 0x804ab6 <g_si5351_initialized>
    c036:	81 e0       	ldi	r24, 0x01	; 1
    c038:	89 27       	eor	r24, r25
    c03a:	88 23       	and	r24, r24
    c03c:	11 f0       	breq	.+4      	; 0xc042 <si5351_set_freq+0x48>
    c03e:	81 e0       	ldi	r24, 0x01	; 1
    c040:	6f c1       	rjmp	.+734    	; 0xc320 <si5351_set_freq+0x326>
    c042:	88 8d       	ldd	r24, Y+24	; 0x18
    c044:	99 8d       	ldd	r25, Y+25	; 0x19
    c046:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c048:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c04a:	80 34       	cpi	r24, 0x40	; 64
    c04c:	92 44       	sbci	r25, 0x42	; 66
    c04e:	af 40       	sbci	r26, 0x0F	; 15
    c050:	b1 05       	cpc	r27, r1
    c052:	08 f1       	brcs	.+66     	; 0xc096 <si5351_set_freq+0x9c>
    c054:	88 8d       	ldd	r24, Y+24	; 0x18
    c056:	99 8d       	ldd	r25, Y+25	; 0x19
    c058:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c05a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c05c:	24 e6       	ldi	r18, 0x64	; 100
    c05e:	30 e0       	ldi	r19, 0x00	; 0
    c060:	40 e0       	ldi	r20, 0x00	; 0
    c062:	50 e0       	ldi	r21, 0x00	; 0
    c064:	bc 01       	movw	r22, r24
    c066:	cd 01       	movw	r24, r26
    c068:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c06c:	da 01       	movw	r26, r20
    c06e:	c9 01       	movw	r24, r18
    c070:	88 8f       	std	Y+24, r24	; 0x18
    c072:	99 8f       	std	Y+25, r25	; 0x19
    c074:	aa 8f       	std	Y+26, r26	; 0x1a
    c076:	bb 8f       	std	Y+27, r27	; 0x1b
    c078:	28 8d       	ldd	r18, Y+24	; 0x18
    c07a:	39 8d       	ldd	r19, Y+25	; 0x19
    c07c:	4a 8d       	ldd	r20, Y+26	; 0x1a
    c07e:	5b 8d       	ldd	r21, Y+27	; 0x1b
    c080:	84 e6       	ldi	r24, 0x64	; 100
    c082:	90 e0       	ldi	r25, 0x00	; 0
    c084:	dc 01       	movw	r26, r24
    c086:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    c08a:	dc 01       	movw	r26, r24
    c08c:	cb 01       	movw	r24, r22
    c08e:	88 8f       	std	Y+24, r24	; 0x18
    c090:	99 8f       	std	Y+25, r25	; 0x19
    c092:	aa 8f       	std	Y+26, r26	; 0x1a
    c094:	bb 8f       	std	Y+27, r27	; 0x1b
    c096:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c098:	88 2f       	mov	r24, r24
    c09a:	90 e0       	ldi	r25, 0x00	; 0
    c09c:	81 30       	cpi	r24, 0x01	; 1
    c09e:	91 05       	cpc	r25, r1
    c0a0:	e9 f0       	breq	.+58     	; 0xc0dc <si5351_set_freq+0xe2>
    c0a2:	82 30       	cpi	r24, 0x02	; 2
    c0a4:	91 05       	cpc	r25, r1
    c0a6:	09 f4       	brne	.+2      	; 0xc0aa <si5351_set_freq+0xb0>
    c0a8:	3f c0       	rjmp	.+126    	; 0xc128 <si5351_set_freq+0x12e>
    c0aa:	89 2b       	or	r24, r25
    c0ac:	09 f0       	breq	.+2      	; 0xc0b0 <si5351_set_freq+0xb6>
    c0ae:	62 c0       	rjmp	.+196    	; 0xc174 <si5351_set_freq+0x17a>
    c0b0:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c0b4:	81 60       	ori	r24, 0x01	; 1
    c0b6:	80 93 a9 4a 	sts	0x4AA9, r24	; 0x804aa9 <_ZL17enabledClocksMask>
    c0ba:	80 e1       	ldi	r24, 0x10	; 16
    c0bc:	8e 83       	std	Y+6, r24	; 0x06
    c0be:	81 e0       	ldi	r24, 0x01	; 1
    c0c0:	8d 83       	std	Y+5, r24	; 0x05
    c0c2:	88 8d       	ldd	r24, Y+24	; 0x18
    c0c4:	99 8d       	ldd	r25, Y+25	; 0x19
    c0c6:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c0c8:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c0ca:	80 93 aa 4a 	sts	0x4AAA, r24	; 0x804aaa <_ZL9clock_out>
    c0ce:	90 93 ab 4a 	sts	0x4AAB, r25	; 0x804aab <_ZL9clock_out+0x1>
    c0d2:	a0 93 ac 4a 	sts	0x4AAC, r26	; 0x804aac <_ZL9clock_out+0x2>
    c0d6:	b0 93 ad 4a 	sts	0x4AAD, r27	; 0x804aad <_ZL9clock_out+0x3>
    c0da:	4e c0       	rjmp	.+156    	; 0xc178 <si5351_set_freq+0x17e>
    c0dc:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c0e0:	82 60       	ori	r24, 0x02	; 2
    c0e2:	80 93 a9 4a 	sts	0x4AA9, r24	; 0x804aa9 <_ZL17enabledClocksMask>
    c0e6:	81 e1       	ldi	r24, 0x11	; 17
    c0e8:	8e 83       	std	Y+6, r24	; 0x06
    c0ea:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c0ee:	80 95       	com	r24
    c0f0:	8a 6f       	ori	r24, 0xFA	; 250
    c0f2:	8e 8b       	std	Y+22, r24	; 0x16
    c0f4:	ce 01       	movw	r24, r28
    c0f6:	46 96       	adiw	r24, 0x16	; 22
    c0f8:	41 e0       	ldi	r20, 0x01	; 1
    c0fa:	bc 01       	movw	r22, r24
    c0fc:	83 e0       	ldi	r24, 0x03	; 3
    c0fe:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c102:	88 23       	and	r24, r24
    c104:	11 f0       	breq	.+4      	; 0xc10a <si5351_set_freq+0x110>
    c106:	81 e0       	ldi	r24, 0x01	; 1
    c108:	0b c1       	rjmp	.+534    	; 0xc320 <si5351_set_freq+0x326>
    c10a:	82 e0       	ldi	r24, 0x02	; 2
    c10c:	8d 83       	std	Y+5, r24	; 0x05
    c10e:	88 8d       	ldd	r24, Y+24	; 0x18
    c110:	99 8d       	ldd	r25, Y+25	; 0x19
    c112:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c114:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c116:	80 93 ae 4a 	sts	0x4AAE, r24	; 0x804aae <_ZL9clock_out+0x4>
    c11a:	90 93 af 4a 	sts	0x4AAF, r25	; 0x804aaf <_ZL9clock_out+0x5>
    c11e:	a0 93 b0 4a 	sts	0x4AB0, r26	; 0x804ab0 <_ZL9clock_out+0x6>
    c122:	b0 93 b1 4a 	sts	0x4AB1, r27	; 0x804ab1 <_ZL9clock_out+0x7>
    c126:	28 c0       	rjmp	.+80     	; 0xc178 <si5351_set_freq+0x17e>
    c128:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c12c:	84 60       	ori	r24, 0x04	; 4
    c12e:	80 93 a9 4a 	sts	0x4AA9, r24	; 0x804aa9 <_ZL17enabledClocksMask>
    c132:	82 e1       	ldi	r24, 0x12	; 18
    c134:	8e 83       	std	Y+6, r24	; 0x06
    c136:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c13a:	80 95       	com	r24
    c13c:	8c 6f       	ori	r24, 0xFC	; 252
    c13e:	8e 8b       	std	Y+22, r24	; 0x16
    c140:	ce 01       	movw	r24, r28
    c142:	46 96       	adiw	r24, 0x16	; 22
    c144:	41 e0       	ldi	r20, 0x01	; 1
    c146:	bc 01       	movw	r22, r24
    c148:	83 e0       	ldi	r24, 0x03	; 3
    c14a:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c14e:	88 23       	and	r24, r24
    c150:	11 f0       	breq	.+4      	; 0xc156 <si5351_set_freq+0x15c>
    c152:	81 e0       	ldi	r24, 0x01	; 1
    c154:	e5 c0       	rjmp	.+458    	; 0xc320 <si5351_set_freq+0x326>
    c156:	82 e0       	ldi	r24, 0x02	; 2
    c158:	8d 83       	std	Y+5, r24	; 0x05
    c15a:	88 8d       	ldd	r24, Y+24	; 0x18
    c15c:	99 8d       	ldd	r25, Y+25	; 0x19
    c15e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c160:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c162:	80 93 b2 4a 	sts	0x4AB2, r24	; 0x804ab2 <_ZL9clock_out+0x8>
    c166:	90 93 b3 4a 	sts	0x4AB3, r25	; 0x804ab3 <_ZL9clock_out+0x9>
    c16a:	a0 93 b4 4a 	sts	0x4AB4, r26	; 0x804ab4 <_ZL9clock_out+0xa>
    c16e:	b0 93 b5 4a 	sts	0x4AB5, r27	; 0x804ab5 <_ZL9clock_out+0xb>
    c172:	02 c0       	rjmp	.+4      	; 0xc178 <si5351_set_freq+0x17e>
    c174:	81 e0       	ldi	r24, 0x01	; 1
    c176:	d4 c0       	rjmp	.+424    	; 0xc320 <si5351_set_freq+0x326>
    c178:	8d 81       	ldd	r24, Y+5	; 0x05
    c17a:	81 30       	cpi	r24, 0x01	; 1
    c17c:	61 f0       	breq	.+24     	; 0xc196 <si5351_set_freq+0x19c>
    c17e:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZL8freqVCOB>
    c182:	90 91 a6 4a 	lds	r25, 0x4AA6	; 0x804aa6 <_ZL8freqVCOB+0x1>
    c186:	a0 91 a7 4a 	lds	r26, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB+0x2>
    c18a:	b0 91 a8 4a 	lds	r27, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x3>
    c18e:	89 2b       	or	r24, r25
    c190:	8a 2b       	or	r24, r26
    c192:	8b 2b       	or	r24, r27
    c194:	c9 f4       	brne	.+50     	; 0xc1c8 <si5351_set_freq+0x1ce>
    c196:	be 01       	movw	r22, r28
    c198:	6b 5e       	subi	r22, 0xEB	; 235
    c19a:	7f 4f       	sbci	r23, 0xFF	; 255
    c19c:	9e 01       	movw	r18, r28
    c19e:	2c 5e       	subi	r18, 0xEC	; 236
    c1a0:	3f 4f       	sbci	r19, 0xFF	; 255
    c1a2:	ae 01       	movw	r20, r28
    c1a4:	48 5f       	subi	r20, 0xF8	; 248
    c1a6:	5f 4f       	sbci	r21, 0xFF	; 255
    c1a8:	88 8d       	ldd	r24, Y+24	; 0x18
    c1aa:	99 8d       	ldd	r25, Y+25	; 0x19
    c1ac:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c1ae:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c1b0:	8b 01       	movw	r16, r22
    c1b2:	bc 01       	movw	r22, r24
    c1b4:	cd 01       	movw	r24, r26
    c1b6:	0e 94 a8 64 	call	0xc950	; 0xc950 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>
    c1ba:	dc 01       	movw	r26, r24
    c1bc:	cb 01       	movw	r24, r22
    c1be:	89 83       	std	Y+1, r24	; 0x01
    c1c0:	9a 83       	std	Y+2, r25	; 0x02
    c1c2:	ab 83       	std	Y+3, r26	; 0x03
    c1c4:	bc 83       	std	Y+4, r27	; 0x04
    c1c6:	18 c0       	rjmp	.+48     	; 0xc1f8 <si5351_set_freq+0x1fe>
    c1c8:	be 01       	movw	r22, r28
    c1ca:	6b 5e       	subi	r22, 0xEB	; 235
    c1cc:	7f 4f       	sbci	r23, 0xFF	; 255
    c1ce:	9e 01       	movw	r18, r28
    c1d0:	2c 5e       	subi	r18, 0xEC	; 236
    c1d2:	3f 4f       	sbci	r19, 0xFF	; 255
    c1d4:	ae 01       	movw	r20, r28
    c1d6:	48 5f       	subi	r20, 0xF8	; 248
    c1d8:	5f 4f       	sbci	r21, 0xFF	; 255
    c1da:	88 8d       	ldd	r24, Y+24	; 0x18
    c1dc:	99 8d       	ldd	r25, Y+25	; 0x19
    c1de:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c1e0:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c1e2:	8b 01       	movw	r16, r22
    c1e4:	bc 01       	movw	r22, r24
    c1e6:	cd 01       	movw	r24, r26
    c1e8:	0e 94 b2 65 	call	0xcb64	; 0xcb64 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>
    c1ec:	dc 01       	movw	r26, r24
    c1ee:	cb 01       	movw	r24, r22
    c1f0:	88 8f       	std	Y+24, r24	; 0x18
    c1f2:	99 8f       	std	Y+25, r25	; 0x19
    c1f4:	aa 8f       	std	Y+26, r26	; 0x1a
    c1f6:	bb 8f       	std	Y+27, r27	; 0x1b
    c1f8:	6d 81       	ldd	r22, Y+5	; 0x05
    c1fa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c1fc:	0e 94 97 67 	call	0xcf2e	; 0xcf2e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>
    c200:	88 23       	and	r24, r24
    c202:	11 f0       	breq	.+4      	; 0xc208 <si5351_set_freq+0x20e>
    c204:	81 e0       	ldi	r24, 0x01	; 1
    c206:	8c c0       	rjmp	.+280    	; 0xc320 <si5351_set_freq+0x326>
    c208:	8d 89       	ldd	r24, Y+21	; 0x15
    c20a:	9c 89       	ldd	r25, Y+20	; 0x14
    c20c:	8f 93       	push	r24
    c20e:	8f 80       	ldd	r8, Y+7	; 0x07
    c210:	a9 2e       	mov	r10, r25
    c212:	c8 84       	ldd	r12, Y+8	; 0x08
    c214:	d9 84       	ldd	r13, Y+9	; 0x09
    c216:	ea 84       	ldd	r14, Y+10	; 0x0a
    c218:	fb 84       	ldd	r15, Y+11	; 0x0b
    c21a:	0c 85       	ldd	r16, Y+12	; 0x0c
    c21c:	1d 85       	ldd	r17, Y+13	; 0x0d
    c21e:	2e 85       	ldd	r18, Y+14	; 0x0e
    c220:	3f 85       	ldd	r19, Y+15	; 0x0f
    c222:	48 89       	ldd	r20, Y+16	; 0x10
    c224:	59 89       	ldd	r21, Y+17	; 0x11
    c226:	6a 89       	ldd	r22, Y+18	; 0x12
    c228:	7b 89       	ldd	r23, Y+19	; 0x13
    c22a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c22c:	0e 94 d4 67 	call	0xcfa8	; 0xcfa8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>
    c230:	0f 90       	pop	r0
    c232:	88 23       	and	r24, r24
    c234:	11 f0       	breq	.+4      	; 0xc23a <si5351_set_freq+0x240>
    c236:	81 e0       	ldi	r24, 0x01	; 1
    c238:	73 c0       	rjmp	.+230    	; 0xc320 <si5351_set_freq+0x326>
    c23a:	89 81       	ldd	r24, Y+1	; 0x01
    c23c:	9a 81       	ldd	r25, Y+2	; 0x02
    c23e:	ab 81       	ldd	r26, Y+3	; 0x03
    c240:	bc 81       	ldd	r27, Y+4	; 0x04
    c242:	89 2b       	or	r24, r25
    c244:	8a 2b       	or	r24, r26
    c246:	8b 2b       	or	r24, r27
    c248:	49 f0       	breq	.+18     	; 0xc25c <si5351_set_freq+0x262>
    c24a:	89 81       	ldd	r24, Y+1	; 0x01
    c24c:	9a 81       	ldd	r25, Y+2	; 0x02
    c24e:	ab 81       	ldd	r26, Y+3	; 0x03
    c250:	bc 81       	ldd	r27, Y+4	; 0x04
    c252:	4d 81       	ldd	r20, Y+5	; 0x05
    c254:	bc 01       	movw	r22, r24
    c256:	cd 01       	movw	r24, r26
    c258:	0e 94 46 62 	call	0xc48c	; 0xc48c <_Z7set_pllm10si5351_pll>
    c25c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    c25e:	88 23       	and	r24, r24
    c260:	71 f0       	breq	.+28     	; 0xc27e <si5351_set_freq+0x284>
    c262:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c266:	8e 8b       	std	Y+22, r24	; 0x16
    c268:	ce 01       	movw	r24, r28
    c26a:	46 96       	adiw	r24, 0x16	; 22
    c26c:	41 e0       	ldi	r20, 0x01	; 1
    c26e:	bc 01       	movw	r22, r24
    c270:	83 e0       	ldi	r24, 0x03	; 3
    c272:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c276:	88 23       	and	r24, r24
    c278:	89 f0       	breq	.+34     	; 0xc29c <si5351_set_freq+0x2a2>
    c27a:	81 e0       	ldi	r24, 0x01	; 1
    c27c:	51 c0       	rjmp	.+162    	; 0xc320 <si5351_set_freq+0x326>
    c27e:	80 91 a9 4a 	lds	r24, 0x4AA9	; 0x804aa9 <_ZL17enabledClocksMask>
    c282:	80 95       	com	r24
    c284:	8e 8b       	std	Y+22, r24	; 0x16
    c286:	ce 01       	movw	r24, r28
    c288:	46 96       	adiw	r24, 0x16	; 22
    c28a:	41 e0       	ldi	r20, 0x01	; 1
    c28c:	bc 01       	movw	r22, r24
    c28e:	83 e0       	ldi	r24, 0x03	; 3
    c290:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c294:	88 23       	and	r24, r24
    c296:	11 f0       	breq	.+4      	; 0xc29c <si5351_set_freq+0x2a2>
    c298:	81 e0       	ldi	r24, 0x01	; 1
    c29a:	42 c0       	rjmp	.+132    	; 0xc320 <si5351_set_freq+0x326>
    c29c:	8d 81       	ldd	r24, Y+5	; 0x05
    c29e:	81 30       	cpi	r24, 0x01	; 1
    c2a0:	69 f4       	brne	.+26     	; 0xc2bc <si5351_set_freq+0x2c2>
    c2a2:	8c e4       	ldi	r24, 0x4C	; 76
    c2a4:	8e 8b       	std	Y+22, r24	; 0x16
    c2a6:	ce 01       	movw	r24, r28
    c2a8:	46 96       	adiw	r24, 0x16	; 22
    c2aa:	41 e0       	ldi	r20, 0x01	; 1
    c2ac:	bc 01       	movw	r22, r24
    c2ae:	8e 81       	ldd	r24, Y+6	; 0x06
    c2b0:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c2b4:	88 23       	and	r24, r24
    c2b6:	99 f1       	breq	.+102    	; 0xc31e <si5351_set_freq+0x324>
    c2b8:	81 e0       	ldi	r24, 0x01	; 1
    c2ba:	32 c0       	rjmp	.+100    	; 0xc320 <si5351_set_freq+0x326>
    c2bc:	8c 89       	ldd	r24, Y+20	; 0x14
    c2be:	88 23       	and	r24, r24
    c2c0:	69 f0       	breq	.+26     	; 0xc2dc <si5351_set_freq+0x2e2>
    c2c2:	8c e6       	ldi	r24, 0x6C	; 108
    c2c4:	8e 8b       	std	Y+22, r24	; 0x16
    c2c6:	ce 01       	movw	r24, r28
    c2c8:	46 96       	adiw	r24, 0x16	; 22
    c2ca:	41 e0       	ldi	r20, 0x01	; 1
    c2cc:	bc 01       	movw	r22, r24
    c2ce:	8e 81       	ldd	r24, Y+6	; 0x06
    c2d0:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c2d4:	88 23       	and	r24, r24
    c2d6:	79 f0       	breq	.+30     	; 0xc2f6 <si5351_set_freq+0x2fc>
    c2d8:	81 e0       	ldi	r24, 0x01	; 1
    c2da:	22 c0       	rjmp	.+68     	; 0xc320 <si5351_set_freq+0x326>
    c2dc:	8c e2       	ldi	r24, 0x2C	; 44
    c2de:	8e 8b       	std	Y+22, r24	; 0x16
    c2e0:	ce 01       	movw	r24, r28
    c2e2:	46 96       	adiw	r24, 0x16	; 22
    c2e4:	41 e0       	ldi	r20, 0x01	; 1
    c2e6:	bc 01       	movw	r22, r24
    c2e8:	8e 81       	ldd	r24, Y+6	; 0x06
    c2ea:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c2ee:	88 23       	and	r24, r24
    c2f0:	11 f0       	breq	.+4      	; 0xc2f6 <si5351_set_freq+0x2fc>
    c2f2:	81 e0       	ldi	r24, 0x01	; 1
    c2f4:	15 c0       	rjmp	.+42     	; 0xc320 <si5351_set_freq+0x326>
    c2f6:	89 81       	ldd	r24, Y+1	; 0x01
    c2f8:	9a 81       	ldd	r25, Y+2	; 0x02
    c2fa:	ab 81       	ldd	r26, Y+3	; 0x03
    c2fc:	bc 81       	ldd	r27, Y+4	; 0x04
    c2fe:	89 2b       	or	r24, r25
    c300:	8a 2b       	or	r24, r26
    c302:	8b 2b       	or	r24, r27
    c304:	61 f0       	breq	.+24     	; 0xc31e <si5351_set_freq+0x324>
    c306:	89 81       	ldd	r24, Y+1	; 0x01
    c308:	9a 81       	ldd	r25, Y+2	; 0x02
    c30a:	ab 81       	ldd	r26, Y+3	; 0x03
    c30c:	bc 81       	ldd	r27, Y+4	; 0x04
    c30e:	80 93 a5 4a 	sts	0x4AA5, r24	; 0x804aa5 <_ZL8freqVCOB>
    c312:	90 93 a6 4a 	sts	0x4AA6, r25	; 0x804aa6 <_ZL8freqVCOB+0x1>
    c316:	a0 93 a7 4a 	sts	0x4AA7, r26	; 0x804aa7 <_ZL8freqVCOB+0x2>
    c31a:	b0 93 a8 4a 	sts	0x4AA8, r27	; 0x804aa8 <_ZL8freqVCOB+0x3>
    c31e:	80 e0       	ldi	r24, 0x00	; 0
    c320:	6d 96       	adiw	r28, 0x1d	; 29
    c322:	cd bf       	out	0x3d, r28	; 61
    c324:	de bf       	out	0x3e, r29	; 62
    c326:	df 91       	pop	r29
    c328:	cf 91       	pop	r28
    c32a:	1f 91       	pop	r17
    c32c:	0f 91       	pop	r16
    c32e:	ff 90       	pop	r15
    c330:	ef 90       	pop	r14
    c332:	df 90       	pop	r13
    c334:	cf 90       	pop	r12
    c336:	af 90       	pop	r10
    c338:	8f 90       	pop	r8
    c33a:	08 95       	ret

0000c33c <si5351_clock_enable>:
    c33c:	cf 93       	push	r28
    c33e:	df 93       	push	r29
    c340:	cd b7       	in	r28, 0x3d	; 61
    c342:	de b7       	in	r29, 0x3e	; 62
    c344:	25 97       	sbiw	r28, 0x05	; 5
    c346:	cd bf       	out	0x3d, r28	; 61
    c348:	de bf       	out	0x3e, r29	; 62
    c34a:	8c 83       	std	Y+4, r24	; 0x04
    c34c:	6d 83       	std	Y+5, r22	; 0x05
    c34e:	ce 01       	movw	r24, r28
    c350:	02 96       	adiw	r24, 0x02	; 2
    c352:	41 e0       	ldi	r20, 0x01	; 1
    c354:	bc 01       	movw	r22, r24
    c356:	83 e0       	ldi	r24, 0x03	; 3
    c358:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    c35c:	88 23       	and	r24, r24
    c35e:	11 f0       	breq	.+4      	; 0xc364 <si5351_clock_enable+0x28>
    c360:	8c ef       	ldi	r24, 0xFC	; 252
    c362:	31 c0       	rjmp	.+98     	; 0xc3c6 <si5351_clock_enable+0x8a>
    c364:	8a 81       	ldd	r24, Y+2	; 0x02
    c366:	89 83       	std	Y+1, r24	; 0x01
    c368:	8d 81       	ldd	r24, Y+5	; 0x05
    c36a:	88 23       	and	r24, r24
    c36c:	81 f0       	breq	.+32     	; 0xc38e <si5351_clock_enable+0x52>
    c36e:	8c 81       	ldd	r24, Y+4	; 0x04
    c370:	28 2f       	mov	r18, r24
    c372:	30 e0       	ldi	r19, 0x00	; 0
    c374:	81 e0       	ldi	r24, 0x01	; 1
    c376:	90 e0       	ldi	r25, 0x00	; 0
    c378:	02 c0       	rjmp	.+4      	; 0xc37e <si5351_clock_enable+0x42>
    c37a:	88 0f       	add	r24, r24
    c37c:	99 1f       	adc	r25, r25
    c37e:	2a 95       	dec	r18
    c380:	e2 f7       	brpl	.-8      	; 0xc37a <si5351_clock_enable+0x3e>
    c382:	98 2f       	mov	r25, r24
    c384:	90 95       	com	r25
    c386:	89 81       	ldd	r24, Y+1	; 0x01
    c388:	89 23       	and	r24, r25
    c38a:	89 83       	std	Y+1, r24	; 0x01
    c38c:	0e c0       	rjmp	.+28     	; 0xc3aa <si5351_clock_enable+0x6e>
    c38e:	8c 81       	ldd	r24, Y+4	; 0x04
    c390:	28 2f       	mov	r18, r24
    c392:	30 e0       	ldi	r19, 0x00	; 0
    c394:	81 e0       	ldi	r24, 0x01	; 1
    c396:	90 e0       	ldi	r25, 0x00	; 0
    c398:	02 c0       	rjmp	.+4      	; 0xc39e <si5351_clock_enable+0x62>
    c39a:	88 0f       	add	r24, r24
    c39c:	99 1f       	adc	r25, r25
    c39e:	2a 95       	dec	r18
    c3a0:	e2 f7       	brpl	.-8      	; 0xc39a <si5351_clock_enable+0x5e>
    c3a2:	98 2f       	mov	r25, r24
    c3a4:	89 81       	ldd	r24, Y+1	; 0x01
    c3a6:	89 2b       	or	r24, r25
    c3a8:	89 83       	std	Y+1, r24	; 0x01
    c3aa:	89 81       	ldd	r24, Y+1	; 0x01
    c3ac:	8a 83       	std	Y+2, r24	; 0x02
    c3ae:	ce 01       	movw	r24, r28
    c3b0:	02 96       	adiw	r24, 0x02	; 2
    c3b2:	41 e0       	ldi	r20, 0x01	; 1
    c3b4:	bc 01       	movw	r22, r24
    c3b6:	83 e0       	ldi	r24, 0x03	; 3
    c3b8:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c3bc:	88 23       	and	r24, r24
    c3be:	11 f0       	breq	.+4      	; 0xc3c4 <si5351_clock_enable+0x88>
    c3c0:	8c ef       	ldi	r24, 0xFC	; 252
    c3c2:	01 c0       	rjmp	.+2      	; 0xc3c6 <si5351_clock_enable+0x8a>
    c3c4:	80 e0       	ldi	r24, 0x00	; 0
    c3c6:	25 96       	adiw	r28, 0x05	; 5
    c3c8:	cd bf       	out	0x3d, r28	; 61
    c3ca:	de bf       	out	0x3e, r29	; 62
    c3cc:	df 91       	pop	r29
    c3ce:	cf 91       	pop	r28
    c3d0:	08 95       	ret

0000c3d2 <si5351_drive_strength>:
    c3d2:	cf 93       	push	r28
    c3d4:	df 93       	push	r29
    c3d6:	cd b7       	in	r28, 0x3d	; 61
    c3d8:	de b7       	in	r29, 0x3e	; 62
    c3da:	26 97       	sbiw	r28, 0x06	; 6
    c3dc:	cd bf       	out	0x3d, r28	; 61
    c3de:	de bf       	out	0x3e, r29	; 62
    c3e0:	8d 83       	std	Y+5, r24	; 0x05
    c3e2:	6e 83       	std	Y+6, r22	; 0x06
    c3e4:	83 e0       	ldi	r24, 0x03	; 3
    c3e6:	8a 83       	std	Y+2, r24	; 0x02
    c3e8:	8d 81       	ldd	r24, Y+5	; 0x05
    c3ea:	20 e1       	ldi	r18, 0x10	; 16
    c3ec:	28 0f       	add	r18, r24
    c3ee:	ce 01       	movw	r24, r28
    c3f0:	03 96       	adiw	r24, 0x03	; 3
    c3f2:	41 e0       	ldi	r20, 0x01	; 1
    c3f4:	bc 01       	movw	r22, r24
    c3f6:	82 2f       	mov	r24, r18
    c3f8:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    c3fc:	88 23       	and	r24, r24
    c3fe:	11 f0       	breq	.+4      	; 0xc404 <si5351_drive_strength+0x32>
    c400:	8b ef       	ldi	r24, 0xFB	; 251
    c402:	3e c0       	rjmp	.+124    	; 0xc480 <si5351_drive_strength+0xae>
    c404:	8b 81       	ldd	r24, Y+3	; 0x03
    c406:	89 83       	std	Y+1, r24	; 0x01
    c408:	8e 81       	ldd	r24, Y+6	; 0x06
    c40a:	88 2f       	mov	r24, r24
    c40c:	90 e0       	ldi	r25, 0x00	; 0
    c40e:	81 30       	cpi	r24, 0x01	; 1
    c410:	91 05       	cpc	r25, r1
    c412:	81 f0       	breq	.+32     	; 0xc434 <si5351_drive_strength+0x62>
    c414:	82 30       	cpi	r24, 0x02	; 2
    c416:	91 05       	cpc	r25, r1
    c418:	1c f4       	brge	.+6      	; 0xc420 <si5351_drive_strength+0x4e>
    c41a:	89 2b       	or	r24, r25
    c41c:	39 f0       	breq	.+14     	; 0xc42c <si5351_drive_strength+0x5a>
    c41e:	1f c0       	rjmp	.+62     	; 0xc45e <si5351_drive_strength+0x8c>
    c420:	82 30       	cpi	r24, 0x02	; 2
    c422:	91 05       	cpc	r25, r1
    c424:	71 f0       	breq	.+28     	; 0xc442 <si5351_drive_strength+0x70>
    c426:	03 97       	sbiw	r24, 0x03	; 3
    c428:	99 f0       	breq	.+38     	; 0xc450 <si5351_drive_strength+0x7e>
    c42a:	19 c0       	rjmp	.+50     	; 0xc45e <si5351_drive_strength+0x8c>
    c42c:	89 81       	ldd	r24, Y+1	; 0x01
    c42e:	8c 7f       	andi	r24, 0xFC	; 252
    c430:	89 83       	std	Y+1, r24	; 0x01
    c432:	15 c0       	rjmp	.+42     	; 0xc45e <si5351_drive_strength+0x8c>
    c434:	89 81       	ldd	r24, Y+1	; 0x01
    c436:	8c 7f       	andi	r24, 0xFC	; 252
    c438:	89 83       	std	Y+1, r24	; 0x01
    c43a:	89 81       	ldd	r24, Y+1	; 0x01
    c43c:	81 60       	ori	r24, 0x01	; 1
    c43e:	89 83       	std	Y+1, r24	; 0x01
    c440:	0e c0       	rjmp	.+28     	; 0xc45e <si5351_drive_strength+0x8c>
    c442:	89 81       	ldd	r24, Y+1	; 0x01
    c444:	8c 7f       	andi	r24, 0xFC	; 252
    c446:	89 83       	std	Y+1, r24	; 0x01
    c448:	89 81       	ldd	r24, Y+1	; 0x01
    c44a:	82 60       	ori	r24, 0x02	; 2
    c44c:	89 83       	std	Y+1, r24	; 0x01
    c44e:	07 c0       	rjmp	.+14     	; 0xc45e <si5351_drive_strength+0x8c>
    c450:	89 81       	ldd	r24, Y+1	; 0x01
    c452:	8c 7f       	andi	r24, 0xFC	; 252
    c454:	89 83       	std	Y+1, r24	; 0x01
    c456:	89 81       	ldd	r24, Y+1	; 0x01
    c458:	83 60       	ori	r24, 0x03	; 3
    c45a:	89 83       	std	Y+1, r24	; 0x01
    c45c:	00 00       	nop
    c45e:	89 81       	ldd	r24, Y+1	; 0x01
    c460:	8b 83       	std	Y+3, r24	; 0x03
    c462:	8d 81       	ldd	r24, Y+5	; 0x05
    c464:	20 e1       	ldi	r18, 0x10	; 16
    c466:	28 0f       	add	r18, r24
    c468:	ce 01       	movw	r24, r28
    c46a:	03 96       	adiw	r24, 0x03	; 3
    c46c:	41 e0       	ldi	r20, 0x01	; 1
    c46e:	bc 01       	movw	r22, r24
    c470:	82 2f       	mov	r24, r18
    c472:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c476:	88 23       	and	r24, r24
    c478:	11 f0       	breq	.+4      	; 0xc47e <si5351_drive_strength+0xac>
    c47a:	8b ef       	ldi	r24, 0xFB	; 251
    c47c:	01 c0       	rjmp	.+2      	; 0xc480 <si5351_drive_strength+0xae>
    c47e:	80 e0       	ldi	r24, 0x00	; 0
    c480:	26 96       	adiw	r28, 0x06	; 6
    c482:	cd bf       	out	0x3d, r28	; 61
    c484:	de bf       	out	0x3e, r29	; 62
    c486:	df 91       	pop	r29
    c488:	cf 91       	pop	r28
    c48a:	08 95       	ret

0000c48c <_Z7set_pllm10si5351_pll>:
    c48c:	cf 93       	push	r28
    c48e:	df 93       	push	r29
    c490:	cd b7       	in	r28, 0x3d	; 61
    c492:	de b7       	in	r29, 0x3e	; 62
    c494:	6c 97       	sbiw	r28, 0x1c	; 28
    c496:	cd bf       	out	0x3d, r28	; 61
    c498:	de bf       	out	0x3e, r29	; 62
    c49a:	68 8f       	std	Y+24, r22	; 0x18
    c49c:	79 8f       	std	Y+25, r23	; 0x19
    c49e:	8a 8f       	std	Y+26, r24	; 0x1a
    c4a0:	9b 8f       	std	Y+27, r25	; 0x1b
    c4a2:	4c 8f       	std	Y+28, r20	; 0x1c
    c4a4:	9e 01       	movw	r18, r28
    c4a6:	2e 5f       	subi	r18, 0xFE	; 254
    c4a8:	3f 4f       	sbci	r19, 0xFF	; 255
    c4aa:	88 8d       	ldd	r24, Y+24	; 0x18
    c4ac:	99 8d       	ldd	r25, Y+25	; 0x19
    c4ae:	aa 8d       	ldd	r26, Y+26	; 0x1a
    c4b0:	bb 8d       	ldd	r27, Y+27	; 0x1b
    c4b2:	a9 01       	movw	r20, r18
    c4b4:	bc 01       	movw	r22, r24
    c4b6:	cd 01       	movw	r24, r26
    c4b8:	0e 94 0f 63 	call	0xc61e	; 0xc61e <_Z8pll_calcmP13u_si5351_regs>
    c4bc:	88 23       	and	r24, r24
    c4be:	11 f0       	breq	.+4      	; 0xc4c4 <_Z7set_pllm10si5351_pll+0x38>
    c4c0:	81 e0       	ldi	r24, 0x01	; 1
    c4c2:	a7 c0       	rjmp	.+334    	; 0xc612 <_Z7set_pllm10si5351_pll+0x186>
    c4c4:	19 82       	std	Y+1, r1	; 0x01
    c4c6:	89 81       	ldd	r24, Y+1	; 0x01
    c4c8:	91 e0       	ldi	r25, 0x01	; 1
    c4ca:	98 0f       	add	r25, r24
    c4cc:	99 83       	std	Y+1, r25	; 0x01
    c4ce:	88 2f       	mov	r24, r24
    c4d0:	90 e0       	ldi	r25, 0x00	; 0
    c4d2:	4b 85       	ldd	r20, Y+11	; 0x0b
    c4d4:	9e 01       	movw	r18, r28
    c4d6:	22 5f       	subi	r18, 0xF2	; 242
    c4d8:	3f 4f       	sbci	r19, 0xFF	; 255
    c4da:	82 0f       	add	r24, r18
    c4dc:	93 1f       	adc	r25, r19
    c4de:	fc 01       	movw	r30, r24
    c4e0:	40 83       	st	Z, r20
    c4e2:	89 81       	ldd	r24, Y+1	; 0x01
    c4e4:	91 e0       	ldi	r25, 0x01	; 1
    c4e6:	98 0f       	add	r25, r24
    c4e8:	99 83       	std	Y+1, r25	; 0x01
    c4ea:	88 2f       	mov	r24, r24
    c4ec:	90 e0       	ldi	r25, 0x00	; 0
    c4ee:	4a 85       	ldd	r20, Y+10	; 0x0a
    c4f0:	9e 01       	movw	r18, r28
    c4f2:	22 5f       	subi	r18, 0xF2	; 242
    c4f4:	3f 4f       	sbci	r19, 0xFF	; 255
    c4f6:	82 0f       	add	r24, r18
    c4f8:	93 1f       	adc	r25, r19
    c4fa:	fc 01       	movw	r30, r24
    c4fc:	40 83       	st	Z, r20
    c4fe:	89 81       	ldd	r24, Y+1	; 0x01
    c500:	91 e0       	ldi	r25, 0x01	; 1
    c502:	98 0f       	add	r25, r24
    c504:	99 83       	std	Y+1, r25	; 0x01
    c506:	88 2f       	mov	r24, r24
    c508:	90 e0       	ldi	r25, 0x00	; 0
    c50a:	2c 81       	ldd	r18, Y+4	; 0x04
    c50c:	42 2f       	mov	r20, r18
    c50e:	43 70       	andi	r20, 0x03	; 3
    c510:	9e 01       	movw	r18, r28
    c512:	22 5f       	subi	r18, 0xF2	; 242
    c514:	3f 4f       	sbci	r19, 0xFF	; 255
    c516:	82 0f       	add	r24, r18
    c518:	93 1f       	adc	r25, r19
    c51a:	fc 01       	movw	r30, r24
    c51c:	40 83       	st	Z, r20
    c51e:	89 81       	ldd	r24, Y+1	; 0x01
    c520:	91 e0       	ldi	r25, 0x01	; 1
    c522:	98 0f       	add	r25, r24
    c524:	99 83       	std	Y+1, r25	; 0x01
    c526:	88 2f       	mov	r24, r24
    c528:	90 e0       	ldi	r25, 0x00	; 0
    c52a:	4b 81       	ldd	r20, Y+3	; 0x03
    c52c:	9e 01       	movw	r18, r28
    c52e:	22 5f       	subi	r18, 0xF2	; 242
    c530:	3f 4f       	sbci	r19, 0xFF	; 255
    c532:	82 0f       	add	r24, r18
    c534:	93 1f       	adc	r25, r19
    c536:	fc 01       	movw	r30, r24
    c538:	40 83       	st	Z, r20
    c53a:	89 81       	ldd	r24, Y+1	; 0x01
    c53c:	91 e0       	ldi	r25, 0x01	; 1
    c53e:	98 0f       	add	r25, r24
    c540:	99 83       	std	Y+1, r25	; 0x01
    c542:	88 2f       	mov	r24, r24
    c544:	90 e0       	ldi	r25, 0x00	; 0
    c546:	4a 81       	ldd	r20, Y+2	; 0x02
    c548:	9e 01       	movw	r18, r28
    c54a:	22 5f       	subi	r18, 0xF2	; 242
    c54c:	3f 4f       	sbci	r19, 0xFF	; 255
    c54e:	82 0f       	add	r24, r18
    c550:	93 1f       	adc	r25, r19
    c552:	fc 01       	movw	r30, r24
    c554:	40 83       	st	Z, r20
    c556:	89 81       	ldd	r24, Y+1	; 0x01
    c558:	88 2f       	mov	r24, r24
    c55a:	90 e0       	ldi	r25, 0x00	; 0
    c55c:	2c 85       	ldd	r18, Y+12	; 0x0c
    c55e:	42 2f       	mov	r20, r18
    c560:	42 95       	swap	r20
    c562:	40 7f       	andi	r20, 0xF0	; 240
    c564:	9e 01       	movw	r18, r28
    c566:	22 5f       	subi	r18, 0xF2	; 242
    c568:	3f 4f       	sbci	r19, 0xFF	; 255
    c56a:	82 0f       	add	r24, r18
    c56c:	93 1f       	adc	r25, r19
    c56e:	fc 01       	movw	r30, r24
    c570:	40 83       	st	Z, r20
    c572:	29 81       	ldd	r18, Y+1	; 0x01
    c574:	81 e0       	ldi	r24, 0x01	; 1
    c576:	82 0f       	add	r24, r18
    c578:	89 83       	std	Y+1, r24	; 0x01
    c57a:	82 2f       	mov	r24, r18
    c57c:	90 e0       	ldi	r25, 0x00	; 0
    c57e:	22 2f       	mov	r18, r18
    c580:	30 e0       	ldi	r19, 0x00	; 0
    c582:	ae 01       	movw	r20, r28
    c584:	42 5f       	subi	r20, 0xF2	; 242
    c586:	5f 4f       	sbci	r21, 0xFF	; 255
    c588:	24 0f       	add	r18, r20
    c58a:	35 1f       	adc	r19, r21
    c58c:	f9 01       	movw	r30, r18
    c58e:	30 81       	ld	r19, Z
    c590:	28 85       	ldd	r18, Y+8	; 0x08
    c592:	2f 70       	andi	r18, 0x0F	; 15
    c594:	43 2f       	mov	r20, r19
    c596:	42 0f       	add	r20, r18
    c598:	9e 01       	movw	r18, r28
    c59a:	22 5f       	subi	r18, 0xF2	; 242
    c59c:	3f 4f       	sbci	r19, 0xFF	; 255
    c59e:	82 0f       	add	r24, r18
    c5a0:	93 1f       	adc	r25, r19
    c5a2:	fc 01       	movw	r30, r24
    c5a4:	40 83       	st	Z, r20
    c5a6:	89 81       	ldd	r24, Y+1	; 0x01
    c5a8:	91 e0       	ldi	r25, 0x01	; 1
    c5aa:	98 0f       	add	r25, r24
    c5ac:	99 83       	std	Y+1, r25	; 0x01
    c5ae:	88 2f       	mov	r24, r24
    c5b0:	90 e0       	ldi	r25, 0x00	; 0
    c5b2:	4f 81       	ldd	r20, Y+7	; 0x07
    c5b4:	9e 01       	movw	r18, r28
    c5b6:	22 5f       	subi	r18, 0xF2	; 242
    c5b8:	3f 4f       	sbci	r19, 0xFF	; 255
    c5ba:	82 0f       	add	r24, r18
    c5bc:	93 1f       	adc	r25, r19
    c5be:	fc 01       	movw	r30, r24
    c5c0:	40 83       	st	Z, r20
    c5c2:	89 81       	ldd	r24, Y+1	; 0x01
    c5c4:	91 e0       	ldi	r25, 0x01	; 1
    c5c6:	98 0f       	add	r25, r24
    c5c8:	99 83       	std	Y+1, r25	; 0x01
    c5ca:	88 2f       	mov	r24, r24
    c5cc:	90 e0       	ldi	r25, 0x00	; 0
    c5ce:	4e 81       	ldd	r20, Y+6	; 0x06
    c5d0:	9e 01       	movw	r18, r28
    c5d2:	22 5f       	subi	r18, 0xF2	; 242
    c5d4:	3f 4f       	sbci	r19, 0xFF	; 255
    c5d6:	82 0f       	add	r24, r18
    c5d8:	93 1f       	adc	r25, r19
    c5da:	fc 01       	movw	r30, r24
    c5dc:	40 83       	st	Z, r20
    c5de:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c5e0:	81 30       	cpi	r24, 0x01	; 1
    c5e2:	59 f4       	brne	.+22     	; 0xc5fa <_Z7set_pllm10si5351_pll+0x16e>
    c5e4:	ce 01       	movw	r24, r28
    c5e6:	0e 96       	adiw	r24, 0x0e	; 14
    c5e8:	49 81       	ldd	r20, Y+1	; 0x01
    c5ea:	bc 01       	movw	r22, r24
    c5ec:	8a e1       	ldi	r24, 0x1A	; 26
    c5ee:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c5f2:	88 23       	and	r24, r24
    c5f4:	69 f0       	breq	.+26     	; 0xc610 <_Z7set_pllm10si5351_pll+0x184>
    c5f6:	81 e0       	ldi	r24, 0x01	; 1
    c5f8:	0c c0       	rjmp	.+24     	; 0xc612 <_Z7set_pllm10si5351_pll+0x186>
    c5fa:	ce 01       	movw	r24, r28
    c5fc:	0e 96       	adiw	r24, 0x0e	; 14
    c5fe:	49 81       	ldd	r20, Y+1	; 0x01
    c600:	bc 01       	movw	r22, r24
    c602:	82 e2       	ldi	r24, 0x22	; 34
    c604:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    c608:	88 23       	and	r24, r24
    c60a:	11 f0       	breq	.+4      	; 0xc610 <_Z7set_pllm10si5351_pll+0x184>
    c60c:	81 e0       	ldi	r24, 0x01	; 1
    c60e:	01 c0       	rjmp	.+2      	; 0xc612 <_Z7set_pllm10si5351_pll+0x186>
    c610:	80 e0       	ldi	r24, 0x00	; 0
    c612:	6c 96       	adiw	r28, 0x1c	; 28
    c614:	cd bf       	out	0x3d, r28	; 61
    c616:	de bf       	out	0x3e, r29	; 62
    c618:	df 91       	pop	r29
    c61a:	cf 91       	pop	r28
    c61c:	08 95       	ret

0000c61e <_Z8pll_calcmP13u_si5351_regs>:
    c61e:	cf 93       	push	r28
    c620:	df 93       	push	r29
    c622:	cd b7       	in	r28, 0x3d	; 61
    c624:	de b7       	in	r29, 0x3e	; 62
    c626:	6e 97       	sbiw	r28, 0x1e	; 30
    c628:	cd bf       	out	0x3d, r28	; 61
    c62a:	de bf       	out	0x3e, r29	; 62
    c62c:	69 8f       	std	Y+25, r22	; 0x19
    c62e:	7a 8f       	std	Y+26, r23	; 0x1a
    c630:	8b 8f       	std	Y+27, r24	; 0x1b
    c632:	9c 8f       	std	Y+28, r25	; 0x1c
    c634:	4d 8f       	std	Y+29, r20	; 0x1d
    c636:	5e 8f       	std	Y+30, r21	; 0x1e
    c638:	80 91 2e 40 	lds	r24, 0x402E	; 0x80402e <_ZL9xtal_freq>
    c63c:	90 91 2f 40 	lds	r25, 0x402F	; 0x80402f <_ZL9xtal_freq+0x1>
    c640:	a0 91 30 40 	lds	r26, 0x4030	; 0x804030 <_ZL9xtal_freq+0x2>
    c644:	b0 91 31 40 	lds	r27, 0x4031	; 0x804031 <_ZL9xtal_freq+0x3>
    c648:	89 83       	std	Y+1, r24	; 0x01
    c64a:	9a 83       	std	Y+2, r25	; 0x02
    c64c:	ab 83       	std	Y+3, r26	; 0x03
    c64e:	bc 83       	std	Y+4, r27	; 0x04
    c650:	89 8d       	ldd	r24, Y+25	; 0x19
    c652:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c654:	ab 8d       	ldd	r26, Y+27	; 0x1b
    c656:	bc 8d       	ldd	r27, Y+28	; 0x1c
    c658:	29 81       	ldd	r18, Y+1	; 0x01
    c65a:	3a 81       	ldd	r19, Y+2	; 0x02
    c65c:	4b 81       	ldd	r20, Y+3	; 0x03
    c65e:	5c 81       	ldd	r21, Y+4	; 0x04
    c660:	bc 01       	movw	r22, r24
    c662:	cd 01       	movw	r24, r26
    c664:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c668:	da 01       	movw	r26, r20
    c66a:	c9 01       	movw	r24, r18
    c66c:	8d 83       	std	Y+5, r24	; 0x05
    c66e:	9e 83       	std	Y+6, r25	; 0x06
    c670:	af 83       	std	Y+7, r26	; 0x07
    c672:	b8 87       	std	Y+8, r27	; 0x08
    c674:	89 8d       	ldd	r24, Y+25	; 0x19
    c676:	9a 8d       	ldd	r25, Y+26	; 0x1a
    c678:	ab 8d       	ldd	r26, Y+27	; 0x1b
    c67a:	bc 8d       	ldd	r27, Y+28	; 0x1c
    c67c:	29 81       	ldd	r18, Y+1	; 0x01
    c67e:	3a 81       	ldd	r19, Y+2	; 0x02
    c680:	4b 81       	ldd	r20, Y+3	; 0x03
    c682:	5c 81       	ldd	r21, Y+4	; 0x04
    c684:	bc 01       	movw	r22, r24
    c686:	cd 01       	movw	r24, r26
    c688:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c68c:	dc 01       	movw	r26, r24
    c68e:	cb 01       	movw	r24, r22
    c690:	89 8b       	std	Y+17, r24	; 0x11
    c692:	9a 8b       	std	Y+18, r25	; 0x12
    c694:	ab 8b       	std	Y+19, r26	; 0x13
    c696:	bc 8b       	std	Y+20, r27	; 0x14
    c698:	89 81       	ldd	r24, Y+1	; 0x01
    c69a:	9a 81       	ldd	r25, Y+2	; 0x02
    c69c:	ab 81       	ldd	r26, Y+3	; 0x03
    c69e:	bc 81       	ldd	r27, Y+4	; 0x04
    c6a0:	8d 8b       	std	Y+21, r24	; 0x15
    c6a2:	9e 8b       	std	Y+22, r25	; 0x16
    c6a4:	af 8b       	std	Y+23, r26	; 0x17
    c6a6:	b8 8f       	std	Y+24, r27	; 0x18
    c6a8:	9e 01       	movw	r18, r28
    c6aa:	2b 5e       	subi	r18, 0xEB	; 235
    c6ac:	3f 4f       	sbci	r19, 0xFF	; 255
    c6ae:	ce 01       	movw	r24, r28
    c6b0:	41 96       	adiw	r24, 0x11	; 17
    c6b2:	b9 01       	movw	r22, r18
    c6b4:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <_Z13reduce_by_gcdPmS_>
    c6b8:	89 89       	ldd	r24, Y+17	; 0x11
    c6ba:	9a 89       	ldd	r25, Y+18	; 0x12
    c6bc:	ab 89       	ldd	r26, Y+19	; 0x13
    c6be:	bc 89       	ldd	r27, Y+20	; 0x14
    c6c0:	88 0f       	add	r24, r24
    c6c2:	99 1f       	adc	r25, r25
    c6c4:	aa 1f       	adc	r26, r26
    c6c6:	bb 1f       	adc	r27, r27
    c6c8:	88 0f       	add	r24, r24
    c6ca:	99 1f       	adc	r25, r25
    c6cc:	aa 1f       	adc	r26, r26
    c6ce:	bb 1f       	adc	r27, r27
    c6d0:	88 0f       	add	r24, r24
    c6d2:	99 1f       	adc	r25, r25
    c6d4:	aa 1f       	adc	r26, r26
    c6d6:	bb 1f       	adc	r27, r27
    c6d8:	88 0f       	add	r24, r24
    c6da:	99 1f       	adc	r25, r25
    c6dc:	aa 1f       	adc	r26, r26
    c6de:	bb 1f       	adc	r27, r27
    c6e0:	88 0f       	add	r24, r24
    c6e2:	99 1f       	adc	r25, r25
    c6e4:	aa 1f       	adc	r26, r26
    c6e6:	bb 1f       	adc	r27, r27
    c6e8:	88 0f       	add	r24, r24
    c6ea:	99 1f       	adc	r25, r25
    c6ec:	aa 1f       	adc	r26, r26
    c6ee:	bb 1f       	adc	r27, r27
    c6f0:	88 0f       	add	r24, r24
    c6f2:	99 1f       	adc	r25, r25
    c6f4:	aa 1f       	adc	r26, r26
    c6f6:	bb 1f       	adc	r27, r27
    c6f8:	89 87       	std	Y+9, r24	; 0x09
    c6fa:	9a 87       	std	Y+10, r25	; 0x0a
    c6fc:	ab 87       	std	Y+11, r26	; 0x0b
    c6fe:	bc 87       	std	Y+12, r27	; 0x0c
    c700:	2d 89       	ldd	r18, Y+21	; 0x15
    c702:	3e 89       	ldd	r19, Y+22	; 0x16
    c704:	4f 89       	ldd	r20, Y+23	; 0x17
    c706:	58 8d       	ldd	r21, Y+24	; 0x18
    c708:	89 85       	ldd	r24, Y+9	; 0x09
    c70a:	9a 85       	ldd	r25, Y+10	; 0x0a
    c70c:	ab 85       	ldd	r26, Y+11	; 0x0b
    c70e:	bc 85       	ldd	r27, Y+12	; 0x0c
    c710:	bc 01       	movw	r22, r24
    c712:	cd 01       	movw	r24, r26
    c714:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c718:	da 01       	movw	r26, r20
    c71a:	c9 01       	movw	r24, r18
    c71c:	8d 87       	std	Y+13, r24	; 0x0d
    c71e:	9e 87       	std	Y+14, r25	; 0x0e
    c720:	af 87       	std	Y+15, r26	; 0x0f
    c722:	b8 8b       	std	Y+16, r27	; 0x10
    c724:	8d 81       	ldd	r24, Y+5	; 0x05
    c726:	9e 81       	ldd	r25, Y+6	; 0x06
    c728:	af 81       	ldd	r26, Y+7	; 0x07
    c72a:	b8 85       	ldd	r27, Y+8	; 0x08
    c72c:	88 0f       	add	r24, r24
    c72e:	99 1f       	adc	r25, r25
    c730:	aa 1f       	adc	r26, r26
    c732:	bb 1f       	adc	r27, r27
    c734:	88 0f       	add	r24, r24
    c736:	99 1f       	adc	r25, r25
    c738:	aa 1f       	adc	r26, r26
    c73a:	bb 1f       	adc	r27, r27
    c73c:	88 0f       	add	r24, r24
    c73e:	99 1f       	adc	r25, r25
    c740:	aa 1f       	adc	r26, r26
    c742:	bb 1f       	adc	r27, r27
    c744:	88 0f       	add	r24, r24
    c746:	99 1f       	adc	r25, r25
    c748:	aa 1f       	adc	r26, r26
    c74a:	bb 1f       	adc	r27, r27
    c74c:	88 0f       	add	r24, r24
    c74e:	99 1f       	adc	r25, r25
    c750:	aa 1f       	adc	r26, r26
    c752:	bb 1f       	adc	r27, r27
    c754:	88 0f       	add	r24, r24
    c756:	99 1f       	adc	r25, r25
    c758:	aa 1f       	adc	r26, r26
    c75a:	bb 1f       	adc	r27, r27
    c75c:	88 0f       	add	r24, r24
    c75e:	99 1f       	adc	r25, r25
    c760:	aa 1f       	adc	r26, r26
    c762:	bb 1f       	adc	r27, r27
    c764:	9c 01       	movw	r18, r24
    c766:	ad 01       	movw	r20, r26
    c768:	8d 85       	ldd	r24, Y+13	; 0x0d
    c76a:	9e 85       	ldd	r25, Y+14	; 0x0e
    c76c:	af 85       	ldd	r26, Y+15	; 0x0f
    c76e:	b8 89       	ldd	r27, Y+16	; 0x10
    c770:	82 0f       	add	r24, r18
    c772:	93 1f       	adc	r25, r19
    c774:	a4 1f       	adc	r26, r20
    c776:	b5 1f       	adc	r27, r21
    c778:	92 50       	subi	r25, 0x02	; 2
    c77a:	a1 09       	sbc	r26, r1
    c77c:	b1 09       	sbc	r27, r1
    c77e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c780:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c782:	f9 01       	movw	r30, r18
    c784:	80 83       	st	Z, r24
    c786:	91 83       	std	Z+1, r25	; 0x01
    c788:	a2 83       	std	Z+2, r26	; 0x02
    c78a:	b3 83       	std	Z+3, r27	; 0x03
    c78c:	2d 89       	ldd	r18, Y+21	; 0x15
    c78e:	3e 89       	ldd	r19, Y+22	; 0x16
    c790:	4f 89       	ldd	r20, Y+23	; 0x17
    c792:	58 8d       	ldd	r21, Y+24	; 0x18
    c794:	8d 85       	ldd	r24, Y+13	; 0x0d
    c796:	9e 85       	ldd	r25, Y+14	; 0x0e
    c798:	af 85       	ldd	r26, Y+15	; 0x0f
    c79a:	b8 89       	ldd	r27, Y+16	; 0x10
    c79c:	bc 01       	movw	r22, r24
    c79e:	cd 01       	movw	r24, r26
    c7a0:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    c7a4:	9b 01       	movw	r18, r22
    c7a6:	ac 01       	movw	r20, r24
    c7a8:	89 85       	ldd	r24, Y+9	; 0x09
    c7aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    c7ac:	ab 85       	ldd	r26, Y+11	; 0x0b
    c7ae:	bc 85       	ldd	r27, Y+12	; 0x0c
    c7b0:	82 1b       	sub	r24, r18
    c7b2:	93 0b       	sbc	r25, r19
    c7b4:	a4 0b       	sbc	r26, r20
    c7b6:	b5 0b       	sbc	r27, r21
    c7b8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c7ba:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c7bc:	f9 01       	movw	r30, r18
    c7be:	84 83       	std	Z+4, r24	; 0x04
    c7c0:	95 83       	std	Z+5, r25	; 0x05
    c7c2:	a6 83       	std	Z+6, r26	; 0x06
    c7c4:	b7 83       	std	Z+7, r27	; 0x07
    c7c6:	8d 89       	ldd	r24, Y+21	; 0x15
    c7c8:	9e 89       	ldd	r25, Y+22	; 0x16
    c7ca:	af 89       	ldd	r26, Y+23	; 0x17
    c7cc:	b8 8d       	ldd	r27, Y+24	; 0x18
    c7ce:	2d 8d       	ldd	r18, Y+29	; 0x1d
    c7d0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    c7d2:	f9 01       	movw	r30, r18
    c7d4:	80 87       	std	Z+8, r24	; 0x08
    c7d6:	91 87       	std	Z+9, r25	; 0x09
    c7d8:	a2 87       	std	Z+10, r26	; 0x0a
    c7da:	b3 87       	std	Z+11, r27	; 0x0b
    c7dc:	80 e0       	ldi	r24, 0x00	; 0
    c7de:	6e 96       	adiw	r28, 0x1e	; 30
    c7e0:	cd bf       	out	0x3d, r28	; 61
    c7e2:	de bf       	out	0x3e, r29	; 62
    c7e4:	df 91       	pop	r29
    c7e6:	cf 91       	pop	r28
    c7e8:	08 95       	ret

0000c7ea <_Z13reduce_by_gcdPmS_>:
    c7ea:	cf 93       	push	r28
    c7ec:	df 93       	push	r29
    c7ee:	cd b7       	in	r28, 0x3d	; 61
    c7f0:	de b7       	in	r29, 0x3e	; 62
    c7f2:	60 97       	sbiw	r28, 0x10	; 16
    c7f4:	cd bf       	out	0x3d, r28	; 61
    c7f6:	de bf       	out	0x3e, r29	; 62
    c7f8:	8d 87       	std	Y+13, r24	; 0x0d
    c7fa:	9e 87       	std	Y+14, r25	; 0x0e
    c7fc:	6f 87       	std	Y+15, r22	; 0x0f
    c7fe:	78 8b       	std	Y+16, r23	; 0x10
    c800:	8d 85       	ldd	r24, Y+13	; 0x0d
    c802:	9e 85       	ldd	r25, Y+14	; 0x0e
    c804:	fc 01       	movw	r30, r24
    c806:	80 81       	ld	r24, Z
    c808:	91 81       	ldd	r25, Z+1	; 0x01
    c80a:	a2 81       	ldd	r26, Z+2	; 0x02
    c80c:	b3 81       	ldd	r27, Z+3	; 0x03
    c80e:	89 87       	std	Y+9, r24	; 0x09
    c810:	9a 87       	std	Y+10, r25	; 0x0a
    c812:	ab 87       	std	Y+11, r26	; 0x0b
    c814:	bc 87       	std	Y+12, r27	; 0x0c
    c816:	8f 85       	ldd	r24, Y+15	; 0x0f
    c818:	98 89       	ldd	r25, Y+16	; 0x10
    c81a:	fc 01       	movw	r30, r24
    c81c:	80 81       	ld	r24, Z
    c81e:	91 81       	ldd	r25, Z+1	; 0x01
    c820:	a2 81       	ldd	r26, Z+2	; 0x02
    c822:	b3 81       	ldd	r27, Z+3	; 0x03
    c824:	8d 83       	std	Y+5, r24	; 0x05
    c826:	9e 83       	std	Y+6, r25	; 0x06
    c828:	af 83       	std	Y+7, r26	; 0x07
    c82a:	b8 87       	std	Y+8, r27	; 0x08
    c82c:	89 85       	ldd	r24, Y+9	; 0x09
    c82e:	9a 85       	ldd	r25, Y+10	; 0x0a
    c830:	ab 85       	ldd	r26, Y+11	; 0x0b
    c832:	bc 85       	ldd	r27, Y+12	; 0x0c
    c834:	89 2b       	or	r24, r25
    c836:	8a 2b       	or	r24, r26
    c838:	8b 2b       	or	r24, r27
    c83a:	09 f4       	brne	.+2      	; 0xc83e <_Z13reduce_by_gcdPmS_+0x54>
    c83c:	80 c0       	rjmp	.+256    	; 0xc93e <_Z13reduce_by_gcdPmS_+0x154>
    c83e:	8d 81       	ldd	r24, Y+5	; 0x05
    c840:	9e 81       	ldd	r25, Y+6	; 0x06
    c842:	af 81       	ldd	r26, Y+7	; 0x07
    c844:	b8 85       	ldd	r27, Y+8	; 0x08
    c846:	89 2b       	or	r24, r25
    c848:	8a 2b       	or	r24, r26
    c84a:	8b 2b       	or	r24, r27
    c84c:	09 f4       	brne	.+2      	; 0xc850 <_Z13reduce_by_gcdPmS_+0x66>
    c84e:	77 c0       	rjmp	.+238    	; 0xc93e <_Z13reduce_by_gcdPmS_+0x154>
    c850:	89 85       	ldd	r24, Y+9	; 0x09
    c852:	9a 85       	ldd	r25, Y+10	; 0x0a
    c854:	ab 85       	ldd	r26, Y+11	; 0x0b
    c856:	bc 85       	ldd	r27, Y+12	; 0x0c
    c858:	2d 81       	ldd	r18, Y+5	; 0x05
    c85a:	3e 81       	ldd	r19, Y+6	; 0x06
    c85c:	4f 81       	ldd	r20, Y+7	; 0x07
    c85e:	58 85       	ldd	r21, Y+8	; 0x08
    c860:	bc 01       	movw	r22, r24
    c862:	cd 01       	movw	r24, r26
    c864:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c868:	dc 01       	movw	r26, r24
    c86a:	cb 01       	movw	r24, r22
    c86c:	89 83       	std	Y+1, r24	; 0x01
    c86e:	9a 83       	std	Y+2, r25	; 0x02
    c870:	ab 83       	std	Y+3, r26	; 0x03
    c872:	bc 83       	std	Y+4, r27	; 0x04
    c874:	89 81       	ldd	r24, Y+1	; 0x01
    c876:	9a 81       	ldd	r25, Y+2	; 0x02
    c878:	ab 81       	ldd	r26, Y+3	; 0x03
    c87a:	bc 81       	ldd	r27, Y+4	; 0x04
    c87c:	89 2b       	or	r24, r25
    c87e:	8a 2b       	or	r24, r26
    c880:	8b 2b       	or	r24, r27
    c882:	19 f1       	breq	.+70     	; 0xc8ca <_Z13reduce_by_gcdPmS_+0xe0>
    c884:	8d 81       	ldd	r24, Y+5	; 0x05
    c886:	9e 81       	ldd	r25, Y+6	; 0x06
    c888:	af 81       	ldd	r26, Y+7	; 0x07
    c88a:	b8 85       	ldd	r27, Y+8	; 0x08
    c88c:	89 87       	std	Y+9, r24	; 0x09
    c88e:	9a 87       	std	Y+10, r25	; 0x0a
    c890:	ab 87       	std	Y+11, r26	; 0x0b
    c892:	bc 87       	std	Y+12, r27	; 0x0c
    c894:	89 81       	ldd	r24, Y+1	; 0x01
    c896:	9a 81       	ldd	r25, Y+2	; 0x02
    c898:	ab 81       	ldd	r26, Y+3	; 0x03
    c89a:	bc 81       	ldd	r27, Y+4	; 0x04
    c89c:	8d 83       	std	Y+5, r24	; 0x05
    c89e:	9e 83       	std	Y+6, r25	; 0x06
    c8a0:	af 83       	std	Y+7, r26	; 0x07
    c8a2:	b8 87       	std	Y+8, r27	; 0x08
    c8a4:	89 85       	ldd	r24, Y+9	; 0x09
    c8a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    c8a8:	ab 85       	ldd	r26, Y+11	; 0x0b
    c8aa:	bc 85       	ldd	r27, Y+12	; 0x0c
    c8ac:	2d 81       	ldd	r18, Y+5	; 0x05
    c8ae:	3e 81       	ldd	r19, Y+6	; 0x06
    c8b0:	4f 81       	ldd	r20, Y+7	; 0x07
    c8b2:	58 85       	ldd	r21, Y+8	; 0x08
    c8b4:	bc 01       	movw	r22, r24
    c8b6:	cd 01       	movw	r24, r26
    c8b8:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c8bc:	dc 01       	movw	r26, r24
    c8be:	cb 01       	movw	r24, r22
    c8c0:	89 83       	std	Y+1, r24	; 0x01
    c8c2:	9a 83       	std	Y+2, r25	; 0x02
    c8c4:	ab 83       	std	Y+3, r26	; 0x03
    c8c6:	bc 83       	std	Y+4, r27	; 0x04
    c8c8:	d5 cf       	rjmp	.-86     	; 0xc874 <_Z13reduce_by_gcdPmS_+0x8a>
    c8ca:	8d 81       	ldd	r24, Y+5	; 0x05
    c8cc:	9e 81       	ldd	r25, Y+6	; 0x06
    c8ce:	af 81       	ldd	r26, Y+7	; 0x07
    c8d0:	b8 85       	ldd	r27, Y+8	; 0x08
    c8d2:	02 97       	sbiw	r24, 0x02	; 2
    c8d4:	a1 05       	cpc	r26, r1
    c8d6:	b1 05       	cpc	r27, r1
    c8d8:	a0 f1       	brcs	.+104    	; 0xc942 <_Z13reduce_by_gcdPmS_+0x158>
    c8da:	8d 85       	ldd	r24, Y+13	; 0x0d
    c8dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    c8de:	fc 01       	movw	r30, r24
    c8e0:	80 81       	ld	r24, Z
    c8e2:	91 81       	ldd	r25, Z+1	; 0x01
    c8e4:	a2 81       	ldd	r26, Z+2	; 0x02
    c8e6:	b3 81       	ldd	r27, Z+3	; 0x03
    c8e8:	2d 81       	ldd	r18, Y+5	; 0x05
    c8ea:	3e 81       	ldd	r19, Y+6	; 0x06
    c8ec:	4f 81       	ldd	r20, Y+7	; 0x07
    c8ee:	58 85       	ldd	r21, Y+8	; 0x08
    c8f0:	bc 01       	movw	r22, r24
    c8f2:	cd 01       	movw	r24, r26
    c8f4:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c8f8:	da 01       	movw	r26, r20
    c8fa:	c9 01       	movw	r24, r18
    c8fc:	2d 85       	ldd	r18, Y+13	; 0x0d
    c8fe:	3e 85       	ldd	r19, Y+14	; 0x0e
    c900:	f9 01       	movw	r30, r18
    c902:	80 83       	st	Z, r24
    c904:	91 83       	std	Z+1, r25	; 0x01
    c906:	a2 83       	std	Z+2, r26	; 0x02
    c908:	b3 83       	std	Z+3, r27	; 0x03
    c90a:	8f 85       	ldd	r24, Y+15	; 0x0f
    c90c:	98 89       	ldd	r25, Y+16	; 0x10
    c90e:	fc 01       	movw	r30, r24
    c910:	80 81       	ld	r24, Z
    c912:	91 81       	ldd	r25, Z+1	; 0x01
    c914:	a2 81       	ldd	r26, Z+2	; 0x02
    c916:	b3 81       	ldd	r27, Z+3	; 0x03
    c918:	2d 81       	ldd	r18, Y+5	; 0x05
    c91a:	3e 81       	ldd	r19, Y+6	; 0x06
    c91c:	4f 81       	ldd	r20, Y+7	; 0x07
    c91e:	58 85       	ldd	r21, Y+8	; 0x08
    c920:	bc 01       	movw	r22, r24
    c922:	cd 01       	movw	r24, r26
    c924:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    c928:	da 01       	movw	r26, r20
    c92a:	c9 01       	movw	r24, r18
    c92c:	2f 85       	ldd	r18, Y+15	; 0x0f
    c92e:	38 89       	ldd	r19, Y+16	; 0x10
    c930:	f9 01       	movw	r30, r18
    c932:	80 83       	st	Z, r24
    c934:	91 83       	std	Z+1, r25	; 0x01
    c936:	a2 83       	std	Z+2, r26	; 0x02
    c938:	b3 83       	std	Z+3, r27	; 0x03
    c93a:	00 00       	nop
    c93c:	02 c0       	rjmp	.+4      	; 0xc942 <_Z13reduce_by_gcdPmS_+0x158>
    c93e:	00 00       	nop
    c940:	01 c0       	rjmp	.+2      	; 0xc944 <_Z13reduce_by_gcdPmS_+0x15a>
    c942:	00 00       	nop
    c944:	60 96       	adiw	r28, 0x10	; 16
    c946:	cd bf       	out	0x3d, r28	; 61
    c948:	de bf       	out	0x3e, r29	; 62
    c94a:	df 91       	pop	r29
    c94c:	cf 91       	pop	r28
    c94e:	08 95       	ret

0000c950 <_Z15multisynth_calcmP13u_si5351_regsPbS1_>:
    c950:	0f 93       	push	r16
    c952:	1f 93       	push	r17
    c954:	cf 93       	push	r28
    c956:	df 93       	push	r29
    c958:	cd b7       	in	r28, 0x3d	; 61
    c95a:	de b7       	in	r29, 0x3e	; 62
    c95c:	69 97       	sbiw	r28, 0x19	; 25
    c95e:	cd bf       	out	0x3d, r28	; 61
    c960:	de bf       	out	0x3e, r29	; 62
    c962:	68 8b       	std	Y+16, r22	; 0x10
    c964:	79 8b       	std	Y+17, r23	; 0x11
    c966:	8a 8b       	std	Y+18, r24	; 0x12
    c968:	9b 8b       	std	Y+19, r25	; 0x13
    c96a:	4c 8b       	std	Y+20, r20	; 0x14
    c96c:	5d 8b       	std	Y+21, r21	; 0x15
    c96e:	2e 8b       	std	Y+22, r18	; 0x16
    c970:	3f 8b       	std	Y+23, r19	; 0x17
    c972:	08 8f       	std	Y+24, r16	; 0x18
    c974:	19 8f       	std	Y+25, r17	; 0x19
    c976:	19 82       	std	Y+1, r1	; 0x01
    c978:	1a 82       	std	Y+2, r1	; 0x02
    c97a:	1b 82       	std	Y+3, r1	; 0x03
    c97c:	1c 82       	std	Y+4, r1	; 0x04
    c97e:	1d 82       	std	Y+5, r1	; 0x05
    c980:	1e 82       	std	Y+6, r1	; 0x06
    c982:	1f 82       	std	Y+7, r1	; 0x07
    c984:	18 86       	std	Y+8, r1	; 0x08
    c986:	8e 89       	ldd	r24, Y+22	; 0x16
    c988:	9f 89       	ldd	r25, Y+23	; 0x17
    c98a:	21 e0       	ldi	r18, 0x01	; 1
    c98c:	fc 01       	movw	r30, r24
    c98e:	20 83       	st	Z, r18
    c990:	88 89       	ldd	r24, Y+16	; 0x10
    c992:	99 89       	ldd	r25, Y+17	; 0x11
    c994:	aa 89       	ldd	r26, Y+18	; 0x12
    c996:	bb 89       	ldd	r27, Y+19	; 0x13
    c998:	80 38       	cpi	r24, 0x80	; 128
    c99a:	91 4d       	sbci	r25, 0xD1	; 209
    c99c:	a0 4f       	sbci	r26, 0xF0	; 240
    c99e:	b8 40       	sbci	r27, 0x08	; 8
    c9a0:	d8 f0       	brcs	.+54     	; 0xc9d8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x88>
    c9a2:	84 e0       	ldi	r24, 0x04	; 4
    c9a4:	90 e0       	ldi	r25, 0x00	; 0
    c9a6:	a0 e0       	ldi	r26, 0x00	; 0
    c9a8:	b0 e0       	ldi	r27, 0x00	; 0
    c9aa:	89 83       	std	Y+1, r24	; 0x01
    c9ac:	9a 83       	std	Y+2, r25	; 0x02
    c9ae:	ab 83       	std	Y+3, r26	; 0x03
    c9b0:	bc 83       	std	Y+4, r27	; 0x04
    c9b2:	29 81       	ldd	r18, Y+1	; 0x01
    c9b4:	3a 81       	ldd	r19, Y+2	; 0x02
    c9b6:	4b 81       	ldd	r20, Y+3	; 0x03
    c9b8:	5c 81       	ldd	r21, Y+4	; 0x04
    c9ba:	88 89       	ldd	r24, Y+16	; 0x10
    c9bc:	99 89       	ldd	r25, Y+17	; 0x11
    c9be:	aa 89       	ldd	r26, Y+18	; 0x12
    c9c0:	bb 89       	ldd	r27, Y+19	; 0x13
    c9c2:	bc 01       	movw	r22, r24
    c9c4:	cd 01       	movw	r24, r26
    c9c6:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    c9ca:	dc 01       	movw	r26, r24
    c9cc:	cb 01       	movw	r24, r22
    c9ce:	8d 83       	std	Y+5, r24	; 0x05
    c9d0:	9e 83       	std	Y+6, r25	; 0x06
    c9d2:	af 83       	std	Y+7, r26	; 0x07
    c9d4:	b8 87       	std	Y+8, r27	; 0x08
    c9d6:	6e c0       	rjmp	.+220    	; 0xcab4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    c9d8:	19 86       	std	Y+9, r1	; 0x09
    c9da:	1a 86       	std	Y+10, r1	; 0x0a
    c9dc:	1b 86       	std	Y+11, r1	; 0x0b
    c9de:	89 85       	ldd	r24, Y+9	; 0x09
    c9e0:	88 23       	and	r24, r24
    c9e2:	09 f0       	breq	.+2      	; 0xc9e6 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x96>
    c9e4:	52 c0       	rjmp	.+164    	; 0xca8a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x13a>
    c9e6:	8b 85       	ldd	r24, Y+11	; 0x0b
    c9e8:	28 2f       	mov	r18, r24
    c9ea:	30 e0       	ldi	r19, 0x00	; 0
    c9ec:	40 e0       	ldi	r20, 0x00	; 0
    c9ee:	50 e0       	ldi	r21, 0x00	; 0
    c9f0:	88 89       	ldd	r24, Y+16	; 0x10
    c9f2:	99 89       	ldd	r25, Y+17	; 0x11
    c9f4:	aa 89       	ldd	r26, Y+18	; 0x12
    c9f6:	bb 89       	ldd	r27, Y+19	; 0x13
    c9f8:	bc 01       	movw	r22, r24
    c9fa:	cd 01       	movw	r24, r26
    c9fc:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    ca00:	9b 01       	movw	r18, r22
    ca02:	ac 01       	movw	r20, r24
    ca04:	80 e0       	ldi	r24, 0x00	; 0
    ca06:	99 ee       	ldi	r25, 0xE9	; 233
    ca08:	a4 ea       	ldi	r26, 0xA4	; 164
    ca0a:	b5 e3       	ldi	r27, 0x35	; 53
    ca0c:	82 1b       	sub	r24, r18
    ca0e:	93 0b       	sbc	r25, r19
    ca10:	a4 0b       	sbc	r26, r20
    ca12:	b5 0b       	sbc	r27, r21
    ca14:	8c 87       	std	Y+12, r24	; 0x0c
    ca16:	9d 87       	std	Y+13, r25	; 0x0d
    ca18:	ae 87       	std	Y+14, r26	; 0x0e
    ca1a:	bf 87       	std	Y+15, r27	; 0x0f
    ca1c:	8b 85       	ldd	r24, Y+11	; 0x0b
    ca1e:	8e 5f       	subi	r24, 0xFE	; 254
    ca20:	8b 87       	std	Y+11, r24	; 0x0b
    ca22:	8c 85       	ldd	r24, Y+12	; 0x0c
    ca24:	9d 85       	ldd	r25, Y+13	; 0x0d
    ca26:	ae 85       	ldd	r26, Y+14	; 0x0e
    ca28:	bf 85       	ldd	r27, Y+15	; 0x0f
    ca2a:	81 15       	cp	r24, r1
    ca2c:	96 44       	sbci	r25, 0x46	; 70
    ca2e:	a3 4c       	sbci	r26, 0xC3	; 195
    ca30:	b3 42       	sbci	r27, 0x23	; 35
    ca32:	40 f1       	brcs	.+80     	; 0xca84 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x134>
    ca34:	8c 85       	ldd	r24, Y+12	; 0x0c
    ca36:	9d 85       	ldd	r25, Y+13	; 0x0d
    ca38:	ae 85       	ldd	r26, Y+14	; 0x0e
    ca3a:	bf 85       	ldd	r27, Y+15	; 0x0f
    ca3c:	28 89       	ldd	r18, Y+16	; 0x10
    ca3e:	39 89       	ldd	r19, Y+17	; 0x11
    ca40:	4a 89       	ldd	r20, Y+18	; 0x12
    ca42:	5b 89       	ldd	r21, Y+19	; 0x13
    ca44:	bc 01       	movw	r22, r24
    ca46:	cd 01       	movw	r24, r26
    ca48:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    ca4c:	da 01       	movw	r26, r20
    ca4e:	c9 01       	movw	r24, r18
    ca50:	8c 87       	std	Y+12, r24	; 0x0c
    ca52:	9d 87       	std	Y+13, r25	; 0x0d
    ca54:	ae 87       	std	Y+14, r26	; 0x0e
    ca56:	bf 87       	std	Y+15, r27	; 0x0f
    ca58:	8c 85       	ldd	r24, Y+12	; 0x0c
    ca5a:	9d 85       	ldd	r25, Y+13	; 0x0d
    ca5c:	ae 85       	ldd	r26, Y+14	; 0x0e
    ca5e:	bf 85       	ldd	r27, Y+15	; 0x0f
    ca60:	04 97       	sbiw	r24, 0x04	; 4
    ca62:	a1 05       	cpc	r26, r1
    ca64:	b1 05       	cpc	r27, r1
    ca66:	08 f4       	brcc	.+2      	; 0xca6a <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x11a>
    ca68:	ba cf       	rjmp	.-140    	; 0xc9de <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    ca6a:	81 e0       	ldi	r24, 0x01	; 1
    ca6c:	89 87       	std	Y+9, r24	; 0x09
    ca6e:	81 e0       	ldi	r24, 0x01	; 1
    ca70:	8a 87       	std	Y+10, r24	; 0x0a
    ca72:	8c 85       	ldd	r24, Y+12	; 0x0c
    ca74:	9d 85       	ldd	r25, Y+13	; 0x0d
    ca76:	ae 85       	ldd	r26, Y+14	; 0x0e
    ca78:	bf 85       	ldd	r27, Y+15	; 0x0f
    ca7a:	89 83       	std	Y+1, r24	; 0x01
    ca7c:	9a 83       	std	Y+2, r25	; 0x02
    ca7e:	ab 83       	std	Y+3, r26	; 0x03
    ca80:	bc 83       	std	Y+4, r27	; 0x04
    ca82:	ad cf       	rjmp	.-166    	; 0xc9de <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    ca84:	81 e0       	ldi	r24, 0x01	; 1
    ca86:	89 87       	std	Y+9, r24	; 0x09
    ca88:	aa cf       	rjmp	.-172    	; 0xc9de <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x8e>
    ca8a:	8a 85       	ldd	r24, Y+10	; 0x0a
    ca8c:	88 23       	and	r24, r24
    ca8e:	91 f0       	breq	.+36     	; 0xcab4 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x164>
    ca90:	29 81       	ldd	r18, Y+1	; 0x01
    ca92:	3a 81       	ldd	r19, Y+2	; 0x02
    ca94:	4b 81       	ldd	r20, Y+3	; 0x03
    ca96:	5c 81       	ldd	r21, Y+4	; 0x04
    ca98:	88 89       	ldd	r24, Y+16	; 0x10
    ca9a:	99 89       	ldd	r25, Y+17	; 0x11
    ca9c:	aa 89       	ldd	r26, Y+18	; 0x12
    ca9e:	bb 89       	ldd	r27, Y+19	; 0x13
    caa0:	bc 01       	movw	r22, r24
    caa2:	cd 01       	movw	r24, r26
    caa4:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    caa8:	dc 01       	movw	r26, r24
    caaa:	cb 01       	movw	r24, r22
    caac:	8d 83       	std	Y+5, r24	; 0x05
    caae:	9e 83       	std	Y+6, r25	; 0x06
    cab0:	af 83       	std	Y+7, r26	; 0x07
    cab2:	b8 87       	std	Y+8, r27	; 0x08
    cab4:	21 e0       	ldi	r18, 0x01	; 1
    cab6:	89 81       	ldd	r24, Y+1	; 0x01
    cab8:	9a 81       	ldd	r25, Y+2	; 0x02
    caba:	ab 81       	ldd	r26, Y+3	; 0x03
    cabc:	bc 81       	ldd	r27, Y+4	; 0x04
    cabe:	04 97       	sbiw	r24, 0x04	; 4
    cac0:	a1 05       	cpc	r26, r1
    cac2:	b1 05       	cpc	r27, r1
    cac4:	09 f0       	breq	.+2      	; 0xcac8 <_Z15multisynth_calcmP13u_si5351_regsPbS1_+0x178>
    cac6:	20 e0       	ldi	r18, 0x00	; 0
    cac8:	88 8d       	ldd	r24, Y+24	; 0x18
    caca:	99 8d       	ldd	r25, Y+25	; 0x19
    cacc:	fc 01       	movw	r30, r24
    cace:	20 83       	st	Z, r18
    cad0:	89 81       	ldd	r24, Y+1	; 0x01
    cad2:	9a 81       	ldd	r25, Y+2	; 0x02
    cad4:	ab 81       	ldd	r26, Y+3	; 0x03
    cad6:	bc 81       	ldd	r27, Y+4	; 0x04
    cad8:	88 0f       	add	r24, r24
    cada:	99 1f       	adc	r25, r25
    cadc:	aa 1f       	adc	r26, r26
    cade:	bb 1f       	adc	r27, r27
    cae0:	88 0f       	add	r24, r24
    cae2:	99 1f       	adc	r25, r25
    cae4:	aa 1f       	adc	r26, r26
    cae6:	bb 1f       	adc	r27, r27
    cae8:	88 0f       	add	r24, r24
    caea:	99 1f       	adc	r25, r25
    caec:	aa 1f       	adc	r26, r26
    caee:	bb 1f       	adc	r27, r27
    caf0:	88 0f       	add	r24, r24
    caf2:	99 1f       	adc	r25, r25
    caf4:	aa 1f       	adc	r26, r26
    caf6:	bb 1f       	adc	r27, r27
    caf8:	88 0f       	add	r24, r24
    cafa:	99 1f       	adc	r25, r25
    cafc:	aa 1f       	adc	r26, r26
    cafe:	bb 1f       	adc	r27, r27
    cb00:	88 0f       	add	r24, r24
    cb02:	99 1f       	adc	r25, r25
    cb04:	aa 1f       	adc	r26, r26
    cb06:	bb 1f       	adc	r27, r27
    cb08:	88 0f       	add	r24, r24
    cb0a:	99 1f       	adc	r25, r25
    cb0c:	aa 1f       	adc	r26, r26
    cb0e:	bb 1f       	adc	r27, r27
    cb10:	92 50       	subi	r25, 0x02	; 2
    cb12:	a1 09       	sbc	r26, r1
    cb14:	b1 09       	sbc	r27, r1
    cb16:	2c 89       	ldd	r18, Y+20	; 0x14
    cb18:	3d 89       	ldd	r19, Y+21	; 0x15
    cb1a:	f9 01       	movw	r30, r18
    cb1c:	80 83       	st	Z, r24
    cb1e:	91 83       	std	Z+1, r25	; 0x01
    cb20:	a2 83       	std	Z+2, r26	; 0x02
    cb22:	b3 83       	std	Z+3, r27	; 0x03
    cb24:	8c 89       	ldd	r24, Y+20	; 0x14
    cb26:	9d 89       	ldd	r25, Y+21	; 0x15
    cb28:	fc 01       	movw	r30, r24
    cb2a:	14 82       	std	Z+4, r1	; 0x04
    cb2c:	15 82       	std	Z+5, r1	; 0x05
    cb2e:	16 82       	std	Z+6, r1	; 0x06
    cb30:	17 82       	std	Z+7, r1	; 0x07
    cb32:	2c 89       	ldd	r18, Y+20	; 0x14
    cb34:	3d 89       	ldd	r19, Y+21	; 0x15
    cb36:	81 e0       	ldi	r24, 0x01	; 1
    cb38:	90 e0       	ldi	r25, 0x00	; 0
    cb3a:	a0 e0       	ldi	r26, 0x00	; 0
    cb3c:	b0 e0       	ldi	r27, 0x00	; 0
    cb3e:	f9 01       	movw	r30, r18
    cb40:	80 87       	std	Z+8, r24	; 0x08
    cb42:	91 87       	std	Z+9, r25	; 0x09
    cb44:	a2 87       	std	Z+10, r26	; 0x0a
    cb46:	b3 87       	std	Z+11, r27	; 0x0b
    cb48:	8d 81       	ldd	r24, Y+5	; 0x05
    cb4a:	9e 81       	ldd	r25, Y+6	; 0x06
    cb4c:	af 81       	ldd	r26, Y+7	; 0x07
    cb4e:	b8 85       	ldd	r27, Y+8	; 0x08
    cb50:	bc 01       	movw	r22, r24
    cb52:	cd 01       	movw	r24, r26
    cb54:	69 96       	adiw	r28, 0x19	; 25
    cb56:	cd bf       	out	0x3d, r28	; 61
    cb58:	de bf       	out	0x3e, r29	; 62
    cb5a:	df 91       	pop	r29
    cb5c:	cf 91       	pop	r28
    cb5e:	1f 91       	pop	r17
    cb60:	0f 91       	pop	r16
    cb62:	08 95       	ret

0000cb64 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_>:
 * Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
 *
 * Note: do not call this function with global value freqVCOB == zero
 */
	Frequency_Hz multisynth_estimate(Frequency_Hz freq_Fout, Union_si5351_regs *reg, bool *int_mode, bool *divBy4)
	{
    cb64:	0f 93       	push	r16
    cb66:	1f 93       	push	r17
    cb68:	cf 93       	push	r28
    cb6a:	df 93       	push	r29
    cb6c:	cd b7       	in	r28, 0x3d	; 61
    cb6e:	de b7       	in	r29, 0x3e	; 62
    cb70:	6e 97       	sbiw	r28, 0x1e	; 30
    cb72:	cd bf       	out	0x3d, r28	; 61
    cb74:	de bf       	out	0x3e, r29	; 62
    cb76:	6d 8b       	std	Y+21, r22	; 0x15
    cb78:	7e 8b       	std	Y+22, r23	; 0x16
    cb7a:	8f 8b       	std	Y+23, r24	; 0x17
    cb7c:	98 8f       	std	Y+24, r25	; 0x18
    cb7e:	49 8f       	std	Y+25, r20	; 0x19
    cb80:	5a 8f       	std	Y+26, r21	; 0x1a
    cb82:	2b 8f       	std	Y+27, r18	; 0x1b
    cb84:	3c 8f       	std	Y+28, r19	; 0x1c
    cb86:	0d 8f       	std	Y+29, r16	; 0x1d
    cb88:	1e 8f       	std	Y+30, r17	; 0x1e
				return(0);
			}
#endif  /* DO_BOUNDS_CHECKING */

		/* Determine integer part of feedback equation */
		a = freqVCOB / freq_Fout;
    cb8a:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZL8freqVCOB>
    cb8e:	90 91 a6 4a 	lds	r25, 0x4AA6	; 0x804aa6 <_ZL8freqVCOB+0x1>
    cb92:	a0 91 a7 4a 	lds	r26, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB+0x2>
    cb96:	b0 91 a8 4a 	lds	r27, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x3>
    cb9a:	2d 89       	ldd	r18, Y+21	; 0x15
    cb9c:	3e 89       	ldd	r19, Y+22	; 0x16
    cb9e:	4f 89       	ldd	r20, Y+23	; 0x17
    cba0:	58 8d       	ldd	r21, Y+24	; 0x18
    cba2:	bc 01       	movw	r22, r24
    cba4:	cd 01       	movw	r24, r26
    cba6:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    cbaa:	da 01       	movw	r26, r20
    cbac:	c9 01       	movw	r24, r18
    cbae:	89 83       	std	Y+1, r24	; 0x01
    cbb0:	9a 83       	std	Y+2, r25	; 0x02
    cbb2:	ab 83       	std	Y+3, r26	; 0x03
    cbb4:	bc 83       	std	Y+4, r27	; 0x04
		b = freqVCOB % freq_Fout;
    cbb6:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZL8freqVCOB>
    cbba:	90 91 a6 4a 	lds	r25, 0x4AA6	; 0x804aa6 <_ZL8freqVCOB+0x1>
    cbbe:	a0 91 a7 4a 	lds	r26, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB+0x2>
    cbc2:	b0 91 a8 4a 	lds	r27, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x3>
    cbc6:	2d 89       	ldd	r18, Y+21	; 0x15
    cbc8:	3e 89       	ldd	r19, Y+22	; 0x16
    cbca:	4f 89       	ldd	r20, Y+23	; 0x17
    cbcc:	58 8d       	ldd	r21, Y+24	; 0x18
    cbce:	bc 01       	movw	r22, r24
    cbd0:	cd 01       	movw	r24, r26
    cbd2:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    cbd6:	dc 01       	movw	r26, r24
    cbd8:	cb 01       	movw	r24, r22
    cbda:	8d 87       	std	Y+13, r24	; 0x0d
    cbdc:	9e 87       	std	Y+14, r25	; 0x0e
    cbde:	af 87       	std	Y+15, r26	; 0x0f
    cbe0:	b8 8b       	std	Y+16, r27	; 0x10
		c = freq_Fout;
    cbe2:	8d 89       	ldd	r24, Y+21	; 0x15
    cbe4:	9e 89       	ldd	r25, Y+22	; 0x16
    cbe6:	af 89       	ldd	r26, Y+23	; 0x17
    cbe8:	b8 8d       	ldd	r27, Y+24	; 0x18
    cbea:	89 8b       	std	Y+17, r24	; 0x11
    cbec:	9a 8b       	std	Y+18, r25	; 0x12
    cbee:	ab 8b       	std	Y+19, r26	; 0x13
    cbf0:	bc 8b       	std	Y+20, r27	; 0x14
		reduce_by_gcd(&b, &c);  /* prevents overflow conditions and makes results agree with ClockBuilder */
    cbf2:	9e 01       	movw	r18, r28
    cbf4:	2f 5e       	subi	r18, 0xEF	; 239
    cbf6:	3f 4f       	sbci	r19, 0xFF	; 255
    cbf8:	ce 01       	movw	r24, r28
    cbfa:	0d 96       	adiw	r24, 0x0d	; 13
    cbfc:	b9 01       	movw	r22, r18
    cbfe:	0e 94 f5 63 	call	0xc7ea	; 0xc7ea <_Z13reduce_by_gcdPmS_>

		/* Calculate the approximated output frequency given by fOUT = fvco / (a + b/c) */
		freq_Fout = freqVCOB;
    cc02:	80 91 a5 4a 	lds	r24, 0x4AA5	; 0x804aa5 <_ZL8freqVCOB>
    cc06:	90 91 a6 4a 	lds	r25, 0x4AA6	; 0x804aa6 <_ZL8freqVCOB+0x1>
    cc0a:	a0 91 a7 4a 	lds	r26, 0x4AA7	; 0x804aa7 <_ZL8freqVCOB+0x2>
    cc0e:	b0 91 a8 4a 	lds	r27, 0x4AA8	; 0x804aa8 <_ZL8freqVCOB+0x3>
    cc12:	8d 8b       	std	Y+21, r24	; 0x15
    cc14:	9e 8b       	std	Y+22, r25	; 0x16
    cc16:	af 8b       	std	Y+23, r26	; 0x17
    cc18:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout /= (a * c + b);
    cc1a:	29 89       	ldd	r18, Y+17	; 0x11
    cc1c:	3a 89       	ldd	r19, Y+18	; 0x12
    cc1e:	4b 89       	ldd	r20, Y+19	; 0x13
    cc20:	5c 89       	ldd	r21, Y+20	; 0x14
    cc22:	89 81       	ldd	r24, Y+1	; 0x01
    cc24:	9a 81       	ldd	r25, Y+2	; 0x02
    cc26:	ab 81       	ldd	r26, Y+3	; 0x03
    cc28:	bc 81       	ldd	r27, Y+4	; 0x04
    cc2a:	bc 01       	movw	r22, r24
    cc2c:	cd 01       	movw	r24, r26
    cc2e:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    cc32:	9b 01       	movw	r18, r22
    cc34:	ac 01       	movw	r20, r24
    cc36:	8d 85       	ldd	r24, Y+13	; 0x0d
    cc38:	9e 85       	ldd	r25, Y+14	; 0x0e
    cc3a:	af 85       	ldd	r26, Y+15	; 0x0f
    cc3c:	b8 89       	ldd	r27, Y+16	; 0x10
    cc3e:	28 0f       	add	r18, r24
    cc40:	39 1f       	adc	r19, r25
    cc42:	4a 1f       	adc	r20, r26
    cc44:	5b 1f       	adc	r21, r27
    cc46:	8d 89       	ldd	r24, Y+21	; 0x15
    cc48:	9e 89       	ldd	r25, Y+22	; 0x16
    cc4a:	af 89       	ldd	r26, Y+23	; 0x17
    cc4c:	b8 8d       	ldd	r27, Y+24	; 0x18
    cc4e:	bc 01       	movw	r22, r24
    cc50:	cd 01       	movw	r24, r26
    cc52:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    cc56:	da 01       	movw	r26, r20
    cc58:	c9 01       	movw	r24, r18
    cc5a:	8d 8b       	std	Y+21, r24	; 0x15
    cc5c:	9e 8b       	std	Y+22, r25	; 0x16
    cc5e:	af 8b       	std	Y+23, r26	; 0x17
    cc60:	b8 8f       	std	Y+24, r27	; 0x18
		freq_Fout *= c;
    cc62:	89 89       	ldd	r24, Y+17	; 0x11
    cc64:	9a 89       	ldd	r25, Y+18	; 0x12
    cc66:	ab 89       	ldd	r26, Y+19	; 0x13
    cc68:	bc 89       	ldd	r27, Y+20	; 0x14
    cc6a:	2d 89       	ldd	r18, Y+21	; 0x15
    cc6c:	3e 89       	ldd	r19, Y+22	; 0x16
    cc6e:	4f 89       	ldd	r20, Y+23	; 0x17
    cc70:	58 8d       	ldd	r21, Y+24	; 0x18
    cc72:	bc 01       	movw	r22, r24
    cc74:	cd 01       	movw	r24, r26
    cc76:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    cc7a:	dc 01       	movw	r26, r24
    cc7c:	cb 01       	movw	r24, r22
    cc7e:	8d 8b       	std	Y+21, r24	; 0x15
    cc80:	9e 8b       	std	Y+22, r25	; 0x16
    cc82:	af 8b       	std	Y+23, r26	; 0x17
    cc84:	b8 8f       	std	Y+24, r27	; 0x18

		*int_mode = (b == 0) && !(a % 2);
    cc86:	8d 85       	ldd	r24, Y+13	; 0x0d
    cc88:	9e 85       	ldd	r25, Y+14	; 0x0e
    cc8a:	af 85       	ldd	r26, Y+15	; 0x0f
    cc8c:	b8 89       	ldd	r27, Y+16	; 0x10
    cc8e:	89 2b       	or	r24, r25
    cc90:	8a 2b       	or	r24, r26
    cc92:	8b 2b       	or	r24, r27
    cc94:	71 f4       	brne	.+28     	; 0xccb2 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    cc96:	89 81       	ldd	r24, Y+1	; 0x01
    cc98:	9a 81       	ldd	r25, Y+2	; 0x02
    cc9a:	ab 81       	ldd	r26, Y+3	; 0x03
    cc9c:	bc 81       	ldd	r27, Y+4	; 0x04
    cc9e:	81 70       	andi	r24, 0x01	; 1
    cca0:	99 27       	eor	r25, r25
    cca2:	aa 27       	eor	r26, r26
    cca4:	bb 27       	eor	r27, r27
    cca6:	89 2b       	or	r24, r25
    cca8:	8a 2b       	or	r24, r26
    ccaa:	8b 2b       	or	r24, r27
    ccac:	11 f4       	brne	.+4      	; 0xccb2 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x14e>
    ccae:	21 e0       	ldi	r18, 0x01	; 1
    ccb0:	01 c0       	rjmp	.+2      	; 0xccb4 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x150>
    ccb2:	20 e0       	ldi	r18, 0x00	; 0
    ccb4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    ccb6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    ccb8:	fc 01       	movw	r30, r24
    ccba:	20 83       	st	Z, r18
		*divBy4 = (a == 4) && *int_mode;
    ccbc:	89 81       	ldd	r24, Y+1	; 0x01
    ccbe:	9a 81       	ldd	r25, Y+2	; 0x02
    ccc0:	ab 81       	ldd	r26, Y+3	; 0x03
    ccc2:	bc 81       	ldd	r27, Y+4	; 0x04
    ccc4:	04 97       	sbiw	r24, 0x04	; 4
    ccc6:	a1 05       	cpc	r26, r1
    ccc8:	b1 05       	cpc	r27, r1
    ccca:	41 f4       	brne	.+16     	; 0xccdc <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    cccc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    ccce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    ccd0:	fc 01       	movw	r30, r24
    ccd2:	80 81       	ld	r24, Z
    ccd4:	88 23       	and	r24, r24
    ccd6:	11 f0       	breq	.+4      	; 0xccdc <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x178>
    ccd8:	21 e0       	ldi	r18, 0x01	; 1
    ccda:	01 c0       	rjmp	.+2      	; 0xccde <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x17a>
    ccdc:	20 e0       	ldi	r18, 0x00	; 0
    ccde:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cce0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    cce2:	fc 01       	movw	r30, r24
    cce4:	20 83       	st	Z, r18

		/* Calculate parameters */
		if(*divBy4)
    cce6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    cce8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    ccea:	fc 01       	movw	r30, r24
    ccec:	80 81       	ld	r24, Z
    ccee:	88 23       	and	r24, r24
    ccf0:	d1 f0       	breq	.+52     	; 0xcd26 <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x1c2>
		{
			reg->ms.p1 = 0;
    ccf2:	89 8d       	ldd	r24, Y+25	; 0x19
    ccf4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    ccf6:	fc 01       	movw	r30, r24
    ccf8:	10 82       	st	Z, r1
    ccfa:	11 82       	std	Z+1, r1	; 0x01
    ccfc:	12 82       	std	Z+2, r1	; 0x02
    ccfe:	13 82       	std	Z+3, r1	; 0x03
			reg->ms.p2 = 0;
    cd00:	89 8d       	ldd	r24, Y+25	; 0x19
    cd02:	9a 8d       	ldd	r25, Y+26	; 0x1a
    cd04:	fc 01       	movw	r30, r24
    cd06:	14 82       	std	Z+4, r1	; 0x04
    cd08:	15 82       	std	Z+5, r1	; 0x05
    cd0a:	16 82       	std	Z+6, r1	; 0x06
    cd0c:	17 82       	std	Z+7, r1	; 0x07
			reg->ms.p3 = 1;
    cd0e:	29 8d       	ldd	r18, Y+25	; 0x19
    cd10:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cd12:	81 e0       	ldi	r24, 0x01	; 1
    cd14:	90 e0       	ldi	r25, 0x00	; 0
    cd16:	a0 e0       	ldi	r26, 0x00	; 0
    cd18:	b0 e0       	ldi	r27, 0x00	; 0
    cd1a:	f9 01       	movw	r30, r18
    cd1c:	80 87       	std	Z+8, r24	; 0x08
    cd1e:	91 87       	std	Z+9, r25	; 0x09
    cd20:	a2 87       	std	Z+10, r26	; 0x0a
    cd22:	b3 87       	std	Z+11, r27	; 0x0b
    cd24:	92 c0       	rjmp	.+292    	; 0xce4a <_Z19multisynth_estimatemP13u_si5351_regsPbS1_+0x2e6>
		}
		else
		{
			uint32_t bx128 = b << 7;
    cd26:	8d 85       	ldd	r24, Y+13	; 0x0d
    cd28:	9e 85       	ldd	r25, Y+14	; 0x0e
    cd2a:	af 85       	ldd	r26, Y+15	; 0x0f
    cd2c:	b8 89       	ldd	r27, Y+16	; 0x10
    cd2e:	88 0f       	add	r24, r24
    cd30:	99 1f       	adc	r25, r25
    cd32:	aa 1f       	adc	r26, r26
    cd34:	bb 1f       	adc	r27, r27
    cd36:	88 0f       	add	r24, r24
    cd38:	99 1f       	adc	r25, r25
    cd3a:	aa 1f       	adc	r26, r26
    cd3c:	bb 1f       	adc	r27, r27
    cd3e:	88 0f       	add	r24, r24
    cd40:	99 1f       	adc	r25, r25
    cd42:	aa 1f       	adc	r26, r26
    cd44:	bb 1f       	adc	r27, r27
    cd46:	88 0f       	add	r24, r24
    cd48:	99 1f       	adc	r25, r25
    cd4a:	aa 1f       	adc	r26, r26
    cd4c:	bb 1f       	adc	r27, r27
    cd4e:	88 0f       	add	r24, r24
    cd50:	99 1f       	adc	r25, r25
    cd52:	aa 1f       	adc	r26, r26
    cd54:	bb 1f       	adc	r27, r27
    cd56:	88 0f       	add	r24, r24
    cd58:	99 1f       	adc	r25, r25
    cd5a:	aa 1f       	adc	r26, r26
    cd5c:	bb 1f       	adc	r27, r27
    cd5e:	88 0f       	add	r24, r24
    cd60:	99 1f       	adc	r25, r25
    cd62:	aa 1f       	adc	r26, r26
    cd64:	bb 1f       	adc	r27, r27
    cd66:	8d 83       	std	Y+5, r24	; 0x05
    cd68:	9e 83       	std	Y+6, r25	; 0x06
    cd6a:	af 83       	std	Y+7, r26	; 0x07
    cd6c:	b8 87       	std	Y+8, r27	; 0x08
			uint32_t bx128overc = bx128 / c;
    cd6e:	29 89       	ldd	r18, Y+17	; 0x11
    cd70:	3a 89       	ldd	r19, Y+18	; 0x12
    cd72:	4b 89       	ldd	r20, Y+19	; 0x13
    cd74:	5c 89       	ldd	r21, Y+20	; 0x14
    cd76:	8d 81       	ldd	r24, Y+5	; 0x05
    cd78:	9e 81       	ldd	r25, Y+6	; 0x06
    cd7a:	af 81       	ldd	r26, Y+7	; 0x07
    cd7c:	b8 85       	ldd	r27, Y+8	; 0x08
    cd7e:	bc 01       	movw	r22, r24
    cd80:	cd 01       	movw	r24, r26
    cd82:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    cd86:	da 01       	movw	r26, r20
    cd88:	c9 01       	movw	r24, r18
    cd8a:	89 87       	std	Y+9, r24	; 0x09
    cd8c:	9a 87       	std	Y+10, r25	; 0x0a
    cd8e:	ab 87       	std	Y+11, r26	; 0x0b
    cd90:	bc 87       	std	Y+12, r27	; 0x0c
			reg->ms.p1 = (uint32_t)((a << 7) + bx128overc) - 512;   /* 128 * a + floor((128 * b) / c) - 512 */
    cd92:	89 81       	ldd	r24, Y+1	; 0x01
    cd94:	9a 81       	ldd	r25, Y+2	; 0x02
    cd96:	ab 81       	ldd	r26, Y+3	; 0x03
    cd98:	bc 81       	ldd	r27, Y+4	; 0x04
    cd9a:	88 0f       	add	r24, r24
    cd9c:	99 1f       	adc	r25, r25
    cd9e:	aa 1f       	adc	r26, r26
    cda0:	bb 1f       	adc	r27, r27
    cda2:	88 0f       	add	r24, r24
    cda4:	99 1f       	adc	r25, r25
    cda6:	aa 1f       	adc	r26, r26
    cda8:	bb 1f       	adc	r27, r27
    cdaa:	88 0f       	add	r24, r24
    cdac:	99 1f       	adc	r25, r25
    cdae:	aa 1f       	adc	r26, r26
    cdb0:	bb 1f       	adc	r27, r27
    cdb2:	88 0f       	add	r24, r24
    cdb4:	99 1f       	adc	r25, r25
    cdb6:	aa 1f       	adc	r26, r26
    cdb8:	bb 1f       	adc	r27, r27
    cdba:	88 0f       	add	r24, r24
    cdbc:	99 1f       	adc	r25, r25
    cdbe:	aa 1f       	adc	r26, r26
    cdc0:	bb 1f       	adc	r27, r27
    cdc2:	88 0f       	add	r24, r24
    cdc4:	99 1f       	adc	r25, r25
    cdc6:	aa 1f       	adc	r26, r26
    cdc8:	bb 1f       	adc	r27, r27
    cdca:	88 0f       	add	r24, r24
    cdcc:	99 1f       	adc	r25, r25
    cdce:	aa 1f       	adc	r26, r26
    cdd0:	bb 1f       	adc	r27, r27
    cdd2:	9c 01       	movw	r18, r24
    cdd4:	ad 01       	movw	r20, r26
    cdd6:	89 85       	ldd	r24, Y+9	; 0x09
    cdd8:	9a 85       	ldd	r25, Y+10	; 0x0a
    cdda:	ab 85       	ldd	r26, Y+11	; 0x0b
    cddc:	bc 85       	ldd	r27, Y+12	; 0x0c
    cdde:	82 0f       	add	r24, r18
    cde0:	93 1f       	adc	r25, r19
    cde2:	a4 1f       	adc	r26, r20
    cde4:	b5 1f       	adc	r27, r21
    cde6:	92 50       	subi	r25, 0x02	; 2
    cde8:	a1 09       	sbc	r26, r1
    cdea:	b1 09       	sbc	r27, r1
    cdec:	29 8d       	ldd	r18, Y+25	; 0x19
    cdee:	3a 8d       	ldd	r19, Y+26	; 0x1a
    cdf0:	f9 01       	movw	r30, r18
    cdf2:	80 83       	st	Z, r24
    cdf4:	91 83       	std	Z+1, r25	; 0x01
    cdf6:	a2 83       	std	Z+2, r26	; 0x02
    cdf8:	b3 83       	std	Z+3, r27	; 0x03
			reg->ms.p2 = (uint32_t)bx128 - (c * bx128overc);        /* 128 * b - c * floor((128 * b) / c) */
    cdfa:	29 89       	ldd	r18, Y+17	; 0x11
    cdfc:	3a 89       	ldd	r19, Y+18	; 0x12
    cdfe:	4b 89       	ldd	r20, Y+19	; 0x13
    ce00:	5c 89       	ldd	r21, Y+20	; 0x14
    ce02:	89 85       	ldd	r24, Y+9	; 0x09
    ce04:	9a 85       	ldd	r25, Y+10	; 0x0a
    ce06:	ab 85       	ldd	r26, Y+11	; 0x0b
    ce08:	bc 85       	ldd	r27, Y+12	; 0x0c
    ce0a:	bc 01       	movw	r22, r24
    ce0c:	cd 01       	movw	r24, r26
    ce0e:	0e 94 7a 75 	call	0xeaf4	; 0xeaf4 <__mulsi3>
    ce12:	9b 01       	movw	r18, r22
    ce14:	ac 01       	movw	r20, r24
    ce16:	8d 81       	ldd	r24, Y+5	; 0x05
    ce18:	9e 81       	ldd	r25, Y+6	; 0x06
    ce1a:	af 81       	ldd	r26, Y+7	; 0x07
    ce1c:	b8 85       	ldd	r27, Y+8	; 0x08
    ce1e:	82 1b       	sub	r24, r18
    ce20:	93 0b       	sbc	r25, r19
    ce22:	a4 0b       	sbc	r26, r20
    ce24:	b5 0b       	sbc	r27, r21
    ce26:	29 8d       	ldd	r18, Y+25	; 0x19
    ce28:	3a 8d       	ldd	r19, Y+26	; 0x1a
    ce2a:	f9 01       	movw	r30, r18
    ce2c:	84 83       	std	Z+4, r24	; 0x04
    ce2e:	95 83       	std	Z+5, r25	; 0x05
    ce30:	a6 83       	std	Z+6, r26	; 0x06
    ce32:	b7 83       	std	Z+7, r27	; 0x07
			reg->ms.p3 = c;
    ce34:	89 89       	ldd	r24, Y+17	; 0x11
    ce36:	9a 89       	ldd	r25, Y+18	; 0x12
    ce38:	ab 89       	ldd	r26, Y+19	; 0x13
    ce3a:	bc 89       	ldd	r27, Y+20	; 0x14
    ce3c:	29 8d       	ldd	r18, Y+25	; 0x19
    ce3e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    ce40:	f9 01       	movw	r30, r18
    ce42:	80 87       	std	Z+8, r24	; 0x08
    ce44:	91 87       	std	Z+9, r25	; 0x09
    ce46:	a2 87       	std	Z+10, r26	; 0x0a
    ce48:	b3 87       	std	Z+11, r27	; 0x0b
		}

		return(freq_Fout);
    ce4a:	8d 89       	ldd	r24, Y+21	; 0x15
    ce4c:	9e 89       	ldd	r25, Y+22	; 0x16
    ce4e:	af 89       	ldd	r26, Y+23	; 0x17
    ce50:	b8 8d       	ldd	r27, Y+24	; 0x18
	}
    ce52:	bc 01       	movw	r22, r24
    ce54:	cd 01       	movw	r24, r26
    ce56:	6e 96       	adiw	r28, 0x1e	; 30
    ce58:	cd bf       	out	0x3d, r28	; 61
    ce5a:	de bf       	out	0x3e, r29	; 62
    ce5c:	df 91       	pop	r29
    ce5e:	cf 91       	pop	r28
    ce60:	1f 91       	pop	r17
    ce62:	0f 91       	pop	r16
    ce64:	08 95       	ret

0000ce66 <_Z17si5351_write_bulkhPhh>:


	bool si5351_write_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    ce66:	cf 93       	push	r28
    ce68:	df 93       	push	r29
    ce6a:	cd b7       	in	r28, 0x3d	; 61
    ce6c:	de b7       	in	r29, 0x3e	; 62
    ce6e:	26 97       	sbiw	r28, 0x06	; 6
    ce70:	cd bf       	out	0x3d, r28	; 61
    ce72:	de bf       	out	0x3e, r29	; 62
    ce74:	8b 83       	std	Y+3, r24	; 0x03
    ce76:	6c 83       	std	Y+4, r22	; 0x04
    ce78:	7d 83       	std	Y+5, r23	; 0x05
    ce7a:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    ce7c:	8a e0       	ldi	r24, 0x0A	; 10
    ce7e:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_SendData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    ce80:	89 81       	ldd	r24, Y+1	; 0x01
    ce82:	9f ef       	ldi	r25, 0xFF	; 255
    ce84:	98 0f       	add	r25, r24
    ce86:	99 83       	std	Y+1, r25	; 0x01
    ce88:	88 23       	and	r24, r24
    ce8a:	a1 f0       	breq	.+40     	; 0xceb4 <_Z17si5351_write_bulkhPhh+0x4e>
    ce8c:	8c 81       	ldd	r24, Y+4	; 0x04
    ce8e:	9d 81       	ldd	r25, Y+5	; 0x05
    ce90:	2e 81       	ldd	r18, Y+6	; 0x06
    ce92:	ac 01       	movw	r20, r24
    ce94:	6b 81       	ldd	r22, Y+3	; 0x03
    ce96:	80 ec       	ldi	r24, 0xC0	; 192
    ce98:	0e 94 a9 4c 	call	0x9952	; 0x9952 <I2C_1_SendData>
    ce9c:	28 2f       	mov	r18, r24
    ce9e:	81 e0       	ldi	r24, 0x01	; 1
    cea0:	9e 81       	ldd	r25, Y+6	; 0x06
    cea2:	29 17       	cp	r18, r25
    cea4:	09 f4       	brne	.+2      	; 0xcea8 <_Z17si5351_write_bulkhPhh+0x42>
    cea6:	80 e0       	ldi	r24, 0x00	; 0
    cea8:	8a 83       	std	Y+2, r24	; 0x02
    ceaa:	8a 81       	ldd	r24, Y+2	; 0x02
    ceac:	88 23       	and	r24, r24
    ceae:	11 f0       	breq	.+4      	; 0xceb4 <_Z17si5351_write_bulkhPhh+0x4e>
    ceb0:	81 e0       	ldi	r24, 0x01	; 1
    ceb2:	01 c0       	rjmp	.+2      	; 0xceb6 <_Z17si5351_write_bulkhPhh+0x50>
    ceb4:	80 e0       	ldi	r24, 0x00	; 0
    ceb6:	88 23       	and	r24, r24
    ceb8:	09 f0       	breq	.+2      	; 0xcebc <_Z17si5351_write_bulkhPhh+0x56>
    ceba:	e2 cf       	rjmp	.-60     	; 0xce80 <_Z17si5351_write_bulkhPhh+0x1a>
		return(fail);
    cebc:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    cebe:	26 96       	adiw	r28, 0x06	; 6
    cec0:	cd bf       	out	0x3d, r28	; 61
    cec2:	de bf       	out	0x3e, r29	; 62
    cec4:	df 91       	pop	r29
    cec6:	cf 91       	pop	r28
    cec8:	08 95       	ret

0000ceca <_Z16si5351_read_bulkhPhh>:

	bool si5351_read_bulk(uint8_t regAddr, uint8_t *data, uint8_t bytes)
	{
    ceca:	cf 93       	push	r28
    cecc:	df 93       	push	r29
    cece:	cd b7       	in	r28, 0x3d	; 61
    ced0:	de b7       	in	r29, 0x3e	; 62
    ced2:	26 97       	sbiw	r28, 0x06	; 6
    ced4:	cd bf       	out	0x3d, r28	; 61
    ced6:	de bf       	out	0x3e, r29	; 62
    ced8:	8b 83       	std	Y+3, r24	; 0x03
    ceda:	6c 83       	std	Y+4, r22	; 0x04
    cedc:	7d 83       	std	Y+5, r23	; 0x05
    cede:	4e 83       	std	Y+6, r20	; 0x06
		uint8_t tries = 10;
    cee0:	8a e0       	ldi	r24, 0x0A	; 10
    cee2:	89 83       	std	Y+1, r24	; 0x01
		bool fail;
		while(tries-- && (fail = I2C_1_GetData(SI5351_I2C_SLAVE_ADDR, regAddr, data, bytes) != bytes));
    cee4:	89 81       	ldd	r24, Y+1	; 0x01
    cee6:	9f ef       	ldi	r25, 0xFF	; 255
    cee8:	98 0f       	add	r25, r24
    ceea:	99 83       	std	Y+1, r25	; 0x01
    ceec:	88 23       	and	r24, r24
    ceee:	a1 f0       	breq	.+40     	; 0xcf18 <_Z16si5351_read_bulkhPhh+0x4e>
    cef0:	8c 81       	ldd	r24, Y+4	; 0x04
    cef2:	9d 81       	ldd	r25, Y+5	; 0x05
    cef4:	2e 81       	ldd	r18, Y+6	; 0x06
    cef6:	ac 01       	movw	r20, r24
    cef8:	6b 81       	ldd	r22, Y+3	; 0x03
    cefa:	80 ec       	ldi	r24, 0xC0	; 192
    cefc:	0e 94 12 4d 	call	0x9a24	; 0x9a24 <I2C_1_GetData>
    cf00:	28 2f       	mov	r18, r24
    cf02:	81 e0       	ldi	r24, 0x01	; 1
    cf04:	9e 81       	ldd	r25, Y+6	; 0x06
    cf06:	29 17       	cp	r18, r25
    cf08:	09 f4       	brne	.+2      	; 0xcf0c <_Z16si5351_read_bulkhPhh+0x42>
    cf0a:	80 e0       	ldi	r24, 0x00	; 0
    cf0c:	8a 83       	std	Y+2, r24	; 0x02
    cf0e:	8a 81       	ldd	r24, Y+2	; 0x02
    cf10:	88 23       	and	r24, r24
    cf12:	11 f0       	breq	.+4      	; 0xcf18 <_Z16si5351_read_bulkhPhh+0x4e>
    cf14:	81 e0       	ldi	r24, 0x01	; 1
    cf16:	01 c0       	rjmp	.+2      	; 0xcf1a <_Z16si5351_read_bulkhPhh+0x50>
    cf18:	80 e0       	ldi	r24, 0x00	; 0
    cf1a:	88 23       	and	r24, r24
    cf1c:	09 f0       	breq	.+2      	; 0xcf20 <_Z16si5351_read_bulkhPhh+0x56>
    cf1e:	e2 cf       	rjmp	.-60     	; 0xcee4 <_Z16si5351_read_bulkhPhh+0x1a>
		return(fail);
    cf20:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    cf22:	26 96       	adiw	r28, 0x06	; 6
    cf24:	cd bf       	out	0x3d, r28	; 61
    cf26:	de bf       	out	0x3e, r29	; 62
    cf28:	df 91       	pop	r29
    cf2a:	cf 91       	pop	r28
    cf2c:	08 95       	ret

0000cf2e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll>:
 *
 * Set the desired PLL source for a multisynth.
 *
 */
	bool set_multisynth_registers_source(Si5351_clock clk, Si5351_pll pll)
	{
    cf2e:	cf 93       	push	r28
    cf30:	df 93       	push	r29
    cf32:	cd b7       	in	r28, 0x3d	; 61
    cf34:	de b7       	in	r29, 0x3e	; 62
    cf36:	25 97       	sbiw	r28, 0x05	; 5
    cf38:	cd bf       	out	0x3d, r28	; 61
    cf3a:	de bf       	out	0x3e, r29	; 62
    cf3c:	8c 83       	std	Y+4, r24	; 0x04
    cf3e:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];
		
		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    cf40:	8c 81       	ldd	r24, Y+4	; 0x04
    cf42:	20 e1       	ldi	r18, 0x10	; 16
    cf44:	28 0f       	add	r18, r24
    cf46:	ce 01       	movw	r24, r28
    cf48:	02 96       	adiw	r24, 0x02	; 2
    cf4a:	41 e0       	ldi	r20, 0x01	; 1
    cf4c:	bc 01       	movw	r22, r24
    cf4e:	82 2f       	mov	r24, r18
    cf50:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    cf54:	88 23       	and	r24, r24
    cf56:	11 f0       	breq	.+4      	; 0xcf5c <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x2e>
		{
			return(true);
    cf58:	81 e0       	ldi	r24, 0x01	; 1
    cf5a:	20 c0       	rjmp	.+64     	; 0xcf9c <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		reg_val = data[0];
    cf5c:	8a 81       	ldd	r24, Y+2	; 0x02
    cf5e:	89 83       	std	Y+1, r24	; 0x01

		if(pll == SI5351_PLLA)
    cf60:	8d 81       	ldd	r24, Y+5	; 0x05
    cf62:	81 30       	cpi	r24, 0x01	; 1
    cf64:	21 f4       	brne	.+8      	; 0xcf6e <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x40>
		{
			reg_val &= ~(SI5351_CLK_PLL_SELECT);
    cf66:	89 81       	ldd	r24, Y+1	; 0x01
    cf68:	8f 7d       	andi	r24, 0xDF	; 223
    cf6a:	89 83       	std	Y+1, r24	; 0x01
    cf6c:	06 c0       	rjmp	.+12     	; 0xcf7a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		}
		else if(pll == SI5351_PLLB)
    cf6e:	8d 81       	ldd	r24, Y+5	; 0x05
    cf70:	82 30       	cpi	r24, 0x02	; 2
    cf72:	19 f4       	brne	.+6      	; 0xcf7a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x4c>
		{
			reg_val |= SI5351_CLK_PLL_SELECT;
    cf74:	89 81       	ldd	r24, Y+1	; 0x01
    cf76:	80 62       	ori	r24, 0x20	; 32
    cf78:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    cf7a:	89 81       	ldd	r24, Y+1	; 0x01
    cf7c:	8a 83       	std	Y+2, r24	; 0x02
		if(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    cf7e:	8c 81       	ldd	r24, Y+4	; 0x04
    cf80:	20 e1       	ldi	r18, 0x10	; 16
    cf82:	28 0f       	add	r18, r24
    cf84:	ce 01       	movw	r24, r28
    cf86:	02 96       	adiw	r24, 0x02	; 2
    cf88:	41 e0       	ldi	r20, 0x01	; 1
    cf8a:	bc 01       	movw	r22, r24
    cf8c:	82 2f       	mov	r24, r18
    cf8e:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    cf92:	88 23       	and	r24, r24
    cf94:	11 f0       	breq	.+4      	; 0xcf9a <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6c>
		{
			return(true);
    cf96:	81 e0       	ldi	r24, 0x01	; 1
    cf98:	01 c0       	rjmp	.+2      	; 0xcf9c <_Z31set_multisynth_registers_source12si5351_clock10si5351_pll+0x6e>
		}
		
		return(false);
    cf9a:	80 e0       	ldi	r24, 0x00	; 0
	}
    cf9c:	25 96       	adiw	r28, 0x05	; 5
    cf9e:	cd bf       	out	0x3d, r28	; 61
    cfa0:	de bf       	out	0x3e, r29	; 62
    cfa2:	df 91       	pop	r29
    cfa4:	cf 91       	pop	r28
    cfa6:	08 95       	ret

0000cfa8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb>:
 * r_div - Desired r_div ratio
 * div_by_4 - 1 Divide By 4 mode: 0 to disable
 *
 */
	bool set_multisynth_registers(Si5351_clock clk, Union_si5351_regs ms_reg, bool int_mode, uint8_t r_div, bool div_by_4)
	{
    cfa8:	8f 92       	push	r8
    cfaa:	af 92       	push	r10
    cfac:	cf 92       	push	r12
    cfae:	df 92       	push	r13
    cfb0:	ef 92       	push	r14
    cfb2:	ff 92       	push	r15
    cfb4:	0f 93       	push	r16
    cfb6:	1f 93       	push	r17
    cfb8:	cf 93       	push	r28
    cfba:	df 93       	push	r29
    cfbc:	cd b7       	in	r28, 0x3d	; 61
    cfbe:	de b7       	in	r29, 0x3e	; 62
    cfc0:	6e 97       	sbiw	r28, 0x1e	; 30
    cfc2:	cd bf       	out	0x3d, r28	; 61
    cfc4:	de bf       	out	0x3e, r29	; 62
    cfc6:	88 8b       	std	Y+16, r24	; 0x10
    cfc8:	c9 8a       	std	Y+17, r12	; 0x11
    cfca:	da 8a       	std	Y+18, r13	; 0x12
    cfcc:	eb 8a       	std	Y+19, r14	; 0x13
    cfce:	fc 8a       	std	Y+20, r15	; 0x14
    cfd0:	0d 8b       	std	Y+21, r16	; 0x15
    cfd2:	1e 8b       	std	Y+22, r17	; 0x16
    cfd4:	2f 8b       	std	Y+23, r18	; 0x17
    cfd6:	38 8f       	std	Y+24, r19	; 0x18
    cfd8:	49 8f       	std	Y+25, r20	; 0x19
    cfda:	5a 8f       	std	Y+26, r21	; 0x1a
    cfdc:	6b 8f       	std	Y+27, r22	; 0x1b
    cfde:	7c 8f       	std	Y+28, r23	; 0x1c
    cfe0:	ad 8e       	std	Y+29, r10	; 0x1d
    cfe2:	8e 8e       	std	Y+30, r8	; 0x1e
		uint8_t params[11];
		uint8_t i = 0;
    cfe4:	19 82       	std	Y+1, r1	; 0x01
		uint8_t reg_val;
		uint8_t data[2];

		/* Registers 42-43 for CLK0; 50-51 for CLK1 */
		params[i++] = ms_reg.reg.p3_1;
    cfe6:	89 81       	ldd	r24, Y+1	; 0x01
    cfe8:	91 e0       	ldi	r25, 0x01	; 1
    cfea:	98 0f       	add	r25, r24
    cfec:	99 83       	std	Y+1, r25	; 0x01
    cfee:	88 2f       	mov	r24, r24
    cff0:	90 e0       	ldi	r25, 0x00	; 0
    cff2:	4a 8d       	ldd	r20, Y+26	; 0x1a
    cff4:	9e 01       	movw	r18, r28
    cff6:	2d 5f       	subi	r18, 0xFD	; 253
    cff8:	3f 4f       	sbci	r19, 0xFF	; 255
    cffa:	82 0f       	add	r24, r18
    cffc:	93 1f       	adc	r25, r19
    cffe:	fc 01       	movw	r30, r24
    d000:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p3_0;
    d002:	89 81       	ldd	r24, Y+1	; 0x01
    d004:	91 e0       	ldi	r25, 0x01	; 1
    d006:	98 0f       	add	r25, r24
    d008:	99 83       	std	Y+1, r25	; 0x01
    d00a:	88 2f       	mov	r24, r24
    d00c:	90 e0       	ldi	r25, 0x00	; 0
    d00e:	49 8d       	ldd	r20, Y+25	; 0x19
    d010:	9e 01       	movw	r18, r28
    d012:	2d 5f       	subi	r18, 0xFD	; 253
    d014:	3f 4f       	sbci	r19, 0xFF	; 255
    d016:	82 0f       	add	r24, r18
    d018:	93 1f       	adc	r25, r19
    d01a:	fc 01       	movw	r30, r24
    d01c:	40 83       	st	Z, r20

		/* Register 44 for CLK0; 52 for CLK1 */
		if(si5351_read_bulk((SI5351_CLK0_PARAMETERS + 2) + (clk * 8), data, 1))
    d01e:	88 89       	ldd	r24, Y+16	; 0x10
    d020:	88 0f       	add	r24, r24
    d022:	88 0f       	add	r24, r24
    d024:	88 0f       	add	r24, r24
    d026:	2c e2       	ldi	r18, 0x2C	; 44
    d028:	28 0f       	add	r18, r24
    d02a:	ce 01       	movw	r24, r28
    d02c:	0e 96       	adiw	r24, 0x0e	; 14
    d02e:	41 e0       	ldi	r20, 0x01	; 1
    d030:	bc 01       	movw	r22, r24
    d032:	82 2f       	mov	r24, r18
    d034:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    d038:	88 23       	and	r24, r24
    d03a:	11 f0       	breq	.+4      	; 0xd040 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x98>
		{
			return(true);
    d03c:	81 e0       	ldi	r24, 0x01	; 1
    d03e:	bc c0       	rjmp	.+376    	; 0xd1b8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		reg_val = data[0];
    d040:	8e 85       	ldd	r24, Y+14	; 0x0e
    d042:	8a 83       	std	Y+2, r24	; 0x02

		reg_val &= 0xFC;    /*~(0x03); */
    d044:	8a 81       	ldd	r24, Y+2	; 0x02
    d046:	8c 7f       	andi	r24, 0xFC	; 252
    d048:	8a 83       	std	Y+2, r24	; 0x02
		params[i++] = reg_val | (ms_reg.reg.p1_2 & 0x03);
    d04a:	89 81       	ldd	r24, Y+1	; 0x01
    d04c:	91 e0       	ldi	r25, 0x01	; 1
    d04e:	98 0f       	add	r25, r24
    d050:	99 83       	std	Y+1, r25	; 0x01
    d052:	88 2f       	mov	r24, r24
    d054:	90 e0       	ldi	r25, 0x00	; 0
    d056:	2b 89       	ldd	r18, Y+19	; 0x13
    d058:	32 2f       	mov	r19, r18
    d05a:	33 70       	andi	r19, 0x03	; 3
    d05c:	2a 81       	ldd	r18, Y+2	; 0x02
    d05e:	23 2b       	or	r18, r19
    d060:	42 2f       	mov	r20, r18
    d062:	9e 01       	movw	r18, r28
    d064:	2d 5f       	subi	r18, 0xFD	; 253
    d066:	3f 4f       	sbci	r19, 0xFF	; 255
    d068:	82 0f       	add	r24, r18
    d06a:	93 1f       	adc	r25, r19
    d06c:	fc 01       	movw	r30, r24
    d06e:	40 83       	st	Z, r20

		/* Registers 45-46 for CLK0 */
		params[i++] = ms_reg.reg.p1_1;
    d070:	89 81       	ldd	r24, Y+1	; 0x01
    d072:	91 e0       	ldi	r25, 0x01	; 1
    d074:	98 0f       	add	r25, r24
    d076:	99 83       	std	Y+1, r25	; 0x01
    d078:	88 2f       	mov	r24, r24
    d07a:	90 e0       	ldi	r25, 0x00	; 0
    d07c:	4a 89       	ldd	r20, Y+18	; 0x12
    d07e:	9e 01       	movw	r18, r28
    d080:	2d 5f       	subi	r18, 0xFD	; 253
    d082:	3f 4f       	sbci	r19, 0xFF	; 255
    d084:	82 0f       	add	r24, r18
    d086:	93 1f       	adc	r25, r19
    d088:	fc 01       	movw	r30, r24
    d08a:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p1_0;
    d08c:	89 81       	ldd	r24, Y+1	; 0x01
    d08e:	91 e0       	ldi	r25, 0x01	; 1
    d090:	98 0f       	add	r25, r24
    d092:	99 83       	std	Y+1, r25	; 0x01
    d094:	88 2f       	mov	r24, r24
    d096:	90 e0       	ldi	r25, 0x00	; 0
    d098:	49 89       	ldd	r20, Y+17	; 0x11
    d09a:	9e 01       	movw	r18, r28
    d09c:	2d 5f       	subi	r18, 0xFD	; 253
    d09e:	3f 4f       	sbci	r19, 0xFF	; 255
    d0a0:	82 0f       	add	r24, r18
    d0a2:	93 1f       	adc	r25, r19
    d0a4:	fc 01       	movw	r30, r24
    d0a6:	40 83       	st	Z, r20

		/* Register 47 for CLK0 */
		params[i] = (ms_reg.reg.p3_2 << 4);
    d0a8:	89 81       	ldd	r24, Y+1	; 0x01
    d0aa:	88 2f       	mov	r24, r24
    d0ac:	90 e0       	ldi	r25, 0x00	; 0
    d0ae:	2b 8d       	ldd	r18, Y+27	; 0x1b
    d0b0:	42 2f       	mov	r20, r18
    d0b2:	42 95       	swap	r20
    d0b4:	40 7f       	andi	r20, 0xF0	; 240
    d0b6:	9e 01       	movw	r18, r28
    d0b8:	2d 5f       	subi	r18, 0xFD	; 253
    d0ba:	3f 4f       	sbci	r19, 0xFF	; 255
    d0bc:	82 0f       	add	r24, r18
    d0be:	93 1f       	adc	r25, r19
    d0c0:	fc 01       	movw	r30, r24
    d0c2:	40 83       	st	Z, r20
		params[i++] += (ms_reg.reg.p2_2 & 0x0F);
    d0c4:	29 81       	ldd	r18, Y+1	; 0x01
    d0c6:	81 e0       	ldi	r24, 0x01	; 1
    d0c8:	82 0f       	add	r24, r18
    d0ca:	89 83       	std	Y+1, r24	; 0x01
    d0cc:	82 2f       	mov	r24, r18
    d0ce:	90 e0       	ldi	r25, 0x00	; 0
    d0d0:	22 2f       	mov	r18, r18
    d0d2:	30 e0       	ldi	r19, 0x00	; 0
    d0d4:	ae 01       	movw	r20, r28
    d0d6:	4d 5f       	subi	r20, 0xFD	; 253
    d0d8:	5f 4f       	sbci	r21, 0xFF	; 255
    d0da:	24 0f       	add	r18, r20
    d0dc:	35 1f       	adc	r19, r21
    d0de:	f9 01       	movw	r30, r18
    d0e0:	30 81       	ld	r19, Z
    d0e2:	2f 89       	ldd	r18, Y+23	; 0x17
    d0e4:	2f 70       	andi	r18, 0x0F	; 15
    d0e6:	43 2f       	mov	r20, r19
    d0e8:	42 0f       	add	r20, r18
    d0ea:	9e 01       	movw	r18, r28
    d0ec:	2d 5f       	subi	r18, 0xFD	; 253
    d0ee:	3f 4f       	sbci	r19, 0xFF	; 255
    d0f0:	82 0f       	add	r24, r18
    d0f2:	93 1f       	adc	r25, r19
    d0f4:	fc 01       	movw	r30, r24
    d0f6:	40 83       	st	Z, r20

		/* Registers 48-49 for CLK0 */
		params[i++] = ms_reg.reg.p2_1;
    d0f8:	89 81       	ldd	r24, Y+1	; 0x01
    d0fa:	91 e0       	ldi	r25, 0x01	; 1
    d0fc:	98 0f       	add	r25, r24
    d0fe:	99 83       	std	Y+1, r25	; 0x01
    d100:	88 2f       	mov	r24, r24
    d102:	90 e0       	ldi	r25, 0x00	; 0
    d104:	4e 89       	ldd	r20, Y+22	; 0x16
    d106:	9e 01       	movw	r18, r28
    d108:	2d 5f       	subi	r18, 0xFD	; 253
    d10a:	3f 4f       	sbci	r19, 0xFF	; 255
    d10c:	82 0f       	add	r24, r18
    d10e:	93 1f       	adc	r25, r19
    d110:	fc 01       	movw	r30, r24
    d112:	40 83       	st	Z, r20
		params[i++] = ms_reg.reg.p2_0;
    d114:	89 81       	ldd	r24, Y+1	; 0x01
    d116:	91 e0       	ldi	r25, 0x01	; 1
    d118:	98 0f       	add	r25, r24
    d11a:	99 83       	std	Y+1, r25	; 0x01
    d11c:	88 2f       	mov	r24, r24
    d11e:	90 e0       	ldi	r25, 0x00	; 0
    d120:	4d 89       	ldd	r20, Y+21	; 0x15
    d122:	9e 01       	movw	r18, r28
    d124:	2d 5f       	subi	r18, 0xFD	; 253
    d126:	3f 4f       	sbci	r19, 0xFF	; 255
    d128:	82 0f       	add	r24, r18
    d12a:	93 1f       	adc	r25, r19
    d12c:	fc 01       	movw	r30, r24
    d12e:	40 83       	st	Z, r20

		/* Write the parameters */
		switch(clk)
    d130:	88 89       	ldd	r24, Y+16	; 0x10
    d132:	88 2f       	mov	r24, r24
    d134:	90 e0       	ldi	r25, 0x00	; 0
    d136:	81 30       	cpi	r24, 0x01	; 1
    d138:	91 05       	cpc	r25, r1
    d13a:	89 f0       	breq	.+34     	; 0xd15e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1b6>
    d13c:	82 30       	cpi	r24, 0x02	; 2
    d13e:	91 05       	cpc	r25, r1
    d140:	c9 f0       	breq	.+50     	; 0xd174 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1cc>
    d142:	89 2b       	or	r24, r25
    d144:	09 f0       	breq	.+2      	; 0xd148 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1a0>
			break;

			default:
			{
			}
			break;
    d146:	26 c0       	rjmp	.+76     	; 0xd194 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
		/* Write the parameters */
		switch(clk)
		{
			case SI5351_CLK0:
			{
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
    d148:	ce 01       	movw	r24, r28
    d14a:	03 96       	adiw	r24, 0x03	; 3
    d14c:	49 81       	ldd	r20, Y+1	; 0x01
    d14e:	bc 01       	movw	r22, r24
    d150:	8a e2       	ldi	r24, 0x2A	; 42
    d152:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    d156:	88 23       	and	r24, r24
    d158:	c1 f0       	breq	.+48     	; 0xd18a <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e2>
				{
					return(true);
    d15a:	81 e0       	ldi	r24, 0x01	; 1
    d15c:	2d c0       	rjmp	.+90     	; 0xd1b8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK1:
			{
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
    d15e:	ce 01       	movw	r24, r28
    d160:	03 96       	adiw	r24, 0x03	; 3
    d162:	49 81       	ldd	r20, Y+1	; 0x01
    d164:	bc 01       	movw	r22, r24
    d166:	82 e3       	ldi	r24, 0x32	; 50
    d168:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    d16c:	88 23       	and	r24, r24
    d16e:	79 f0       	breq	.+30     	; 0xd18e <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1e6>
				{
					return(true);
    d170:	81 e0       	ldi	r24, 0x01	; 1
    d172:	22 c0       	rjmp	.+68     	; 0xd1b8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
			}
			break;

			case SI5351_CLK2:
			{
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
    d174:	ce 01       	movw	r24, r28
    d176:	03 96       	adiw	r24, 0x03	; 3
    d178:	49 81       	ldd	r20, Y+1	; 0x01
    d17a:	bc 01       	movw	r22, r24
    d17c:	8a e3       	ldi	r24, 0x3A	; 58
    d17e:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
    d182:	88 23       	and	r24, r24
    d184:	31 f0       	breq	.+12     	; 0xd192 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ea>
				{
					return(true);
    d186:	81 e0       	ldi	r24, 0x01	; 1
    d188:	17 c0       	rjmp	.+46     	; 0xd1b8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
				if(si5351_write_bulk(SI5351_CLK0_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d18a:	00 00       	nop
    d18c:	03 c0       	rjmp	.+6      	; 0xd194 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK1_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d18e:	00 00       	nop
    d190:	01 c0       	rjmp	.+2      	; 0xd194 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1ec>
				if(si5351_write_bulk(SI5351_CLK2_PARAMETERS, params, i))
				{
					return(true);
				}
			}
			break;
    d192:	00 00       	nop
			{
			}
			break;
		}

		if(set_integer_mode(clk, int_mode))
    d194:	6d 8d       	ldd	r22, Y+29	; 0x1d
    d196:	88 89       	ldd	r24, Y+16	; 0x10
    d198:	0e 94 ea 68 	call	0xd1d4	; 0xd1d4 <_Z16set_integer_mode12si5351_clockb>
    d19c:	88 23       	and	r24, r24
    d19e:	11 f0       	breq	.+4      	; 0xd1a4 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x1fc>
		{
			return(true);
    d1a0:	81 e0       	ldi	r24, 0x01	; 1
    d1a2:	0a c0       	rjmp	.+20     	; 0xd1b8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		if(ms_div(clk, r_div, div_by_4))
    d1a4:	4b a5       	ldd	r20, Y+43	; 0x2b
    d1a6:	6e 8d       	ldd	r22, Y+30	; 0x1e
    d1a8:	88 89       	ldd	r24, Y+16	; 0x10
    d1aa:	0e 94 1f 69 	call	0xd23e	; 0xd23e <_Z6ms_div12si5351_clockhb>
    d1ae:	88 23       	and	r24, r24
    d1b0:	11 f0       	breq	.+4      	; 0xd1b6 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x20e>
		{
			return(true);
    d1b2:	81 e0       	ldi	r24, 0x01	; 1
    d1b4:	01 c0       	rjmp	.+2      	; 0xd1b8 <_Z24set_multisynth_registers12si5351_clock13u_si5351_regsbhb+0x210>
		}
		
		return(false);
    d1b6:	80 e0       	ldi	r24, 0x00	; 0
	}
    d1b8:	6e 96       	adiw	r28, 0x1e	; 30
    d1ba:	cd bf       	out	0x3d, r28	; 61
    d1bc:	de bf       	out	0x3e, r29	; 62
    d1be:	df 91       	pop	r29
    d1c0:	cf 91       	pop	r28
    d1c2:	1f 91       	pop	r17
    d1c4:	0f 91       	pop	r16
    d1c6:	ff 90       	pop	r15
    d1c8:	ef 90       	pop	r14
    d1ca:	df 90       	pop	r13
    d1cc:	cf 90       	pop	r12
    d1ce:	af 90       	pop	r10
    d1d0:	8f 90       	pop	r8
    d1d2:	08 95       	ret

0000d1d4 <_Z16set_integer_mode12si5351_clockb>:
 * enable - 1 to enable, 0 to disable
 *
 * Set the indicated multisynth into integer mode.
 */
	bool set_integer_mode(Si5351_clock clk, bool enable)
	{
    d1d4:	cf 93       	push	r28
    d1d6:	df 93       	push	r29
    d1d8:	cd b7       	in	r28, 0x3d	; 61
    d1da:	de b7       	in	r29, 0x3e	; 62
    d1dc:	25 97       	sbiw	r28, 0x05	; 5
    d1de:	cd bf       	out	0x3d, r28	; 61
    d1e0:	de bf       	out	0x3e, r29	; 62
    d1e2:	8c 83       	std	Y+4, r24	; 0x04
    d1e4:	6d 83       	std	Y+5, r22	; 0x05
		uint8_t reg_val;
		uint8_t data[2];

		if(si5351_read_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1))
    d1e6:	8c 81       	ldd	r24, Y+4	; 0x04
    d1e8:	20 e1       	ldi	r18, 0x10	; 16
    d1ea:	28 0f       	add	r18, r24
    d1ec:	ce 01       	movw	r24, r28
    d1ee:	02 96       	adiw	r24, 0x02	; 2
    d1f0:	41 e0       	ldi	r20, 0x01	; 1
    d1f2:	bc 01       	movw	r22, r24
    d1f4:	82 2f       	mov	r24, r18
    d1f6:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    d1fa:	88 23       	and	r24, r24
    d1fc:	11 f0       	breq	.+4      	; 0xd202 <_Z16set_integer_mode12si5351_clockb+0x2e>
		{
			return(true);
    d1fe:	81 e0       	ldi	r24, 0x01	; 1
    d200:	18 c0       	rjmp	.+48     	; 0xd232 <_Z16set_integer_mode12si5351_clockb+0x5e>
		}
		
		reg_val = data[0];
    d202:	8a 81       	ldd	r24, Y+2	; 0x02
    d204:	89 83       	std	Y+1, r24	; 0x01

		if(enable)
    d206:	8d 81       	ldd	r24, Y+5	; 0x05
    d208:	88 23       	and	r24, r24
    d20a:	21 f0       	breq	.+8      	; 0xd214 <_Z16set_integer_mode12si5351_clockb+0x40>
		{
			reg_val |= (SI5351_CLK_INTEGER_MODE);
    d20c:	89 81       	ldd	r24, Y+1	; 0x01
    d20e:	80 64       	ori	r24, 0x40	; 64
    d210:	89 83       	std	Y+1, r24	; 0x01
    d212:	03 c0       	rjmp	.+6      	; 0xd21a <_Z16set_integer_mode12si5351_clockb+0x46>
		}
		else
		{
			reg_val &= ~(SI5351_CLK_INTEGER_MODE);
    d214:	89 81       	ldd	r24, Y+1	; 0x01
    d216:	8f 7b       	andi	r24, 0xBF	; 191
    d218:	89 83       	std	Y+1, r24	; 0x01
		}

		data[0] = reg_val;
    d21a:	89 81       	ldd	r24, Y+1	; 0x01
    d21c:	8a 83       	std	Y+2, r24	; 0x02
		return(si5351_write_bulk(SI5351_CLK0_CTRL + (uint8_t)clk, data, 1));
    d21e:	8c 81       	ldd	r24, Y+4	; 0x04
    d220:	20 e1       	ldi	r18, 0x10	; 16
    d222:	28 0f       	add	r18, r24
    d224:	ce 01       	movw	r24, r28
    d226:	02 96       	adiw	r24, 0x02	; 2
    d228:	41 e0       	ldi	r20, 0x01	; 1
    d22a:	bc 01       	movw	r22, r24
    d22c:	82 2f       	mov	r24, r18
    d22e:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
	}
    d232:	25 96       	adiw	r28, 0x05	; 5
    d234:	cd bf       	out	0x3d, r28	; 61
    d236:	de bf       	out	0x3e, r29	; 62
    d238:	df 91       	pop	r29
    d23a:	cf 91       	pop	r28
    d23c:	08 95       	ret

0000d23e <_Z6ms_div12si5351_clockhb>:


	bool ms_div(Si5351_clock clk, uint8_t r_div, bool div_by_4)
	{
    d23e:	cf 93       	push	r28
    d240:	df 93       	push	r29
    d242:	cd b7       	in	r28, 0x3d	; 61
    d244:	de b7       	in	r29, 0x3e	; 62
    d246:	27 97       	sbiw	r28, 0x07	; 7
    d248:	cd bf       	out	0x3d, r28	; 61
    d24a:	de bf       	out	0x3e, r29	; 62
    d24c:	8d 83       	std	Y+5, r24	; 0x05
    d24e:	6e 83       	std	Y+6, r22	; 0x06
    d250:	4f 83       	std	Y+7, r20	; 0x07
		uint8_t reg_val, reg_addr;
		uint8_t data[2];

		switch(clk)
    d252:	8d 81       	ldd	r24, Y+5	; 0x05
    d254:	88 2f       	mov	r24, r24
    d256:	90 e0       	ldi	r25, 0x00	; 0
    d258:	81 30       	cpi	r24, 0x01	; 1
    d25a:	91 05       	cpc	r25, r1
    d25c:	41 f0       	breq	.+16     	; 0xd26e <_Z6ms_div12si5351_clockhb+0x30>
    d25e:	82 30       	cpi	r24, 0x02	; 2
    d260:	91 05       	cpc	r25, r1
    d262:	41 f0       	breq	.+16     	; 0xd274 <_Z6ms_div12si5351_clockhb+0x36>
    d264:	89 2b       	or	r24, r25
    d266:	49 f4       	brne	.+18     	; 0xd27a <_Z6ms_div12si5351_clockhb+0x3c>
		{
			case SI5351_CLK0:
			{
				reg_addr = SI5351_CLK0_PARAMETERS + 2;
    d268:	8c e2       	ldi	r24, 0x2C	; 44
    d26a:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d26c:	08 c0       	rjmp	.+16     	; 0xd27e <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK1:
			{
				reg_addr = SI5351_CLK1_PARAMETERS + 2;
    d26e:	84 e3       	ldi	r24, 0x34	; 52
    d270:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d272:	05 c0       	rjmp	.+10     	; 0xd27e <_Z6ms_div12si5351_clockhb+0x40>

			case SI5351_CLK2:
			{
				reg_addr = SI5351_CLK2_PARAMETERS + 2;
    d274:	8c e3       	ldi	r24, 0x3C	; 60
    d276:	8a 83       	std	Y+2, r24	; 0x02
			}
			break;
    d278:	02 c0       	rjmp	.+4      	; 0xd27e <_Z6ms_div12si5351_clockhb+0x40>

			default:
				return(true);
    d27a:	81 e0       	ldi	r24, 0x01	; 1
    d27c:	30 c0       	rjmp	.+96     	; 0xd2de <_Z6ms_div12si5351_clockhb+0xa0>
		}

		if(si5351_read_bulk(reg_addr, data, 1))
    d27e:	ce 01       	movw	r24, r28
    d280:	03 96       	adiw	r24, 0x03	; 3
    d282:	41 e0       	ldi	r20, 0x01	; 1
    d284:	bc 01       	movw	r22, r24
    d286:	8a 81       	ldd	r24, Y+2	; 0x02
    d288:	0e 94 65 67 	call	0xceca	; 0xceca <_Z16si5351_read_bulkhPhh>
    d28c:	88 23       	and	r24, r24
    d28e:	11 f0       	breq	.+4      	; 0xd294 <_Z6ms_div12si5351_clockhb+0x56>
		{
			return(true);
    d290:	81 e0       	ldi	r24, 0x01	; 1
    d292:	25 c0       	rjmp	.+74     	; 0xd2de <_Z6ms_div12si5351_clockhb+0xa0>
		}
		
		reg_val = data[0];
    d294:	8b 81       	ldd	r24, Y+3	; 0x03
    d296:	89 83       	std	Y+1, r24	; 0x01

		/* Clear the appropriate bits */
		reg_val &= ~(0x7c);
    d298:	89 81       	ldd	r24, Y+1	; 0x01
    d29a:	83 78       	andi	r24, 0x83	; 131
    d29c:	89 83       	std	Y+1, r24	; 0x01

		if(div_by_4)
    d29e:	8f 81       	ldd	r24, Y+7	; 0x07
    d2a0:	88 23       	and	r24, r24
    d2a2:	21 f0       	breq	.+8      	; 0xd2ac <_Z6ms_div12si5351_clockhb+0x6e>
		{
			reg_val |= (SI5351_OUTPUT_CLK_DIVBY4);
    d2a4:	89 81       	ldd	r24, Y+1	; 0x01
    d2a6:	8c 60       	ori	r24, 0x0C	; 12
    d2a8:	89 83       	std	Y+1, r24	; 0x01
    d2aa:	03 c0       	rjmp	.+6      	; 0xd2b2 <_Z6ms_div12si5351_clockhb+0x74>
		}
		else
		{
			reg_val &= ~(SI5351_OUTPUT_CLK_DIVBY4);
    d2ac:	89 81       	ldd	r24, Y+1	; 0x01
    d2ae:	83 7f       	andi	r24, 0xF3	; 243
    d2b0:	89 83       	std	Y+1, r24	; 0x01
		}

		reg_val |= (r_div << SI5351_OUTPUT_CLK_DIV_SHIFT);
    d2b2:	8e 81       	ldd	r24, Y+6	; 0x06
    d2b4:	88 2f       	mov	r24, r24
    d2b6:	90 e0       	ldi	r25, 0x00	; 0
    d2b8:	82 95       	swap	r24
    d2ba:	92 95       	swap	r25
    d2bc:	90 7f       	andi	r25, 0xF0	; 240
    d2be:	98 27       	eor	r25, r24
    d2c0:	80 7f       	andi	r24, 0xF0	; 240
    d2c2:	98 27       	eor	r25, r24
    d2c4:	98 2f       	mov	r25, r24
    d2c6:	89 81       	ldd	r24, Y+1	; 0x01
    d2c8:	89 2b       	or	r24, r25
    d2ca:	89 83       	std	Y+1, r24	; 0x01

		data[0] = reg_val;
    d2cc:	89 81       	ldd	r24, Y+1	; 0x01
    d2ce:	8b 83       	std	Y+3, r24	; 0x03
		return(si5351_write_bulk(reg_addr, data, 1));
    d2d0:	ce 01       	movw	r24, r28
    d2d2:	03 96       	adiw	r24, 0x03	; 3
    d2d4:	41 e0       	ldi	r20, 0x01	; 1
    d2d6:	bc 01       	movw	r22, r24
    d2d8:	8a 81       	ldd	r24, Y+2	; 0x02
    d2da:	0e 94 33 67 	call	0xce66	; 0xce66 <_Z17si5351_write_bulkhPhh>
	}
    d2de:	27 96       	adiw	r28, 0x07	; 7
    d2e0:	cd bf       	out	0x3d, r28	; 61
    d2e2:	de bf       	out	0x3e, r29	; 62
    d2e4:	df 91       	pop	r29
    d2e6:	cf 91       	pop	r28
    d2e8:	08 95       	ret

0000d2ea <SLPCTRL_init>:
 * \brief Initialize Sleep Controller
 *
 * \return Initialization status.
 */
int8_t SLPCTRL_init()
{
    d2ea:	cf 93       	push	r28
    d2ec:	df 93       	push	r29
    d2ee:	cd b7       	in	r28, 0x3d	; 61
    d2f0:	de b7       	in	r29, 0x3e	; 62

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
    d2f2:	80 e0       	ldi	r24, 0x00	; 0
}
    d2f4:	df 91       	pop	r29
    d2f6:	cf 91       	pop	r28
    d2f8:	08 95       	ret

0000d2fa <TIMERB_init>:
 * \brief Initialize tcb interface
 *
 * \return Initialization status.
 */
int8_t TIMERB_init()
{
    d2fa:	cf 93       	push	r28
    d2fc:	df 93       	push	r29
    d2fe:	cd b7       	in	r28, 0x3d	; 61
    d300:	de b7       	in	r29, 0x3e	; 62
TCB0.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d302:	80 e0       	ldi	r24, 0x00	; 0
    d304:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d306:	21 e0       	ldi	r18, 0x01	; 1
    d308:	fc 01       	movw	r30, r24
    d30a:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB0.CCMP = 0x9C40;
    d30c:	80 e0       	ldi	r24, 0x00	; 0
    d30e:	9b e0       	ldi	r25, 0x0B	; 11
    d310:	20 e4       	ldi	r18, 0x40	; 64
    d312:	3c e9       	ldi	r19, 0x9C	; 156
    d314:	fc 01       	movw	r30, r24
    d316:	24 87       	std	Z+12, r18	; 0x0c
    d318:	35 87       	std	Z+13, r19	; 0x0d

TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d31a:	80 e0       	ldi	r24, 0x00	; 0
    d31c:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d31e:	23 e0       	ldi	r18, 0x03	; 3
    d320:	fc 01       	movw	r30, r24
    d322:	20 83       	st	Z, r18

TCB0.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d324:	80 e0       	ldi	r24, 0x00	; 0
    d326:	9b e0       	ldi	r25, 0x0B	; 11
    d328:	21 e0       	ldi	r18, 0x01	; 1
    d32a:	fc 01       	movw	r30, r24
    d32c:	26 83       	std	Z+6, r18	; 0x06

/********************************************************************************/

TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d32e:	80 e1       	ldi	r24, 0x10	; 16
    d330:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d332:	21 e0       	ldi	r18, 0x01	; 1
    d334:	fc 01       	movw	r30, r24
    d336:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB1.CCMP = 0x5DC0;
    d338:	80 e1       	ldi	r24, 0x10	; 16
    d33a:	9b e0       	ldi	r25, 0x0B	; 11
    d33c:	20 ec       	ldi	r18, 0xC0	; 192
    d33e:	3d e5       	ldi	r19, 0x5D	; 93
    d340:	fc 01       	movw	r30, r24
    d342:	24 87       	std	Z+12, r18	; 0x0c
    d344:	35 87       	std	Z+13, r19	; 0x0d

TCB1.CTRLA = TCB_CLKSEL_DIV1_gc     /* CLK_PER */
    d346:	80 e1       	ldi	r24, 0x10	; 16
    d348:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d34a:	21 e0       	ldi	r18, 0x01	; 1
    d34c:	fc 01       	movw	r30, r24
    d34e:	20 83       	st	Z, r18

TCB1.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d350:	80 e1       	ldi	r24, 0x10	; 16
    d352:	9b e0       	ldi	r25, 0x0B	; 11
    d354:	21 e0       	ldi	r18, 0x01	; 1
    d356:	fc 01       	movw	r30, r24
    d358:	26 83       	std	Z+6, r18	; 0x06


/********************************************************************************/

TCB3.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d35a:	80 e3       	ldi	r24, 0x30	; 48
    d35c:	9b e0       	ldi	r25, 0x0B	; 11
| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d35e:	21 e0       	ldi	r18, 0x01	; 1
    d360:	fc 01       	movw	r30, r24
    d362:	25 83       	std	Z+5, r18	; 0x05

// Set TOP
TCB3.CCMP = 0x9C40;
    d364:	80 e3       	ldi	r24, 0x30	; 48
    d366:	9b e0       	ldi	r25, 0x0B	; 11
    d368:	20 e4       	ldi	r18, 0x40	; 64
    d36a:	3c e9       	ldi	r19, 0x9C	; 156
    d36c:	fc 01       	movw	r30, r24
    d36e:	24 87       	std	Z+12, r18	; 0x0c
    d370:	35 87       	std	Z+13, r19	; 0x0d

TCB3.CTRLA = TCB_CLKSEL_DIV2_gc     /* CLK_PER */
    d372:	80 e3       	ldi	r24, 0x30	; 48
    d374:	9b e0       	ldi	r25, 0x0B	; 11
| 1 << TCB_ENABLE_bp   /* Enable: enabled */
| 0 << TCB_RUNSTDBY_bp /* Run Standby: disabled */
| 0 << TCB_SYNCUPD_bp  /* Synchronize Update: disabled */
| 0 << TCB_CASCADE_bp; /* Cascade Two Timer/Counters: disabled */
    d376:	23 e0       	ldi	r18, 0x03	; 3
    d378:	fc 01       	movw	r30, r24
    d37a:	20 83       	st	Z, r18

TCB3.INTFLAGS = TCB_CAPT_bm; /* Clear flag */
    d37c:	80 e3       	ldi	r24, 0x30	; 48
    d37e:	9b e0       	ldi	r25, 0x0B	; 11
    d380:	21 e0       	ldi	r18, 0x01	; 1
    d382:	fc 01       	movw	r30, r24
    d384:	26 83       	std	Z+6, r18	; 0x06

	return 0;
    d386:	80 e0       	ldi	r24, 0x00	; 0
}
    d388:	df 91       	pop	r29
    d38a:	cf 91       	pop	r28
    d38c:	08 95       	ret

0000d38e <util_delay_ms>:


bool util_delay_ms(uint32_t delayValue)
{
    d38e:	cf 93       	push	r28
    d390:	df 93       	push	r29
    d392:	00 d0       	rcall	.+0      	; 0xd394 <util_delay_ms+0x6>
    d394:	00 d0       	rcall	.+0      	; 0xd396 <util_delay_ms+0x8>
    d396:	cd b7       	in	r28, 0x3d	; 61
    d398:	de b7       	in	r29, 0x3e	; 62
    d39a:	69 83       	std	Y+1, r22	; 0x01
    d39c:	7a 83       	std	Y+2, r23	; 0x02
    d39e:	8b 83       	std	Y+3, r24	; 0x03
    d3a0:	9c 83       	std	Y+4, r25	; 0x04
	static uint32_t countdownValue=0;
	static bool counting = false;
	
	if(delayValue)
    d3a2:	89 81       	ldd	r24, Y+1	; 0x01
    d3a4:	9a 81       	ldd	r25, Y+2	; 0x02
    d3a6:	ab 81       	ldd	r26, Y+3	; 0x03
    d3a8:	bc 81       	ldd	r27, Y+4	; 0x04
    d3aa:	89 2b       	or	r24, r25
    d3ac:	8a 2b       	or	r24, r26
    d3ae:	8b 2b       	or	r24, r27
    d3b0:	09 f4       	brne	.+2      	; 0xd3b4 <util_delay_ms+0x26>
    d3b2:	84 c0       	rjmp	.+264    	; 0xd4bc <util_delay_ms+0x12e>
	{
		if(counting)
    d3b4:	80 91 bc 4a 	lds	r24, 0x4ABC	; 0x804abc <_ZZ13util_delay_msE8counting>
    d3b8:	88 23       	and	r24, r24
    d3ba:	09 f4       	brne	.+2      	; 0xd3be <util_delay_ms+0x30>
    d3bc:	4d c0       	rjmp	.+154    	; 0xd458 <util_delay_ms+0xca>
		{
			if(!g_ms_counter)
    d3be:	80 91 b8 4a 	lds	r24, 0x4AB8	; 0x804ab8 <_ZL12g_ms_counter>
    d3c2:	90 91 b9 4a 	lds	r25, 0x4AB9	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d3c6:	a0 91 ba 4a 	lds	r26, 0x4ABA	; 0x804aba <_ZL12g_ms_counter+0x2>
    d3ca:	b0 91 bb 4a 	lds	r27, 0x4ABB	; 0x804abb <_ZL12g_ms_counter+0x3>
    d3ce:	89 2b       	or	r24, r25
    d3d0:	8a 2b       	or	r24, r26
    d3d2:	8b 2b       	or	r24, r27
    d3d4:	81 f4       	brne	.+32     	; 0xd3f6 <util_delay_ms+0x68>
			{
				TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d3d6:	80 e1       	ldi	r24, 0x10	; 16
    d3d8:	9b e0       	ldi	r25, 0x0B	; 11
				| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d3da:	fc 01       	movw	r30, r24
    d3dc:	15 82       	std	Z+5, r1	; 0x05

				counting = false;
    d3de:	10 92 bc 4a 	sts	0x4ABC, r1	; 0x804abc <_ZZ13util_delay_msE8counting>
				countdownValue = 0;
    d3e2:	10 92 bd 4a 	sts	0x4ABD, r1	; 0x804abd <_ZZ13util_delay_msE14countdownValue>
    d3e6:	10 92 be 4a 	sts	0x4ABE, r1	; 0x804abe <_ZZ13util_delay_msE14countdownValue+0x1>
    d3ea:	10 92 bf 4a 	sts	0x4ABF, r1	; 0x804abf <_ZZ13util_delay_msE14countdownValue+0x2>
    d3ee:	10 92 c0 4a 	sts	0x4AC0, r1	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x3>
				return(false); /* time expired */
    d3f2:	80 e0       	ldi	r24, 0x00	; 0
    d3f4:	81 c0       	rjmp	.+258    	; 0xd4f8 <util_delay_ms+0x16a>
			}
			else if(delayValue != countdownValue) /* countdown delay changed */
    d3f6:	80 91 bd 4a 	lds	r24, 0x4ABD	; 0x804abd <_ZZ13util_delay_msE14countdownValue>
    d3fa:	90 91 be 4a 	lds	r25, 0x4ABE	; 0x804abe <_ZZ13util_delay_msE14countdownValue+0x1>
    d3fe:	a0 91 bf 4a 	lds	r26, 0x4ABF	; 0x804abf <_ZZ13util_delay_msE14countdownValue+0x2>
    d402:	b0 91 c0 4a 	lds	r27, 0x4AC0	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x3>
    d406:	29 81       	ldd	r18, Y+1	; 0x01
    d408:	3a 81       	ldd	r19, Y+2	; 0x02
    d40a:	4b 81       	ldd	r20, Y+3	; 0x03
    d40c:	5c 81       	ldd	r21, Y+4	; 0x04
    d40e:	28 17       	cp	r18, r24
    d410:	39 07       	cpc	r19, r25
    d412:	4a 07       	cpc	r20, r26
    d414:	5b 07       	cpc	r21, r27
    d416:	09 f4       	brne	.+2      	; 0xd41a <util_delay_ms+0x8c>
    d418:	69 c0       	rjmp	.+210    	; 0xd4ec <util_delay_ms+0x15e>
			{
				TCB1.CNT = 0x0000;
    d41a:	80 e1       	ldi	r24, 0x10	; 16
    d41c:	9b e0       	ldi	r25, 0x0B	; 11
    d41e:	fc 01       	movw	r30, r24
    d420:	12 86       	std	Z+10, r1	; 0x0a
    d422:	13 86       	std	Z+11, r1	; 0x0b
				countdownValue = delayValue;
    d424:	89 81       	ldd	r24, Y+1	; 0x01
    d426:	9a 81       	ldd	r25, Y+2	; 0x02
    d428:	ab 81       	ldd	r26, Y+3	; 0x03
    d42a:	bc 81       	ldd	r27, Y+4	; 0x04
    d42c:	80 93 bd 4a 	sts	0x4ABD, r24	; 0x804abd <_ZZ13util_delay_msE14countdownValue>
    d430:	90 93 be 4a 	sts	0x4ABE, r25	; 0x804abe <_ZZ13util_delay_msE14countdownValue+0x1>
    d434:	a0 93 bf 4a 	sts	0x4ABF, r26	; 0x804abf <_ZZ13util_delay_msE14countdownValue+0x2>
    d438:	b0 93 c0 4a 	sts	0x4AC0, r27	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x3>
				g_ms_counter = delayValue;
    d43c:	89 81       	ldd	r24, Y+1	; 0x01
    d43e:	9a 81       	ldd	r25, Y+2	; 0x02
    d440:	ab 81       	ldd	r26, Y+3	; 0x03
    d442:	bc 81       	ldd	r27, Y+4	; 0x04
    d444:	80 93 b8 4a 	sts	0x4AB8, r24	; 0x804ab8 <_ZL12g_ms_counter>
    d448:	90 93 b9 4a 	sts	0x4AB9, r25	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d44c:	a0 93 ba 4a 	sts	0x4ABA, r26	; 0x804aba <_ZL12g_ms_counter+0x2>
    d450:	b0 93 bb 4a 	sts	0x4ABB, r27	; 0x804abb <_ZL12g_ms_counter+0x3>
				return(false);
    d454:	80 e0       	ldi	r24, 0x00	; 0
    d456:	50 c0       	rjmp	.+160    	; 0xd4f8 <util_delay_ms+0x16a>
			}
		}
		else if(delayValue != countdownValue)
    d458:	80 91 bd 4a 	lds	r24, 0x4ABD	; 0x804abd <_ZZ13util_delay_msE14countdownValue>
    d45c:	90 91 be 4a 	lds	r25, 0x4ABE	; 0x804abe <_ZZ13util_delay_msE14countdownValue+0x1>
    d460:	a0 91 bf 4a 	lds	r26, 0x4ABF	; 0x804abf <_ZZ13util_delay_msE14countdownValue+0x2>
    d464:	b0 91 c0 4a 	lds	r27, 0x4AC0	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x3>
    d468:	29 81       	ldd	r18, Y+1	; 0x01
    d46a:	3a 81       	ldd	r19, Y+2	; 0x02
    d46c:	4b 81       	ldd	r20, Y+3	; 0x03
    d46e:	5c 81       	ldd	r21, Y+4	; 0x04
    d470:	28 17       	cp	r18, r24
    d472:	39 07       	cpc	r19, r25
    d474:	4a 07       	cpc	r20, r26
    d476:	5b 07       	cpc	r21, r27
    d478:	c9 f1       	breq	.+114    	; 0xd4ec <util_delay_ms+0x15e>
		{
			TCB1.CNT = 0x0000;
    d47a:	80 e1       	ldi	r24, 0x10	; 16
    d47c:	9b e0       	ldi	r25, 0x0B	; 11
    d47e:	fc 01       	movw	r30, r24
    d480:	12 86       	std	Z+10, r1	; 0x0a
    d482:	13 86       	std	Z+11, r1	; 0x0b
			countdownValue = delayValue;
    d484:	89 81       	ldd	r24, Y+1	; 0x01
    d486:	9a 81       	ldd	r25, Y+2	; 0x02
    d488:	ab 81       	ldd	r26, Y+3	; 0x03
    d48a:	bc 81       	ldd	r27, Y+4	; 0x04
    d48c:	80 93 bd 4a 	sts	0x4ABD, r24	; 0x804abd <_ZZ13util_delay_msE14countdownValue>
    d490:	90 93 be 4a 	sts	0x4ABE, r25	; 0x804abe <_ZZ13util_delay_msE14countdownValue+0x1>
    d494:	a0 93 bf 4a 	sts	0x4ABF, r26	; 0x804abf <_ZZ13util_delay_msE14countdownValue+0x2>
    d498:	b0 93 c0 4a 	sts	0x4AC0, r27	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x3>
			g_ms_counter = delayValue;
    d49c:	89 81       	ldd	r24, Y+1	; 0x01
    d49e:	9a 81       	ldd	r25, Y+2	; 0x02
    d4a0:	ab 81       	ldd	r26, Y+3	; 0x03
    d4a2:	bc 81       	ldd	r27, Y+4	; 0x04
    d4a4:	80 93 b8 4a 	sts	0x4AB8, r24	; 0x804ab8 <_ZL12g_ms_counter>
    d4a8:	90 93 b9 4a 	sts	0x4AB9, r25	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d4ac:	a0 93 ba 4a 	sts	0x4ABA, r26	; 0x804aba <_ZL12g_ms_counter+0x2>
    d4b0:	b0 93 bb 4a 	sts	0x4ABB, r27	; 0x804abb <_ZL12g_ms_counter+0x3>
			counting = true;
    d4b4:	81 e0       	ldi	r24, 0x01	; 1
    d4b6:	80 93 bc 4a 	sts	0x4ABC, r24	; 0x804abc <_ZZ13util_delay_msE8counting>
    d4ba:	18 c0       	rjmp	.+48     	; 0xd4ec <util_delay_ms+0x15e>
		}
	}
	else
	{
		TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d4bc:	80 e1       	ldi	r24, 0x10	; 16
    d4be:	9b e0       	ldi	r25, 0x0B	; 11
		| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d4c0:	fc 01       	movw	r30, r24
    d4c2:	15 82       	std	Z+5, r1	; 0x05

		counting = false;
    d4c4:	10 92 bc 4a 	sts	0x4ABC, r1	; 0x804abc <_ZZ13util_delay_msE8counting>
		countdownValue = 0;
    d4c8:	10 92 bd 4a 	sts	0x4ABD, r1	; 0x804abd <_ZZ13util_delay_msE14countdownValue>
    d4cc:	10 92 be 4a 	sts	0x4ABE, r1	; 0x804abe <_ZZ13util_delay_msE14countdownValue+0x1>
    d4d0:	10 92 bf 4a 	sts	0x4ABF, r1	; 0x804abf <_ZZ13util_delay_msE14countdownValue+0x2>
    d4d4:	10 92 c0 4a 	sts	0x4AC0, r1	; 0x804ac0 <_ZZ13util_delay_msE14countdownValue+0x3>
		g_ms_counter = 0;
    d4d8:	10 92 b8 4a 	sts	0x4AB8, r1	; 0x804ab8 <_ZL12g_ms_counter>
    d4dc:	10 92 b9 4a 	sts	0x4AB9, r1	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d4e0:	10 92 ba 4a 	sts	0x4ABA, r1	; 0x804aba <_ZL12g_ms_counter+0x2>
    d4e4:	10 92 bb 4a 	sts	0x4ABB, r1	; 0x804abb <_ZL12g_ms_counter+0x3>
		return(false); /* timer reset */
    d4e8:	80 e0       	ldi	r24, 0x00	; 0
    d4ea:	06 c0       	rjmp	.+12     	; 0xd4f8 <util_delay_ms+0x16a>
	}
	
	TCB1.INTCTRL = 1 << TCB_CAPT_bp   /* Capture or Timeout: enabled */
    d4ec:	80 e1       	ldi	r24, 0x10	; 16
    d4ee:	9b e0       	ldi	r25, 0x0B	; 11
	| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d4f0:	21 e0       	ldi	r18, 0x01	; 1
    d4f2:	fc 01       	movw	r30, r24
    d4f4:	25 83       	std	Z+5, r18	; 0x05
	
	return(true);
    d4f6:	81 e0       	ldi	r24, 0x01	; 1
}
    d4f8:	24 96       	adiw	r28, 0x04	; 4
    d4fa:	cd bf       	out	0x3d, r28	; 61
    d4fc:	de bf       	out	0x3e, r29	; 62
    d4fe:	df 91       	pop	r29
    d500:	cf 91       	pop	r28
    d502:	08 95       	ret

0000d504 <__vector_13>:

/**
One millisecond utility counter based on CPU clock.
*/
ISR(TCB1_INT_vect)
{
    d504:	1f 92       	push	r1
    d506:	0f 92       	push	r0
    d508:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d50c:	0f 92       	push	r0
    d50e:	11 24       	eor	r1, r1
    d510:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d514:	0f 92       	push	r0
    d516:	2f 93       	push	r18
    d518:	8f 93       	push	r24
    d51a:	9f 93       	push	r25
    d51c:	af 93       	push	r26
    d51e:	bf 93       	push	r27
    d520:	ef 93       	push	r30
    d522:	ff 93       	push	r31
    d524:	cf 93       	push	r28
    d526:	df 93       	push	r29
    d528:	cd b7       	in	r28, 0x3d	; 61
    d52a:	de b7       	in	r29, 0x3e	; 62
    if(TCB1.INTFLAGS & TCB_CAPT_bm)
    d52c:	80 e1       	ldi	r24, 0x10	; 16
    d52e:	9b e0       	ldi	r25, 0x0B	; 11
    d530:	fc 01       	movw	r30, r24
    d532:	86 81       	ldd	r24, Z+6	; 0x06
    d534:	88 2f       	mov	r24, r24
    d536:	90 e0       	ldi	r25, 0x00	; 0
    d538:	81 70       	andi	r24, 0x01	; 1
    d53a:	99 27       	eor	r25, r25
    d53c:	21 e0       	ldi	r18, 0x01	; 1
    d53e:	89 2b       	or	r24, r25
    d540:	09 f4       	brne	.+2      	; 0xd544 <__vector_13+0x40>
    d542:	20 e0       	ldi	r18, 0x00	; 0
    d544:	22 23       	and	r18, r18
    d546:	49 f1       	breq	.+82     	; 0xd59a <__vector_13+0x96>
    {
		if(g_ms_counter) /* check for 1-second interval */
    d548:	80 91 b8 4a 	lds	r24, 0x4AB8	; 0x804ab8 <_ZL12g_ms_counter>
    d54c:	90 91 b9 4a 	lds	r25, 0x4AB9	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d550:	a0 91 ba 4a 	lds	r26, 0x4ABA	; 0x804aba <_ZL12g_ms_counter+0x2>
    d554:	b0 91 bb 4a 	lds	r27, 0x4ABB	; 0x804abb <_ZL12g_ms_counter+0x3>
    d558:	89 2b       	or	r24, r25
    d55a:	8a 2b       	or	r24, r26
    d55c:	8b 2b       	or	r24, r27
    d55e:	a1 f0       	breq	.+40     	; 0xd588 <__vector_13+0x84>
		{
			g_ms_counter--;	
    d560:	80 91 b8 4a 	lds	r24, 0x4AB8	; 0x804ab8 <_ZL12g_ms_counter>
    d564:	90 91 b9 4a 	lds	r25, 0x4AB9	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d568:	a0 91 ba 4a 	lds	r26, 0x4ABA	; 0x804aba <_ZL12g_ms_counter+0x2>
    d56c:	b0 91 bb 4a 	lds	r27, 0x4ABB	; 0x804abb <_ZL12g_ms_counter+0x3>
    d570:	01 97       	sbiw	r24, 0x01	; 1
    d572:	a1 09       	sbc	r26, r1
    d574:	b1 09       	sbc	r27, r1
    d576:	80 93 b8 4a 	sts	0x4AB8, r24	; 0x804ab8 <_ZL12g_ms_counter>
    d57a:	90 93 b9 4a 	sts	0x4AB9, r25	; 0x804ab9 <_ZL12g_ms_counter+0x1>
    d57e:	a0 93 ba 4a 	sts	0x4ABA, r26	; 0x804aba <_ZL12g_ms_counter+0x2>
    d582:	b0 93 bb 4a 	sts	0x4ABB, r27	; 0x804abb <_ZL12g_ms_counter+0x3>
    d586:	04 c0       	rjmp	.+8      	; 0xd590 <__vector_13+0x8c>
		}
		else
		{
			TCB1.INTCTRL = 0 << TCB_CAPT_bp   /* Capture or Timeout: disabled */
    d588:	80 e1       	ldi	r24, 0x10	; 16
    d58a:	9b e0       	ldi	r25, 0x0B	; 11
			| 0 << TCB_OVF_bp; /* OverFlow Interrupt: disabled */
    d58c:	fc 01       	movw	r30, r24
    d58e:	15 82       	std	Z+5, r1	; 0x05
		}

        TCB1.INTFLAGS = TCB_CAPT_bm; /* clear interrupt flag */
    d590:	80 e1       	ldi	r24, 0x10	; 16
    d592:	9b e0       	ldi	r25, 0x0B	; 11
    d594:	21 e0       	ldi	r18, 0x01	; 1
    d596:	fc 01       	movw	r30, r24
    d598:	26 83       	std	Z+6, r18	; 0x06
    }
}
    d59a:	00 00       	nop
    d59c:	df 91       	pop	r29
    d59e:	cf 91       	pop	r28
    d5a0:	ff 91       	pop	r31
    d5a2:	ef 91       	pop	r30
    d5a4:	bf 91       	pop	r27
    d5a6:	af 91       	pop	r26
    d5a8:	9f 91       	pop	r25
    d5aa:	8f 91       	pop	r24
    d5ac:	2f 91       	pop	r18
    d5ae:	0f 90       	pop	r0
    d5b0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7e003b>
    d5b4:	0f 90       	pop	r0
    d5b6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7e003f>
    d5ba:	0f 90       	pop	r0
    d5bc:	1f 90       	pop	r1
    d5be:	18 95       	reti

0000d5c0 <_Z14txSetFrequencyPmb>:
 *       This function sets the VFO frequency (CLK0 of the Si5351) based on the intended frequency passed in by the parameter (freq),
 *       and the VFO configuration in effect. The VFO  frequency might be above or below the intended  frequency, depending on the VFO
 *       configuration setting in effect for the radio band of the frequency.
 */
	bool txSetFrequency(Frequency_Hz *freq, bool leaveClockOff)
	{
    d5c0:	cf 93       	push	r28
    d5c2:	df 93       	push	r29
    d5c4:	00 d0       	rcall	.+0      	; 0xd5c6 <_Z14txSetFrequencyPmb+0x6>
    d5c6:	00 d0       	rcall	.+0      	; 0xd5c8 <_Z14txSetFrequencyPmb+0x8>
    d5c8:	cd b7       	in	r28, 0x3d	; 61
    d5ca:	de b7       	in	r29, 0x3e	; 62
    d5cc:	8a 83       	std	Y+2, r24	; 0x02
    d5ce:	9b 83       	std	Y+3, r25	; 0x03
    d5d0:	6c 83       	std	Y+4, r22	; 0x04
		bool err = false;
    d5d2:	19 82       	std	Y+1, r1	; 0x01

		if((*freq < TX_MAXIMUM_80M_FREQUENCY) && (*freq > TX_MINIMUM_80M_FREQUENCY))    /* 80m */
    d5d4:	8a 81       	ldd	r24, Y+2	; 0x02
    d5d6:	9b 81       	ldd	r25, Y+3	; 0x03
    d5d8:	fc 01       	movw	r30, r24
    d5da:	80 81       	ld	r24, Z
    d5dc:	91 81       	ldd	r25, Z+1	; 0x01
    d5de:	a2 81       	ldd	r26, Z+2	; 0x02
    d5e0:	b3 81       	ldd	r27, Z+3	; 0x03
    d5e2:	81 15       	cp	r24, r1
    d5e4:	99 40       	sbci	r25, 0x09	; 9
    d5e6:	ad 43       	sbci	r26, 0x3D	; 61
    d5e8:	b1 05       	cpc	r27, r1
    d5ea:	68 f5       	brcc	.+90     	; 0xd646 <_Z14txSetFrequencyPmb+0x86>
    d5ec:	8a 81       	ldd	r24, Y+2	; 0x02
    d5ee:	9b 81       	ldd	r25, Y+3	; 0x03
    d5f0:	fc 01       	movw	r30, r24
    d5f2:	80 81       	ld	r24, Z
    d5f4:	91 81       	ldd	r25, Z+1	; 0x01
    d5f6:	a2 81       	ldd	r26, Z+2	; 0x02
    d5f8:	b3 81       	ldd	r27, Z+3	; 0x03
    d5fa:	81 3e       	cpi	r24, 0xE1	; 225
    d5fc:	97 46       	sbci	r25, 0x67	; 103
    d5fe:	a5 43       	sbci	r26, 0x35	; 53
    d600:	b1 05       	cpc	r27, r1
    d602:	08 f1       	brcs	.+66     	; 0xd646 <_Z14txSetFrequencyPmb+0x86>
		{
			if(si5351_set_freq(*freq, TX_CLOCK_HF_0, leaveClockOff))
    d604:	8a 81       	ldd	r24, Y+2	; 0x02
    d606:	9b 81       	ldd	r25, Y+3	; 0x03
    d608:	fc 01       	movw	r30, r24
    d60a:	80 81       	ld	r24, Z
    d60c:	91 81       	ldd	r25, Z+1	; 0x01
    d60e:	a2 81       	ldd	r26, Z+2	; 0x02
    d610:	b3 81       	ldd	r27, Z+3	; 0x03
    d612:	2c 81       	ldd	r18, Y+4	; 0x04
    d614:	41 e0       	ldi	r20, 0x01	; 1
    d616:	bc 01       	movw	r22, r24
    d618:	cd 01       	movw	r24, r26
    d61a:	0e 94 fd 5f 	call	0xbffa	; 0xbffa <si5351_set_freq>
    d61e:	88 23       	and	r24, r24
    d620:	19 f0       	breq	.+6      	; 0xd628 <_Z14txSetFrequencyPmb+0x68>
			{
				err = true; 
    d622:	81 e0       	ldi	r24, 0x01	; 1
    d624:	89 83       	std	Y+1, r24	; 0x01
    d626:	0f c0       	rjmp	.+30     	; 0xd646 <_Z14txSetFrequencyPmb+0x86>
			}
			else
			{
				g_80m_frequency = *freq;
    d628:	8a 81       	ldd	r24, Y+2	; 0x02
    d62a:	9b 81       	ldd	r25, Y+3	; 0x03
    d62c:	fc 01       	movw	r30, r24
    d62e:	80 81       	ld	r24, Z
    d630:	91 81       	ldd	r25, Z+1	; 0x01
    d632:	a2 81       	ldd	r26, Z+2	; 0x02
    d634:	b3 81       	ldd	r27, Z+3	; 0x03
    d636:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <g_80m_frequency>
    d63a:	90 93 33 40 	sts	0x4033, r25	; 0x804033 <g_80m_frequency+0x1>
    d63e:	a0 93 34 40 	sts	0x4034, r26	; 0x804034 <g_80m_frequency+0x2>
    d642:	b0 93 35 40 	sts	0x4035, r27	; 0x804035 <g_80m_frequency+0x3>
			}
		}

		return(err);
    d646:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d648:	24 96       	adiw	r28, 0x04	; 4
    d64a:	cd bf       	out	0x3d, r28	; 61
    d64c:	de bf       	out	0x3e, r29	; 62
    d64e:	df 91       	pop	r29
    d650:	cf 91       	pop	r28
    d652:	08 95       	ret

0000d654 <_Z14txGetFrequencyv>:

	Frequency_Hz txGetFrequency(void)
	{
    d654:	cf 93       	push	r28
    d656:	df 93       	push	r29
    d658:	cd b7       	in	r28, 0x3d	; 61
    d65a:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_frequency);
    d65c:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <g_80m_frequency>
    d660:	90 91 33 40 	lds	r25, 0x4033	; 0x804033 <g_80m_frequency+0x1>
    d664:	a0 91 34 40 	lds	r26, 0x4034	; 0x804034 <g_80m_frequency+0x2>
    d668:	b0 91 35 40 	lds	r27, 0x4035	; 0x804035 <g_80m_frequency+0x3>
	}
    d66c:	bc 01       	movw	r22, r24
    d66e:	cd 01       	movw	r24, r26
    d670:	df 91       	pop	r29
    d672:	cf 91       	pop	r28
    d674:	08 95       	ret

0000d676 <_Z18powerToTransmitterb>:

	EC powerToTransmitter(bool on)
	{
    d676:	cf 93       	push	r28
    d678:	df 93       	push	r29
    d67a:	1f 92       	push	r1
    d67c:	cd b7       	in	r28, 0x3d	; 61
    d67e:	de b7       	in	r29, 0x3e	; 62
    d680:	89 83       	std	Y+1, r24	; 0x01
		fet_driver(on);
    d682:	89 81       	ldd	r24, Y+1	; 0x01
    d684:	0e 94 80 38 	call	0x7100	; 0x7100 <_Z10fet_driverb>

		return(ERROR_CODE_NO_ERROR);
    d688:	80 e0       	ldi	r24, 0x00	; 0
	}
    d68a:	0f 90       	pop	r0
    d68c:	df 91       	pop	r29
    d68e:	cf 91       	pop	r28
    d690:	08 95       	ret

0000d692 <_Z14keyTransmitterb>:

	void keyTransmitter(bool on)
	{
    d692:	cf 93       	push	r28
    d694:	df 93       	push	r29
    d696:	1f 92       	push	r1
    d698:	cd b7       	in	r28, 0x3d	; 61
    d69a:	de b7       	in	r29, 0x3e	; 62
    d69c:	89 83       	std	Y+1, r24	; 0x01
		if(g_tx_initialized)
    d69e:	80 91 c1 4a 	lds	r24, 0x4AC1	; 0x804ac1 <_ZL16g_tx_initialized>
    d6a2:	88 23       	and	r24, r24
    d6a4:	29 f1       	breq	.+74     	; 0xd6f0 <_Z14keyTransmitterb+0x5e>
		{			
			if(on)
    d6a6:	89 81       	ldd	r24, Y+1	; 0x01
    d6a8:	88 23       	and	r24, r24
    d6aa:	a9 f0       	breq	.+42     	; 0xd6d6 <_Z14keyTransmitterb+0x44>
			{
				if(!g_transmitter_keyed)
    d6ac:	90 91 c2 4a 	lds	r25, 0x4AC2	; 0x804ac2 <_ZL19g_transmitter_keyed>
    d6b0:	81 e0       	ldi	r24, 0x01	; 1
    d6b2:	89 27       	eor	r24, r25
    d6b4:	88 23       	and	r24, r24
    d6b6:	e1 f0       	breq	.+56     	; 0xd6f0 <_Z14keyTransmitterb+0x5e>
				{
					if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_ENABLED) == ERROR_CODE_NO_ERROR)
    d6b8:	61 e0       	ldi	r22, 0x01	; 1
    d6ba:	81 e0       	ldi	r24, 0x01	; 1
    d6bc:	0e 94 9e 61 	call	0xc33c	; 0xc33c <si5351_clock_enable>
    d6c0:	98 2f       	mov	r25, r24
    d6c2:	81 e0       	ldi	r24, 0x01	; 1
    d6c4:	99 23       	and	r25, r25
    d6c6:	09 f0       	breq	.+2      	; 0xd6ca <_Z14keyTransmitterb+0x38>
    d6c8:	80 e0       	ldi	r24, 0x00	; 0
    d6ca:	88 23       	and	r24, r24
    d6cc:	89 f0       	breq	.+34     	; 0xd6f0 <_Z14keyTransmitterb+0x5e>
					{
						g_transmitter_keyed = true;
    d6ce:	81 e0       	ldi	r24, 0x01	; 1
    d6d0:	80 93 c2 4a 	sts	0x4AC2, r24	; 0x804ac2 <_ZL19g_transmitter_keyed>
				{
					g_transmitter_keyed = false;
				}
			}
		}
	}
    d6d4:	0d c0       	rjmp	.+26     	; 0xd6f0 <_Z14keyTransmitterb+0x5e>
					}
				}
			}
			else
			{
				if(si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED) == ERROR_CODE_NO_ERROR)
    d6d6:	60 e0       	ldi	r22, 0x00	; 0
    d6d8:	81 e0       	ldi	r24, 0x01	; 1
    d6da:	0e 94 9e 61 	call	0xc33c	; 0xc33c <si5351_clock_enable>
    d6de:	98 2f       	mov	r25, r24
    d6e0:	81 e0       	ldi	r24, 0x01	; 1
    d6e2:	99 23       	and	r25, r25
    d6e4:	09 f0       	breq	.+2      	; 0xd6e8 <_Z14keyTransmitterb+0x56>
    d6e6:	80 e0       	ldi	r24, 0x00	; 0
    d6e8:	88 23       	and	r24, r24
    d6ea:	11 f0       	breq	.+4      	; 0xd6f0 <_Z14keyTransmitterb+0x5e>
				{
					g_transmitter_keyed = false;
    d6ec:	10 92 c2 4a 	sts	0x4AC2, r1	; 0x804ac2 <_ZL19g_transmitter_keyed>
				}
			}
		}
	}
    d6f0:	00 00       	nop
    d6f2:	0f 90       	pop	r0
    d6f4:	df 91       	pop	r29
    d6f6:	cf 91       	pop	r28
    d6f8:	08 95       	ret

0000d6fa <_Z12txGetPowerMwv>:

	uint16_t txGetPowerMw(void)
	{
    d6fa:	cf 93       	push	r28
    d6fc:	df 93       	push	r29
    d6fe:	cd b7       	in	r28, 0x3d	; 61
    d700:	de b7       	in	r29, 0x3e	; 62
		return( g_80m_power_level_mW);
    d702:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_power_level_mW>
    d706:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_power_level_mW+0x1>
	}
    d70a:	df 91       	pop	r29
    d70c:	cf 91       	pop	r28
    d70e:	08 95       	ret

0000d710 <_Z15txSetParametersPjPb>:

	EC __attribute__((optimize("O0"))) txSetParameters(uint16_t* power_mW, bool* enableDriverPwr)
/*	EC txSetParameters(uint16_t* power_mW, bool* enableDriverPwr) */
	{
    d710:	cf 93       	push	r28
    d712:	df 93       	push	r29
    d714:	cd b7       	in	r28, 0x3d	; 61
    d716:	de b7       	in	r29, 0x3e	; 62
    d718:	2b 97       	sbiw	r28, 0x0b	; 11
    d71a:	cd bf       	out	0x3d, r28	; 61
    d71c:	de bf       	out	0x3e, r29	; 62
    d71e:	88 87       	std	Y+8, r24	; 0x08
    d720:	99 87       	std	Y+9, r25	; 0x09
    d722:	6a 87       	std	Y+10, r22	; 0x0a
    d724:	7b 87       	std	Y+11, r23	; 0x0b
		bool err = false;
    d726:	19 82       	std	Y+1, r1	; 0x01
		EC code = ERROR_CODE_NO_ERROR;
    d728:	1a 82       	std	Y+2, r1	; 0x02
		uint16_t power = 0;
    d72a:	1b 82       	std	Y+3, r1	; 0x03
    d72c:	1c 82       	std	Y+4, r1	; 0x04

		if(power_mW != null)
    d72e:	88 85       	ldd	r24, Y+8	; 0x08
    d730:	99 85       	ldd	r25, Y+9	; 0x09
    d732:	89 2b       	or	r24, r25
    d734:	09 f4       	brne	.+2      	; 0xd738 <_Z15txSetParametersPjPb+0x28>
    d736:	68 c0       	rjmp	.+208    	; 0xd808 <_Z15txSetParametersPjPb+0xf8>
		{
			power = *power_mW;
    d738:	88 85       	ldd	r24, Y+8	; 0x08
    d73a:	99 85       	ldd	r25, Y+9	; 0x09
    d73c:	fc 01       	movw	r30, r24
    d73e:	80 81       	ld	r24, Z
    d740:	91 81       	ldd	r25, Z+1	; 0x01
    d742:	8b 83       	std	Y+3, r24	; 0x03
    d744:	9c 83       	std	Y+4, r25	; 0x04

			if(power <= MAX_TX_POWER_80M_MW)
    d746:	8b 81       	ldd	r24, Y+3	; 0x03
    d748:	9c 81       	ldd	r25, Y+4	; 0x04
    d74a:	89 38       	cpi	r24, 0x89	; 137
    d74c:	93 41       	sbci	r25, 0x13	; 19
    d74e:	08 f0       	brcs	.+2      	; 0xd752 <_Z15txSetParametersPjPb+0x42>
    d750:	57 c0       	rjmp	.+174    	; 0xd800 <_Z15txSetParametersPjPb+0xf0>
			{
				uint8_t drainVoltageDAC, modLevelHigh, modLevelLow;
				code = txMilliwattsToSettings(&power, &drainVoltageDAC, &modLevelHigh, &modLevelLow);
    d752:	9e 01       	movw	r18, r28
    d754:	29 5f       	subi	r18, 0xF9	; 249
    d756:	3f 4f       	sbci	r19, 0xFF	; 255
    d758:	ae 01       	movw	r20, r28
    d75a:	4a 5f       	subi	r20, 0xFA	; 250
    d75c:	5f 4f       	sbci	r21, 0xFF	; 255
    d75e:	be 01       	movw	r22, r28
    d760:	6b 5f       	subi	r22, 0xFB	; 251
    d762:	7f 4f       	sbci	r23, 0xFF	; 255
    d764:	ce 01       	movw	r24, r28
    d766:	03 96       	adiw	r24, 0x03	; 3
    d768:	0e 94 82 6c 	call	0xd904	; 0xd904 <_Z22txMilliwattsToSettingsPjPhS0_S0_>
    d76c:	8a 83       	std	Y+2, r24	; 0x02
				err = (code == ERROR_CODE_SW_LOGIC_ERROR);
    d76e:	81 e0       	ldi	r24, 0x01	; 1
    d770:	9a 81       	ldd	r25, Y+2	; 0x02
    d772:	9f 3c       	cpi	r25, 0xCF	; 207
    d774:	09 f0       	breq	.+2      	; 0xd778 <_Z15txSetParametersPjPb+0x68>
    d776:	80 e0       	ldi	r24, 0x00	; 0
    d778:	89 83       	std	Y+1, r24	; 0x01

				g_tx_power_is_zero = (power == 0);
    d77a:	8b 81       	ldd	r24, Y+3	; 0x03
    d77c:	9c 81       	ldd	r25, Y+4	; 0x04
    d77e:	21 e0       	ldi	r18, 0x01	; 1
    d780:	89 2b       	or	r24, r25
    d782:	09 f0       	breq	.+2      	; 0xd786 <_Z15txSetParametersPjPb+0x76>
    d784:	20 e0       	ldi	r18, 0x00	; 0
    d786:	20 93 3c 40 	sts	0x403C, r18	; 0x80403c <g_tx_power_is_zero>

				if(!err)
    d78a:	99 81       	ldd	r25, Y+1	; 0x01
    d78c:	81 e0       	ldi	r24, 0x01	; 1
    d78e:	89 27       	eor	r24, r25
    d790:	88 23       	and	r24, r24
    d792:	71 f1       	breq	.+92     	; 0xd7f0 <_Z15txSetParametersPjPb+0xe0>
				{
					g_80m_power_level_mW = power;
    d794:	8b 81       	ldd	r24, Y+3	; 0x03
    d796:	9c 81       	ldd	r25, Y+4	; 0x04
    d798:	80 93 36 40 	sts	0x4036, r24	; 0x804036 <g_80m_power_level_mW>
    d79c:	90 93 37 40 	sts	0x4037, r25	; 0x804037 <g_80m_power_level_mW+0x1>

					if(g_antenna_connect_state == ANT_CONNECTED)
    d7a0:	90 91 45 47 	lds	r25, 0x4745	; 0x804745 <g_antenna_connect_state>
    d7a4:	81 e0       	ldi	r24, 0x01	; 1
    d7a6:	92 30       	cpi	r25, 0x02	; 2
    d7a8:	09 f0       	breq	.+2      	; 0xd7ac <_Z15txSetParametersPjPb+0x9c>
    d7aa:	80 e0       	ldi	r24, 0x00	; 0
    d7ac:	88 23       	and	r24, r24
    d7ae:	31 f0       	breq	.+12     	; 0xd7bc <_Z15txSetParametersPjPb+0xac>
					{
						DAC0_setVal(drainVoltageDAC);
    d7b0:	8d 81       	ldd	r24, Y+5	; 0x05
    d7b2:	88 2f       	mov	r24, r24
    d7b4:	90 e0       	ldi	r25, 0x00	; 0
    d7b6:	0e 94 0d 3a 	call	0x741a	; 0x741a <_Z11DAC0_setValj>
    d7ba:	07 c0       	rjmp	.+14     	; 0xd7ca <_Z15txSetParametersPjPb+0xba>
					}
					else
					{
						g_tx_power_is_zero = true;
    d7bc:	81 e0       	ldi	r24, 0x01	; 1
    d7be:	80 93 3c 40 	sts	0x403C, r24	; 0x80403c <g_tx_power_is_zero>
						err = true;
    d7c2:	81 e0       	ldi	r24, 0x01	; 1
    d7c4:	89 83       	std	Y+1, r24	; 0x01
						code = ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING;
    d7c6:	86 ef       	ldi	r24, 0xF6	; 246
    d7c8:	8a 83       	std	Y+2, r24	; 0x02
					}

					if(g_tx_power_is_zero || (drainVoltageDAC == 0))
    d7ca:	80 91 3c 40 	lds	r24, 0x403C	; 0x80403c <g_tx_power_is_zero>
    d7ce:	88 23       	and	r24, r24
    d7d0:	19 f4       	brne	.+6      	; 0xd7d8 <_Z15txSetParametersPjPb+0xc8>
    d7d2:	8d 81       	ldd	r24, Y+5	; 0x05
    d7d4:	88 23       	and	r24, r24
    d7d6:	11 f4       	brne	.+4      	; 0xd7dc <_Z15txSetParametersPjPb+0xcc>
    d7d8:	81 e0       	ldi	r24, 0x01	; 1
    d7da:	01 c0       	rjmp	.+2      	; 0xd7de <_Z15txSetParametersPjPb+0xce>
    d7dc:	80 e0       	ldi	r24, 0x00	; 0
    d7de:	88 23       	and	r24, r24
    d7e0:	21 f0       	breq	.+8      	; 0xd7ea <_Z15txSetParametersPjPb+0xda>
					{
						powerToTransmitter(OFF); /* Turn off FET driver */
    d7e2:	80 e0       	ldi	r24, 0x00	; 0
    d7e4:	0e 94 3b 6b 	call	0xd676	; 0xd676 <_Z18powerToTransmitterb>
    d7e8:	03 c0       	rjmp	.+6      	; 0xd7f0 <_Z15txSetParametersPjPb+0xe0>
					}
					else
					{
						powerToTransmitter(ON); /* Turn on FET driver */
    d7ea:	81 e0       	ldi	r24, 0x01	; 1
    d7ec:	0e 94 3b 6b 	call	0xd676	; 0xd676 <_Z18powerToTransmitterb>
					}
				}

				*power_mW = power;
    d7f0:	2b 81       	ldd	r18, Y+3	; 0x03
    d7f2:	3c 81       	ldd	r19, Y+4	; 0x04
    d7f4:	88 85       	ldd	r24, Y+8	; 0x08
    d7f6:	99 85       	ldd	r25, Y+9	; 0x09
    d7f8:	fc 01       	movw	r30, r24
    d7fa:	20 83       	st	Z, r18
    d7fc:	31 83       	std	Z+1, r19	; 0x01
    d7fe:	04 c0       	rjmp	.+8      	; 0xd808 <_Z15txSetParametersPjPb+0xf8>
			}
			else
			{
				err = true;
    d800:	81 e0       	ldi	r24, 0x01	; 1
    d802:	89 83       	std	Y+1, r24	; 0x01
				code = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d804:	85 ef       	ldi	r24, 0xF5	; 245
    d806:	8a 83       	std	Y+2, r24	; 0x02
			}
		}

		if(!err)
    d808:	99 81       	ldd	r25, Y+1	; 0x01
    d80a:	81 e0       	ldi	r24, 0x01	; 1
    d80c:	89 27       	eor	r24, r25
    d80e:	88 23       	and	r24, r24
    d810:	51 f0       	breq	.+20     	; 0xd826 <_Z15txSetParametersPjPb+0x116>
		{
			if(enableDriverPwr != NULL)
    d812:	8a 85       	ldd	r24, Y+10	; 0x0a
    d814:	9b 85       	ldd	r25, Y+11	; 0x0b
    d816:	89 2b       	or	r24, r25
    d818:	31 f0       	breq	.+12     	; 0xd826 <_Z15txSetParametersPjPb+0x116>
			{
				powerToTransmitter(*enableDriverPwr);
    d81a:	8a 85       	ldd	r24, Y+10	; 0x0a
    d81c:	9b 85       	ldd	r25, Y+11	; 0x0b
    d81e:	fc 01       	movw	r30, r24
    d820:	80 81       	ld	r24, Z
    d822:	0e 94 3b 6b 	call	0xd676	; 0xd676 <_Z18powerToTransmitterb>
			}
		}

		return(code);
    d826:	8a 81       	ldd	r24, Y+2	; 0x02
	}
    d828:	2b 96       	adiw	r28, 0x0b	; 11
    d82a:	cd bf       	out	0x3d, r28	; 61
    d82c:	de bf       	out	0x3e, r29	; 62
    d82e:	df 91       	pop	r29
    d830:	cf 91       	pop	r28
    d832:	08 95       	ret

0000d834 <_Z16init_transmitterv>:


	EC init_transmitter(void)
	{
    d834:	cf 93       	push	r28
    d836:	df 93       	push	r29
    d838:	00 d0       	rcall	.+0      	; 0xd83a <_Z16init_transmitterv+0x6>
    d83a:	00 d0       	rcall	.+0      	; 0xd83c <_Z16init_transmitterv+0x8>
    d83c:	cd b7       	in	r28, 0x3d	; 61
    d83e:	de b7       	in	r29, 0x3e	; 62
		EC code;
		bool err;
		
		DAC0_init();
    d840:	0e 94 df 39 	call	0x73be	; 0x73be <_Z9DAC0_initv>

		if((err = si5351_init(SI5351_CRYSTAL_LOAD_6PF, 0)))
    d844:	40 e0       	ldi	r20, 0x00	; 0
    d846:	50 e0       	ldi	r21, 0x00	; 0
    d848:	ba 01       	movw	r22, r20
    d84a:	80 e4       	ldi	r24, 0x40	; 64
    d84c:	0e 94 2f 5f 	call	0xbe5e	; 0xbe5e <si5351_init>
    d850:	8a 83       	std	Y+2, r24	; 0x02
    d852:	8a 81       	ldd	r24, Y+2	; 0x02
    d854:	88 23       	and	r24, r24
    d856:	11 f0       	breq	.+4      	; 0xd85c <_Z16init_transmitterv+0x28>
		{
			return(ERROR_CODE_RF_OSCILLATOR_ERROR);
    d858:	82 ed       	ldi	r24, 0xD2	; 210
    d85a:	4e c0       	rjmp	.+156    	; 0xd8f8 <_Z16init_transmitterv+0xc4>
		}

		if((code = txSetParameters(NULL, NULL)))
    d85c:	60 e0       	ldi	r22, 0x00	; 0
    d85e:	70 e0       	ldi	r23, 0x00	; 0
    d860:	80 e0       	ldi	r24, 0x00	; 0
    d862:	90 e0       	ldi	r25, 0x00	; 0
    d864:	0e 94 88 6b 	call	0xd710	; 0xd710 <_Z15txSetParametersPjPb>
    d868:	89 83       	std	Y+1, r24	; 0x01
    d86a:	81 e0       	ldi	r24, 0x01	; 1
    d86c:	99 81       	ldd	r25, Y+1	; 0x01
    d86e:	99 23       	and	r25, r25
    d870:	09 f4       	brne	.+2      	; 0xd874 <_Z16init_transmitterv+0x40>
    d872:	80 e0       	ldi	r24, 0x00	; 0
    d874:	88 23       	and	r24, r24
    d876:	11 f0       	breq	.+4      	; 0xd87c <_Z16init_transmitterv+0x48>
		{
			return( code);
    d878:	89 81       	ldd	r24, Y+1	; 0x01
    d87a:	3e c0       	rjmp	.+124    	; 0xd8f8 <_Z16init_transmitterv+0xc4>
		}

		if((code = si5351_drive_strength(TX_CLOCK_HF_0, SI5351_DRIVE_8MA)))
    d87c:	63 e0       	ldi	r22, 0x03	; 3
    d87e:	81 e0       	ldi	r24, 0x01	; 1
    d880:	0e 94 e9 61 	call	0xc3d2	; 0xc3d2 <si5351_drive_strength>
    d884:	89 83       	std	Y+1, r24	; 0x01
    d886:	81 e0       	ldi	r24, 0x01	; 1
    d888:	99 81       	ldd	r25, Y+1	; 0x01
    d88a:	99 23       	and	r25, r25
    d88c:	09 f4       	brne	.+2      	; 0xd890 <_Z16init_transmitterv+0x5c>
    d88e:	80 e0       	ldi	r24, 0x00	; 0
    d890:	88 23       	and	r24, r24
    d892:	11 f0       	breq	.+4      	; 0xd898 <_Z16init_transmitterv+0x64>
		{
			return( code);
    d894:	89 81       	ldd	r24, Y+1	; 0x01
    d896:	30 c0       	rjmp	.+96     	; 0xd8f8 <_Z16init_transmitterv+0xc4>
		}
		
		if((code = si5351_clock_enable(TX_CLOCK_HF_0, SI5351_CLK_DISABLED)))
    d898:	60 e0       	ldi	r22, 0x00	; 0
    d89a:	81 e0       	ldi	r24, 0x01	; 1
    d89c:	0e 94 9e 61 	call	0xc33c	; 0xc33c <si5351_clock_enable>
    d8a0:	89 83       	std	Y+1, r24	; 0x01
    d8a2:	81 e0       	ldi	r24, 0x01	; 1
    d8a4:	99 81       	ldd	r25, Y+1	; 0x01
    d8a6:	99 23       	and	r25, r25
    d8a8:	09 f4       	brne	.+2      	; 0xd8ac <_Z16init_transmitterv+0x78>
    d8aa:	80 e0       	ldi	r24, 0x00	; 0
    d8ac:	88 23       	and	r24, r24
    d8ae:	11 f0       	breq	.+4      	; 0xd8b4 <_Z16init_transmitterv+0x80>
		{
			return( code);
    d8b0:	89 81       	ldd	r24, Y+1	; 0x01
    d8b2:	22 c0       	rjmp	.+68     	; 0xd8f8 <_Z16init_transmitterv+0xc4>
// 		if((code = si5351_clock_enable(TX_CLOCK_VHF_FM, SI5351_CLK_DISABLED)))
// 		{
// 			return( code);
// 		}

		uint16_t pwr_mW = g_80m_power_level_mW;
    d8b4:	80 91 36 40 	lds	r24, 0x4036	; 0x804036 <g_80m_power_level_mW>
    d8b8:	90 91 37 40 	lds	r25, 0x4037	; 0x804037 <g_80m_power_level_mW+0x1>
    d8bc:	8b 83       	std	Y+3, r24	; 0x03
    d8be:	9c 83       	std	Y+4, r25	; 0x04
		
		err = txSetFrequency((Frequency_Hz*)&g_80m_frequency, true);
    d8c0:	61 e0       	ldi	r22, 0x01	; 1
    d8c2:	82 e3       	ldi	r24, 0x32	; 50
    d8c4:	90 e4       	ldi	r25, 0x40	; 64
    d8c6:	0e 94 e0 6a 	call	0xd5c0	; 0xd5c0 <_Z14txSetFrequencyPmb>
    d8ca:	8a 83       	std	Y+2, r24	; 0x02
		if(!err)
    d8cc:	9a 81       	ldd	r25, Y+2	; 0x02
    d8ce:	81 e0       	ldi	r24, 0x01	; 1
    d8d0:	89 27       	eor	r24, r25
    d8d2:	88 23       	and	r24, r24
    d8d4:	81 f0       	breq	.+32     	; 0xd8f6 <_Z16init_transmitterv+0xc2>
		{
			code = txSetParameters(&pwr_mW, NULL);
    d8d6:	ce 01       	movw	r24, r28
    d8d8:	03 96       	adiw	r24, 0x03	; 3
    d8da:	60 e0       	ldi	r22, 0x00	; 0
    d8dc:	70 e0       	ldi	r23, 0x00	; 0
    d8de:	0e 94 88 6b 	call	0xd710	; 0xd710 <_Z15txSetParametersPjPb>
    d8e2:	89 83       	std	Y+1, r24	; 0x01
			if((code == ERROR_CODE_NO_ERROR) || (code == ERROR_CODE_NO_ANTENNA_PREVENTS_POWER_SETTING))
    d8e4:	89 81       	ldd	r24, Y+1	; 0x01
    d8e6:	88 23       	and	r24, r24
    d8e8:	19 f0       	breq	.+6      	; 0xd8f0 <_Z16init_transmitterv+0xbc>
    d8ea:	89 81       	ldd	r24, Y+1	; 0x01
    d8ec:	86 3f       	cpi	r24, 0xF6	; 246
    d8ee:	19 f4       	brne	.+6      	; 0xd8f6 <_Z16init_transmitterv+0xc2>
			{
				g_tx_initialized = true;
    d8f0:	81 e0       	ldi	r24, 0x01	; 1
    d8f2:	80 93 c1 4a 	sts	0x4AC1, r24	; 0x804ac1 <_ZL16g_tx_initialized>
			}
		}

		return( code);
    d8f6:	89 81       	ldd	r24, Y+1	; 0x01
	}
    d8f8:	24 96       	adiw	r28, 0x04	; 4
    d8fa:	cd bf       	out	0x3d, r28	; 61
    d8fc:	de bf       	out	0x3e, r29	; 62
    d8fe:	df 91       	pop	r29
    d900:	cf 91       	pop	r28
    d902:	08 95       	ret

0000d904 <_Z22txMilliwattsToSettingsPjPhS0_S0_>:


EC txMilliwattsToSettings(uint16_t* powerMW, uint8_t* driveLevel, uint8_t* modLevelHigh, uint8_t* modLevelLow)
{
    d904:	cf 93       	push	r28
    d906:	df 93       	push	r29
    d908:	cd b7       	in	r28, 0x3d	; 61
    d90a:	de b7       	in	r29, 0x3e	; 62
    d90c:	65 97       	sbiw	r28, 0x15	; 21
    d90e:	cd bf       	out	0x3d, r28	; 61
    d910:	de bf       	out	0x3e, r29	; 62
    d912:	8e 87       	std	Y+14, r24	; 0x0e
    d914:	9f 87       	std	Y+15, r25	; 0x0f
    d916:	68 8b       	std	Y+16, r22	; 0x10
    d918:	79 8b       	std	Y+17, r23	; 0x11
    d91a:	4a 8b       	std	Y+18, r20	; 0x12
    d91c:	5b 8b       	std	Y+19, r21	; 0x13
    d91e:	2c 8b       	std	Y+20, r18	; 0x14
    d920:	3d 8b       	std	Y+21, r19	; 0x15
	EC ec = ERROR_CODE_NO_ERROR;
    d922:	19 82       	std	Y+1, r1	; 0x01
	int16_t maxPwr;
	uint8_t index;

	if(powerMW == NULL)
    d924:	8e 85       	ldd	r24, Y+14	; 0x0e
    d926:	9f 85       	ldd	r25, Y+15	; 0x0f
    d928:	89 2b       	or	r24, r25
    d92a:	11 f4       	brne	.+4      	; 0xd930 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c>
	{
		return(ERROR_CODE_SW_LOGIC_ERROR);
    d92c:	8f ec       	ldi	r24, 0xCF	; 207
    d92e:	77 c1       	rjmp	.+750    	; 0xdc1e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x31a>
	}

	maxPwr = MAX_TX_POWER_80M_MW;
    d930:	88 e8       	ldi	r24, 0x88	; 136
    d932:	93 e1       	ldi	r25, 0x13	; 19
    d934:	8b 83       	std	Y+3, r24	; 0x03
    d936:	9c 83       	std	Y+4, r25	; 0x04

	if((int16_t)*powerMW > maxPwr)
    d938:	8e 85       	ldd	r24, Y+14	; 0x0e
    d93a:	9f 85       	ldd	r25, Y+15	; 0x0f
    d93c:	fc 01       	movw	r30, r24
    d93e:	80 81       	ld	r24, Z
    d940:	91 81       	ldd	r25, Z+1	; 0x01
    d942:	9c 01       	movw	r18, r24
    d944:	8b 81       	ldd	r24, Y+3	; 0x03
    d946:	9c 81       	ldd	r25, Y+4	; 0x04
    d948:	82 17       	cp	r24, r18
    d94a:	93 07       	cpc	r25, r19
    d94c:	14 f4       	brge	.+4      	; 0xd952 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x4e>
	{
		ec = ERROR_CODE_POWER_LEVEL_NOT_SUPPORTED;
    d94e:	85 ef       	ldi	r24, 0xF5	; 245
    d950:	89 83       	std	Y+1, r24	; 0x01
	}

	*powerMW = CLAMP(0, (int16_t)*powerMW, maxPwr);
    d952:	8e 85       	ldd	r24, Y+14	; 0x0e
    d954:	9f 85       	ldd	r25, Y+15	; 0x0f
    d956:	fc 01       	movw	r30, r24
    d958:	80 81       	ld	r24, Z
    d95a:	91 81       	ldd	r25, Z+1	; 0x01
    d95c:	8d 83       	std	Y+5, r24	; 0x05
    d95e:	9e 83       	std	Y+6, r25	; 0x06
    d960:	1f 82       	std	Y+7, r1	; 0x07
    d962:	18 86       	std	Y+8, r1	; 0x08
    d964:	8b 81       	ldd	r24, Y+3	; 0x03
    d966:	9c 81       	ldd	r25, Y+4	; 0x04
    d968:	89 87       	std	Y+9, r24	; 0x09
    d96a:	9a 87       	std	Y+10, r25	; 0x0a
    d96c:	2d 81       	ldd	r18, Y+5	; 0x05
    d96e:	3e 81       	ldd	r19, Y+6	; 0x06
    d970:	89 85       	ldd	r24, Y+9	; 0x09
    d972:	9a 85       	ldd	r25, Y+10	; 0x0a
    d974:	82 17       	cp	r24, r18
    d976:	93 07       	cpc	r25, r19
    d978:	6c f0       	brlt	.+26     	; 0xd994 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x90>
    d97a:	2d 81       	ldd	r18, Y+5	; 0x05
    d97c:	3e 81       	ldd	r19, Y+6	; 0x06
    d97e:	8f 81       	ldd	r24, Y+7	; 0x07
    d980:	98 85       	ldd	r25, Y+8	; 0x08
    d982:	28 17       	cp	r18, r24
    d984:	39 07       	cpc	r19, r25
    d986:	1c f4       	brge	.+6      	; 0xd98e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x8a>
    d988:	8f 81       	ldd	r24, Y+7	; 0x07
    d98a:	98 85       	ldd	r25, Y+8	; 0x08
    d98c:	05 c0       	rjmp	.+10     	; 0xd998 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    d98e:	8d 81       	ldd	r24, Y+5	; 0x05
    d990:	9e 81       	ldd	r25, Y+6	; 0x06
    d992:	02 c0       	rjmp	.+4      	; 0xd998 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x94>
    d994:	89 85       	ldd	r24, Y+9	; 0x09
    d996:	9a 85       	ldd	r25, Y+10	; 0x0a
    d998:	9c 01       	movw	r18, r24
    d99a:	8e 85       	ldd	r24, Y+14	; 0x0e
    d99c:	9f 85       	ldd	r25, Y+15	; 0x0f
    d99e:	fc 01       	movw	r30, r24
    d9a0:	20 83       	st	Z, r18
    d9a2:	31 83       	std	Z+1, r19	; 0x01

	if(*powerMW < 5)
    d9a4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9a6:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9a8:	fc 01       	movw	r30, r24
    d9aa:	80 81       	ld	r24, Z
    d9ac:	91 81       	ldd	r25, Z+1	; 0x01
    d9ae:	05 97       	sbiw	r24, 0x05	; 5
    d9b0:	38 f4       	brcc	.+14     	; 0xd9c0 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xbc>
	{
		index = 0;
    d9b2:	1a 82       	std	Y+2, r1	; 0x02
		*powerMW = 0;
    d9b4:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9b6:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9b8:	fc 01       	movw	r30, r24
    d9ba:	10 82       	st	Z, r1
    d9bc:	11 82       	std	Z+1, r1	; 0x01
    d9be:	04 c1       	rjmp	.+520    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 50)
    d9c0:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9c2:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9c4:	fc 01       	movw	r30, r24
    d9c6:	80 81       	ld	r24, Z
    d9c8:	91 81       	ldd	r25, Z+1	; 0x01
    d9ca:	c2 97       	sbiw	r24, 0x32	; 50
    d9cc:	50 f4       	brcc	.+20     	; 0xd9e2 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0xde>
	{
		index = 1;
    d9ce:	81 e0       	ldi	r24, 0x01	; 1
    d9d0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 10;
    d9d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9d6:	2a e0       	ldi	r18, 0x0A	; 10
    d9d8:	30 e0       	ldi	r19, 0x00	; 0
    d9da:	fc 01       	movw	r30, r24
    d9dc:	20 83       	st	Z, r18
    d9de:	31 83       	std	Z+1, r19	; 0x01
    d9e0:	f3 c0       	rjmp	.+486    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 150)
    d9e2:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9e6:	fc 01       	movw	r30, r24
    d9e8:	80 81       	ld	r24, Z
    d9ea:	91 81       	ldd	r25, Z+1	; 0x01
    d9ec:	86 39       	cpi	r24, 0x96	; 150
    d9ee:	91 05       	cpc	r25, r1
    d9f0:	50 f4       	brcc	.+20     	; 0xda06 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x102>
	{
		index = 2;
    d9f2:	82 e0       	ldi	r24, 0x02	; 2
    d9f4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 100;
    d9f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    d9f8:	9f 85       	ldd	r25, Y+15	; 0x0f
    d9fa:	24 e6       	ldi	r18, 0x64	; 100
    d9fc:	30 e0       	ldi	r19, 0x00	; 0
    d9fe:	fc 01       	movw	r30, r24
    da00:	20 83       	st	Z, r18
    da02:	31 83       	std	Z+1, r19	; 0x01
    da04:	e1 c0       	rjmp	.+450    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 250)
    da06:	8e 85       	ldd	r24, Y+14	; 0x0e
    da08:	9f 85       	ldd	r25, Y+15	; 0x0f
    da0a:	fc 01       	movw	r30, r24
    da0c:	80 81       	ld	r24, Z
    da0e:	91 81       	ldd	r25, Z+1	; 0x01
    da10:	8a 3f       	cpi	r24, 0xFA	; 250
    da12:	91 05       	cpc	r25, r1
    da14:	50 f4       	brcc	.+20     	; 0xda2a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x126>
	{
		index = 3;
    da16:	83 e0       	ldi	r24, 0x03	; 3
    da18:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 200;
    da1a:	8e 85       	ldd	r24, Y+14	; 0x0e
    da1c:	9f 85       	ldd	r25, Y+15	; 0x0f
    da1e:	28 ec       	ldi	r18, 0xC8	; 200
    da20:	30 e0       	ldi	r19, 0x00	; 0
    da22:	fc 01       	movw	r30, r24
    da24:	20 83       	st	Z, r18
    da26:	31 83       	std	Z+1, r19	; 0x01
    da28:	cf c0       	rjmp	.+414    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 350)
    da2a:	8e 85       	ldd	r24, Y+14	; 0x0e
    da2c:	9f 85       	ldd	r25, Y+15	; 0x0f
    da2e:	fc 01       	movw	r30, r24
    da30:	80 81       	ld	r24, Z
    da32:	91 81       	ldd	r25, Z+1	; 0x01
    da34:	8e 35       	cpi	r24, 0x5E	; 94
    da36:	91 40       	sbci	r25, 0x01	; 1
    da38:	50 f4       	brcc	.+20     	; 0xda4e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x14a>
	{
		index = 4;
    da3a:	84 e0       	ldi	r24, 0x04	; 4
    da3c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 300;
    da3e:	8e 85       	ldd	r24, Y+14	; 0x0e
    da40:	9f 85       	ldd	r25, Y+15	; 0x0f
    da42:	2c e2       	ldi	r18, 0x2C	; 44
    da44:	31 e0       	ldi	r19, 0x01	; 1
    da46:	fc 01       	movw	r30, r24
    da48:	20 83       	st	Z, r18
    da4a:	31 83       	std	Z+1, r19	; 0x01
    da4c:	bd c0       	rjmp	.+378    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 450)
    da4e:	8e 85       	ldd	r24, Y+14	; 0x0e
    da50:	9f 85       	ldd	r25, Y+15	; 0x0f
    da52:	fc 01       	movw	r30, r24
    da54:	80 81       	ld	r24, Z
    da56:	91 81       	ldd	r25, Z+1	; 0x01
    da58:	82 3c       	cpi	r24, 0xC2	; 194
    da5a:	91 40       	sbci	r25, 0x01	; 1
    da5c:	50 f4       	brcc	.+20     	; 0xda72 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x16e>
	{
		index = 5;
    da5e:	85 e0       	ldi	r24, 0x05	; 5
    da60:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 400;
    da62:	8e 85       	ldd	r24, Y+14	; 0x0e
    da64:	9f 85       	ldd	r25, Y+15	; 0x0f
    da66:	20 e9       	ldi	r18, 0x90	; 144
    da68:	31 e0       	ldi	r19, 0x01	; 1
    da6a:	fc 01       	movw	r30, r24
    da6c:	20 83       	st	Z, r18
    da6e:	31 83       	std	Z+1, r19	; 0x01
    da70:	ab c0       	rjmp	.+342    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 550)
    da72:	8e 85       	ldd	r24, Y+14	; 0x0e
    da74:	9f 85       	ldd	r25, Y+15	; 0x0f
    da76:	fc 01       	movw	r30, r24
    da78:	80 81       	ld	r24, Z
    da7a:	91 81       	ldd	r25, Z+1	; 0x01
    da7c:	86 32       	cpi	r24, 0x26	; 38
    da7e:	92 40       	sbci	r25, 0x02	; 2
    da80:	50 f4       	brcc	.+20     	; 0xda96 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x192>
	{
		index = 6;
    da82:	86 e0       	ldi	r24, 0x06	; 6
    da84:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 500;
    da86:	8e 85       	ldd	r24, Y+14	; 0x0e
    da88:	9f 85       	ldd	r25, Y+15	; 0x0f
    da8a:	24 ef       	ldi	r18, 0xF4	; 244
    da8c:	31 e0       	ldi	r19, 0x01	; 1
    da8e:	fc 01       	movw	r30, r24
    da90:	20 83       	st	Z, r18
    da92:	31 83       	std	Z+1, r19	; 0x01
    da94:	99 c0       	rjmp	.+306    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 650)
    da96:	8e 85       	ldd	r24, Y+14	; 0x0e
    da98:	9f 85       	ldd	r25, Y+15	; 0x0f
    da9a:	fc 01       	movw	r30, r24
    da9c:	80 81       	ld	r24, Z
    da9e:	91 81       	ldd	r25, Z+1	; 0x01
    daa0:	8a 38       	cpi	r24, 0x8A	; 138
    daa2:	92 40       	sbci	r25, 0x02	; 2
    daa4:	50 f4       	brcc	.+20     	; 0xdaba <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1b6>
	{
		index = 7;
    daa6:	87 e0       	ldi	r24, 0x07	; 7
    daa8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 600;
    daaa:	8e 85       	ldd	r24, Y+14	; 0x0e
    daac:	9f 85       	ldd	r25, Y+15	; 0x0f
    daae:	28 e5       	ldi	r18, 0x58	; 88
    dab0:	32 e0       	ldi	r19, 0x02	; 2
    dab2:	fc 01       	movw	r30, r24
    dab4:	20 83       	st	Z, r18
    dab6:	31 83       	std	Z+1, r19	; 0x01
    dab8:	87 c0       	rjmp	.+270    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 900)
    daba:	8e 85       	ldd	r24, Y+14	; 0x0e
    dabc:	9f 85       	ldd	r25, Y+15	; 0x0f
    dabe:	fc 01       	movw	r30, r24
    dac0:	80 81       	ld	r24, Z
    dac2:	91 81       	ldd	r25, Z+1	; 0x01
    dac4:	84 38       	cpi	r24, 0x84	; 132
    dac6:	93 40       	sbci	r25, 0x03	; 3
    dac8:	50 f4       	brcc	.+20     	; 0xdade <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1da>
	{
		index = 8;
    daca:	88 e0       	ldi	r24, 0x08	; 8
    dacc:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 800;
    dace:	8e 85       	ldd	r24, Y+14	; 0x0e
    dad0:	9f 85       	ldd	r25, Y+15	; 0x0f
    dad2:	20 e2       	ldi	r18, 0x20	; 32
    dad4:	33 e0       	ldi	r19, 0x03	; 3
    dad6:	fc 01       	movw	r30, r24
    dad8:	20 83       	st	Z, r18
    dada:	31 83       	std	Z+1, r19	; 0x01
    dadc:	75 c0       	rjmp	.+234    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1250)
    dade:	8e 85       	ldd	r24, Y+14	; 0x0e
    dae0:	9f 85       	ldd	r25, Y+15	; 0x0f
    dae2:	fc 01       	movw	r30, r24
    dae4:	80 81       	ld	r24, Z
    dae6:	91 81       	ldd	r25, Z+1	; 0x01
    dae8:	82 3e       	cpi	r24, 0xE2	; 226
    daea:	94 40       	sbci	r25, 0x04	; 4
    daec:	50 f4       	brcc	.+20     	; 0xdb02 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x1fe>
	{
		index = 9;
    daee:	89 e0       	ldi	r24, 0x09	; 9
    daf0:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1000;
    daf2:	8e 85       	ldd	r24, Y+14	; 0x0e
    daf4:	9f 85       	ldd	r25, Y+15	; 0x0f
    daf6:	28 ee       	ldi	r18, 0xE8	; 232
    daf8:	33 e0       	ldi	r19, 0x03	; 3
    dafa:	fc 01       	movw	r30, r24
    dafc:	20 83       	st	Z, r18
    dafe:	31 83       	std	Z+1, r19	; 0x01
    db00:	63 c0       	rjmp	.+198    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 1750)
    db02:	8e 85       	ldd	r24, Y+14	; 0x0e
    db04:	9f 85       	ldd	r25, Y+15	; 0x0f
    db06:	fc 01       	movw	r30, r24
    db08:	80 81       	ld	r24, Z
    db0a:	91 81       	ldd	r25, Z+1	; 0x01
    db0c:	86 3d       	cpi	r24, 0xD6	; 214
    db0e:	96 40       	sbci	r25, 0x06	; 6
    db10:	50 f4       	brcc	.+20     	; 0xdb26 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x222>
	{
		index = 10;
    db12:	8a e0       	ldi	r24, 0x0A	; 10
    db14:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 1500;
    db16:	8e 85       	ldd	r24, Y+14	; 0x0e
    db18:	9f 85       	ldd	r25, Y+15	; 0x0f
    db1a:	2c ed       	ldi	r18, 0xDC	; 220
    db1c:	35 e0       	ldi	r19, 0x05	; 5
    db1e:	fc 01       	movw	r30, r24
    db20:	20 83       	st	Z, r18
    db22:	31 83       	std	Z+1, r19	; 0x01
    db24:	51 c0       	rjmp	.+162    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2250)
    db26:	8e 85       	ldd	r24, Y+14	; 0x0e
    db28:	9f 85       	ldd	r25, Y+15	; 0x0f
    db2a:	fc 01       	movw	r30, r24
    db2c:	80 81       	ld	r24, Z
    db2e:	91 81       	ldd	r25, Z+1	; 0x01
    db30:	8a 3c       	cpi	r24, 0xCA	; 202
    db32:	98 40       	sbci	r25, 0x08	; 8
    db34:	50 f4       	brcc	.+20     	; 0xdb4a <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x246>
	{
		index = 11;
    db36:	8b e0       	ldi	r24, 0x0B	; 11
    db38:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2000;
    db3a:	8e 85       	ldd	r24, Y+14	; 0x0e
    db3c:	9f 85       	ldd	r25, Y+15	; 0x0f
    db3e:	20 ed       	ldi	r18, 0xD0	; 208
    db40:	37 e0       	ldi	r19, 0x07	; 7
    db42:	fc 01       	movw	r30, r24
    db44:	20 83       	st	Z, r18
    db46:	31 83       	std	Z+1, r19	; 0x01
    db48:	3f c0       	rjmp	.+126    	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 2750)
    db4a:	8e 85       	ldd	r24, Y+14	; 0x0e
    db4c:	9f 85       	ldd	r25, Y+15	; 0x0f
    db4e:	fc 01       	movw	r30, r24
    db50:	80 81       	ld	r24, Z
    db52:	91 81       	ldd	r25, Z+1	; 0x01
    db54:	8e 3b       	cpi	r24, 0xBE	; 190
    db56:	9a 40       	sbci	r25, 0x0A	; 10
    db58:	50 f4       	brcc	.+20     	; 0xdb6e <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x26a>
	{
		index = 12;
    db5a:	8c e0       	ldi	r24, 0x0C	; 12
    db5c:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 2500;
    db5e:	8e 85       	ldd	r24, Y+14	; 0x0e
    db60:	9f 85       	ldd	r25, Y+15	; 0x0f
    db62:	24 ec       	ldi	r18, 0xC4	; 196
    db64:	39 e0       	ldi	r19, 0x09	; 9
    db66:	fc 01       	movw	r30, r24
    db68:	20 83       	st	Z, r18
    db6a:	31 83       	std	Z+1, r19	; 0x01
    db6c:	2d c0       	rjmp	.+90     	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 3500)
    db6e:	8e 85       	ldd	r24, Y+14	; 0x0e
    db70:	9f 85       	ldd	r25, Y+15	; 0x0f
    db72:	fc 01       	movw	r30, r24
    db74:	80 81       	ld	r24, Z
    db76:	91 81       	ldd	r25, Z+1	; 0x01
    db78:	8c 3a       	cpi	r24, 0xAC	; 172
    db7a:	9d 40       	sbci	r25, 0x0D	; 13
    db7c:	50 f4       	brcc	.+20     	; 0xdb92 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x28e>
	{
		index = 13;
    db7e:	8d e0       	ldi	r24, 0x0D	; 13
    db80:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 3000;
    db82:	8e 85       	ldd	r24, Y+14	; 0x0e
    db84:	9f 85       	ldd	r25, Y+15	; 0x0f
    db86:	28 eb       	ldi	r18, 0xB8	; 184
    db88:	3b e0       	ldi	r19, 0x0B	; 11
    db8a:	fc 01       	movw	r30, r24
    db8c:	20 83       	st	Z, r18
    db8e:	31 83       	std	Z+1, r19	; 0x01
    db90:	1b c0       	rjmp	.+54     	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else if(*powerMW < 4500)
    db92:	8e 85       	ldd	r24, Y+14	; 0x0e
    db94:	9f 85       	ldd	r25, Y+15	; 0x0f
    db96:	fc 01       	movw	r30, r24
    db98:	80 81       	ld	r24, Z
    db9a:	91 81       	ldd	r25, Z+1	; 0x01
    db9c:	84 39       	cpi	r24, 0x94	; 148
    db9e:	91 41       	sbci	r25, 0x11	; 17
    dba0:	50 f4       	brcc	.+20     	; 0xdbb6 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2b2>
	{
		index = 14;
    dba2:	8e e0       	ldi	r24, 0x0E	; 14
    dba4:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 4000;
    dba6:	8e 85       	ldd	r24, Y+14	; 0x0e
    dba8:	9f 85       	ldd	r25, Y+15	; 0x0f
    dbaa:	20 ea       	ldi	r18, 0xA0	; 160
    dbac:	3f e0       	ldi	r19, 0x0F	; 15
    dbae:	fc 01       	movw	r30, r24
    dbb0:	20 83       	st	Z, r18
    dbb2:	31 83       	std	Z+1, r19	; 0x01
    dbb4:	09 c0       	rjmp	.+18     	; 0xdbc8 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x2c4>
	}
	else
	{
		index = 15;
    dbb6:	8f e0       	ldi	r24, 0x0F	; 15
    dbb8:	8a 83       	std	Y+2, r24	; 0x02
		*powerMW = 5000;
    dbba:	8e 85       	ldd	r24, Y+14	; 0x0e
    dbbc:	9f 85       	ldd	r25, Y+15	; 0x0f
    dbbe:	28 e8       	ldi	r18, 0x88	; 136
    dbc0:	33 e1       	ldi	r19, 0x13	; 19
    dbc2:	fc 01       	movw	r30, r24
    dbc4:	20 83       	st	Z, r18
    dbc6:	31 83       	std	Z+1, r19	; 0x01
	}

	*driveLevel = g_80m_power_table[index];
    dbc8:	8a 81       	ldd	r24, Y+2	; 0x02
    dbca:	88 2f       	mov	r24, r24
    dbcc:	90 e0       	ldi	r25, 0x00	; 0
    dbce:	83 5c       	subi	r24, 0xC3	; 195
    dbd0:	9f 4b       	sbci	r25, 0xBF	; 191
    dbd2:	fc 01       	movw	r30, r24
    dbd4:	20 81       	ld	r18, Z
    dbd6:	88 89       	ldd	r24, Y+16	; 0x10
    dbd8:	99 89       	ldd	r25, Y+17	; 0x11
    dbda:	fc 01       	movw	r30, r24
    dbdc:	20 83       	st	Z, r18
	*modLevelHigh = 0;
    dbde:	8a 89       	ldd	r24, Y+18	; 0x12
    dbe0:	9b 89       	ldd	r25, Y+19	; 0x13
    dbe2:	fc 01       	movw	r30, r24
    dbe4:	10 82       	st	Z, r1
	*modLevelLow = 0;
    dbe6:	8c 89       	ldd	r24, Y+20	; 0x14
    dbe8:	9d 89       	ldd	r25, Y+21	; 0x15
    dbea:	fc 01       	movw	r30, r24
    dbec:	10 82       	st	Z, r1
	*driveLevel = MIN(*driveLevel, MAX_80M_PWR_SETTING);
    dbee:	88 89       	ldd	r24, Y+16	; 0x10
    dbf0:	99 89       	ldd	r25, Y+17	; 0x11
    dbf2:	fc 01       	movw	r30, r24
    dbf4:	80 81       	ld	r24, Z
    dbf6:	8b 87       	std	Y+11, r24	; 0x0b
    dbf8:	8f ef       	ldi	r24, 0xFF	; 255
    dbfa:	90 e0       	ldi	r25, 0x00	; 0
    dbfc:	8c 87       	std	Y+12, r24	; 0x0c
    dbfe:	9d 87       	std	Y+13, r25	; 0x0d
    dc00:	8b 85       	ldd	r24, Y+11	; 0x0b
    dc02:	88 2f       	mov	r24, r24
    dc04:	90 e0       	ldi	r25, 0x00	; 0
    dc06:	2c 85       	ldd	r18, Y+12	; 0x0c
    dc08:	3d 85       	ldd	r19, Y+13	; 0x0d
    dc0a:	28 17       	cp	r18, r24
    dc0c:	39 07       	cpc	r19, r25
    dc0e:	0c f4       	brge	.+2      	; 0xdc12 <_Z22txMilliwattsToSettingsPjPhS0_S0_+0x30e>
    dc10:	c9 01       	movw	r24, r18
    dc12:	28 2f       	mov	r18, r24
    dc14:	88 89       	ldd	r24, Y+16	; 0x10
    dc16:	99 89       	ldd	r25, Y+17	; 0x11
    dc18:	fc 01       	movw	r30, r24
    dc1a:	20 83       	st	Z, r18

	return(ec);
    dc1c:	89 81       	ldd	r24, Y+1	; 0x01
    dc1e:	65 96       	adiw	r28, 0x15	; 21
    dc20:	cd bf       	out	0x3d, r28	; 61
    dc22:	de bf       	out	0x3e, r29	; 62
    dc24:	df 91       	pop	r29
    dc26:	cf 91       	pop	r28
    dc28:	08 95       	ret

0000dc2a <USART0_get_data>:
 * \return Nothing
 */
void USART4_enable_rx()
{
	USART4.CTRLB |= USART_RXEN_bm;
}
    dc2a:	cf 93       	push	r28
    dc2c:	df 93       	push	r29
    dc2e:	cd b7       	in	r28, 0x3d	; 61
    dc30:	de b7       	in	r29, 0x3e	; 62
    dc32:	80 e0       	ldi	r24, 0x00	; 0
    dc34:	98 e0       	ldi	r25, 0x08	; 8
    dc36:	fc 01       	movw	r30, r24
    dc38:	80 81       	ld	r24, Z
    dc3a:	df 91       	pop	r29
    dc3c:	cf 91       	pop	r28
    dc3e:	08 95       	ret

0000dc40 <USART1_init>:
    dc40:	0f 93       	push	r16
    dc42:	1f 93       	push	r17
    dc44:	cf 93       	push	r28
    dc46:	df 93       	push	r29
    dc48:	00 d0       	rcall	.+0      	; 0xdc4a <USART1_init+0xa>
    dc4a:	00 d0       	rcall	.+0      	; 0xdc4c <USART1_init+0xc>
    dc4c:	cd b7       	in	r28, 0x3d	; 61
    dc4e:	de b7       	in	r29, 0x3e	; 62
    dc50:	69 83       	std	Y+1, r22	; 0x01
    dc52:	7a 83       	std	Y+2, r23	; 0x02
    dc54:	8b 83       	std	Y+3, r24	; 0x03
    dc56:	9c 83       	std	Y+4, r25	; 0x04
    dc58:	f8 94       	cli
    dc5a:	00 e2       	ldi	r16, 0x20	; 32
    dc5c:	18 e0       	ldi	r17, 0x08	; 8
    dc5e:	69 81       	ldd	r22, Y+1	; 0x01
    dc60:	7a 81       	ldd	r23, Y+2	; 0x02
    dc62:	8b 81       	ldd	r24, Y+3	; 0x03
    dc64:	9c 81       	ldd	r25, Y+4	; 0x04
    dc66:	0e 94 15 74 	call	0xe82a	; 0xe82a <__floatunsisf>
    dc6a:	dc 01       	movw	r26, r24
    dc6c:	cb 01       	movw	r24, r22
    dc6e:	20 e0       	ldi	r18, 0x00	; 0
    dc70:	30 e0       	ldi	r19, 0x00	; 0
    dc72:	40 e8       	ldi	r20, 0x80	; 128
    dc74:	51 e4       	ldi	r21, 0x41	; 65
    dc76:	bc 01       	movw	r22, r24
    dc78:	cd 01       	movw	r24, r26
    dc7a:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    dc7e:	dc 01       	movw	r26, r24
    dc80:	cb 01       	movw	r24, r22
    dc82:	9c 01       	movw	r18, r24
    dc84:	ad 01       	movw	r20, r26
    dc86:	60 e0       	ldi	r22, 0x00	; 0
    dc88:	7b e1       	ldi	r23, 0x1B	; 27
    dc8a:	87 eb       	ldi	r24, 0xB7	; 183
    dc8c:	9e e4       	ldi	r25, 0x4E	; 78
    dc8e:	0e 94 6d 73 	call	0xe6da	; 0xe6da <__divsf3>
    dc92:	dc 01       	movw	r26, r24
    dc94:	cb 01       	movw	r24, r22
    dc96:	20 e0       	ldi	r18, 0x00	; 0
    dc98:	30 e0       	ldi	r19, 0x00	; 0
    dc9a:	40 e0       	ldi	r20, 0x00	; 0
    dc9c:	5f e3       	ldi	r21, 0x3F	; 63
    dc9e:	bc 01       	movw	r22, r24
    dca0:	cd 01       	movw	r24, r26
    dca2:	0e 94 e5 72 	call	0xe5ca	; 0xe5ca <__addsf3>
    dca6:	dc 01       	movw	r26, r24
    dca8:	cb 01       	movw	r24, r22
    dcaa:	bc 01       	movw	r22, r24
    dcac:	cd 01       	movw	r24, r26
    dcae:	0e 94 e6 73 	call	0xe7cc	; 0xe7cc <__fixunssfsi>
    dcb2:	dc 01       	movw	r26, r24
    dcb4:	cb 01       	movw	r24, r22
    dcb6:	f8 01       	movw	r30, r16
    dcb8:	80 87       	std	Z+8, r24	; 0x08
    dcba:	91 87       	std	Z+9, r25	; 0x09
    dcbc:	80 e2       	ldi	r24, 0x20	; 32
    dcbe:	98 e0       	ldi	r25, 0x08	; 8
    dcc0:	20 e8       	ldi	r18, 0x80	; 128
    dcc2:	fc 01       	movw	r30, r24
    dcc4:	25 83       	std	Z+5, r18	; 0x05
    dcc6:	80 e2       	ldi	r24, 0x20	; 32
    dcc8:	98 e0       	ldi	r25, 0x08	; 8
    dcca:	23 e0       	ldi	r18, 0x03	; 3
    dccc:	fc 01       	movw	r30, r24
    dcce:	27 83       	std	Z+7, r18	; 0x07
    dcd0:	80 e2       	ldi	r24, 0x20	; 32
    dcd2:	98 e0       	ldi	r25, 0x08	; 8
    dcd4:	20 ec       	ldi	r18, 0xC0	; 192
    dcd6:	fc 01       	movw	r30, r24
    dcd8:	26 83       	std	Z+6, r18	; 0x06
    dcda:	78 94       	sei
    dcdc:	80 e0       	ldi	r24, 0x00	; 0
    dcde:	24 96       	adiw	r28, 0x04	; 4
    dce0:	cd bf       	out	0x3d, r28	; 61
    dce2:	de bf       	out	0x3e, r29	; 62
    dce4:	df 91       	pop	r29
    dce6:	cf 91       	pop	r28
    dce8:	1f 91       	pop	r17
    dcea:	0f 91       	pop	r16
    dcec:	08 95       	ret

0000dcee <USART1_enable_tx>:
    dcee:	cf 93       	push	r28
    dcf0:	df 93       	push	r29
    dcf2:	cd b7       	in	r28, 0x3d	; 61
    dcf4:	de b7       	in	r29, 0x3e	; 62
    dcf6:	80 e2       	ldi	r24, 0x20	; 32
    dcf8:	98 e0       	ldi	r25, 0x08	; 8
    dcfa:	20 e2       	ldi	r18, 0x20	; 32
    dcfc:	38 e0       	ldi	r19, 0x08	; 8
    dcfe:	f9 01       	movw	r30, r18
    dd00:	26 81       	ldd	r18, Z+6	; 0x06
    dd02:	20 64       	ori	r18, 0x40	; 64
    dd04:	fc 01       	movw	r30, r24
    dd06:	26 83       	std	Z+6, r18	; 0x06
    dd08:	80 e2       	ldi	r24, 0x20	; 32
    dd0a:	98 e0       	ldi	r25, 0x08	; 8
    dd0c:	20 e2       	ldi	r18, 0x20	; 32
    dd0e:	38 e0       	ldi	r19, 0x08	; 8
    dd10:	f9 01       	movw	r30, r18
    dd12:	25 81       	ldd	r18, Z+5	; 0x05
    dd14:	20 62       	ori	r18, 0x20	; 32
    dd16:	fc 01       	movw	r30, r24
    dd18:	25 83       	std	Z+5, r18	; 0x05
    dd1a:	00 00       	nop
    dd1c:	df 91       	pop	r29
    dd1e:	cf 91       	pop	r28
    dd20:	08 95       	ret

0000dd22 <USART1_disable>:
    dd22:	cf 93       	push	r28
    dd24:	df 93       	push	r29
    dd26:	cd b7       	in	r28, 0x3d	; 61
    dd28:	de b7       	in	r29, 0x3e	; 62
    dd2a:	80 e2       	ldi	r24, 0x20	; 32
    dd2c:	98 e0       	ldi	r25, 0x08	; 8
    dd2e:	20 e2       	ldi	r18, 0x20	; 32
    dd30:	38 e0       	ldi	r19, 0x08	; 8
    dd32:	f9 01       	movw	r30, r18
    dd34:	26 81       	ldd	r18, Z+6	; 0x06
    dd36:	2f 73       	andi	r18, 0x3F	; 63
    dd38:	fc 01       	movw	r30, r24
    dd3a:	26 83       	std	Z+6, r18	; 0x06
    dd3c:	00 00       	nop
    dd3e:	df 91       	pop	r29
    dd40:	cf 91       	pop	r28
    dd42:	08 95       	ret

0000dd44 <USART1_get_data>:
    dd44:	cf 93       	push	r28
    dd46:	df 93       	push	r29
    dd48:	cd b7       	in	r28, 0x3d	; 61
    dd4a:	de b7       	in	r29, 0x3e	; 62
    dd4c:	80 e2       	ldi	r24, 0x20	; 32
    dd4e:	98 e0       	ldi	r25, 0x08	; 8
    dd50:	fc 01       	movw	r30, r24
    dd52:	80 81       	ld	r24, Z
    dd54:	df 91       	pop	r29
    dd56:	cf 91       	pop	r28
    dd58:	08 95       	ret

0000dd5a <USART4_init>:
    dd5a:	0f 93       	push	r16
    dd5c:	1f 93       	push	r17
    dd5e:	cf 93       	push	r28
    dd60:	df 93       	push	r29
    dd62:	00 d0       	rcall	.+0      	; 0xdd64 <USART4_init+0xa>
    dd64:	00 d0       	rcall	.+0      	; 0xdd66 <USART4_init+0xc>
    dd66:	cd b7       	in	r28, 0x3d	; 61
    dd68:	de b7       	in	r29, 0x3e	; 62
    dd6a:	69 83       	std	Y+1, r22	; 0x01
    dd6c:	7a 83       	std	Y+2, r23	; 0x02
    dd6e:	8b 83       	std	Y+3, r24	; 0x03
    dd70:	9c 83       	std	Y+4, r25	; 0x04
    dd72:	00 e8       	ldi	r16, 0x80	; 128
    dd74:	18 e0       	ldi	r17, 0x08	; 8
    dd76:	69 81       	ldd	r22, Y+1	; 0x01
    dd78:	7a 81       	ldd	r23, Y+2	; 0x02
    dd7a:	8b 81       	ldd	r24, Y+3	; 0x03
    dd7c:	9c 81       	ldd	r25, Y+4	; 0x04
    dd7e:	0e 94 15 74 	call	0xe82a	; 0xe82a <__floatunsisf>
    dd82:	dc 01       	movw	r26, r24
    dd84:	cb 01       	movw	r24, r22
    dd86:	20 e0       	ldi	r18, 0x00	; 0
    dd88:	30 e0       	ldi	r19, 0x00	; 0
    dd8a:	40 e8       	ldi	r20, 0x80	; 128
    dd8c:	51 e4       	ldi	r21, 0x41	; 65
    dd8e:	bc 01       	movw	r22, r24
    dd90:	cd 01       	movw	r24, r26
    dd92:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    dd96:	dc 01       	movw	r26, r24
    dd98:	cb 01       	movw	r24, r22
    dd9a:	9c 01       	movw	r18, r24
    dd9c:	ad 01       	movw	r20, r26
    dd9e:	60 e0       	ldi	r22, 0x00	; 0
    dda0:	7b e1       	ldi	r23, 0x1B	; 27
    dda2:	87 eb       	ldi	r24, 0xB7	; 183
    dda4:	9e e4       	ldi	r25, 0x4E	; 78
    dda6:	0e 94 6d 73 	call	0xe6da	; 0xe6da <__divsf3>
    ddaa:	dc 01       	movw	r26, r24
    ddac:	cb 01       	movw	r24, r22
    ddae:	20 e0       	ldi	r18, 0x00	; 0
    ddb0:	30 e0       	ldi	r19, 0x00	; 0
    ddb2:	40 e0       	ldi	r20, 0x00	; 0
    ddb4:	5f e3       	ldi	r21, 0x3F	; 63
    ddb6:	bc 01       	movw	r22, r24
    ddb8:	cd 01       	movw	r24, r26
    ddba:	0e 94 e5 72 	call	0xe5ca	; 0xe5ca <__addsf3>
    ddbe:	dc 01       	movw	r26, r24
    ddc0:	cb 01       	movw	r24, r22
    ddc2:	bc 01       	movw	r22, r24
    ddc4:	cd 01       	movw	r24, r26
    ddc6:	0e 94 e6 73 	call	0xe7cc	; 0xe7cc <__fixunssfsi>
    ddca:	dc 01       	movw	r26, r24
    ddcc:	cb 01       	movw	r24, r22
    ddce:	f8 01       	movw	r30, r16
    ddd0:	80 87       	std	Z+8, r24	; 0x08
    ddd2:	91 87       	std	Z+9, r25	; 0x09
    ddd4:	80 e8       	ldi	r24, 0x80	; 128
    ddd6:	98 e0       	ldi	r25, 0x08	; 8
    ddd8:	20 e8       	ldi	r18, 0x80	; 128
    ddda:	fc 01       	movw	r30, r24
    dddc:	25 83       	std	Z+5, r18	; 0x05
    ddde:	80 e8       	ldi	r24, 0x80	; 128
    dde0:	98 e0       	ldi	r25, 0x08	; 8
    dde2:	20 ec       	ldi	r18, 0xC0	; 192
    dde4:	fc 01       	movw	r30, r24
    dde6:	26 83       	std	Z+6, r18	; 0x06
    dde8:	80 e0       	ldi	r24, 0x00	; 0
    ddea:	24 96       	adiw	r28, 0x04	; 4
    ddec:	cd bf       	out	0x3d, r28	; 61
    ddee:	de bf       	out	0x3e, r29	; 62
    ddf0:	df 91       	pop	r29
    ddf2:	cf 91       	pop	r28
    ddf4:	1f 91       	pop	r17
    ddf6:	0f 91       	pop	r16
    ddf8:	08 95       	ret

0000ddfa <USART4_enable_tx>:
 * 2. Enables the USART module by setting the TX enable-bit in the USART control register
 *
 * \return Nothing
 */
void USART4_enable_tx()
{
    ddfa:	cf 93       	push	r28
    ddfc:	df 93       	push	r29
    ddfe:	cd b7       	in	r28, 0x3d	; 61
    de00:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB |= USART_TXEN_bm;
    de02:	80 e8       	ldi	r24, 0x80	; 128
    de04:	98 e0       	ldi	r25, 0x08	; 8
    de06:	20 e8       	ldi	r18, 0x80	; 128
    de08:	38 e0       	ldi	r19, 0x08	; 8
    de0a:	f9 01       	movw	r30, r18
    de0c:	26 81       	ldd	r18, Z+6	; 0x06
    de0e:	20 64       	ori	r18, 0x40	; 64
    de10:	fc 01       	movw	r30, r24
    de12:	26 83       	std	Z+6, r18	; 0x06
	USART4.CTRLA |= 1 << USART_DREIE_bp; /* Transmit Data Ready Interrupt Enable: enable */
    de14:	80 e8       	ldi	r24, 0x80	; 128
    de16:	98 e0       	ldi	r25, 0x08	; 8
    de18:	20 e8       	ldi	r18, 0x80	; 128
    de1a:	38 e0       	ldi	r19, 0x08	; 8
    de1c:	f9 01       	movw	r30, r18
    de1e:	25 81       	ldd	r18, Z+5	; 0x05
    de20:	20 62       	ori	r18, 0x20	; 32
    de22:	fc 01       	movw	r30, r24
    de24:	25 83       	std	Z+5, r18	; 0x05
//	USART4.STATUS |= 1 << USART_TXEN_bp; /* Clear any existing flag setting */
}
    de26:	00 00       	nop
    de28:	df 91       	pop	r29
    de2a:	cf 91       	pop	r28
    de2c:	08 95       	ret

0000de2e <USART4_disable>:
 * 2. If supported by the clock system, disables the clock to the USART
 *
 * \return Nothing
 */
void USART4_disable()
{
    de2e:	cf 93       	push	r28
    de30:	df 93       	push	r29
    de32:	cd b7       	in	r28, 0x3d	; 61
    de34:	de b7       	in	r29, 0x3e	; 62
	USART4.CTRLB &= ~(USART_RXEN_bm | USART_TXEN_bm);
    de36:	80 e8       	ldi	r24, 0x80	; 128
    de38:	98 e0       	ldi	r25, 0x08	; 8
    de3a:	20 e8       	ldi	r18, 0x80	; 128
    de3c:	38 e0       	ldi	r19, 0x08	; 8
    de3e:	f9 01       	movw	r30, r18
    de40:	26 81       	ldd	r18, Z+6	; 0x06
    de42:	2f 73       	andi	r18, 0x3F	; 63
    de44:	fc 01       	movw	r30, r24
    de46:	26 83       	std	Z+6, r18	; 0x06
}
    de48:	00 00       	nop
    de4a:	df 91       	pop	r29
    de4c:	cf 91       	pop	r28
    de4e:	08 95       	ret

0000de50 <USART4_get_data>:
 * \brief Get recieved data from USART4
 *
 * \return Data register from USART4 module
 */
uint8_t USART4_get_data()
{
    de50:	cf 93       	push	r28
    de52:	df 93       	push	r29
    de54:	cd b7       	in	r28, 0x3d	; 61
    de56:	de b7       	in	r29, 0x3e	; 62
	return USART4.RXDATAL;
    de58:	80 e8       	ldi	r24, 0x80	; 128
    de5a:	98 e0       	ldi	r25, 0x08	; 8
    de5c:	fc 01       	movw	r30, r24
    de5e:	80 81       	ld	r24, Z
}
    de60:	df 91       	pop	r29
    de62:	cf 91       	pop	r28
    de64:	08 95       	ret

0000de66 <_Z7timeDifmm>:
    (ltm.tm_year-70)*31536000L + ((ltm.tm_year-69)/4)*86400L -
    ((ltm.tm_year-1)/100)*86400L + ((ltm.tm_year+299)/400)*86400L;
  }

  return result;
}
    de66:	ef 92       	push	r14
    de68:	ff 92       	push	r15
    de6a:	0f 93       	push	r16
    de6c:	1f 93       	push	r17
    de6e:	cf 93       	push	r28
    de70:	df 93       	push	r29
    de72:	cd b7       	in	r28, 0x3d	; 61
    de74:	de b7       	in	r29, 0x3e	; 62
    de76:	2c 97       	sbiw	r28, 0x0c	; 12
    de78:	cd bf       	out	0x3d, r28	; 61
    de7a:	de bf       	out	0x3e, r29	; 62
    de7c:	6d 83       	std	Y+5, r22	; 0x05
    de7e:	7e 83       	std	Y+6, r23	; 0x06
    de80:	8f 83       	std	Y+7, r24	; 0x07
    de82:	98 87       	std	Y+8, r25	; 0x08
    de84:	29 87       	std	Y+9, r18	; 0x09
    de86:	3a 87       	std	Y+10, r19	; 0x0a
    de88:	4b 87       	std	Y+11, r20	; 0x0b
    de8a:	5c 87       	std	Y+12, r21	; 0x0c
    de8c:	2d 81       	ldd	r18, Y+5	; 0x05
    de8e:	3e 81       	ldd	r19, Y+6	; 0x06
    de90:	4f 81       	ldd	r20, Y+7	; 0x07
    de92:	58 85       	ldd	r21, Y+8	; 0x08
    de94:	89 85       	ldd	r24, Y+9	; 0x09
    de96:	9a 85       	ldd	r25, Y+10	; 0x0a
    de98:	ab 85       	ldd	r26, Y+11	; 0x0b
    de9a:	bc 85       	ldd	r27, Y+12	; 0x0c
    de9c:	82 17       	cp	r24, r18
    de9e:	93 07       	cpc	r25, r19
    dea0:	a4 07       	cpc	r26, r20
    dea2:	b5 07       	cpc	r27, r21
    dea4:	a8 f4       	brcc	.+42     	; 0xded0 <_Z7timeDifmm+0x6a>
    dea6:	2d 81       	ldd	r18, Y+5	; 0x05
    dea8:	3e 81       	ldd	r19, Y+6	; 0x06
    deaa:	4f 81       	ldd	r20, Y+7	; 0x07
    deac:	58 85       	ldd	r21, Y+8	; 0x08
    deae:	89 85       	ldd	r24, Y+9	; 0x09
    deb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    deb2:	ab 85       	ldd	r26, Y+11	; 0x0b
    deb4:	bc 85       	ldd	r27, Y+12	; 0x0c
    deb6:	79 01       	movw	r14, r18
    deb8:	8a 01       	movw	r16, r20
    deba:	e8 1a       	sub	r14, r24
    debc:	f9 0a       	sbc	r15, r25
    debe:	0a 0b       	sbc	r16, r26
    dec0:	1b 0b       	sbc	r17, r27
    dec2:	d8 01       	movw	r26, r16
    dec4:	c7 01       	movw	r24, r14
    dec6:	89 83       	std	Y+1, r24	; 0x01
    dec8:	9a 83       	std	Y+2, r25	; 0x02
    deca:	ab 83       	std	Y+3, r26	; 0x03
    decc:	bc 83       	std	Y+4, r27	; 0x04
    dece:	14 c0       	rjmp	.+40     	; 0xdef8 <_Z7timeDifmm+0x92>
    ded0:	2d 81       	ldd	r18, Y+5	; 0x05
    ded2:	3e 81       	ldd	r19, Y+6	; 0x06
    ded4:	4f 81       	ldd	r20, Y+7	; 0x07
    ded6:	58 85       	ldd	r21, Y+8	; 0x08
    ded8:	89 85       	ldd	r24, Y+9	; 0x09
    deda:	9a 85       	ldd	r25, Y+10	; 0x0a
    dedc:	ab 85       	ldd	r26, Y+11	; 0x0b
    dede:	bc 85       	ldd	r27, Y+12	; 0x0c
    dee0:	79 01       	movw	r14, r18
    dee2:	8a 01       	movw	r16, r20
    dee4:	e8 1a       	sub	r14, r24
    dee6:	f9 0a       	sbc	r15, r25
    dee8:	0a 0b       	sbc	r16, r26
    deea:	1b 0b       	sbc	r17, r27
    deec:	d8 01       	movw	r26, r16
    deee:	c7 01       	movw	r24, r14
    def0:	89 83       	std	Y+1, r24	; 0x01
    def2:	9a 83       	std	Y+2, r25	; 0x02
    def4:	ab 83       	std	Y+3, r26	; 0x03
    def6:	bc 83       	std	Y+4, r27	; 0x04
    def8:	89 81       	ldd	r24, Y+1	; 0x01
    defa:	9a 81       	ldd	r25, Y+2	; 0x02
    defc:	ab 81       	ldd	r26, Y+3	; 0x03
    defe:	bc 81       	ldd	r27, Y+4	; 0x04
    df00:	bc 01       	movw	r22, r24
    df02:	cd 01       	movw	r24, r26
    df04:	2c 96       	adiw	r28, 0x0c	; 12
    df06:	cd bf       	out	0x3d, r28	; 61
    df08:	de bf       	out	0x3e, r29	; 62
    df0a:	df 91       	pop	r29
    df0c:	cf 91       	pop	r28
    df0e:	1f 91       	pop	r17
    df10:	0f 91       	pop	r16
    df12:	ff 90       	pop	r15
    df14:	ef 90       	pop	r14
    df16:	08 95       	ret

0000df18 <_Z11only_digitsPc>:

/** 
 * Checks a string to see if it contains only numerical characters
 */
bool only_digits(char *s)
{
    df18:	cf 93       	push	r28
    df1a:	df 93       	push	r29
    df1c:	00 d0       	rcall	.+0      	; 0xdf1e <_Z11only_digitsPc+0x6>
    df1e:	cd b7       	in	r28, 0x3d	; 61
    df20:	de b7       	in	r29, 0x3e	; 62
    df22:	89 83       	std	Y+1, r24	; 0x01
    df24:	9a 83       	std	Y+2, r25	; 0x02
	while(*s)
    df26:	89 81       	ldd	r24, Y+1	; 0x01
    df28:	9a 81       	ldd	r25, Y+2	; 0x02
    df2a:	fc 01       	movw	r30, r24
    df2c:	80 81       	ld	r24, Z
    df2e:	88 23       	and	r24, r24
    df30:	a1 f0       	breq	.+40     	; 0xdf5a <_Z11only_digitsPc+0x42>
	{
		if(isdigit(*s++) == 0)
    df32:	89 81       	ldd	r24, Y+1	; 0x01
    df34:	9a 81       	ldd	r25, Y+2	; 0x02
    df36:	9c 01       	movw	r18, r24
    df38:	2f 5f       	subi	r18, 0xFF	; 255
    df3a:	3f 4f       	sbci	r19, 0xFF	; 255
    df3c:	29 83       	std	Y+1, r18	; 0x01
    df3e:	3a 83       	std	Y+2, r19	; 0x02
    df40:	fc 01       	movw	r30, r24
    df42:	80 81       	ld	r24, Z
    df44:	88 2f       	mov	r24, r24
    df46:	90 e0       	ldi	r25, 0x00	; 0
    df48:	c0 97       	sbiw	r24, 0x30	; 48
    df4a:	21 e0       	ldi	r18, 0x01	; 1
    df4c:	0a 97       	sbiw	r24, 0x0a	; 10
    df4e:	08 f4       	brcc	.+2      	; 0xdf52 <_Z11only_digitsPc+0x3a>
    df50:	20 e0       	ldi	r18, 0x00	; 0
    df52:	22 23       	and	r18, r18
    df54:	41 f3       	breq	.-48     	; 0xdf26 <_Z11only_digitsPc+0xe>
		{
			return( false);
    df56:	80 e0       	ldi	r24, 0x00	; 0
    df58:	01 c0       	rjmp	.+2      	; 0xdf5c <_Z11only_digitsPc+0x44>
		}
	}

	return( true);
    df5a:	81 e0       	ldi	r24, 0x01	; 1
}
    df5c:	0f 90       	pop	r0
    df5e:	0f 90       	pop	r0
    df60:	df 91       	pop	r29
    df62:	cf 91       	pop	r28
    df64:	08 95       	ret

0000df66 <_Z15frequencyStringPcm>:
 * result = pointer to a character sting to hold the frequency string
 * freq = the frequency value to be represented as a string
 * Returns 1 if an error is detected
 */
bool frequencyString(char* result, uint32_t freq)
{
    df66:	cf 93       	push	r28
    df68:	df 93       	push	r29
    df6a:	cd b7       	in	r28, 0x3d	; 61
    df6c:	de b7       	in	r29, 0x3e	; 62
    df6e:	2b 97       	sbiw	r28, 0x0b	; 11
    df70:	cd bf       	out	0x3d, r28	; 61
    df72:	de bf       	out	0x3e, r29	; 62
    df74:	8e 83       	std	Y+6, r24	; 0x06
    df76:	9f 83       	std	Y+7, r25	; 0x07
    df78:	48 87       	std	Y+8, r20	; 0x08
    df7a:	59 87       	std	Y+9, r21	; 0x09
    df7c:	6a 87       	std	Y+10, r22	; 0x0a
    df7e:	7b 87       	std	Y+11, r23	; 0x0b
	bool failure = true;
    df80:	81 e0       	ldi	r24, 0x01	; 1
    df82:	89 83       	std	Y+1, r24	; 0x01
	
	if(!result)
    df84:	8e 81       	ldd	r24, Y+6	; 0x06
    df86:	9f 81       	ldd	r25, Y+7	; 0x07
    df88:	89 2b       	or	r24, r25
    df8a:	11 f4       	brne	.+4      	; 0xdf90 <_Z15frequencyStringPcm+0x2a>
	{
		return(failure);
    df8c:	89 81       	ldd	r24, Y+1	; 0x01
    df8e:	61 c0       	rjmp	.+194    	; 0xe052 <_Z15frequencyStringPcm+0xec>
	}
	
	if((freq > 3500000) && (freq < 4000000)) // Accept only a Hz value to be expressed in kHz
    df90:	88 85       	ldd	r24, Y+8	; 0x08
    df92:	99 85       	ldd	r25, Y+9	; 0x09
    df94:	aa 85       	ldd	r26, Y+10	; 0x0a
    df96:	bb 85       	ldd	r27, Y+11	; 0x0b
    df98:	81 3e       	cpi	r24, 0xE1	; 225
    df9a:	97 46       	sbci	r25, 0x67	; 103
    df9c:	a5 43       	sbci	r26, 0x35	; 53
    df9e:	b1 05       	cpc	r27, r1
    dfa0:	08 f4       	brcc	.+2      	; 0xdfa4 <_Z15frequencyStringPcm+0x3e>
    dfa2:	56 c0       	rjmp	.+172    	; 0xe050 <_Z15frequencyStringPcm+0xea>
    dfa4:	88 85       	ldd	r24, Y+8	; 0x08
    dfa6:	99 85       	ldd	r25, Y+9	; 0x09
    dfa8:	aa 85       	ldd	r26, Y+10	; 0x0a
    dfaa:	bb 85       	ldd	r27, Y+11	; 0x0b
    dfac:	81 15       	cp	r24, r1
    dfae:	99 40       	sbci	r25, 0x09	; 9
    dfb0:	ad 43       	sbci	r26, 0x3D	; 61
    dfb2:	b1 05       	cpc	r27, r1
    dfb4:	08 f0       	brcs	.+2      	; 0xdfb8 <_Z15frequencyStringPcm+0x52>
    dfb6:	4c c0       	rjmp	.+152    	; 0xe050 <_Z15frequencyStringPcm+0xea>
	{
		uint32_t frac = (freq % 1000)/100;		
    dfb8:	88 85       	ldd	r24, Y+8	; 0x08
    dfba:	99 85       	ldd	r25, Y+9	; 0x09
    dfbc:	aa 85       	ldd	r26, Y+10	; 0x0a
    dfbe:	bb 85       	ldd	r27, Y+11	; 0x0b
    dfc0:	28 ee       	ldi	r18, 0xE8	; 232
    dfc2:	33 e0       	ldi	r19, 0x03	; 3
    dfc4:	40 e0       	ldi	r20, 0x00	; 0
    dfc6:	50 e0       	ldi	r21, 0x00	; 0
    dfc8:	bc 01       	movw	r22, r24
    dfca:	cd 01       	movw	r24, r26
    dfcc:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    dfd0:	dc 01       	movw	r26, r24
    dfd2:	cb 01       	movw	r24, r22
    dfd4:	24 e6       	ldi	r18, 0x64	; 100
    dfd6:	30 e0       	ldi	r19, 0x00	; 0
    dfd8:	40 e0       	ldi	r20, 0x00	; 0
    dfda:	50 e0       	ldi	r21, 0x00	; 0
    dfdc:	bc 01       	movw	r22, r24
    dfde:	cd 01       	movw	r24, r26
    dfe0:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    dfe4:	da 01       	movw	r26, r20
    dfe6:	c9 01       	movw	r24, r18
    dfe8:	8a 83       	std	Y+2, r24	; 0x02
    dfea:	9b 83       	std	Y+3, r25	; 0x03
    dfec:	ac 83       	std	Y+4, r26	; 0x04
    dfee:	bd 83       	std	Y+5, r27	; 0x05
		sprintf(result, "%lu.%1lu kHz", freq/1000, frac);
    dff0:	88 85       	ldd	r24, Y+8	; 0x08
    dff2:	99 85       	ldd	r25, Y+9	; 0x09
    dff4:	aa 85       	ldd	r26, Y+10	; 0x0a
    dff6:	bb 85       	ldd	r27, Y+11	; 0x0b
    dff8:	28 ee       	ldi	r18, 0xE8	; 232
    dffa:	33 e0       	ldi	r19, 0x03	; 3
    dffc:	40 e0       	ldi	r20, 0x00	; 0
    dffe:	50 e0       	ldi	r21, 0x00	; 0
    e000:	bc 01       	movw	r22, r24
    e002:	cd 01       	movw	r24, r26
    e004:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    e008:	da 01       	movw	r26, r20
    e00a:	c9 01       	movw	r24, r18
    e00c:	2d 81       	ldd	r18, Y+5	; 0x05
    e00e:	2f 93       	push	r18
    e010:	2c 81       	ldd	r18, Y+4	; 0x04
    e012:	2f 93       	push	r18
    e014:	2b 81       	ldd	r18, Y+3	; 0x03
    e016:	2f 93       	push	r18
    e018:	2a 81       	ldd	r18, Y+2	; 0x02
    e01a:	2f 93       	push	r18
    e01c:	2b 2f       	mov	r18, r27
    e01e:	2f 93       	push	r18
    e020:	2a 2f       	mov	r18, r26
    e022:	2f 93       	push	r18
    e024:	29 2f       	mov	r18, r25
    e026:	2f 93       	push	r18
    e028:	8f 93       	push	r24
    e02a:	83 ee       	ldi	r24, 0xE3	; 227
    e02c:	94 e4       	ldi	r25, 0x44	; 68
    e02e:	89 2f       	mov	r24, r25
    e030:	8f 93       	push	r24
    e032:	83 ee       	ldi	r24, 0xE3	; 227
    e034:	94 e4       	ldi	r25, 0x44	; 68
    e036:	8f 93       	push	r24
    e038:	8f 81       	ldd	r24, Y+7	; 0x07
    e03a:	8f 93       	push	r24
    e03c:	8e 81       	ldd	r24, Y+6	; 0x06
    e03e:	8f 93       	push	r24
    e040:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    e044:	8d b7       	in	r24, 0x3d	; 61
    e046:	9e b7       	in	r25, 0x3e	; 62
    e048:	0c 96       	adiw	r24, 0x0c	; 12
    e04a:	cd bf       	out	0x3d, r28	; 61
    e04c:	de bf       	out	0x3e, r29	; 62
		
		failure = false;
    e04e:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return(failure);	
    e050:	89 81       	ldd	r24, Y+1	; 0x01
}
    e052:	2b 96       	adiw	r28, 0x0b	; 11
    e054:	cd bf       	out	0x3d, r28	; 61
    e056:	de bf       	out	0x3e, r29	; 62
    e058:	df 91       	pop	r29
    e05a:	cf 91       	pop	r28
    e05c:	08 95       	ret

0000e05e <_Z12frequencyValPcPm>:
 * str = pointer to a string containing the frequency string
 * result = pointer to a Frequency_Hz variable to hold the frequency in Hz
 * Returns 1 if an error is detected
 */
bool frequencyVal(char* str, Frequency_Hz* result)
{
    e05e:	ef 92       	push	r14
    e060:	ff 92       	push	r15
    e062:	0f 93       	push	r16
    e064:	1f 93       	push	r17
    e066:	cf 93       	push	r28
    e068:	df 93       	push	r29
    e06a:	cd b7       	in	r28, 0x3d	; 61
    e06c:	de b7       	in	r29, 0x3e	; 62
    e06e:	65 97       	sbiw	r28, 0x15	; 21
    e070:	cd bf       	out	0x3d, r28	; 61
    e072:	de bf       	out	0x3e, r29	; 62
    e074:	8a 8b       	std	Y+18, r24	; 0x12
    e076:	9b 8b       	std	Y+19, r25	; 0x13
    e078:	6c 8b       	std	Y+20, r22	; 0x14
    e07a:	7d 8b       	std	Y+21, r23	; 0x15
	bool failure = true;
    e07c:	81 e0       	ldi	r24, 0x01	; 1
    e07e:	89 83       	std	Y+1, r24	; 0x01
	
	if(!str)
    e080:	8a 89       	ldd	r24, Y+18	; 0x12
    e082:	9b 89       	ldd	r25, Y+19	; 0x13
    e084:	89 2b       	or	r24, r25
    e086:	11 f4       	brne	.+4      	; 0xe08c <_Z12frequencyValPcPm+0x2e>
	{
		return(failure);
    e088:	89 81       	ldd	r24, Y+1	; 0x01
    e08a:	a4 c1       	rjmp	.+840    	; 0xe3d4 <_Z12frequencyValPcPm+0x376>
	}
	
	int decimal = '.';
    e08c:	8e e2       	ldi	r24, 0x2E	; 46
    e08e:	90 e0       	ldi	r25, 0x00	; 0
    e090:	8a 87       	std	Y+10, r24	; 0x0a
    e092:	9b 87       	std	Y+11, r25	; 0x0b
	char* decimalLocation = strchr(str, decimal);
    e094:	2a 85       	ldd	r18, Y+10	; 0x0a
    e096:	3b 85       	ldd	r19, Y+11	; 0x0b
    e098:	8a 89       	ldd	r24, Y+18	; 0x12
    e09a:	9b 89       	ldd	r25, Y+19	; 0x13
    e09c:	b9 01       	movw	r22, r18
    e09e:	0e 94 9a 77 	call	0xef34	; 0xef34 <strchr>
    e0a2:	8c 87       	std	Y+12, r24	; 0x0c
    e0a4:	9d 87       	std	Y+13, r25	; 0x0d
	Frequency_Hz temp;
	
	if(decimalLocation) // Assume Hz or kHz
    e0a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    e0a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    e0aa:	89 2b       	or	r24, r25
    e0ac:	09 f4       	brne	.+2      	; 0xe0b0 <_Z12frequencyValPcPm+0x52>
    e0ae:	d7 c0       	rjmp	.+430    	; 0xe25e <_Z12frequencyValPcPm+0x200>
	{
		float f = atof(str);
    e0b0:	8a 89       	ldd	r24, Y+18	; 0x12
    e0b2:	9b 89       	ldd	r25, Y+19	; 0x13
    e0b4:	0e 94 37 77 	call	0xee6e	; 0xee6e <atof>
    e0b8:	dc 01       	movw	r26, r24
    e0ba:	cb 01       	movw	r24, r22
    e0bc:	8a 83       	std	Y+2, r24	; 0x02
    e0be:	9b 83       	std	Y+3, r25	; 0x03
    e0c0:	ac 83       	std	Y+4, r26	; 0x04
    e0c2:	bd 83       	std	Y+5, r27	; 0x05
		
		if((f > 3.5) && (f < 4.0))
    e0c4:	20 e0       	ldi	r18, 0x00	; 0
    e0c6:	30 e0       	ldi	r19, 0x00	; 0
    e0c8:	40 e6       	ldi	r20, 0x60	; 96
    e0ca:	50 e4       	ldi	r21, 0x40	; 64
    e0cc:	6a 81       	ldd	r22, Y+2	; 0x02
    e0ce:	7b 81       	ldd	r23, Y+3	; 0x03
    e0d0:	8c 81       	ldd	r24, Y+4	; 0x04
    e0d2:	9d 81       	ldd	r25, Y+5	; 0x05
    e0d4:	0e 94 08 75 	call	0xea10	; 0xea10 <__gesf2>
    e0d8:	18 16       	cp	r1, r24
    e0da:	f4 f4       	brge	.+60     	; 0xe118 <_Z12frequencyValPcPm+0xba>
    e0dc:	20 e0       	ldi	r18, 0x00	; 0
    e0de:	30 e0       	ldi	r19, 0x00	; 0
    e0e0:	40 e8       	ldi	r20, 0x80	; 128
    e0e2:	50 e4       	ldi	r21, 0x40	; 64
    e0e4:	6a 81       	ldd	r22, Y+2	; 0x02
    e0e6:	7b 81       	ldd	r23, Y+3	; 0x03
    e0e8:	8c 81       	ldd	r24, Y+4	; 0x04
    e0ea:	9d 81       	ldd	r25, Y+5	; 0x05
    e0ec:	0e 94 68 73 	call	0xe6d0	; 0xe6d0 <__cmpsf2>
    e0f0:	88 23       	and	r24, r24
    e0f2:	94 f4       	brge	.+36     	; 0xe118 <_Z12frequencyValPcPm+0xba>
		{
			f *= 1000000.;
    e0f4:	20 e0       	ldi	r18, 0x00	; 0
    e0f6:	34 e2       	ldi	r19, 0x24	; 36
    e0f8:	44 e7       	ldi	r20, 0x74	; 116
    e0fa:	59 e4       	ldi	r21, 0x49	; 73
    e0fc:	6a 81       	ldd	r22, Y+2	; 0x02
    e0fe:	7b 81       	ldd	r23, Y+3	; 0x03
    e100:	8c 81       	ldd	r24, Y+4	; 0x04
    e102:	9d 81       	ldd	r25, Y+5	; 0x05
    e104:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    e108:	dc 01       	movw	r26, r24
    e10a:	cb 01       	movw	r24, r22
    e10c:	8a 83       	std	Y+2, r24	; 0x02
    e10e:	9b 83       	std	Y+3, r25	; 0x03
    e110:	ac 83       	std	Y+4, r26	; 0x04
    e112:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    e114:	19 82       	std	Y+1, r1	; 0x01
    e116:	43 c0       	rjmp	.+134    	; 0xe19e <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500.) && (f < 4000.))
    e118:	20 e0       	ldi	r18, 0x00	; 0
    e11a:	30 ec       	ldi	r19, 0xC0	; 192
    e11c:	4a e5       	ldi	r20, 0x5A	; 90
    e11e:	55 e4       	ldi	r21, 0x45	; 69
    e120:	6a 81       	ldd	r22, Y+2	; 0x02
    e122:	7b 81       	ldd	r23, Y+3	; 0x03
    e124:	8c 81       	ldd	r24, Y+4	; 0x04
    e126:	9d 81       	ldd	r25, Y+5	; 0x05
    e128:	0e 94 08 75 	call	0xea10	; 0xea10 <__gesf2>
    e12c:	18 16       	cp	r1, r24
    e12e:	f4 f4       	brge	.+60     	; 0xe16c <_Z12frequencyValPcPm+0x10e>
    e130:	20 e0       	ldi	r18, 0x00	; 0
    e132:	30 e0       	ldi	r19, 0x00	; 0
    e134:	4a e7       	ldi	r20, 0x7A	; 122
    e136:	55 e4       	ldi	r21, 0x45	; 69
    e138:	6a 81       	ldd	r22, Y+2	; 0x02
    e13a:	7b 81       	ldd	r23, Y+3	; 0x03
    e13c:	8c 81       	ldd	r24, Y+4	; 0x04
    e13e:	9d 81       	ldd	r25, Y+5	; 0x05
    e140:	0e 94 68 73 	call	0xe6d0	; 0xe6d0 <__cmpsf2>
    e144:	88 23       	and	r24, r24
    e146:	94 f4       	brge	.+36     	; 0xe16c <_Z12frequencyValPcPm+0x10e>
		{
			f *= 1000.;
    e148:	20 e0       	ldi	r18, 0x00	; 0
    e14a:	30 e0       	ldi	r19, 0x00	; 0
    e14c:	4a e7       	ldi	r20, 0x7A	; 122
    e14e:	54 e4       	ldi	r21, 0x44	; 68
    e150:	6a 81       	ldd	r22, Y+2	; 0x02
    e152:	7b 81       	ldd	r23, Y+3	; 0x03
    e154:	8c 81       	ldd	r24, Y+4	; 0x04
    e156:	9d 81       	ldd	r25, Y+5	; 0x05
    e158:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    e15c:	dc 01       	movw	r26, r24
    e15e:	cb 01       	movw	r24, r22
    e160:	8a 83       	std	Y+2, r24	; 0x02
    e162:	9b 83       	std	Y+3, r25	; 0x03
    e164:	ac 83       	std	Y+4, r26	; 0x04
    e166:	bd 83       	std	Y+5, r27	; 0x05
			failure = false;
    e168:	19 82       	std	Y+1, r1	; 0x01
    e16a:	19 c0       	rjmp	.+50     	; 0xe19e <_Z12frequencyValPcPm+0x140>
		}
		else if((f > 3500000.) && (f < 4000000.))
    e16c:	20 e8       	ldi	r18, 0x80	; 128
    e16e:	3f e9       	ldi	r19, 0x9F	; 159
    e170:	45 e5       	ldi	r20, 0x55	; 85
    e172:	5a e4       	ldi	r21, 0x4A	; 74
    e174:	6a 81       	ldd	r22, Y+2	; 0x02
    e176:	7b 81       	ldd	r23, Y+3	; 0x03
    e178:	8c 81       	ldd	r24, Y+4	; 0x04
    e17a:	9d 81       	ldd	r25, Y+5	; 0x05
    e17c:	0e 94 08 75 	call	0xea10	; 0xea10 <__gesf2>
    e180:	18 16       	cp	r1, r24
    e182:	6c f4       	brge	.+26     	; 0xe19e <_Z12frequencyValPcPm+0x140>
    e184:	20 e0       	ldi	r18, 0x00	; 0
    e186:	34 e2       	ldi	r19, 0x24	; 36
    e188:	44 e7       	ldi	r20, 0x74	; 116
    e18a:	5a e4       	ldi	r21, 0x4A	; 74
    e18c:	6a 81       	ldd	r22, Y+2	; 0x02
    e18e:	7b 81       	ldd	r23, Y+3	; 0x03
    e190:	8c 81       	ldd	r24, Y+4	; 0x04
    e192:	9d 81       	ldd	r25, Y+5	; 0x05
    e194:	0e 94 68 73 	call	0xe6d0	; 0xe6d0 <__cmpsf2>
    e198:	88 23       	and	r24, r24
    e19a:	0c f4       	brge	.+2      	; 0xe19e <_Z12frequencyValPcPm+0x140>
		{
			failure = false;
    e19c:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    e19e:	99 81       	ldd	r25, Y+1	; 0x01
    e1a0:	81 e0       	ldi	r24, 0x01	; 1
    e1a2:	89 27       	eor	r24, r25
    e1a4:	88 23       	and	r24, r24
    e1a6:	09 f4       	brne	.+2      	; 0xe1aa <_Z12frequencyValPcPm+0x14c>
    e1a8:	14 c1       	rjmp	.+552    	; 0xe3d2 <_Z12frequencyValPcPm+0x374>
		{
			temp = (Frequency_Hz)ceilf(f);
    e1aa:	8a 81       	ldd	r24, Y+2	; 0x02
    e1ac:	9b 81       	ldd	r25, Y+3	; 0x03
    e1ae:	ac 81       	ldd	r26, Y+4	; 0x04
    e1b0:	bd 81       	ldd	r27, Y+5	; 0x05
    e1b2:	bc 01       	movw	r22, r24
    e1b4:	cd 01       	movw	r24, r26
    e1b6:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <ceil>
    e1ba:	dc 01       	movw	r26, r24
    e1bc:	cb 01       	movw	r24, r22
    e1be:	bc 01       	movw	r22, r24
    e1c0:	cd 01       	movw	r24, r26
    e1c2:	0e 94 e6 73 	call	0xe7cc	; 0xe7cc <__fixunssfsi>
    e1c6:	dc 01       	movw	r26, r24
    e1c8:	cb 01       	movw	r24, r22
    e1ca:	8e 87       	std	Y+14, r24	; 0x0e
    e1cc:	9f 87       	std	Y+15, r25	; 0x0f
    e1ce:	a8 8b       	std	Y+16, r26	; 0x10
    e1d0:	b9 8b       	std	Y+17, r27	; 0x11
			temp = temp - (temp % 100);
    e1d2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e1d4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e1d6:	a8 89       	ldd	r26, Y+16	; 0x10
    e1d8:	b9 89       	ldd	r27, Y+17	; 0x11
    e1da:	24 e6       	ldi	r18, 0x64	; 100
    e1dc:	30 e0       	ldi	r19, 0x00	; 0
    e1de:	40 e0       	ldi	r20, 0x00	; 0
    e1e0:	50 e0       	ldi	r21, 0x00	; 0
    e1e2:	bc 01       	movw	r22, r24
    e1e4:	cd 01       	movw	r24, r26
    e1e6:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    e1ea:	dc 01       	movw	r26, r24
    e1ec:	cb 01       	movw	r24, r22
    e1ee:	9c 01       	movw	r18, r24
    e1f0:	ad 01       	movw	r20, r26
    e1f2:	8e 85       	ldd	r24, Y+14	; 0x0e
    e1f4:	9f 85       	ldd	r25, Y+15	; 0x0f
    e1f6:	a8 89       	ldd	r26, Y+16	; 0x10
    e1f8:	b9 89       	ldd	r27, Y+17	; 0x11
    e1fa:	82 1b       	sub	r24, r18
    e1fc:	93 0b       	sbc	r25, r19
    e1fe:	a4 0b       	sbc	r26, r20
    e200:	b5 0b       	sbc	r27, r21
    e202:	8e 87       	std	Y+14, r24	; 0x0e
    e204:	9f 87       	std	Y+15, r25	; 0x0f
    e206:	a8 8b       	std	Y+16, r26	; 0x10
    e208:	b9 8b       	std	Y+17, r27	; 0x11
			if(result) *result = temp;
    e20a:	8c 89       	ldd	r24, Y+20	; 0x14
    e20c:	9d 89       	ldd	r25, Y+21	; 0x15
    e20e:	89 2b       	or	r24, r25
    e210:	59 f0       	breq	.+22     	; 0xe228 <_Z12frequencyValPcPm+0x1ca>
    e212:	2c 89       	ldd	r18, Y+20	; 0x14
    e214:	3d 89       	ldd	r19, Y+21	; 0x15
    e216:	8e 85       	ldd	r24, Y+14	; 0x0e
    e218:	9f 85       	ldd	r25, Y+15	; 0x0f
    e21a:	a8 89       	ldd	r26, Y+16	; 0x10
    e21c:	b9 89       	ldd	r27, Y+17	; 0x11
    e21e:	f9 01       	movw	r30, r18
    e220:	80 83       	st	Z, r24
    e222:	91 83       	std	Z+1, r25	; 0x01
    e224:	a2 83       	std	Z+2, r26	; 0x02
    e226:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%4.1f kHz", (double)f);
    e228:	8d 81       	ldd	r24, Y+5	; 0x05
    e22a:	8f 93       	push	r24
    e22c:	8c 81       	ldd	r24, Y+4	; 0x04
    e22e:	8f 93       	push	r24
    e230:	8b 81       	ldd	r24, Y+3	; 0x03
    e232:	8f 93       	push	r24
    e234:	8a 81       	ldd	r24, Y+2	; 0x02
    e236:	8f 93       	push	r24
    e238:	80 ef       	ldi	r24, 0xF0	; 240
    e23a:	94 e4       	ldi	r25, 0x44	; 68
    e23c:	89 2f       	mov	r24, r25
    e23e:	8f 93       	push	r24
    e240:	80 ef       	ldi	r24, 0xF0	; 240
    e242:	94 e4       	ldi	r25, 0x44	; 68
    e244:	8f 93       	push	r24
    e246:	8b 89       	ldd	r24, Y+19	; 0x13
    e248:	8f 93       	push	r24
    e24a:	8a 89       	ldd	r24, Y+18	; 0x12
    e24c:	8f 93       	push	r24
    e24e:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    e252:	8d b7       	in	r24, 0x3d	; 61
    e254:	9e b7       	in	r25, 0x3e	; 62
    e256:	08 96       	adiw	r24, 0x08	; 8
    e258:	cd bf       	out	0x3d, r28	; 61
    e25a:	de bf       	out	0x3e, r29	; 62
    e25c:	ba c0       	rjmp	.+372    	; 0xe3d2 <_Z12frequencyValPcPm+0x374>
		}
	}
	else
	{
		Frequency_Hz f = (Frequency_Hz)atol(str);
    e25e:	8a 89       	ldd	r24, Y+18	; 0x12
    e260:	9b 89       	ldd	r25, Y+19	; 0x13
    e262:	0e 94 59 77 	call	0xeeb2	; 0xeeb2 <atol>
    e266:	dc 01       	movw	r26, r24
    e268:	cb 01       	movw	r24, r22
    e26a:	8e 83       	std	Y+6, r24	; 0x06
    e26c:	9f 83       	std	Y+7, r25	; 0x07
    e26e:	a8 87       	std	Y+8, r26	; 0x08
    e270:	b9 87       	std	Y+9, r27	; 0x09
		
		if((f > 3500) && (f < 4000))
    e272:	8e 81       	ldd	r24, Y+6	; 0x06
    e274:	9f 81       	ldd	r25, Y+7	; 0x07
    e276:	a8 85       	ldd	r26, Y+8	; 0x08
    e278:	b9 85       	ldd	r27, Y+9	; 0x09
    e27a:	8d 3a       	cpi	r24, 0xAD	; 173
    e27c:	9d 40       	sbci	r25, 0x0D	; 13
    e27e:	a1 05       	cpc	r26, r1
    e280:	b1 05       	cpc	r27, r1
    e282:	d0 f0       	brcs	.+52     	; 0xe2b8 <_Z12frequencyValPcPm+0x25a>
    e284:	8e 81       	ldd	r24, Y+6	; 0x06
    e286:	9f 81       	ldd	r25, Y+7	; 0x07
    e288:	a8 85       	ldd	r26, Y+8	; 0x08
    e28a:	b9 85       	ldd	r27, Y+9	; 0x09
    e28c:	80 3a       	cpi	r24, 0xA0	; 160
    e28e:	9f 40       	sbci	r25, 0x0F	; 15
    e290:	a1 05       	cpc	r26, r1
    e292:	b1 05       	cpc	r27, r1
    e294:	88 f4       	brcc	.+34     	; 0xe2b8 <_Z12frequencyValPcPm+0x25a>
		{
			f *= 1000;
    e296:	2e 81       	ldd	r18, Y+6	; 0x06
    e298:	3f 81       	ldd	r19, Y+7	; 0x07
    e29a:	48 85       	ldd	r20, Y+8	; 0x08
    e29c:	59 85       	ldd	r21, Y+9	; 0x09
    e29e:	88 ee       	ldi	r24, 0xE8	; 232
    e2a0:	93 e0       	ldi	r25, 0x03	; 3
    e2a2:	dc 01       	movw	r26, r24
    e2a4:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    e2a8:	dc 01       	movw	r26, r24
    e2aa:	cb 01       	movw	r24, r22
    e2ac:	8e 83       	std	Y+6, r24	; 0x06
    e2ae:	9f 83       	std	Y+7, r25	; 0x07
    e2b0:	a8 87       	std	Y+8, r26	; 0x08
    e2b2:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    e2b4:	19 82       	std	Y+1, r1	; 0x01
    e2b6:	2f c0       	rjmp	.+94     	; 0xe316 <_Z12frequencyValPcPm+0x2b8>
		}
		else if((f > 3500000) && (f < 4000000))
    e2b8:	8e 81       	ldd	r24, Y+6	; 0x06
    e2ba:	9f 81       	ldd	r25, Y+7	; 0x07
    e2bc:	a8 85       	ldd	r26, Y+8	; 0x08
    e2be:	b9 85       	ldd	r27, Y+9	; 0x09
    e2c0:	81 3e       	cpi	r24, 0xE1	; 225
    e2c2:	97 46       	sbci	r25, 0x67	; 103
    e2c4:	a5 43       	sbci	r26, 0x35	; 53
    e2c6:	b1 05       	cpc	r27, r1
    e2c8:	30 f1       	brcs	.+76     	; 0xe316 <_Z12frequencyValPcPm+0x2b8>
    e2ca:	8e 81       	ldd	r24, Y+6	; 0x06
    e2cc:	9f 81       	ldd	r25, Y+7	; 0x07
    e2ce:	a8 85       	ldd	r26, Y+8	; 0x08
    e2d0:	b9 85       	ldd	r27, Y+9	; 0x09
    e2d2:	81 15       	cp	r24, r1
    e2d4:	99 40       	sbci	r25, 0x09	; 9
    e2d6:	ad 43       	sbci	r26, 0x3D	; 61
    e2d8:	b1 05       	cpc	r27, r1
    e2da:	e8 f4       	brcc	.+58     	; 0xe316 <_Z12frequencyValPcPm+0x2b8>
		{
			f = f - (f % 100);
    e2dc:	8e 81       	ldd	r24, Y+6	; 0x06
    e2de:	9f 81       	ldd	r25, Y+7	; 0x07
    e2e0:	a8 85       	ldd	r26, Y+8	; 0x08
    e2e2:	b9 85       	ldd	r27, Y+9	; 0x09
    e2e4:	24 e6       	ldi	r18, 0x64	; 100
    e2e6:	30 e0       	ldi	r19, 0x00	; 0
    e2e8:	40 e0       	ldi	r20, 0x00	; 0
    e2ea:	50 e0       	ldi	r21, 0x00	; 0
    e2ec:	bc 01       	movw	r22, r24
    e2ee:	cd 01       	movw	r24, r26
    e2f0:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    e2f4:	dc 01       	movw	r26, r24
    e2f6:	cb 01       	movw	r24, r22
    e2f8:	9c 01       	movw	r18, r24
    e2fa:	ad 01       	movw	r20, r26
    e2fc:	8e 81       	ldd	r24, Y+6	; 0x06
    e2fe:	9f 81       	ldd	r25, Y+7	; 0x07
    e300:	a8 85       	ldd	r26, Y+8	; 0x08
    e302:	b9 85       	ldd	r27, Y+9	; 0x09
    e304:	82 1b       	sub	r24, r18
    e306:	93 0b       	sbc	r25, r19
    e308:	a4 0b       	sbc	r26, r20
    e30a:	b5 0b       	sbc	r27, r21
    e30c:	8e 83       	std	Y+6, r24	; 0x06
    e30e:	9f 83       	std	Y+7, r25	; 0x07
    e310:	a8 87       	std	Y+8, r26	; 0x08
    e312:	b9 87       	std	Y+9, r27	; 0x09
			failure = false;
    e314:	19 82       	std	Y+1, r1	; 0x01
		}
		
		if(!failure)
    e316:	99 81       	ldd	r25, Y+1	; 0x01
    e318:	81 e0       	ldi	r24, 0x01	; 1
    e31a:	89 27       	eor	r24, r25
    e31c:	88 23       	and	r24, r24
    e31e:	09 f4       	brne	.+2      	; 0xe322 <_Z12frequencyValPcPm+0x2c4>
    e320:	58 c0       	rjmp	.+176    	; 0xe3d2 <_Z12frequencyValPcPm+0x374>
		{
			if(result) *result = f;
    e322:	8c 89       	ldd	r24, Y+20	; 0x14
    e324:	9d 89       	ldd	r25, Y+21	; 0x15
    e326:	89 2b       	or	r24, r25
    e328:	59 f0       	breq	.+22     	; 0xe340 <_Z12frequencyValPcPm+0x2e2>
    e32a:	2c 89       	ldd	r18, Y+20	; 0x14
    e32c:	3d 89       	ldd	r19, Y+21	; 0x15
    e32e:	8e 81       	ldd	r24, Y+6	; 0x06
    e330:	9f 81       	ldd	r25, Y+7	; 0x07
    e332:	a8 85       	ldd	r26, Y+8	; 0x08
    e334:	b9 85       	ldd	r27, Y+9	; 0x09
    e336:	f9 01       	movw	r30, r18
    e338:	80 83       	st	Z, r24
    e33a:	91 83       	std	Z+1, r25	; 0x01
    e33c:	a2 83       	std	Z+2, r26	; 0x02
    e33e:	b3 83       	std	Z+3, r27	; 0x03
			sprintf(str, "%lu.%1lu kHz", f/1000, (f % 1000)/100);
    e340:	8e 81       	ldd	r24, Y+6	; 0x06
    e342:	9f 81       	ldd	r25, Y+7	; 0x07
    e344:	a8 85       	ldd	r26, Y+8	; 0x08
    e346:	b9 85       	ldd	r27, Y+9	; 0x09
    e348:	28 ee       	ldi	r18, 0xE8	; 232
    e34a:	33 e0       	ldi	r19, 0x03	; 3
    e34c:	40 e0       	ldi	r20, 0x00	; 0
    e34e:	50 e0       	ldi	r21, 0x00	; 0
    e350:	bc 01       	movw	r22, r24
    e352:	cd 01       	movw	r24, r26
    e354:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    e358:	dc 01       	movw	r26, r24
    e35a:	cb 01       	movw	r24, r22
    e35c:	24 e6       	ldi	r18, 0x64	; 100
    e35e:	30 e0       	ldi	r19, 0x00	; 0
    e360:	40 e0       	ldi	r20, 0x00	; 0
    e362:	50 e0       	ldi	r21, 0x00	; 0
    e364:	bc 01       	movw	r22, r24
    e366:	cd 01       	movw	r24, r26
    e368:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    e36c:	da 01       	movw	r26, r20
    e36e:	c9 01       	movw	r24, r18
    e370:	7c 01       	movw	r14, r24
    e372:	8d 01       	movw	r16, r26
    e374:	8e 81       	ldd	r24, Y+6	; 0x06
    e376:	9f 81       	ldd	r25, Y+7	; 0x07
    e378:	a8 85       	ldd	r26, Y+8	; 0x08
    e37a:	b9 85       	ldd	r27, Y+9	; 0x09
    e37c:	28 ee       	ldi	r18, 0xE8	; 232
    e37e:	33 e0       	ldi	r19, 0x03	; 3
    e380:	40 e0       	ldi	r20, 0x00	; 0
    e382:	50 e0       	ldi	r21, 0x00	; 0
    e384:	bc 01       	movw	r22, r24
    e386:	cd 01       	movw	r24, r26
    e388:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    e38c:	da 01       	movw	r26, r20
    e38e:	c9 01       	movw	r24, r18
    e390:	21 2f       	mov	r18, r17
    e392:	2f 93       	push	r18
    e394:	20 2f       	mov	r18, r16
    e396:	2f 93       	push	r18
    e398:	2f 2d       	mov	r18, r15
    e39a:	2f 93       	push	r18
    e39c:	2e 2d       	mov	r18, r14
    e39e:	2f 93       	push	r18
    e3a0:	2b 2f       	mov	r18, r27
    e3a2:	2f 93       	push	r18
    e3a4:	2a 2f       	mov	r18, r26
    e3a6:	2f 93       	push	r18
    e3a8:	29 2f       	mov	r18, r25
    e3aa:	2f 93       	push	r18
    e3ac:	8f 93       	push	r24
    e3ae:	83 ee       	ldi	r24, 0xE3	; 227
    e3b0:	94 e4       	ldi	r25, 0x44	; 68
    e3b2:	89 2f       	mov	r24, r25
    e3b4:	8f 93       	push	r24
    e3b6:	83 ee       	ldi	r24, 0xE3	; 227
    e3b8:	94 e4       	ldi	r25, 0x44	; 68
    e3ba:	8f 93       	push	r24
    e3bc:	8b 89       	ldd	r24, Y+19	; 0x13
    e3be:	8f 93       	push	r24
    e3c0:	8a 89       	ldd	r24, Y+18	; 0x12
    e3c2:	8f 93       	push	r24
    e3c4:	0e 94 e1 77 	call	0xefc2	; 0xefc2 <sprintf>
    e3c8:	8d b7       	in	r24, 0x3d	; 61
    e3ca:	9e b7       	in	r25, 0x3e	; 62
    e3cc:	0c 96       	adiw	r24, 0x0c	; 12
    e3ce:	cd bf       	out	0x3d, r28	; 61
    e3d0:	de bf       	out	0x3e, r29	; 62
		}
	}
	
	return(failure);	
    e3d2:	89 81       	ldd	r24, Y+1	; 0x01
}
    e3d4:	65 96       	adiw	r28, 0x15	; 21
    e3d6:	cd bf       	out	0x3d, r28	; 61
    e3d8:	de bf       	out	0x3e, r29	; 62
    e3da:	df 91       	pop	r29
    e3dc:	cf 91       	pop	r28
    e3de:	1f 91       	pop	r17
    e3e0:	0f 91       	pop	r16
    e3e2:	ff 90       	pop	r15
    e3e4:	ef 90       	pop	r14
    e3e6:	08 95       	ret

0000e3e8 <_Z8fox2TextPc5Fox_t>:

bool fox2Text(char* str, Fox_t fox)
{
    e3e8:	cf 93       	push	r28
    e3ea:	df 93       	push	r29
    e3ec:	00 d0       	rcall	.+0      	; 0xe3ee <_Z8fox2TextPc5Fox_t+0x6>
    e3ee:	00 d0       	rcall	.+0      	; 0xe3f0 <_Z8fox2TextPc5Fox_t+0x8>
    e3f0:	cd b7       	in	r28, 0x3d	; 61
    e3f2:	de b7       	in	r29, 0x3e	; 62
    e3f4:	8a 83       	std	Y+2, r24	; 0x02
    e3f6:	9b 83       	std	Y+3, r25	; 0x03
    e3f8:	6c 83       	std	Y+4, r22	; 0x04
	bool failure = false;
    e3fa:	19 82       	std	Y+1, r1	; 0x01
	
	switch(fox)
    e3fc:	8c 81       	ldd	r24, Y+4	; 0x04
    e3fe:	88 2f       	mov	r24, r24
    e400:	90 e0       	ldi	r25, 0x00	; 0
    e402:	09 2e       	mov	r0, r25
    e404:	00 0c       	add	r0, r0
    e406:	aa 0b       	sbc	r26, r26
    e408:	bb 0b       	sbc	r27, r27
    e40a:	40 e0       	ldi	r20, 0x00	; 0
    e40c:	50 e0       	ldi	r21, 0x00	; 0
    e40e:	21 e1       	ldi	r18, 0x11	; 17
    e410:	30 e0       	ldi	r19, 0x00	; 0
    e412:	84 1b       	sub	r24, r20
    e414:	95 0b       	sbc	r25, r21
    e416:	28 17       	cp	r18, r24
    e418:	39 07       	cpc	r19, r25
    e41a:	08 f4       	brcc	.+2      	; 0xe41e <_Z8fox2TextPc5Fox_t+0x36>
    e41c:	cb c0       	rjmp	.+406    	; 0xe5b4 <_Z8fox2TextPc5Fox_t+0x1cc>
    e41e:	8d 5d       	subi	r24, 0xDD	; 221
    e420:	9e 4f       	sbci	r25, 0xFE	; 254
    e422:	fc 01       	movw	r30, r24
    e424:	0c 94 f3 75 	jmp	0xebe6	; 0xebe6 <__tablejump2__>
	{
		case BEACON:
		{
			sprintf(str, "Finish \"MO\"");
    e428:	8a 81       	ldd	r24, Y+2	; 0x02
    e42a:	9b 81       	ldd	r25, Y+3	; 0x03
    e42c:	2c e0       	ldi	r18, 0x0C	; 12
    e42e:	ea ef       	ldi	r30, 0xFA	; 250
    e430:	f4 e4       	ldi	r31, 0x44	; 68
    e432:	dc 01       	movw	r26, r24
    e434:	01 90       	ld	r0, Z+
    e436:	0d 92       	st	X+, r0
    e438:	2a 95       	dec	r18
    e43a:	e1 f7       	brne	.-8      	; 0xe434 <_Z8fox2TextPc5Fox_t+0x4c>
		}
		break;
    e43c:	be c0       	rjmp	.+380    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_1:
		{
			sprintf(str, "Classic Fox 1 \"MOE\"");
    e43e:	8a 81       	ldd	r24, Y+2	; 0x02
    e440:	9b 81       	ldd	r25, Y+3	; 0x03
    e442:	24 e1       	ldi	r18, 0x14	; 20
    e444:	e6 e0       	ldi	r30, 0x06	; 6
    e446:	f5 e4       	ldi	r31, 0x45	; 69
    e448:	dc 01       	movw	r26, r24
    e44a:	01 90       	ld	r0, Z+
    e44c:	0d 92       	st	X+, r0
    e44e:	2a 95       	dec	r18
    e450:	e1 f7       	brne	.-8      	; 0xe44a <_Z8fox2TextPc5Fox_t+0x62>
		}
		break;
    e452:	b3 c0       	rjmp	.+358    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_2:
		{
			sprintf(str, "Classic Fox 2 \"MOI\"");
    e454:	8a 81       	ldd	r24, Y+2	; 0x02
    e456:	9b 81       	ldd	r25, Y+3	; 0x03
    e458:	24 e1       	ldi	r18, 0x14	; 20
    e45a:	ea e1       	ldi	r30, 0x1A	; 26
    e45c:	f5 e4       	ldi	r31, 0x45	; 69
    e45e:	dc 01       	movw	r26, r24
    e460:	01 90       	ld	r0, Z+
    e462:	0d 92       	st	X+, r0
    e464:	2a 95       	dec	r18
    e466:	e1 f7       	brne	.-8      	; 0xe460 <_Z8fox2TextPc5Fox_t+0x78>
		}
		break;
    e468:	a8 c0       	rjmp	.+336    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_3:
		{
			sprintf(str, "Classic Fox 3 \"MOS\"");
    e46a:	8a 81       	ldd	r24, Y+2	; 0x02
    e46c:	9b 81       	ldd	r25, Y+3	; 0x03
    e46e:	24 e1       	ldi	r18, 0x14	; 20
    e470:	ee e2       	ldi	r30, 0x2E	; 46
    e472:	f5 e4       	ldi	r31, 0x45	; 69
    e474:	dc 01       	movw	r26, r24
    e476:	01 90       	ld	r0, Z+
    e478:	0d 92       	st	X+, r0
    e47a:	2a 95       	dec	r18
    e47c:	e1 f7       	brne	.-8      	; 0xe476 <_Z8fox2TextPc5Fox_t+0x8e>
		}
		break;
    e47e:	9d c0       	rjmp	.+314    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_4:
		{
			sprintf(str, "Classic Fox 4 \"MOH\"");
    e480:	8a 81       	ldd	r24, Y+2	; 0x02
    e482:	9b 81       	ldd	r25, Y+3	; 0x03
    e484:	24 e1       	ldi	r18, 0x14	; 20
    e486:	e2 e4       	ldi	r30, 0x42	; 66
    e488:	f5 e4       	ldi	r31, 0x45	; 69
    e48a:	dc 01       	movw	r26, r24
    e48c:	01 90       	ld	r0, Z+
    e48e:	0d 92       	st	X+, r0
    e490:	2a 95       	dec	r18
    e492:	e1 f7       	brne	.-8      	; 0xe48c <_Z8fox2TextPc5Fox_t+0xa4>
		}
		break;
    e494:	92 c0       	rjmp	.+292    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOX_5:
		{
			sprintf(str, "Classic Fox 5 \"MO5\"");
    e496:	8a 81       	ldd	r24, Y+2	; 0x02
    e498:	9b 81       	ldd	r25, Y+3	; 0x03
    e49a:	24 e1       	ldi	r18, 0x14	; 20
    e49c:	e6 e5       	ldi	r30, 0x56	; 86
    e49e:	f5 e4       	ldi	r31, 0x45	; 69
    e4a0:	dc 01       	movw	r26, r24
    e4a2:	01 90       	ld	r0, Z+
    e4a4:	0d 92       	st	X+, r0
    e4a6:	2a 95       	dec	r18
    e4a8:	e1 f7       	brne	.-8      	; 0xe4a2 <_Z8fox2TextPc5Fox_t+0xba>
		}
		break;
    e4aa:	87 c0       	rjmp	.+270    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case FOXORING:
		{
			sprintf(str, "Foxoring");
    e4ac:	8a 81       	ldd	r24, Y+2	; 0x02
    e4ae:	9b 81       	ldd	r25, Y+3	; 0x03
    e4b0:	29 e0       	ldi	r18, 0x09	; 9
    e4b2:	ea e6       	ldi	r30, 0x6A	; 106
    e4b4:	f5 e4       	ldi	r31, 0x45	; 69
    e4b6:	dc 01       	movw	r26, r24
    e4b8:	01 90       	ld	r0, Z+
    e4ba:	0d 92       	st	X+, r0
    e4bc:	2a 95       	dec	r18
    e4be:	e1 f7       	brne	.-8      	; 0xe4b8 <_Z8fox2TextPc5Fox_t+0xd0>
		}
		break;
    e4c0:	7c c0       	rjmp	.+248    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPECTATOR:
		{
			sprintf(str, "Spectator \"S\"");
    e4c2:	8a 81       	ldd	r24, Y+2	; 0x02
    e4c4:	9b 81       	ldd	r25, Y+3	; 0x03
    e4c6:	2e e0       	ldi	r18, 0x0E	; 14
    e4c8:	e3 e7       	ldi	r30, 0x73	; 115
    e4ca:	f5 e4       	ldi	r31, 0x45	; 69
    e4cc:	dc 01       	movw	r26, r24
    e4ce:	01 90       	ld	r0, Z+
    e4d0:	0d 92       	st	X+, r0
    e4d2:	2a 95       	dec	r18
    e4d4:	e1 f7       	brne	.-8      	; 0xe4ce <_Z8fox2TextPc5Fox_t+0xe6>
		}
		break;
    e4d6:	71 c0       	rjmp	.+226    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S1:
		{
			sprintf(str, "Sprint Slow 1 \"ME\"");
    e4d8:	8a 81       	ldd	r24, Y+2	; 0x02
    e4da:	9b 81       	ldd	r25, Y+3	; 0x03
    e4dc:	23 e1       	ldi	r18, 0x13	; 19
    e4de:	e1 e8       	ldi	r30, 0x81	; 129
    e4e0:	f5 e4       	ldi	r31, 0x45	; 69
    e4e2:	dc 01       	movw	r26, r24
    e4e4:	01 90       	ld	r0, Z+
    e4e6:	0d 92       	st	X+, r0
    e4e8:	2a 95       	dec	r18
    e4ea:	e1 f7       	brne	.-8      	; 0xe4e4 <_Z8fox2TextPc5Fox_t+0xfc>
		}
		break;
    e4ec:	66 c0       	rjmp	.+204    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S2:
		{
			sprintf(str, "Sprint Slow 2 \"MI\"");
    e4ee:	8a 81       	ldd	r24, Y+2	; 0x02
    e4f0:	9b 81       	ldd	r25, Y+3	; 0x03
    e4f2:	23 e1       	ldi	r18, 0x13	; 19
    e4f4:	e4 e9       	ldi	r30, 0x94	; 148
    e4f6:	f5 e4       	ldi	r31, 0x45	; 69
    e4f8:	dc 01       	movw	r26, r24
    e4fa:	01 90       	ld	r0, Z+
    e4fc:	0d 92       	st	X+, r0
    e4fe:	2a 95       	dec	r18
    e500:	e1 f7       	brne	.-8      	; 0xe4fa <_Z8fox2TextPc5Fox_t+0x112>
		}
		break;
    e502:	5b c0       	rjmp	.+182    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S3:
		{
			sprintf(str, "Sprint Slow 3 \"MS\"");
    e504:	8a 81       	ldd	r24, Y+2	; 0x02
    e506:	9b 81       	ldd	r25, Y+3	; 0x03
    e508:	23 e1       	ldi	r18, 0x13	; 19
    e50a:	e7 ea       	ldi	r30, 0xA7	; 167
    e50c:	f5 e4       	ldi	r31, 0x45	; 69
    e50e:	dc 01       	movw	r26, r24
    e510:	01 90       	ld	r0, Z+
    e512:	0d 92       	st	X+, r0
    e514:	2a 95       	dec	r18
    e516:	e1 f7       	brne	.-8      	; 0xe510 <_Z8fox2TextPc5Fox_t+0x128>
		}
		break;
    e518:	50 c0       	rjmp	.+160    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S4:
		{
			sprintf(str, "Sprint Slow 4 \"MH\"");
    e51a:	8a 81       	ldd	r24, Y+2	; 0x02
    e51c:	9b 81       	ldd	r25, Y+3	; 0x03
    e51e:	23 e1       	ldi	r18, 0x13	; 19
    e520:	ea eb       	ldi	r30, 0xBA	; 186
    e522:	f5 e4       	ldi	r31, 0x45	; 69
    e524:	dc 01       	movw	r26, r24
    e526:	01 90       	ld	r0, Z+
    e528:	0d 92       	st	X+, r0
    e52a:	2a 95       	dec	r18
    e52c:	e1 f7       	brne	.-8      	; 0xe526 <_Z8fox2TextPc5Fox_t+0x13e>
		}
		break;
    e52e:	45 c0       	rjmp	.+138    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_S5:
		{
			sprintf(str, "Sprint Slow 5 \"M5\"");
    e530:	8a 81       	ldd	r24, Y+2	; 0x02
    e532:	9b 81       	ldd	r25, Y+3	; 0x03
    e534:	23 e1       	ldi	r18, 0x13	; 19
    e536:	ed ec       	ldi	r30, 0xCD	; 205
    e538:	f5 e4       	ldi	r31, 0x45	; 69
    e53a:	dc 01       	movw	r26, r24
    e53c:	01 90       	ld	r0, Z+
    e53e:	0d 92       	st	X+, r0
    e540:	2a 95       	dec	r18
    e542:	e1 f7       	brne	.-8      	; 0xe53c <_Z8fox2TextPc5Fox_t+0x154>
		}
		break;
    e544:	3a c0       	rjmp	.+116    	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F1:
		{
			sprintf(str, "Sprint Fast 1 \"OE\"");
    e546:	8a 81       	ldd	r24, Y+2	; 0x02
    e548:	9b 81       	ldd	r25, Y+3	; 0x03
    e54a:	23 e1       	ldi	r18, 0x13	; 19
    e54c:	e0 ee       	ldi	r30, 0xE0	; 224
    e54e:	f5 e4       	ldi	r31, 0x45	; 69
    e550:	dc 01       	movw	r26, r24
    e552:	01 90       	ld	r0, Z+
    e554:	0d 92       	st	X+, r0
    e556:	2a 95       	dec	r18
    e558:	e1 f7       	brne	.-8      	; 0xe552 <_Z8fox2TextPc5Fox_t+0x16a>
		}
		break;
    e55a:	2f c0       	rjmp	.+94     	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F2:
		{
			sprintf(str, "Sprint Fast 2 \"OI\"");
    e55c:	8a 81       	ldd	r24, Y+2	; 0x02
    e55e:	9b 81       	ldd	r25, Y+3	; 0x03
    e560:	23 e1       	ldi	r18, 0x13	; 19
    e562:	e3 ef       	ldi	r30, 0xF3	; 243
    e564:	f5 e4       	ldi	r31, 0x45	; 69
    e566:	dc 01       	movw	r26, r24
    e568:	01 90       	ld	r0, Z+
    e56a:	0d 92       	st	X+, r0
    e56c:	2a 95       	dec	r18
    e56e:	e1 f7       	brne	.-8      	; 0xe568 <_Z8fox2TextPc5Fox_t+0x180>
		}
		break;
    e570:	24 c0       	rjmp	.+72     	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F3:
		{
			sprintf(str, "Sprint Fast 3 \"OS\"");
    e572:	8a 81       	ldd	r24, Y+2	; 0x02
    e574:	9b 81       	ldd	r25, Y+3	; 0x03
    e576:	23 e1       	ldi	r18, 0x13	; 19
    e578:	e6 e0       	ldi	r30, 0x06	; 6
    e57a:	f6 e4       	ldi	r31, 0x46	; 70
    e57c:	dc 01       	movw	r26, r24
    e57e:	01 90       	ld	r0, Z+
    e580:	0d 92       	st	X+, r0
    e582:	2a 95       	dec	r18
    e584:	e1 f7       	brne	.-8      	; 0xe57e <_Z8fox2TextPc5Fox_t+0x196>
		}
		break;
    e586:	19 c0       	rjmp	.+50     	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F4:
		{
			sprintf(str, "Sprint Fast 4 \"OH\"");
    e588:	8a 81       	ldd	r24, Y+2	; 0x02
    e58a:	9b 81       	ldd	r25, Y+3	; 0x03
    e58c:	23 e1       	ldi	r18, 0x13	; 19
    e58e:	e9 e1       	ldi	r30, 0x19	; 25
    e590:	f6 e4       	ldi	r31, 0x46	; 70
    e592:	dc 01       	movw	r26, r24
    e594:	01 90       	ld	r0, Z+
    e596:	0d 92       	st	X+, r0
    e598:	2a 95       	dec	r18
    e59a:	e1 f7       	brne	.-8      	; 0xe594 <_Z8fox2TextPc5Fox_t+0x1ac>
		}
		break;
    e59c:	0e c0       	rjmp	.+28     	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		case SPRINT_F5:
		{
			sprintf(str, "Sprint Fast 5 \"O5\"");
    e59e:	8a 81       	ldd	r24, Y+2	; 0x02
    e5a0:	9b 81       	ldd	r25, Y+3	; 0x03
    e5a2:	23 e1       	ldi	r18, 0x13	; 19
    e5a4:	ec e2       	ldi	r30, 0x2C	; 44
    e5a6:	f6 e4       	ldi	r31, 0x46	; 70
    e5a8:	dc 01       	movw	r26, r24
    e5aa:	01 90       	ld	r0, Z+
    e5ac:	0d 92       	st	X+, r0
    e5ae:	2a 95       	dec	r18
    e5b0:	e1 f7       	brne	.-8      	; 0xe5aa <_Z8fox2TextPc5Fox_t+0x1c2>
		}
		break;
    e5b2:	03 c0       	rjmp	.+6      	; 0xe5ba <_Z8fox2TextPc5Fox_t+0x1d2>
		
		default:
		{
			failure = true;
    e5b4:	81 e0       	ldi	r24, 0x01	; 1
    e5b6:	89 83       	std	Y+1, r24	; 0x01
		}
		break;
    e5b8:	00 00       	nop
	}
	
	return(failure);
    e5ba:	89 81       	ldd	r24, Y+1	; 0x01
    e5bc:	24 96       	adiw	r28, 0x04	; 4
    e5be:	cd bf       	out	0x3d, r28	; 61
    e5c0:	de bf       	out	0x3e, r29	; 62
    e5c2:	df 91       	pop	r29
    e5c4:	cf 91       	pop	r28
    e5c6:	08 95       	ret

0000e5c8 <__subsf3>:
    e5c8:	50 58       	subi	r21, 0x80	; 128

0000e5ca <__addsf3>:
    e5ca:	bb 27       	eor	r27, r27
    e5cc:	aa 27       	eor	r26, r26
    e5ce:	0e 94 fc 72 	call	0xe5f8	; 0xe5f8 <__addsf3x>
    e5d2:	0c 94 b6 74 	jmp	0xe96c	; 0xe96c <__fp_round>
    e5d6:	0e 94 a8 74 	call	0xe950	; 0xe950 <__fp_pscA>
    e5da:	38 f0       	brcs	.+14     	; 0xe5ea <__addsf3+0x20>
    e5dc:	0e 94 af 74 	call	0xe95e	; 0xe95e <__fp_pscB>
    e5e0:	20 f0       	brcs	.+8      	; 0xe5ea <__addsf3+0x20>
    e5e2:	39 f4       	brne	.+14     	; 0xe5f2 <__addsf3+0x28>
    e5e4:	9f 3f       	cpi	r25, 0xFF	; 255
    e5e6:	19 f4       	brne	.+6      	; 0xe5ee <__addsf3+0x24>
    e5e8:	26 f4       	brtc	.+8      	; 0xe5f2 <__addsf3+0x28>
    e5ea:	0c 94 a5 74 	jmp	0xe94a	; 0xe94a <__fp_nan>
    e5ee:	0e f4       	brtc	.+2      	; 0xe5f2 <__addsf3+0x28>
    e5f0:	e0 95       	com	r30
    e5f2:	e7 fb       	bst	r30, 7
    e5f4:	0c 94 76 74 	jmp	0xe8ec	; 0xe8ec <__fp_inf>

0000e5f8 <__addsf3x>:
    e5f8:	e9 2f       	mov	r30, r25
    e5fa:	0e 94 c7 74 	call	0xe98e	; 0xe98e <__fp_split3>
    e5fe:	58 f3       	brcs	.-42     	; 0xe5d6 <__addsf3+0xc>
    e600:	ba 17       	cp	r27, r26
    e602:	62 07       	cpc	r22, r18
    e604:	73 07       	cpc	r23, r19
    e606:	84 07       	cpc	r24, r20
    e608:	95 07       	cpc	r25, r21
    e60a:	20 f0       	brcs	.+8      	; 0xe614 <__addsf3x+0x1c>
    e60c:	79 f4       	brne	.+30     	; 0xe62c <__addsf3x+0x34>
    e60e:	a6 f5       	brtc	.+104    	; 0xe678 <__addsf3x+0x80>
    e610:	0c 94 01 75 	jmp	0xea02	; 0xea02 <__fp_zero>
    e614:	0e f4       	brtc	.+2      	; 0xe618 <__addsf3x+0x20>
    e616:	e0 95       	com	r30
    e618:	0b 2e       	mov	r0, r27
    e61a:	ba 2f       	mov	r27, r26
    e61c:	a0 2d       	mov	r26, r0
    e61e:	0b 01       	movw	r0, r22
    e620:	b9 01       	movw	r22, r18
    e622:	90 01       	movw	r18, r0
    e624:	0c 01       	movw	r0, r24
    e626:	ca 01       	movw	r24, r20
    e628:	a0 01       	movw	r20, r0
    e62a:	11 24       	eor	r1, r1
    e62c:	ff 27       	eor	r31, r31
    e62e:	59 1b       	sub	r21, r25
    e630:	99 f0       	breq	.+38     	; 0xe658 <__addsf3x+0x60>
    e632:	59 3f       	cpi	r21, 0xF9	; 249
    e634:	50 f4       	brcc	.+20     	; 0xe64a <__addsf3x+0x52>
    e636:	50 3e       	cpi	r21, 0xE0	; 224
    e638:	68 f1       	brcs	.+90     	; 0xe694 <__addsf3x+0x9c>
    e63a:	1a 16       	cp	r1, r26
    e63c:	f0 40       	sbci	r31, 0x00	; 0
    e63e:	a2 2f       	mov	r26, r18
    e640:	23 2f       	mov	r18, r19
    e642:	34 2f       	mov	r19, r20
    e644:	44 27       	eor	r20, r20
    e646:	58 5f       	subi	r21, 0xF8	; 248
    e648:	f3 cf       	rjmp	.-26     	; 0xe630 <__addsf3x+0x38>
    e64a:	46 95       	lsr	r20
    e64c:	37 95       	ror	r19
    e64e:	27 95       	ror	r18
    e650:	a7 95       	ror	r26
    e652:	f0 40       	sbci	r31, 0x00	; 0
    e654:	53 95       	inc	r21
    e656:	c9 f7       	brne	.-14     	; 0xe64a <__addsf3x+0x52>
    e658:	7e f4       	brtc	.+30     	; 0xe678 <__addsf3x+0x80>
    e65a:	1f 16       	cp	r1, r31
    e65c:	ba 0b       	sbc	r27, r26
    e65e:	62 0b       	sbc	r22, r18
    e660:	73 0b       	sbc	r23, r19
    e662:	84 0b       	sbc	r24, r20
    e664:	ba f0       	brmi	.+46     	; 0xe694 <__addsf3x+0x9c>
    e666:	91 50       	subi	r25, 0x01	; 1
    e668:	a1 f0       	breq	.+40     	; 0xe692 <__addsf3x+0x9a>
    e66a:	ff 0f       	add	r31, r31
    e66c:	bb 1f       	adc	r27, r27
    e66e:	66 1f       	adc	r22, r22
    e670:	77 1f       	adc	r23, r23
    e672:	88 1f       	adc	r24, r24
    e674:	c2 f7       	brpl	.-16     	; 0xe666 <__addsf3x+0x6e>
    e676:	0e c0       	rjmp	.+28     	; 0xe694 <__addsf3x+0x9c>
    e678:	ba 0f       	add	r27, r26
    e67a:	62 1f       	adc	r22, r18
    e67c:	73 1f       	adc	r23, r19
    e67e:	84 1f       	adc	r24, r20
    e680:	48 f4       	brcc	.+18     	; 0xe694 <__addsf3x+0x9c>
    e682:	87 95       	ror	r24
    e684:	77 95       	ror	r23
    e686:	67 95       	ror	r22
    e688:	b7 95       	ror	r27
    e68a:	f7 95       	ror	r31
    e68c:	9e 3f       	cpi	r25, 0xFE	; 254
    e68e:	08 f0       	brcs	.+2      	; 0xe692 <__addsf3x+0x9a>
    e690:	b0 cf       	rjmp	.-160    	; 0xe5f2 <__addsf3+0x28>
    e692:	93 95       	inc	r25
    e694:	88 0f       	add	r24, r24
    e696:	08 f0       	brcs	.+2      	; 0xe69a <__addsf3x+0xa2>
    e698:	99 27       	eor	r25, r25
    e69a:	ee 0f       	add	r30, r30
    e69c:	97 95       	ror	r25
    e69e:	87 95       	ror	r24
    e6a0:	08 95       	ret

0000e6a2 <ceil>:
    e6a2:	0e 94 e9 74 	call	0xe9d2	; 0xe9d2 <__fp_trunc>
    e6a6:	90 f0       	brcs	.+36     	; 0xe6cc <ceil+0x2a>
    e6a8:	9f 37       	cpi	r25, 0x7F	; 127
    e6aa:	48 f4       	brcc	.+18     	; 0xe6be <ceil+0x1c>
    e6ac:	91 11       	cpse	r25, r1
    e6ae:	16 f4       	brtc	.+4      	; 0xe6b4 <ceil+0x12>
    e6b0:	0c 94 02 75 	jmp	0xea04	; 0xea04 <__fp_szero>
    e6b4:	60 e0       	ldi	r22, 0x00	; 0
    e6b6:	70 e0       	ldi	r23, 0x00	; 0
    e6b8:	80 e8       	ldi	r24, 0x80	; 128
    e6ba:	9f e3       	ldi	r25, 0x3F	; 63
    e6bc:	08 95       	ret
    e6be:	26 f0       	brts	.+8      	; 0xe6c8 <ceil+0x26>
    e6c0:	1b 16       	cp	r1, r27
    e6c2:	61 1d       	adc	r22, r1
    e6c4:	71 1d       	adc	r23, r1
    e6c6:	81 1d       	adc	r24, r1
    e6c8:	0c 94 7c 74 	jmp	0xe8f8	; 0xe8f8 <__fp_mintl>
    e6cc:	0c 94 97 74 	jmp	0xe92e	; 0xe92e <__fp_mpack>

0000e6d0 <__cmpsf2>:
    e6d0:	0e 94 52 74 	call	0xe8a4	; 0xe8a4 <__fp_cmp>
    e6d4:	08 f4       	brcc	.+2      	; 0xe6d8 <__cmpsf2+0x8>
    e6d6:	81 e0       	ldi	r24, 0x01	; 1
    e6d8:	08 95       	ret

0000e6da <__divsf3>:
    e6da:	0e 94 81 73 	call	0xe702	; 0xe702 <__divsf3x>
    e6de:	0c 94 b6 74 	jmp	0xe96c	; 0xe96c <__fp_round>
    e6e2:	0e 94 af 74 	call	0xe95e	; 0xe95e <__fp_pscB>
    e6e6:	58 f0       	brcs	.+22     	; 0xe6fe <__divsf3+0x24>
    e6e8:	0e 94 a8 74 	call	0xe950	; 0xe950 <__fp_pscA>
    e6ec:	40 f0       	brcs	.+16     	; 0xe6fe <__divsf3+0x24>
    e6ee:	29 f4       	brne	.+10     	; 0xe6fa <__divsf3+0x20>
    e6f0:	5f 3f       	cpi	r21, 0xFF	; 255
    e6f2:	29 f0       	breq	.+10     	; 0xe6fe <__divsf3+0x24>
    e6f4:	0c 94 76 74 	jmp	0xe8ec	; 0xe8ec <__fp_inf>
    e6f8:	51 11       	cpse	r21, r1
    e6fa:	0c 94 02 75 	jmp	0xea04	; 0xea04 <__fp_szero>
    e6fe:	0c 94 a5 74 	jmp	0xe94a	; 0xe94a <__fp_nan>

0000e702 <__divsf3x>:
    e702:	0e 94 c7 74 	call	0xe98e	; 0xe98e <__fp_split3>
    e706:	68 f3       	brcs	.-38     	; 0xe6e2 <__divsf3+0x8>

0000e708 <__divsf3_pse>:
    e708:	99 23       	and	r25, r25
    e70a:	b1 f3       	breq	.-20     	; 0xe6f8 <__divsf3+0x1e>
    e70c:	55 23       	and	r21, r21
    e70e:	91 f3       	breq	.-28     	; 0xe6f4 <__divsf3+0x1a>
    e710:	95 1b       	sub	r25, r21
    e712:	55 0b       	sbc	r21, r21
    e714:	bb 27       	eor	r27, r27
    e716:	aa 27       	eor	r26, r26
    e718:	62 17       	cp	r22, r18
    e71a:	73 07       	cpc	r23, r19
    e71c:	84 07       	cpc	r24, r20
    e71e:	38 f0       	brcs	.+14     	; 0xe72e <__divsf3_pse+0x26>
    e720:	9f 5f       	subi	r25, 0xFF	; 255
    e722:	5f 4f       	sbci	r21, 0xFF	; 255
    e724:	22 0f       	add	r18, r18
    e726:	33 1f       	adc	r19, r19
    e728:	44 1f       	adc	r20, r20
    e72a:	aa 1f       	adc	r26, r26
    e72c:	a9 f3       	breq	.-22     	; 0xe718 <__divsf3_pse+0x10>
    e72e:	35 d0       	rcall	.+106    	; 0xe79a <__divsf3_pse+0x92>
    e730:	0e 2e       	mov	r0, r30
    e732:	3a f0       	brmi	.+14     	; 0xe742 <__divsf3_pse+0x3a>
    e734:	e0 e8       	ldi	r30, 0x80	; 128
    e736:	32 d0       	rcall	.+100    	; 0xe79c <__divsf3_pse+0x94>
    e738:	91 50       	subi	r25, 0x01	; 1
    e73a:	50 40       	sbci	r21, 0x00	; 0
    e73c:	e6 95       	lsr	r30
    e73e:	00 1c       	adc	r0, r0
    e740:	ca f7       	brpl	.-14     	; 0xe734 <__divsf3_pse+0x2c>
    e742:	2b d0       	rcall	.+86     	; 0xe79a <__divsf3_pse+0x92>
    e744:	fe 2f       	mov	r31, r30
    e746:	29 d0       	rcall	.+82     	; 0xe79a <__divsf3_pse+0x92>
    e748:	66 0f       	add	r22, r22
    e74a:	77 1f       	adc	r23, r23
    e74c:	88 1f       	adc	r24, r24
    e74e:	bb 1f       	adc	r27, r27
    e750:	26 17       	cp	r18, r22
    e752:	37 07       	cpc	r19, r23
    e754:	48 07       	cpc	r20, r24
    e756:	ab 07       	cpc	r26, r27
    e758:	b0 e8       	ldi	r27, 0x80	; 128
    e75a:	09 f0       	breq	.+2      	; 0xe75e <__divsf3_pse+0x56>
    e75c:	bb 0b       	sbc	r27, r27
    e75e:	80 2d       	mov	r24, r0
    e760:	bf 01       	movw	r22, r30
    e762:	ff 27       	eor	r31, r31
    e764:	93 58       	subi	r25, 0x83	; 131
    e766:	5f 4f       	sbci	r21, 0xFF	; 255
    e768:	3a f0       	brmi	.+14     	; 0xe778 <__divsf3_pse+0x70>
    e76a:	9e 3f       	cpi	r25, 0xFE	; 254
    e76c:	51 05       	cpc	r21, r1
    e76e:	78 f0       	brcs	.+30     	; 0xe78e <__divsf3_pse+0x86>
    e770:	0c 94 76 74 	jmp	0xe8ec	; 0xe8ec <__fp_inf>
    e774:	0c 94 02 75 	jmp	0xea04	; 0xea04 <__fp_szero>
    e778:	5f 3f       	cpi	r21, 0xFF	; 255
    e77a:	e4 f3       	brlt	.-8      	; 0xe774 <__divsf3_pse+0x6c>
    e77c:	98 3e       	cpi	r25, 0xE8	; 232
    e77e:	d4 f3       	brlt	.-12     	; 0xe774 <__divsf3_pse+0x6c>
    e780:	86 95       	lsr	r24
    e782:	77 95       	ror	r23
    e784:	67 95       	ror	r22
    e786:	b7 95       	ror	r27
    e788:	f7 95       	ror	r31
    e78a:	9f 5f       	subi	r25, 0xFF	; 255
    e78c:	c9 f7       	brne	.-14     	; 0xe780 <__divsf3_pse+0x78>
    e78e:	88 0f       	add	r24, r24
    e790:	91 1d       	adc	r25, r1
    e792:	96 95       	lsr	r25
    e794:	87 95       	ror	r24
    e796:	97 f9       	bld	r25, 7
    e798:	08 95       	ret
    e79a:	e1 e0       	ldi	r30, 0x01	; 1
    e79c:	66 0f       	add	r22, r22
    e79e:	77 1f       	adc	r23, r23
    e7a0:	88 1f       	adc	r24, r24
    e7a2:	bb 1f       	adc	r27, r27
    e7a4:	62 17       	cp	r22, r18
    e7a6:	73 07       	cpc	r23, r19
    e7a8:	84 07       	cpc	r24, r20
    e7aa:	ba 07       	cpc	r27, r26
    e7ac:	20 f0       	brcs	.+8      	; 0xe7b6 <__divsf3_pse+0xae>
    e7ae:	62 1b       	sub	r22, r18
    e7b0:	73 0b       	sbc	r23, r19
    e7b2:	84 0b       	sbc	r24, r20
    e7b4:	ba 0b       	sbc	r27, r26
    e7b6:	ee 1f       	adc	r30, r30
    e7b8:	88 f7       	brcc	.-30     	; 0xe79c <__divsf3_pse+0x94>
    e7ba:	e0 95       	com	r30
    e7bc:	08 95       	ret

0000e7be <__fixsfsi>:
    e7be:	0e 94 e6 73 	call	0xe7cc	; 0xe7cc <__fixunssfsi>
    e7c2:	68 94       	set
    e7c4:	b1 11       	cpse	r27, r1
    e7c6:	0c 94 02 75 	jmp	0xea04	; 0xea04 <__fp_szero>
    e7ca:	08 95       	ret

0000e7cc <__fixunssfsi>:
    e7cc:	0e 94 cf 74 	call	0xe99e	; 0xe99e <__fp_splitA>
    e7d0:	88 f0       	brcs	.+34     	; 0xe7f4 <__fixunssfsi+0x28>
    e7d2:	9f 57       	subi	r25, 0x7F	; 127
    e7d4:	98 f0       	brcs	.+38     	; 0xe7fc <__fixunssfsi+0x30>
    e7d6:	b9 2f       	mov	r27, r25
    e7d8:	99 27       	eor	r25, r25
    e7da:	b7 51       	subi	r27, 0x17	; 23
    e7dc:	b0 f0       	brcs	.+44     	; 0xe80a <__fixunssfsi+0x3e>
    e7de:	e1 f0       	breq	.+56     	; 0xe818 <__fixunssfsi+0x4c>
    e7e0:	66 0f       	add	r22, r22
    e7e2:	77 1f       	adc	r23, r23
    e7e4:	88 1f       	adc	r24, r24
    e7e6:	99 1f       	adc	r25, r25
    e7e8:	1a f0       	brmi	.+6      	; 0xe7f0 <__fixunssfsi+0x24>
    e7ea:	ba 95       	dec	r27
    e7ec:	c9 f7       	brne	.-14     	; 0xe7e0 <__fixunssfsi+0x14>
    e7ee:	14 c0       	rjmp	.+40     	; 0xe818 <__fixunssfsi+0x4c>
    e7f0:	b1 30       	cpi	r27, 0x01	; 1
    e7f2:	91 f0       	breq	.+36     	; 0xe818 <__fixunssfsi+0x4c>
    e7f4:	0e 94 01 75 	call	0xea02	; 0xea02 <__fp_zero>
    e7f8:	b1 e0       	ldi	r27, 0x01	; 1
    e7fa:	08 95       	ret
    e7fc:	0c 94 01 75 	jmp	0xea02	; 0xea02 <__fp_zero>
    e800:	67 2f       	mov	r22, r23
    e802:	78 2f       	mov	r23, r24
    e804:	88 27       	eor	r24, r24
    e806:	b8 5f       	subi	r27, 0xF8	; 248
    e808:	39 f0       	breq	.+14     	; 0xe818 <__fixunssfsi+0x4c>
    e80a:	b9 3f       	cpi	r27, 0xF9	; 249
    e80c:	cc f3       	brlt	.-14     	; 0xe800 <__fixunssfsi+0x34>
    e80e:	86 95       	lsr	r24
    e810:	77 95       	ror	r23
    e812:	67 95       	ror	r22
    e814:	b3 95       	inc	r27
    e816:	d9 f7       	brne	.-10     	; 0xe80e <__fixunssfsi+0x42>
    e818:	3e f4       	brtc	.+14     	; 0xe828 <__fixunssfsi+0x5c>
    e81a:	90 95       	com	r25
    e81c:	80 95       	com	r24
    e81e:	70 95       	com	r23
    e820:	61 95       	neg	r22
    e822:	7f 4f       	sbci	r23, 0xFF	; 255
    e824:	8f 4f       	sbci	r24, 0xFF	; 255
    e826:	9f 4f       	sbci	r25, 0xFF	; 255
    e828:	08 95       	ret

0000e82a <__floatunsisf>:
    e82a:	e8 94       	clt
    e82c:	09 c0       	rjmp	.+18     	; 0xe840 <__floatsisf+0x12>

0000e82e <__floatsisf>:
    e82e:	97 fb       	bst	r25, 7
    e830:	3e f4       	brtc	.+14     	; 0xe840 <__floatsisf+0x12>
    e832:	90 95       	com	r25
    e834:	80 95       	com	r24
    e836:	70 95       	com	r23
    e838:	61 95       	neg	r22
    e83a:	7f 4f       	sbci	r23, 0xFF	; 255
    e83c:	8f 4f       	sbci	r24, 0xFF	; 255
    e83e:	9f 4f       	sbci	r25, 0xFF	; 255
    e840:	99 23       	and	r25, r25
    e842:	a9 f0       	breq	.+42     	; 0xe86e <__floatsisf+0x40>
    e844:	f9 2f       	mov	r31, r25
    e846:	96 e9       	ldi	r25, 0x96	; 150
    e848:	bb 27       	eor	r27, r27
    e84a:	93 95       	inc	r25
    e84c:	f6 95       	lsr	r31
    e84e:	87 95       	ror	r24
    e850:	77 95       	ror	r23
    e852:	67 95       	ror	r22
    e854:	b7 95       	ror	r27
    e856:	f1 11       	cpse	r31, r1
    e858:	f8 cf       	rjmp	.-16     	; 0xe84a <__floatsisf+0x1c>
    e85a:	fa f4       	brpl	.+62     	; 0xe89a <__floatsisf+0x6c>
    e85c:	bb 0f       	add	r27, r27
    e85e:	11 f4       	brne	.+4      	; 0xe864 <__floatsisf+0x36>
    e860:	60 ff       	sbrs	r22, 0
    e862:	1b c0       	rjmp	.+54     	; 0xe89a <__floatsisf+0x6c>
    e864:	6f 5f       	subi	r22, 0xFF	; 255
    e866:	7f 4f       	sbci	r23, 0xFF	; 255
    e868:	8f 4f       	sbci	r24, 0xFF	; 255
    e86a:	9f 4f       	sbci	r25, 0xFF	; 255
    e86c:	16 c0       	rjmp	.+44     	; 0xe89a <__floatsisf+0x6c>
    e86e:	88 23       	and	r24, r24
    e870:	11 f0       	breq	.+4      	; 0xe876 <__floatsisf+0x48>
    e872:	96 e9       	ldi	r25, 0x96	; 150
    e874:	11 c0       	rjmp	.+34     	; 0xe898 <__floatsisf+0x6a>
    e876:	77 23       	and	r23, r23
    e878:	21 f0       	breq	.+8      	; 0xe882 <__floatsisf+0x54>
    e87a:	9e e8       	ldi	r25, 0x8E	; 142
    e87c:	87 2f       	mov	r24, r23
    e87e:	76 2f       	mov	r23, r22
    e880:	05 c0       	rjmp	.+10     	; 0xe88c <__floatsisf+0x5e>
    e882:	66 23       	and	r22, r22
    e884:	71 f0       	breq	.+28     	; 0xe8a2 <__floatsisf+0x74>
    e886:	96 e8       	ldi	r25, 0x86	; 134
    e888:	86 2f       	mov	r24, r22
    e88a:	70 e0       	ldi	r23, 0x00	; 0
    e88c:	60 e0       	ldi	r22, 0x00	; 0
    e88e:	2a f0       	brmi	.+10     	; 0xe89a <__floatsisf+0x6c>
    e890:	9a 95       	dec	r25
    e892:	66 0f       	add	r22, r22
    e894:	77 1f       	adc	r23, r23
    e896:	88 1f       	adc	r24, r24
    e898:	da f7       	brpl	.-10     	; 0xe890 <__floatsisf+0x62>
    e89a:	88 0f       	add	r24, r24
    e89c:	96 95       	lsr	r25
    e89e:	87 95       	ror	r24
    e8a0:	97 f9       	bld	r25, 7
    e8a2:	08 95       	ret

0000e8a4 <__fp_cmp>:
    e8a4:	99 0f       	add	r25, r25
    e8a6:	00 08       	sbc	r0, r0
    e8a8:	55 0f       	add	r21, r21
    e8aa:	aa 0b       	sbc	r26, r26
    e8ac:	e0 e8       	ldi	r30, 0x80	; 128
    e8ae:	fe ef       	ldi	r31, 0xFE	; 254
    e8b0:	16 16       	cp	r1, r22
    e8b2:	17 06       	cpc	r1, r23
    e8b4:	e8 07       	cpc	r30, r24
    e8b6:	f9 07       	cpc	r31, r25
    e8b8:	c0 f0       	brcs	.+48     	; 0xe8ea <__fp_cmp+0x46>
    e8ba:	12 16       	cp	r1, r18
    e8bc:	13 06       	cpc	r1, r19
    e8be:	e4 07       	cpc	r30, r20
    e8c0:	f5 07       	cpc	r31, r21
    e8c2:	98 f0       	brcs	.+38     	; 0xe8ea <__fp_cmp+0x46>
    e8c4:	62 1b       	sub	r22, r18
    e8c6:	73 0b       	sbc	r23, r19
    e8c8:	84 0b       	sbc	r24, r20
    e8ca:	95 0b       	sbc	r25, r21
    e8cc:	39 f4       	brne	.+14     	; 0xe8dc <__fp_cmp+0x38>
    e8ce:	0a 26       	eor	r0, r26
    e8d0:	61 f0       	breq	.+24     	; 0xe8ea <__fp_cmp+0x46>
    e8d2:	23 2b       	or	r18, r19
    e8d4:	24 2b       	or	r18, r20
    e8d6:	25 2b       	or	r18, r21
    e8d8:	21 f4       	brne	.+8      	; 0xe8e2 <__fp_cmp+0x3e>
    e8da:	08 95       	ret
    e8dc:	0a 26       	eor	r0, r26
    e8de:	09 f4       	brne	.+2      	; 0xe8e2 <__fp_cmp+0x3e>
    e8e0:	a1 40       	sbci	r26, 0x01	; 1
    e8e2:	a6 95       	lsr	r26
    e8e4:	8f ef       	ldi	r24, 0xFF	; 255
    e8e6:	81 1d       	adc	r24, r1
    e8e8:	81 1d       	adc	r24, r1
    e8ea:	08 95       	ret

0000e8ec <__fp_inf>:
    e8ec:	97 f9       	bld	r25, 7
    e8ee:	9f 67       	ori	r25, 0x7F	; 127
    e8f0:	80 e8       	ldi	r24, 0x80	; 128
    e8f2:	70 e0       	ldi	r23, 0x00	; 0
    e8f4:	60 e0       	ldi	r22, 0x00	; 0
    e8f6:	08 95       	ret

0000e8f8 <__fp_mintl>:
    e8f8:	88 23       	and	r24, r24
    e8fa:	71 f4       	brne	.+28     	; 0xe918 <__fp_mintl+0x20>
    e8fc:	77 23       	and	r23, r23
    e8fe:	21 f0       	breq	.+8      	; 0xe908 <__fp_mintl+0x10>
    e900:	98 50       	subi	r25, 0x08	; 8
    e902:	87 2b       	or	r24, r23
    e904:	76 2f       	mov	r23, r22
    e906:	07 c0       	rjmp	.+14     	; 0xe916 <__fp_mintl+0x1e>
    e908:	66 23       	and	r22, r22
    e90a:	11 f4       	brne	.+4      	; 0xe910 <__fp_mintl+0x18>
    e90c:	99 27       	eor	r25, r25
    e90e:	0d c0       	rjmp	.+26     	; 0xe92a <__fp_mintl+0x32>
    e910:	90 51       	subi	r25, 0x10	; 16
    e912:	86 2b       	or	r24, r22
    e914:	70 e0       	ldi	r23, 0x00	; 0
    e916:	60 e0       	ldi	r22, 0x00	; 0
    e918:	2a f0       	brmi	.+10     	; 0xe924 <__fp_mintl+0x2c>
    e91a:	9a 95       	dec	r25
    e91c:	66 0f       	add	r22, r22
    e91e:	77 1f       	adc	r23, r23
    e920:	88 1f       	adc	r24, r24
    e922:	da f7       	brpl	.-10     	; 0xe91a <__fp_mintl+0x22>
    e924:	88 0f       	add	r24, r24
    e926:	96 95       	lsr	r25
    e928:	87 95       	ror	r24
    e92a:	97 f9       	bld	r25, 7
    e92c:	08 95       	ret

0000e92e <__fp_mpack>:
    e92e:	9f 3f       	cpi	r25, 0xFF	; 255
    e930:	31 f0       	breq	.+12     	; 0xe93e <__fp_mpack_finite+0xc>

0000e932 <__fp_mpack_finite>:
    e932:	91 50       	subi	r25, 0x01	; 1
    e934:	20 f4       	brcc	.+8      	; 0xe93e <__fp_mpack_finite+0xc>
    e936:	87 95       	ror	r24
    e938:	77 95       	ror	r23
    e93a:	67 95       	ror	r22
    e93c:	b7 95       	ror	r27
    e93e:	88 0f       	add	r24, r24
    e940:	91 1d       	adc	r25, r1
    e942:	96 95       	lsr	r25
    e944:	87 95       	ror	r24
    e946:	97 f9       	bld	r25, 7
    e948:	08 95       	ret

0000e94a <__fp_nan>:
    e94a:	9f ef       	ldi	r25, 0xFF	; 255
    e94c:	80 ec       	ldi	r24, 0xC0	; 192
    e94e:	08 95       	ret

0000e950 <__fp_pscA>:
    e950:	00 24       	eor	r0, r0
    e952:	0a 94       	dec	r0
    e954:	16 16       	cp	r1, r22
    e956:	17 06       	cpc	r1, r23
    e958:	18 06       	cpc	r1, r24
    e95a:	09 06       	cpc	r0, r25
    e95c:	08 95       	ret

0000e95e <__fp_pscB>:
    e95e:	00 24       	eor	r0, r0
    e960:	0a 94       	dec	r0
    e962:	12 16       	cp	r1, r18
    e964:	13 06       	cpc	r1, r19
    e966:	14 06       	cpc	r1, r20
    e968:	05 06       	cpc	r0, r21
    e96a:	08 95       	ret

0000e96c <__fp_round>:
    e96c:	09 2e       	mov	r0, r25
    e96e:	03 94       	inc	r0
    e970:	00 0c       	add	r0, r0
    e972:	11 f4       	brne	.+4      	; 0xe978 <__fp_round+0xc>
    e974:	88 23       	and	r24, r24
    e976:	52 f0       	brmi	.+20     	; 0xe98c <__fp_round+0x20>
    e978:	bb 0f       	add	r27, r27
    e97a:	40 f4       	brcc	.+16     	; 0xe98c <__fp_round+0x20>
    e97c:	bf 2b       	or	r27, r31
    e97e:	11 f4       	brne	.+4      	; 0xe984 <__fp_round+0x18>
    e980:	60 ff       	sbrs	r22, 0
    e982:	04 c0       	rjmp	.+8      	; 0xe98c <__fp_round+0x20>
    e984:	6f 5f       	subi	r22, 0xFF	; 255
    e986:	7f 4f       	sbci	r23, 0xFF	; 255
    e988:	8f 4f       	sbci	r24, 0xFF	; 255
    e98a:	9f 4f       	sbci	r25, 0xFF	; 255
    e98c:	08 95       	ret

0000e98e <__fp_split3>:
    e98e:	57 fd       	sbrc	r21, 7
    e990:	90 58       	subi	r25, 0x80	; 128
    e992:	44 0f       	add	r20, r20
    e994:	55 1f       	adc	r21, r21
    e996:	59 f0       	breq	.+22     	; 0xe9ae <__fp_splitA+0x10>
    e998:	5f 3f       	cpi	r21, 0xFF	; 255
    e99a:	71 f0       	breq	.+28     	; 0xe9b8 <__fp_splitA+0x1a>
    e99c:	47 95       	ror	r20

0000e99e <__fp_splitA>:
    e99e:	88 0f       	add	r24, r24
    e9a0:	97 fb       	bst	r25, 7
    e9a2:	99 1f       	adc	r25, r25
    e9a4:	61 f0       	breq	.+24     	; 0xe9be <__fp_splitA+0x20>
    e9a6:	9f 3f       	cpi	r25, 0xFF	; 255
    e9a8:	79 f0       	breq	.+30     	; 0xe9c8 <__fp_splitA+0x2a>
    e9aa:	87 95       	ror	r24
    e9ac:	08 95       	ret
    e9ae:	12 16       	cp	r1, r18
    e9b0:	13 06       	cpc	r1, r19
    e9b2:	14 06       	cpc	r1, r20
    e9b4:	55 1f       	adc	r21, r21
    e9b6:	f2 cf       	rjmp	.-28     	; 0xe99c <__fp_split3+0xe>
    e9b8:	46 95       	lsr	r20
    e9ba:	f1 df       	rcall	.-30     	; 0xe99e <__fp_splitA>
    e9bc:	08 c0       	rjmp	.+16     	; 0xe9ce <__fp_splitA+0x30>
    e9be:	16 16       	cp	r1, r22
    e9c0:	17 06       	cpc	r1, r23
    e9c2:	18 06       	cpc	r1, r24
    e9c4:	99 1f       	adc	r25, r25
    e9c6:	f1 cf       	rjmp	.-30     	; 0xe9aa <__fp_splitA+0xc>
    e9c8:	86 95       	lsr	r24
    e9ca:	71 05       	cpc	r23, r1
    e9cc:	61 05       	cpc	r22, r1
    e9ce:	08 94       	sec
    e9d0:	08 95       	ret

0000e9d2 <__fp_trunc>:
    e9d2:	0e 94 cf 74 	call	0xe99e	; 0xe99e <__fp_splitA>
    e9d6:	a0 f0       	brcs	.+40     	; 0xea00 <__fp_trunc+0x2e>
    e9d8:	be e7       	ldi	r27, 0x7E	; 126
    e9da:	b9 17       	cp	r27, r25
    e9dc:	88 f4       	brcc	.+34     	; 0xea00 <__fp_trunc+0x2e>
    e9de:	bb 27       	eor	r27, r27
    e9e0:	9f 38       	cpi	r25, 0x8F	; 143
    e9e2:	60 f4       	brcc	.+24     	; 0xe9fc <__fp_trunc+0x2a>
    e9e4:	16 16       	cp	r1, r22
    e9e6:	b1 1d       	adc	r27, r1
    e9e8:	67 2f       	mov	r22, r23
    e9ea:	78 2f       	mov	r23, r24
    e9ec:	88 27       	eor	r24, r24
    e9ee:	98 5f       	subi	r25, 0xF8	; 248
    e9f0:	f7 cf       	rjmp	.-18     	; 0xe9e0 <__fp_trunc+0xe>
    e9f2:	86 95       	lsr	r24
    e9f4:	77 95       	ror	r23
    e9f6:	67 95       	ror	r22
    e9f8:	b1 1d       	adc	r27, r1
    e9fa:	93 95       	inc	r25
    e9fc:	96 39       	cpi	r25, 0x96	; 150
    e9fe:	c8 f3       	brcs	.-14     	; 0xe9f2 <__fp_trunc+0x20>
    ea00:	08 95       	ret

0000ea02 <__fp_zero>:
    ea02:	e8 94       	clt

0000ea04 <__fp_szero>:
    ea04:	bb 27       	eor	r27, r27
    ea06:	66 27       	eor	r22, r22
    ea08:	77 27       	eor	r23, r23
    ea0a:	cb 01       	movw	r24, r22
    ea0c:	97 f9       	bld	r25, 7
    ea0e:	08 95       	ret

0000ea10 <__gesf2>:
    ea10:	0e 94 52 74 	call	0xe8a4	; 0xe8a4 <__fp_cmp>
    ea14:	08 f4       	brcc	.+2      	; 0xea18 <__gesf2+0x8>
    ea16:	8f ef       	ldi	r24, 0xFF	; 255
    ea18:	08 95       	ret

0000ea1a <__mulsf3>:
    ea1a:	0e 94 20 75 	call	0xea40	; 0xea40 <__mulsf3x>
    ea1e:	0c 94 b6 74 	jmp	0xe96c	; 0xe96c <__fp_round>
    ea22:	0e 94 a8 74 	call	0xe950	; 0xe950 <__fp_pscA>
    ea26:	38 f0       	brcs	.+14     	; 0xea36 <__mulsf3+0x1c>
    ea28:	0e 94 af 74 	call	0xe95e	; 0xe95e <__fp_pscB>
    ea2c:	20 f0       	brcs	.+8      	; 0xea36 <__mulsf3+0x1c>
    ea2e:	95 23       	and	r25, r21
    ea30:	11 f0       	breq	.+4      	; 0xea36 <__mulsf3+0x1c>
    ea32:	0c 94 76 74 	jmp	0xe8ec	; 0xe8ec <__fp_inf>
    ea36:	0c 94 a5 74 	jmp	0xe94a	; 0xe94a <__fp_nan>
    ea3a:	11 24       	eor	r1, r1
    ea3c:	0c 94 02 75 	jmp	0xea04	; 0xea04 <__fp_szero>

0000ea40 <__mulsf3x>:
    ea40:	0e 94 c7 74 	call	0xe98e	; 0xe98e <__fp_split3>
    ea44:	70 f3       	brcs	.-36     	; 0xea22 <__mulsf3+0x8>

0000ea46 <__mulsf3_pse>:
    ea46:	95 9f       	mul	r25, r21
    ea48:	c1 f3       	breq	.-16     	; 0xea3a <__mulsf3+0x20>
    ea4a:	95 0f       	add	r25, r21
    ea4c:	50 e0       	ldi	r21, 0x00	; 0
    ea4e:	55 1f       	adc	r21, r21
    ea50:	62 9f       	mul	r22, r18
    ea52:	f0 01       	movw	r30, r0
    ea54:	72 9f       	mul	r23, r18
    ea56:	bb 27       	eor	r27, r27
    ea58:	f0 0d       	add	r31, r0
    ea5a:	b1 1d       	adc	r27, r1
    ea5c:	63 9f       	mul	r22, r19
    ea5e:	aa 27       	eor	r26, r26
    ea60:	f0 0d       	add	r31, r0
    ea62:	b1 1d       	adc	r27, r1
    ea64:	aa 1f       	adc	r26, r26
    ea66:	64 9f       	mul	r22, r20
    ea68:	66 27       	eor	r22, r22
    ea6a:	b0 0d       	add	r27, r0
    ea6c:	a1 1d       	adc	r26, r1
    ea6e:	66 1f       	adc	r22, r22
    ea70:	82 9f       	mul	r24, r18
    ea72:	22 27       	eor	r18, r18
    ea74:	b0 0d       	add	r27, r0
    ea76:	a1 1d       	adc	r26, r1
    ea78:	62 1f       	adc	r22, r18
    ea7a:	73 9f       	mul	r23, r19
    ea7c:	b0 0d       	add	r27, r0
    ea7e:	a1 1d       	adc	r26, r1
    ea80:	62 1f       	adc	r22, r18
    ea82:	83 9f       	mul	r24, r19
    ea84:	a0 0d       	add	r26, r0
    ea86:	61 1d       	adc	r22, r1
    ea88:	22 1f       	adc	r18, r18
    ea8a:	74 9f       	mul	r23, r20
    ea8c:	33 27       	eor	r19, r19
    ea8e:	a0 0d       	add	r26, r0
    ea90:	61 1d       	adc	r22, r1
    ea92:	23 1f       	adc	r18, r19
    ea94:	84 9f       	mul	r24, r20
    ea96:	60 0d       	add	r22, r0
    ea98:	21 1d       	adc	r18, r1
    ea9a:	82 2f       	mov	r24, r18
    ea9c:	76 2f       	mov	r23, r22
    ea9e:	6a 2f       	mov	r22, r26
    eaa0:	11 24       	eor	r1, r1
    eaa2:	9f 57       	subi	r25, 0x7F	; 127
    eaa4:	50 40       	sbci	r21, 0x00	; 0
    eaa6:	9a f0       	brmi	.+38     	; 0xeace <__mulsf3_pse+0x88>
    eaa8:	f1 f0       	breq	.+60     	; 0xeae6 <__mulsf3_pse+0xa0>
    eaaa:	88 23       	and	r24, r24
    eaac:	4a f0       	brmi	.+18     	; 0xeac0 <__mulsf3_pse+0x7a>
    eaae:	ee 0f       	add	r30, r30
    eab0:	ff 1f       	adc	r31, r31
    eab2:	bb 1f       	adc	r27, r27
    eab4:	66 1f       	adc	r22, r22
    eab6:	77 1f       	adc	r23, r23
    eab8:	88 1f       	adc	r24, r24
    eaba:	91 50       	subi	r25, 0x01	; 1
    eabc:	50 40       	sbci	r21, 0x00	; 0
    eabe:	a9 f7       	brne	.-22     	; 0xeaaa <__mulsf3_pse+0x64>
    eac0:	9e 3f       	cpi	r25, 0xFE	; 254
    eac2:	51 05       	cpc	r21, r1
    eac4:	80 f0       	brcs	.+32     	; 0xeae6 <__mulsf3_pse+0xa0>
    eac6:	0c 94 76 74 	jmp	0xe8ec	; 0xe8ec <__fp_inf>
    eaca:	0c 94 02 75 	jmp	0xea04	; 0xea04 <__fp_szero>
    eace:	5f 3f       	cpi	r21, 0xFF	; 255
    ead0:	e4 f3       	brlt	.-8      	; 0xeaca <__mulsf3_pse+0x84>
    ead2:	98 3e       	cpi	r25, 0xE8	; 232
    ead4:	d4 f3       	brlt	.-12     	; 0xeaca <__mulsf3_pse+0x84>
    ead6:	86 95       	lsr	r24
    ead8:	77 95       	ror	r23
    eada:	67 95       	ror	r22
    eadc:	b7 95       	ror	r27
    eade:	f7 95       	ror	r31
    eae0:	e7 95       	ror	r30
    eae2:	9f 5f       	subi	r25, 0xFF	; 255
    eae4:	c1 f7       	brne	.-16     	; 0xead6 <__mulsf3_pse+0x90>
    eae6:	fe 2b       	or	r31, r30
    eae8:	88 0f       	add	r24, r24
    eaea:	91 1d       	adc	r25, r1
    eaec:	96 95       	lsr	r25
    eaee:	87 95       	ror	r24
    eaf0:	97 f9       	bld	r25, 7
    eaf2:	08 95       	ret

0000eaf4 <__mulsi3>:
    eaf4:	db 01       	movw	r26, r22
    eaf6:	8f 93       	push	r24
    eaf8:	9f 93       	push	r25
    eafa:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    eafe:	bf 91       	pop	r27
    eb00:	af 91       	pop	r26
    eb02:	a2 9f       	mul	r26, r18
    eb04:	80 0d       	add	r24, r0
    eb06:	91 1d       	adc	r25, r1
    eb08:	a3 9f       	mul	r26, r19
    eb0a:	90 0d       	add	r25, r0
    eb0c:	b2 9f       	mul	r27, r18
    eb0e:	90 0d       	add	r25, r0
    eb10:	11 24       	eor	r1, r1
    eb12:	08 95       	ret

0000eb14 <__udivmodhi4>:
    eb14:	aa 1b       	sub	r26, r26
    eb16:	bb 1b       	sub	r27, r27
    eb18:	51 e1       	ldi	r21, 0x11	; 17
    eb1a:	07 c0       	rjmp	.+14     	; 0xeb2a <__udivmodhi4_ep>

0000eb1c <__udivmodhi4_loop>:
    eb1c:	aa 1f       	adc	r26, r26
    eb1e:	bb 1f       	adc	r27, r27
    eb20:	a6 17       	cp	r26, r22
    eb22:	b7 07       	cpc	r27, r23
    eb24:	10 f0       	brcs	.+4      	; 0xeb2a <__udivmodhi4_ep>
    eb26:	a6 1b       	sub	r26, r22
    eb28:	b7 0b       	sbc	r27, r23

0000eb2a <__udivmodhi4_ep>:
    eb2a:	88 1f       	adc	r24, r24
    eb2c:	99 1f       	adc	r25, r25
    eb2e:	5a 95       	dec	r21
    eb30:	a9 f7       	brne	.-22     	; 0xeb1c <__udivmodhi4_loop>
    eb32:	80 95       	com	r24
    eb34:	90 95       	com	r25
    eb36:	bc 01       	movw	r22, r24
    eb38:	cd 01       	movw	r24, r26
    eb3a:	08 95       	ret

0000eb3c <__divmodhi4>:
    eb3c:	97 fb       	bst	r25, 7
    eb3e:	07 2e       	mov	r0, r23
    eb40:	16 f4       	brtc	.+4      	; 0xeb46 <__divmodhi4+0xa>
    eb42:	00 94       	com	r0
    eb44:	07 d0       	rcall	.+14     	; 0xeb54 <__divmodhi4_neg1>
    eb46:	77 fd       	sbrc	r23, 7
    eb48:	09 d0       	rcall	.+18     	; 0xeb5c <__divmodhi4_neg2>
    eb4a:	0e 94 8a 75 	call	0xeb14	; 0xeb14 <__udivmodhi4>
    eb4e:	07 fc       	sbrc	r0, 7
    eb50:	05 d0       	rcall	.+10     	; 0xeb5c <__divmodhi4_neg2>
    eb52:	3e f4       	brtc	.+14     	; 0xeb62 <__divmodhi4_exit>

0000eb54 <__divmodhi4_neg1>:
    eb54:	90 95       	com	r25
    eb56:	81 95       	neg	r24
    eb58:	9f 4f       	sbci	r25, 0xFF	; 255
    eb5a:	08 95       	ret

0000eb5c <__divmodhi4_neg2>:
    eb5c:	70 95       	com	r23
    eb5e:	61 95       	neg	r22
    eb60:	7f 4f       	sbci	r23, 0xFF	; 255

0000eb62 <__divmodhi4_exit>:
    eb62:	08 95       	ret

0000eb64 <__udivmodsi4>:
    eb64:	a1 e2       	ldi	r26, 0x21	; 33
    eb66:	1a 2e       	mov	r1, r26
    eb68:	aa 1b       	sub	r26, r26
    eb6a:	bb 1b       	sub	r27, r27
    eb6c:	fd 01       	movw	r30, r26
    eb6e:	0d c0       	rjmp	.+26     	; 0xeb8a <__udivmodsi4_ep>

0000eb70 <__udivmodsi4_loop>:
    eb70:	aa 1f       	adc	r26, r26
    eb72:	bb 1f       	adc	r27, r27
    eb74:	ee 1f       	adc	r30, r30
    eb76:	ff 1f       	adc	r31, r31
    eb78:	a2 17       	cp	r26, r18
    eb7a:	b3 07       	cpc	r27, r19
    eb7c:	e4 07       	cpc	r30, r20
    eb7e:	f5 07       	cpc	r31, r21
    eb80:	20 f0       	brcs	.+8      	; 0xeb8a <__udivmodsi4_ep>
    eb82:	a2 1b       	sub	r26, r18
    eb84:	b3 0b       	sbc	r27, r19
    eb86:	e4 0b       	sbc	r30, r20
    eb88:	f5 0b       	sbc	r31, r21

0000eb8a <__udivmodsi4_ep>:
    eb8a:	66 1f       	adc	r22, r22
    eb8c:	77 1f       	adc	r23, r23
    eb8e:	88 1f       	adc	r24, r24
    eb90:	99 1f       	adc	r25, r25
    eb92:	1a 94       	dec	r1
    eb94:	69 f7       	brne	.-38     	; 0xeb70 <__udivmodsi4_loop>
    eb96:	60 95       	com	r22
    eb98:	70 95       	com	r23
    eb9a:	80 95       	com	r24
    eb9c:	90 95       	com	r25
    eb9e:	9b 01       	movw	r18, r22
    eba0:	ac 01       	movw	r20, r24
    eba2:	bd 01       	movw	r22, r26
    eba4:	cf 01       	movw	r24, r30
    eba6:	08 95       	ret

0000eba8 <__divmodsi4>:
    eba8:	05 2e       	mov	r0, r21
    ebaa:	97 fb       	bst	r25, 7
    ebac:	1e f4       	brtc	.+6      	; 0xebb4 <__divmodsi4+0xc>
    ebae:	00 94       	com	r0
    ebb0:	0e 94 eb 75 	call	0xebd6	; 0xebd6 <__negsi2>
    ebb4:	57 fd       	sbrc	r21, 7
    ebb6:	07 d0       	rcall	.+14     	; 0xebc6 <__divmodsi4_neg2>
    ebb8:	0e 94 b2 75 	call	0xeb64	; 0xeb64 <__udivmodsi4>
    ebbc:	07 fc       	sbrc	r0, 7
    ebbe:	03 d0       	rcall	.+6      	; 0xebc6 <__divmodsi4_neg2>
    ebc0:	4e f4       	brtc	.+18     	; 0xebd4 <__divmodsi4_exit>
    ebc2:	0c 94 eb 75 	jmp	0xebd6	; 0xebd6 <__negsi2>

0000ebc6 <__divmodsi4_neg2>:
    ebc6:	50 95       	com	r21
    ebc8:	40 95       	com	r20
    ebca:	30 95       	com	r19
    ebcc:	21 95       	neg	r18
    ebce:	3f 4f       	sbci	r19, 0xFF	; 255
    ebd0:	4f 4f       	sbci	r20, 0xFF	; 255
    ebd2:	5f 4f       	sbci	r21, 0xFF	; 255

0000ebd4 <__divmodsi4_exit>:
    ebd4:	08 95       	ret

0000ebd6 <__negsi2>:
    ebd6:	90 95       	com	r25
    ebd8:	80 95       	com	r24
    ebda:	70 95       	com	r23
    ebdc:	61 95       	neg	r22
    ebde:	7f 4f       	sbci	r23, 0xFF	; 255
    ebe0:	8f 4f       	sbci	r24, 0xFF	; 255
    ebe2:	9f 4f       	sbci	r25, 0xFF	; 255
    ebe4:	08 95       	ret

0000ebe6 <__tablejump2__>:
    ebe6:	ee 0f       	add	r30, r30
    ebe8:	ff 1f       	adc	r31, r31
    ebea:	00 24       	eor	r0, r0
    ebec:	00 1c       	adc	r0, r0
    ebee:	0b be       	out	0x3b, r0	; 59
    ebf0:	07 90       	elpm	r0, Z+
    ebf2:	f6 91       	elpm	r31, Z
    ebf4:	e0 2d       	mov	r30, r0
    ebf6:	09 94       	ijmp

0000ebf8 <__umulhisi3>:
    ebf8:	a2 9f       	mul	r26, r18
    ebfa:	b0 01       	movw	r22, r0
    ebfc:	b3 9f       	mul	r27, r19
    ebfe:	c0 01       	movw	r24, r0
    ec00:	a3 9f       	mul	r26, r19
    ec02:	70 0d       	add	r23, r0
    ec04:	81 1d       	adc	r24, r1
    ec06:	11 24       	eor	r1, r1
    ec08:	91 1d       	adc	r25, r1
    ec0a:	b2 9f       	mul	r27, r18
    ec0c:	70 0d       	add	r23, r0
    ec0e:	81 1d       	adc	r24, r1
    ec10:	11 24       	eor	r1, r1
    ec12:	91 1d       	adc	r25, r1
    ec14:	08 95       	ret

0000ec16 <__muluhisi3>:
    ec16:	0e 94 fc 75 	call	0xebf8	; 0xebf8 <__umulhisi3>
    ec1a:	a5 9f       	mul	r26, r21
    ec1c:	90 0d       	add	r25, r0
    ec1e:	b4 9f       	mul	r27, r20
    ec20:	90 0d       	add	r25, r0
    ec22:	a4 9f       	mul	r26, r20
    ec24:	80 0d       	add	r24, r0
    ec26:	91 1d       	adc	r25, r1
    ec28:	11 24       	eor	r1, r1
    ec2a:	08 95       	ret

0000ec2c <malloc>:
    ec2c:	0f 93       	push	r16
    ec2e:	1f 93       	push	r17
    ec30:	cf 93       	push	r28
    ec32:	df 93       	push	r29
    ec34:	82 30       	cpi	r24, 0x02	; 2
    ec36:	91 05       	cpc	r25, r1
    ec38:	10 f4       	brcc	.+4      	; 0xec3e <malloc+0x12>
    ec3a:	82 e0       	ldi	r24, 0x02	; 2
    ec3c:	90 e0       	ldi	r25, 0x00	; 0
    ec3e:	e0 91 c5 4a 	lds	r30, 0x4AC5	; 0x804ac5 <__flp>
    ec42:	f0 91 c6 4a 	lds	r31, 0x4AC6	; 0x804ac6 <__flp+0x1>
    ec46:	20 e0       	ldi	r18, 0x00	; 0
    ec48:	30 e0       	ldi	r19, 0x00	; 0
    ec4a:	a0 e0       	ldi	r26, 0x00	; 0
    ec4c:	b0 e0       	ldi	r27, 0x00	; 0
    ec4e:	30 97       	sbiw	r30, 0x00	; 0
    ec50:	19 f1       	breq	.+70     	; 0xec98 <malloc+0x6c>
    ec52:	40 81       	ld	r20, Z
    ec54:	51 81       	ldd	r21, Z+1	; 0x01
    ec56:	02 81       	ldd	r16, Z+2	; 0x02
    ec58:	13 81       	ldd	r17, Z+3	; 0x03
    ec5a:	48 17       	cp	r20, r24
    ec5c:	59 07       	cpc	r21, r25
    ec5e:	c8 f0       	brcs	.+50     	; 0xec92 <malloc+0x66>
    ec60:	84 17       	cp	r24, r20
    ec62:	95 07       	cpc	r25, r21
    ec64:	69 f4       	brne	.+26     	; 0xec80 <malloc+0x54>
    ec66:	10 97       	sbiw	r26, 0x00	; 0
    ec68:	31 f0       	breq	.+12     	; 0xec76 <malloc+0x4a>
    ec6a:	12 96       	adiw	r26, 0x02	; 2
    ec6c:	0c 93       	st	X, r16
    ec6e:	12 97       	sbiw	r26, 0x02	; 2
    ec70:	13 96       	adiw	r26, 0x03	; 3
    ec72:	1c 93       	st	X, r17
    ec74:	27 c0       	rjmp	.+78     	; 0xecc4 <malloc+0x98>
    ec76:	00 93 c5 4a 	sts	0x4AC5, r16	; 0x804ac5 <__flp>
    ec7a:	10 93 c6 4a 	sts	0x4AC6, r17	; 0x804ac6 <__flp+0x1>
    ec7e:	22 c0       	rjmp	.+68     	; 0xecc4 <malloc+0x98>
    ec80:	21 15       	cp	r18, r1
    ec82:	31 05       	cpc	r19, r1
    ec84:	19 f0       	breq	.+6      	; 0xec8c <malloc+0x60>
    ec86:	42 17       	cp	r20, r18
    ec88:	53 07       	cpc	r21, r19
    ec8a:	18 f4       	brcc	.+6      	; 0xec92 <malloc+0x66>
    ec8c:	9a 01       	movw	r18, r20
    ec8e:	bd 01       	movw	r22, r26
    ec90:	ef 01       	movw	r28, r30
    ec92:	df 01       	movw	r26, r30
    ec94:	f8 01       	movw	r30, r16
    ec96:	db cf       	rjmp	.-74     	; 0xec4e <malloc+0x22>
    ec98:	21 15       	cp	r18, r1
    ec9a:	31 05       	cpc	r19, r1
    ec9c:	f9 f0       	breq	.+62     	; 0xecdc <malloc+0xb0>
    ec9e:	28 1b       	sub	r18, r24
    eca0:	39 0b       	sbc	r19, r25
    eca2:	24 30       	cpi	r18, 0x04	; 4
    eca4:	31 05       	cpc	r19, r1
    eca6:	80 f4       	brcc	.+32     	; 0xecc8 <malloc+0x9c>
    eca8:	8a 81       	ldd	r24, Y+2	; 0x02
    ecaa:	9b 81       	ldd	r25, Y+3	; 0x03
    ecac:	61 15       	cp	r22, r1
    ecae:	71 05       	cpc	r23, r1
    ecb0:	21 f0       	breq	.+8      	; 0xecba <malloc+0x8e>
    ecb2:	fb 01       	movw	r30, r22
    ecb4:	82 83       	std	Z+2, r24	; 0x02
    ecb6:	93 83       	std	Z+3, r25	; 0x03
    ecb8:	04 c0       	rjmp	.+8      	; 0xecc2 <malloc+0x96>
    ecba:	80 93 c5 4a 	sts	0x4AC5, r24	; 0x804ac5 <__flp>
    ecbe:	90 93 c6 4a 	sts	0x4AC6, r25	; 0x804ac6 <__flp+0x1>
    ecc2:	fe 01       	movw	r30, r28
    ecc4:	32 96       	adiw	r30, 0x02	; 2
    ecc6:	44 c0       	rjmp	.+136    	; 0xed50 <malloc+0x124>
    ecc8:	fe 01       	movw	r30, r28
    ecca:	e2 0f       	add	r30, r18
    eccc:	f3 1f       	adc	r31, r19
    ecce:	81 93       	st	Z+, r24
    ecd0:	91 93       	st	Z+, r25
    ecd2:	22 50       	subi	r18, 0x02	; 2
    ecd4:	31 09       	sbc	r19, r1
    ecd6:	28 83       	st	Y, r18
    ecd8:	39 83       	std	Y+1, r19	; 0x01
    ecda:	3a c0       	rjmp	.+116    	; 0xed50 <malloc+0x124>
    ecdc:	20 91 c3 4a 	lds	r18, 0x4AC3	; 0x804ac3 <__brkval>
    ece0:	30 91 c4 4a 	lds	r19, 0x4AC4	; 0x804ac4 <__brkval+0x1>
    ece4:	23 2b       	or	r18, r19
    ece6:	41 f4       	brne	.+16     	; 0xecf8 <malloc+0xcc>
    ece8:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    ecec:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    ecf0:	20 93 c3 4a 	sts	0x4AC3, r18	; 0x804ac3 <__brkval>
    ecf4:	30 93 c4 4a 	sts	0x4AC4, r19	; 0x804ac4 <__brkval+0x1>
    ecf8:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    ecfc:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    ed00:	21 15       	cp	r18, r1
    ed02:	31 05       	cpc	r19, r1
    ed04:	41 f4       	brne	.+16     	; 0xed16 <malloc+0xea>
    ed06:	2d b7       	in	r18, 0x3d	; 61
    ed08:	3e b7       	in	r19, 0x3e	; 62
    ed0a:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    ed0e:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    ed12:	24 1b       	sub	r18, r20
    ed14:	35 0b       	sbc	r19, r21
    ed16:	e0 91 c3 4a 	lds	r30, 0x4AC3	; 0x804ac3 <__brkval>
    ed1a:	f0 91 c4 4a 	lds	r31, 0x4AC4	; 0x804ac4 <__brkval+0x1>
    ed1e:	e2 17       	cp	r30, r18
    ed20:	f3 07       	cpc	r31, r19
    ed22:	a0 f4       	brcc	.+40     	; 0xed4c <malloc+0x120>
    ed24:	2e 1b       	sub	r18, r30
    ed26:	3f 0b       	sbc	r19, r31
    ed28:	28 17       	cp	r18, r24
    ed2a:	39 07       	cpc	r19, r25
    ed2c:	78 f0       	brcs	.+30     	; 0xed4c <malloc+0x120>
    ed2e:	ac 01       	movw	r20, r24
    ed30:	4e 5f       	subi	r20, 0xFE	; 254
    ed32:	5f 4f       	sbci	r21, 0xFF	; 255
    ed34:	24 17       	cp	r18, r20
    ed36:	35 07       	cpc	r19, r21
    ed38:	48 f0       	brcs	.+18     	; 0xed4c <malloc+0x120>
    ed3a:	4e 0f       	add	r20, r30
    ed3c:	5f 1f       	adc	r21, r31
    ed3e:	40 93 c3 4a 	sts	0x4AC3, r20	; 0x804ac3 <__brkval>
    ed42:	50 93 c4 4a 	sts	0x4AC4, r21	; 0x804ac4 <__brkval+0x1>
    ed46:	81 93       	st	Z+, r24
    ed48:	91 93       	st	Z+, r25
    ed4a:	02 c0       	rjmp	.+4      	; 0xed50 <malloc+0x124>
    ed4c:	e0 e0       	ldi	r30, 0x00	; 0
    ed4e:	f0 e0       	ldi	r31, 0x00	; 0
    ed50:	cf 01       	movw	r24, r30
    ed52:	df 91       	pop	r29
    ed54:	cf 91       	pop	r28
    ed56:	1f 91       	pop	r17
    ed58:	0f 91       	pop	r16
    ed5a:	08 95       	ret

0000ed5c <free>:
    ed5c:	cf 93       	push	r28
    ed5e:	df 93       	push	r29
    ed60:	00 97       	sbiw	r24, 0x00	; 0
    ed62:	09 f4       	brne	.+2      	; 0xed66 <free+0xa>
    ed64:	81 c0       	rjmp	.+258    	; 0xee68 <free+0x10c>
    ed66:	fc 01       	movw	r30, r24
    ed68:	32 97       	sbiw	r30, 0x02	; 2
    ed6a:	12 82       	std	Z+2, r1	; 0x02
    ed6c:	13 82       	std	Z+3, r1	; 0x03
    ed6e:	a0 91 c5 4a 	lds	r26, 0x4AC5	; 0x804ac5 <__flp>
    ed72:	b0 91 c6 4a 	lds	r27, 0x4AC6	; 0x804ac6 <__flp+0x1>
    ed76:	10 97       	sbiw	r26, 0x00	; 0
    ed78:	81 f4       	brne	.+32     	; 0xed9a <free+0x3e>
    ed7a:	20 81       	ld	r18, Z
    ed7c:	31 81       	ldd	r19, Z+1	; 0x01
    ed7e:	82 0f       	add	r24, r18
    ed80:	93 1f       	adc	r25, r19
    ed82:	20 91 c3 4a 	lds	r18, 0x4AC3	; 0x804ac3 <__brkval>
    ed86:	30 91 c4 4a 	lds	r19, 0x4AC4	; 0x804ac4 <__brkval+0x1>
    ed8a:	28 17       	cp	r18, r24
    ed8c:	39 07       	cpc	r19, r25
    ed8e:	51 f5       	brne	.+84     	; 0xede4 <free+0x88>
    ed90:	e0 93 c3 4a 	sts	0x4AC3, r30	; 0x804ac3 <__brkval>
    ed94:	f0 93 c4 4a 	sts	0x4AC4, r31	; 0x804ac4 <__brkval+0x1>
    ed98:	67 c0       	rjmp	.+206    	; 0xee68 <free+0x10c>
    ed9a:	ed 01       	movw	r28, r26
    ed9c:	20 e0       	ldi	r18, 0x00	; 0
    ed9e:	30 e0       	ldi	r19, 0x00	; 0
    eda0:	ce 17       	cp	r28, r30
    eda2:	df 07       	cpc	r29, r31
    eda4:	40 f4       	brcc	.+16     	; 0xedb6 <free+0x5a>
    eda6:	4a 81       	ldd	r20, Y+2	; 0x02
    eda8:	5b 81       	ldd	r21, Y+3	; 0x03
    edaa:	9e 01       	movw	r18, r28
    edac:	41 15       	cp	r20, r1
    edae:	51 05       	cpc	r21, r1
    edb0:	f1 f0       	breq	.+60     	; 0xedee <free+0x92>
    edb2:	ea 01       	movw	r28, r20
    edb4:	f5 cf       	rjmp	.-22     	; 0xeda0 <free+0x44>
    edb6:	c2 83       	std	Z+2, r28	; 0x02
    edb8:	d3 83       	std	Z+3, r29	; 0x03
    edba:	40 81       	ld	r20, Z
    edbc:	51 81       	ldd	r21, Z+1	; 0x01
    edbe:	84 0f       	add	r24, r20
    edc0:	95 1f       	adc	r25, r21
    edc2:	c8 17       	cp	r28, r24
    edc4:	d9 07       	cpc	r29, r25
    edc6:	59 f4       	brne	.+22     	; 0xedde <free+0x82>
    edc8:	88 81       	ld	r24, Y
    edca:	99 81       	ldd	r25, Y+1	; 0x01
    edcc:	84 0f       	add	r24, r20
    edce:	95 1f       	adc	r25, r21
    edd0:	02 96       	adiw	r24, 0x02	; 2
    edd2:	80 83       	st	Z, r24
    edd4:	91 83       	std	Z+1, r25	; 0x01
    edd6:	8a 81       	ldd	r24, Y+2	; 0x02
    edd8:	9b 81       	ldd	r25, Y+3	; 0x03
    edda:	82 83       	std	Z+2, r24	; 0x02
    eddc:	93 83       	std	Z+3, r25	; 0x03
    edde:	21 15       	cp	r18, r1
    ede0:	31 05       	cpc	r19, r1
    ede2:	29 f4       	brne	.+10     	; 0xedee <free+0x92>
    ede4:	e0 93 c5 4a 	sts	0x4AC5, r30	; 0x804ac5 <__flp>
    ede8:	f0 93 c6 4a 	sts	0x4AC6, r31	; 0x804ac6 <__flp+0x1>
    edec:	3d c0       	rjmp	.+122    	; 0xee68 <free+0x10c>
    edee:	e9 01       	movw	r28, r18
    edf0:	ea 83       	std	Y+2, r30	; 0x02
    edf2:	fb 83       	std	Y+3, r31	; 0x03
    edf4:	49 91       	ld	r20, Y+
    edf6:	59 91       	ld	r21, Y+
    edf8:	c4 0f       	add	r28, r20
    edfa:	d5 1f       	adc	r29, r21
    edfc:	ec 17       	cp	r30, r28
    edfe:	fd 07       	cpc	r31, r29
    ee00:	61 f4       	brne	.+24     	; 0xee1a <free+0xbe>
    ee02:	80 81       	ld	r24, Z
    ee04:	91 81       	ldd	r25, Z+1	; 0x01
    ee06:	84 0f       	add	r24, r20
    ee08:	95 1f       	adc	r25, r21
    ee0a:	02 96       	adiw	r24, 0x02	; 2
    ee0c:	e9 01       	movw	r28, r18
    ee0e:	88 83       	st	Y, r24
    ee10:	99 83       	std	Y+1, r25	; 0x01
    ee12:	82 81       	ldd	r24, Z+2	; 0x02
    ee14:	93 81       	ldd	r25, Z+3	; 0x03
    ee16:	8a 83       	std	Y+2, r24	; 0x02
    ee18:	9b 83       	std	Y+3, r25	; 0x03
    ee1a:	e0 e0       	ldi	r30, 0x00	; 0
    ee1c:	f0 e0       	ldi	r31, 0x00	; 0
    ee1e:	12 96       	adiw	r26, 0x02	; 2
    ee20:	8d 91       	ld	r24, X+
    ee22:	9c 91       	ld	r25, X
    ee24:	13 97       	sbiw	r26, 0x03	; 3
    ee26:	00 97       	sbiw	r24, 0x00	; 0
    ee28:	19 f0       	breq	.+6      	; 0xee30 <free+0xd4>
    ee2a:	fd 01       	movw	r30, r26
    ee2c:	dc 01       	movw	r26, r24
    ee2e:	f7 cf       	rjmp	.-18     	; 0xee1e <free+0xc2>
    ee30:	8d 91       	ld	r24, X+
    ee32:	9c 91       	ld	r25, X
    ee34:	11 97       	sbiw	r26, 0x01	; 1
    ee36:	9d 01       	movw	r18, r26
    ee38:	2e 5f       	subi	r18, 0xFE	; 254
    ee3a:	3f 4f       	sbci	r19, 0xFF	; 255
    ee3c:	82 0f       	add	r24, r18
    ee3e:	93 1f       	adc	r25, r19
    ee40:	20 91 c3 4a 	lds	r18, 0x4AC3	; 0x804ac3 <__brkval>
    ee44:	30 91 c4 4a 	lds	r19, 0x4AC4	; 0x804ac4 <__brkval+0x1>
    ee48:	28 17       	cp	r18, r24
    ee4a:	39 07       	cpc	r19, r25
    ee4c:	69 f4       	brne	.+26     	; 0xee68 <free+0x10c>
    ee4e:	30 97       	sbiw	r30, 0x00	; 0
    ee50:	29 f4       	brne	.+10     	; 0xee5c <free+0x100>
    ee52:	10 92 c5 4a 	sts	0x4AC5, r1	; 0x804ac5 <__flp>
    ee56:	10 92 c6 4a 	sts	0x4AC6, r1	; 0x804ac6 <__flp+0x1>
    ee5a:	02 c0       	rjmp	.+4      	; 0xee60 <free+0x104>
    ee5c:	12 82       	std	Z+2, r1	; 0x02
    ee5e:	13 82       	std	Z+3, r1	; 0x03
    ee60:	a0 93 c3 4a 	sts	0x4AC3, r26	; 0x804ac3 <__brkval>
    ee64:	b0 93 c4 4a 	sts	0x4AC4, r27	; 0x804ac4 <__brkval+0x1>
    ee68:	df 91       	pop	r29
    ee6a:	cf 91       	pop	r28
    ee6c:	08 95       	ret

0000ee6e <atof>:
    ee6e:	66 27       	eor	r22, r22
    ee70:	77 27       	eor	r23, r23
    ee72:	0c 94 0e 7a 	jmp	0xf41c	; 0xf41c <strtod>

0000ee76 <atoi>:
    ee76:	fc 01       	movw	r30, r24
    ee78:	88 27       	eor	r24, r24
    ee7a:	99 27       	eor	r25, r25
    ee7c:	e8 94       	clt
    ee7e:	21 91       	ld	r18, Z+
    ee80:	20 32       	cpi	r18, 0x20	; 32
    ee82:	e9 f3       	breq	.-6      	; 0xee7e <atoi+0x8>
    ee84:	29 30       	cpi	r18, 0x09	; 9
    ee86:	10 f0       	brcs	.+4      	; 0xee8c <atoi+0x16>
    ee88:	2e 30       	cpi	r18, 0x0E	; 14
    ee8a:	c8 f3       	brcs	.-14     	; 0xee7e <atoi+0x8>
    ee8c:	2b 32       	cpi	r18, 0x2B	; 43
    ee8e:	41 f0       	breq	.+16     	; 0xeea0 <atoi+0x2a>
    ee90:	2d 32       	cpi	r18, 0x2D	; 45
    ee92:	39 f4       	brne	.+14     	; 0xeea2 <atoi+0x2c>
    ee94:	68 94       	set
    ee96:	04 c0       	rjmp	.+8      	; 0xeea0 <atoi+0x2a>
    ee98:	0e 94 d9 77 	call	0xefb2	; 0xefb2 <__mulhi_const_10>
    ee9c:	82 0f       	add	r24, r18
    ee9e:	91 1d       	adc	r25, r1
    eea0:	21 91       	ld	r18, Z+
    eea2:	20 53       	subi	r18, 0x30	; 48
    eea4:	2a 30       	cpi	r18, 0x0A	; 10
    eea6:	c0 f3       	brcs	.-16     	; 0xee98 <atoi+0x22>
    eea8:	1e f4       	brtc	.+6      	; 0xeeb0 <atoi+0x3a>
    eeaa:	90 95       	com	r25
    eeac:	81 95       	neg	r24
    eeae:	9f 4f       	sbci	r25, 0xFF	; 255
    eeb0:	08 95       	ret

0000eeb2 <atol>:
    eeb2:	1f 93       	push	r17
    eeb4:	fc 01       	movw	r30, r24
    eeb6:	99 27       	eor	r25, r25
    eeb8:	88 27       	eor	r24, r24
    eeba:	bc 01       	movw	r22, r24
    eebc:	e8 94       	clt
    eebe:	11 91       	ld	r17, Z+
    eec0:	10 32       	cpi	r17, 0x20	; 32
    eec2:	e9 f3       	breq	.-6      	; 0xeebe <atol+0xc>
    eec4:	19 30       	cpi	r17, 0x09	; 9
    eec6:	10 f0       	brcs	.+4      	; 0xeecc <atol+0x1a>
    eec8:	1e 30       	cpi	r17, 0x0E	; 14
    eeca:	c8 f3       	brcs	.-14     	; 0xeebe <atol+0xc>
    eecc:	1b 32       	cpi	r17, 0x2B	; 43
    eece:	51 f0       	breq	.+20     	; 0xeee4 <atol+0x32>
    eed0:	1d 32       	cpi	r17, 0x2D	; 45
    eed2:	49 f4       	brne	.+18     	; 0xeee6 <atol+0x34>
    eed4:	68 94       	set
    eed6:	06 c0       	rjmp	.+12     	; 0xeee4 <atol+0x32>
    eed8:	0e 94 c4 77 	call	0xef88	; 0xef88 <__mulsi_const_10>
    eedc:	61 0f       	add	r22, r17
    eede:	71 1d       	adc	r23, r1
    eee0:	81 1d       	adc	r24, r1
    eee2:	91 1d       	adc	r25, r1
    eee4:	11 91       	ld	r17, Z+
    eee6:	10 53       	subi	r17, 0x30	; 48
    eee8:	1a 30       	cpi	r17, 0x0A	; 10
    eeea:	b0 f3       	brcs	.-20     	; 0xeed8 <atol+0x26>
    eeec:	3e f4       	brtc	.+14     	; 0xeefc <atol+0x4a>
    eeee:	90 95       	com	r25
    eef0:	80 95       	com	r24
    eef2:	70 95       	com	r23
    eef4:	61 95       	neg	r22
    eef6:	7f 4f       	sbci	r23, 0xFF	; 255
    eef8:	8f 4f       	sbci	r24, 0xFF	; 255
    eefa:	9f 4f       	sbci	r25, 0xFF	; 255
    eefc:	1f 91       	pop	r17
    eefe:	08 95       	ret

0000ef00 <toupper>:
    ef00:	91 11       	cpse	r25, r1
    ef02:	08 95       	ret
    ef04:	81 56       	subi	r24, 0x61	; 97
    ef06:	8a 51       	subi	r24, 0x1A	; 26
    ef08:	08 f4       	brcc	.+2      	; 0xef0c <toupper+0xc>
    ef0a:	80 52       	subi	r24, 0x20	; 32
    ef0c:	85 58       	subi	r24, 0x85	; 133
    ef0e:	08 95       	ret

0000ef10 <memset>:
    ef10:	dc 01       	movw	r26, r24
    ef12:	01 c0       	rjmp	.+2      	; 0xef16 <memset+0x6>
    ef14:	6d 93       	st	X+, r22
    ef16:	41 50       	subi	r20, 0x01	; 1
    ef18:	50 40       	sbci	r21, 0x00	; 0
    ef1a:	e0 f7       	brcc	.-8      	; 0xef14 <memset+0x4>
    ef1c:	08 95       	ret

0000ef1e <strcat>:
    ef1e:	fb 01       	movw	r30, r22
    ef20:	dc 01       	movw	r26, r24
    ef22:	0d 90       	ld	r0, X+
    ef24:	00 20       	and	r0, r0
    ef26:	e9 f7       	brne	.-6      	; 0xef22 <strcat+0x4>
    ef28:	11 97       	sbiw	r26, 0x01	; 1
    ef2a:	01 90       	ld	r0, Z+
    ef2c:	0d 92       	st	X+, r0
    ef2e:	00 20       	and	r0, r0
    ef30:	e1 f7       	brne	.-8      	; 0xef2a <strcat+0xc>
    ef32:	08 95       	ret

0000ef34 <strchr>:
    ef34:	fc 01       	movw	r30, r24
    ef36:	81 91       	ld	r24, Z+
    ef38:	86 17       	cp	r24, r22
    ef3a:	21 f0       	breq	.+8      	; 0xef44 <strchr+0x10>
    ef3c:	88 23       	and	r24, r24
    ef3e:	d9 f7       	brne	.-10     	; 0xef36 <strchr+0x2>
    ef40:	99 27       	eor	r25, r25
    ef42:	08 95       	ret
    ef44:	31 97       	sbiw	r30, 0x01	; 1
    ef46:	cf 01       	movw	r24, r30
    ef48:	08 95       	ret

0000ef4a <strcpy>:
    ef4a:	fb 01       	movw	r30, r22
    ef4c:	dc 01       	movw	r26, r24
    ef4e:	01 90       	ld	r0, Z+
    ef50:	0d 92       	st	X+, r0
    ef52:	00 20       	and	r0, r0
    ef54:	e1 f7       	brne	.-8      	; 0xef4e <strcpy+0x4>
    ef56:	08 95       	ret

0000ef58 <strlen>:
    ef58:	fc 01       	movw	r30, r24
    ef5a:	01 90       	ld	r0, Z+
    ef5c:	00 20       	and	r0, r0
    ef5e:	e9 f7       	brne	.-6      	; 0xef5a <strlen+0x2>
    ef60:	80 95       	com	r24
    ef62:	90 95       	com	r25
    ef64:	8e 0f       	add	r24, r30
    ef66:	9f 1f       	adc	r25, r31
    ef68:	08 95       	ret

0000ef6a <strncpy>:
    ef6a:	fb 01       	movw	r30, r22
    ef6c:	dc 01       	movw	r26, r24
    ef6e:	41 50       	subi	r20, 0x01	; 1
    ef70:	50 40       	sbci	r21, 0x00	; 0
    ef72:	48 f0       	brcs	.+18     	; 0xef86 <strncpy+0x1c>
    ef74:	01 90       	ld	r0, Z+
    ef76:	0d 92       	st	X+, r0
    ef78:	00 20       	and	r0, r0
    ef7a:	c9 f7       	brne	.-14     	; 0xef6e <strncpy+0x4>
    ef7c:	01 c0       	rjmp	.+2      	; 0xef80 <strncpy+0x16>
    ef7e:	1d 92       	st	X+, r1
    ef80:	41 50       	subi	r20, 0x01	; 1
    ef82:	50 40       	sbci	r21, 0x00	; 0
    ef84:	e0 f7       	brcc	.-8      	; 0xef7e <strncpy+0x14>
    ef86:	08 95       	ret

0000ef88 <__mulsi_const_10>:
    ef88:	59 2f       	mov	r21, r25
    ef8a:	48 2f       	mov	r20, r24
    ef8c:	37 2f       	mov	r19, r23
    ef8e:	26 2f       	mov	r18, r22
    ef90:	66 0f       	add	r22, r22
    ef92:	77 1f       	adc	r23, r23
    ef94:	88 1f       	adc	r24, r24
    ef96:	99 1f       	adc	r25, r25
    ef98:	66 0f       	add	r22, r22
    ef9a:	77 1f       	adc	r23, r23
    ef9c:	88 1f       	adc	r24, r24
    ef9e:	99 1f       	adc	r25, r25
    efa0:	62 0f       	add	r22, r18
    efa2:	73 1f       	adc	r23, r19
    efa4:	84 1f       	adc	r24, r20
    efa6:	95 1f       	adc	r25, r21
    efa8:	66 0f       	add	r22, r22
    efaa:	77 1f       	adc	r23, r23
    efac:	88 1f       	adc	r24, r24
    efae:	99 1f       	adc	r25, r25
    efb0:	08 95       	ret

0000efb2 <__mulhi_const_10>:
    efb2:	7a e0       	ldi	r23, 0x0A	; 10
    efb4:	97 9f       	mul	r25, r23
    efb6:	90 2d       	mov	r25, r0
    efb8:	87 9f       	mul	r24, r23
    efba:	80 2d       	mov	r24, r0
    efbc:	91 0d       	add	r25, r1
    efbe:	11 24       	eor	r1, r1
    efc0:	08 95       	ret

0000efc2 <sprintf>:
    efc2:	0f 93       	push	r16
    efc4:	1f 93       	push	r17
    efc6:	cf 93       	push	r28
    efc8:	df 93       	push	r29
    efca:	cd b7       	in	r28, 0x3d	; 61
    efcc:	de b7       	in	r29, 0x3e	; 62
    efce:	2e 97       	sbiw	r28, 0x0e	; 14
    efd0:	cd bf       	out	0x3d, r28	; 61
    efd2:	de bf       	out	0x3e, r29	; 62
    efd4:	0d 89       	ldd	r16, Y+21	; 0x15
    efd6:	1e 89       	ldd	r17, Y+22	; 0x16
    efd8:	86 e0       	ldi	r24, 0x06	; 6
    efda:	8c 83       	std	Y+4, r24	; 0x04
    efdc:	09 83       	std	Y+1, r16	; 0x01
    efde:	1a 83       	std	Y+2, r17	; 0x02
    efe0:	8f ef       	ldi	r24, 0xFF	; 255
    efe2:	9f e7       	ldi	r25, 0x7F	; 127
    efe4:	8d 83       	std	Y+5, r24	; 0x05
    efe6:	9e 83       	std	Y+6, r25	; 0x06
    efe8:	ae 01       	movw	r20, r28
    efea:	47 5e       	subi	r20, 0xE7	; 231
    efec:	5f 4f       	sbci	r21, 0xFF	; 255
    efee:	6f 89       	ldd	r22, Y+23	; 0x17
    eff0:	78 8d       	ldd	r23, Y+24	; 0x18
    eff2:	ce 01       	movw	r24, r28
    eff4:	01 96       	adiw	r24, 0x01	; 1
    eff6:	0e 94 0a 78 	call	0xf014	; 0xf014 <vfprintf>
    effa:	ef 81       	ldd	r30, Y+7	; 0x07
    effc:	f8 85       	ldd	r31, Y+8	; 0x08
    effe:	e0 0f       	add	r30, r16
    f000:	f1 1f       	adc	r31, r17
    f002:	10 82       	st	Z, r1
    f004:	2e 96       	adiw	r28, 0x0e	; 14
    f006:	cd bf       	out	0x3d, r28	; 61
    f008:	de bf       	out	0x3e, r29	; 62
    f00a:	df 91       	pop	r29
    f00c:	cf 91       	pop	r28
    f00e:	1f 91       	pop	r17
    f010:	0f 91       	pop	r16
    f012:	08 95       	ret

0000f014 <vfprintf>:
    f014:	2f 92       	push	r2
    f016:	3f 92       	push	r3
    f018:	4f 92       	push	r4
    f01a:	5f 92       	push	r5
    f01c:	6f 92       	push	r6
    f01e:	7f 92       	push	r7
    f020:	8f 92       	push	r8
    f022:	9f 92       	push	r9
    f024:	af 92       	push	r10
    f026:	bf 92       	push	r11
    f028:	cf 92       	push	r12
    f02a:	df 92       	push	r13
    f02c:	ef 92       	push	r14
    f02e:	ff 92       	push	r15
    f030:	0f 93       	push	r16
    f032:	1f 93       	push	r17
    f034:	cf 93       	push	r28
    f036:	df 93       	push	r29
    f038:	cd b7       	in	r28, 0x3d	; 61
    f03a:	de b7       	in	r29, 0x3e	; 62
    f03c:	2b 97       	sbiw	r28, 0x0b	; 11
    f03e:	cd bf       	out	0x3d, r28	; 61
    f040:	de bf       	out	0x3e, r29	; 62
    f042:	6c 01       	movw	r12, r24
    f044:	7b 01       	movw	r14, r22
    f046:	8a 01       	movw	r16, r20
    f048:	fc 01       	movw	r30, r24
    f04a:	16 82       	std	Z+6, r1	; 0x06
    f04c:	17 82       	std	Z+7, r1	; 0x07
    f04e:	83 81       	ldd	r24, Z+3	; 0x03
    f050:	81 ff       	sbrs	r24, 1
    f052:	cc c1       	rjmp	.+920    	; 0xf3ec <vfprintf+0x3d8>
    f054:	ce 01       	movw	r24, r28
    f056:	01 96       	adiw	r24, 0x01	; 1
    f058:	3c 01       	movw	r6, r24
    f05a:	f6 01       	movw	r30, r12
    f05c:	93 81       	ldd	r25, Z+3	; 0x03
    f05e:	f7 01       	movw	r30, r14
    f060:	93 fd       	sbrc	r25, 3
    f062:	85 91       	lpm	r24, Z+
    f064:	93 ff       	sbrs	r25, 3
    f066:	81 91       	ld	r24, Z+
    f068:	7f 01       	movw	r14, r30
    f06a:	88 23       	and	r24, r24
    f06c:	09 f4       	brne	.+2      	; 0xf070 <vfprintf+0x5c>
    f06e:	ba c1       	rjmp	.+884    	; 0xf3e4 <vfprintf+0x3d0>
    f070:	85 32       	cpi	r24, 0x25	; 37
    f072:	39 f4       	brne	.+14     	; 0xf082 <vfprintf+0x6e>
    f074:	93 fd       	sbrc	r25, 3
    f076:	85 91       	lpm	r24, Z+
    f078:	93 ff       	sbrs	r25, 3
    f07a:	81 91       	ld	r24, Z+
    f07c:	7f 01       	movw	r14, r30
    f07e:	85 32       	cpi	r24, 0x25	; 37
    f080:	29 f4       	brne	.+10     	; 0xf08c <vfprintf+0x78>
    f082:	b6 01       	movw	r22, r12
    f084:	90 e0       	ldi	r25, 0x00	; 0
    f086:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f08a:	e7 cf       	rjmp	.-50     	; 0xf05a <vfprintf+0x46>
    f08c:	91 2c       	mov	r9, r1
    f08e:	21 2c       	mov	r2, r1
    f090:	31 2c       	mov	r3, r1
    f092:	ff e1       	ldi	r31, 0x1F	; 31
    f094:	f3 15       	cp	r31, r3
    f096:	d8 f0       	brcs	.+54     	; 0xf0ce <vfprintf+0xba>
    f098:	8b 32       	cpi	r24, 0x2B	; 43
    f09a:	79 f0       	breq	.+30     	; 0xf0ba <vfprintf+0xa6>
    f09c:	38 f4       	brcc	.+14     	; 0xf0ac <vfprintf+0x98>
    f09e:	80 32       	cpi	r24, 0x20	; 32
    f0a0:	79 f0       	breq	.+30     	; 0xf0c0 <vfprintf+0xac>
    f0a2:	83 32       	cpi	r24, 0x23	; 35
    f0a4:	a1 f4       	brne	.+40     	; 0xf0ce <vfprintf+0xba>
    f0a6:	23 2d       	mov	r18, r3
    f0a8:	20 61       	ori	r18, 0x10	; 16
    f0aa:	1d c0       	rjmp	.+58     	; 0xf0e6 <vfprintf+0xd2>
    f0ac:	8d 32       	cpi	r24, 0x2D	; 45
    f0ae:	61 f0       	breq	.+24     	; 0xf0c8 <vfprintf+0xb4>
    f0b0:	80 33       	cpi	r24, 0x30	; 48
    f0b2:	69 f4       	brne	.+26     	; 0xf0ce <vfprintf+0xba>
    f0b4:	23 2d       	mov	r18, r3
    f0b6:	21 60       	ori	r18, 0x01	; 1
    f0b8:	16 c0       	rjmp	.+44     	; 0xf0e6 <vfprintf+0xd2>
    f0ba:	83 2d       	mov	r24, r3
    f0bc:	82 60       	ori	r24, 0x02	; 2
    f0be:	38 2e       	mov	r3, r24
    f0c0:	e3 2d       	mov	r30, r3
    f0c2:	e4 60       	ori	r30, 0x04	; 4
    f0c4:	3e 2e       	mov	r3, r30
    f0c6:	2a c0       	rjmp	.+84     	; 0xf11c <vfprintf+0x108>
    f0c8:	f3 2d       	mov	r31, r3
    f0ca:	f8 60       	ori	r31, 0x08	; 8
    f0cc:	1d c0       	rjmp	.+58     	; 0xf108 <vfprintf+0xf4>
    f0ce:	37 fc       	sbrc	r3, 7
    f0d0:	2d c0       	rjmp	.+90     	; 0xf12c <vfprintf+0x118>
    f0d2:	20 ed       	ldi	r18, 0xD0	; 208
    f0d4:	28 0f       	add	r18, r24
    f0d6:	2a 30       	cpi	r18, 0x0A	; 10
    f0d8:	40 f0       	brcs	.+16     	; 0xf0ea <vfprintf+0xd6>
    f0da:	8e 32       	cpi	r24, 0x2E	; 46
    f0dc:	b9 f4       	brne	.+46     	; 0xf10c <vfprintf+0xf8>
    f0de:	36 fc       	sbrc	r3, 6
    f0e0:	81 c1       	rjmp	.+770    	; 0xf3e4 <vfprintf+0x3d0>
    f0e2:	23 2d       	mov	r18, r3
    f0e4:	20 64       	ori	r18, 0x40	; 64
    f0e6:	32 2e       	mov	r3, r18
    f0e8:	19 c0       	rjmp	.+50     	; 0xf11c <vfprintf+0x108>
    f0ea:	36 fe       	sbrs	r3, 6
    f0ec:	06 c0       	rjmp	.+12     	; 0xf0fa <vfprintf+0xe6>
    f0ee:	8a e0       	ldi	r24, 0x0A	; 10
    f0f0:	98 9e       	mul	r9, r24
    f0f2:	20 0d       	add	r18, r0
    f0f4:	11 24       	eor	r1, r1
    f0f6:	92 2e       	mov	r9, r18
    f0f8:	11 c0       	rjmp	.+34     	; 0xf11c <vfprintf+0x108>
    f0fa:	ea e0       	ldi	r30, 0x0A	; 10
    f0fc:	2e 9e       	mul	r2, r30
    f0fe:	20 0d       	add	r18, r0
    f100:	11 24       	eor	r1, r1
    f102:	22 2e       	mov	r2, r18
    f104:	f3 2d       	mov	r31, r3
    f106:	f0 62       	ori	r31, 0x20	; 32
    f108:	3f 2e       	mov	r3, r31
    f10a:	08 c0       	rjmp	.+16     	; 0xf11c <vfprintf+0x108>
    f10c:	8c 36       	cpi	r24, 0x6C	; 108
    f10e:	21 f4       	brne	.+8      	; 0xf118 <vfprintf+0x104>
    f110:	83 2d       	mov	r24, r3
    f112:	80 68       	ori	r24, 0x80	; 128
    f114:	38 2e       	mov	r3, r24
    f116:	02 c0       	rjmp	.+4      	; 0xf11c <vfprintf+0x108>
    f118:	88 36       	cpi	r24, 0x68	; 104
    f11a:	41 f4       	brne	.+16     	; 0xf12c <vfprintf+0x118>
    f11c:	f7 01       	movw	r30, r14
    f11e:	93 fd       	sbrc	r25, 3
    f120:	85 91       	lpm	r24, Z+
    f122:	93 ff       	sbrs	r25, 3
    f124:	81 91       	ld	r24, Z+
    f126:	7f 01       	movw	r14, r30
    f128:	81 11       	cpse	r24, r1
    f12a:	b3 cf       	rjmp	.-154    	; 0xf092 <vfprintf+0x7e>
    f12c:	98 2f       	mov	r25, r24
    f12e:	9f 7d       	andi	r25, 0xDF	; 223
    f130:	95 54       	subi	r25, 0x45	; 69
    f132:	93 30       	cpi	r25, 0x03	; 3
    f134:	28 f4       	brcc	.+10     	; 0xf140 <vfprintf+0x12c>
    f136:	0c 5f       	subi	r16, 0xFC	; 252
    f138:	1f 4f       	sbci	r17, 0xFF	; 255
    f13a:	9f e3       	ldi	r25, 0x3F	; 63
    f13c:	99 83       	std	Y+1, r25	; 0x01
    f13e:	0d c0       	rjmp	.+26     	; 0xf15a <vfprintf+0x146>
    f140:	83 36       	cpi	r24, 0x63	; 99
    f142:	31 f0       	breq	.+12     	; 0xf150 <vfprintf+0x13c>
    f144:	83 37       	cpi	r24, 0x73	; 115
    f146:	71 f0       	breq	.+28     	; 0xf164 <vfprintf+0x150>
    f148:	83 35       	cpi	r24, 0x53	; 83
    f14a:	09 f0       	breq	.+2      	; 0xf14e <vfprintf+0x13a>
    f14c:	59 c0       	rjmp	.+178    	; 0xf200 <vfprintf+0x1ec>
    f14e:	21 c0       	rjmp	.+66     	; 0xf192 <vfprintf+0x17e>
    f150:	f8 01       	movw	r30, r16
    f152:	80 81       	ld	r24, Z
    f154:	89 83       	std	Y+1, r24	; 0x01
    f156:	0e 5f       	subi	r16, 0xFE	; 254
    f158:	1f 4f       	sbci	r17, 0xFF	; 255
    f15a:	88 24       	eor	r8, r8
    f15c:	83 94       	inc	r8
    f15e:	91 2c       	mov	r9, r1
    f160:	53 01       	movw	r10, r6
    f162:	13 c0       	rjmp	.+38     	; 0xf18a <vfprintf+0x176>
    f164:	28 01       	movw	r4, r16
    f166:	f2 e0       	ldi	r31, 0x02	; 2
    f168:	4f 0e       	add	r4, r31
    f16a:	51 1c       	adc	r5, r1
    f16c:	f8 01       	movw	r30, r16
    f16e:	a0 80       	ld	r10, Z
    f170:	b1 80       	ldd	r11, Z+1	; 0x01
    f172:	36 fe       	sbrs	r3, 6
    f174:	03 c0       	rjmp	.+6      	; 0xf17c <vfprintf+0x168>
    f176:	69 2d       	mov	r22, r9
    f178:	70 e0       	ldi	r23, 0x00	; 0
    f17a:	02 c0       	rjmp	.+4      	; 0xf180 <vfprintf+0x16c>
    f17c:	6f ef       	ldi	r22, 0xFF	; 255
    f17e:	7f ef       	ldi	r23, 0xFF	; 255
    f180:	c5 01       	movw	r24, r10
    f182:	0e 94 96 7b 	call	0xf72c	; 0xf72c <strnlen>
    f186:	4c 01       	movw	r8, r24
    f188:	82 01       	movw	r16, r4
    f18a:	f3 2d       	mov	r31, r3
    f18c:	ff 77       	andi	r31, 0x7F	; 127
    f18e:	3f 2e       	mov	r3, r31
    f190:	16 c0       	rjmp	.+44     	; 0xf1be <vfprintf+0x1aa>
    f192:	28 01       	movw	r4, r16
    f194:	22 e0       	ldi	r18, 0x02	; 2
    f196:	42 0e       	add	r4, r18
    f198:	51 1c       	adc	r5, r1
    f19a:	f8 01       	movw	r30, r16
    f19c:	a0 80       	ld	r10, Z
    f19e:	b1 80       	ldd	r11, Z+1	; 0x01
    f1a0:	36 fe       	sbrs	r3, 6
    f1a2:	03 c0       	rjmp	.+6      	; 0xf1aa <vfprintf+0x196>
    f1a4:	69 2d       	mov	r22, r9
    f1a6:	70 e0       	ldi	r23, 0x00	; 0
    f1a8:	02 c0       	rjmp	.+4      	; 0xf1ae <vfprintf+0x19a>
    f1aa:	6f ef       	ldi	r22, 0xFF	; 255
    f1ac:	7f ef       	ldi	r23, 0xFF	; 255
    f1ae:	c5 01       	movw	r24, r10
    f1b0:	0e 94 8b 7b 	call	0xf716	; 0xf716 <strnlen_P>
    f1b4:	4c 01       	movw	r8, r24
    f1b6:	f3 2d       	mov	r31, r3
    f1b8:	f0 68       	ori	r31, 0x80	; 128
    f1ba:	3f 2e       	mov	r3, r31
    f1bc:	82 01       	movw	r16, r4
    f1be:	33 fc       	sbrc	r3, 3
    f1c0:	1b c0       	rjmp	.+54     	; 0xf1f8 <vfprintf+0x1e4>
    f1c2:	82 2d       	mov	r24, r2
    f1c4:	90 e0       	ldi	r25, 0x00	; 0
    f1c6:	88 16       	cp	r8, r24
    f1c8:	99 06       	cpc	r9, r25
    f1ca:	b0 f4       	brcc	.+44     	; 0xf1f8 <vfprintf+0x1e4>
    f1cc:	b6 01       	movw	r22, r12
    f1ce:	80 e2       	ldi	r24, 0x20	; 32
    f1d0:	90 e0       	ldi	r25, 0x00	; 0
    f1d2:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f1d6:	2a 94       	dec	r2
    f1d8:	f4 cf       	rjmp	.-24     	; 0xf1c2 <vfprintf+0x1ae>
    f1da:	f5 01       	movw	r30, r10
    f1dc:	37 fc       	sbrc	r3, 7
    f1de:	85 91       	lpm	r24, Z+
    f1e0:	37 fe       	sbrs	r3, 7
    f1e2:	81 91       	ld	r24, Z+
    f1e4:	5f 01       	movw	r10, r30
    f1e6:	b6 01       	movw	r22, r12
    f1e8:	90 e0       	ldi	r25, 0x00	; 0
    f1ea:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f1ee:	21 10       	cpse	r2, r1
    f1f0:	2a 94       	dec	r2
    f1f2:	21 e0       	ldi	r18, 0x01	; 1
    f1f4:	82 1a       	sub	r8, r18
    f1f6:	91 08       	sbc	r9, r1
    f1f8:	81 14       	cp	r8, r1
    f1fa:	91 04       	cpc	r9, r1
    f1fc:	71 f7       	brne	.-36     	; 0xf1da <vfprintf+0x1c6>
    f1fe:	e8 c0       	rjmp	.+464    	; 0xf3d0 <vfprintf+0x3bc>
    f200:	84 36       	cpi	r24, 0x64	; 100
    f202:	11 f0       	breq	.+4      	; 0xf208 <vfprintf+0x1f4>
    f204:	89 36       	cpi	r24, 0x69	; 105
    f206:	41 f5       	brne	.+80     	; 0xf258 <vfprintf+0x244>
    f208:	f8 01       	movw	r30, r16
    f20a:	37 fe       	sbrs	r3, 7
    f20c:	07 c0       	rjmp	.+14     	; 0xf21c <vfprintf+0x208>
    f20e:	60 81       	ld	r22, Z
    f210:	71 81       	ldd	r23, Z+1	; 0x01
    f212:	82 81       	ldd	r24, Z+2	; 0x02
    f214:	93 81       	ldd	r25, Z+3	; 0x03
    f216:	0c 5f       	subi	r16, 0xFC	; 252
    f218:	1f 4f       	sbci	r17, 0xFF	; 255
    f21a:	08 c0       	rjmp	.+16     	; 0xf22c <vfprintf+0x218>
    f21c:	60 81       	ld	r22, Z
    f21e:	71 81       	ldd	r23, Z+1	; 0x01
    f220:	07 2e       	mov	r0, r23
    f222:	00 0c       	add	r0, r0
    f224:	88 0b       	sbc	r24, r24
    f226:	99 0b       	sbc	r25, r25
    f228:	0e 5f       	subi	r16, 0xFE	; 254
    f22a:	1f 4f       	sbci	r17, 0xFF	; 255
    f22c:	f3 2d       	mov	r31, r3
    f22e:	ff 76       	andi	r31, 0x6F	; 111
    f230:	3f 2e       	mov	r3, r31
    f232:	97 ff       	sbrs	r25, 7
    f234:	09 c0       	rjmp	.+18     	; 0xf248 <vfprintf+0x234>
    f236:	90 95       	com	r25
    f238:	80 95       	com	r24
    f23a:	70 95       	com	r23
    f23c:	61 95       	neg	r22
    f23e:	7f 4f       	sbci	r23, 0xFF	; 255
    f240:	8f 4f       	sbci	r24, 0xFF	; 255
    f242:	9f 4f       	sbci	r25, 0xFF	; 255
    f244:	f0 68       	ori	r31, 0x80	; 128
    f246:	3f 2e       	mov	r3, r31
    f248:	2a e0       	ldi	r18, 0x0A	; 10
    f24a:	30 e0       	ldi	r19, 0x00	; 0
    f24c:	a3 01       	movw	r20, r6
    f24e:	0e 94 dd 7b 	call	0xf7ba	; 0xf7ba <__ultoa_invert>
    f252:	88 2e       	mov	r8, r24
    f254:	86 18       	sub	r8, r6
    f256:	45 c0       	rjmp	.+138    	; 0xf2e2 <vfprintf+0x2ce>
    f258:	85 37       	cpi	r24, 0x75	; 117
    f25a:	31 f4       	brne	.+12     	; 0xf268 <vfprintf+0x254>
    f25c:	23 2d       	mov	r18, r3
    f25e:	2f 7e       	andi	r18, 0xEF	; 239
    f260:	b2 2e       	mov	r11, r18
    f262:	2a e0       	ldi	r18, 0x0A	; 10
    f264:	30 e0       	ldi	r19, 0x00	; 0
    f266:	25 c0       	rjmp	.+74     	; 0xf2b2 <vfprintf+0x29e>
    f268:	93 2d       	mov	r25, r3
    f26a:	99 7f       	andi	r25, 0xF9	; 249
    f26c:	b9 2e       	mov	r11, r25
    f26e:	8f 36       	cpi	r24, 0x6F	; 111
    f270:	c1 f0       	breq	.+48     	; 0xf2a2 <vfprintf+0x28e>
    f272:	18 f4       	brcc	.+6      	; 0xf27a <vfprintf+0x266>
    f274:	88 35       	cpi	r24, 0x58	; 88
    f276:	79 f0       	breq	.+30     	; 0xf296 <vfprintf+0x282>
    f278:	b5 c0       	rjmp	.+362    	; 0xf3e4 <vfprintf+0x3d0>
    f27a:	80 37       	cpi	r24, 0x70	; 112
    f27c:	19 f0       	breq	.+6      	; 0xf284 <vfprintf+0x270>
    f27e:	88 37       	cpi	r24, 0x78	; 120
    f280:	21 f0       	breq	.+8      	; 0xf28a <vfprintf+0x276>
    f282:	b0 c0       	rjmp	.+352    	; 0xf3e4 <vfprintf+0x3d0>
    f284:	e9 2f       	mov	r30, r25
    f286:	e0 61       	ori	r30, 0x10	; 16
    f288:	be 2e       	mov	r11, r30
    f28a:	b4 fe       	sbrs	r11, 4
    f28c:	0d c0       	rjmp	.+26     	; 0xf2a8 <vfprintf+0x294>
    f28e:	fb 2d       	mov	r31, r11
    f290:	f4 60       	ori	r31, 0x04	; 4
    f292:	bf 2e       	mov	r11, r31
    f294:	09 c0       	rjmp	.+18     	; 0xf2a8 <vfprintf+0x294>
    f296:	34 fe       	sbrs	r3, 4
    f298:	0a c0       	rjmp	.+20     	; 0xf2ae <vfprintf+0x29a>
    f29a:	29 2f       	mov	r18, r25
    f29c:	26 60       	ori	r18, 0x06	; 6
    f29e:	b2 2e       	mov	r11, r18
    f2a0:	06 c0       	rjmp	.+12     	; 0xf2ae <vfprintf+0x29a>
    f2a2:	28 e0       	ldi	r18, 0x08	; 8
    f2a4:	30 e0       	ldi	r19, 0x00	; 0
    f2a6:	05 c0       	rjmp	.+10     	; 0xf2b2 <vfprintf+0x29e>
    f2a8:	20 e1       	ldi	r18, 0x10	; 16
    f2aa:	30 e0       	ldi	r19, 0x00	; 0
    f2ac:	02 c0       	rjmp	.+4      	; 0xf2b2 <vfprintf+0x29e>
    f2ae:	20 e1       	ldi	r18, 0x10	; 16
    f2b0:	32 e0       	ldi	r19, 0x02	; 2
    f2b2:	f8 01       	movw	r30, r16
    f2b4:	b7 fe       	sbrs	r11, 7
    f2b6:	07 c0       	rjmp	.+14     	; 0xf2c6 <vfprintf+0x2b2>
    f2b8:	60 81       	ld	r22, Z
    f2ba:	71 81       	ldd	r23, Z+1	; 0x01
    f2bc:	82 81       	ldd	r24, Z+2	; 0x02
    f2be:	93 81       	ldd	r25, Z+3	; 0x03
    f2c0:	0c 5f       	subi	r16, 0xFC	; 252
    f2c2:	1f 4f       	sbci	r17, 0xFF	; 255
    f2c4:	06 c0       	rjmp	.+12     	; 0xf2d2 <vfprintf+0x2be>
    f2c6:	60 81       	ld	r22, Z
    f2c8:	71 81       	ldd	r23, Z+1	; 0x01
    f2ca:	80 e0       	ldi	r24, 0x00	; 0
    f2cc:	90 e0       	ldi	r25, 0x00	; 0
    f2ce:	0e 5f       	subi	r16, 0xFE	; 254
    f2d0:	1f 4f       	sbci	r17, 0xFF	; 255
    f2d2:	a3 01       	movw	r20, r6
    f2d4:	0e 94 dd 7b 	call	0xf7ba	; 0xf7ba <__ultoa_invert>
    f2d8:	88 2e       	mov	r8, r24
    f2da:	86 18       	sub	r8, r6
    f2dc:	fb 2d       	mov	r31, r11
    f2de:	ff 77       	andi	r31, 0x7F	; 127
    f2e0:	3f 2e       	mov	r3, r31
    f2e2:	36 fe       	sbrs	r3, 6
    f2e4:	0d c0       	rjmp	.+26     	; 0xf300 <vfprintf+0x2ec>
    f2e6:	23 2d       	mov	r18, r3
    f2e8:	2e 7f       	andi	r18, 0xFE	; 254
    f2ea:	a2 2e       	mov	r10, r18
    f2ec:	89 14       	cp	r8, r9
    f2ee:	58 f4       	brcc	.+22     	; 0xf306 <vfprintf+0x2f2>
    f2f0:	34 fe       	sbrs	r3, 4
    f2f2:	0b c0       	rjmp	.+22     	; 0xf30a <vfprintf+0x2f6>
    f2f4:	32 fc       	sbrc	r3, 2
    f2f6:	09 c0       	rjmp	.+18     	; 0xf30a <vfprintf+0x2f6>
    f2f8:	83 2d       	mov	r24, r3
    f2fa:	8e 7e       	andi	r24, 0xEE	; 238
    f2fc:	a8 2e       	mov	r10, r24
    f2fe:	05 c0       	rjmp	.+10     	; 0xf30a <vfprintf+0x2f6>
    f300:	b8 2c       	mov	r11, r8
    f302:	a3 2c       	mov	r10, r3
    f304:	03 c0       	rjmp	.+6      	; 0xf30c <vfprintf+0x2f8>
    f306:	b8 2c       	mov	r11, r8
    f308:	01 c0       	rjmp	.+2      	; 0xf30c <vfprintf+0x2f8>
    f30a:	b9 2c       	mov	r11, r9
    f30c:	a4 fe       	sbrs	r10, 4
    f30e:	0f c0       	rjmp	.+30     	; 0xf32e <vfprintf+0x31a>
    f310:	fe 01       	movw	r30, r28
    f312:	e8 0d       	add	r30, r8
    f314:	f1 1d       	adc	r31, r1
    f316:	80 81       	ld	r24, Z
    f318:	80 33       	cpi	r24, 0x30	; 48
    f31a:	21 f4       	brne	.+8      	; 0xf324 <vfprintf+0x310>
    f31c:	9a 2d       	mov	r25, r10
    f31e:	99 7e       	andi	r25, 0xE9	; 233
    f320:	a9 2e       	mov	r10, r25
    f322:	09 c0       	rjmp	.+18     	; 0xf336 <vfprintf+0x322>
    f324:	a2 fe       	sbrs	r10, 2
    f326:	06 c0       	rjmp	.+12     	; 0xf334 <vfprintf+0x320>
    f328:	b3 94       	inc	r11
    f32a:	b3 94       	inc	r11
    f32c:	04 c0       	rjmp	.+8      	; 0xf336 <vfprintf+0x322>
    f32e:	8a 2d       	mov	r24, r10
    f330:	86 78       	andi	r24, 0x86	; 134
    f332:	09 f0       	breq	.+2      	; 0xf336 <vfprintf+0x322>
    f334:	b3 94       	inc	r11
    f336:	a3 fc       	sbrc	r10, 3
    f338:	11 c0       	rjmp	.+34     	; 0xf35c <vfprintf+0x348>
    f33a:	a0 fe       	sbrs	r10, 0
    f33c:	06 c0       	rjmp	.+12     	; 0xf34a <vfprintf+0x336>
    f33e:	b2 14       	cp	r11, r2
    f340:	88 f4       	brcc	.+34     	; 0xf364 <vfprintf+0x350>
    f342:	28 0c       	add	r2, r8
    f344:	92 2c       	mov	r9, r2
    f346:	9b 18       	sub	r9, r11
    f348:	0e c0       	rjmp	.+28     	; 0xf366 <vfprintf+0x352>
    f34a:	b2 14       	cp	r11, r2
    f34c:	60 f4       	brcc	.+24     	; 0xf366 <vfprintf+0x352>
    f34e:	b6 01       	movw	r22, r12
    f350:	80 e2       	ldi	r24, 0x20	; 32
    f352:	90 e0       	ldi	r25, 0x00	; 0
    f354:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f358:	b3 94       	inc	r11
    f35a:	f7 cf       	rjmp	.-18     	; 0xf34a <vfprintf+0x336>
    f35c:	b2 14       	cp	r11, r2
    f35e:	18 f4       	brcc	.+6      	; 0xf366 <vfprintf+0x352>
    f360:	2b 18       	sub	r2, r11
    f362:	02 c0       	rjmp	.+4      	; 0xf368 <vfprintf+0x354>
    f364:	98 2c       	mov	r9, r8
    f366:	21 2c       	mov	r2, r1
    f368:	a4 fe       	sbrs	r10, 4
    f36a:	10 c0       	rjmp	.+32     	; 0xf38c <vfprintf+0x378>
    f36c:	b6 01       	movw	r22, r12
    f36e:	80 e3       	ldi	r24, 0x30	; 48
    f370:	90 e0       	ldi	r25, 0x00	; 0
    f372:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f376:	a2 fe       	sbrs	r10, 2
    f378:	17 c0       	rjmp	.+46     	; 0xf3a8 <vfprintf+0x394>
    f37a:	a1 fc       	sbrc	r10, 1
    f37c:	03 c0       	rjmp	.+6      	; 0xf384 <vfprintf+0x370>
    f37e:	88 e7       	ldi	r24, 0x78	; 120
    f380:	90 e0       	ldi	r25, 0x00	; 0
    f382:	02 c0       	rjmp	.+4      	; 0xf388 <vfprintf+0x374>
    f384:	88 e5       	ldi	r24, 0x58	; 88
    f386:	90 e0       	ldi	r25, 0x00	; 0
    f388:	b6 01       	movw	r22, r12
    f38a:	0c c0       	rjmp	.+24     	; 0xf3a4 <vfprintf+0x390>
    f38c:	8a 2d       	mov	r24, r10
    f38e:	86 78       	andi	r24, 0x86	; 134
    f390:	59 f0       	breq	.+22     	; 0xf3a8 <vfprintf+0x394>
    f392:	a1 fe       	sbrs	r10, 1
    f394:	02 c0       	rjmp	.+4      	; 0xf39a <vfprintf+0x386>
    f396:	8b e2       	ldi	r24, 0x2B	; 43
    f398:	01 c0       	rjmp	.+2      	; 0xf39c <vfprintf+0x388>
    f39a:	80 e2       	ldi	r24, 0x20	; 32
    f39c:	a7 fc       	sbrc	r10, 7
    f39e:	8d e2       	ldi	r24, 0x2D	; 45
    f3a0:	b6 01       	movw	r22, r12
    f3a2:	90 e0       	ldi	r25, 0x00	; 0
    f3a4:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f3a8:	89 14       	cp	r8, r9
    f3aa:	38 f4       	brcc	.+14     	; 0xf3ba <vfprintf+0x3a6>
    f3ac:	b6 01       	movw	r22, r12
    f3ae:	80 e3       	ldi	r24, 0x30	; 48
    f3b0:	90 e0       	ldi	r25, 0x00	; 0
    f3b2:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f3b6:	9a 94       	dec	r9
    f3b8:	f7 cf       	rjmp	.-18     	; 0xf3a8 <vfprintf+0x394>
    f3ba:	8a 94       	dec	r8
    f3bc:	f3 01       	movw	r30, r6
    f3be:	e8 0d       	add	r30, r8
    f3c0:	f1 1d       	adc	r31, r1
    f3c2:	80 81       	ld	r24, Z
    f3c4:	b6 01       	movw	r22, r12
    f3c6:	90 e0       	ldi	r25, 0x00	; 0
    f3c8:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f3cc:	81 10       	cpse	r8, r1
    f3ce:	f5 cf       	rjmp	.-22     	; 0xf3ba <vfprintf+0x3a6>
    f3d0:	22 20       	and	r2, r2
    f3d2:	09 f4       	brne	.+2      	; 0xf3d6 <vfprintf+0x3c2>
    f3d4:	42 ce       	rjmp	.-892    	; 0xf05a <vfprintf+0x46>
    f3d6:	b6 01       	movw	r22, r12
    f3d8:	80 e2       	ldi	r24, 0x20	; 32
    f3da:	90 e0       	ldi	r25, 0x00	; 0
    f3dc:	0e 94 a1 7b 	call	0xf742	; 0xf742 <fputc>
    f3e0:	2a 94       	dec	r2
    f3e2:	f6 cf       	rjmp	.-20     	; 0xf3d0 <vfprintf+0x3bc>
    f3e4:	f6 01       	movw	r30, r12
    f3e6:	86 81       	ldd	r24, Z+6	; 0x06
    f3e8:	97 81       	ldd	r25, Z+7	; 0x07
    f3ea:	02 c0       	rjmp	.+4      	; 0xf3f0 <vfprintf+0x3dc>
    f3ec:	8f ef       	ldi	r24, 0xFF	; 255
    f3ee:	9f ef       	ldi	r25, 0xFF	; 255
    f3f0:	2b 96       	adiw	r28, 0x0b	; 11
    f3f2:	cd bf       	out	0x3d, r28	; 61
    f3f4:	de bf       	out	0x3e, r29	; 62
    f3f6:	df 91       	pop	r29
    f3f8:	cf 91       	pop	r28
    f3fa:	1f 91       	pop	r17
    f3fc:	0f 91       	pop	r16
    f3fe:	ff 90       	pop	r15
    f400:	ef 90       	pop	r14
    f402:	df 90       	pop	r13
    f404:	cf 90       	pop	r12
    f406:	bf 90       	pop	r11
    f408:	af 90       	pop	r10
    f40a:	9f 90       	pop	r9
    f40c:	8f 90       	pop	r8
    f40e:	7f 90       	pop	r7
    f410:	6f 90       	pop	r6
    f412:	5f 90       	pop	r5
    f414:	4f 90       	pop	r4
    f416:	3f 90       	pop	r3
    f418:	2f 90       	pop	r2
    f41a:	08 95       	ret

0000f41c <strtod>:
    f41c:	8f 92       	push	r8
    f41e:	9f 92       	push	r9
    f420:	af 92       	push	r10
    f422:	bf 92       	push	r11
    f424:	cf 92       	push	r12
    f426:	df 92       	push	r13
    f428:	ef 92       	push	r14
    f42a:	ff 92       	push	r15
    f42c:	0f 93       	push	r16
    f42e:	1f 93       	push	r17
    f430:	cf 93       	push	r28
    f432:	df 93       	push	r29
    f434:	ec 01       	movw	r28, r24
    f436:	6b 01       	movw	r12, r22
    f438:	61 15       	cp	r22, r1
    f43a:	71 05       	cpc	r23, r1
    f43c:	19 f0       	breq	.+6      	; 0xf444 <strtod+0x28>
    f43e:	fb 01       	movw	r30, r22
    f440:	80 83       	st	Z, r24
    f442:	91 83       	std	Z+1, r25	; 0x01
    f444:	7e 01       	movw	r14, r28
    f446:	ff ef       	ldi	r31, 0xFF	; 255
    f448:	ef 1a       	sub	r14, r31
    f44a:	ff 0a       	sbc	r15, r31
    f44c:	08 81       	ld	r16, Y
    f44e:	80 2f       	mov	r24, r16
    f450:	90 e0       	ldi	r25, 0x00	; 0
    f452:	0e 94 6a 7b 	call	0xf6d4	; 0xf6d4 <isspace>
    f456:	89 2b       	or	r24, r25
    f458:	11 f0       	breq	.+4      	; 0xf45e <strtod+0x42>
    f45a:	e7 01       	movw	r28, r14
    f45c:	f3 cf       	rjmp	.-26     	; 0xf444 <strtod+0x28>
    f45e:	0d 32       	cpi	r16, 0x2D	; 45
    f460:	39 f4       	brne	.+14     	; 0xf470 <strtod+0x54>
    f462:	7e 01       	movw	r14, r28
    f464:	82 e0       	ldi	r24, 0x02	; 2
    f466:	e8 0e       	add	r14, r24
    f468:	f1 1c       	adc	r15, r1
    f46a:	09 81       	ldd	r16, Y+1	; 0x01
    f46c:	11 e0       	ldi	r17, 0x01	; 1
    f46e:	08 c0       	rjmp	.+16     	; 0xf480 <strtod+0x64>
    f470:	0b 32       	cpi	r16, 0x2B	; 43
    f472:	29 f4       	brne	.+10     	; 0xf47e <strtod+0x62>
    f474:	7e 01       	movw	r14, r28
    f476:	92 e0       	ldi	r25, 0x02	; 2
    f478:	e9 0e       	add	r14, r25
    f47a:	f1 1c       	adc	r15, r1
    f47c:	09 81       	ldd	r16, Y+1	; 0x01
    f47e:	10 e0       	ldi	r17, 0x00	; 0
    f480:	e7 01       	movw	r28, r14
    f482:	21 97       	sbiw	r28, 0x01	; 1
    f484:	43 e0       	ldi	r20, 0x03	; 3
    f486:	50 e0       	ldi	r21, 0x00	; 0
    f488:	62 e7       	ldi	r22, 0x72	; 114
    f48a:	72 e0       	ldi	r23, 0x02	; 2
    f48c:	ce 01       	movw	r24, r28
    f48e:	0e 94 73 7b 	call	0xf6e6	; 0xf6e6 <strncasecmp_P>
    f492:	89 2b       	or	r24, r25
    f494:	c1 f4       	brne	.+48     	; 0xf4c6 <strtod+0xaa>
    f496:	23 96       	adiw	r28, 0x03	; 3
    f498:	45 e0       	ldi	r20, 0x05	; 5
    f49a:	50 e0       	ldi	r21, 0x00	; 0
    f49c:	6d e6       	ldi	r22, 0x6D	; 109
    f49e:	72 e0       	ldi	r23, 0x02	; 2
    f4a0:	ce 01       	movw	r24, r28
    f4a2:	0e 94 73 7b 	call	0xf6e6	; 0xf6e6 <strncasecmp_P>
    f4a6:	89 2b       	or	r24, r25
    f4a8:	09 f4       	brne	.+2      	; 0xf4ac <strtod+0x90>
    f4aa:	25 96       	adiw	r28, 0x05	; 5
    f4ac:	c1 14       	cp	r12, r1
    f4ae:	d1 04       	cpc	r13, r1
    f4b0:	19 f0       	breq	.+6      	; 0xf4b8 <strtod+0x9c>
    f4b2:	f6 01       	movw	r30, r12
    f4b4:	c0 83       	st	Z, r28
    f4b6:	d1 83       	std	Z+1, r29	; 0x01
    f4b8:	11 11       	cpse	r17, r1
    f4ba:	f6 c0       	rjmp	.+492    	; 0xf6a8 <strtod+0x28c>
    f4bc:	60 e0       	ldi	r22, 0x00	; 0
    f4be:	70 e0       	ldi	r23, 0x00	; 0
    f4c0:	80 e8       	ldi	r24, 0x80	; 128
    f4c2:	9f e7       	ldi	r25, 0x7F	; 127
    f4c4:	fa c0       	rjmp	.+500    	; 0xf6ba <strtod+0x29e>
    f4c6:	43 e0       	ldi	r20, 0x03	; 3
    f4c8:	50 e0       	ldi	r21, 0x00	; 0
    f4ca:	6a e6       	ldi	r22, 0x6A	; 106
    f4cc:	72 e0       	ldi	r23, 0x02	; 2
    f4ce:	ce 01       	movw	r24, r28
    f4d0:	0e 94 73 7b 	call	0xf6e6	; 0xf6e6 <strncasecmp_P>
    f4d4:	89 2b       	or	r24, r25
    f4d6:	59 f4       	brne	.+22     	; 0xf4ee <strtod+0xd2>
    f4d8:	c1 14       	cp	r12, r1
    f4da:	d1 04       	cpc	r13, r1
    f4dc:	09 f4       	brne	.+2      	; 0xf4e0 <strtod+0xc4>
    f4de:	e9 c0       	rjmp	.+466    	; 0xf6b2 <strtod+0x296>
    f4e0:	f2 e0       	ldi	r31, 0x02	; 2
    f4e2:	ef 0e       	add	r14, r31
    f4e4:	f1 1c       	adc	r15, r1
    f4e6:	f6 01       	movw	r30, r12
    f4e8:	e0 82       	st	Z, r14
    f4ea:	f1 82       	std	Z+1, r15	; 0x01
    f4ec:	e2 c0       	rjmp	.+452    	; 0xf6b2 <strtod+0x296>
    f4ee:	20 e0       	ldi	r18, 0x00	; 0
    f4f0:	30 e0       	ldi	r19, 0x00	; 0
    f4f2:	a9 01       	movw	r20, r18
    f4f4:	c0 e0       	ldi	r28, 0x00	; 0
    f4f6:	d0 e0       	ldi	r29, 0x00	; 0
    f4f8:	f7 01       	movw	r30, r14
    f4fa:	60 ed       	ldi	r22, 0xD0	; 208
    f4fc:	a6 2e       	mov	r10, r22
    f4fe:	a0 0e       	add	r10, r16
    f500:	89 e0       	ldi	r24, 0x09	; 9
    f502:	8a 15       	cp	r24, r10
    f504:	30 f1       	brcs	.+76     	; 0xf552 <strtod+0x136>
    f506:	91 2f       	mov	r25, r17
    f508:	92 60       	ori	r25, 0x02	; 2
    f50a:	b9 2e       	mov	r11, r25
    f50c:	81 2f       	mov	r24, r17
    f50e:	88 70       	andi	r24, 0x08	; 8
    f510:	12 ff       	sbrs	r17, 2
    f512:	04 c0       	rjmp	.+8      	; 0xf51c <strtod+0x100>
    f514:	81 11       	cpse	r24, r1
    f516:	24 c0       	rjmp	.+72     	; 0xf560 <strtod+0x144>
    f518:	21 96       	adiw	r28, 0x01	; 1
    f51a:	22 c0       	rjmp	.+68     	; 0xf560 <strtod+0x144>
    f51c:	81 11       	cpse	r24, r1
    f51e:	21 97       	sbiw	r28, 0x01	; 1
    f520:	a5 e0       	ldi	r26, 0x05	; 5
    f522:	b0 e0       	ldi	r27, 0x00	; 0
    f524:	0e 94 0b 76 	call	0xec16	; 0xec16 <__muluhisi3>
    f528:	dc 01       	movw	r26, r24
    f52a:	cb 01       	movw	r24, r22
    f52c:	88 0f       	add	r24, r24
    f52e:	99 1f       	adc	r25, r25
    f530:	aa 1f       	adc	r26, r26
    f532:	bb 1f       	adc	r27, r27
    f534:	9c 01       	movw	r18, r24
    f536:	ad 01       	movw	r20, r26
    f538:	2a 0d       	add	r18, r10
    f53a:	31 1d       	adc	r19, r1
    f53c:	41 1d       	adc	r20, r1
    f53e:	51 1d       	adc	r21, r1
    f540:	28 39       	cpi	r18, 0x98	; 152
    f542:	89 e9       	ldi	r24, 0x99	; 153
    f544:	38 07       	cpc	r19, r24
    f546:	48 07       	cpc	r20, r24
    f548:	89 e1       	ldi	r24, 0x19	; 25
    f54a:	58 07       	cpc	r21, r24
    f54c:	48 f0       	brcs	.+18     	; 0xf560 <strtod+0x144>
    f54e:	16 60       	ori	r17, 0x06	; 6
    f550:	06 c0       	rjmp	.+12     	; 0xf55e <strtod+0x142>
    f552:	9e ef       	ldi	r25, 0xFE	; 254
    f554:	a9 12       	cpse	r10, r25
    f556:	0a c0       	rjmp	.+20     	; 0xf56c <strtod+0x150>
    f558:	13 fd       	sbrc	r17, 3
    f55a:	40 c0       	rjmp	.+128    	; 0xf5dc <strtod+0x1c0>
    f55c:	18 60       	ori	r17, 0x08	; 8
    f55e:	b1 2e       	mov	r11, r17
    f560:	8f ef       	ldi	r24, 0xFF	; 255
    f562:	e8 1a       	sub	r14, r24
    f564:	f8 0a       	sbc	r15, r24
    f566:	00 81       	ld	r16, Z
    f568:	1b 2d       	mov	r17, r11
    f56a:	c6 cf       	rjmp	.-116    	; 0xf4f8 <strtod+0xdc>
    f56c:	80 2f       	mov	r24, r16
    f56e:	8f 7d       	andi	r24, 0xDF	; 223
    f570:	85 34       	cpi	r24, 0x45	; 69
    f572:	a1 f5       	brne	.+104    	; 0xf5dc <strtod+0x1c0>
    f574:	80 81       	ld	r24, Z
    f576:	8d 32       	cpi	r24, 0x2D	; 45
    f578:	11 f4       	brne	.+4      	; 0xf57e <strtod+0x162>
    f57a:	10 61       	ori	r17, 0x10	; 16
    f57c:	06 c0       	rjmp	.+12     	; 0xf58a <strtod+0x16e>
    f57e:	8b 32       	cpi	r24, 0x2B	; 43
    f580:	21 f0       	breq	.+8      	; 0xf58a <strtod+0x16e>
    f582:	31 96       	adiw	r30, 0x01	; 1
    f584:	61 e0       	ldi	r22, 0x01	; 1
    f586:	70 e0       	ldi	r23, 0x00	; 0
    f588:	04 c0       	rjmp	.+8      	; 0xf592 <strtod+0x176>
    f58a:	81 81       	ldd	r24, Z+1	; 0x01
    f58c:	32 96       	adiw	r30, 0x02	; 2
    f58e:	62 e0       	ldi	r22, 0x02	; 2
    f590:	70 e0       	ldi	r23, 0x00	; 0
    f592:	80 53       	subi	r24, 0x30	; 48
    f594:	8a 30       	cpi	r24, 0x0A	; 10
    f596:	18 f0       	brcs	.+6      	; 0xf59e <strtod+0x182>
    f598:	e6 1b       	sub	r30, r22
    f59a:	f7 0b       	sbc	r31, r23
    f59c:	1f c0       	rjmp	.+62     	; 0xf5dc <strtod+0x1c0>
    f59e:	60 e0       	ldi	r22, 0x00	; 0
    f5a0:	70 e0       	ldi	r23, 0x00	; 0
    f5a2:	60 38       	cpi	r22, 0x80	; 128
    f5a4:	9c e0       	ldi	r25, 0x0C	; 12
    f5a6:	79 07       	cpc	r23, r25
    f5a8:	5c f4       	brge	.+22     	; 0xf5c0 <strtod+0x1a4>
    f5aa:	db 01       	movw	r26, r22
    f5ac:	aa 0f       	add	r26, r26
    f5ae:	bb 1f       	adc	r27, r27
    f5b0:	aa 0f       	add	r26, r26
    f5b2:	bb 1f       	adc	r27, r27
    f5b4:	6a 0f       	add	r22, r26
    f5b6:	7b 1f       	adc	r23, r27
    f5b8:	66 0f       	add	r22, r22
    f5ba:	77 1f       	adc	r23, r23
    f5bc:	68 0f       	add	r22, r24
    f5be:	71 1d       	adc	r23, r1
    f5c0:	31 96       	adiw	r30, 0x01	; 1
    f5c2:	df 01       	movw	r26, r30
    f5c4:	11 97       	sbiw	r26, 0x01	; 1
    f5c6:	8c 91       	ld	r24, X
    f5c8:	80 53       	subi	r24, 0x30	; 48
    f5ca:	8a 30       	cpi	r24, 0x0A	; 10
    f5cc:	50 f3       	brcs	.-44     	; 0xf5a2 <strtod+0x186>
    f5ce:	14 ff       	sbrs	r17, 4
    f5d0:	03 c0       	rjmp	.+6      	; 0xf5d8 <strtod+0x1bc>
    f5d2:	71 95       	neg	r23
    f5d4:	61 95       	neg	r22
    f5d6:	71 09       	sbc	r23, r1
    f5d8:	c6 0f       	add	r28, r22
    f5da:	d7 1f       	adc	r29, r23
    f5dc:	11 ff       	sbrs	r17, 1
    f5de:	08 c0       	rjmp	.+16     	; 0xf5f0 <strtod+0x1d4>
    f5e0:	c1 14       	cp	r12, r1
    f5e2:	d1 04       	cpc	r13, r1
    f5e4:	29 f0       	breq	.+10     	; 0xf5f0 <strtod+0x1d4>
    f5e6:	cf 01       	movw	r24, r30
    f5e8:	01 97       	sbiw	r24, 0x01	; 1
    f5ea:	f6 01       	movw	r30, r12
    f5ec:	80 83       	st	Z, r24
    f5ee:	91 83       	std	Z+1, r25	; 0x01
    f5f0:	ca 01       	movw	r24, r20
    f5f2:	b9 01       	movw	r22, r18
    f5f4:	0e 94 15 74 	call	0xe82a	; 0xe82a <__floatunsisf>
    f5f8:	21 2f       	mov	r18, r17
    f5fa:	23 70       	andi	r18, 0x03	; 3
    f5fc:	23 30       	cpi	r18, 0x03	; 3
    f5fe:	19 f0       	breq	.+6      	; 0xf606 <strtod+0x1ea>
    f600:	4b 01       	movw	r8, r22
    f602:	5c 01       	movw	r10, r24
    f604:	06 c0       	rjmp	.+12     	; 0xf612 <strtod+0x1f6>
    f606:	4b 01       	movw	r8, r22
    f608:	5c 01       	movw	r10, r24
    f60a:	b7 fa       	bst	r11, 7
    f60c:	b0 94       	com	r11
    f60e:	b7 f8       	bld	r11, 7
    f610:	b0 94       	com	r11
    f612:	20 e0       	ldi	r18, 0x00	; 0
    f614:	30 e0       	ldi	r19, 0x00	; 0
    f616:	a9 01       	movw	r20, r18
    f618:	c5 01       	movw	r24, r10
    f61a:	b4 01       	movw	r22, r8
    f61c:	0e 94 68 73 	call	0xe6d0	; 0xe6d0 <__cmpsf2>
    f620:	88 23       	and	r24, r24
    f622:	09 f4       	brne	.+2      	; 0xf626 <strtod+0x20a>
    f624:	3e c0       	rjmp	.+124    	; 0xf6a2 <strtod+0x286>
    f626:	d7 ff       	sbrs	r29, 7
    f628:	06 c0       	rjmp	.+12     	; 0xf636 <strtod+0x21a>
    f62a:	d1 95       	neg	r29
    f62c:	c1 95       	neg	r28
    f62e:	d1 09       	sbc	r29, r1
    f630:	09 e8       	ldi	r16, 0x89	; 137
    f632:	12 e0       	ldi	r17, 0x02	; 2
    f634:	02 c0       	rjmp	.+4      	; 0xf63a <strtod+0x21e>
    f636:	01 ea       	ldi	r16, 0xA1	; 161
    f638:	12 e0       	ldi	r17, 0x02	; 2
    f63a:	68 01       	movw	r12, r16
    f63c:	f8 e1       	ldi	r31, 0x18	; 24
    f63e:	cf 1a       	sub	r12, r31
    f640:	d1 08       	sbc	r13, r1
    f642:	90 e2       	ldi	r25, 0x20	; 32
    f644:	e9 2e       	mov	r14, r25
    f646:	f1 2c       	mov	r15, r1
    f648:	ce 15       	cp	r28, r14
    f64a:	df 05       	cpc	r29, r15
    f64c:	74 f0       	brlt	.+28     	; 0xf66a <strtod+0x24e>
    f64e:	f8 01       	movw	r30, r16
    f650:	25 91       	lpm	r18, Z+
    f652:	35 91       	lpm	r19, Z+
    f654:	45 91       	lpm	r20, Z+
    f656:	54 91       	lpm	r21, Z
    f658:	c5 01       	movw	r24, r10
    f65a:	b4 01       	movw	r22, r8
    f65c:	0e 94 0d 75 	call	0xea1a	; 0xea1a <__mulsf3>
    f660:	4b 01       	movw	r8, r22
    f662:	5c 01       	movw	r10, r24
    f664:	ce 19       	sub	r28, r14
    f666:	df 09       	sbc	r29, r15
    f668:	ef cf       	rjmp	.-34     	; 0xf648 <strtod+0x22c>
    f66a:	04 50       	subi	r16, 0x04	; 4
    f66c:	11 09       	sbc	r17, r1
    f66e:	f5 94       	asr	r15
    f670:	e7 94       	ror	r14
    f672:	0c 15       	cp	r16, r12
    f674:	1d 05       	cpc	r17, r13
    f676:	41 f7       	brne	.-48     	; 0xf648 <strtod+0x22c>
    f678:	8a 2d       	mov	r24, r10
    f67a:	88 0f       	add	r24, r24
    f67c:	8b 2d       	mov	r24, r11
    f67e:	88 1f       	adc	r24, r24
    f680:	8f 3f       	cpi	r24, 0xFF	; 255
    f682:	49 f0       	breq	.+18     	; 0xf696 <strtod+0x27a>
    f684:	20 e0       	ldi	r18, 0x00	; 0
    f686:	30 e0       	ldi	r19, 0x00	; 0
    f688:	a9 01       	movw	r20, r18
    f68a:	c5 01       	movw	r24, r10
    f68c:	b4 01       	movw	r22, r8
    f68e:	0e 94 68 73 	call	0xe6d0	; 0xe6d0 <__cmpsf2>
    f692:	81 11       	cpse	r24, r1
    f694:	06 c0       	rjmp	.+12     	; 0xf6a2 <strtod+0x286>
    f696:	82 e2       	ldi	r24, 0x22	; 34
    f698:	90 e0       	ldi	r25, 0x00	; 0
    f69a:	80 93 dd 4a 	sts	0x4ADD, r24	; 0x804add <errno>
    f69e:	90 93 de 4a 	sts	0x4ADE, r25	; 0x804ade <errno+0x1>
    f6a2:	c5 01       	movw	r24, r10
    f6a4:	b4 01       	movw	r22, r8
    f6a6:	09 c0       	rjmp	.+18     	; 0xf6ba <strtod+0x29e>
    f6a8:	60 e0       	ldi	r22, 0x00	; 0
    f6aa:	70 e0       	ldi	r23, 0x00	; 0
    f6ac:	80 e8       	ldi	r24, 0x80	; 128
    f6ae:	9f ef       	ldi	r25, 0xFF	; 255
    f6b0:	04 c0       	rjmp	.+8      	; 0xf6ba <strtod+0x29e>
    f6b2:	60 e0       	ldi	r22, 0x00	; 0
    f6b4:	70 e0       	ldi	r23, 0x00	; 0
    f6b6:	80 ec       	ldi	r24, 0xC0	; 192
    f6b8:	9f e7       	ldi	r25, 0x7F	; 127
    f6ba:	df 91       	pop	r29
    f6bc:	cf 91       	pop	r28
    f6be:	1f 91       	pop	r17
    f6c0:	0f 91       	pop	r16
    f6c2:	ff 90       	pop	r15
    f6c4:	ef 90       	pop	r14
    f6c6:	df 90       	pop	r13
    f6c8:	cf 90       	pop	r12
    f6ca:	bf 90       	pop	r11
    f6cc:	af 90       	pop	r10
    f6ce:	9f 90       	pop	r9
    f6d0:	8f 90       	pop	r8
    f6d2:	08 95       	ret

0000f6d4 <isspace>:
    f6d4:	91 11       	cpse	r25, r1
    f6d6:	0c 94 3b 7c 	jmp	0xf876	; 0xf876 <__ctype_isfalse>
    f6da:	80 32       	cpi	r24, 0x20	; 32
    f6dc:	19 f0       	breq	.+6      	; 0xf6e4 <isspace+0x10>
    f6de:	89 50       	subi	r24, 0x09	; 9
    f6e0:	85 50       	subi	r24, 0x05	; 5
    f6e2:	c8 f7       	brcc	.-14     	; 0xf6d6 <isspace+0x2>
    f6e4:	08 95       	ret

0000f6e6 <strncasecmp_P>:
    f6e6:	fb 01       	movw	r30, r22
    f6e8:	dc 01       	movw	r26, r24
    f6ea:	41 50       	subi	r20, 0x01	; 1
    f6ec:	50 40       	sbci	r21, 0x00	; 0
    f6ee:	88 f0       	brcs	.+34     	; 0xf712 <strncasecmp_P+0x2c>
    f6f0:	8d 91       	ld	r24, X+
    f6f2:	81 34       	cpi	r24, 0x41	; 65
    f6f4:	1c f0       	brlt	.+6      	; 0xf6fc <strncasecmp_P+0x16>
    f6f6:	8b 35       	cpi	r24, 0x5B	; 91
    f6f8:	0c f4       	brge	.+2      	; 0xf6fc <strncasecmp_P+0x16>
    f6fa:	80 5e       	subi	r24, 0xE0	; 224
    f6fc:	65 91       	lpm	r22, Z+
    f6fe:	61 34       	cpi	r22, 0x41	; 65
    f700:	1c f0       	brlt	.+6      	; 0xf708 <strncasecmp_P+0x22>
    f702:	6b 35       	cpi	r22, 0x5B	; 91
    f704:	0c f4       	brge	.+2      	; 0xf708 <strncasecmp_P+0x22>
    f706:	60 5e       	subi	r22, 0xE0	; 224
    f708:	86 1b       	sub	r24, r22
    f70a:	61 11       	cpse	r22, r1
    f70c:	71 f3       	breq	.-36     	; 0xf6ea <strncasecmp_P+0x4>
    f70e:	99 0b       	sbc	r25, r25
    f710:	08 95       	ret
    f712:	88 1b       	sub	r24, r24
    f714:	fc cf       	rjmp	.-8      	; 0xf70e <strncasecmp_P+0x28>

0000f716 <strnlen_P>:
    f716:	fc 01       	movw	r30, r24
    f718:	05 90       	lpm	r0, Z+
    f71a:	61 50       	subi	r22, 0x01	; 1
    f71c:	70 40       	sbci	r23, 0x00	; 0
    f71e:	01 10       	cpse	r0, r1
    f720:	d8 f7       	brcc	.-10     	; 0xf718 <strnlen_P+0x2>
    f722:	80 95       	com	r24
    f724:	90 95       	com	r25
    f726:	8e 0f       	add	r24, r30
    f728:	9f 1f       	adc	r25, r31
    f72a:	08 95       	ret

0000f72c <strnlen>:
    f72c:	fc 01       	movw	r30, r24
    f72e:	61 50       	subi	r22, 0x01	; 1
    f730:	70 40       	sbci	r23, 0x00	; 0
    f732:	01 90       	ld	r0, Z+
    f734:	01 10       	cpse	r0, r1
    f736:	d8 f7       	brcc	.-10     	; 0xf72e <strnlen+0x2>
    f738:	80 95       	com	r24
    f73a:	90 95       	com	r25
    f73c:	8e 0f       	add	r24, r30
    f73e:	9f 1f       	adc	r25, r31
    f740:	08 95       	ret

0000f742 <fputc>:
    f742:	0f 93       	push	r16
    f744:	1f 93       	push	r17
    f746:	cf 93       	push	r28
    f748:	df 93       	push	r29
    f74a:	fb 01       	movw	r30, r22
    f74c:	23 81       	ldd	r18, Z+3	; 0x03
    f74e:	21 fd       	sbrc	r18, 1
    f750:	03 c0       	rjmp	.+6      	; 0xf758 <fputc+0x16>
    f752:	8f ef       	ldi	r24, 0xFF	; 255
    f754:	9f ef       	ldi	r25, 0xFF	; 255
    f756:	2c c0       	rjmp	.+88     	; 0xf7b0 <fputc+0x6e>
    f758:	22 ff       	sbrs	r18, 2
    f75a:	16 c0       	rjmp	.+44     	; 0xf788 <fputc+0x46>
    f75c:	46 81       	ldd	r20, Z+6	; 0x06
    f75e:	57 81       	ldd	r21, Z+7	; 0x07
    f760:	24 81       	ldd	r18, Z+4	; 0x04
    f762:	35 81       	ldd	r19, Z+5	; 0x05
    f764:	42 17       	cp	r20, r18
    f766:	53 07       	cpc	r21, r19
    f768:	44 f4       	brge	.+16     	; 0xf77a <fputc+0x38>
    f76a:	a0 81       	ld	r26, Z
    f76c:	b1 81       	ldd	r27, Z+1	; 0x01
    f76e:	9d 01       	movw	r18, r26
    f770:	2f 5f       	subi	r18, 0xFF	; 255
    f772:	3f 4f       	sbci	r19, 0xFF	; 255
    f774:	20 83       	st	Z, r18
    f776:	31 83       	std	Z+1, r19	; 0x01
    f778:	8c 93       	st	X, r24
    f77a:	26 81       	ldd	r18, Z+6	; 0x06
    f77c:	37 81       	ldd	r19, Z+7	; 0x07
    f77e:	2f 5f       	subi	r18, 0xFF	; 255
    f780:	3f 4f       	sbci	r19, 0xFF	; 255
    f782:	26 83       	std	Z+6, r18	; 0x06
    f784:	37 83       	std	Z+7, r19	; 0x07
    f786:	14 c0       	rjmp	.+40     	; 0xf7b0 <fputc+0x6e>
    f788:	8b 01       	movw	r16, r22
    f78a:	ec 01       	movw	r28, r24
    f78c:	fb 01       	movw	r30, r22
    f78e:	00 84       	ldd	r0, Z+8	; 0x08
    f790:	f1 85       	ldd	r31, Z+9	; 0x09
    f792:	e0 2d       	mov	r30, r0
    f794:	09 95       	icall
    f796:	89 2b       	or	r24, r25
    f798:	e1 f6       	brne	.-72     	; 0xf752 <fputc+0x10>
    f79a:	d8 01       	movw	r26, r16
    f79c:	16 96       	adiw	r26, 0x06	; 6
    f79e:	8d 91       	ld	r24, X+
    f7a0:	9c 91       	ld	r25, X
    f7a2:	17 97       	sbiw	r26, 0x07	; 7
    f7a4:	01 96       	adiw	r24, 0x01	; 1
    f7a6:	16 96       	adiw	r26, 0x06	; 6
    f7a8:	8d 93       	st	X+, r24
    f7aa:	9c 93       	st	X, r25
    f7ac:	17 97       	sbiw	r26, 0x07	; 7
    f7ae:	ce 01       	movw	r24, r28
    f7b0:	df 91       	pop	r29
    f7b2:	cf 91       	pop	r28
    f7b4:	1f 91       	pop	r17
    f7b6:	0f 91       	pop	r16
    f7b8:	08 95       	ret

0000f7ba <__ultoa_invert>:
    f7ba:	fa 01       	movw	r30, r20
    f7bc:	aa 27       	eor	r26, r26
    f7be:	28 30       	cpi	r18, 0x08	; 8
    f7c0:	51 f1       	breq	.+84     	; 0xf816 <__ultoa_invert+0x5c>
    f7c2:	20 31       	cpi	r18, 0x10	; 16
    f7c4:	81 f1       	breq	.+96     	; 0xf826 <__ultoa_invert+0x6c>
    f7c6:	e8 94       	clt
    f7c8:	6f 93       	push	r22
    f7ca:	6e 7f       	andi	r22, 0xFE	; 254
    f7cc:	6e 5f       	subi	r22, 0xFE	; 254
    f7ce:	7f 4f       	sbci	r23, 0xFF	; 255
    f7d0:	8f 4f       	sbci	r24, 0xFF	; 255
    f7d2:	9f 4f       	sbci	r25, 0xFF	; 255
    f7d4:	af 4f       	sbci	r26, 0xFF	; 255
    f7d6:	b1 e0       	ldi	r27, 0x01	; 1
    f7d8:	3e d0       	rcall	.+124    	; 0xf856 <__ultoa_invert+0x9c>
    f7da:	b4 e0       	ldi	r27, 0x04	; 4
    f7dc:	3c d0       	rcall	.+120    	; 0xf856 <__ultoa_invert+0x9c>
    f7de:	67 0f       	add	r22, r23
    f7e0:	78 1f       	adc	r23, r24
    f7e2:	89 1f       	adc	r24, r25
    f7e4:	9a 1f       	adc	r25, r26
    f7e6:	a1 1d       	adc	r26, r1
    f7e8:	68 0f       	add	r22, r24
    f7ea:	79 1f       	adc	r23, r25
    f7ec:	8a 1f       	adc	r24, r26
    f7ee:	91 1d       	adc	r25, r1
    f7f0:	a1 1d       	adc	r26, r1
    f7f2:	6a 0f       	add	r22, r26
    f7f4:	71 1d       	adc	r23, r1
    f7f6:	81 1d       	adc	r24, r1
    f7f8:	91 1d       	adc	r25, r1
    f7fa:	a1 1d       	adc	r26, r1
    f7fc:	20 d0       	rcall	.+64     	; 0xf83e <__ultoa_invert+0x84>
    f7fe:	09 f4       	brne	.+2      	; 0xf802 <__ultoa_invert+0x48>
    f800:	68 94       	set
    f802:	3f 91       	pop	r19
    f804:	2a e0       	ldi	r18, 0x0A	; 10
    f806:	26 9f       	mul	r18, r22
    f808:	11 24       	eor	r1, r1
    f80a:	30 19       	sub	r19, r0
    f80c:	30 5d       	subi	r19, 0xD0	; 208
    f80e:	31 93       	st	Z+, r19
    f810:	de f6       	brtc	.-74     	; 0xf7c8 <__ultoa_invert+0xe>
    f812:	cf 01       	movw	r24, r30
    f814:	08 95       	ret
    f816:	46 2f       	mov	r20, r22
    f818:	47 70       	andi	r20, 0x07	; 7
    f81a:	40 5d       	subi	r20, 0xD0	; 208
    f81c:	41 93       	st	Z+, r20
    f81e:	b3 e0       	ldi	r27, 0x03	; 3
    f820:	0f d0       	rcall	.+30     	; 0xf840 <__ultoa_invert+0x86>
    f822:	c9 f7       	brne	.-14     	; 0xf816 <__ultoa_invert+0x5c>
    f824:	f6 cf       	rjmp	.-20     	; 0xf812 <__ultoa_invert+0x58>
    f826:	46 2f       	mov	r20, r22
    f828:	4f 70       	andi	r20, 0x0F	; 15
    f82a:	40 5d       	subi	r20, 0xD0	; 208
    f82c:	4a 33       	cpi	r20, 0x3A	; 58
    f82e:	18 f0       	brcs	.+6      	; 0xf836 <__ultoa_invert+0x7c>
    f830:	49 5d       	subi	r20, 0xD9	; 217
    f832:	31 fd       	sbrc	r19, 1
    f834:	40 52       	subi	r20, 0x20	; 32
    f836:	41 93       	st	Z+, r20
    f838:	02 d0       	rcall	.+4      	; 0xf83e <__ultoa_invert+0x84>
    f83a:	a9 f7       	brne	.-22     	; 0xf826 <__ultoa_invert+0x6c>
    f83c:	ea cf       	rjmp	.-44     	; 0xf812 <__ultoa_invert+0x58>
    f83e:	b4 e0       	ldi	r27, 0x04	; 4
    f840:	a6 95       	lsr	r26
    f842:	97 95       	ror	r25
    f844:	87 95       	ror	r24
    f846:	77 95       	ror	r23
    f848:	67 95       	ror	r22
    f84a:	ba 95       	dec	r27
    f84c:	c9 f7       	brne	.-14     	; 0xf840 <__ultoa_invert+0x86>
    f84e:	00 97       	sbiw	r24, 0x00	; 0
    f850:	61 05       	cpc	r22, r1
    f852:	71 05       	cpc	r23, r1
    f854:	08 95       	ret
    f856:	9b 01       	movw	r18, r22
    f858:	ac 01       	movw	r20, r24
    f85a:	0a 2e       	mov	r0, r26
    f85c:	06 94       	lsr	r0
    f85e:	57 95       	ror	r21
    f860:	47 95       	ror	r20
    f862:	37 95       	ror	r19
    f864:	27 95       	ror	r18
    f866:	ba 95       	dec	r27
    f868:	c9 f7       	brne	.-14     	; 0xf85c <__ultoa_invert+0xa2>
    f86a:	62 0f       	add	r22, r18
    f86c:	73 1f       	adc	r23, r19
    f86e:	84 1f       	adc	r24, r20
    f870:	95 1f       	adc	r25, r21
    f872:	a0 1d       	adc	r26, r0
    f874:	08 95       	ret

0000f876 <__ctype_isfalse>:
    f876:	99 27       	eor	r25, r25
    f878:	88 27       	eor	r24, r24

0000f87a <__ctype_istrue>:
    f87a:	08 95       	ret

0000f87c <eeprom_read_byte>:
    f87c:	03 d0       	rcall	.+6      	; 0xf884 <eeprom_mapen>
    f87e:	80 81       	ld	r24, Z
    f880:	99 27       	eor	r25, r25
    f882:	08 95       	ret

0000f884 <eeprom_mapen>:
    f884:	fc 01       	movw	r30, r24
    f886:	e0 50       	subi	r30, 0x00	; 0
    f888:	fc 4e       	sbci	r31, 0xEC	; 236
    f88a:	08 95       	ret

0000f88c <eeprom_read_dword>:
    f88c:	0e 94 42 7c 	call	0xf884	; 0xf884 <eeprom_mapen>
    f890:	60 81       	ld	r22, Z
    f892:	71 81       	ldd	r23, Z+1	; 0x01
    f894:	82 81       	ldd	r24, Z+2	; 0x02
    f896:	93 81       	ldd	r25, Z+3	; 0x03
    f898:	08 95       	ret

0000f89a <eeprom_read_word>:
    f89a:	0e 94 42 7c 	call	0xf884	; 0xf884 <eeprom_mapen>
    f89e:	80 81       	ld	r24, Z
    f8a0:	91 81       	ldd	r25, Z+1	; 0x01
    f8a2:	08 95       	ret

0000f8a4 <__divmodqi4>:
    f8a4:	87 fb       	bst	r24, 7
    f8a6:	08 2e       	mov	r0, r24
    f8a8:	06 26       	eor	r0, r22
    f8aa:	87 fd       	sbrc	r24, 7
    f8ac:	81 95       	neg	r24
    f8ae:	67 fd       	sbrc	r22, 7
    f8b0:	61 95       	neg	r22
    f8b2:	0e 94 67 7c 	call	0xf8ce	; 0xf8ce <__udivmodqi4>
    f8b6:	0e f4       	brtc	.+2      	; 0xf8ba <__divmodqi4_1>
    f8b8:	91 95       	neg	r25

0000f8ba <__divmodqi4_1>:
    f8ba:	07 fc       	sbrc	r0, 7
    f8bc:	81 95       	neg	r24

0000f8be <__divmodqi4_exit>:
    f8be:	08 95       	ret

0000f8c0 <__xload_1>:
    f8c0:	57 fd       	sbrc	r21, 7
    f8c2:	03 c0       	rjmp	.+6      	; 0xf8ca <__xload_1+0xa>
    f8c4:	5b bf       	out	0x3b, r21	; 59
    f8c6:	67 91       	elpm	r22, Z+
    f8c8:	08 95       	ret
    f8ca:	60 81       	ld	r22, Z
    f8cc:	08 95       	ret

0000f8ce <__udivmodqi4>:
    f8ce:	99 1b       	sub	r25, r25
    f8d0:	79 e0       	ldi	r23, 0x09	; 9
    f8d2:	04 c0       	rjmp	.+8      	; 0xf8dc <__udivmodqi4_ep>

0000f8d4 <__udivmodqi4_loop>:
    f8d4:	99 1f       	adc	r25, r25
    f8d6:	96 17       	cp	r25, r22
    f8d8:	08 f0       	brcs	.+2      	; 0xf8dc <__udivmodqi4_ep>
    f8da:	96 1b       	sub	r25, r22

0000f8dc <__udivmodqi4_ep>:
    f8dc:	88 1f       	adc	r24, r24
    f8de:	7a 95       	dec	r23
    f8e0:	c9 f7       	brne	.-14     	; 0xf8d4 <__udivmodqi4_loop>
    f8e2:	80 95       	com	r24
    f8e4:	08 95       	ret

0000f8e6 <__do_global_dtors>:
    f8e6:	11 e0       	ldi	r17, 0x01	; 1
    f8e8:	cb eb       	ldi	r28, 0xBB	; 187
    f8ea:	d1 e0       	ldi	r29, 0x01	; 1
    f8ec:	04 c0       	rjmp	.+8      	; 0xf8f6 <__do_global_dtors+0x10>
    f8ee:	fe 01       	movw	r30, r28
    f8f0:	0e 94 f3 75 	call	0xebe6	; 0xebe6 <__tablejump2__>
    f8f4:	21 96       	adiw	r28, 0x01	; 1
    f8f6:	cd 3b       	cpi	r28, 0xBD	; 189
    f8f8:	d1 07       	cpc	r29, r17
    f8fa:	c9 f7       	brne	.-14     	; 0xf8ee <__do_global_dtors+0x8>
    f8fc:	f8 94       	cli

0000f8fe <__stop_program>:
    f8fe:	ff cf       	rjmp	.-2      	; 0xf8fe <__stop_program>
